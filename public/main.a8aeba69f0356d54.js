(self.webpackChunkportal = self.webpackChunkportal || []).push([
    [179],
    {
        4496: (_e, z, y) => {
            'use strict';
            y.d(z, { zQ: () => Gr, ww: () => rr });
            var d = y(5e3),
                P = y(7579),
                H = y(9646),
                w = y(8306),
                $ = y(8996),
                ae = y(6451),
                re = y(4707),
                se = y(3099);
            function Y(ce, he, we) {
                var Ye, it;
                let ht,
                    zt = !1;
                return (
                    ce && 'object' == typeof ce
                        ? ((ht =
                              null !== (Ye = ce.bufferSize) && void 0 !== Ye
                                  ? Ye
                                  : 1 / 0),
                          (he =
                              null !== (it = ce.windowTime) && void 0 !== it
                                  ? it
                                  : 1 / 0),
                          (zt = !!ce.refCount),
                          (we = ce.scheduler))
                        : (ht = null != ce ? ce : 1 / 0),
                    (0, se.B)({
                        connector: () => new re.t(ht, he, we),
                        resetOnError: !0,
                        resetOnComplete: !1,
                        resetOnRefCountZero: zt,
                    })
                );
            }
            var j = y(3900),
                U = y(576);
            function ie(ce, he) {
                return (0, U.m)(he)
                    ? (0, j.w)(() => ce, he)
                    : (0, j.w)(() => ce);
            }
            var Ce = y(5363),
                be = y(4004),
                xe = y(590),
                We = y(9468),
                de = y(9300),
                Q = y(6351),
                ye = y(2011),
                M = y(9808);
            y(5867);
            var Zt = y(5861),
                sn = y(9681),
                Ft = y(4859),
                $n = y(2090),
                An = y(1877);
            const Jt = new Map(),
                ar = { activated: !1, tokenObservers: [] },
                Dn = { initialized: !1, enabled: !1 };
            function cn(ce) {
                return Jt.get(ce) || ar;
            }
            function Rn(ce, he) {
                Jt.set(ce, he);
            }
            function tr() {
                return Dn;
            }
            class gn {
                constructor(he, we, Ye, it, ht) {
                    if (
                        ((this.operation = he),
                        (this.retryPolicy = we),
                        (this.getWaitDuration = Ye),
                        (this.lowerBound = it),
                        (this.upperBound = ht),
                        (this.pending = null),
                        (this.nextErrorWaitInterval = it),
                        it > ht)
                    )
                        throw new Error(
                            'Proactive refresh lower bound greater than upper bound!'
                        );
                }
                start() {
                    (this.nextErrorWaitInterval = this.lowerBound),
                        this.process(!0).catch(() => {});
                }
                stop() {
                    this.pending &&
                        (this.pending.reject('cancelled'),
                        (this.pending = null));
                }
                isRunning() {
                    return !!this.pending;
                }
                process(he) {
                    var we = this;
                    return (0, Zt.Z)(function* () {
                        we.stop();
                        try {
                            (we.pending = new $n.BH()),
                                yield (function Ir(ce) {
                                    return new Promise((he) => {
                                        setTimeout(he, ce);
                                    });
                                })(we.getNextRun(he)),
                                we.pending.resolve(),
                                yield we.pending.promise,
                                (we.pending = new $n.BH()),
                                yield we.operation(),
                                we.pending.resolve(),
                                yield we.pending.promise,
                                we.process(!0).catch(() => {});
                        } catch (Ye) {
                            we.retryPolicy(Ye)
                                ? we.process(!1).catch(() => {})
                                : we.stop();
                        }
                    })();
                }
                getNextRun(he) {
                    if (he)
                        return (
                            (this.nextErrorWaitInterval = this.lowerBound),
                            this.getWaitDuration()
                        );
                    {
                        const we = this.nextErrorWaitInterval;
                        return (
                            (this.nextErrorWaitInterval *= 2),
                            this.nextErrorWaitInterval > this.upperBound &&
                                (this.nextErrorWaitInterval = this.upperBound),
                            we
                        );
                    }
                }
            }
            const W = new $n.LL('appCheck', 'AppCheck', {
                'already-initialized':
                    'You have already called initializeAppCheck() for FirebaseApp {$appName} with different options. To avoid this error, call initializeAppCheck() with the same options as when it was originally called. This will return the already initialized instance.',
                'use-before-activation':
                    'App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. Call initializeAppCheck() before instantiating other Firebase services.',
                'fetch-network-error':
                    'Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                'fetch-parse-error':
                    'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                'fetch-status-error':
                    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                'storage-open':
                    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                'storage-get':
                    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                'storage-set':
                    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                'recaptcha-error': 'ReCAPTCHA error.',
                throttled:
                    'Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}',
            });
            function De(ce) {
                if (!cn(ce).activated)
                    throw W.create('use-before-activation', {
                        appName: ce.name,
                    });
            }
            function ut(ce, he) {
                return Ut.apply(this, arguments);
            }
            function Ut() {
                return (Ut = (0, Zt.Z)(function* ({ url: ce, body: he }, we) {
                    const Ye = { 'Content-Type': 'application/json' },
                        it = we.getImmediate({ optional: !0 });
                    it &&
                        (Ye['X-Firebase-Client'] = it.getPlatformInfoString());
                    const ht = {
                        method: 'POST',
                        body: JSON.stringify(he),
                        headers: Ye,
                    };
                    let zt, _n;
                    try {
                        zt = yield fetch(ce, ht);
                    } catch (N) {
                        throw W.create('fetch-network-error', {
                            originalErrorMessage: N.message,
                        });
                    }
                    if (200 !== zt.status)
                        throw W.create('fetch-status-error', {
                            httpStatus: zt.status,
                        });
                    try {
                        _n = yield zt.json();
                    } catch (N) {
                        throw W.create('fetch-parse-error', {
                            originalErrorMessage: N.message,
                        });
                    }
                    const Gt = _n.ttl.match(/^([\d.]+)(s)$/);
                    if (!Gt || !Gt[2] || isNaN(Number(Gt[1])))
                        throw W.create('fetch-parse-error', {
                            originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration format: ${_n.ttl}`,
                        });
                    const Nt = 1e3 * Number(Gt[1]),
                        A = Date.now();
                    return {
                        token: _n.attestationToken,
                        expireTimeMillis: A + Nt,
                        issuedAtTimeMillis: A,
                    };
                })).apply(this, arguments);
            }
            function Gn(ce, he) {
                const { projectId: we, appId: Ye, apiKey: it } = ce.options;
                return {
                    url: `https://content-firebaseappcheck.googleapis.com/v1beta/projects/${we}/apps/${Ye}:exchangeDebugToken?key=${it}`,
                    body: { debug_token: he },
                };
            }
            const Z = 'firebase-app-check-store';
            let ue = null;
            function Le() {
                return (
                    ue ||
                    ((ue = new Promise((ce, he) => {
                        try {
                            const we = indexedDB.open(
                                'firebase-app-check-database',
                                1
                            );
                            (we.onsuccess = (Ye) => {
                                ce(Ye.target.result);
                            }),
                                (we.onerror = (Ye) => {
                                    var it;
                                    he(
                                        W.create('storage-open', {
                                            originalErrorMessage:
                                                null ===
                                                    (it = Ye.target.error) ||
                                                void 0 === it
                                                    ? void 0
                                                    : it.message,
                                        })
                                    );
                                }),
                                (we.onupgradeneeded = (Ye) => {
                                    0 === Ye.oldVersion &&
                                        Ye.target.result.createObjectStore(Z, {
                                            keyPath: 'compositeKey',
                                        });
                                });
                        } catch (we) {
                            he(
                                W.create('storage-open', {
                                    originalErrorMessage: we.message,
                                })
                            );
                        }
                    })),
                    ue)
                );
            }
            function nt() {
                return (nt = (0, Zt.Z)(function* (ce, he) {
                    const Ye = (yield Le()).transaction(Z, 'readwrite'),
                        ht = Ye.objectStore(Z).put({
                            compositeKey: ce,
                            value: he,
                        });
                    return new Promise((zt, _n) => {
                        (ht.onsuccess = (Gt) => {
                            zt();
                        }),
                            (Ye.onerror = (Gt) => {
                                var Nt;
                                _n(
                                    W.create('storage-set', {
                                        originalErrorMessage:
                                            null === (Nt = Gt.target.error) ||
                                            void 0 === Nt
                                                ? void 0
                                                : Nt.message,
                                    })
                                );
                            });
                    });
                })).apply(this, arguments);
            }
            const en = new An.Yd('@firebase/app-check');
            function Xn(ce, he) {
                return (0, $n.hl)()
                    ? (function pt(ce, he) {
                          return (function $e(ce, he) {
                              return nt.apply(this, arguments);
                          })(
                              (function Xt(ce) {
                                  return `${ce.options.appId}-${ce.name}`;
                              })(ce),
                              he
                          );
                      })(ce, he).catch((we) => {
                          en.warn(
                              `Failed to write token to IndexedDB. Error: ${we}`
                          );
                      })
                    : Promise.resolve();
            }
            function ln() {
                return tr().enabled;
            }
            function Tn() {
                return xn.apply(this, arguments);
            }
            function xn() {
                return (xn = (0, Zt.Z)(function* () {
                    const ce = tr();
                    if (ce.enabled && ce.token) return ce.token.promise;
                    throw Error(
                        "\n            Can't get debug token in production mode.\n        "
                    );
                })).apply(this, arguments);
            }
            const ti = { error: 'UNKNOWN_ERROR' };
            function br(ce) {
                return $n.US.encodeString(JSON.stringify(ce), !1);
            }
            function Br(ce) {
                return Ar.apply(this, arguments);
            }
            function Ar() {
                return (Ar = (0, Zt.Z)(function* (ce, he = !1) {
                    const we = ce.app;
                    De(we);
                    const Ye = cn(we);
                    let ht,
                        it = Ye.token;
                    if (!it) {
                        const Gt = yield Ye.cachedTokenPromise;
                        Gt && fn(Gt) && (it = Gt);
                    }
                    if (!he && it && fn(it)) return { token: it.token };
                    let _n,
                        zt = !1;
                    if (ln()) {
                        Ye.exchangeTokenPromise ||
                            ((Ye.exchangeTokenPromise = ut(
                                Gn(we, yield Tn()),
                                ce.platformLoggerProvider
                            ).then(
                                (Nt) => ((Ye.exchangeTokenPromise = void 0), Nt)
                            )),
                            (zt = !0));
                        const Gt = yield Ye.exchangeTokenPromise;
                        return (
                            yield Xn(we, Gt),
                            Rn(
                                we,
                                Object.assign(Object.assign({}, Ye), {
                                    token: Gt,
                                })
                            ),
                            { token: Gt.token }
                        );
                    }
                    try {
                        Ye.exchangeTokenPromise ||
                            ((Ye.exchangeTokenPromise = Ye.provider
                                .getToken()
                                .then(
                                    (Gt) => (
                                        (Ye.exchangeTokenPromise = void 0), Gt
                                    )
                                )),
                            (zt = !0)),
                            (it = yield Ye.exchangeTokenPromise);
                    } catch (Gt) {
                        'appCheck/throttled' === Gt.code
                            ? en.warn(Gt.message)
                            : en.error(Gt),
                            (ht = Gt);
                    }
                    return (
                        it
                            ? ((_n = { token: it.token }),
                              Rn(
                                  we,
                                  Object.assign(Object.assign({}, Ye), {
                                      token: it,
                                  })
                              ),
                              yield Xn(we, it))
                            : (_n = er(ht)),
                        zt && tn(we, _n),
                        _n
                    );
                })).apply(this, arguments);
            }
            function Vr(ce, he) {
                const we = cn(ce),
                    Ye = we.tokenObservers.filter((it) => it.next !== he);
                0 === Ye.length &&
                    we.tokenRefresher &&
                    we.tokenRefresher.isRunning() &&
                    we.tokenRefresher.stop(),
                    Rn(
                        ce,
                        Object.assign(Object.assign({}, we), {
                            tokenObservers: Ye,
                        })
                    );
            }
            function nr(ce) {
                const { app: he } = ce,
                    we = cn(he);
                let Ye = we.tokenRefresher;
                Ye ||
                    ((Ye = (function ct(ce) {
                        const { app: he } = ce;
                        return new gn(
                            (0, Zt.Z)(function* () {
                                let Ye;
                                if (
                                    ((Ye = cn(he).token
                                        ? yield Br(ce, !0)
                                        : yield Br(ce)),
                                    Ye.error)
                                )
                                    throw Ye.error;
                            }),
                            () => !0,
                            () => {
                                const we = cn(he);
                                if (we.token) {
                                    let Ye =
                                        we.token.issuedAtTimeMillis +
                                        0.5 *
                                            (we.token.expireTimeMillis -
                                                we.token.issuedAtTimeMillis) +
                                        3e5;
                                    return (
                                        (Ye = Math.min(
                                            Ye,
                                            we.token.expireTimeMillis - 3e5
                                        )),
                                        Math.max(0, Ye - Date.now())
                                    );
                                }
                                return 0;
                            },
                            3e4,
                            96e4
                        );
                    })(ce)),
                    Rn(
                        he,
                        Object.assign(Object.assign({}, we), {
                            tokenRefresher: Ye,
                        })
                    )),
                    !Ye.isRunning() &&
                        we.isTokenAutoRefreshEnabled &&
                        Ye.start();
            }
            function tn(ce, he) {
                const we = cn(ce).tokenObservers;
                for (const Ye of we)
                    try {
                        'EXTERNAL' === Ye.type && null != he.error
                            ? Ye.error(he.error)
                            : Ye.next(he);
                    } catch (it) {}
            }
            function fn(ce) {
                return ce.expireTimeMillis - Date.now() > 0;
            }
            function er(ce) {
                return { token: br(ti), error: ce };
            }
            class hr {
                constructor(he, we) {
                    (this.app = he), (this.platformLoggerProvider = we);
                }
                _delete() {
                    const { tokenObservers: he } = cn(this.app);
                    for (const we of he) Vr(this.app, we.next);
                    return Promise.resolve();
                }
            }
            const Pi = 'app-check-internal';
            !(function gi() {
                (0, sn._registerComponent)(
                    new Ft.wA(
                        'app-check',
                        (ce) =>
                            (function En(ce, he) {
                                return new hr(ce, he);
                            })(
                                ce.getProvider('app').getImmediate(),
                                ce.getProvider('platform-logger')
                            ),
                        'PUBLIC'
                    )
                        .setInstantiationMode('EXPLICIT')
                        .setInstanceCreatedCallback((ce, he, we) => {
                            ce.getProvider(Pi).initialize();
                        })
                ),
                    (0, sn._registerComponent)(
                        new Ft.wA(
                            Pi,
                            (ce) =>
                                (function cr(ce) {
                                    return {
                                        getToken: (he) => Br(ce, he),
                                        addTokenListener: (he) =>
                                            (function ur(ce, he, we, Ye) {
                                                const { app: it } = ce,
                                                    ht = cn(it),
                                                    zt = {
                                                        next: we,
                                                        error: Ye,
                                                        type: he,
                                                    };
                                                if (
                                                    (Rn(
                                                        it,
                                                        Object.assign(
                                                            Object.assign(
                                                                {},
                                                                ht
                                                            ),
                                                            {
                                                                tokenObservers:
                                                                    [
                                                                        ...ht.tokenObservers,
                                                                        zt,
                                                                    ],
                                                            }
                                                        )
                                                    ),
                                                    ht.token && fn(ht.token))
                                                ) {
                                                    const _n = ht.token;
                                                    Promise.resolve()
                                                        .then(() => {
                                                            we({
                                                                token: _n.token,
                                                            }),
                                                                nr(ce);
                                                        })
                                                        .catch(() => {});
                                                }
                                                ht.cachedTokenPromise.then(() =>
                                                    nr(ce)
                                                );
                                            })(ce, 'INTERNAL', he),
                                        removeTokenListener: (he) =>
                                            Vr(ce.app, he),
                                    };
                                })(ce.getProvider('app-check').getImmediate()),
                            'PUBLIC'
                        ).setInstantiationMode('EXPLICIT')
                    ),
                    (0, sn.registerVersion)('@firebase/app-check', '0.5.3');
            })();
            class Ri {
                constructor() {
                    return (0, Q.vb)('app-check');
                }
            }
            'undefined' != typeof window && window;
            var Ai = y(127);
            const vr = new d.OlP('angularfire2.auth.use-emulator'),
                qi = new d.OlP('angularfire2.auth.settings'),
                ii = new d.OlP('angularfire2.auth.tenant-id'),
                Fi = new d.OlP('angularfire2.auth.langugage-code'),
                Qi = new d.OlP('angularfire2.auth.use-device-language'),
                ui = new d.OlP('angularfire.auth.persistence');
            let Gr = (() => {
                    class ce {
                        constructor(
                            we,
                            Ye,
                            it,
                            ht,
                            zt,
                            _n,
                            Gt,
                            Nt,
                            A,
                            N,
                            b,
                            V
                        ) {
                            const ge = new P.x(),
                                ke = (0, H.of)(void 0).pipe(
                                    (0, Ce.Q)(zt.outsideAngular),
                                    (0, j.w)(() =>
                                        ht.runOutsideAngular(() =>
                                            Promise.all([
                                                y.e(592),
                                                y.e(999),
                                            ]).then(y.bind(y, 8999))
                                        )
                                    ),
                                    (0, be.U)(() => (0, ye.on)(we, ht, Ye)),
                                    (0, be.U)((qe) =>
                                        ((ce, he, we, Ye, it, ht, zt, _n) =>
                                            (0, ye.cc)(
                                                `${ce.name}.auth`,
                                                'AngularFireAuth',
                                                ce.name,
                                                () => {
                                                    const Gt =
                                                        he.runOutsideAngular(
                                                            () => ce.auth()
                                                        );
                                                    if (
                                                        (we &&
                                                            Gt.useEmulator(
                                                                ...we
                                                            ),
                                                        Ye &&
                                                            (Gt.tenantId = Ye),
                                                        (Gt.languageCode = it),
                                                        ht &&
                                                            Gt.useDeviceLanguage(),
                                                        zt)
                                                    )
                                                        for (const [
                                                            Nt,
                                                            A,
                                                        ] of Object.entries(zt))
                                                            Gt.settings[Nt] = A;
                                                    return (
                                                        _n &&
                                                            Gt.setPersistence(
                                                                _n
                                                            ),
                                                        Gt
                                                    );
                                                },
                                                [we, Ye, it, ht, zt, _n]
                                            ))(qe, ht, _n, Nt, A, N, Gt, b)
                                    ),
                                    Y({ bufferSize: 1, refCount: !1 })
                                );
                            if ((0, M.PM)(it))
                                this.authState =
                                    this.user =
                                    this.idToken =
                                    this.idTokenResult =
                                    this.credential =
                                        (0, H.of)(null);
                            else {
                                ke.pipe((0, xe.P)()).subscribe();
                                const mt = ke.pipe(
                                        (0, j.w)((At) =>
                                            At.getRedirectResult().then(
                                                (jt) => jt,
                                                () => null
                                            )
                                        ),
                                        Q.iC,
                                        Y({ bufferSize: 1, refCount: !1 })
                                    ),
                                    kt = ke.pipe(
                                        (0, j.w)(
                                            (At) =>
                                                new w.y((jt) => ({
                                                    unsubscribe:
                                                        ht.runOutsideAngular(
                                                            () =>
                                                                At.onAuthStateChanged(
                                                                    (Pn) =>
                                                                        jt.next(
                                                                            Pn
                                                                        ),
                                                                    (Pn) =>
                                                                        jt.error(
                                                                            Pn
                                                                        ),
                                                                    () =>
                                                                        jt.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    ),
                                    un = ke.pipe(
                                        (0, j.w)(
                                            (At) =>
                                                new w.y((jt) => ({
                                                    unsubscribe:
                                                        ht.runOutsideAngular(
                                                            () =>
                                                                At.onIdTokenChanged(
                                                                    (Pn) =>
                                                                        jt.next(
                                                                            Pn
                                                                        ),
                                                                    (Pn) =>
                                                                        jt.error(
                                                                            Pn
                                                                        ),
                                                                    () =>
                                                                        jt.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    );
                                (this.authState = mt.pipe(
                                    ie(kt),
                                    (0, We.R)(zt.outsideAngular),
                                    (0, Ce.Q)(zt.insideAngular)
                                )),
                                    (this.user = mt.pipe(
                                        ie(un),
                                        (0, We.R)(zt.outsideAngular),
                                        (0, Ce.Q)(zt.insideAngular)
                                    )),
                                    (this.idToken = this.user.pipe(
                                        (0, j.w)((At) =>
                                            At
                                                ? (0, $.D)(At.getIdToken())
                                                : (0, H.of)(null)
                                        )
                                    )),
                                    (this.idTokenResult = this.user.pipe(
                                        (0, j.w)((At) =>
                                            At
                                                ? (0, $.D)(
                                                      At.getIdTokenResult()
                                                  )
                                                : (0, H.of)(null)
                                        )
                                    )),
                                    (this.credential = (0, ae.T)(
                                        mt,
                                        ge,
                                        this.authState.pipe(
                                            (0, de.h)((At) => !At)
                                        )
                                    ).pipe(
                                        (0, be.U)((At) =>
                                            (null == At ? void 0 : At.user)
                                                ? At
                                                : null
                                        ),
                                        (0, We.R)(zt.outsideAngular),
                                        (0, Ce.Q)(zt.insideAngular)
                                    ));
                            }
                            return (0, ye.pX)(this, ke, ht, {
                                spy: {
                                    apply: (qe, mt, kt) => {
                                        (qe.startsWith('signIn') ||
                                            qe.startsWith('createUser')) &&
                                            kt.then((un) => ge.next(un));
                                    },
                                },
                            });
                        }
                    }
                    return (
                        (ce.ɵfac = function (we) {
                            return new (we || ce)(
                                d.LFG(ye.Dh),
                                d.LFG(ye.xv, 8),
                                d.LFG(d.Lbi),
                                d.LFG(d.R0b),
                                d.LFG(Q.HU),
                                d.LFG(vr, 8),
                                d.LFG(qi, 8),
                                d.LFG(ii, 8),
                                d.LFG(Fi, 8),
                                d.LFG(Qi, 8),
                                d.LFG(ui, 8),
                                d.LFG(Ri, 8)
                            );
                        }),
                        (ce.ɵprov = d.Yz7({
                            token: ce,
                            factory: ce.ɵfac,
                            providedIn: 'any',
                        })),
                        ce
                    );
                })(),
                rr = (() => {
                    class ce {
                        constructor() {
                            Ai.Z.registerVersion(
                                'angularfire',
                                Q.q4.full,
                                'auth-compat'
                            );
                        }
                    }
                    return (
                        (ce.ɵfac = function (we) {
                            return new (we || ce)();
                        }),
                        (ce.ɵmod = d.oAB({ type: ce })),
                        (ce.ɵinj = d.cJS({ providers: [Gr] })),
                        ce
                    );
                })();
        },
        2011: (_e, z, y) => {
            'use strict';
            y.d(z, {
                hO: () => Ce,
                xv: () => Y,
                Dh: () => se,
                GT: () => ae,
                cc: () => be,
                on: () => j,
                pX: () => $,
            });
            var d = y(5e3),
                P = y(127),
                H = y(6351);
            _e = y.hmd(_e);
            const w = ['ngOnDestroy'],
                $ = (Q, ye, M, R = {}) =>
                    new Proxy(Q, {
                        get: (oe, J) =>
                            M.runOutsideAngular(() => {
                                var Ve;
                                if (Q[J])
                                    return (
                                        (null ===
                                            (Ve = null == R ? void 0 : R.spy) ||
                                        void 0 === Ve
                                            ? void 0
                                            : Ve.get) && R.spy.get(J, Q[J]),
                                        Q[J]
                                    );
                                if (w.indexOf(J) > -1) return () => {};
                                const He = ye.toPromise().then((Je) => {
                                    const te = Je && Je[J];
                                    return 'function' == typeof te
                                        ? te.bind(Je)
                                        : te && te.then
                                        ? te.then((Re) => M.run(() => Re))
                                        : M.run(() => te);
                                });
                                return new Proxy(() => {}, {
                                    get: (Je, te) => He[te],
                                    apply: (Je, te, Re) =>
                                        He.then((Oe) => {
                                            var Ue;
                                            const Xe = Oe && Oe(...Re);
                                            return (
                                                (null ===
                                                    (Ue =
                                                        null == R
                                                            ? void 0
                                                            : R.spy) ||
                                                void 0 === Ue
                                                    ? void 0
                                                    : Ue.apply) &&
                                                    R.spy.apply(J, Re, Xe),
                                                Xe
                                            );
                                        }),
                                });
                            }),
                    }),
                ae = (Q, ye) => {
                    ye.forEach((M) => {
                        Object.getOwnPropertyNames(M.prototype || M).forEach(
                            (R) => {
                                Object.defineProperty(
                                    Q.prototype,
                                    R,
                                    Object.getOwnPropertyDescriptor(
                                        M.prototype || M,
                                        R
                                    )
                                );
                            }
                        );
                    });
                };
            class re {
                constructor(ye) {
                    return ye;
                }
            }
            const se = new d.OlP('angularfire2.app.options'),
                Y = new d.OlP('angularfire2.app.name');
            function j(Q, ye, M) {
                const oe = ('object' == typeof M && M) || {};
                oe.name = oe.name || ('string' == typeof M && M) || '[DEFAULT]';
                const Ve =
                    P.Z.apps.filter((He) => He && He.name === oe.name)[0] ||
                    ye.runOutsideAngular(() => P.Z.initializeApp(Q, oe));
                try {
                    JSON.stringify(Q) !== JSON.stringify(Ve.options) &&
                        U(
                            'error',
                            `${
                                Ve.name
                            } Firebase App already initialized with different options${
                                _e.hot
                                    ? ', you may need to reload as Firebase is not HMR aware.'
                                    : '.'
                            }`
                        );
                } catch (He) {}
                return new re(Ve);
            }
            const U = (Q, ...ye) => {
                    (0, d.X6Q)() &&
                        'undefined' != typeof console &&
                        console[Q](...ye);
                },
                ie = {
                    provide: re,
                    useFactory: j,
                    deps: [se, d.R0b, [new d.FiY(), Y]],
                };
            let Ce = (() => {
                class Q {
                    constructor(M) {
                        P.Z.registerVersion('angularfire', H.q4.full, 'core'),
                            P.Z.registerVersion(
                                'angularfire',
                                H.q4.full,
                                'app-compat'
                            ),
                            P.Z.registerVersion(
                                'angular',
                                d.q4F.full,
                                M.toString()
                            );
                    }
                    static initializeApp(M, R) {
                        return {
                            ngModule: Q,
                            providers: [
                                { provide: se, useValue: M },
                                { provide: Y, useValue: R },
                            ],
                        };
                    }
                }
                return (
                    (Q.ɵfac = function (M) {
                        return new (M || Q)(d.LFG(d.Lbi));
                    }),
                    (Q.ɵmod = d.oAB({ type: Q })),
                    (Q.ɵinj = d.cJS({ providers: [ie] })),
                    Q
                );
            })();
            function be(Q, ye, M, R, oe) {
                const [, J, Ve] =
                    globalThis.ɵAngularfireInstanceCache.find(
                        (He) => He[0] === Q
                    ) || [];
                if (J)
                    return (
                        (function xe(Q, ye) {
                            try {
                                return Q.toString() === ye.toString();
                            } catch (M) {
                                return Q === ye;
                            }
                        })(oe, Ve) ||
                            (de(
                                'error',
                                `${ye} was already initialized on the ${M} Firebase App with different settings.${
                                    We
                                        ? ' You may need to reload as Firebase is not HMR aware.'
                                        : ''
                                }`
                            ),
                            de('warn', { is: oe, was: Ve })),
                        J
                    );
                {
                    const He = R();
                    return (
                        globalThis.ɵAngularfireInstanceCache.push([Q, He, oe]),
                        He
                    );
                }
            }
            const We = !!_e.hot,
                de = (Q, ...ye) => {
                    (0, d.X6Q)() &&
                        'undefined' != typeof console &&
                        console[Q](...ye);
                };
            globalThis.ɵAngularfireInstanceCache ||
                (globalThis.ɵAngularfireInstanceCache = []);
        },
        6351: (_e, z, y) => {
            'use strict';
            y.d(z, {
                q4: () => Cs,
                iC: () => So,
                HU: () => Da,
                vb: () => ji,
                JM: () => ei,
            });
            var d = y(5e3),
                P = y(5867),
                H = y(5861),
                w = y(9681),
                $ = y(2090),
                ae = y(4859),
                re = y(1877),
                se = y(2940);
            const Y = '@firebase/installations',
                j = '0.5.5',
                ie = `w:${j}`,
                Ce = 'FIS_v2',
                ye = new $.LL('installations', 'Installations', {
                    'missing-app-config-values':
                        'Missing App configuration value: "{$valueName}"',
                    'not-registered':
                        'Firebase Installation is not registered.',
                    'installation-not-found':
                        'Firebase Installation not found.',
                    'request-failed':
                        '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
                    'app-offline':
                        'Could not process request. Application offline.',
                    'delete-pending-registration':
                        "Can't delete installation while there is a pending registration request.",
                });
            function M(v) {
                return v instanceof $.ZR && v.code.includes('request-failed');
            }
            function R({ projectId: v }) {
                return `https://firebaseinstallations.googleapis.com/v1/projects/${v}/installations`;
            }
            function oe(v) {
                return {
                    token: v.token,
                    requestStatus: 2,
                    expiresIn: Oe(v.expiresIn),
                    creationTime: Date.now(),
                };
            }
            function J(v, T) {
                return Ve.apply(this, arguments);
            }
            function Ve() {
                return (Ve = (0, H.Z)(function* (v, T) {
                    const ee = (yield T.json()).error;
                    return ye.create('request-failed', {
                        requestName: v,
                        serverCode: ee.code,
                        serverMessage: ee.message,
                        serverStatus: ee.status,
                    });
                })).apply(this, arguments);
            }
            function He({ apiKey: v }) {
                return new Headers({
                    'Content-Type': 'application/json',
                    Accept: 'application/json',
                    'x-goog-api-key': v,
                });
            }
            function Je(v, { refreshToken: T }) {
                const B = He(v);
                return (
                    B.append(
                        'Authorization',
                        (function Ue(v) {
                            return `${Ce} ${v}`;
                        })(T)
                    ),
                    B
                );
            }
            function te(v) {
                return Re.apply(this, arguments);
            }
            function Re() {
                return (Re = (0, H.Z)(function* (v) {
                    const T = yield v();
                    return T.status >= 500 && T.status < 600 ? v() : T;
                })).apply(this, arguments);
            }
            function Oe(v) {
                return Number(v.replace('s', '000'));
            }
            function Xe(v, T) {
                return Ae.apply(this, arguments);
            }
            function Ae() {
                return (Ae = (0, H.Z)(function* (v, { fid: T }) {
                    const B = R(v),
                        ze = {
                            method: 'POST',
                            headers: He(v),
                            body: JSON.stringify({
                                fid: T,
                                authVersion: Ce,
                                appId: v.appId,
                                sdkVersion: ie,
                            }),
                        },
                        lt = yield te(() => fetch(B, ze));
                    if (lt.ok) {
                        const Ot = yield lt.json();
                        return {
                            fid: Ot.fid || T,
                            registrationStatus: 2,
                            refreshToken: Ot.refreshToken,
                            authToken: oe(Ot.authToken),
                        };
                    }
                    throw yield J('Create Installation', lt);
                })).apply(this, arguments);
            }
            function wt(v) {
                return new Promise((T) => {
                    setTimeout(T, v);
                });
            }
            const Bn = /^[cdef][\w-]{21}$/;
            function _t() {
                try {
                    const v = new Uint8Array(17);
                    (self.crypto || self.msCrypto).getRandomValues(v),
                        (v[0] = 112 + (v[0] % 16));
                    const B = (function Vn(v) {
                        return (function rn(v) {
                            return btoa(String.fromCharCode(...v))
                                .replace(/\+/g, '-')
                                .replace(/\//g, '_');
                        })(v).substr(0, 22);
                    })(v);
                    return Bn.test(B) ? B : '';
                } catch (v) {
                    return '';
                }
            }
            function Zt(v) {
                return `${v.appName}!${v.appId}`;
            }
            const sn = new Map();
            function Ft(v, T) {
                const B = Zt(v);
                Jt(B, T),
                    (function ar(v, T) {
                        const B = (function cn() {
                            return (
                                !Dn &&
                                    'BroadcastChannel' in self &&
                                    ((Dn = new BroadcastChannel(
                                        '[Firebase] FID Change'
                                    )),
                                    (Dn.onmessage = (v) => {
                                        Jt(v.data.key, v.data.fid);
                                    })),
                                Dn
                            );
                        })();
                        B && B.postMessage({ key: v, fid: T }),
                            (function Rn() {
                                0 === sn.size &&
                                    Dn &&
                                    (Dn.close(), (Dn = null));
                            })();
                    })(B, T);
            }
            function Jt(v, T) {
                const B = sn.get(v);
                if (B) for (const ee of B) ee(T);
            }
            let Dn = null;
            const Hn = 'firebase-installations-store';
            let Sr = null;
            function St() {
                return (
                    Sr ||
                        (Sr = (0, se.openDb)(
                            'firebase-installations-database',
                            1,
                            (v) => {
                                0 === v.oldVersion && v.createObjectStore(Hn);
                            }
                        )),
                    Sr
                );
            }
            function Qn(v, T) {
                return Fn.apply(this, arguments);
            }
            function Fn() {
                return (Fn = (0, H.Z)(function* (v, T) {
                    const B = Zt(v),
                        Se = (yield St()).transaction(Hn, 'readwrite'),
                        ze = Se.objectStore(Hn),
                        lt = yield ze.get(B);
                    return (
                        yield ze.put(T, B),
                        yield Se.complete,
                        (!lt || lt.fid !== T.fid) && Ft(v, T.fid),
                        T
                    );
                })).apply(this, arguments);
            }
            function gn(v) {
                return Ir.apply(this, arguments);
            }
            function Ir() {
                return (Ir = (0, H.Z)(function* (v) {
                    const T = Zt(v),
                        ee = (yield St()).transaction(Hn, 'readwrite');
                    yield ee.objectStore(Hn).delete(T), yield ee.complete;
                })).apply(this, arguments);
            }
            function Ie(v, T) {
                return W.apply(this, arguments);
            }
            function W() {
                return (W = (0, H.Z)(function* (v, T) {
                    const B = Zt(v),
                        Se = (yield St()).transaction(Hn, 'readwrite'),
                        ze = Se.objectStore(Hn),
                        lt = yield ze.get(B),
                        Ot = T(lt);
                    return (
                        void 0 === Ot
                            ? yield ze.delete(B)
                            : yield ze.put(Ot, B),
                        yield Se.complete,
                        Ot && (!lt || lt.fid !== Ot.fid) && Ft(v, Ot.fid),
                        Ot
                    );
                })).apply(this, arguments);
            }
            function ne(v) {
                return De.apply(this, arguments);
            }
            function De() {
                return (De = (0, H.Z)(function* (v) {
                    let T;
                    const B = yield Ie(v, (ee) => {
                        const Se = Ke(ee),
                            ze = at(v, Se);
                        return (
                            (T = ze.registrationPromise), ze.installationEntry
                        );
                    });
                    return '' === B.fid
                        ? { installationEntry: yield T }
                        : { installationEntry: B, registrationPromise: T };
                })).apply(this, arguments);
            }
            function Ke(v) {
                return Gn(v || { fid: _t(), registrationStatus: 0 });
            }
            function at(v, T) {
                if (0 === T.registrationStatus) {
                    if (!navigator.onLine)
                        return {
                            installationEntry: T,
                            registrationPromise: Promise.reject(
                                ye.create('app-offline')
                            ),
                        };
                    const B = {
                            fid: T.fid,
                            registrationStatus: 1,
                            registrationTime: Date.now(),
                        },
                        ee = (function st(v, T) {
                            return ut.apply(this, arguments);
                        })(v, B);
                    return { installationEntry: B, registrationPromise: ee };
                }
                return 1 === T.registrationStatus
                    ? { installationEntry: T, registrationPromise: Ut(v) }
                    : { installationEntry: T };
            }
            function ut() {
                return (ut = (0, H.Z)(function* (v, T) {
                    try {
                        return Qn(v, yield Xe(v, T));
                    } catch (B) {
                        throw (
                            (M(B) && 409 === B.customData.serverCode
                                ? yield gn(v)
                                : yield Qn(v, {
                                      fid: T.fid,
                                      registrationStatus: 0,
                                  }),
                            B)
                        );
                    }
                })).apply(this, arguments);
            }
            function Ut(v) {
                return mn.apply(this, arguments);
            }
            function mn() {
                return (mn = (0, H.Z)(function* (v) {
                    let T = yield Lt(v);
                    for (; 1 === T.registrationStatus; )
                        yield wt(100), (T = yield Lt(v));
                    if (0 === T.registrationStatus) {
                        const {
                            installationEntry: B,
                            registrationPromise: ee,
                        } = yield ne(v);
                        return ee || B;
                    }
                    return T;
                })).apply(this, arguments);
            }
            function Lt(v) {
                return Ie(v, (T) => {
                    if (!T) throw ye.create('installation-not-found');
                    return Gn(T);
                });
            }
            function Gn(v) {
                return (function wn(v) {
                    return (
                        1 === v.registrationStatus &&
                        v.registrationTime + 1e4 < Date.now()
                    );
                })(v)
                    ? { fid: v.fid, registrationStatus: 0 }
                    : v;
            }
            function $t(v, T) {
                return Z.apply(this, arguments);
            }
            function Z() {
                return (Z = (0, H.Z)(function* (
                    { appConfig: v, platformLoggerProvider: T },
                    B
                ) {
                    const ee = fe(v, B),
                        Se = Je(v, B),
                        ze = T.getImmediate({ optional: !0 });
                    ze &&
                        Se.append(
                            'x-firebase-client',
                            ze.getPlatformInfoString()
                        );
                    const Ot = {
                            method: 'POST',
                            headers: Se,
                            body: JSON.stringify({
                                installation: { sdkVersion: ie },
                            }),
                        },
                        Mt = yield te(() => fetch(ee, Ot));
                    if (Mt.ok) return oe(yield Mt.json());
                    throw yield J('Generate Auth Token', Mt);
                })).apply(this, arguments);
            }
            function fe(v, { fid: T }) {
                return `${R(v)}/${T}/authTokens:generate`;
            }
            function ue(v) {
                return Le.apply(this, arguments);
            }
            function Le() {
                return (Le = (0, H.Z)(function* (v, T = !1) {
                    let B;
                    const ee = yield Ie(v.appConfig, (ze) => {
                        if (!nt(ze)) throw ye.create('not-registered');
                        const lt = ze.authToken;
                        if (!T && Ct(lt)) return ze;
                        if (1 === lt.requestStatus) return (B = Pe(v, T)), ze;
                        {
                            if (!navigator.onLine)
                                throw ye.create('app-offline');
                            const Ot = Xt(ze);
                            return (B = je(v, Ot)), Ot;
                        }
                    });
                    return B ? yield B : ee.authToken;
                })).apply(this, arguments);
            }
            function Pe(v, T) {
                return pt.apply(this, arguments);
            }
            function pt() {
                return (pt = (0, H.Z)(function* (v, T) {
                    let B = yield ve(v.appConfig);
                    for (; 1 === B.authToken.requestStatus; )
                        yield wt(100), (B = yield ve(v.appConfig));
                    const ee = B.authToken;
                    return 0 === ee.requestStatus ? ue(v, T) : ee;
                })).apply(this, arguments);
            }
            function ve(v) {
                return Ie(v, (T) => {
                    if (!nt(T)) throw ye.create('not-registered');
                    return (function en(v) {
                        return (
                            1 === v.requestStatus &&
                            v.requestTime + 1e4 < Date.now()
                        );
                    })(T.authToken)
                        ? Object.assign(Object.assign({}, T), {
                              authToken: { requestStatus: 0 },
                          })
                        : T;
                });
            }
            function je(v, T) {
                return $e.apply(this, arguments);
            }
            function $e() {
                return ($e = (0, H.Z)(function* (v, T) {
                    try {
                        const B = yield $t(v, T),
                            ee = Object.assign(Object.assign({}, T), {
                                authToken: B,
                            });
                        return yield Qn(v.appConfig, ee), B;
                    } catch (B) {
                        if (
                            !M(B) ||
                            (401 !== B.customData.serverCode &&
                                404 !== B.customData.serverCode)
                        ) {
                            const ee = Object.assign(Object.assign({}, T), {
                                authToken: { requestStatus: 0 },
                            });
                            yield Qn(v.appConfig, ee);
                        } else yield gn(v.appConfig);
                        throw B;
                    }
                })).apply(this, arguments);
            }
            function nt(v) {
                return void 0 !== v && 2 === v.registrationStatus;
            }
            function Ct(v) {
                return (
                    2 === v.requestStatus &&
                    !(function dt(v) {
                        const T = Date.now();
                        return (
                            T < v.creationTime ||
                            v.creationTime + v.expiresIn < T + 36e5
                        );
                    })(v)
                );
            }
            function Xt(v) {
                const T = { requestStatus: 1, requestTime: Date.now() };
                return Object.assign(Object.assign({}, v), { authToken: T });
            }
            function bt() {
                return (bt = (0, H.Z)(function* (v) {
                    const T = v,
                        { installationEntry: B, registrationPromise: ee } =
                            yield ne(T.appConfig);
                    return (
                        ee
                            ? ee.catch(console.error)
                            : ue(T).catch(console.error),
                        B.fid
                    );
                })).apply(this, arguments);
            }
            function yr() {
                return (yr = (0, H.Z)(function* (v, T = !1) {
                    const B = v;
                    return yield Yt(B.appConfig), (yield ue(B, T)).token;
                })).apply(this, arguments);
            }
            function Yt(v) {
                return ln.apply(this, arguments);
            }
            function ln() {
                return (ln = (0, H.Z)(function* (v) {
                    const { registrationPromise: T } = yield ne(v);
                    T && (yield T);
                })).apply(this, arguments);
            }
            function Vr(v) {
                return ye.create('missing-app-config-values', { valueName: v });
            }
            const nr = 'installations',
                tn = (v) => {
                    const T = v.getProvider('app').getImmediate(),
                        B = (function ur(v) {
                            if (!v || !v.options) throw Vr('App Configuration');
                            if (!v.name) throw Vr('App Name');
                            const T = ['projectId', 'apiKey', 'appId'];
                            for (const B of T) if (!v.options[B]) throw Vr(B);
                            return {
                                appName: v.name,
                                projectId: v.options.projectId,
                                apiKey: v.options.apiKey,
                                appId: v.options.appId,
                            };
                        })(T);
                    return {
                        app: T,
                        appConfig: B,
                        platformLoggerProvider: (0, w._getProvider)(
                            T,
                            'platform-logger'
                        ),
                        _delete: () => Promise.resolve(),
                    };
                },
                fn = (v) => {
                    const T = v.getProvider('app').getImmediate(),
                        B = (0, w._getProvider)(T, nr).getImmediate();
                    return {
                        getId: () =>
                            (function Un(v) {
                                return bt.apply(this, arguments);
                            })(B),
                        getToken: (Se) =>
                            (function Xn(v) {
                                return yr.apply(this, arguments);
                            })(B, Se),
                    };
                };
            (function er() {
                (0, w._registerComponent)(new ae.wA(nr, tn, 'PUBLIC')),
                    (0, w._registerComponent)(
                        new ae.wA('installations-internal', fn, 'PRIVATE')
                    );
            })(),
                (0, w.registerVersion)(Y, j),
                (0, w.registerVersion)(Y, j, 'esm2017');
            const hr = '@firebase/remote-config',
                Cn = new $.LL('remoteconfig', 'Remote Config', {
                    'registration-window':
                        'Undefined window object. This SDK only supports usage in a browser environment.',
                    'registration-project-id':
                        'Undefined project identifier. Check Firebase app initialization.',
                    'registration-api-key':
                        'Undefined API key. Check Firebase app initialization.',
                    'registration-app-id':
                        'Undefined app identifier. Check Firebase app initialization.',
                    'storage-open':
                        'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                    'storage-get':
                        'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                    'storage-set':
                        'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                    'storage-delete':
                        'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',
                    'fetch-client-network':
                        'Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                    'fetch-timeout':
                        'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'fetch-client-parse':
                        'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                    'fetch-status':
                        'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                    'indexed-db-unavailable':
                        'Indexed DB is not supported by current browser',
                });
            class ni {
                constructor(T, B, ee, Se) {
                    (this.client = T),
                        (this.storage = B),
                        (this.storageCache = ee),
                        (this.logger = Se);
                }
                isCachedDataFresh(T, B) {
                    if (!B)
                        return (
                            this.logger.debug(
                                'Config fetch cache check. Cache unpopulated.'
                            ),
                            !1
                        );
                    const ee = Date.now() - B,
                        Se = ee <= T;
                    return (
                        this.logger.debug(
                            `Config fetch cache check. Cache age millis: ${ee}. Cache max age millis (minimumFetchIntervalMillis setting): ${T}. Is cache hit: ${Se}.`
                        ),
                        Se
                    );
                }
                fetch(T) {
                    var B = this;
                    return (0, H.Z)(function* () {
                        const [ee, Se] = yield Promise.all([
                            B.storage.getLastSuccessfulFetchTimestampMillis(),
                            B.storage.getLastSuccessfulFetchResponse(),
                        ]);
                        if (Se && B.isCachedDataFresh(T.cacheMaxAgeMillis, ee))
                            return Se;
                        T.eTag = Se && Se.eTag;
                        const ze = yield B.client.fetch(T),
                            lt = [
                                B.storageCache.setLastSuccessfulFetchTimestampMillis(
                                    Date.now()
                                ),
                            ];
                        return (
                            200 === ze.status &&
                                lt.push(
                                    B.storage.setLastSuccessfulFetchResponse(ze)
                                ),
                            yield Promise.all(lt),
                            ze
                        );
                    })();
                }
            }
            function zi(v = navigator) {
                return (v.languages && v.languages[0]) || v.language;
            }
            class Or {
                constructor(T, B, ee, Se, ze, lt) {
                    (this.firebaseInstallations = T),
                        (this.sdkVersion = B),
                        (this.namespace = ee),
                        (this.projectId = Se),
                        (this.apiKey = ze),
                        (this.appId = lt);
                }
                fetch(T) {
                    var B = this;
                    return (0, H.Z)(function* () {
                        const [ee, Se] = yield Promise.all([
                                B.firebaseInstallations.getId(),
                                B.firebaseInstallations.getToken(),
                            ]),
                            lt = `${
                                window.FIREBASE_REMOTE_CONFIG_URL_BASE ||
                                'https://firebaseremoteconfig.googleapis.com'
                            }/v1/projects/${B.projectId}/namespaces/${
                                B.namespace
                            }:fetch?key=${B.apiKey}`,
                            Ot = {
                                'Content-Type': 'application/json',
                                'Content-Encoding': 'gzip',
                                'If-None-Match': T.eTag || '*',
                            },
                            Mt = {
                                sdk_version: B.sdkVersion,
                                app_instance_id: ee,
                                app_instance_id_token: Se,
                                app_id: B.appId,
                                language_code: zi(),
                            },
                            kn = {
                                method: 'POST',
                                headers: Ot,
                                body: JSON.stringify(Mt),
                            },
                            Dr = fetch(lt, kn),
                            $i = new Promise((yo, Io) => {
                                T.signal.addEventListener(() => {
                                    const el = new Error(
                                        'The operation was aborted.'
                                    );
                                    (el.name = 'AbortError'), Io(el);
                                });
                            });
                        let gr;
                        try {
                            yield Promise.race([Dr, $i]), (gr = yield Dr);
                        } catch (yo) {
                            let Io = 'fetch-client-network';
                            throw (
                                ('AbortError' === yo.name &&
                                    (Io = 'fetch-timeout'),
                                Cn.create(Io, {
                                    originalErrorMessage: yo.message,
                                }))
                            );
                        }
                        let si = gr.status;
                        const Aa = gr.headers.get('ETag') || void 0;
                        let Lo, Bs;
                        if (200 === gr.status) {
                            let yo;
                            try {
                                yo = yield gr.json();
                            } catch (Io) {
                                throw Cn.create('fetch-client-parse', {
                                    originalErrorMessage: Io.message,
                                });
                            }
                            (Lo = yo.entries), (Bs = yo.state);
                        }
                        if (
                            ('INSTANCE_STATE_UNSPECIFIED' === Bs
                                ? (si = 500)
                                : 'NO_CHANGE' === Bs
                                ? (si = 304)
                                : ('NO_TEMPLATE' === Bs ||
                                      'EMPTY_CONFIG' === Bs) &&
                                  (Lo = {}),
                            304 !== si && 200 !== si)
                        )
                            throw Cn.create('fetch-status', { httpStatus: si });
                        return { status: si, eTag: Aa, config: Lo };
                    })();
                }
            }
            class Zr {
                constructor(T, B) {
                    (this.client = T), (this.storage = B);
                }
                fetch(T) {
                    var B = this;
                    return (0, H.Z)(function* () {
                        const ee = (yield B.storage.getThrottleMetadata()) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        };
                        return B.attemptFetch(T, ee);
                    })();
                }
                attemptFetch(
                    T,
                    { throttleEndTimeMillis: B, backoffCount: ee }
                ) {
                    var Se = this;
                    return (0, H.Z)(function* () {
                        yield (function Pi(v, T) {
                            return new Promise((B, ee) => {
                                const Se = Math.max(T - Date.now(), 0),
                                    ze = setTimeout(B, Se);
                                v.addEventListener(() => {
                                    clearTimeout(ze),
                                        ee(
                                            Cn.create('fetch-throttle', {
                                                throttleEndTimeMillis: T,
                                            })
                                        );
                                });
                            });
                        })(T.signal, B);
                        try {
                            const ze = yield Se.client.fetch(T);
                            return (
                                yield Se.storage.deleteThrottleMetadata(), ze
                            );
                        } catch (ze) {
                            if (
                                !(function gi(v) {
                                    if (!(v instanceof $.ZR && v.customData))
                                        return !1;
                                    const T = Number(v.customData.httpStatus);
                                    return (
                                        429 === T ||
                                        500 === T ||
                                        503 === T ||
                                        504 === T
                                    );
                                })(ze)
                            )
                                throw ze;
                            const lt = {
                                throttleEndTimeMillis:
                                    Date.now() + (0, $.$s)(ee),
                                backoffCount: ee + 1,
                            };
                            return (
                                yield Se.storage.setThrottleMetadata(lt),
                                Se.attemptFetch(T, lt)
                            );
                        }
                    })();
                }
            }
            class Ki {
                constructor(T, B, ee, Se, ze) {
                    (this.app = T),
                        (this._client = B),
                        (this._storageCache = ee),
                        (this._storage = Se),
                        (this._logger = ze),
                        (this._isInitializationComplete = !1),
                        (this.settings = {
                            fetchTimeoutMillis: 6e4,
                            minimumFetchIntervalMillis: 432e5,
                        }),
                        (this.defaultConfig = {});
                }
                get fetchTimeMillis() {
                    return (
                        this._storageCache.getLastSuccessfulFetchTimestampMillis() ||
                        -1
                    );
                }
                get lastFetchStatus() {
                    return (
                        this._storageCache.getLastFetchStatus() ||
                        'no-fetch-yet'
                    );
                }
            }
            function Lr(v, T) {
                const B = v.target.error || void 0;
                return Cn.create(T, { originalErrorMessage: B && B.message });
            }
            const Qr = 'app_namespace_store';
            class Bi {
                constructor(
                    T,
                    B,
                    ee,
                    Se = (function bi() {
                        return new Promise((v, T) => {
                            try {
                                const B = indexedDB.open(
                                    'firebase_remote_config',
                                    1
                                );
                                (B.onerror = (ee) => {
                                    T(Lr(ee, 'storage-open'));
                                }),
                                    (B.onsuccess = (ee) => {
                                        v(ee.target.result);
                                    }),
                                    (B.onupgradeneeded = (ee) => {
                                        0 === ee.oldVersion &&
                                            ee.target.result.createObjectStore(
                                                Qr,
                                                { keyPath: 'compositeKey' }
                                            );
                                    });
                            } catch (B) {
                                T(
                                    Cn.create('storage-open', {
                                        originalErrorMessage: B,
                                    })
                                );
                            }
                        });
                    })()
                ) {
                    (this.appId = T),
                        (this.appName = B),
                        (this.namespace = ee),
                        (this.openDbPromise = Se);
                }
                getLastFetchStatus() {
                    return this.get('last_fetch_status');
                }
                setLastFetchStatus(T) {
                    return this.set('last_fetch_status', T);
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.get('last_successful_fetch_timestamp_millis');
                }
                setLastSuccessfulFetchTimestampMillis(T) {
                    return this.set(
                        'last_successful_fetch_timestamp_millis',
                        T
                    );
                }
                getLastSuccessfulFetchResponse() {
                    return this.get('last_successful_fetch_response');
                }
                setLastSuccessfulFetchResponse(T) {
                    return this.set('last_successful_fetch_response', T);
                }
                getActiveConfig() {
                    return this.get('active_config');
                }
                setActiveConfig(T) {
                    return this.set('active_config', T);
                }
                getActiveConfigEtag() {
                    return this.get('active_config_etag');
                }
                setActiveConfigEtag(T) {
                    return this.set('active_config_etag', T);
                }
                getThrottleMetadata() {
                    return this.get('throttle_metadata');
                }
                setThrottleMetadata(T) {
                    return this.set('throttle_metadata', T);
                }
                deleteThrottleMetadata() {
                    return this.delete('throttle_metadata');
                }
                get(T) {
                    var B = this;
                    return (0, H.Z)(function* () {
                        const ee = yield B.openDbPromise;
                        return new Promise((Se, ze) => {
                            const Ot = ee
                                    .transaction([Qr], 'readonly')
                                    .objectStore(Qr),
                                Mt = B.createCompositeKey(T);
                            try {
                                const kn = Ot.get(Mt);
                                (kn.onerror = (Dr) => {
                                    ze(Lr(Dr, 'storage-get'));
                                }),
                                    (kn.onsuccess = (Dr) => {
                                        const $i = Dr.target.result;
                                        Se($i ? $i.value : void 0);
                                    });
                            } catch (kn) {
                                ze(
                                    Cn.create('storage-get', {
                                        originalErrorMessage: kn && kn.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                set(T, B) {
                    var ee = this;
                    return (0, H.Z)(function* () {
                        const Se = yield ee.openDbPromise;
                        return new Promise((ze, lt) => {
                            const Mt = Se.transaction(
                                    [Qr],
                                    'readwrite'
                                ).objectStore(Qr),
                                kn = ee.createCompositeKey(T);
                            try {
                                const Dr = Mt.put({
                                    compositeKey: kn,
                                    value: B,
                                });
                                (Dr.onerror = ($i) => {
                                    lt(Lr($i, 'storage-set'));
                                }),
                                    (Dr.onsuccess = () => {
                                        ze();
                                    });
                            } catch (Dr) {
                                lt(
                                    Cn.create('storage-set', {
                                        originalErrorMessage: Dr && Dr.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                delete(T) {
                    var B = this;
                    return (0, H.Z)(function* () {
                        const ee = yield B.openDbPromise;
                        return new Promise((Se, ze) => {
                            const Ot = ee
                                    .transaction([Qr], 'readwrite')
                                    .objectStore(Qr),
                                Mt = B.createCompositeKey(T);
                            try {
                                const kn = Ot.delete(Mt);
                                (kn.onerror = (Dr) => {
                                    ze(Lr(Dr, 'storage-delete'));
                                }),
                                    (kn.onsuccess = () => {
                                        Se();
                                    });
                            } catch (kn) {
                                ze(
                                    Cn.create('storage-delete', {
                                        originalErrorMessage: kn && kn.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                createCompositeKey(T) {
                    return [this.appId, this.appName, this.namespace, T].join();
                }
            }
            class Jr {
                constructor(T) {
                    this.storage = T;
                }
                getLastFetchStatus() {
                    return this.lastFetchStatus;
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.lastSuccessfulFetchTimestampMillis;
                }
                getActiveConfig() {
                    return this.activeConfig;
                }
                loadFromStorage() {
                    var T = this;
                    return (0, H.Z)(function* () {
                        const B = T.storage.getLastFetchStatus(),
                            ee =
                                T.storage.getLastSuccessfulFetchTimestampMillis(),
                            Se = T.storage.getActiveConfig(),
                            ze = yield B;
                        ze && (T.lastFetchStatus = ze);
                        const lt = yield ee;
                        lt && (T.lastSuccessfulFetchTimestampMillis = lt);
                        const Ot = yield Se;
                        Ot && (T.activeConfig = Ot);
                    })();
                }
                setLastFetchStatus(T) {
                    return (
                        (this.lastFetchStatus = T),
                        this.storage.setLastFetchStatus(T)
                    );
                }
                setLastSuccessfulFetchTimestampMillis(T) {
                    return (
                        (this.lastSuccessfulFetchTimestampMillis = T),
                        this.storage.setLastSuccessfulFetchTimestampMillis(T)
                    );
                }
                setActiveConfig(T) {
                    return (
                        (this.activeConfig = T), this.storage.setActiveConfig(T)
                    );
                }
            }
            function ai() {
                return li.apply(this, arguments);
            }
            function li() {
                return (li = (0, H.Z)(function* () {
                    if (!(0, $.hl)()) return !1;
                    try {
                        return yield (0, $.eu)();
                    } catch (v) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            !(function ss() {
                (0, w._registerComponent)(
                    new ae.wA(
                        'remote-config',
                        function v(T, { instanceIdentifier: B }) {
                            const ee = T.getProvider('app').getImmediate(),
                                Se = T.getProvider(
                                    'installations-internal'
                                ).getImmediate();
                            if ('undefined' == typeof window)
                                throw Cn.create('registration-window');
                            if (!(0, $.hl)())
                                throw Cn.create('indexed-db-unavailable');
                            const {
                                projectId: ze,
                                apiKey: lt,
                                appId: Ot,
                            } = ee.options;
                            if (!ze) throw Cn.create('registration-project-id');
                            if (!lt) throw Cn.create('registration-api-key');
                            if (!Ot) throw Cn.create('registration-app-id');
                            const Mt = new Bi(
                                    Ot,
                                    ee.name,
                                    (B = B || 'firebase')
                                ),
                                kn = new Jr(Mt),
                                Dr = new re.Yd(hr);
                            Dr.logLevel = re.in.ERROR;
                            const $i = new Or(Se, w.SDK_VERSION, B, ze, lt, Ot),
                                gr = new Zr($i, Mt),
                                si = new ni(gr, Mt, kn, Dr),
                                Aa = new Ki(ee, si, kn, Mt, Dr);
                            return (
                                (function Ee(v) {
                                    const T = (0, $.m9)(v);
                                    T._initializePromise ||
                                        (T._initializePromise = T._storageCache
                                            .loadFromStorage()
                                            .then(() => {
                                                T._isInitializationComplete =
                                                    !0;
                                            }));
                                })(Aa),
                                Aa
                            );
                        },
                        'PUBLIC'
                    ).setMultipleInstances(!0)
                ),
                    (0, w.registerVersion)(hr, '0.3.4'),
                    (0, w.registerVersion)(hr, '0.3.4', 'esm2017');
            })();
            const Zi = '/firebase-messaging-sw.js',
                ri = '/firebase-cloud-messaging-push-scope',
                Ai =
                    'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4',
                vr = 'google.c.a.c_id',
                qi = 'google.c.a.c_l',
                ii = 'google.c.a.ts',
                Fi = 'google.c.a.e';
            var ui = (() => {
                return (
                    ((v = ui || (ui = {})).PUSH_RECEIVED = 'push-received'),
                    (v.NOTIFICATION_CLICKED = 'notification-clicked'),
                    ui
                );
                var v;
            })();
            function zn(v) {
                const T = new Uint8Array(v);
                return btoa(String.fromCharCode(...T))
                    .replace(/=/g, '')
                    .replace(/\+/g, '-')
                    .replace(/\//g, '_');
            }
            function Gr(v) {
                const B = (v + '='.repeat((4 - (v.length % 4)) % 4))
                        .replace(/\-/g, '+')
                        .replace(/_/g, '/'),
                    ee = atob(B),
                    Se = new Uint8Array(ee.length);
                for (let ze = 0; ze < ee.length; ++ze)
                    Se[ze] = ee.charCodeAt(ze);
                return Se;
            }
            const rr = 'fcm_token_details_db',
                he = 'fcm_token_object_Store';
            function we(v) {
                return Ye.apply(this, arguments);
            }
            function Ye() {
                return (
                    (Ye = (0, H.Z)(function* (v) {
                        if (
                            'databases' in indexedDB &&
                            !(yield indexedDB.databases())
                                .map((ze) => ze.name)
                                .includes(rr)
                        )
                            return null;
                        let T = null;
                        return (
                            (yield (0, se.openDb)(
                                rr,
                                5,
                                (function () {
                                    var ee = (0, H.Z)(function* (Se) {
                                        var ze;
                                        if (
                                            Se.oldVersion < 2 ||
                                            !Se.objectStoreNames.contains(he)
                                        )
                                            return;
                                        const lt =
                                                Se.transaction.objectStore(he),
                                            Ot = yield lt
                                                .index('fcmSenderId')
                                                .get(v);
                                        if ((yield lt.clear(), Ot))
                                            if (2 === Se.oldVersion) {
                                                const Mt = Ot;
                                                if (
                                                    !Mt.auth ||
                                                    !Mt.p256dh ||
                                                    !Mt.endpoint
                                                )
                                                    return;
                                                T = {
                                                    token: Mt.fcmToken,
                                                    createTime:
                                                        null !==
                                                            (ze =
                                                                Mt.createTime) &&
                                                        void 0 !== ze
                                                            ? ze
                                                            : Date.now(),
                                                    subscriptionOptions: {
                                                        auth: Mt.auth,
                                                        p256dh: Mt.p256dh,
                                                        endpoint: Mt.endpoint,
                                                        swScope: Mt.swScope,
                                                        vapidKey:
                                                            'string' ==
                                                            typeof Mt.vapidKey
                                                                ? Mt.vapidKey
                                                                : zn(
                                                                      Mt.vapidKey
                                                                  ),
                                                    },
                                                };
                                            } else if (3 === Se.oldVersion) {
                                                const Mt = Ot;
                                                T = {
                                                    token: Mt.fcmToken,
                                                    createTime: Mt.createTime,
                                                    subscriptionOptions: {
                                                        auth: zn(Mt.auth),
                                                        p256dh: zn(Mt.p256dh),
                                                        endpoint: Mt.endpoint,
                                                        swScope: Mt.swScope,
                                                        vapidKey: zn(
                                                            Mt.vapidKey
                                                        ),
                                                    },
                                                };
                                            } else if (4 === Se.oldVersion) {
                                                const Mt = Ot;
                                                T = {
                                                    token: Mt.fcmToken,
                                                    createTime: Mt.createTime,
                                                    subscriptionOptions: {
                                                        auth: zn(Mt.auth),
                                                        p256dh: zn(Mt.p256dh),
                                                        endpoint: Mt.endpoint,
                                                        swScope: Mt.swScope,
                                                        vapidKey: zn(
                                                            Mt.vapidKey
                                                        ),
                                                    },
                                                };
                                            }
                                    });
                                    return function (Se) {
                                        return ee.apply(this, arguments);
                                    };
                                })()
                            )).close(),
                            yield (0, se.deleteDb)(rr),
                            yield (0, se.deleteDb)('fcm_vapid_details_db'),
                            yield (0, se.deleteDb)('undefined'),
                            it(T) ? T : null
                        );
                    })),
                    Ye.apply(this, arguments)
                );
            }
            function it(v) {
                if (!v || !v.subscriptionOptions) return !1;
                const { subscriptionOptions: T } = v;
                return (
                    'number' == typeof v.createTime &&
                    v.createTime > 0 &&
                    'string' == typeof v.token &&
                    v.token.length > 0 &&
                    'string' == typeof T.auth &&
                    T.auth.length > 0 &&
                    'string' == typeof T.p256dh &&
                    T.p256dh.length > 0 &&
                    'string' == typeof T.endpoint &&
                    T.endpoint.length > 0 &&
                    'string' == typeof T.swScope &&
                    T.swScope.length > 0 &&
                    'string' == typeof T.vapidKey &&
                    T.vapidKey.length > 0
                );
            }
            const _n = 'firebase-messaging-store';
            let Gt = null;
            function Nt() {
                return (
                    Gt ||
                        (Gt = (0, se.openDb)(
                            'firebase-messaging-database',
                            1,
                            (v) => {
                                0 === v.oldVersion && v.createObjectStore(_n);
                            }
                        )),
                    Gt
                );
            }
            function A(v) {
                return N.apply(this, arguments);
            }
            function N() {
                return (N = (0, H.Z)(function* (v) {
                    const T = qe(v),
                        ee = yield (yield Nt())
                            .transaction(_n)
                            .objectStore(_n)
                            .get(T);
                    if (ee) return ee;
                    {
                        const Se = yield we(v.appConfig.senderId);
                        if (Se) return yield b(v, Se), Se;
                    }
                })).apply(this, arguments);
            }
            function b(v, T) {
                return V.apply(this, arguments);
            }
            function V() {
                return (V = (0, H.Z)(function* (v, T) {
                    const B = qe(v),
                        Se = (yield Nt()).transaction(_n, 'readwrite');
                    return (
                        yield Se.objectStore(_n).put(T, B), yield Se.complete, T
                    );
                })).apply(this, arguments);
            }
            function ge(v) {
                return ke.apply(this, arguments);
            }
            function ke() {
                return (ke = (0, H.Z)(function* (v) {
                    const T = qe(v),
                        ee = (yield Nt()).transaction(_n, 'readwrite');
                    yield ee.objectStore(_n).delete(T), yield ee.complete;
                })).apply(this, arguments);
            }
            function qe({ appConfig: v }) {
                return v.appId;
            }
            const kt = new $.LL('messaging', 'Messaging', {
                'missing-app-config-values':
                    'Missing App configuration value: "{$valueName}"',
                'only-available-in-window':
                    'This method is available in a Window context.',
                'only-available-in-sw':
                    'This method is available in a service worker context.',
                'permission-default':
                    'The notification permission was not granted and dismissed instead.',
                'permission-blocked':
                    'The notification permission was not granted and blocked instead.',
                'unsupported-browser':
                    "This browser doesn't support the API's required to use the Firebase SDK.",
                'indexed-db-unsupported':
                    "This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)",
                'failed-service-worker-registration':
                    'We are unable to register the default service worker. {$browserErrorMessage}',
                'token-subscribe-failed':
                    'A problem occurred while subscribing the user to FCM: {$errorInfo}',
                'token-subscribe-no-token':
                    'FCM returned no token when subscribing the user to push.',
                'token-unsubscribe-failed':
                    'A problem occurred while unsubscribing the user from FCM: {$errorInfo}',
                'token-update-failed':
                    'A problem occurred while updating the user from FCM: {$errorInfo}',
                'token-update-no-token':
                    'FCM returned no token when updating the user to push.',
                'use-sw-after-get-token':
                    'The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.',
                'invalid-sw-registration':
                    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',
                'invalid-bg-handler':
                    'The input to setBackgroundMessageHandler() must be a function.',
                'invalid-vapid-key': 'The public VAPID key must be a string.',
                'use-vapid-key-after-get-token':
                    'The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.',
            });
            function un(v, T) {
                return At.apply(this, arguments);
            }
            function At() {
                return (At = (0, H.Z)(function* (v, T) {
                    const B = yield Wr(v),
                        ee = yi(T),
                        Se = {
                            method: 'POST',
                            headers: B,
                            body: JSON.stringify(ee),
                        };
                    let ze;
                    try {
                        ze = yield (yield fetch(ci(v.appConfig), Se)).json();
                    } catch (lt) {
                        throw kt.create('token-subscribe-failed', {
                            errorInfo: lt,
                        });
                    }
                    if (ze.error)
                        throw kt.create('token-subscribe-failed', {
                            errorInfo: ze.error.message,
                        });
                    if (!ze.token) throw kt.create('token-subscribe-no-token');
                    return ze.token;
                })).apply(this, arguments);
            }
            function jt(v, T) {
                return Pn.apply(this, arguments);
            }
            function Pn() {
                return (Pn = (0, H.Z)(function* (v, T) {
                    const B = yield Wr(v),
                        ee = yi(T.subscriptionOptions),
                        Se = {
                            method: 'PATCH',
                            headers: B,
                            body: JSON.stringify(ee),
                        };
                    let ze;
                    try {
                        ze = yield (yield fetch(
                            `${ci(v.appConfig)}/${T.token}`,
                            Se
                        )).json();
                    } catch (lt) {
                        throw kt.create('token-update-failed', {
                            errorInfo: lt,
                        });
                    }
                    if (ze.error)
                        throw kt.create('token-update-failed', {
                            errorInfo: ze.error.message,
                        });
                    if (!ze.token) throw kt.create('token-update-no-token');
                    return ze.token;
                })).apply(this, arguments);
            }
            function Ln(v, T) {
                return Kn.apply(this, arguments);
            }
            function Kn() {
                return (Kn = (0, H.Z)(function* (v, T) {
                    const ee = { method: 'DELETE', headers: yield Wr(v) };
                    try {
                        const ze = yield (yield fetch(
                            `${ci(v.appConfig)}/${T}`,
                            ee
                        )).json();
                        if (ze.error)
                            throw kt.create('token-unsubscribe-failed', {
                                errorInfo: ze.error.message,
                            });
                    } catch (Se) {
                        throw kt.create('token-unsubscribe-failed', {
                            errorInfo: Se,
                        });
                    }
                })).apply(this, arguments);
            }
            function ci({ projectId: v }) {
                return `https://fcmregistrations.googleapis.com/v1/projects/${v}/registrations`;
            }
            function Wr(v) {
                return Vt.apply(this, arguments);
            }
            function Vt() {
                return (Vt = (0, H.Z)(function* ({
                    appConfig: v,
                    installations: T,
                }) {
                    const B = yield T.getToken();
                    return new Headers({
                        'Content-Type': 'application/json',
                        Accept: 'application/json',
                        'x-goog-api-key': v.apiKey,
                        'x-goog-firebase-installations-auth': `FIS ${B}`,
                    });
                })).apply(this, arguments);
            }
            function yi({ p256dh: v, auth: T, endpoint: B, vapidKey: ee }) {
                const Se = { web: { endpoint: B, auth: T, p256dh: v } };
                return ee !== Ai && (Se.web.applicationPubKey = ee), Se;
            }
            const Ji = 6048e5;
            function wi(v) {
                return Vi.apply(this, arguments);
            }
            function Vi() {
                return (Vi = (0, H.Z)(function* (v) {
                    const T = yield ir(v.swRegistration, v.vapidKey),
                        B = {
                            vapidKey: v.vapidKey,
                            swScope: v.swRegistration.scope,
                            endpoint: T.endpoint,
                            auth: zn(T.getKey('auth')),
                            p256dh: zn(T.getKey('p256dh')),
                        },
                        ee = yield A(v.firebaseDependencies);
                    if (ee) {
                        if (xi(ee.subscriptionOptions, B))
                            return Date.now() >= ee.createTime + Ji
                                ? Ro(v, {
                                      token: ee.token,
                                      createTime: Date.now(),
                                      subscriptionOptions: B,
                                  })
                                : ee.token;
                        try {
                            yield Ln(v.firebaseDependencies, ee.token);
                        } catch (Se) {
                            console.warn(Se);
                        }
                        return an(v.firebaseDependencies, B);
                    }
                    return an(v.firebaseDependencies, B);
                })).apply(this, arguments);
            }
            function os(v) {
                return Xi.apply(this, arguments);
            }
            function Xi() {
                return (Xi = (0, H.Z)(function* (v) {
                    const T = yield A(v.firebaseDependencies);
                    T &&
                        (yield Ln(v.firebaseDependencies, T.token),
                        yield ge(v.firebaseDependencies));
                    const B =
                        yield v.swRegistration.pushManager.getSubscription();
                    return !B || B.unsubscribe();
                })).apply(this, arguments);
            }
            function Ro(v, T) {
                return et.apply(this, arguments);
            }
            function et() {
                return (et = (0, H.Z)(function* (v, T) {
                    try {
                        const B = yield jt(v.firebaseDependencies, T),
                            ee = Object.assign(Object.assign({}, T), {
                                token: B,
                                createTime: Date.now(),
                            });
                        return yield b(v.firebaseDependencies, ee), B;
                    } catch (B) {
                        throw (yield os(v), B);
                    }
                })).apply(this, arguments);
            }
            function an(v, T) {
                return zs.apply(this, arguments);
            }
            function zs() {
                return (zs = (0, H.Z)(function* (v, T) {
                    const ee = {
                        token: yield un(v, T),
                        createTime: Date.now(),
                        subscriptionOptions: T,
                    };
                    return yield b(v, ee), ee.token;
                })).apply(this, arguments);
            }
            function ir(v, T) {
                return gs.apply(this, arguments);
            }
            function gs() {
                return (gs = (0, H.Z)(function* (v, T) {
                    return (
                        (yield v.pushManager.getSubscription()) ||
                        v.pushManager.subscribe({
                            userVisibleOnly: !0,
                            applicationServerKey: Gr(T),
                        })
                    );
                })).apply(this, arguments);
            }
            function xi(v, T) {
                return (
                    T.vapidKey === v.vapidKey &&
                    T.endpoint === v.endpoint &&
                    T.auth === v.auth &&
                    T.p256dh === v.p256dh
                );
            }
            function Rr(v) {
                const T = {
                    from: v.from,
                    collapseKey: v.collapse_key,
                    messageId: v.fcmMessageId,
                };
                return (
                    (function ms(v, T) {
                        if (!T.notification) return;
                        v.notification = {};
                        const B = T.notification.title;
                        B && (v.notification.title = B);
                        const ee = T.notification.body;
                        ee && (v.notification.body = ee);
                        const Se = T.notification.image;
                        Se && (v.notification.image = Se);
                    })(T, v),
                    (function Ss(v, T) {
                        !T.data || (v.data = T.data);
                    })(T, v),
                    (function Eo(v, T) {
                        if (!T.fcmOptions) return;
                        v.fcmOptions = {};
                        const B = T.fcmOptions.link;
                        B && (v.fcmOptions.link = B);
                        const ee = T.fcmOptions.analytics_label;
                        ee && (v.fcmOptions.analyticsLabel = ee);
                    })(T, v),
                    T
                );
            }
            function Is(v) {
                return 'object' == typeof v && !!v && vr in v;
            }
            function ys(v, T) {
                const B = [];
                for (let ee = 0; ee < v.length; ee++)
                    B.push(v.charAt(ee)), ee < T.length && B.push(T.charAt(ee));
                return B.join('');
            }
            function Tr(v) {
                return kt.create('missing-app-config-values', { valueName: v });
            }
            ys(
                'hts/frbslgigp.ogepscmv/ieo/eaylg',
                'tp:/ieaeogn-agolai.o/1frlglgc/o'
            ),
                ys('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');
            class Ti {
                constructor(T, B, ee) {
                    (this.deliveryMetricsExportedToBigQueryEnabled = !1),
                        (this.onBackgroundMessageHandler = null),
                        (this.onMessageHandler = null),
                        (this.logEvents = []),
                        (this.isLogServiceStarted = !1);
                    const Se = (function _s(v) {
                        if (!v || !v.options)
                            throw Tr('App Configuration Object');
                        if (!v.name) throw Tr('App Name');
                        const T = [
                                'projectId',
                                'apiKey',
                                'appId',
                                'messagingSenderId',
                            ],
                            { options: B } = v;
                        for (const ee of T) if (!B[ee]) throw Tr(ee);
                        return {
                            appName: v.name,
                            projectId: B.projectId,
                            apiKey: B.apiKey,
                            appId: B.appId,
                            senderId: B.messagingSenderId,
                        };
                    })(T);
                    this.firebaseDependencies = {
                        app: T,
                        appConfig: Se,
                        installations: B,
                        analyticsProvider: ee,
                    };
                }
                _delete() {
                    return Promise.resolve();
                }
            }
            function Ms(v) {
                return _i.apply(this, arguments);
            }
            function _i() {
                return (_i = (0, H.Z)(function* (v) {
                    try {
                        (v.swRegistration =
                            yield navigator.serviceWorker.register(Zi, {
                                scope: ri,
                            })),
                            v.swRegistration.update().catch(() => {});
                    } catch (T) {
                        throw kt.create('failed-service-worker-registration', {
                            browserErrorMessage: T.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function Si(v, T) {
                return D.apply(this, arguments);
            }
            function D() {
                return (D = (0, H.Z)(function* (v, T) {
                    if (
                        (!T && !v.swRegistration && (yield Ms(v)),
                        T || !v.swRegistration)
                    ) {
                        if (!(T instanceof ServiceWorkerRegistration))
                            throw kt.create('invalid-sw-registration');
                        v.swRegistration = T;
                    }
                })).apply(this, arguments);
            }
            function E(v, T) {
                return g.apply(this, arguments);
            }
            function g() {
                return (g = (0, H.Z)(function* (v, T) {
                    T ? (v.vapidKey = T) : v.vapidKey || (v.vapidKey = Ai);
                })).apply(this, arguments);
            }
            function Ne() {
                return (Ne = (0, H.Z)(function* (v, T) {
                    if (!navigator) throw kt.create('only-available-in-window');
                    if (
                        ('default' === Notification.permission &&
                            (yield Notification.requestPermission()),
                        'granted' !== Notification.permission)
                    )
                        throw kt.create('permission-blocked');
                    return (
                        yield E(v, null == T ? void 0 : T.vapidKey),
                        yield Si(
                            v,
                            null == T ? void 0 : T.serviceWorkerRegistration
                        ),
                        wi(v)
                    );
                })).apply(this, arguments);
            }
            function gt(v, T, B) {
                return bn.apply(this, arguments);
            }
            function bn() {
                return (bn = (0, H.Z)(function* (v, T, B) {
                    const ee = In(T);
                    (yield v.firebaseDependencies.analyticsProvider.get()).logEvent(
                        ee,
                        {
                            message_id: B[vr],
                            message_name: B[qi],
                            message_time: B[ii],
                            message_device_time: Math.floor(Date.now() / 1e3),
                        }
                    );
                })).apply(this, arguments);
            }
            function In(v) {
                switch (v) {
                    case ui.NOTIFICATION_CLICKED:
                        return 'notification_open';
                    case ui.PUSH_RECEIVED:
                        return 'notification_foreground';
                    default:
                        throw new Error();
                }
            }
            function zr() {
                return (zr = (0, H.Z)(function* (v, T) {
                    const B = T.data;
                    if (!B.isFirebaseMessaging) return;
                    v.onMessageHandler &&
                        B.messageType === ui.PUSH_RECEIVED &&
                        ('function' == typeof v.onMessageHandler
                            ? v.onMessageHandler(Rr(B))
                            : v.onMessageHandler.next(Rr(B)));
                    const ee = B.data;
                    Is(ee) &&
                        '1' === ee[Fi] &&
                        (yield gt(v, B.messageType, ee));
                })).apply(this, arguments);
            }
            const Ei = '@firebase/messaging',
                Ks = (v) => {
                    const T = new Ti(
                        v.getProvider('app').getImmediate(),
                        v.getProvider('installations-internal').getImmediate(),
                        v.getProvider('analytics-internal')
                    );
                    return (
                        navigator.serviceWorker.addEventListener(
                            'message',
                            (B) =>
                                (function vi(v, T) {
                                    return zr.apply(this, arguments);
                                })(T, B)
                        ),
                        T
                    );
                },
                Ys = (v) => {
                    const T = v.getProvider('messaging').getImmediate();
                    return {
                        getToken: (ee) =>
                            (function x(v, T) {
                                return Ne.apply(this, arguments);
                            })(T, ee),
                    };
                };
            function Os() {
                return es.apply(this, arguments);
            }
            function es() {
                return (es = (0, H.Z)(function* () {
                    return (
                        'undefined' != typeof window &&
                        (0, $.hl)() &&
                        (yield (0, $.eu)()) &&
                        (0, $.zI)() &&
                        'serviceWorker' in navigator &&
                        'PushManager' in window &&
                        'Notification' in window &&
                        'fetch' in window &&
                        ServiceWorkerRegistration.prototype.hasOwnProperty(
                            'showNotification'
                        ) &&
                        PushSubscription.prototype.hasOwnProperty('getKey')
                    );
                })).apply(this, arguments);
            }
            !(function uo() {
                (0, w._registerComponent)(new ae.wA('messaging', Ks, 'PUBLIC')),
                    (0, w._registerComponent)(
                        new ae.wA('messaging-internal', Ys, 'PRIVATE')
                    ),
                    (0, w.registerVersion)(Ei, '0.9.7'),
                    (0, w.registerVersion)(Ei, '0.9.7', 'esm2017');
            })();
            const Ps = 'analytics',
                Do = 'firebase_id',
                Ur =
                    'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig',
                Zs = 'https://www.googletagmanager.com/gtag/js',
                Er = new re.Yd('@firebase/analytics');
            function Fs(v) {
                return Promise.all(v.map((T) => T.catch((B) => B)));
            }
            function Ii(v, T) {
                const B = document.createElement('script');
                (B.src = `${Zs}?l=${v}&id=${T}`),
                    (B.async = !0),
                    document.head.appendChild(B);
            }
            function xo(v, T, B, ee, Se, ze) {
                return co.apply(this, arguments);
            }
            function co() {
                return (co = (0, H.Z)(function* (v, T, B, ee, Se, ze) {
                    const lt = ee[Se];
                    try {
                        if (lt) yield T[lt];
                        else {
                            const Mt = (yield Fs(B)).find(
                                (kn) => kn.measurementId === Se
                            );
                            Mt && (yield T[Mt.appId]);
                        }
                    } catch (Ot) {
                        Er.error(Ot);
                    }
                    v('config', Se, ze);
                })).apply(this, arguments);
            }
            function vs(v, T, B, ee, Se) {
                return Es.apply(this, arguments);
            }
            function Es() {
                return (Es = (0, H.Z)(function* (v, T, B, ee, Se) {
                    try {
                        let ze = [];
                        if (Se && Se.send_to) {
                            let lt = Se.send_to;
                            Array.isArray(lt) || (lt = [lt]);
                            const Ot = yield Fs(B);
                            for (const Mt of lt) {
                                const kn = Ot.find(
                                        ($i) => $i.measurementId === Mt
                                    ),
                                    Dr = kn && T[kn.appId];
                                if (!Dr) {
                                    ze = [];
                                    break;
                                }
                                ze.push(Dr);
                            }
                        }
                        0 === ze.length && (ze = Object.values(T)),
                            yield Promise.all(ze),
                            v('event', ee, Se || {});
                    } catch (ze) {
                        Er.error(ze);
                    }
                })).apply(this, arguments);
            }
            function Co() {
                const v = window.document.getElementsByTagName('script');
                for (const T of Object.values(v))
                    if (T.src && T.src.includes(Zs)) return T;
                return null;
            }
            const Cr = new $.LL('analytics', 'Analytics', {
                    'already-exists':
                        'A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.',
                    'already-initialized':
                        'initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.',
                    'already-initialized-settings':
                        'Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.',
                    'interop-component-reg-failed':
                        'Firebase Analytics Interop Component failed to instantiate: {$reason}',
                    'invalid-analytics-context':
                        'Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'indexeddb-unavailable':
                        'IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'config-fetch-failed':
                        'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',
                    'no-api-key':
                        'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
                    'no-app-id':
                        'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
                }),
                go = new (class qs {
                    constructor(T = {}, B = 1e3) {
                        (this.throttleMetadata = T), (this.intervalMillis = B);
                    }
                    getThrottleMetadata(T) {
                        return this.throttleMetadata[T];
                    }
                    setThrottleMetadata(T, B) {
                        this.throttleMetadata[T] = B;
                    }
                    deleteThrottleMetadata(T) {
                        delete this.throttleMetadata[T];
                    }
                })();
            function bo(v) {
                return new Headers({
                    Accept: 'application/json',
                    'x-goog-api-key': v,
                });
            }
            function us(v) {
                return Qs.apply(this, arguments);
            }
            function Qs() {
                return (Qs = (0, H.Z)(function* (v) {
                    var T;
                    const { appId: B, apiKey: ee } = v,
                        Se = { method: 'GET', headers: bo(ee) },
                        ze = Ur.replace('{app-id}', B),
                        lt = yield fetch(ze, Se);
                    if (200 !== lt.status && 304 !== lt.status) {
                        let Ot = '';
                        try {
                            const Mt = yield lt.json();
                            (null === (T = Mt.error) || void 0 === T
                                ? void 0
                                : T.message) && (Ot = Mt.error.message);
                        } catch (Mt) {}
                        throw Cr.create('config-fetch-failed', {
                            httpStatus: lt.status,
                            responseMessage: Ot,
                        });
                    }
                    return lt.json();
                })).apply(this, arguments);
            }
            function Ds(v) {
                return Ns.apply(this, arguments);
            }
            function Ns() {
                return (Ns = (0, H.Z)(function* (v, T = go, B) {
                    const {
                        appId: ee,
                        apiKey: Se,
                        measurementId: ze,
                    } = v.options;
                    if (!ee) throw Cr.create('no-app-id');
                    if (!Se) {
                        if (ze) return { measurementId: ze, appId: ee };
                        throw Cr.create('no-api-key');
                    }
                    const lt = T.getThrottleMetadata(ee) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        },
                        Ot = new No();
                    return (
                        setTimeout(
                            (0, H.Z)(function* () {
                                Ot.abort();
                            }),
                            void 0 !== B ? B : 6e4
                        ),
                        Js(
                            { appId: ee, apiKey: Se, measurementId: ze },
                            lt,
                            Ot,
                            T
                        )
                    );
                })).apply(this, arguments);
            }
            function Js(v, T, B) {
                return Ao.apply(this, arguments);
            }
            function Ao() {
                return (Ao = (0, H.Z)(function* (
                    v,
                    { throttleEndTimeMillis: T, backoffCount: B },
                    ee,
                    Se = go
                ) {
                    const { appId: ze, measurementId: lt } = v;
                    try {
                        yield Ls(ee, T);
                    } catch (Ot) {
                        if (lt)
                            return (
                                Er.warn(
                                    `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${lt} provided in the "measurementId" field in the local Firebase config. [${Ot.message}]`
                                ),
                                { appId: ze, measurementId: lt }
                            );
                        throw Ot;
                    }
                    try {
                        const Ot = yield us(v);
                        return Se.deleteThrottleMetadata(ze), Ot;
                    } catch (Ot) {
                        if (!Xs(Ot)) {
                            if ((Se.deleteThrottleMetadata(ze), lt))
                                return (
                                    Er.warn(
                                        `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${lt} provided in the "measurementId" field in the local Firebase config. [${Ot.message}]`
                                    ),
                                    { appId: ze, measurementId: lt }
                                );
                            throw Ot;
                        }
                        const Mt =
                                503 === Number(Ot.customData.httpStatus)
                                    ? (0, $.$s)(B, Se.intervalMillis, 30)
                                    : (0, $.$s)(B, Se.intervalMillis),
                            kn = {
                                throttleEndTimeMillis: Date.now() + Mt,
                                backoffCount: B + 1,
                            };
                        return (
                            Se.setThrottleMetadata(ze, kn),
                            Er.debug(
                                `Calling attemptFetch again in ${Mt} millis`
                            ),
                            Js(v, kn, ee, Se)
                        );
                    }
                })).apply(this, arguments);
            }
            function Ls(v, T) {
                return new Promise((B, ee) => {
                    const Se = Math.max(T - Date.now(), 0),
                        ze = setTimeout(B, Se);
                    v.addEventListener(() => {
                        clearTimeout(ze),
                            ee(
                                Cr.create('fetch-throttle', {
                                    throttleEndTimeMillis: T,
                                })
                            );
                    });
                });
            }
            function Xs(v) {
                if (!(v instanceof $.ZR && v.customData)) return !1;
                const T = Number(v.customData.httpStatus);
                return 429 === T || 500 === T || 503 === T || 504 === T;
            }
            class No {
                constructor() {
                    this.listeners = [];
                }
                addEventListener(T) {
                    this.listeners.push(T);
                }
                abort() {
                    this.listeners.forEach((T) => T());
                }
            }
            function wo() {
                return cs.apply(this, arguments);
            }
            function cs() {
                return (cs = (0, H.Z)(function* () {
                    if (!(0, $.hl)())
                        return (
                            Er.warn(
                                Cr.create('indexeddb-unavailable', {
                                    errorInfo:
                                        'IndexedDB is not available in this environment.',
                                }).message
                            ),
                            !1
                        );
                    try {
                        yield (0, $.eu)();
                    } catch (v) {
                        return (
                            Er.warn(
                                Cr.create('indexeddb-unavailable', {
                                    errorInfo: v,
                                }).message
                            ),
                            !1
                        );
                    }
                    return !0;
                })).apply(this, arguments);
            }
            function p() {
                return (p = (0, H.Z)(function* (v, T, B, ee, Se, ze, lt) {
                    var Ot;
                    const Mt = Ds(v);
                    Mt.then((si) => {
                        (B[si.measurementId] = si.appId),
                            v.options.measurementId &&
                                si.measurementId !== v.options.measurementId &&
                                Er.warn(
                                    `The measurement ID in the local Firebase config (${v.options.measurementId}) does not match the measurement ID fetched from the server (${si.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                                );
                    }).catch((si) => Er.error(si)),
                        T.push(Mt);
                    const kn = wo().then((si) => {
                            if (si) return ee.getId();
                        }),
                        [Dr, $i] = yield Promise.all([Mt, kn]);
                    Co() || Ii(ze, Dr.measurementId), Se('js', new Date());
                    const gr =
                        null !== (Ot = null == lt ? void 0 : lt.config) &&
                        void 0 !== Ot
                            ? Ot
                            : {};
                    return (
                        (gr.origin = 'firebase'),
                        (gr.update = !0),
                        null != $i && (gr[Do] = $i),
                        Se('config', Dr.measurementId, gr),
                        Dr.measurementId
                    );
                })).apply(this, arguments);
            }
            class c {
                constructor(T) {
                    this.app = T;
                }
                _delete() {
                    return delete u[this.app.options.appId], Promise.resolve();
                }
            }
            let u = {},
                C = [];
            const I = {};
            let pe,
                Ge,
                k = 'dataLayer',
                Dt = !1;
            function Yn(v, T, B) {
                !(function Rt() {
                    const v = [];
                    if (
                        ((0, $.ru)() &&
                            v.push('This is a browser extension environment.'),
                        (0, $.zI)() || v.push('Cookies are not available.'),
                        v.length > 0)
                    ) {
                        const T = v
                                .map((ee, Se) => `(${Se + 1}) ${ee}`)
                                .join(' '),
                            B = Cr.create('invalid-analytics-context', {
                                errorInfo: T,
                            });
                        Er.warn(B.message);
                    }
                })();
                const ee = v.options.appId;
                if (!ee) throw Cr.create('no-app-id');
                if (!v.options.apiKey) {
                    if (!v.options.measurementId) throw Cr.create('no-api-key');
                    Er.warn(
                        `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${v.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
                    );
                }
                if (null != u[ee])
                    throw Cr.create('already-exists', { id: ee });
                if (!Dt) {
                    !(function Ni(v) {
                        let T = [];
                        Array.isArray(window[v])
                            ? (T = window[v])
                            : (window[v] = T);
                    })(k);
                    const { wrappedGtag: ze, gtagCore: lt } = (function fo(
                        v,
                        T,
                        B,
                        ee,
                        Se
                    ) {
                        let ze = function (...lt) {
                            window[ee].push(arguments);
                        };
                        return (
                            window[Se] &&
                                'function' == typeof window[Se] &&
                                (ze = window[Se]),
                            (window[Se] = (function xs(v, T, B, ee) {
                                function ze() {
                                    return (ze = (0, H.Z)(function* (
                                        lt,
                                        Ot,
                                        Mt
                                    ) {
                                        try {
                                            'event' === lt
                                                ? yield vs(v, T, B, Ot, Mt)
                                                : 'config' === lt
                                                ? yield xo(v, T, B, ee, Ot, Mt)
                                                : v('set', Ot);
                                        } catch (kn) {
                                            Er.error(kn);
                                        }
                                    })).apply(this, arguments);
                                }
                                return function Se(lt, Ot, Mt) {
                                    return ze.apply(this, arguments);
                                };
                            })(ze, v, T, B)),
                            { gtagCore: ze, wrappedGtag: window[Se] }
                        );
                    })(u, C, I, k, 'gtag');
                    (Ge = ze), (pe = lt), (Dt = !0);
                }
                return (
                    (u[ee] = (function To(v, T, B, ee, Se, ze, lt) {
                        return p.apply(this, arguments);
                    })(v, C, I, T, pe, k, B)),
                    new c(v)
                );
            }
            function ns() {
                return (ns = (0, H.Z)(function* (v, T, B, ee, Se) {
                    if (Se && Se.global) v('event', B, ee);
                    else {
                        const ze = yield T;
                        v(
                            'event',
                            B,
                            Object.assign(Object.assign({}, ee), {
                                send_to: ze,
                            })
                        );
                    }
                })).apply(this, arguments);
            }
            function vt() {
                return xt.apply(this, arguments);
            }
            function xt() {
                return (xt = (0, H.Z)(function* () {
                    if ((0, $.ru)() || !(0, $.zI)() || !(0, $.hl)()) return !1;
                    try {
                        return yield (0, $.eu)();
                    } catch (v) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            const jr = '@firebase/analytics';
            !(function Ci() {
                (0, w._registerComponent)(
                    new ae.wA(
                        Ps,
                        (T, { options: B }) =>
                            Yn(
                                T.getProvider('app').getImmediate(),
                                T.getProvider(
                                    'installations-internal'
                                ).getImmediate(),
                                B
                            ),
                        'PUBLIC'
                    )
                ),
                    (0, w._registerComponent)(
                        new ae.wA(
                            'analytics-internal',
                            function v(T) {
                                try {
                                    const B = T.getProvider(Ps).getImmediate();
                                    return {
                                        logEvent: (ee, Se, ze) =>
                                            (function dr(v, T, B, ee) {
                                                (v = (0, $.m9)(v)),
                                                    (function Zn(
                                                        v,
                                                        T,
                                                        B,
                                                        ee,
                                                        Se
                                                    ) {
                                                        return ns.apply(
                                                            this,
                                                            arguments
                                                        );
                                                    })(
                                                        Ge,
                                                        u[v.app.options.appId],
                                                        T,
                                                        B,
                                                        ee
                                                    ).catch((Se) =>
                                                        Er.error(Se)
                                                    );
                                            })(B, ee, Se, ze),
                                    };
                                } catch (B) {
                                    throw Cr.create(
                                        'interop-component-reg-failed',
                                        { reason: B }
                                    );
                                }
                            },
                            'PRIVATE'
                        )
                    ),
                    (0, w.registerVersion)(jr, '0.7.5'),
                    (0, w.registerVersion)(jr, '0.7.5', 'esm2017');
            })();
            var Fr = y(233),
                mo = y(4986),
                sr = y(8505),
                Xr = y(9468),
                Mi = y(5363);
            const Cs = new d.GfV('7.2.0'),
                di = '__angularfire_symbol__analyticsIsSupported',
                is = '__angularfire_symbol__remoteConfigIsSupported',
                bs = '__angularfire_symbol__messagingIsSupported';
            function ei(v, T, B) {
                if (T) {
                    if (1 === T.length) return T[0];
                    const ze = T.filter((lt) => lt.app === B);
                    if (1 === ze.length) return ze[0];
                }
                return B.container
                    .getProvider(v)
                    .getImmediate({ optional: !0 });
            }
            globalThis[di] ||
                (globalThis[di] = vt().then(
                    (v) =>
                        (globalThis.__angularfire_symbol__analyticsIsSupportedValue =
                            v)
                )),
                globalThis[bs] ||
                    (globalThis[bs] = Os().then(
                        (v) =>
                            (globalThis.__angularfire_symbol__messagingIsSupportedValue =
                                v)
                    )),
                globalThis[is] ||
                    (globalThis[is] = ai().then(
                        (v) =>
                            (globalThis.__angularfire_symbol__remoteConfigIsSupportedValue =
                                v)
                    ));
            const ji = (v, T) => {
                const B = T ? [T] : (0, P.C6)(),
                    ee = [];
                return (
                    B.forEach((Se) => {
                        Se.container.getProvider(v).instances.forEach((lt) => {
                            ee.includes(lt) || ee.push(lt);
                        });
                    }),
                    ee
                );
            };
            function Jn() {}
            class Hi {
                constructor(T, B = Fr.N) {
                    (this.zone = T), (this.delegate = B);
                }
                now() {
                    return this.delegate.now();
                }
                schedule(T, B, ee) {
                    const Se = this.zone;
                    return this.delegate.schedule(
                        function (lt) {
                            Se.runGuarded(() => {
                                T.apply(this, [lt]);
                            });
                        },
                        B,
                        ee
                    );
                }
            }
            class or {
                constructor(T) {
                    (this.zone = T), (this.task = null);
                }
                call(T, B) {
                    const ee = this.unscheduleTask.bind(this);
                    return (
                        (this.task = this.zone.run(() =>
                            Zone.current.scheduleMacroTask(
                                'firebaseZoneBlock',
                                Jn,
                                {},
                                Jn,
                                Jn
                            )
                        )),
                        B.pipe((0, sr.b)({ next: ee, complete: ee, error: ee }))
                            .subscribe(T)
                            .add(ee)
                    );
                }
                unscheduleTask() {
                    setTimeout(() => {
                        null != this.task &&
                            'scheduled' === this.task.state &&
                            (this.task.invoke(), (this.task = null));
                    }, 10);
                }
            }
            let Da = (() => {
                class v {
                    constructor(B) {
                        (this.ngZone = B),
                            (this.outsideAngular = B.runOutsideAngular(
                                () => new Hi(Zone.current)
                            )),
                            (this.insideAngular = B.run(
                                () => new Hi(Zone.current, mo.z)
                            )),
                            globalThis.ɵAngularFireScheduler ||
                                (globalThis.ɵAngularFireScheduler = this);
                    }
                }
                return (
                    (v.ɵfac = function (B) {
                        return new (B || v)(d.LFG(d.R0b));
                    }),
                    (v.ɵprov = d.Yz7({
                        token: v,
                        factory: v.ɵfac,
                        providedIn: 'root',
                    })),
                    v
                );
            })();
            function As() {
                const v = globalThis.ɵAngularFireScheduler;
                if (!v)
                    throw new Error(
                        "Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported)."
                    );
                return v;
            }
            function So(v) {
                return (
                    As(),
                    (function Xa(v) {
                        return function (B) {
                            return (B = B.lift(new or(v.ngZone))).pipe(
                                (0, Xr.R)(v.outsideAngular),
                                (0, Mi.Q)(v.insideAngular)
                            );
                        };
                    })(As())(v)
                );
            }
        },
        2090: (_e, z, y) => {
            'use strict';
            y.d(z, {
                BH: () => Ce,
                LL: () => Ae,
                ZR: () => Xe,
                zI: () => Re,
                US: () => ae,
                tV: () => Y,
                $s: () => Lt,
                r3: () => $n,
                ne: () => Sr,
                vZ: () => Dn,
                ZB: () => U,
                pd: () => fr,
                m9: () => $t,
                z$: () => xe,
                jU: () => Q,
                ru: () => ye,
                xb: () => Jt,
                w1: () => oe,
                hl: () => Je,
                uI: () => We,
                UG: () => de,
                b$: () => M,
                xO: () => Rn,
                zd: () => tr,
                eu: () => te,
            });
            const ae = {
                    byteToCharMap_: null,
                    charToByteMap_: null,
                    byteToCharMapWebSafe_: null,
                    charToByteMapWebSafe_: null,
                    ENCODED_VALS_BASE:
                        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
                    get ENCODED_VALS() {
                        return this.ENCODED_VALS_BASE + '+/=';
                    },
                    get ENCODED_VALS_WEBSAFE() {
                        return this.ENCODED_VALS_BASE + '-_.';
                    },
                    HAS_NATIVE_SUPPORT: 'function' == typeof atob,
                    encodeByteArray(Z, fe) {
                        if (!Array.isArray(Z))
                            throw Error(
                                'encodeByteArray takes an array as a parameter'
                            );
                        this.init_();
                        const ue = fe
                                ? this.byteToCharMapWebSafe_
                                : this.byteToCharMap_,
                            Le = [];
                        for (let Pe = 0; Pe < Z.length; Pe += 3) {
                            const pt = Z[Pe],
                                ve = Pe + 1 < Z.length,
                                je = ve ? Z[Pe + 1] : 0,
                                $e = Pe + 2 < Z.length,
                                nt = $e ? Z[Pe + 2] : 0;
                            let Xt = ((15 & je) << 2) | (nt >> 6),
                                en = 63 & nt;
                            $e || ((en = 64), ve || (Xt = 64)),
                                Le.push(
                                    ue[pt >> 2],
                                    ue[((3 & pt) << 4) | (je >> 4)],
                                    ue[Xt],
                                    ue[en]
                                );
                        }
                        return Le.join('');
                    },
                    encodeString(Z, fe) {
                        return this.HAS_NATIVE_SUPPORT && !fe
                            ? btoa(Z)
                            : this.encodeByteArray(
                                  (function (Z) {
                                      const fe = [];
                                      let ue = 0;
                                      for (let Le = 0; Le < Z.length; Le++) {
                                          let Pe = Z.charCodeAt(Le);
                                          Pe < 128
                                              ? (fe[ue++] = Pe)
                                              : Pe < 2048
                                              ? ((fe[ue++] = (Pe >> 6) | 192),
                                                (fe[ue++] = (63 & Pe) | 128))
                                              : 55296 == (64512 & Pe) &&
                                                Le + 1 < Z.length &&
                                                56320 ==
                                                    (64512 &
                                                        Z.charCodeAt(Le + 1))
                                              ? ((Pe =
                                                    65536 +
                                                    ((1023 & Pe) << 10) +
                                                    (1023 &
                                                        Z.charCodeAt(++Le))),
                                                (fe[ue++] = (Pe >> 18) | 240),
                                                (fe[ue++] =
                                                    ((Pe >> 12) & 63) | 128),
                                                (fe[ue++] =
                                                    ((Pe >> 6) & 63) | 128),
                                                (fe[ue++] = (63 & Pe) | 128))
                                              : ((fe[ue++] = (Pe >> 12) | 224),
                                                (fe[ue++] =
                                                    ((Pe >> 6) & 63) | 128),
                                                (fe[ue++] = (63 & Pe) | 128));
                                      }
                                      return fe;
                                  })(Z),
                                  fe
                              );
                    },
                    decodeString(Z, fe) {
                        return this.HAS_NATIVE_SUPPORT && !fe
                            ? atob(Z)
                            : (function (Z) {
                                  const fe = [];
                                  let ue = 0,
                                      Le = 0;
                                  for (; ue < Z.length; ) {
                                      const Pe = Z[ue++];
                                      if (Pe < 128)
                                          fe[Le++] = String.fromCharCode(Pe);
                                      else if (Pe > 191 && Pe < 224) {
                                          const pt = Z[ue++];
                                          fe[Le++] = String.fromCharCode(
                                              ((31 & Pe) << 6) | (63 & pt)
                                          );
                                      } else if (Pe > 239 && Pe < 365) {
                                          const $e =
                                              (((7 & Pe) << 18) |
                                                  ((63 & Z[ue++]) << 12) |
                                                  ((63 & Z[ue++]) << 6) |
                                                  (63 & Z[ue++])) -
                                              65536;
                                          (fe[Le++] = String.fromCharCode(
                                              55296 + ($e >> 10)
                                          )),
                                              (fe[Le++] = String.fromCharCode(
                                                  56320 + (1023 & $e)
                                              ));
                                      } else {
                                          const pt = Z[ue++],
                                              ve = Z[ue++];
                                          fe[Le++] = String.fromCharCode(
                                              ((15 & Pe) << 12) |
                                                  ((63 & pt) << 6) |
                                                  (63 & ve)
                                          );
                                      }
                                  }
                                  return fe.join('');
                              })(this.decodeStringToByteArray(Z, fe));
                    },
                    decodeStringToByteArray(Z, fe) {
                        this.init_();
                        const ue = fe
                                ? this.charToByteMapWebSafe_
                                : this.charToByteMap_,
                            Le = [];
                        for (let Pe = 0; Pe < Z.length; ) {
                            const pt = ue[Z.charAt(Pe++)],
                                je = Pe < Z.length ? ue[Z.charAt(Pe)] : 0;
                            ++Pe;
                            const nt = Pe < Z.length ? ue[Z.charAt(Pe)] : 64;
                            ++Pe;
                            const dt = Pe < Z.length ? ue[Z.charAt(Pe)] : 64;
                            if (
                                (++Pe,
                                null == pt ||
                                    null == je ||
                                    null == nt ||
                                    null == dt)
                            )
                                throw Error();
                            Le.push((pt << 2) | (je >> 4)),
                                64 !== nt &&
                                    (Le.push(((je << 4) & 240) | (nt >> 2)),
                                    64 !== dt &&
                                        Le.push(((nt << 6) & 192) | dt));
                        }
                        return Le;
                    },
                    init_() {
                        if (!this.byteToCharMap_) {
                            (this.byteToCharMap_ = {}),
                                (this.charToByteMap_ = {}),
                                (this.byteToCharMapWebSafe_ = {}),
                                (this.charToByteMapWebSafe_ = {});
                            for (let Z = 0; Z < this.ENCODED_VALS.length; Z++)
                                (this.byteToCharMap_[Z] =
                                    this.ENCODED_VALS.charAt(Z)),
                                    (this.charToByteMap_[
                                        this.byteToCharMap_[Z]
                                    ] = Z),
                                    (this.byteToCharMapWebSafe_[Z] =
                                        this.ENCODED_VALS_WEBSAFE.charAt(Z)),
                                    (this.charToByteMapWebSafe_[
                                        this.byteToCharMapWebSafe_[Z]
                                    ] = Z),
                                    Z >= this.ENCODED_VALS_BASE.length &&
                                        ((this.charToByteMap_[
                                            this.ENCODED_VALS_WEBSAFE.charAt(Z)
                                        ] = Z),
                                        (this.charToByteMapWebSafe_[
                                            this.ENCODED_VALS.charAt(Z)
                                        ] = Z));
                        }
                    },
                },
                Y = function (Z) {
                    try {
                        return ae.decodeString(Z, !0);
                    } catch (fe) {
                        console.error('base64Decode failed: ', fe);
                    }
                    return null;
                };
            function U(Z, fe) {
                if (!(fe instanceof Object)) return fe;
                switch (fe.constructor) {
                    case Date:
                        return new Date(fe.getTime());
                    case Object:
                        void 0 === Z && (Z = {});
                        break;
                    case Array:
                        Z = [];
                        break;
                    default:
                        return fe;
                }
                for (const ue in fe)
                    !fe.hasOwnProperty(ue) ||
                        !ie(ue) ||
                        (Z[ue] = U(Z[ue], fe[ue]));
                return Z;
            }
            function ie(Z) {
                return '__proto__' !== Z;
            }
            class Ce {
                constructor() {
                    (this.reject = () => {}),
                        (this.resolve = () => {}),
                        (this.promise = new Promise((fe, ue) => {
                            (this.resolve = fe), (this.reject = ue);
                        }));
                }
                wrapCallback(fe) {
                    return (ue, Le) => {
                        ue ? this.reject(ue) : this.resolve(Le),
                            'function' == typeof fe &&
                                (this.promise.catch(() => {}),
                                1 === fe.length ? fe(ue) : fe(ue, Le));
                    };
                }
            }
            function xe() {
                return 'undefined' != typeof navigator &&
                    'string' == typeof navigator.userAgent
                    ? navigator.userAgent
                    : '';
            }
            function We() {
                return (
                    'undefined' != typeof window &&
                    !!(window.cordova || window.phonegap || window.PhoneGap) &&
                    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(
                        xe()
                    )
                );
            }
            function de() {
                try {
                    return (
                        '[object process]' ===
                        Object.prototype.toString.call(global.process)
                    );
                } catch (Z) {
                    return !1;
                }
            }
            function Q() {
                return 'object' == typeof self && self.self === self;
            }
            function ye() {
                const Z =
                    'object' == typeof chrome
                        ? chrome.runtime
                        : 'object' == typeof browser
                        ? browser.runtime
                        : void 0;
                return 'object' == typeof Z && void 0 !== Z.id;
            }
            function M() {
                return (
                    'object' == typeof navigator &&
                    'ReactNative' === navigator.product
                );
            }
            function oe() {
                const Z = xe();
                return Z.indexOf('MSIE ') >= 0 || Z.indexOf('Trident/') >= 0;
            }
            function Je() {
                return 'object' == typeof indexedDB;
            }
            function te() {
                return new Promise((Z, fe) => {
                    try {
                        let ue = !0;
                        const Le =
                                'validate-browser-context-for-indexeddb-analytics-module',
                            Pe = self.indexedDB.open(Le);
                        (Pe.onsuccess = () => {
                            Pe.result.close(),
                                ue || self.indexedDB.deleteDatabase(Le),
                                Z(!0);
                        }),
                            (Pe.onupgradeneeded = () => {
                                ue = !1;
                            }),
                            (Pe.onerror = () => {
                                var pt;
                                fe(
                                    (null === (pt = Pe.error) || void 0 === pt
                                        ? void 0
                                        : pt.message) || ''
                                );
                            });
                    } catch (ue) {
                        fe(ue);
                    }
                });
            }
            function Re() {
                return !(
                    'undefined' == typeof navigator || !navigator.cookieEnabled
                );
            }
            class Xe extends Error {
                constructor(fe, ue, Le) {
                    super(ue),
                        (this.code = fe),
                        (this.customData = Le),
                        (this.name = 'FirebaseError'),
                        Object.setPrototypeOf(this, Xe.prototype),
                        Error.captureStackTrace &&
                            Error.captureStackTrace(this, Ae.prototype.create);
                }
            }
            class Ae {
                constructor(fe, ue, Le) {
                    (this.service = fe),
                        (this.serviceName = ue),
                        (this.errors = Le);
                }
                create(fe, ...ue) {
                    const Le = ue[0] || {},
                        Pe = `${this.service}/${fe}`,
                        pt = this.errors[fe],
                        ve = pt
                            ? (function wt(Z, fe) {
                                  return Z.replace(rn, (ue, Le) => {
                                      const Pe = fe[Le];
                                      return null != Pe
                                          ? String(Pe)
                                          : `<${Le}?>`;
                                  });
                              })(pt, Le)
                            : 'Error';
                    return new Xe(
                        Pe,
                        `${this.serviceName}: ${ve} (${Pe}).`,
                        Le
                    );
                }
            }
            const rn = /\{\$([^}]+)}/g;
            function $n(Z, fe) {
                return Object.prototype.hasOwnProperty.call(Z, fe);
            }
            function Jt(Z) {
                for (const fe in Z)
                    if (Object.prototype.hasOwnProperty.call(Z, fe)) return !1;
                return !0;
            }
            function Dn(Z, fe) {
                if (Z === fe) return !0;
                const ue = Object.keys(Z),
                    Le = Object.keys(fe);
                for (const Pe of ue) {
                    if (!Le.includes(Pe)) return !1;
                    const pt = Z[Pe],
                        ve = fe[Pe];
                    if (cn(pt) && cn(ve)) {
                        if (!Dn(pt, ve)) return !1;
                    } else if (pt !== ve) return !1;
                }
                for (const Pe of Le) if (!ue.includes(Pe)) return !1;
                return !0;
            }
            function cn(Z) {
                return null !== Z && 'object' == typeof Z;
            }
            function Rn(Z) {
                const fe = [];
                for (const [ue, Le] of Object.entries(Z))
                    Array.isArray(Le)
                        ? Le.forEach((Pe) => {
                              fe.push(
                                  encodeURIComponent(ue) +
                                      '=' +
                                      encodeURIComponent(Pe)
                              );
                          })
                        : fe.push(
                              encodeURIComponent(ue) +
                                  '=' +
                                  encodeURIComponent(Le)
                          );
                return fe.length ? '&' + fe.join('&') : '';
            }
            function tr(Z) {
                const fe = {};
                return (
                    Z.replace(/^\?/, '')
                        .split('&')
                        .forEach((Le) => {
                            if (Le) {
                                const [Pe, pt] = Le.split('=');
                                fe[decodeURIComponent(Pe)] =
                                    decodeURIComponent(pt);
                            }
                        }),
                    fe
                );
            }
            function fr(Z) {
                const fe = Z.indexOf('?');
                if (!fe) return '';
                const ue = Z.indexOf('#', fe);
                return Z.substring(fe, ue > 0 ? ue : void 0);
            }
            function Sr(Z, fe) {
                const ue = new St(Z, fe);
                return ue.subscribe.bind(ue);
            }
            class St {
                constructor(fe, ue) {
                    (this.observers = []),
                        (this.unsubscribes = []),
                        (this.observerCount = 0),
                        (this.task = Promise.resolve()),
                        (this.finalized = !1),
                        (this.onNoObservers = ue),
                        this.task
                            .then(() => {
                                fe(this);
                            })
                            .catch((Le) => {
                                this.error(Le);
                            });
                }
                next(fe) {
                    this.forEachObserver((ue) => {
                        ue.next(fe);
                    });
                }
                error(fe) {
                    this.forEachObserver((ue) => {
                        ue.error(fe);
                    }),
                        this.close(fe);
                }
                complete() {
                    this.forEachObserver((fe) => {
                        fe.complete();
                    }),
                        this.close();
                }
                subscribe(fe, ue, Le) {
                    let Pe;
                    if (void 0 === fe && void 0 === ue && void 0 === Le)
                        throw new Error('Missing Observer.');
                    (Pe = (function Fn(Z, fe) {
                        if ('object' != typeof Z || null === Z) return !1;
                        for (const ue of fe)
                            if (ue in Z && 'function' == typeof Z[ue])
                                return !0;
                        return !1;
                    })(fe, ['next', 'error', 'complete'])
                        ? fe
                        : { next: fe, error: ue, complete: Le }),
                        void 0 === Pe.next && (Pe.next = gn),
                        void 0 === Pe.error && (Pe.error = gn),
                        void 0 === Pe.complete && (Pe.complete = gn);
                    const pt = this.unsubscribeOne.bind(
                        this,
                        this.observers.length
                    );
                    return (
                        this.finalized &&
                            this.task.then(() => {
                                try {
                                    this.finalError
                                        ? Pe.error(this.finalError)
                                        : Pe.complete();
                                } catch (ve) {}
                            }),
                        this.observers.push(Pe),
                        pt
                    );
                }
                unsubscribeOne(fe) {
                    void 0 === this.observers ||
                        void 0 === this.observers[fe] ||
                        (delete this.observers[fe],
                        (this.observerCount -= 1),
                        0 === this.observerCount &&
                            void 0 !== this.onNoObservers &&
                            this.onNoObservers(this));
                }
                forEachObserver(fe) {
                    if (!this.finalized)
                        for (let ue = 0; ue < this.observers.length; ue++)
                            this.sendOne(ue, fe);
                }
                sendOne(fe, ue) {
                    this.task.then(() => {
                        if (
                            void 0 !== this.observers &&
                            void 0 !== this.observers[fe]
                        )
                            try {
                                ue(this.observers[fe]);
                            } catch (Le) {
                                'undefined' != typeof console &&
                                    console.error &&
                                    console.error(Le);
                            }
                    });
                }
                close(fe) {
                    this.finalized ||
                        ((this.finalized = !0),
                        void 0 !== fe && (this.finalError = fe),
                        this.task.then(() => {
                            (this.observers = void 0),
                                (this.onNoObservers = void 0);
                        }));
                }
            }
            function gn() {}
            function Lt(Z, fe = 1e3, ue = 2) {
                const Le = fe * Math.pow(ue, Z),
                    Pe = Math.round(0.5 * Le * (Math.random() - 0.5) * 2);
                return Math.min(144e5, Le + Pe);
            }
            function $t(Z) {
                return Z && Z._delegate ? Z._delegate : Z;
            }
        },
        2957: (_e, z, y) => {
            'use strict';
            var d = y(9808),
                P = y(5e3);
            class H extends d.w_ {
                constructor() {
                    super(...arguments), (this.supportsDOMEvents = !0);
                }
            }
            class w extends H {
                static makeCurrent() {
                    (0, d.HT)(new w());
                }
                onAndCancel(o, a, f) {
                    return (
                        o.addEventListener(a, f, !1),
                        () => {
                            o.removeEventListener(a, f, !1);
                        }
                    );
                }
                dispatchEvent(o, a) {
                    o.dispatchEvent(a);
                }
                remove(o) {
                    o.parentNode && o.parentNode.removeChild(o);
                }
                createElement(o, a) {
                    return (a = a || this.getDefaultDocument()).createElement(
                        o
                    );
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument(
                        'fakeTitle'
                    );
                }
                getDefaultDocument() {
                    return document;
                }
                isElementNode(o) {
                    return o.nodeType === Node.ELEMENT_NODE;
                }
                isShadowRoot(o) {
                    return o instanceof DocumentFragment;
                }
                getGlobalEventTarget(o, a) {
                    return 'window' === a
                        ? window
                        : 'document' === a
                        ? o
                        : 'body' === a
                        ? o.body
                        : null;
                }
                getBaseHref(o) {
                    const a = (function ae() {
                        return (
                            ($ = $ || document.querySelector('base')),
                            $ ? $.getAttribute('href') : null
                        );
                    })();
                    return null == a
                        ? null
                        : (function se(_) {
                              (re = re || document.createElement('a')),
                                  re.setAttribute('href', _);
                              const o = re.pathname;
                              return '/' === o.charAt(0) ? o : `/${o}`;
                          })(a);
                }
                resetBaseElement() {
                    $ = null;
                }
                getUserAgent() {
                    return window.navigator.userAgent;
                }
                getCookie(o) {
                    return (0, d.Mx)(document.cookie, o);
                }
            }
            let re,
                $ = null;
            const Y = new P.OlP('TRANSITION_ID'),
                U = [
                    {
                        provide: P.ip1,
                        useFactory: function j(_, o, a) {
                            return () => {
                                a.get(P.CZH).donePromise.then(() => {
                                    const f = (0, d.q)(),
                                        S = o.querySelectorAll(
                                            `style[ng-transition="${_}"]`
                                        );
                                    for (let L = 0; L < S.length; L++)
                                        f.remove(S[L]);
                                });
                            };
                        },
                        deps: [Y, d.K0, P.zs3],
                        multi: !0,
                    },
                ];
            class ie {
                static init() {
                    (0, P.VLi)(new ie());
                }
                addToWindow(o) {
                    (P.dqk.getAngularTestability = (f, S = !0) => {
                        const L = o.findTestabilityInTree(f, S);
                        if (null == L)
                            throw new Error(
                                'Could not find testability for element.'
                            );
                        return L;
                    }),
                        (P.dqk.getAllAngularTestabilities = () =>
                            o.getAllTestabilities()),
                        (P.dqk.getAllAngularRootElements = () =>
                            o.getAllRootElements()),
                        P.dqk.frameworkStabilizers ||
                            (P.dqk.frameworkStabilizers = []),
                        P.dqk.frameworkStabilizers.push((f) => {
                            const S = P.dqk.getAllAngularTestabilities();
                            let L = S.length,
                                K = !1;
                            const le = function (Te) {
                                (K = K || Te), L--, 0 == L && f(K);
                            };
                            S.forEach(function (Te) {
                                Te.whenStable(le);
                            });
                        });
                }
                findTestabilityInTree(o, a, f) {
                    if (null == a) return null;
                    const S = o.getTestability(a);
                    return null != S
                        ? S
                        : f
                        ? (0, d.q)().isShadowRoot(a)
                            ? this.findTestabilityInTree(o, a.host, !0)
                            : this.findTestabilityInTree(o, a.parentElement, !0)
                        : null;
                }
            }
            let Ce = (() => {
                class _ {
                    build() {
                        return new XMLHttpRequest();
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)();
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            const be = new P.OlP('EventManagerPlugins');
            let xe = (() => {
                class _ {
                    constructor(a, f) {
                        (this._zone = f),
                            (this._eventNameToPlugin = new Map()),
                            a.forEach((S) => (S.manager = this)),
                            (this._plugins = a.slice().reverse());
                    }
                    addEventListener(a, f, S) {
                        return this._findPluginFor(f).addEventListener(a, f, S);
                    }
                    addGlobalEventListener(a, f, S) {
                        return this._findPluginFor(f).addGlobalEventListener(
                            a,
                            f,
                            S
                        );
                    }
                    getZone() {
                        return this._zone;
                    }
                    _findPluginFor(a) {
                        const f = this._eventNameToPlugin.get(a);
                        if (f) return f;
                        const S = this._plugins;
                        for (let L = 0; L < S.length; L++) {
                            const K = S[L];
                            if (K.supports(a))
                                return this._eventNameToPlugin.set(a, K), K;
                        }
                        throw new Error(
                            `No event manager plugin found for event ${a}`
                        );
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(P.LFG(be), P.LFG(P.R0b));
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            class We {
                constructor(o) {
                    this._doc = o;
                }
                addGlobalEventListener(o, a, f) {
                    const S = (0, d.q)().getGlobalEventTarget(this._doc, o);
                    if (!S)
                        throw new Error(
                            `Unsupported event target ${S} for event ${a}`
                        );
                    return this.addEventListener(S, a, f);
                }
            }
            let de = (() => {
                    class _ {
                        constructor() {
                            this._stylesSet = new Set();
                        }
                        addStyles(a) {
                            const f = new Set();
                            a.forEach((S) => {
                                this._stylesSet.has(S) ||
                                    (this._stylesSet.add(S), f.add(S));
                            }),
                                this.onStylesAdded(f);
                        }
                        onStylesAdded(a) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet);
                        }
                    }
                    return (
                        (_.ɵfac = function (a) {
                            return new (a || _)();
                        }),
                        (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                        _
                    );
                })(),
                Q = (() => {
                    class _ extends de {
                        constructor(a) {
                            super(),
                                (this._doc = a),
                                (this._hostNodes = new Map()),
                                this._hostNodes.set(a.head, []);
                        }
                        _addStylesToHost(a, f, S) {
                            a.forEach((L) => {
                                const K = this._doc.createElement('style');
                                (K.textContent = L), S.push(f.appendChild(K));
                            });
                        }
                        addHost(a) {
                            const f = [];
                            this._addStylesToHost(this._stylesSet, a, f),
                                this._hostNodes.set(a, f);
                        }
                        removeHost(a) {
                            const f = this._hostNodes.get(a);
                            f && f.forEach(ye), this._hostNodes.delete(a);
                        }
                        onStylesAdded(a) {
                            this._hostNodes.forEach((f, S) => {
                                this._addStylesToHost(a, S, f);
                            });
                        }
                        ngOnDestroy() {
                            this._hostNodes.forEach((a) => a.forEach(ye));
                        }
                    }
                    return (
                        (_.ɵfac = function (a) {
                            return new (a || _)(P.LFG(d.K0));
                        }),
                        (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                        _
                    );
                })();
            function ye(_) {
                (0, d.q)().remove(_);
            }
            const M = {
                    svg: 'http://www.w3.org/2000/svg',
                    xhtml: 'http://www.w3.org/1999/xhtml',
                    xlink: 'http://www.w3.org/1999/xlink',
                    xml: 'http://www.w3.org/XML/1998/namespace',
                    xmlns: 'http://www.w3.org/2000/xmlns/',
                    math: 'http://www.w3.org/1998/MathML/',
                },
                R = /%COMP%/g,
                J = '%COMP%',
                Ve = `_nghost-${J}`,
                He = `_ngcontent-${J}`;
            function Re(_, o, a) {
                for (let f = 0; f < o.length; f++) {
                    let S = o[f];
                    Array.isArray(S)
                        ? Re(_, S, a)
                        : ((S = S.replace(R, _)), a.push(S));
                }
                return a;
            }
            function Oe(_) {
                return (o) => {
                    if ('__ngUnwrap__' === o) return _;
                    !1 === _(o) && (o.preventDefault(), (o.returnValue = !1));
                };
            }
            let Xe = (() => {
                class _ {
                    constructor(a, f, S) {
                        (this.eventManager = a),
                            (this.sharedStylesHost = f),
                            (this.appId = S),
                            (this.rendererByCompId = new Map()),
                            (this.defaultRenderer = new Ae(a));
                    }
                    createRenderer(a, f) {
                        if (!a || !f) return this.defaultRenderer;
                        switch (f.encapsulation) {
                            case P.ifc.Emulated: {
                                let S = this.rendererByCompId.get(f.id);
                                return (
                                    S ||
                                        ((S = new Bn(
                                            this.eventManager,
                                            this.sharedStylesHost,
                                            f,
                                            this.appId
                                        )),
                                        this.rendererByCompId.set(f.id, S)),
                                    S.applyToHost(a),
                                    S
                                );
                            }
                            case 1:
                            case P.ifc.ShadowDom:
                                return new Et(
                                    this.eventManager,
                                    this.sharedStylesHost,
                                    a,
                                    f
                                );
                            default:
                                if (!this.rendererByCompId.has(f.id)) {
                                    const S = Re(f.id, f.styles, []);
                                    this.sharedStylesHost.addStyles(S),
                                        this.rendererByCompId.set(
                                            f.id,
                                            this.defaultRenderer
                                        );
                                }
                                return this.defaultRenderer;
                        }
                    }
                    begin() {}
                    end() {}
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(P.LFG(xe), P.LFG(Q), P.LFG(P.AFp));
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            class Ae {
                constructor(o) {
                    (this.eventManager = o),
                        (this.data = Object.create(null)),
                        (this.destroyNode = null);
                }
                destroy() {}
                createElement(o, a) {
                    return a
                        ? document.createElementNS(M[a] || a, o)
                        : document.createElement(o);
                }
                createComment(o) {
                    return document.createComment(o);
                }
                createText(o) {
                    return document.createTextNode(o);
                }
                appendChild(o, a) {
                    o.appendChild(a);
                }
                insertBefore(o, a, f) {
                    o && o.insertBefore(a, f);
                }
                removeChild(o, a) {
                    o && o.removeChild(a);
                }
                selectRootElement(o, a) {
                    let f =
                        'string' == typeof o ? document.querySelector(o) : o;
                    if (!f)
                        throw new Error(
                            `The selector "${o}" did not match any elements`
                        );
                    return a || (f.textContent = ''), f;
                }
                parentNode(o) {
                    return o.parentNode;
                }
                nextSibling(o) {
                    return o.nextSibling;
                }
                setAttribute(o, a, f, S) {
                    if (S) {
                        a = S + ':' + a;
                        const L = M[S];
                        L ? o.setAttributeNS(L, a, f) : o.setAttribute(a, f);
                    } else o.setAttribute(a, f);
                }
                removeAttribute(o, a, f) {
                    if (f) {
                        const S = M[f];
                        S
                            ? o.removeAttributeNS(S, a)
                            : o.removeAttribute(`${f}:${a}`);
                    } else o.removeAttribute(a);
                }
                addClass(o, a) {
                    o.classList.add(a);
                }
                removeClass(o, a) {
                    o.classList.remove(a);
                }
                setStyle(o, a, f, S) {
                    S & (P.JOm.DashCase | P.JOm.Important)
                        ? o.style.setProperty(
                              a,
                              f,
                              S & P.JOm.Important ? 'important' : ''
                          )
                        : (o.style[a] = f);
                }
                removeStyle(o, a, f) {
                    f & P.JOm.DashCase
                        ? o.style.removeProperty(a)
                        : (o.style[a] = '');
                }
                setProperty(o, a, f) {
                    o[a] = f;
                }
                setValue(o, a) {
                    o.nodeValue = a;
                }
                listen(o, a, f) {
                    return 'string' == typeof o
                        ? this.eventManager.addGlobalEventListener(o, a, Oe(f))
                        : this.eventManager.addEventListener(o, a, Oe(f));
                }
            }
            class Bn extends Ae {
                constructor(o, a, f, S) {
                    super(o), (this.component = f);
                    const L = Re(S + '-' + f.id, f.styles, []);
                    a.addStyles(L),
                        (this.contentAttr = (function Je(_) {
                            return He.replace(R, _);
                        })(S + '-' + f.id)),
                        (this.hostAttr = (function te(_) {
                            return Ve.replace(R, _);
                        })(S + '-' + f.id));
                }
                applyToHost(o) {
                    super.setAttribute(o, this.hostAttr, '');
                }
                createElement(o, a) {
                    const f = super.createElement(o, a);
                    return super.setAttribute(f, this.contentAttr, ''), f;
                }
            }
            class Et extends Ae {
                constructor(o, a, f, S) {
                    super(o),
                        (this.sharedStylesHost = a),
                        (this.hostEl = f),
                        (this.shadowRoot = f.attachShadow({ mode: 'open' })),
                        this.sharedStylesHost.addHost(this.shadowRoot);
                    const L = Re(S.id, S.styles, []);
                    for (let K = 0; K < L.length; K++) {
                        const le = document.createElement('style');
                        (le.textContent = L[K]),
                            this.shadowRoot.appendChild(le);
                    }
                }
                nodeOrShadowRoot(o) {
                    return o === this.hostEl ? this.shadowRoot : o;
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot);
                }
                appendChild(o, a) {
                    return super.appendChild(this.nodeOrShadowRoot(o), a);
                }
                insertBefore(o, a, f) {
                    return super.insertBefore(this.nodeOrShadowRoot(o), a, f);
                }
                removeChild(o, a) {
                    return super.removeChild(this.nodeOrShadowRoot(o), a);
                }
                parentNode(o) {
                    return this.nodeOrShadowRoot(
                        super.parentNode(this.nodeOrShadowRoot(o))
                    );
                }
            }
            let _t = (() => {
                class _ extends We {
                    constructor(a) {
                        super(a);
                    }
                    supports(a) {
                        return !0;
                    }
                    addEventListener(a, f, S) {
                        return (
                            a.addEventListener(f, S, !1),
                            () => this.removeEventListener(a, f, S)
                        );
                    }
                    removeEventListener(a, f, S) {
                        return a.removeEventListener(f, S);
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(P.LFG(d.K0));
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            const Vn = ['alt', 'control', 'meta', 'shift'],
                sn = {
                    '\b': 'Backspace',
                    '\t': 'Tab',
                    '\x7f': 'Delete',
                    '\x1b': 'Escape',
                    Del: 'Delete',
                    Esc: 'Escape',
                    Left: 'ArrowLeft',
                    Right: 'ArrowRight',
                    Up: 'ArrowUp',
                    Down: 'ArrowDown',
                    Menu: 'ContextMenu',
                    Scroll: 'ScrollLock',
                    Win: 'OS',
                },
                Ft = {
                    A: '1',
                    B: '2',
                    C: '3',
                    D: '4',
                    E: '5',
                    F: '6',
                    G: '7',
                    H: '8',
                    I: '9',
                    J: '*',
                    K: '+',
                    M: '-',
                    N: '.',
                    O: '/',
                    '`': '0',
                    '\x90': 'NumLock',
                },
                $n = {
                    alt: (_) => _.altKey,
                    control: (_) => _.ctrlKey,
                    meta: (_) => _.metaKey,
                    shift: (_) => _.shiftKey,
                };
            let An = (() => {
                class _ extends We {
                    constructor(a) {
                        super(a);
                    }
                    supports(a) {
                        return null != _.parseEventName(a);
                    }
                    addEventListener(a, f, S) {
                        const L = _.parseEventName(f),
                            K = _.eventCallback(
                                L.fullKey,
                                S,
                                this.manager.getZone()
                            );
                        return this.manager
                            .getZone()
                            .runOutsideAngular(() =>
                                (0, d.q)().onAndCancel(a, L.domEventName, K)
                            );
                    }
                    static parseEventName(a) {
                        const f = a.toLowerCase().split('.'),
                            S = f.shift();
                        if (
                            0 === f.length ||
                            ('keydown' !== S && 'keyup' !== S)
                        )
                            return null;
                        const L = _._normalizeKey(f.pop());
                        let K = '';
                        if (
                            (Vn.forEach((Te) => {
                                const Ze = f.indexOf(Te);
                                Ze > -1 && (f.splice(Ze, 1), (K += Te + '.'));
                            }),
                            (K += L),
                            0 != f.length || 0 === L.length)
                        )
                            return null;
                        const le = {};
                        return (le.domEventName = S), (le.fullKey = K), le;
                    }
                    static getEventFullKey(a) {
                        let f = '',
                            S = (function Jt(_) {
                                let o = _.key;
                                if (null == o) {
                                    if (((o = _.keyIdentifier), null == o))
                                        return 'Unidentified';
                                    o.startsWith('U+') &&
                                        ((o = String.fromCharCode(
                                            parseInt(o.substring(2), 16)
                                        )),
                                        3 === _.location &&
                                            Ft.hasOwnProperty(o) &&
                                            (o = Ft[o]));
                                }
                                return sn[o] || o;
                            })(a);
                        return (
                            (S = S.toLowerCase()),
                            ' ' === S
                                ? (S = 'space')
                                : '.' === S && (S = 'dot'),
                            Vn.forEach((L) => {
                                L != S && $n[L](a) && (f += L + '.');
                            }),
                            (f += S),
                            f
                        );
                    }
                    static eventCallback(a, f, S) {
                        return (L) => {
                            _.getEventFullKey(L) === a &&
                                S.runGuarded(() => f(L));
                        };
                    }
                    static _normalizeKey(a) {
                        return 'esc' === a ? 'escape' : a;
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(P.LFG(d.K0));
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            const tr = (0, P.eFA)(P._c5, 'browser', [
                    { provide: P.Lbi, useValue: d.bD },
                    {
                        provide: P.g9A,
                        useValue: function ar() {
                            w.makeCurrent(), ie.init();
                        },
                        multi: !0,
                    },
                    {
                        provide: d.K0,
                        useFactory: function cn() {
                            return (0, P.RDi)(document), document;
                        },
                        deps: [],
                    },
                ]),
                fr = [
                    { provide: P.zSh, useValue: 'root' },
                    {
                        provide: P.qLn,
                        useFactory: function Dn() {
                            return new P.qLn();
                        },
                        deps: [],
                    },
                    {
                        provide: be,
                        useClass: _t,
                        multi: !0,
                        deps: [d.K0, P.R0b, P.Lbi],
                    },
                    { provide: be, useClass: An, multi: !0, deps: [d.K0] },
                    { provide: Xe, useClass: Xe, deps: [xe, Q, P.AFp] },
                    { provide: P.FYo, useExisting: Xe },
                    { provide: de, useExisting: Q },
                    { provide: Q, useClass: Q, deps: [d.K0] },
                    { provide: P.dDg, useClass: P.dDg, deps: [P.R0b] },
                    { provide: xe, useClass: xe, deps: [be, P.R0b] },
                    { provide: d.JF, useClass: Ce, deps: [] },
                ];
            let Hn = (() => {
                class _ {
                    constructor(a) {
                        if (a)
                            throw new Error(
                                'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
                            );
                    }
                    static withServerTransition(a) {
                        return {
                            ngModule: _,
                            providers: [
                                { provide: P.AFp, useValue: a.appId },
                                { provide: Y, useExisting: P.AFp },
                                U,
                            ],
                        };
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(P.LFG(_, 12));
                    }),
                    (_.ɵmod = P.oAB({ type: _ })),
                    (_.ɵinj = P.cJS({ providers: fr, imports: [d.ez, P.hGG] })),
                    _
                );
            })();
            'undefined' != typeof window && window;
            var bt = y(6115);
            let Xn = (() => {
                class _ {}
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)();
                    }),
                    (_.ɵcmp = P.Xpm({
                        type: _,
                        selectors: [['sol-root']],
                        decls: 1,
                        vars: 0,
                        template: function (a, f) {
                            1 & a && P._UZ(0, 'router-outlet');
                        },
                        directives: [bt.lC],
                        styles: [''],
                        changeDetection: 0,
                    })),
                    _
                );
            })();
            class yr {}
            const ln = '*';
            function ti(_, o = null) {
                return { type: 2, steps: _, options: o };
            }
            function br(_) {
                return { type: 6, styles: _, offset: null };
            }
            function er(_) {
                Promise.resolve(null).then(_);
            }
            class hr {
                constructor(o = 0, a = 0) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._onDestroyFns = []),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._position = 0),
                        (this.parentPlayer = null),
                        (this.totalTime = o + a);
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((o) => o()),
                        (this._onDoneFns = []));
                }
                onStart(o) {
                    this._onStartFns.push(o);
                }
                onDone(o) {
                    this._onDoneFns.push(o);
                }
                onDestroy(o) {
                    this._onDestroyFns.push(o);
                }
                hasStarted() {
                    return this._started;
                }
                init() {}
                play() {
                    this.hasStarted() ||
                        (this._onStart(), this.triggerMicrotask()),
                        (this._started = !0);
                }
                triggerMicrotask() {
                    er(() => this._onFinish());
                }
                _onStart() {
                    this._onStartFns.forEach((o) => o()),
                        (this._onStartFns = []);
                }
                pause() {}
                restart() {}
                finish() {
                    this._onFinish();
                }
                destroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this.hasStarted() || this._onStart(),
                        this.finish(),
                        this._onDestroyFns.forEach((o) => o()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this._started = !1;
                }
                setPosition(o) {
                    this._position = this.totalTime ? o * this.totalTime : 1;
                }
                getPosition() {
                    return this.totalTime ? this._position / this.totalTime : 1;
                }
                triggerCallback(o) {
                    const a = 'start' == o ? this._onStartFns : this._onDoneFns;
                    a.forEach((f) => f()), (a.length = 0);
                }
            }
            class En {
                constructor(o) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._finished = !1),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._onDestroyFns = []),
                        (this.parentPlayer = null),
                        (this.totalTime = 0),
                        (this.players = o);
                    let a = 0,
                        f = 0,
                        S = 0;
                    const L = this.players.length;
                    0 == L
                        ? er(() => this._onFinish())
                        : this.players.forEach((K) => {
                              K.onDone(() => {
                                  ++a == L && this._onFinish();
                              }),
                                  K.onDestroy(() => {
                                      ++f == L && this._onDestroy();
                                  }),
                                  K.onStart(() => {
                                      ++S == L && this._onStart();
                                  });
                          }),
                        (this.totalTime = this.players.reduce(
                            (K, le) => Math.max(K, le.totalTime),
                            0
                        ));
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((o) => o()),
                        (this._onDoneFns = []));
                }
                init() {
                    this.players.forEach((o) => o.init());
                }
                onStart(o) {
                    this._onStartFns.push(o);
                }
                _onStart() {
                    this.hasStarted() ||
                        ((this._started = !0),
                        this._onStartFns.forEach((o) => o()),
                        (this._onStartFns = []));
                }
                onDone(o) {
                    this._onDoneFns.push(o);
                }
                onDestroy(o) {
                    this._onDestroyFns.push(o);
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this.parentPlayer || this.init(),
                        this._onStart(),
                        this.players.forEach((o) => o.play());
                }
                pause() {
                    this.players.forEach((o) => o.pause());
                }
                restart() {
                    this.players.forEach((o) => o.restart());
                }
                finish() {
                    this._onFinish(), this.players.forEach((o) => o.finish());
                }
                destroy() {
                    this._onDestroy();
                }
                _onDestroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this._onFinish(),
                        this.players.forEach((o) => o.destroy()),
                        this._onDestroyFns.forEach((o) => o()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this.players.forEach((o) => o.reset()),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._started = !1);
                }
                setPosition(o) {
                    const a = o * this.totalTime;
                    this.players.forEach((f) => {
                        const S = f.totalTime
                            ? Math.min(1, a / f.totalTime)
                            : 1;
                        f.setPosition(S);
                    });
                }
                getPosition() {
                    const o = this.players.reduce(
                        (a, f) =>
                            null === a || f.totalTime > a.totalTime ? f : a,
                        null
                    );
                    return null != o ? o.getPosition() : 0;
                }
                beforeDestroy() {
                    this.players.forEach((o) => {
                        o.beforeDestroy && o.beforeDestroy();
                    });
                }
                triggerCallback(o) {
                    const a = 'start' == o ? this._onStartFns : this._onDoneFns;
                    a.forEach((f) => f()), (a.length = 0);
                }
            }
            function Sn() {
                return (
                    'undefined' != typeof window && void 0 !== window.document
                );
            }
            function xr() {
                return (
                    'undefined' != typeof process &&
                    '[object process]' === {}.toString.call(process)
                );
            }
            function Cn(_) {
                switch (_.length) {
                    case 0:
                        return new hr();
                    case 1:
                        return _[0];
                    default:
                        return new En(_);
                }
            }
            function Ht(_, o, a, f, S = {}, L = {}) {
                const K = [],
                    le = [];
                let Te = -1,
                    Ze = null;
                if (
                    (f.forEach((vt) => {
                        const xt = vt.offset,
                            It = xt == Te,
                            Mn = (It && Ze) || {};
                        Object.keys(vt).forEach((qt) => {
                            let vn = qt,
                                dr = vt[qt];
                            if ('offset' !== qt)
                                switch (
                                    ((vn = o.normalizePropertyName(vn, K)), dr)
                                ) {
                                    case '!':
                                        dr = S[qt];
                                        break;
                                    case ln:
                                        dr = L[qt];
                                        break;
                                    default:
                                        dr = o.normalizeStyleValue(
                                            qt,
                                            vn,
                                            dr,
                                            K
                                        );
                                }
                            Mn[vn] = dr;
                        }),
                            It || le.push(Mn),
                            (Ze = Mn),
                            (Te = xt);
                    }),
                    K.length)
                ) {
                    const vt = '\n - ';
                    throw new Error(
                        `Unable to animate due to the following errors:${vt}${K.join(
                            vt
                        )}`
                    );
                }
                return le;
            }
            function Hr(_, o, a, f) {
                switch (o) {
                    case 'start':
                        _.onStart(() => f(a && _r(a, 'start', _)));
                        break;
                    case 'done':
                        _.onDone(() => f(a && _r(a, 'done', _)));
                        break;
                    case 'destroy':
                        _.onDestroy(() => f(a && _r(a, 'destroy', _)));
                }
            }
            function _r(_, o, a) {
                const f = a.totalTime,
                    L = wr(
                        _.element,
                        _.triggerName,
                        _.fromState,
                        _.toState,
                        o || _.phaseName,
                        null == f ? _.totalTime : f,
                        !!a.disabled
                    ),
                    K = _._data;
                return null != K && (L._data = K), L;
            }
            function wr(_, o, a, f, S = '', L = 0, K) {
                return {
                    element: _,
                    triggerName: o,
                    fromState: a,
                    toState: f,
                    phaseName: S,
                    totalTime: L,
                    disabled: !!K,
                };
            }
            function hn(_, o, a) {
                let f;
                return (
                    _ instanceof Map
                        ? ((f = _.get(o)), f || _.set(o, (f = a)))
                        : ((f = _[o]), f || (f = _[o] = a)),
                    f
                );
            }
            function Nn(_) {
                const o = _.indexOf(':');
                return [_.substring(1, o), _.substr(o + 1)];
            }
            let Nr = (_, o) => !1,
                X = (_, o, a) => [];
            (xr() || 'undefined' != typeof Element) &&
                ((Nr = Sn()
                    ? (_, o) => {
                          for (; o && o !== document.documentElement; ) {
                              if (o === _) return !0;
                              o = o.parentNode || o.host;
                          }
                          return !1;
                      }
                    : (_, o) => _.contains(o)),
                (X = (_, o, a) => {
                    if (a) return Array.from(_.querySelectorAll(o));
                    const f = _.querySelector(o);
                    return f ? [f] : [];
                }));
            let Fe = null,
                ot = !1;
            function rt(_) {
                Fe ||
                    ((Fe =
                        (function Bt() {
                            return 'undefined' != typeof document
                                ? document.body
                                : null;
                        })() || {}),
                    (ot = !!Fe.style && 'WebkitAppearance' in Fe.style));
                let o = !0;
                return (
                    Fe.style &&
                        !(function Ee(_) {
                            return 'ebkit' == _.substring(1, 6);
                        })(_) &&
                        ((o = _ in Fe.style),
                        !o &&
                            ot &&
                            (o =
                                'Webkit' +
                                    _.charAt(0).toUpperCase() +
                                    _.substr(1) in
                                Fe.style)),
                    o
                );
            }
            const yn = Nr,
                On = X;
            let on = (() => {
                    class _ {
                        validateStyleProperty(a) {
                            return rt(a);
                        }
                        matchesElement(a, f) {
                            return !1;
                        }
                        containsElement(a, f) {
                            return yn(a, f);
                        }
                        query(a, f, S) {
                            return On(a, f, S);
                        }
                        computeStyle(a, f, S) {
                            return S || '';
                        }
                        animate(a, f, S, L, K, le = [], Te) {
                            return new hr(S, L);
                        }
                    }
                    return (
                        (_.ɵfac = function (a) {
                            return new (a || _)();
                        }),
                        (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                        _
                    );
                })(),
                Mr = (() => {
                    class _ {}
                    return (_.NOOP = new on()), _;
                })();
            const Pi = 'ng-enter',
                gi = 'ng-leave',
                Zr = 'ng-trigger',
                qr = '.ng-trigger',
                Ri = 'ng-animating',
                Ki = '.ng-animating';
            function Lr(_) {
                if ('number' == typeof _) return _;
                const o = _.match(/^(-?[\.\d]+)(m?s)/);
                return !o || o.length < 2 ? 0 : Qr(parseFloat(o[1]), o[2]);
            }
            function Qr(_, o) {
                return 's' === o ? 1e3 * _ : _;
            }
            function Yi(_, o, a) {
                return _.hasOwnProperty('duration')
                    ? _
                    : (function ps(_, o, a) {
                          let S,
                              L = 0,
                              K = '';
                          if ('string' == typeof _) {
                              const le = _.match(
                                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                              );
                              if (null === le)
                                  return (
                                      o.push(
                                          `The provided timing value "${_}" is invalid.`
                                      ),
                                      { duration: 0, delay: 0, easing: '' }
                                  );
                              S = Qr(parseFloat(le[1]), le[2]);
                              const Te = le[3];
                              null != Te && (L = Qr(parseFloat(Te), le[4]));
                              const Ze = le[5];
                              Ze && (K = Ze);
                          } else S = _;
                          if (!a) {
                              let le = !1,
                                  Te = o.length;
                              S < 0 &&
                                  (o.push(
                                      'Duration values below 0 are not allowed for this animation step.'
                                  ),
                                  (le = !0)),
                                  L < 0 &&
                                      (o.push(
                                          'Delay values below 0 are not allowed for this animation step.'
                                      ),
                                      (le = !0)),
                                  le &&
                                      o.splice(
                                          Te,
                                          0,
                                          `The provided timing value "${_}" is invalid.`
                                      );
                          }
                          return { duration: S, delay: L, easing: K };
                      })(_, o, a);
            }
            function bi(_, o = {}) {
                return (
                    Object.keys(_).forEach((a) => {
                        o[a] = _[a];
                    }),
                    o
                );
            }
            function Jr(_, o, a = {}) {
                if (o) for (let f in _) a[f] = _[f];
                else bi(_, a);
                return a;
            }
            function ss(_, o, a) {
                return a ? o + ':' + a + ';' : '';
            }
            function mi(_) {
                let o = '';
                for (let a = 0; a < _.style.length; a++) {
                    const f = _.style.item(a);
                    o += ss(0, f, _.style.getPropertyValue(f));
                }
                for (const a in _.style)
                    _.style.hasOwnProperty(a) &&
                        !a.startsWith('_') &&
                        (o += ss(0, Fi(a), _.style[a]));
                _.setAttribute('style', o);
            }
            function Pr(_, o, a) {
                _.style &&
                    (Object.keys(o).forEach((f) => {
                        const S = ii(f);
                        a && !a.hasOwnProperty(f) && (a[f] = _.style[S]),
                            (_.style[S] = o[f]);
                    }),
                    xr() && mi(_));
            }
            function ai(_, o) {
                _.style &&
                    (Object.keys(o).forEach((a) => {
                        const f = ii(a);
                        _.style[f] = '';
                    }),
                    xr() && mi(_));
            }
            function li(_) {
                return Array.isArray(_) ? (1 == _.length ? _[0] : ti(_)) : _;
            }
            const ri = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
            function Ai(_) {
                let o = [];
                if ('string' == typeof _) {
                    let a;
                    for (; (a = ri.exec(_)); ) o.push(a[1]);
                    ri.lastIndex = 0;
                }
                return o;
            }
            function $r(_, o, a) {
                const f = _.toString(),
                    S = f.replace(ri, (L, K) => {
                        let le = o[K];
                        return (
                            o.hasOwnProperty(K) ||
                                (a.push(
                                    `Please provide a value for the animation param ${K}`
                                ),
                                (le = '')),
                            le.toString()
                        );
                    });
                return S == f ? _ : S;
            }
            function vr(_) {
                const o = [];
                let a = _.next();
                for (; !a.done; ) o.push(a.value), (a = _.next());
                return o;
            }
            const qi = /-+([a-z0-9])/g;
            function ii(_) {
                return _.replace(qi, (...o) => o[1].toUpperCase());
            }
            function Fi(_) {
                return _.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
            }
            function zn(_, o, a) {
                switch (o.type) {
                    case 7:
                        return _.visitTrigger(o, a);
                    case 0:
                        return _.visitState(o, a);
                    case 1:
                        return _.visitTransition(o, a);
                    case 2:
                        return _.visitSequence(o, a);
                    case 3:
                        return _.visitGroup(o, a);
                    case 4:
                        return _.visitAnimate(o, a);
                    case 5:
                        return _.visitKeyframes(o, a);
                    case 6:
                        return _.visitStyle(o, a);
                    case 8:
                        return _.visitReference(o, a);
                    case 9:
                        return _.visitAnimateChild(o, a);
                    case 10:
                        return _.visitAnimateRef(o, a);
                    case 11:
                        return _.visitQuery(o, a);
                    case 12:
                        return _.visitStagger(o, a);
                    default:
                        throw new Error(
                            `Unable to resolve animation metadata node #${o.type}`
                        );
                }
            }
            function ce(_, o) {
                const a = [];
                return (
                    'string' == typeof _
                        ? _.split(/\s*,\s*/).forEach((f) =>
                              (function he(_, o, a) {
                                  if (':' == _[0]) {
                                      const Te = (function we(_, o) {
                                          switch (_) {
                                              case ':enter':
                                                  return 'void => *';
                                              case ':leave':
                                                  return '* => void';
                                              case ':increment':
                                                  return (a, f) =>
                                                      parseFloat(f) >
                                                      parseFloat(a);
                                              case ':decrement':
                                                  return (a, f) =>
                                                      parseFloat(f) <
                                                      parseFloat(a);
                                              default:
                                                  return (
                                                      o.push(
                                                          `The transition alias value "${_}" is not supported`
                                                      ),
                                                      '* => *'
                                                  );
                                          }
                                      })(_, a);
                                      if ('function' == typeof Te)
                                          return void o.push(Te);
                                      _ = Te;
                                  }
                                  const f = _.match(
                                      /^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/
                                  );
                                  if (null == f || f.length < 4)
                                      return (
                                          a.push(
                                              `The provided transition expression "${_}" is not supported`
                                          ),
                                          o
                                      );
                                  const S = f[1],
                                      L = f[2],
                                      K = f[3];
                                  o.push(ht(S, K));
                                  '<' == L[0] &&
                                      !('*' == S && '*' == K) &&
                                      o.push(ht(K, S));
                              })(f, a, o)
                          )
                        : a.push(_),
                    a
                );
            }
            const Ye = new Set(['true', '1']),
                it = new Set(['false', '0']);
            function ht(_, o) {
                const a = Ye.has(_) || it.has(_),
                    f = Ye.has(o) || it.has(o);
                return (S, L) => {
                    let K = '*' == _ || _ == S,
                        le = '*' == o || o == L;
                    return (
                        !K &&
                            a &&
                            'boolean' == typeof S &&
                            (K = S ? Ye.has(_) : it.has(_)),
                        !le &&
                            f &&
                            'boolean' == typeof L &&
                            (le = L ? Ye.has(o) : it.has(o)),
                        K && le
                    );
                };
            }
            const _n = new RegExp('s*:selfs*,?', 'g');
            function Gt(_, o, a) {
                return new A(_).build(o, a);
            }
            class A {
                constructor(o) {
                    this._driver = o;
                }
                build(o, a) {
                    const f = new V(a);
                    return (
                        this._resetContextStyleTimingState(f),
                        zn(this, li(o), f)
                    );
                }
                _resetContextStyleTimingState(o) {
                    (o.currentQuerySelector = ''),
                        (o.collectedStyles = {}),
                        (o.collectedStyles[''] = {}),
                        (o.currentTime = 0);
                }
                visitTrigger(o, a) {
                    let f = (a.queryCount = 0),
                        S = (a.depCount = 0);
                    const L = [],
                        K = [];
                    return (
                        '@' == o.name.charAt(0) &&
                            a.errors.push(
                                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
                            ),
                        o.definitions.forEach((le) => {
                            if (
                                (this._resetContextStyleTimingState(a),
                                0 == le.type)
                            ) {
                                const Te = le,
                                    Ze = Te.name;
                                Ze.toString()
                                    .split(/\s*,\s*/)
                                    .forEach((vt) => {
                                        (Te.name = vt),
                                            L.push(this.visitState(Te, a));
                                    }),
                                    (Te.name = Ze);
                            } else if (1 == le.type) {
                                const Te = this.visitTransition(le, a);
                                (f += Te.queryCount),
                                    (S += Te.depCount),
                                    K.push(Te);
                            } else
                                a.errors.push(
                                    'only state() and transition() definitions can sit inside of a trigger()'
                                );
                        }),
                        {
                            type: 7,
                            name: o.name,
                            states: L,
                            transitions: K,
                            queryCount: f,
                            depCount: S,
                            options: null,
                        }
                    );
                }
                visitState(o, a) {
                    const f = this.visitStyle(o.styles, a),
                        S = (o.options && o.options.params) || null;
                    if (f.containsDynamicStyles) {
                        const L = new Set(),
                            K = S || {};
                        if (
                            (f.styles.forEach((le) => {
                                if (ke(le)) {
                                    const Te = le;
                                    Object.keys(Te).forEach((Ze) => {
                                        Ai(Te[Ze]).forEach((vt) => {
                                            K.hasOwnProperty(vt) || L.add(vt);
                                        });
                                    });
                                }
                            }),
                            L.size)
                        ) {
                            const le = vr(L.values());
                            a.errors.push(
                                `state("${
                                    o.name
                                }", ...) must define default values for all the following style substitutions: ${le.join(
                                    ', '
                                )}`
                            );
                        }
                    }
                    return {
                        type: 0,
                        name: o.name,
                        style: f,
                        options: S ? { params: S } : null,
                    };
                }
                visitTransition(o, a) {
                    (a.queryCount = 0), (a.depCount = 0);
                    const f = zn(this, li(o.animation), a);
                    return {
                        type: 1,
                        matchers: ce(o.expr, a.errors),
                        animation: f,
                        queryCount: a.queryCount,
                        depCount: a.depCount,
                        options: mt(o.options),
                    };
                }
                visitSequence(o, a) {
                    return {
                        type: 2,
                        steps: o.steps.map((f) => zn(this, f, a)),
                        options: mt(o.options),
                    };
                }
                visitGroup(o, a) {
                    const f = a.currentTime;
                    let S = 0;
                    const L = o.steps.map((K) => {
                        a.currentTime = f;
                        const le = zn(this, K, a);
                        return (S = Math.max(S, a.currentTime)), le;
                    });
                    return (
                        (a.currentTime = S),
                        { type: 3, steps: L, options: mt(o.options) }
                    );
                }
                visitAnimate(o, a) {
                    const f = (function qe(_, o) {
                        let a = null;
                        if (_.hasOwnProperty('duration')) a = _;
                        else if ('number' == typeof _)
                            return kt(Yi(_, o).duration, 0, '');
                        const f = _;
                        if (
                            f
                                .split(/\s+/)
                                .some(
                                    (L) =>
                                        '{' == L.charAt(0) && '{' == L.charAt(1)
                                )
                        ) {
                            const L = kt(0, 0, '');
                            return (L.dynamic = !0), (L.strValue = f), L;
                        }
                        return (
                            (a = a || Yi(f, o)),
                            kt(a.duration, a.delay, a.easing)
                        );
                    })(o.timings, a.errors);
                    a.currentAnimateTimings = f;
                    let S,
                        L = o.styles ? o.styles : br({});
                    if (5 == L.type) S = this.visitKeyframes(L, a);
                    else {
                        let K = o.styles,
                            le = !1;
                        if (!K) {
                            le = !0;
                            const Ze = {};
                            f.easing && (Ze.easing = f.easing), (K = br(Ze));
                        }
                        a.currentTime += f.duration + f.delay;
                        const Te = this.visitStyle(K, a);
                        (Te.isEmptyStep = le), (S = Te);
                    }
                    return (
                        (a.currentAnimateTimings = null),
                        { type: 4, timings: f, style: S, options: null }
                    );
                }
                visitStyle(o, a) {
                    const f = this._makeStyleAst(o, a);
                    return this._validateStyleAst(f, a), f;
                }
                _makeStyleAst(o, a) {
                    const f = [];
                    Array.isArray(o.styles)
                        ? o.styles.forEach((K) => {
                              'string' == typeof K
                                  ? K == ln
                                      ? f.push(K)
                                      : a.errors.push(
                                            `The provided style string value ${K} is not allowed.`
                                        )
                                  : f.push(K);
                          })
                        : f.push(o.styles);
                    let S = !1,
                        L = null;
                    return (
                        f.forEach((K) => {
                            if (ke(K)) {
                                const le = K,
                                    Te = le.easing;
                                if ((Te && ((L = Te), delete le.easing), !S))
                                    for (let Ze in le)
                                        if (
                                            le[Ze].toString().indexOf('{{') >= 0
                                        ) {
                                            S = !0;
                                            break;
                                        }
                            }
                        }),
                        {
                            type: 6,
                            styles: f,
                            easing: L,
                            offset: o.offset,
                            containsDynamicStyles: S,
                            options: null,
                        }
                    );
                }
                _validateStyleAst(o, a) {
                    const f = a.currentAnimateTimings;
                    let S = a.currentTime,
                        L = a.currentTime;
                    f && L > 0 && (L -= f.duration + f.delay),
                        o.styles.forEach((K) => {
                            'string' != typeof K &&
                                Object.keys(K).forEach((le) => {
                                    if (!this._driver.validateStyleProperty(le))
                                        return void a.errors.push(
                                            `The provided animation property "${le}" is not a supported CSS property for animations`
                                        );
                                    const Te =
                                            a.collectedStyles[
                                                a.currentQuerySelector
                                            ],
                                        Ze = Te[le];
                                    let vt = !0;
                                    Ze &&
                                        (L != S &&
                                            L >= Ze.startTime &&
                                            S <= Ze.endTime &&
                                            (a.errors.push(
                                                `The CSS property "${le}" that exists between the times of "${Ze.startTime}ms" and "${Ze.endTime}ms" is also being animated in a parallel animation between the times of "${L}ms" and "${S}ms"`
                                            ),
                                            (vt = !1)),
                                        (L = Ze.startTime)),
                                        vt &&
                                            (Te[le] = {
                                                startTime: L,
                                                endTime: S,
                                            }),
                                        a.options &&
                                            (function Zi(_, o, a) {
                                                const f = o.params || {},
                                                    S = Ai(_);
                                                S.length &&
                                                    S.forEach((L) => {
                                                        f.hasOwnProperty(L) ||
                                                            a.push(
                                                                `Unable to resolve the local animation param ${L} in the given list of values`
                                                            );
                                                    });
                                            })(K[le], a.options, a.errors);
                                });
                        });
                }
                visitKeyframes(o, a) {
                    const f = { type: 5, styles: [], options: null };
                    if (!a.currentAnimateTimings)
                        return (
                            a.errors.push(
                                'keyframes() must be placed inside of a call to animate()'
                            ),
                            f
                        );
                    let L = 0;
                    const K = [];
                    let le = !1,
                        Te = !1,
                        Ze = 0;
                    const vt = o.steps.map((jr) => {
                        const Kr = this._makeStyleAst(jr, a);
                        let Ci =
                                null != Kr.offset
                                    ? Kr.offset
                                    : (function ge(_) {
                                          if ('string' == typeof _) return null;
                                          let o = null;
                                          if (Array.isArray(_))
                                              _.forEach((a) => {
                                                  if (
                                                      ke(a) &&
                                                      a.hasOwnProperty('offset')
                                                  ) {
                                                      const f = a;
                                                      (o = parseFloat(
                                                          f.offset
                                                      )),
                                                          delete f.offset;
                                                  }
                                              });
                                          else if (
                                              ke(_) &&
                                              _.hasOwnProperty('offset')
                                          ) {
                                              const a = _;
                                              (o = parseFloat(a.offset)),
                                                  delete a.offset;
                                          }
                                          return o;
                                      })(Kr.styles),
                            Fr = 0;
                        return (
                            null != Ci && (L++, (Fr = Kr.offset = Ci)),
                            (Te = Te || Fr < 0 || Fr > 1),
                            (le = le || Fr < Ze),
                            (Ze = Fr),
                            K.push(Fr),
                            Kr
                        );
                    });
                    Te &&
                        a.errors.push(
                            'Please ensure that all keyframe offsets are between 0 and 1'
                        ),
                        le &&
                            a.errors.push(
                                'Please ensure that all keyframe offsets are in order'
                            );
                    const xt = o.steps.length;
                    let It = 0;
                    L > 0 && L < xt
                        ? a.errors.push(
                              'Not all style() steps within the declared keyframes() contain offsets'
                          )
                        : 0 == L && (It = 1 / (xt - 1));
                    const Mn = xt - 1,
                        qt = a.currentTime,
                        vn = a.currentAnimateTimings,
                        dr = vn.duration;
                    return (
                        vt.forEach((jr, Kr) => {
                            const Ci =
                                    It > 0 ? (Kr == Mn ? 1 : It * Kr) : K[Kr],
                                Fr = Ci * dr;
                            (a.currentTime = qt + vn.delay + Fr),
                                (vn.duration = Fr),
                                this._validateStyleAst(jr, a),
                                (jr.offset = Ci),
                                f.styles.push(jr);
                        }),
                        f
                    );
                }
                visitReference(o, a) {
                    return {
                        type: 8,
                        animation: zn(this, li(o.animation), a),
                        options: mt(o.options),
                    };
                }
                visitAnimateChild(o, a) {
                    return a.depCount++, { type: 9, options: mt(o.options) };
                }
                visitAnimateRef(o, a) {
                    return {
                        type: 10,
                        animation: this.visitReference(o.animation, a),
                        options: mt(o.options),
                    };
                }
                visitQuery(o, a) {
                    const f = a.currentQuerySelector,
                        S = o.options || {};
                    a.queryCount++, (a.currentQuery = o);
                    const [L, K] = (function N(_) {
                        const o = !!_.split(/\s*,\s*/).find(
                            (a) => ':self' == a
                        );
                        return (
                            o && (_ = _.replace(_n, '')),
                            (_ = _.replace(/@\*/g, qr)
                                .replace(/@\w+/g, (a) => qr + '-' + a.substr(1))
                                .replace(/:animating/g, Ki)),
                            [_, o]
                        );
                    })(o.selector);
                    (a.currentQuerySelector = f.length ? f + ' ' + L : L),
                        hn(a.collectedStyles, a.currentQuerySelector, {});
                    const le = zn(this, li(o.animation), a);
                    return (
                        (a.currentQuery = null),
                        (a.currentQuerySelector = f),
                        {
                            type: 11,
                            selector: L,
                            limit: S.limit || 0,
                            optional: !!S.optional,
                            includeSelf: K,
                            animation: le,
                            originalSelector: o.selector,
                            options: mt(o.options),
                        }
                    );
                }
                visitStagger(o, a) {
                    a.currentQuery ||
                        a.errors.push(
                            'stagger() can only be used inside of query()'
                        );
                    const f =
                        'full' === o.timings
                            ? { duration: 0, delay: 0, easing: 'full' }
                            : Yi(o.timings, a.errors, !0);
                    return {
                        type: 12,
                        animation: zn(this, li(o.animation), a),
                        timings: f,
                        options: null,
                    };
                }
            }
            class V {
                constructor(o) {
                    (this.errors = o),
                        (this.queryCount = 0),
                        (this.depCount = 0),
                        (this.currentTransition = null),
                        (this.currentQuery = null),
                        (this.currentQuerySelector = null),
                        (this.currentAnimateTimings = null),
                        (this.currentTime = 0),
                        (this.collectedStyles = {}),
                        (this.options = null);
                }
            }
            function ke(_) {
                return !Array.isArray(_) && 'object' == typeof _;
            }
            function mt(_) {
                return (
                    _
                        ? (_ = bi(_)).params &&
                          (_.params = (function b(_) {
                              return _ ? bi(_) : null;
                          })(_.params))
                        : (_ = {}),
                    _
                );
            }
            function kt(_, o, a) {
                return { duration: _, delay: o, easing: a };
            }
            function un(_, o, a, f, S, L, K = null, le = !1) {
                return {
                    type: 1,
                    element: _,
                    keyframes: o,
                    preStyleProps: a,
                    postStyleProps: f,
                    duration: S,
                    delay: L,
                    totalTime: S + L,
                    easing: K,
                    subTimeline: le,
                };
            }
            class At {
                constructor() {
                    this._map = new Map();
                }
                get(o) {
                    return this._map.get(o) || [];
                }
                append(o, a) {
                    let f = this._map.get(o);
                    f || this._map.set(o, (f = [])), f.push(...a);
                }
                has(o) {
                    return this._map.has(o);
                }
                clear() {
                    this._map.clear();
                }
            }
            const Ln = new RegExp(':enter', 'g'),
                ci = new RegExp(':leave', 'g');
            function Wr(_, o, a, f, S, L = {}, K = {}, le, Te, Ze = []) {
                return new Vt().buildKeyframes(_, o, a, f, S, L, K, le, Te, Ze);
            }
            class Vt {
                buildKeyframes(o, a, f, S, L, K, le, Te, Ze, vt = []) {
                    Ze = Ze || new At();
                    const xt = new Ji(o, a, Ze, S, L, vt, []);
                    (xt.options = Te),
                        xt.currentTimeline.setStyles([K], null, xt.errors, Te),
                        zn(this, f, xt);
                    const It = xt.timelines.filter((Mn) =>
                        Mn.containsAnimation()
                    );
                    if (Object.keys(le).length) {
                        let Mn;
                        for (let qt = It.length - 1; qt >= 0; qt--) {
                            const vn = It[qt];
                            if (vn.element === a) {
                                Mn = vn;
                                break;
                            }
                        }
                        Mn &&
                            !Mn.allowOnlyTimelineStyles() &&
                            Mn.setStyles([le], null, xt.errors, Te);
                    }
                    return It.length
                        ? It.map((Mn) => Mn.buildKeyframes())
                        : [un(a, [], [], [], 0, 0, '', !1)];
                }
                visitTrigger(o, a) {}
                visitState(o, a) {}
                visitTransition(o, a) {}
                visitAnimateChild(o, a) {
                    const f = a.subInstructions.get(a.element);
                    if (f) {
                        const S = a.createSubContext(o.options),
                            L = a.currentTimeline.currentTime,
                            K = this._visitSubInstructions(f, S, S.options);
                        L != K && a.transformIntoNewTimeline(K);
                    }
                    a.previousNode = o;
                }
                visitAnimateRef(o, a) {
                    const f = a.createSubContext(o.options);
                    f.transformIntoNewTimeline(),
                        this.visitReference(o.animation, f),
                        a.transformIntoNewTimeline(
                            f.currentTimeline.currentTime
                        ),
                        (a.previousNode = o);
                }
                _visitSubInstructions(o, a, f) {
                    let L = a.currentTimeline.currentTime;
                    const K = null != f.duration ? Lr(f.duration) : null,
                        le = null != f.delay ? Lr(f.delay) : null;
                    return (
                        0 !== K &&
                            o.forEach((Te) => {
                                const Ze = a.appendInstructionToTimeline(
                                    Te,
                                    K,
                                    le
                                );
                                L = Math.max(L, Ze.duration + Ze.delay);
                            }),
                        L
                    );
                }
                visitReference(o, a) {
                    a.updateOptions(o.options, !0),
                        zn(this, o.animation, a),
                        (a.previousNode = o);
                }
                visitSequence(o, a) {
                    const f = a.subContextCount;
                    let S = a;
                    const L = o.options;
                    if (
                        L &&
                        (L.params || L.delay) &&
                        ((S = a.createSubContext(L)),
                        S.transformIntoNewTimeline(),
                        null != L.delay)
                    ) {
                        6 == S.previousNode.type &&
                            (S.currentTimeline.snapshotCurrentStyles(),
                            (S.previousNode = yi));
                        const K = Lr(L.delay);
                        S.delayNextStep(K);
                    }
                    o.steps.length &&
                        (o.steps.forEach((K) => zn(this, K, S)),
                        S.currentTimeline.applyStylesToKeyframe(),
                        S.subContextCount > f && S.transformIntoNewTimeline()),
                        (a.previousNode = o);
                }
                visitGroup(o, a) {
                    const f = [];
                    let S = a.currentTimeline.currentTime;
                    const L =
                        o.options && o.options.delay ? Lr(o.options.delay) : 0;
                    o.steps.forEach((K) => {
                        const le = a.createSubContext(o.options);
                        L && le.delayNextStep(L),
                            zn(this, K, le),
                            (S = Math.max(S, le.currentTimeline.currentTime)),
                            f.push(le.currentTimeline);
                    }),
                        f.forEach((K) =>
                            a.currentTimeline.mergeTimelineCollectedStyles(K)
                        ),
                        a.transformIntoNewTimeline(S),
                        (a.previousNode = o);
                }
                _visitTiming(o, a) {
                    if (o.dynamic) {
                        const f = o.strValue;
                        return Yi(
                            a.params ? $r(f, a.params, a.errors) : f,
                            a.errors
                        );
                    }
                    return {
                        duration: o.duration,
                        delay: o.delay,
                        easing: o.easing,
                    };
                }
                visitAnimate(o, a) {
                    const f = (a.currentAnimateTimings = this._visitTiming(
                            o.timings,
                            a
                        )),
                        S = a.currentTimeline;
                    f.delay &&
                        (a.incrementTime(f.delay), S.snapshotCurrentStyles());
                    const L = o.style;
                    5 == L.type
                        ? this.visitKeyframes(L, a)
                        : (a.incrementTime(f.duration),
                          this.visitStyle(L, a),
                          S.applyStylesToKeyframe()),
                        (a.currentAnimateTimings = null),
                        (a.previousNode = o);
                }
                visitStyle(o, a) {
                    const f = a.currentTimeline,
                        S = a.currentAnimateTimings;
                    !S &&
                        f.getCurrentStyleProperties().length &&
                        f.forwardFrame();
                    const L = (S && S.easing) || o.easing;
                    o.isEmptyStep
                        ? f.applyEmptyStep(L)
                        : f.setStyles(o.styles, L, a.errors, a.options),
                        (a.previousNode = o);
                }
                visitKeyframes(o, a) {
                    const f = a.currentAnimateTimings,
                        S = a.currentTimeline.duration,
                        L = f.duration,
                        le = a.createSubContext().currentTimeline;
                    (le.easing = f.easing),
                        o.styles.forEach((Te) => {
                            le.forwardTime((Te.offset || 0) * L),
                                le.setStyles(
                                    Te.styles,
                                    Te.easing,
                                    a.errors,
                                    a.options
                                ),
                                le.applyStylesToKeyframe();
                        }),
                        a.currentTimeline.mergeTimelineCollectedStyles(le),
                        a.transformIntoNewTimeline(S + L),
                        (a.previousNode = o);
                }
                visitQuery(o, a) {
                    const f = a.currentTimeline.currentTime,
                        S = o.options || {},
                        L = S.delay ? Lr(S.delay) : 0;
                    L &&
                        (6 === a.previousNode.type ||
                            (0 == f &&
                                a.currentTimeline.getCurrentStyleProperties()
                                    .length)) &&
                        (a.currentTimeline.snapshotCurrentStyles(),
                        (a.previousNode = yi));
                    let K = f;
                    const le = a.invokeQuery(
                        o.selector,
                        o.originalSelector,
                        o.limit,
                        o.includeSelf,
                        !!S.optional,
                        a.errors
                    );
                    a.currentQueryTotal = le.length;
                    let Te = null;
                    le.forEach((Ze, vt) => {
                        a.currentQueryIndex = vt;
                        const xt = a.createSubContext(o.options, Ze);
                        L && xt.delayNextStep(L),
                            Ze === a.element && (Te = xt.currentTimeline),
                            zn(this, o.animation, xt),
                            xt.currentTimeline.applyStylesToKeyframe(),
                            (K = Math.max(K, xt.currentTimeline.currentTime));
                    }),
                        (a.currentQueryIndex = 0),
                        (a.currentQueryTotal = 0),
                        a.transformIntoNewTimeline(K),
                        Te &&
                            (a.currentTimeline.mergeTimelineCollectedStyles(Te),
                            a.currentTimeline.snapshotCurrentStyles()),
                        (a.previousNode = o);
                }
                visitStagger(o, a) {
                    const f = a.parentContext,
                        S = a.currentTimeline,
                        L = o.timings,
                        K = Math.abs(L.duration),
                        le = K * (a.currentQueryTotal - 1);
                    let Te = K * a.currentQueryIndex;
                    switch (L.duration < 0 ? 'reverse' : L.easing) {
                        case 'reverse':
                            Te = le - Te;
                            break;
                        case 'full':
                            Te = f.currentStaggerTime;
                    }
                    const vt = a.currentTimeline;
                    Te && vt.delayNextStep(Te);
                    const xt = vt.currentTime;
                    zn(this, o.animation, a),
                        (a.previousNode = o),
                        (f.currentStaggerTime =
                            S.currentTime -
                            xt +
                            (S.startTime - f.currentTimeline.startTime));
                }
            }
            const yi = {};
            class Ji {
                constructor(o, a, f, S, L, K, le, Te) {
                    (this._driver = o),
                        (this.element = a),
                        (this.subInstructions = f),
                        (this._enterClassName = S),
                        (this._leaveClassName = L),
                        (this.errors = K),
                        (this.timelines = le),
                        (this.parentContext = null),
                        (this.currentAnimateTimings = null),
                        (this.previousNode = yi),
                        (this.subContextCount = 0),
                        (this.options = {}),
                        (this.currentQueryIndex = 0),
                        (this.currentQueryTotal = 0),
                        (this.currentStaggerTime = 0),
                        (this.currentTimeline =
                            Te || new wi(this._driver, a, 0)),
                        le.push(this.currentTimeline);
                }
                get params() {
                    return this.options.params;
                }
                updateOptions(o, a) {
                    if (!o) return;
                    const f = o;
                    let S = this.options;
                    null != f.duration && (S.duration = Lr(f.duration)),
                        null != f.delay && (S.delay = Lr(f.delay));
                    const L = f.params;
                    if (L) {
                        let K = S.params;
                        K || (K = this.options.params = {}),
                            Object.keys(L).forEach((le) => {
                                (!a || !K.hasOwnProperty(le)) &&
                                    (K[le] = $r(L[le], K, this.errors));
                            });
                    }
                }
                _copyOptions() {
                    const o = {};
                    if (this.options) {
                        const a = this.options.params;
                        if (a) {
                            const f = (o.params = {});
                            Object.keys(a).forEach((S) => {
                                f[S] = a[S];
                            });
                        }
                    }
                    return o;
                }
                createSubContext(o = null, a, f) {
                    const S = a || this.element,
                        L = new Ji(
                            this._driver,
                            S,
                            this.subInstructions,
                            this._enterClassName,
                            this._leaveClassName,
                            this.errors,
                            this.timelines,
                            this.currentTimeline.fork(S, f || 0)
                        );
                    return (
                        (L.previousNode = this.previousNode),
                        (L.currentAnimateTimings = this.currentAnimateTimings),
                        (L.options = this._copyOptions()),
                        L.updateOptions(o),
                        (L.currentQueryIndex = this.currentQueryIndex),
                        (L.currentQueryTotal = this.currentQueryTotal),
                        (L.parentContext = this),
                        this.subContextCount++,
                        L
                    );
                }
                transformIntoNewTimeline(o) {
                    return (
                        (this.previousNode = yi),
                        (this.currentTimeline = this.currentTimeline.fork(
                            this.element,
                            o
                        )),
                        this.timelines.push(this.currentTimeline),
                        this.currentTimeline
                    );
                }
                appendInstructionToTimeline(o, a, f) {
                    const S = {
                            duration: null != a ? a : o.duration,
                            delay:
                                this.currentTimeline.currentTime +
                                (null != f ? f : 0) +
                                o.delay,
                            easing: '',
                        },
                        L = new Vi(
                            this._driver,
                            o.element,
                            o.keyframes,
                            o.preStyleProps,
                            o.postStyleProps,
                            S,
                            o.stretchStartingKeyframe
                        );
                    return this.timelines.push(L), S;
                }
                incrementTime(o) {
                    this.currentTimeline.forwardTime(
                        this.currentTimeline.duration + o
                    );
                }
                delayNextStep(o) {
                    o > 0 && this.currentTimeline.delayNextStep(o);
                }
                invokeQuery(o, a, f, S, L, K) {
                    let le = [];
                    if ((S && le.push(this.element), o.length > 0)) {
                        o = (o = o.replace(
                            Ln,
                            '.' + this._enterClassName
                        )).replace(ci, '.' + this._leaveClassName);
                        let Ze = this._driver.query(this.element, o, 1 != f);
                        0 !== f &&
                            (Ze =
                                f < 0
                                    ? Ze.slice(Ze.length + f, Ze.length)
                                    : Ze.slice(0, f)),
                            le.push(...Ze);
                    }
                    return (
                        !L &&
                            0 == le.length &&
                            K.push(
                                `\`query("${a}")\` returned zero elements. (Use \`query("${a}", { optional: true })\` if you wish to allow this.)`
                            ),
                        le
                    );
                }
            }
            class wi {
                constructor(o, a, f, S) {
                    (this._driver = o),
                        (this.element = a),
                        (this.startTime = f),
                        (this._elementTimelineStylesLookup = S),
                        (this.duration = 0),
                        (this._previousKeyframe = {}),
                        (this._currentKeyframe = {}),
                        (this._keyframes = new Map()),
                        (this._styleSummary = {}),
                        (this._pendingStyles = {}),
                        (this._backFill = {}),
                        (this._currentEmptyStepKeyframe = null),
                        this._elementTimelineStylesLookup ||
                            (this._elementTimelineStylesLookup = new Map()),
                        (this._localTimelineStyles = Object.create(
                            this._backFill,
                            {}
                        )),
                        (this._globalTimelineStyles =
                            this._elementTimelineStylesLookup.get(a)),
                        this._globalTimelineStyles ||
                            ((this._globalTimelineStyles =
                                this._localTimelineStyles),
                            this._elementTimelineStylesLookup.set(
                                a,
                                this._localTimelineStyles
                            )),
                        this._loadKeyframe();
                }
                containsAnimation() {
                    switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.getCurrentStyleProperties().length > 0;
                        default:
                            return !0;
                    }
                }
                getCurrentStyleProperties() {
                    return Object.keys(this._currentKeyframe);
                }
                get currentTime() {
                    return this.startTime + this.duration;
                }
                delayNextStep(o) {
                    const a =
                        1 == this._keyframes.size &&
                        Object.keys(this._pendingStyles).length;
                    this.duration || a
                        ? (this.forwardTime(this.currentTime + o),
                          a && this.snapshotCurrentStyles())
                        : (this.startTime += o);
                }
                fork(o, a) {
                    return (
                        this.applyStylesToKeyframe(),
                        new wi(
                            this._driver,
                            o,
                            a || this.currentTime,
                            this._elementTimelineStylesLookup
                        )
                    );
                }
                _loadKeyframe() {
                    this._currentKeyframe &&
                        (this._previousKeyframe = this._currentKeyframe),
                        (this._currentKeyframe = this._keyframes.get(
                            this.duration
                        )),
                        this._currentKeyframe ||
                            ((this._currentKeyframe = Object.create(
                                this._backFill,
                                {}
                            )),
                            this._keyframes.set(
                                this.duration,
                                this._currentKeyframe
                            ));
                }
                forwardFrame() {
                    (this.duration += 1), this._loadKeyframe();
                }
                forwardTime(o) {
                    this.applyStylesToKeyframe(),
                        (this.duration = o),
                        this._loadKeyframe();
                }
                _updateStyle(o, a) {
                    (this._localTimelineStyles[o] = a),
                        (this._globalTimelineStyles[o] = a),
                        (this._styleSummary[o] = {
                            time: this.currentTime,
                            value: a,
                        });
                }
                allowOnlyTimelineStyles() {
                    return (
                        this._currentEmptyStepKeyframe !== this._currentKeyframe
                    );
                }
                applyEmptyStep(o) {
                    o && (this._previousKeyframe.easing = o),
                        Object.keys(this._globalTimelineStyles).forEach((a) => {
                            (this._backFill[a] =
                                this._globalTimelineStyles[a] || ln),
                                (this._currentKeyframe[a] = ln);
                        }),
                        (this._currentEmptyStepKeyframe =
                            this._currentKeyframe);
                }
                setStyles(o, a, f, S) {
                    a && (this._previousKeyframe.easing = a);
                    const L = (S && S.params) || {},
                        K = (function Xi(_, o) {
                            const a = {};
                            let f;
                            return (
                                _.forEach((S) => {
                                    '*' === S
                                        ? ((f = f || Object.keys(o)),
                                          f.forEach((L) => {
                                              a[L] = ln;
                                          }))
                                        : Jr(S, !1, a);
                                }),
                                a
                            );
                        })(o, this._globalTimelineStyles);
                    Object.keys(K).forEach((le) => {
                        const Te = $r(K[le], L, f);
                        (this._pendingStyles[le] = Te),
                            this._localTimelineStyles.hasOwnProperty(le) ||
                                (this._backFill[le] =
                                    this._globalTimelineStyles.hasOwnProperty(
                                        le
                                    )
                                        ? this._globalTimelineStyles[le]
                                        : ln),
                            this._updateStyle(le, Te);
                    });
                }
                applyStylesToKeyframe() {
                    const o = this._pendingStyles,
                        a = Object.keys(o);
                    0 != a.length &&
                        ((this._pendingStyles = {}),
                        a.forEach((f) => {
                            this._currentKeyframe[f] = o[f];
                        }),
                        Object.keys(this._localTimelineStyles).forEach((f) => {
                            this._currentKeyframe.hasOwnProperty(f) ||
                                (this._currentKeyframe[f] =
                                    this._localTimelineStyles[f]);
                        }));
                }
                snapshotCurrentStyles() {
                    Object.keys(this._localTimelineStyles).forEach((o) => {
                        const a = this._localTimelineStyles[o];
                        (this._pendingStyles[o] = a), this._updateStyle(o, a);
                    });
                }
                getFinalKeyframe() {
                    return this._keyframes.get(this.duration);
                }
                get properties() {
                    const o = [];
                    for (let a in this._currentKeyframe) o.push(a);
                    return o;
                }
                mergeTimelineCollectedStyles(o) {
                    Object.keys(o._styleSummary).forEach((a) => {
                        const f = this._styleSummary[a],
                            S = o._styleSummary[a];
                        (!f || S.time > f.time) &&
                            this._updateStyle(a, S.value);
                    });
                }
                buildKeyframes() {
                    this.applyStylesToKeyframe();
                    const o = new Set(),
                        a = new Set(),
                        f = 1 === this._keyframes.size && 0 === this.duration;
                    let S = [];
                    this._keyframes.forEach((le, Te) => {
                        const Ze = Jr(le, !0);
                        Object.keys(Ze).forEach((vt) => {
                            const xt = Ze[vt];
                            '!' == xt ? o.add(vt) : xt == ln && a.add(vt);
                        }),
                            f || (Ze.offset = Te / this.duration),
                            S.push(Ze);
                    });
                    const L = o.size ? vr(o.values()) : [],
                        K = a.size ? vr(a.values()) : [];
                    if (f) {
                        const le = S[0],
                            Te = bi(le);
                        (le.offset = 0), (Te.offset = 1), (S = [le, Te]);
                    }
                    return un(
                        this.element,
                        S,
                        L,
                        K,
                        this.duration,
                        this.startTime,
                        this.easing,
                        !1
                    );
                }
            }
            class Vi extends wi {
                constructor(o, a, f, S, L, K, le = !1) {
                    super(o, a, K.delay),
                        (this.keyframes = f),
                        (this.preStyleProps = S),
                        (this.postStyleProps = L),
                        (this._stretchStartingKeyframe = le),
                        (this.timings = {
                            duration: K.duration,
                            delay: K.delay,
                            easing: K.easing,
                        });
                }
                containsAnimation() {
                    return this.keyframes.length > 1;
                }
                buildKeyframes() {
                    let o = this.keyframes,
                        { delay: a, duration: f, easing: S } = this.timings;
                    if (this._stretchStartingKeyframe && a) {
                        const L = [],
                            K = f + a,
                            le = a / K,
                            Te = Jr(o[0], !1);
                        (Te.offset = 0), L.push(Te);
                        const Ze = Jr(o[0], !1);
                        (Ze.offset = os(le)), L.push(Ze);
                        const vt = o.length - 1;
                        for (let xt = 1; xt <= vt; xt++) {
                            let It = Jr(o[xt], !1);
                            (It.offset = os((a + It.offset * f) / K)),
                                L.push(It);
                        }
                        (f = K), (a = 0), (S = ''), (o = L);
                    }
                    return un(
                        this.element,
                        o,
                        this.preStyleProps,
                        this.postStyleProps,
                        f,
                        a,
                        S,
                        !0
                    );
                }
            }
            function os(_, o = 3) {
                const a = Math.pow(10, o - 1);
                return Math.round(_ * a) / a;
            }
            class et {}
            class zs extends et {
                normalizePropertyName(o, a) {
                    return ii(o);
                }
                normalizeStyleValue(o, a, f, S) {
                    let L = '';
                    const K = f.toString().trim();
                    if (ir[a] && 0 !== f && '0' !== f)
                        if ('number' == typeof f) L = 'px';
                        else {
                            const le = f.match(/^[+-]?[\d\.]+([a-z]*)$/);
                            le &&
                                0 == le[1].length &&
                                S.push(
                                    `Please provide a CSS unit value for ${o}:${f}`
                                );
                        }
                    return K + L;
                }
            }
            const ir = (() =>
                (function gs(_) {
                    const o = {};
                    return _.forEach((a) => (o[a] = !0)), o;
                })(
                    'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
                        ','
                    )
                ))();
            function xi(_, o, a, f, S, L, K, le, Te, Ze, vt, xt, It) {
                return {
                    type: 0,
                    element: _,
                    triggerName: o,
                    isRemovalTransition: S,
                    fromState: a,
                    fromStyles: L,
                    toState: f,
                    toStyles: K,
                    timelines: le,
                    queriedElements: Te,
                    preStyleProps: Ze,
                    postStyleProps: vt,
                    totalTime: xt,
                    errors: It,
                };
            }
            const Rr = {};
            class ms {
                constructor(o, a, f) {
                    (this._triggerName = o),
                        (this.ast = a),
                        (this._stateStyles = f);
                }
                match(o, a, f, S) {
                    return (function Ss(_, o, a, f, S) {
                        return _.some((L) => L(o, a, f, S));
                    })(this.ast.matchers, o, a, f, S);
                }
                buildStyles(o, a, f) {
                    const S = this._stateStyles['*'],
                        L = this._stateStyles[o],
                        K = S ? S.buildStyles(a, f) : {};
                    return L ? L.buildStyles(a, f) : K;
                }
                build(o, a, f, S, L, K, le, Te, Ze, vt) {
                    const xt = [],
                        It =
                            (this.ast.options && this.ast.options.params) || Rr,
                        qt = this.buildStyles(f, (le && le.params) || Rr, xt),
                        vn = (Te && Te.params) || Rr,
                        dr = this.buildStyles(S, vn, xt),
                        jr = new Set(),
                        Kr = new Map(),
                        Ci = new Map(),
                        Fr = 'void' === S,
                        mo = {
                            params: Object.assign(Object.assign({}, It), vn),
                        },
                        sr = vt
                            ? []
                            : Wr(
                                  o,
                                  a,
                                  this.ast.animation,
                                  L,
                                  K,
                                  qt,
                                  dr,
                                  mo,
                                  Ze,
                                  xt
                              );
                    let Xr = 0;
                    if (
                        (sr.forEach((Cs) => {
                            Xr = Math.max(Cs.duration + Cs.delay, Xr);
                        }),
                        xt.length)
                    )
                        return xi(
                            a,
                            this._triggerName,
                            f,
                            S,
                            Fr,
                            qt,
                            dr,
                            [],
                            [],
                            Kr,
                            Ci,
                            Xr,
                            xt
                        );
                    sr.forEach((Cs) => {
                        const rs = Cs.element,
                            di = hn(Kr, rs, {});
                        Cs.preStyleProps.forEach((is) => (di[is] = !0));
                        const fi = hn(Ci, rs, {});
                        Cs.postStyleProps.forEach((is) => (fi[is] = !0)),
                            rs !== a && jr.add(rs);
                    });
                    const Mi = vr(jr.values());
                    return xi(
                        a,
                        this._triggerName,
                        f,
                        S,
                        Fr,
                        qt,
                        dr,
                        sr,
                        Mi,
                        Kr,
                        Ci,
                        Xr
                    );
                }
            }
            class Eo {
                constructor(o, a, f) {
                    (this.styles = o),
                        (this.defaultParams = a),
                        (this.normalizer = f);
                }
                buildStyles(o, a) {
                    const f = {},
                        S = bi(this.defaultParams);
                    return (
                        Object.keys(o).forEach((L) => {
                            const K = o[L];
                            null != K && (S[L] = K);
                        }),
                        this.styles.styles.forEach((L) => {
                            if ('string' != typeof L) {
                                const K = L;
                                Object.keys(K).forEach((le) => {
                                    let Te = K[le];
                                    Te.length > 1 && (Te = $r(Te, S, a));
                                    const Ze =
                                        this.normalizer.normalizePropertyName(
                                            le,
                                            a
                                        );
                                    (Te = this.normalizer.normalizeStyleValue(
                                        le,
                                        Ze,
                                        Te,
                                        a
                                    )),
                                        (f[Ze] = Te);
                                });
                            }
                        }),
                        f
                    );
                }
            }
            class ys {
                constructor(o, a, f) {
                    (this.name = o),
                        (this.ast = a),
                        (this._normalizer = f),
                        (this.transitionFactories = []),
                        (this.states = {}),
                        a.states.forEach((S) => {
                            this.states[S.name] = new Eo(
                                S.style,
                                (S.options && S.options.params) || {},
                                f
                            );
                        }),
                        Tr(this.states, 'true', '1'),
                        Tr(this.states, 'false', '0'),
                        a.transitions.forEach((S) => {
                            this.transitionFactories.push(
                                new ms(o, S, this.states)
                            );
                        }),
                        (this.fallbackTransition = (function _s(_, o, a) {
                            return new ms(
                                _,
                                {
                                    type: 1,
                                    animation: {
                                        type: 2,
                                        steps: [],
                                        options: null,
                                    },
                                    matchers: [(K, le) => !0],
                                    options: null,
                                    queryCount: 0,
                                    depCount: 0,
                                },
                                o
                            );
                        })(o, this.states));
                }
                get containsQueries() {
                    return this.ast.queryCount > 0;
                }
                matchTransition(o, a, f, S) {
                    return (
                        this.transitionFactories.find((K) =>
                            K.match(o, a, f, S)
                        ) || null
                    );
                }
                matchStyles(o, a, f) {
                    return this.fallbackTransition.buildStyles(o, a, f);
                }
            }
            function Tr(_, o, a) {
                _.hasOwnProperty(o)
                    ? _.hasOwnProperty(a) || (_[a] = _[o])
                    : _.hasOwnProperty(a) && (_[o] = _[a]);
            }
            const Ti = new At();
            class Ms {
                constructor(o, a, f) {
                    (this.bodyNode = o),
                        (this._driver = a),
                        (this._normalizer = f),
                        (this._animations = {}),
                        (this._playersById = {}),
                        (this.players = []);
                }
                register(o, a) {
                    const f = [],
                        S = Gt(this._driver, a, f);
                    if (f.length)
                        throw new Error(
                            `Unable to build the animation due to the following errors: ${f.join(
                                '\n'
                            )}`
                        );
                    this._animations[o] = S;
                }
                _buildPlayer(o, a, f) {
                    const S = o.element,
                        L = Ht(0, this._normalizer, 0, o.keyframes, a, f);
                    return this._driver.animate(
                        S,
                        L,
                        o.duration,
                        o.delay,
                        o.easing,
                        [],
                        !0
                    );
                }
                create(o, a, f = {}) {
                    const S = [],
                        L = this._animations[o];
                    let K;
                    const le = new Map();
                    if (
                        (L
                            ? ((K = Wr(
                                  this._driver,
                                  a,
                                  L,
                                  Pi,
                                  gi,
                                  {},
                                  {},
                                  f,
                                  Ti,
                                  S
                              )),
                              K.forEach((vt) => {
                                  const xt = hn(le, vt.element, {});
                                  vt.postStyleProps.forEach(
                                      (It) => (xt[It] = null)
                                  );
                              }))
                            : (S.push(
                                  "The requested animation doesn't exist or has already been destroyed"
                              ),
                              (K = [])),
                        S.length)
                    )
                        throw new Error(
                            `Unable to create the animation due to the following errors: ${S.join(
                                '\n'
                            )}`
                        );
                    le.forEach((vt, xt) => {
                        Object.keys(vt).forEach((It) => {
                            vt[It] = this._driver.computeStyle(xt, It, ln);
                        });
                    });
                    const Ze = Cn(
                        K.map((vt) => {
                            const xt = le.get(vt.element);
                            return this._buildPlayer(vt, {}, xt);
                        })
                    );
                    return (
                        (this._playersById[o] = Ze),
                        Ze.onDestroy(() => this.destroy(o)),
                        this.players.push(Ze),
                        Ze
                    );
                }
                destroy(o) {
                    const a = this._getPlayer(o);
                    a.destroy(), delete this._playersById[o];
                    const f = this.players.indexOf(a);
                    f >= 0 && this.players.splice(f, 1);
                }
                _getPlayer(o) {
                    const a = this._playersById[o];
                    if (!a)
                        throw new Error(
                            `Unable to find the timeline player referenced by ${o}`
                        );
                    return a;
                }
                listen(o, a, f, S) {
                    const L = wr(a, '', '', '');
                    return Hr(this._getPlayer(o), f, L, S), () => {};
                }
                command(o, a, f, S) {
                    if ('register' == f) return void this.register(o, S[0]);
                    if ('create' == f)
                        return void this.create(o, a, S[0] || {});
                    const L = this._getPlayer(o);
                    switch (f) {
                        case 'play':
                            L.play();
                            break;
                        case 'pause':
                            L.pause();
                            break;
                        case 'reset':
                            L.reset();
                            break;
                        case 'restart':
                            L.restart();
                            break;
                        case 'finish':
                            L.finish();
                            break;
                        case 'init':
                            L.init();
                            break;
                        case 'setPosition':
                            L.setPosition(parseFloat(S[0]));
                            break;
                        case 'destroy':
                            this.destroy(o);
                    }
                }
            }
            const _i = 'ng-animate-queued',
                D = 'ng-animate-disabled',
                Ne = [],
                gt = {
                    namespaceId: '',
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1,
                },
                bn = {
                    namespaceId: '',
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0,
                },
                In = '__ng_removed';
            class vi {
                constructor(o, a = '') {
                    this.namespaceId = a;
                    const f = o && o.hasOwnProperty('value');
                    if (
                        ((this.value = (function Os(_) {
                            return null != _ ? _ : null;
                        })(f ? o.value : o)),
                        f)
                    ) {
                        const L = bi(o);
                        delete L.value, (this.options = L);
                    } else this.options = {};
                    this.options.params || (this.options.params = {});
                }
                get params() {
                    return this.options.params;
                }
                absorbOptions(o) {
                    const a = o.params;
                    if (a) {
                        const f = this.options.params;
                        Object.keys(a).forEach((S) => {
                            null == f[S] && (f[S] = a[S]);
                        });
                    }
                }
            }
            const zr = 'void',
                Ei = new vi(zr);
            class as {
                constructor(o, a, f) {
                    (this.id = o),
                        (this.hostElement = a),
                        (this._engine = f),
                        (this.players = []),
                        (this._triggers = {}),
                        (this._queue = []),
                        (this._elementListeners = new Map()),
                        (this._hostClassName = 'ng-tns-' + o),
                        Di(a, this._hostClassName);
                }
                listen(o, a, f, S) {
                    if (!this._triggers.hasOwnProperty(a))
                        throw new Error(
                            `Unable to listen on the animation trigger event "${f}" because the animation trigger "${a}" doesn't exist!`
                        );
                    if (null == f || 0 == f.length)
                        throw new Error(
                            `Unable to listen on the animation trigger "${a}" because the provided event is undefined!`
                        );
                    if (
                        !(function Fo(_) {
                            return 'start' == _ || 'done' == _;
                        })(f)
                    )
                        throw new Error(
                            `The provided animation trigger event "${f}" for the animation trigger "${a}" is not supported!`
                        );
                    const L = hn(this._elementListeners, o, []),
                        K = { name: a, phase: f, callback: S };
                    L.push(K);
                    const le = hn(this._engine.statesByElement, o, {});
                    return (
                        le.hasOwnProperty(a) ||
                            (Di(o, Zr), Di(o, Zr + '-' + a), (le[a] = Ei)),
                        () => {
                            this._engine.afterFlush(() => {
                                const Te = L.indexOf(K);
                                Te >= 0 && L.splice(Te, 1),
                                    this._triggers[a] || delete le[a];
                            });
                        }
                    );
                }
                register(o, a) {
                    return !this._triggers[o] && ((this._triggers[o] = a), !0);
                }
                _getTrigger(o) {
                    const a = this._triggers[o];
                    if (!a)
                        throw new Error(
                            `The provided animation trigger "${o}" has not been registered!`
                        );
                    return a;
                }
                trigger(o, a, f, S = !0) {
                    const L = this._getTrigger(a),
                        K = new Ys(this.id, a, o);
                    let le = this._engine.statesByElement.get(o);
                    le ||
                        (Di(o, Zr),
                        Di(o, Zr + '-' + a),
                        this._engine.statesByElement.set(o, (le = {})));
                    let Te = le[a];
                    const Ze = new vi(f, this.id);
                    if (
                        (!(f && f.hasOwnProperty('value')) &&
                            Te &&
                            Ze.absorbOptions(Te.options),
                        (le[a] = Ze),
                        Te || (Te = Ei),
                        Ze.value !== zr && Te.value === Ze.value)
                    ) {
                        if (
                            !(function Do(_, o) {
                                const a = Object.keys(_),
                                    f = Object.keys(o);
                                if (a.length != f.length) return !1;
                                for (let S = 0; S < a.length; S++) {
                                    const L = a[S];
                                    if (!o.hasOwnProperty(L) || _[L] !== o[L])
                                        return !1;
                                }
                                return !0;
                            })(Te.params, Ze.params)
                        ) {
                            const vn = [],
                                dr = L.matchStyles(Te.value, Te.params, vn),
                                jr = L.matchStyles(Ze.value, Ze.params, vn);
                            vn.length
                                ? this._engine.reportError(vn)
                                : this._engine.afterFlush(() => {
                                      ai(o, dr), Pr(o, jr);
                                  });
                        }
                        return;
                    }
                    const It = hn(this._engine.playersByElement, o, []);
                    It.forEach((vn) => {
                        vn.namespaceId == this.id &&
                            vn.triggerName == a &&
                            vn.queued &&
                            vn.destroy();
                    });
                    let Mn = L.matchTransition(
                            Te.value,
                            Ze.value,
                            o,
                            Ze.params
                        ),
                        qt = !1;
                    if (!Mn) {
                        if (!S) return;
                        (Mn = L.fallbackTransition), (qt = !0);
                    }
                    return (
                        this._engine.totalQueuedPlayers++,
                        this._queue.push({
                            element: o,
                            triggerName: a,
                            transition: Mn,
                            fromState: Te,
                            toState: Ze,
                            player: K,
                            isFallbackTransition: qt,
                        }),
                        qt ||
                            (Di(o, _i),
                            K.onStart(() => {
                                ts(o, _i);
                            })),
                        K.onDone(() => {
                            let vn = this.players.indexOf(K);
                            vn >= 0 && this.players.splice(vn, 1);
                            const dr = this._engine.playersByElement.get(o);
                            if (dr) {
                                let jr = dr.indexOf(K);
                                jr >= 0 && dr.splice(jr, 1);
                            }
                        }),
                        this.players.push(K),
                        It.push(K),
                        K
                    );
                }
                deregister(o) {
                    delete this._triggers[o],
                        this._engine.statesByElement.forEach((a, f) => {
                            delete a[o];
                        }),
                        this._elementListeners.forEach((a, f) => {
                            this._elementListeners.set(
                                f,
                                a.filter((S) => S.name != o)
                            );
                        });
                }
                clearElementCache(o) {
                    this._engine.statesByElement.delete(o),
                        this._elementListeners.delete(o);
                    const a = this._engine.playersByElement.get(o);
                    a &&
                        (a.forEach((f) => f.destroy()),
                        this._engine.playersByElement.delete(o));
                }
                _signalRemovalForInnerTriggers(o, a) {
                    const f = this._engine.driver.query(o, qr, !0);
                    f.forEach((S) => {
                        if (S[In]) return;
                        const L = this._engine.fetchNamespacesByElement(S);
                        L.size
                            ? L.forEach((K) =>
                                  K.triggerLeaveAnimation(S, a, !1, !0)
                              )
                            : this.clearElementCache(S);
                    }),
                        this._engine.afterFlushAnimationsDone(() =>
                            f.forEach((S) => this.clearElementCache(S))
                        );
                }
                triggerLeaveAnimation(o, a, f, S) {
                    const L = this._engine.statesByElement.get(o),
                        K = new Map();
                    if (L) {
                        const le = [];
                        if (
                            (Object.keys(L).forEach((Te) => {
                                if (
                                    (K.set(Te, L[Te].value), this._triggers[Te])
                                ) {
                                    const Ze = this.trigger(o, Te, zr, S);
                                    Ze && le.push(Ze);
                                }
                            }),
                            le.length)
                        )
                            return (
                                this._engine.markElementAsRemoved(
                                    this.id,
                                    o,
                                    !0,
                                    a,
                                    K
                                ),
                                f &&
                                    Cn(le).onDone(() =>
                                        this._engine.processLeaveNode(o)
                                    ),
                                !0
                            );
                    }
                    return !1;
                }
                prepareLeaveAnimationListeners(o) {
                    const a = this._elementListeners.get(o),
                        f = this._engine.statesByElement.get(o);
                    if (a && f) {
                        const S = new Set();
                        a.forEach((L) => {
                            const K = L.name;
                            if (S.has(K)) return;
                            S.add(K);
                            const Te = this._triggers[K].fallbackTransition,
                                Ze = f[K] || Ei,
                                vt = new vi(zr),
                                xt = new Ys(this.id, K, o);
                            this._engine.totalQueuedPlayers++,
                                this._queue.push({
                                    element: o,
                                    triggerName: K,
                                    transition: Te,
                                    fromState: Ze,
                                    toState: vt,
                                    player: xt,
                                    isFallbackTransition: !0,
                                });
                        });
                    }
                }
                removeNode(o, a) {
                    const f = this._engine;
                    if (
                        (o.childElementCount &&
                            this._signalRemovalForInnerTriggers(o, a),
                        this.triggerLeaveAnimation(o, a, !0))
                    )
                        return;
                    let S = !1;
                    if (f.totalAnimations) {
                        const L = f.players.length
                            ? f.playersByQueriedElement.get(o)
                            : [];
                        if (L && L.length) S = !0;
                        else {
                            let K = o;
                            for (; (K = K.parentNode); )
                                if (f.statesByElement.get(K)) {
                                    S = !0;
                                    break;
                                }
                        }
                    }
                    if ((this.prepareLeaveAnimationListeners(o), S))
                        f.markElementAsRemoved(this.id, o, !1, a);
                    else {
                        const L = o[In];
                        (!L || L === gt) &&
                            (f.afterFlush(() => this.clearElementCache(o)),
                            f.destroyInnerAnimations(o),
                            f._onRemovalComplete(o, a));
                    }
                }
                insertNode(o, a) {
                    Di(o, this._hostClassName);
                }
                drainQueuedTransitions(o) {
                    const a = [];
                    return (
                        this._queue.forEach((f) => {
                            const S = f.player;
                            if (S.destroyed) return;
                            const L = f.element,
                                K = this._elementListeners.get(L);
                            K &&
                                K.forEach((le) => {
                                    if (le.name == f.triggerName) {
                                        const Te = wr(
                                            L,
                                            f.triggerName,
                                            f.fromState.value,
                                            f.toState.value
                                        );
                                        (Te._data = o),
                                            Hr(
                                                f.player,
                                                le.phase,
                                                Te,
                                                le.callback
                                            );
                                    }
                                }),
                                S.markedForDestroy
                                    ? this._engine.afterFlush(() => {
                                          S.destroy();
                                      })
                                    : a.push(f);
                        }),
                        (this._queue = []),
                        a.sort((f, S) => {
                            const L = f.transition.ast.depCount,
                                K = S.transition.ast.depCount;
                            return 0 == L || 0 == K
                                ? L - K
                                : this._engine.driver.containsElement(
                                      f.element,
                                      S.element
                                  )
                                ? 1
                                : -1;
                        })
                    );
                }
                destroy(o) {
                    this.players.forEach((a) => a.destroy()),
                        this._signalRemovalForInnerTriggers(
                            this.hostElement,
                            o
                        );
                }
                elementContainsData(o) {
                    let a = !1;
                    return (
                        this._elementListeners.has(o) && (a = !0),
                        (a = !!this._queue.find((f) => f.element === o) || a),
                        a
                    );
                }
            }
            class Ks {
                constructor(o, a, f) {
                    (this.bodyNode = o),
                        (this.driver = a),
                        (this._normalizer = f),
                        (this.players = []),
                        (this.newHostElements = new Map()),
                        (this.playersByElement = new Map()),
                        (this.playersByQueriedElement = new Map()),
                        (this.statesByElement = new Map()),
                        (this.disabledNodes = new Set()),
                        (this.totalAnimations = 0),
                        (this.totalQueuedPlayers = 0),
                        (this._namespaceLookup = {}),
                        (this._namespaceList = []),
                        (this._flushFns = []),
                        (this._whenQuietFns = []),
                        (this.namespacesByHostElement = new Map()),
                        (this.collectedEnterElements = []),
                        (this.collectedLeaveElements = []),
                        (this.onRemovalComplete = (S, L) => {});
                }
                _onRemovalComplete(o, a) {
                    this.onRemovalComplete(o, a);
                }
                get queuedPlayers() {
                    const o = [];
                    return (
                        this._namespaceList.forEach((a) => {
                            a.players.forEach((f) => {
                                f.queued && o.push(f);
                            });
                        }),
                        o
                    );
                }
                createNamespace(o, a) {
                    const f = new as(o, a, this);
                    return (
                        this.bodyNode &&
                        this.driver.containsElement(this.bodyNode, a)
                            ? this._balanceNamespaceList(f, a)
                            : (this.newHostElements.set(a, f),
                              this.collectEnterElement(a)),
                        (this._namespaceLookup[o] = f)
                    );
                }
                _balanceNamespaceList(o, a) {
                    const f = this._namespaceList.length - 1;
                    if (f >= 0) {
                        let S = !1;
                        for (let L = f; L >= 0; L--)
                            if (
                                this.driver.containsElement(
                                    this._namespaceList[L].hostElement,
                                    a
                                )
                            ) {
                                this._namespaceList.splice(L + 1, 0, o),
                                    (S = !0);
                                break;
                            }
                        S || this._namespaceList.splice(0, 0, o);
                    } else this._namespaceList.push(o);
                    return this.namespacesByHostElement.set(a, o), o;
                }
                register(o, a) {
                    let f = this._namespaceLookup[o];
                    return f || (f = this.createNamespace(o, a)), f;
                }
                registerTrigger(o, a, f) {
                    let S = this._namespaceLookup[o];
                    S && S.register(a, f) && this.totalAnimations++;
                }
                destroy(o, a) {
                    if (!o) return;
                    const f = this._fetchNamespace(o);
                    this.afterFlush(() => {
                        this.namespacesByHostElement.delete(f.hostElement),
                            delete this._namespaceLookup[o];
                        const S = this._namespaceList.indexOf(f);
                        S >= 0 && this._namespaceList.splice(S, 1);
                    }),
                        this.afterFlushAnimationsDone(() => f.destroy(a));
                }
                _fetchNamespace(o) {
                    return this._namespaceLookup[o];
                }
                fetchNamespacesByElement(o) {
                    const a = new Set(),
                        f = this.statesByElement.get(o);
                    if (f) {
                        const S = Object.keys(f);
                        for (let L = 0; L < S.length; L++) {
                            const K = f[S[L]].namespaceId;
                            if (K) {
                                const le = this._fetchNamespace(K);
                                le && a.add(le);
                            }
                        }
                    }
                    return a;
                }
                trigger(o, a, f, S) {
                    if (es(a)) {
                        const L = this._fetchNamespace(o);
                        if (L) return L.trigger(a, f, S), !0;
                    }
                    return !1;
                }
                insertNode(o, a, f, S) {
                    if (!es(a)) return;
                    const L = a[In];
                    if (L && L.setForRemoval) {
                        (L.setForRemoval = !1), (L.setForMove = !0);
                        const K = this.collectedLeaveElements.indexOf(a);
                        K >= 0 && this.collectedLeaveElements.splice(K, 1);
                    }
                    if (o) {
                        const K = this._fetchNamespace(o);
                        K && K.insertNode(a, f);
                    }
                    S && this.collectEnterElement(a);
                }
                collectEnterElement(o) {
                    this.collectedEnterElements.push(o);
                }
                markElementAsDisabled(o, a) {
                    a
                        ? this.disabledNodes.has(o) ||
                          (this.disabledNodes.add(o), Di(o, D))
                        : this.disabledNodes.has(o) &&
                          (this.disabledNodes.delete(o), ts(o, D));
                }
                removeNode(o, a, f, S) {
                    if (es(a)) {
                        const L = o ? this._fetchNamespace(o) : null;
                        if (
                            (L
                                ? L.removeNode(a, S)
                                : this.markElementAsRemoved(o, a, !1, S),
                            f)
                        ) {
                            const K = this.namespacesByHostElement.get(a);
                            K && K.id !== o && K.removeNode(a, S);
                        }
                    } else this._onRemovalComplete(a, S);
                }
                markElementAsRemoved(o, a, f, S, L) {
                    this.collectedLeaveElements.push(a),
                        (a[In] = {
                            namespaceId: o,
                            setForRemoval: S,
                            hasAnimation: f,
                            removedBeforeQueried: !1,
                            previousTriggersValues: L,
                        });
                }
                listen(o, a, f, S, L) {
                    return es(a)
                        ? this._fetchNamespace(o).listen(a, f, S, L)
                        : () => {};
                }
                _buildInstruction(o, a, f, S, L) {
                    return o.transition.build(
                        this.driver,
                        o.element,
                        o.fromState.value,
                        o.toState.value,
                        f,
                        S,
                        o.fromState.options,
                        o.toState.options,
                        a,
                        L
                    );
                }
                destroyInnerAnimations(o) {
                    let a = this.driver.query(o, qr, !0);
                    a.forEach((f) => this.destroyActiveAnimationsForElement(f)),
                        0 != this.playersByQueriedElement.size &&
                            ((a = this.driver.query(o, Ki, !0)),
                            a.forEach((f) =>
                                this.finishActiveQueriedAnimationOnElement(f)
                            ));
                }
                destroyActiveAnimationsForElement(o) {
                    const a = this.playersByElement.get(o);
                    a &&
                        a.forEach((f) => {
                            f.queued ? (f.markedForDestroy = !0) : f.destroy();
                        });
                }
                finishActiveQueriedAnimationOnElement(o) {
                    const a = this.playersByQueriedElement.get(o);
                    a && a.forEach((f) => f.finish());
                }
                whenRenderingDone() {
                    return new Promise((o) => {
                        if (this.players.length)
                            return Cn(this.players).onDone(() => o());
                        o();
                    });
                }
                processLeaveNode(o) {
                    var a;
                    const f = o[In];
                    if (f && f.setForRemoval) {
                        if (((o[In] = gt), f.namespaceId)) {
                            this.destroyInnerAnimations(o);
                            const S = this._fetchNamespace(f.namespaceId);
                            S && S.clearElementCache(o);
                        }
                        this._onRemovalComplete(o, f.setForRemoval);
                    }
                    (null === (a = o.classList) || void 0 === a
                        ? void 0
                        : a.contains(D)) && this.markElementAsDisabled(o, !1),
                        this.driver
                            .query(o, '.ng-animate-disabled', !0)
                            .forEach((S) => {
                                this.markElementAsDisabled(S, !1);
                            });
                }
                flush(o = -1) {
                    let a = [];
                    if (
                        (this.newHostElements.size &&
                            (this.newHostElements.forEach((f, S) =>
                                this._balanceNamespaceList(f, S)
                            ),
                            this.newHostElements.clear()),
                        this.totalAnimations &&
                            this.collectedEnterElements.length)
                    )
                        for (
                            let f = 0;
                            f < this.collectedEnterElements.length;
                            f++
                        )
                            Di(
                                this.collectedEnterElements[f],
                                'ng-star-inserted'
                            );
                    if (
                        this._namespaceList.length &&
                        (this.totalQueuedPlayers ||
                            this.collectedLeaveElements.length)
                    ) {
                        const f = [];
                        try {
                            a = this._flushAnimations(f, o);
                        } finally {
                            for (let S = 0; S < f.length; S++) f[S]();
                        }
                    } else
                        for (
                            let f = 0;
                            f < this.collectedLeaveElements.length;
                            f++
                        )
                            this.processLeaveNode(
                                this.collectedLeaveElements[f]
                            );
                    if (
                        ((this.totalQueuedPlayers = 0),
                        (this.collectedEnterElements.length = 0),
                        (this.collectedLeaveElements.length = 0),
                        this._flushFns.forEach((f) => f()),
                        (this._flushFns = []),
                        this._whenQuietFns.length)
                    ) {
                        const f = this._whenQuietFns;
                        (this._whenQuietFns = []),
                            a.length
                                ? Cn(a).onDone(() => {
                                      f.forEach((S) => S());
                                  })
                                : f.forEach((S) => S());
                    }
                }
                reportError(o) {
                    throw new Error(
                        `Unable to process animations due to the following failed trigger transitions\n ${o.join(
                            '\n'
                        )}`
                    );
                }
                _flushAnimations(o, a) {
                    const f = new At(),
                        S = [],
                        L = new Map(),
                        K = [],
                        le = new Map(),
                        Te = new Map(),
                        Ze = new Map(),
                        vt = new Set();
                    this.disabledNodes.forEach((Tt) => {
                        vt.add(Tt);
                        const Wt = this.driver.query(
                            Tt,
                            '.ng-animate-queued',
                            !0
                        );
                        for (let Qt = 0; Qt < Wt.length; Qt++) vt.add(Wt[Qt]);
                    });
                    const xt = this.bodyNode,
                        It = Array.from(this.statesByElement.keys()),
                        Mn = pr(It, this.collectedEnterElements),
                        qt = new Map();
                    let vn = 0;
                    Mn.forEach((Tt, Wt) => {
                        const Qt = Pi + vn++;
                        qt.set(Wt, Qt), Tt.forEach((qn) => Di(qn, Qt));
                    });
                    const dr = [],
                        jr = new Set(),
                        Kr = new Set();
                    for (
                        let Tt = 0;
                        Tt < this.collectedLeaveElements.length;
                        Tt++
                    ) {
                        const Wt = this.collectedLeaveElements[Tt],
                            Qt = Wt[In];
                        Qt &&
                            Qt.setForRemoval &&
                            (dr.push(Wt),
                            jr.add(Wt),
                            Qt.hasAnimation
                                ? this.driver
                                      .query(Wt, '.ng-star-inserted', !0)
                                      .forEach((qn) => jr.add(qn))
                                : Kr.add(Wt));
                    }
                    const Ci = new Map(),
                        Fr = pr(It, Array.from(jr));
                    Fr.forEach((Tt, Wt) => {
                        const Qt = gi + vn++;
                        Ci.set(Wt, Qt), Tt.forEach((qn) => Di(qn, Qt));
                    }),
                        o.push(() => {
                            Mn.forEach((Tt, Wt) => {
                                const Qt = qt.get(Wt);
                                Tt.forEach((qn) => ts(qn, Qt));
                            }),
                                Fr.forEach((Tt, Wt) => {
                                    const Qt = Ci.get(Wt);
                                    Tt.forEach((qn) => ts(qn, Qt));
                                }),
                                dr.forEach((Tt) => {
                                    this.processLeaveNode(Tt);
                                });
                        });
                    const mo = [],
                        sr = [];
                    for (let Tt = this._namespaceList.length - 1; Tt >= 0; Tt--)
                        this._namespaceList[Tt].drainQueuedTransitions(
                            a
                        ).forEach((Qt) => {
                            const qn = Qt.player,
                                ei = Qt.element;
                            if (
                                (mo.push(qn),
                                this.collectedEnterElements.length)
                            ) {
                                const hi = ei[In];
                                if (hi && hi.setForMove) {
                                    if (
                                        hi.previousTriggersValues &&
                                        hi.previousTriggersValues.has(
                                            Qt.triggerName
                                        )
                                    ) {
                                        const Oi =
                                                hi.previousTriggersValues.get(
                                                    Qt.triggerName
                                                ),
                                            ks = this.statesByElement.get(
                                                Qt.element
                                            );
                                        ks &&
                                            ks[Qt.triggerName] &&
                                            (ks[Qt.triggerName].value = Oi);
                                    }
                                    return void qn.destroy();
                                }
                            }
                            const ji =
                                    !xt || !this.driver.containsElement(xt, ei),
                                Jn = Ci.get(ei),
                                Hi = qt.get(ei),
                                or = this._buildInstruction(Qt, f, Hi, Jn, ji);
                            if (or.errors && or.errors.length)
                                return void sr.push(or);
                            if (ji)
                                return (
                                    qn.onStart(() => ai(ei, or.fromStyles)),
                                    qn.onDestroy(() => Pr(ei, or.toStyles)),
                                    void S.push(qn)
                                );
                            if (Qt.isFallbackTransition)
                                return (
                                    qn.onStart(() => ai(ei, or.fromStyles)),
                                    qn.onDestroy(() => Pr(ei, or.toStyles)),
                                    void S.push(qn)
                                );
                            const Da = [];
                            or.timelines.forEach((hi) => {
                                (hi.stretchStartingKeyframe = !0),
                                    this.disabledNodes.has(hi.element) ||
                                        Da.push(hi);
                            }),
                                (or.timelines = Da),
                                f.append(ei, or.timelines),
                                K.push({
                                    instruction: or,
                                    player: qn,
                                    element: ei,
                                }),
                                or.queriedElements.forEach((hi) =>
                                    hn(le, hi, []).push(qn)
                                ),
                                or.preStyleProps.forEach((hi, Oi) => {
                                    const ks = Object.keys(hi);
                                    if (ks.length) {
                                        let to = Te.get(Oi);
                                        to || Te.set(Oi, (to = new Set())),
                                            ks.forEach((So) => to.add(So));
                                    }
                                }),
                                or.postStyleProps.forEach((hi, Oi) => {
                                    const ks = Object.keys(hi);
                                    let to = Ze.get(Oi);
                                    to || Ze.set(Oi, (to = new Set())),
                                        ks.forEach((So) => to.add(So));
                                });
                        });
                    if (sr.length) {
                        const Tt = [];
                        sr.forEach((Wt) => {
                            Tt.push(`@${Wt.triggerName} has failed due to:\n`),
                                Wt.errors.forEach((Qt) => Tt.push(`- ${Qt}\n`));
                        }),
                            mo.forEach((Wt) => Wt.destroy()),
                            this.reportError(Tt);
                    }
                    const Xr = new Map(),
                        Mi = new Map();
                    K.forEach((Tt) => {
                        const Wt = Tt.element;
                        f.has(Wt) &&
                            (Mi.set(Wt, Wt),
                            this._beforeAnimationBuild(
                                Tt.player.namespaceId,
                                Tt.instruction,
                                Xr
                            ));
                    }),
                        S.forEach((Tt) => {
                            const Wt = Tt.element;
                            this._getPreviousPlayers(
                                Wt,
                                !1,
                                Tt.namespaceId,
                                Tt.triggerName,
                                null
                            ).forEach((qn) => {
                                hn(Xr, Wt, []).push(qn), qn.destroy();
                            });
                        });
                    const Cs = dr.filter((Tt) => Rs(Tt, Te, Ze)),
                        rs = new Map();
                    Ui(rs, this.driver, Kr, Ze, ln).forEach((Tt) => {
                        Rs(Tt, Te, Ze) && Cs.push(Tt);
                    });
                    const fi = new Map();
                    Mn.forEach((Tt, Wt) => {
                        Ui(fi, this.driver, new Set(Tt), Te, '!');
                    }),
                        Cs.forEach((Tt) => {
                            const Wt = rs.get(Tt),
                                Qt = fi.get(Tt);
                            rs.set(
                                Tt,
                                Object.assign(Object.assign({}, Wt), Qt)
                            );
                        });
                    const is = [],
                        eo = [],
                        bs = {};
                    K.forEach((Tt) => {
                        const { element: Wt, player: Qt, instruction: qn } = Tt;
                        if (f.has(Wt)) {
                            if (vt.has(Wt))
                                return (
                                    Qt.onDestroy(() => Pr(Wt, qn.toStyles)),
                                    (Qt.disabled = !0),
                                    Qt.overrideTotalTime(qn.totalTime),
                                    void S.push(Qt)
                                );
                            let ei = bs;
                            if (Mi.size > 1) {
                                let Jn = Wt;
                                const Hi = [];
                                for (; (Jn = Jn.parentNode); ) {
                                    const or = Mi.get(Jn);
                                    if (or) {
                                        ei = or;
                                        break;
                                    }
                                    Hi.push(Jn);
                                }
                                Hi.forEach((or) => Mi.set(or, ei));
                            }
                            const ji = this._buildAnimation(
                                Qt.namespaceId,
                                qn,
                                Xr,
                                L,
                                fi,
                                rs
                            );
                            if ((Qt.setRealPlayer(ji), ei === bs)) is.push(Qt);
                            else {
                                const Jn = this.playersByElement.get(ei);
                                Jn && Jn.length && (Qt.parentPlayer = Cn(Jn)),
                                    S.push(Qt);
                            }
                        } else
                            ai(Wt, qn.fromStyles),
                                Qt.onDestroy(() => Pr(Wt, qn.toStyles)),
                                eo.push(Qt),
                                vt.has(Wt) && S.push(Qt);
                    }),
                        eo.forEach((Tt) => {
                            const Wt = L.get(Tt.element);
                            if (Wt && Wt.length) {
                                const Qt = Cn(Wt);
                                Tt.setRealPlayer(Qt);
                            }
                        }),
                        S.forEach((Tt) => {
                            Tt.parentPlayer
                                ? Tt.syncPlayerEvents(Tt.parentPlayer)
                                : Tt.destroy();
                        });
                    for (let Tt = 0; Tt < dr.length; Tt++) {
                        const Wt = dr[Tt],
                            Qt = Wt[In];
                        if ((ts(Wt, gi), Qt && Qt.hasAnimation)) continue;
                        let qn = [];
                        if (le.size) {
                            let ji = le.get(Wt);
                            ji && ji.length && qn.push(...ji);
                            let Jn = this.driver.query(Wt, Ki, !0);
                            for (let Hi = 0; Hi < Jn.length; Hi++) {
                                let or = le.get(Jn[Hi]);
                                or && or.length && qn.push(...or);
                            }
                        }
                        const ei = qn.filter((ji) => !ji.destroyed);
                        ei.length
                            ? $o(this, Wt, ei)
                            : this.processLeaveNode(Wt);
                    }
                    return (
                        (dr.length = 0),
                        is.forEach((Tt) => {
                            this.players.push(Tt),
                                Tt.onDone(() => {
                                    Tt.destroy();
                                    const Wt = this.players.indexOf(Tt);
                                    this.players.splice(Wt, 1);
                                }),
                                Tt.play();
                        }),
                        is
                    );
                }
                elementContainsData(o, a) {
                    let f = !1;
                    const S = a[In];
                    return (
                        S && S.setForRemoval && (f = !0),
                        this.playersByElement.has(a) && (f = !0),
                        this.playersByQueriedElement.has(a) && (f = !0),
                        this.statesByElement.has(a) && (f = !0),
                        this._fetchNamespace(o).elementContainsData(a) || f
                    );
                }
                afterFlush(o) {
                    this._flushFns.push(o);
                }
                afterFlushAnimationsDone(o) {
                    this._whenQuietFns.push(o);
                }
                _getPreviousPlayers(o, a, f, S, L) {
                    let K = [];
                    if (a) {
                        const le = this.playersByQueriedElement.get(o);
                        le && (K = le);
                    } else {
                        const le = this.playersByElement.get(o);
                        if (le) {
                            const Te = !L || L == zr;
                            le.forEach((Ze) => {
                                Ze.queued ||
                                    (!Te && Ze.triggerName != S) ||
                                    K.push(Ze);
                            });
                        }
                    }
                    return (
                        (f || S) &&
                            (K = K.filter(
                                (le) =>
                                    !(
                                        (f && f != le.namespaceId) ||
                                        (S && S != le.triggerName)
                                    )
                            )),
                        K
                    );
                }
                _beforeAnimationBuild(o, a, f) {
                    const L = a.element,
                        K = a.isRemovalTransition ? void 0 : o,
                        le = a.isRemovalTransition ? void 0 : a.triggerName;
                    for (const Te of a.timelines) {
                        const Ze = Te.element,
                            vt = Ze !== L,
                            xt = hn(f, Ze, []);
                        this._getPreviousPlayers(
                            Ze,
                            vt,
                            K,
                            le,
                            a.toState
                        ).forEach((Mn) => {
                            const qt = Mn.getRealPlayer();
                            qt.beforeDestroy && qt.beforeDestroy(),
                                Mn.destroy(),
                                xt.push(Mn);
                        });
                    }
                    ai(L, a.fromStyles);
                }
                _buildAnimation(o, a, f, S, L, K) {
                    const le = a.triggerName,
                        Te = a.element,
                        Ze = [],
                        vt = new Set(),
                        xt = new Set(),
                        It = a.timelines.map((qt) => {
                            const vn = qt.element;
                            vt.add(vn);
                            const dr = vn[In];
                            if (dr && dr.removedBeforeQueried)
                                return new hr(qt.duration, qt.delay);
                            const jr = vn !== Te,
                                Kr = (function Go(_) {
                                    const o = [];
                                    return Ps(_, o), o;
                                })(
                                    (f.get(vn) || Ne).map((Xr) =>
                                        Xr.getRealPlayer()
                                    )
                                ).filter(
                                    (Xr) => !!Xr.element && Xr.element === vn
                                ),
                                Ci = L.get(vn),
                                Fr = K.get(vn),
                                mo = Ht(
                                    0,
                                    this._normalizer,
                                    0,
                                    qt.keyframes,
                                    Ci,
                                    Fr
                                ),
                                sr = this._buildPlayer(qt, mo, Kr);
                            if ((qt.subTimeline && S && xt.add(vn), jr)) {
                                const Xr = new Ys(o, le, vn);
                                Xr.setRealPlayer(sr), Ze.push(Xr);
                            }
                            return sr;
                        });
                    Ze.forEach((qt) => {
                        hn(this.playersByQueriedElement, qt.element, []).push(
                            qt
                        ),
                            qt.onDone(() =>
                                (function uo(_, o, a) {
                                    let f;
                                    if (_ instanceof Map) {
                                        if (((f = _.get(o)), f)) {
                                            if (f.length) {
                                                const S = f.indexOf(a);
                                                f.splice(S, 1);
                                            }
                                            0 == f.length && _.delete(o);
                                        }
                                    } else if (((f = _[o]), f)) {
                                        if (f.length) {
                                            const S = f.indexOf(a);
                                            f.splice(S, 1);
                                        }
                                        0 == f.length && delete _[o];
                                    }
                                    return f;
                                })(this.playersByQueriedElement, qt.element, qt)
                            );
                    }),
                        vt.forEach((qt) => Di(qt, Ri));
                    const Mn = Cn(It);
                    return (
                        Mn.onDestroy(() => {
                            vt.forEach((qt) => ts(qt, Ri)), Pr(Te, a.toStyles);
                        }),
                        xt.forEach((qt) => {
                            hn(S, qt, []).push(Mn);
                        }),
                        Mn
                    );
                }
                _buildPlayer(o, a, f) {
                    return a.length > 0
                        ? this.driver.animate(
                              o.element,
                              a,
                              o.duration,
                              o.delay,
                              o.easing,
                              f
                          )
                        : new hr(o.duration, o.delay);
                }
            }
            class Ys {
                constructor(o, a, f) {
                    (this.namespaceId = o),
                        (this.triggerName = a),
                        (this.element = f),
                        (this._player = new hr()),
                        (this._containsRealPlayer = !1),
                        (this._queuedCallbacks = {}),
                        (this.destroyed = !1),
                        (this.markedForDestroy = !1),
                        (this.disabled = !1),
                        (this.queued = !0),
                        (this.totalTime = 0);
                }
                setRealPlayer(o) {
                    this._containsRealPlayer ||
                        ((this._player = o),
                        Object.keys(this._queuedCallbacks).forEach((a) => {
                            this._queuedCallbacks[a].forEach((f) =>
                                Hr(o, a, void 0, f)
                            );
                        }),
                        (this._queuedCallbacks = {}),
                        (this._containsRealPlayer = !0),
                        this.overrideTotalTime(o.totalTime),
                        (this.queued = !1));
                }
                getRealPlayer() {
                    return this._player;
                }
                overrideTotalTime(o) {
                    this.totalTime = o;
                }
                syncPlayerEvents(o) {
                    const a = this._player;
                    a.triggerCallback &&
                        o.onStart(() => a.triggerCallback('start')),
                        o.onDone(() => this.finish()),
                        o.onDestroy(() => this.destroy());
                }
                _queueEvent(o, a) {
                    hn(this._queuedCallbacks, o, []).push(a);
                }
                onDone(o) {
                    this.queued && this._queueEvent('done', o),
                        this._player.onDone(o);
                }
                onStart(o) {
                    this.queued && this._queueEvent('start', o),
                        this._player.onStart(o);
                }
                onDestroy(o) {
                    this.queued && this._queueEvent('destroy', o),
                        this._player.onDestroy(o);
                }
                init() {
                    this._player.init();
                }
                hasStarted() {
                    return !this.queued && this._player.hasStarted();
                }
                play() {
                    !this.queued && this._player.play();
                }
                pause() {
                    !this.queued && this._player.pause();
                }
                restart() {
                    !this.queued && this._player.restart();
                }
                finish() {
                    this._player.finish();
                }
                destroy() {
                    (this.destroyed = !0), this._player.destroy();
                }
                reset() {
                    !this.queued && this._player.reset();
                }
                setPosition(o) {
                    this.queued || this._player.setPosition(o);
                }
                getPosition() {
                    return this.queued ? 0 : this._player.getPosition();
                }
                triggerCallback(o) {
                    const a = this._player;
                    a.triggerCallback && a.triggerCallback(o);
                }
            }
            function es(_) {
                return _ && 1 === _.nodeType;
            }
            function kr(_, o) {
                const a = _.style.display;
                return (_.style.display = null != o ? o : 'none'), a;
            }
            function Ui(_, o, a, f, S) {
                const L = [];
                a.forEach((Te) => L.push(kr(Te)));
                const K = [];
                f.forEach((Te, Ze) => {
                    const vt = {};
                    Te.forEach((xt) => {
                        const It = (vt[xt] = o.computeStyle(Ze, xt, S));
                        (!It || 0 == It.length) && ((Ze[In] = bn), K.push(Ze));
                    }),
                        _.set(Ze, vt);
                });
                let le = 0;
                return a.forEach((Te) => kr(Te, L[le++])), K;
            }
            function pr(_, o) {
                const a = new Map();
                if ((_.forEach((le) => a.set(le, [])), 0 == o.length)) return a;
                const S = new Set(o),
                    L = new Map();
                function K(le) {
                    if (!le) return 1;
                    let Te = L.get(le);
                    if (Te) return Te;
                    const Ze = le.parentNode;
                    return (
                        (Te = a.has(Ze) ? Ze : S.has(Ze) ? 1 : K(Ze)),
                        L.set(le, Te),
                        Te
                    );
                }
                return (
                    o.forEach((le) => {
                        const Te = K(le);
                        1 !== Te && a.get(Te).push(le);
                    }),
                    a
                );
            }
            function Di(_, o) {
                var a;
                null === (a = _.classList) || void 0 === a || a.add(o);
            }
            function ts(_, o) {
                var a;
                null === (a = _.classList) || void 0 === a || a.remove(o);
            }
            function $o(_, o, a) {
                Cn(a).onDone(() => _.processLeaveNode(o));
            }
            function Ps(_, o) {
                for (let a = 0; a < _.length; a++) {
                    const f = _[a];
                    f instanceof En ? Ps(f.players, o) : o.push(f);
                }
            }
            function Rs(_, o, a) {
                const f = a.get(_);
                if (!f) return !1;
                let S = o.get(_);
                return (
                    S ? f.forEach((L) => S.add(L)) : o.set(_, f),
                    a.delete(_),
                    !0
                );
            }
            class ls {
                constructor(o, a, f) {
                    (this.bodyNode = o),
                        (this._driver = a),
                        (this._normalizer = f),
                        (this._triggerCache = {}),
                        (this.onRemovalComplete = (S, L) => {}),
                        (this._transitionEngine = new Ks(o, a, f)),
                        (this._timelineEngine = new Ms(o, a, f)),
                        (this._transitionEngine.onRemovalComplete = (S, L) =>
                            this.onRemovalComplete(S, L));
                }
                registerTrigger(o, a, f, S, L) {
                    const K = o + '-' + S;
                    let le = this._triggerCache[K];
                    if (!le) {
                        const Te = [],
                            Ze = Gt(this._driver, L, Te);
                        if (Te.length)
                            throw new Error(
                                `The animation trigger "${S}" has failed to build due to the following errors:\n - ${Te.join(
                                    '\n - '
                                )}`
                            );
                        (le = (function Is(_, o, a) {
                            return new ys(_, o, a);
                        })(S, Ze, this._normalizer)),
                            (this._triggerCache[K] = le);
                    }
                    this._transitionEngine.registerTrigger(a, S, le);
                }
                register(o, a) {
                    this._transitionEngine.register(o, a);
                }
                destroy(o, a) {
                    this._transitionEngine.destroy(o, a);
                }
                onInsert(o, a, f, S) {
                    this._transitionEngine.insertNode(o, a, f, S);
                }
                onRemove(o, a, f, S) {
                    this._transitionEngine.removeNode(o, a, S || !1, f);
                }
                disableAnimations(o, a) {
                    this._transitionEngine.markElementAsDisabled(o, a);
                }
                process(o, a, f, S) {
                    if ('@' == f.charAt(0)) {
                        const [L, K] = Nn(f);
                        this._timelineEngine.command(L, a, K, S);
                    } else this._transitionEngine.trigger(o, a, f, S);
                }
                listen(o, a, f, S, L) {
                    if ('@' == f.charAt(0)) {
                        const [K, le] = Nn(f);
                        return this._timelineEngine.listen(K, a, le, L);
                    }
                    return this._transitionEngine.listen(o, a, f, S, L);
                }
                flush(o = -1) {
                    this._transitionEngine.flush(o);
                }
                get players() {
                    return this._transitionEngine.players.concat(
                        this._timelineEngine.players
                    );
                }
                whenRenderingDone() {
                    return this._transitionEngine.whenRenderingDone();
                }
            }
            let xo = (() => {
                class _ extends yr {
                    constructor(a, f) {
                        super(),
                            (this._nextAnimationId = 0),
                            (this._renderer = a.createRenderer(f.body, {
                                id: '0',
                                encapsulation: P.ifc.None,
                                styles: [],
                                data: { animation: [] },
                            }));
                    }
                    build(a) {
                        const f = this._nextAnimationId.toString();
                        this._nextAnimationId++;
                        const S = Array.isArray(a) ? ti(a) : a;
                        return (
                            Es(this._renderer, null, f, 'register', [S]),
                            new co(f, this._renderer)
                        );
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(P.LFG(P.FYo), P.LFG(d.K0));
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            class co extends class Yt {} {
                constructor(o, a) {
                    super(), (this._id = o), (this._renderer = a);
                }
                create(o, a) {
                    return new vs(this._id, o, a || {}, this._renderer);
                }
            }
            class vs {
                constructor(o, a, f, S) {
                    (this.id = o),
                        (this.element = a),
                        (this._renderer = S),
                        (this.parentPlayer = null),
                        (this._started = !1),
                        (this.totalTime = 0),
                        this._command('create', f);
                }
                _listen(o, a) {
                    return this._renderer.listen(
                        this.element,
                        `@@${this.id}:${o}`,
                        a
                    );
                }
                _command(o, ...a) {
                    return Es(this._renderer, this.element, this.id, o, a);
                }
                onDone(o) {
                    this._listen('done', o);
                }
                onStart(o) {
                    this._listen('start', o);
                }
                onDestroy(o) {
                    this._listen('destroy', o);
                }
                init() {
                    this._command('init');
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this._command('play'), (this._started = !0);
                }
                pause() {
                    this._command('pause');
                }
                restart() {
                    this._command('restart');
                }
                finish() {
                    this._command('finish');
                }
                destroy() {
                    this._command('destroy');
                }
                reset() {
                    this._command('reset'), (this._started = !1);
                }
                setPosition(o) {
                    this._command('setPosition', o);
                }
                getPosition() {
                    var o, a;
                    return null !==
                        (a =
                            null ===
                                (o = this._renderer.engine.players[+this.id]) ||
                            void 0 === o
                                ? void 0
                                : o.getPosition()) && void 0 !== a
                        ? a
                        : 0;
                }
            }
            function Es(_, o, a, f, S) {
                return _.setProperty(o, `@@${a}:${f}`, S);
            }
            const fo = '@.disabled';
            let Co = (() => {
                class _ {
                    constructor(a, f, S) {
                        (this.delegate = a),
                            (this.engine = f),
                            (this._zone = S),
                            (this._currentId = 0),
                            (this._microtaskId = 1),
                            (this._animationCallbacksBuffer = []),
                            (this._rendererCache = new Map()),
                            (this._cdRecurDepth = 0),
                            (this.promise = Promise.resolve(0)),
                            (f.onRemovalComplete = (L, K) => {
                                const le = null == K ? void 0 : K.parentNode(L);
                                le && K.removeChild(le, L);
                            });
                    }
                    createRenderer(a, f) {
                        const L = this.delegate.createRenderer(a, f);
                        if (!(a && f && f.data && f.data.animation)) {
                            let vt = this._rendererCache.get(L);
                            return (
                                vt ||
                                    ((vt = new Wo('', L, this.engine)),
                                    this._rendererCache.set(L, vt)),
                                vt
                            );
                        }
                        const K = f.id,
                            le = f.id + '-' + this._currentId;
                        this._currentId++, this.engine.register(le, a);
                        const Te = (vt) => {
                            Array.isArray(vt)
                                ? vt.forEach(Te)
                                : this.engine.registerTrigger(
                                      K,
                                      le,
                                      a,
                                      vt.name,
                                      vt
                                  );
                        };
                        return (
                            f.data.animation.forEach(Te),
                            new Cr(this, le, L, this.engine)
                        );
                    }
                    begin() {
                        this._cdRecurDepth++,
                            this.delegate.begin && this.delegate.begin();
                    }
                    _scheduleCountTask() {
                        this.promise.then(() => {
                            this._microtaskId++;
                        });
                    }
                    scheduleListenerCallback(a, f, S) {
                        a >= 0 && a < this._microtaskId
                            ? this._zone.run(() => f(S))
                            : (0 == this._animationCallbacksBuffer.length &&
                                  Promise.resolve(null).then(() => {
                                      this._zone.run(() => {
                                          this._animationCallbacksBuffer.forEach(
                                              (L) => {
                                                  const [K, le] = L;
                                                  K(le);
                                              }
                                          ),
                                              (this._animationCallbacksBuffer =
                                                  []);
                                      });
                                  }),
                              this._animationCallbacksBuffer.push([f, S]));
                    }
                    end() {
                        this._cdRecurDepth--,
                            0 == this._cdRecurDepth &&
                                this._zone.runOutsideAngular(() => {
                                    this._scheduleCountTask(),
                                        this.engine.flush(this._microtaskId);
                                }),
                            this.delegate.end && this.delegate.end();
                    }
                    whenRenderingDone() {
                        return this.engine.whenRenderingDone();
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(
                            P.LFG(P.FYo),
                            P.LFG(ls),
                            P.LFG(P.R0b)
                        );
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            class Wo {
                constructor(o, a, f) {
                    (this.namespaceId = o),
                        (this.delegate = a),
                        (this.engine = f),
                        (this.destroyNode = this.delegate.destroyNode
                            ? (S) => a.destroyNode(S)
                            : null);
                }
                get data() {
                    return this.delegate.data;
                }
                destroy() {
                    this.engine.destroy(this.namespaceId, this.delegate),
                        this.delegate.destroy();
                }
                createElement(o, a) {
                    return this.delegate.createElement(o, a);
                }
                createComment(o) {
                    return this.delegate.createComment(o);
                }
                createText(o) {
                    return this.delegate.createText(o);
                }
                appendChild(o, a) {
                    this.delegate.appendChild(o, a),
                        this.engine.onInsert(this.namespaceId, a, o, !1);
                }
                insertBefore(o, a, f, S = !0) {
                    this.delegate.insertBefore(o, a, f),
                        this.engine.onInsert(this.namespaceId, a, o, S);
                }
                removeChild(o, a, f) {
                    this.engine.onRemove(this.namespaceId, a, this.delegate, f);
                }
                selectRootElement(o, a) {
                    return this.delegate.selectRootElement(o, a);
                }
                parentNode(o) {
                    return this.delegate.parentNode(o);
                }
                nextSibling(o) {
                    return this.delegate.nextSibling(o);
                }
                setAttribute(o, a, f, S) {
                    this.delegate.setAttribute(o, a, f, S);
                }
                removeAttribute(o, a, f) {
                    this.delegate.removeAttribute(o, a, f);
                }
                addClass(o, a) {
                    this.delegate.addClass(o, a);
                }
                removeClass(o, a) {
                    this.delegate.removeClass(o, a);
                }
                setStyle(o, a, f, S) {
                    this.delegate.setStyle(o, a, f, S);
                }
                removeStyle(o, a, f) {
                    this.delegate.removeStyle(o, a, f);
                }
                setProperty(o, a, f) {
                    '@' == a.charAt(0) && a == fo
                        ? this.disableAnimations(o, !!f)
                        : this.delegate.setProperty(o, a, f);
                }
                setValue(o, a) {
                    this.delegate.setValue(o, a);
                }
                listen(o, a, f) {
                    return this.delegate.listen(o, a, f);
                }
                disableAnimations(o, a) {
                    this.engine.disableAnimations(o, a);
                }
            }
            class Cr extends Wo {
                constructor(o, a, f, S) {
                    super(a, f, S), (this.factory = o), (this.namespaceId = a);
                }
                setProperty(o, a, f) {
                    '@' == a.charAt(0)
                        ? '.' == a.charAt(1) && a == fo
                            ? this.disableAnimations(
                                  o,
                                  (f = void 0 === f || !!f)
                              )
                            : this.engine.process(
                                  this.namespaceId,
                                  o,
                                  a.substr(1),
                                  f
                              )
                        : this.delegate.setProperty(o, a, f);
                }
                listen(o, a, f) {
                    if ('@' == a.charAt(0)) {
                        const S = (function ho(_) {
                            switch (_) {
                                case 'body':
                                    return document.body;
                                case 'document':
                                    return document;
                                case 'window':
                                    return window;
                                default:
                                    return _;
                            }
                        })(o);
                        let L = a.substr(1),
                            K = '';
                        return (
                            '@' != L.charAt(0) &&
                                ([L, K] = (function po(_) {
                                    const o = _.indexOf('.');
                                    return [_.substring(0, o), _.substr(o + 1)];
                                })(L)),
                            this.engine.listen(
                                this.namespaceId,
                                S,
                                L,
                                K,
                                (le) => {
                                    this.factory.scheduleListenerCallback(
                                        le._data || -1,
                                        f,
                                        le
                                    );
                                }
                            )
                        );
                    }
                    return this.delegate.listen(o, a, f);
                }
            }
            let qs = (() => {
                class _ extends ls {
                    constructor(a, f, S) {
                        super(a.body, f, S);
                    }
                    ngOnDestroy() {
                        this.flush();
                    }
                }
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)(P.LFG(d.K0), P.LFG(Mr), P.LFG(et));
                    }),
                    (_.ɵprov = P.Yz7({ token: _, factory: _.ɵfac })),
                    _
                );
            })();
            const Ns = [
                { provide: Mr, useClass: on },
                {
                    provide: new P.OlP('AnimationModuleType'),
                    useValue: 'NoopAnimations',
                },
                ...[
                    { provide: yr, useClass: xo },
                    {
                        provide: et,
                        useFactory: function go() {
                            return new zs();
                        },
                    },
                    { provide: ls, useClass: qs },
                    {
                        provide: P.FYo,
                        useFactory: function bo(_, o, a) {
                            return new Co(_, o, a);
                        },
                        deps: [Xe, ls, P.R0b],
                    },
                ],
            ];
            let Ao = (() => {
                class _ {}
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)();
                    }),
                    (_.ɵmod = P.oAB({ type: _ })),
                    (_.ɵinj = P.cJS({ providers: Ns, imports: [Hn] })),
                    _
                );
            })();
            var Ls = y(5944),
                Xs = y(5893);
            let No = (() => {
                class _ {}
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)();
                    }),
                    (_.ɵmod = P.oAB({ type: _ })),
                    (_.ɵinj = P.cJS({
                        imports: [[d.ez, Ls.UserButtonModule, bt.Bz, Xs.hJ]],
                    })),
                    _
                );
            })();
            var wo = y(4004),
                cs = y(4496),
                To = y(2266);
            function p(_, o) {
                if (
                    (1 & _ && (P.ynx(0), P._UZ(1, 'p-avatar', 2), P.BQk()),
                    2 & _)
                ) {
                    const a = o.ngIf;
                    P.xp6(1), P.Q6J('label', a[0].toLocaleUpperCase());
                }
            }
            function c(_, o) {
                1 & _ && P._UZ(0, 'p-button', 3);
            }
            let u = (() => {
                    class _ {
                        constructor(a) {
                            this.afAuth = a;
                        }
                        ngOnInit() {
                            this.email$ = this.afAuth.user.pipe(
                                (0, wo.U)((a) => (null == a ? void 0 : a.email))
                            );
                        }
                    }
                    return (
                        (_.ɵfac = function (a) {
                            return new (a || _)(P.Y36(cs.zQ));
                        }),
                        (_.ɵcmp = P.Xpm({
                            type: _,
                            selectors: [['sol-user-button']],
                            decls: 4,
                            vars: 4,
                            consts: [
                                [4, 'ngIf', 'ngIfElse'],
                                ['login', ''],
                                ['size', 'large', 3, 'label'],
                                [
                                    'routerLink',
                                    '/user/login',
                                    'label',
                                    'Log In',
                                ],
                            ],
                            template: function (a, f) {
                                if (
                                    (1 & a &&
                                        (P.YNc(0, p, 2, 1, 'ng-container', 0),
                                        P.ALo(1, 'async'),
                                        P.YNc(
                                            2,
                                            c,
                                            1,
                                            0,
                                            'ng-template',
                                            null,
                                            1,
                                            P.W1O
                                        )),
                                    2 & a)
                                ) {
                                    const S = P.MAs(3);
                                    P.Q6J('ngIf', P.lcZ(1, 2, f.email$))(
                                        'ngIfElse',
                                        S
                                    );
                                }
                            },
                            directives: [d.O5, To.q, Xs.zx, bt.rH],
                            pipes: [d.Ov],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        _
                    );
                })(),
                C = (() => {
                    class _ {}
                    return (
                        (_.ɵfac = function (a) {
                            return new (a || _)();
                        }),
                        (_.ɵcmp = P.Xpm({
                            type: _,
                            selectors: [['ng-component']],
                            decls: 8,
                            vars: 0,
                            consts: [
                                [2, 'display', 'flex', 'padding', '10px'],
                                ['routerLink', '/', 2, 'cursor', 'pointer'],
                                [2, 'flex', '1 1 auto'],
                                [
                                    'routerLink',
                                    '/report',
                                    'label',
                                    'Report',
                                    'styleClass',
                                    'p-button-success',
                                ],
                            ],
                            template: function (a, f) {
                                1 & a &&
                                    (P.TgZ(0, 'header'),
                                    P.TgZ(1, 'div', 0),
                                    P.TgZ(2, 'h1', 1),
                                    P._uU(3, 'Mountain SOL'),
                                    P.qZA(),
                                    P._UZ(4, 'span', 2),
                                    P._UZ(5, 'p-button', 3),
                                    P._UZ(6, 'sol-user-button'),
                                    P.qZA(),
                                    P.qZA(),
                                    P._UZ(7, 'router-outlet'));
                            },
                            directives: [bt.rH, Xs.zx, u, bt.lC],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        _
                    );
                })();
            var k = y(520);
            const pe = [
                {
                    path: '',
                    component: C,
                    children: [
                        {
                            path: 'user',
                            loadChildren: () =>
                                Promise.resolve()
                                    .then(y.bind(y, 5944))
                                    .then((_) => _.AuthLoginModule),
                        },
                        {
                            path: 'report',
                            component: (() => {
                                class _ {
                                    constructor(a) {
                                        this.http = a;
                                    }
                                    downloadBlob(a, f = 'file.txt') {
                                        const S = window.URL.createObjectURL(a),
                                            L = document.createElement('a');
                                        (L.href = S),
                                            (L.download = f),
                                            L.dispatchEvent(
                                                new MouseEvent('click', {
                                                    bubbles: !0,
                                                    cancelable: !0,
                                                    view: window,
                                                })
                                            ),
                                            setTimeout(() => {
                                                window.URL.revokeObjectURL(S),
                                                    L.remove();
                                            }, 100);
                                    }
                                    downloadReport() {
                                        var a;
                                        const f =
                                            document.querySelector(
                                                '#downloadBtn'
                                            );
                                        f &&
                                            ((f.innerText = 'Downloading...'),
                                            (f.disabled = !0),
                                            this.http
                                                .get(
                                                    `https://us-central1-mountain-sol-platform.cloudfunctions.net/roster?class= ${
                                                        null ===
                                                            (a =
                                                                document.querySelector(
                                                                    '#classNameInput'
                                                                )) ||
                                                        void 0 === a
                                                            ? void 0
                                                            : a.value
                                                    }`
                                                )
                                                .subscribe(({ data: S }) => {
                                                    const L = new Blob(
                                                        [new Uint8Array(S)],
                                                        {
                                                            type: 'application/pdf',
                                                        }
                                                    );
                                                    this.downloadBlob(
                                                        L,
                                                        'roster.pdf'
                                                    ),
                                                        (f.innerText =
                                                            'Download Report'),
                                                        (f.disabled = !1);
                                                }));
                                    }
                                }
                                return (
                                    (_.ɵfac = function (a) {
                                        return new (a || _)(P.Y36(k.eN));
                                    }),
                                    (_.ɵcmp = P.Xpm({
                                        type: _,
                                        selectors: [['ng-component']],
                                        decls: 5,
                                        vars: 0,
                                        consts: [
                                            ['for', 'classNameInput'],
                                            [
                                                'id',
                                                'classNameInput',
                                                'placeholder',
                                                'Knots-fall-2021',
                                            ],
                                            ['id', 'downloadBtn', 3, 'click'],
                                        ],
                                        template: function (a, f) {
                                            1 & a &&
                                                (P.TgZ(0, 'label', 0),
                                                P._uU(1, 'Class Name'),
                                                P.qZA(),
                                                P._UZ(2, 'input', 1),
                                                P.TgZ(3, 'button', 2),
                                                P.NdJ('click', function () {
                                                    return f.downloadReport();
                                                }),
                                                P._uU(4, ' Download Report '),
                                                P.qZA());
                                        },
                                        encapsulation: 2,
                                        changeDetection: 0,
                                    })),
                                    _
                                );
                            })(),
                        },
                        {
                            path: 'calendar',
                            loadChildren: () =>
                                Promise.all([y.e(592), y.e(283)])
                                    .then(y.bind(y, 8283))
                                    .then((_) => _.SolCalendarModule),
                        },
                    ],
                },
            ];
            let Ge = (() => {
                class _ {}
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)();
                    }),
                    (_.ɵmod = P.oAB({ type: _ })),
                    (_.ɵinj = P.cJS({ imports: [[bt.Bz.forRoot(pe)], bt.Bz] })),
                    _
                );
            })();
            var Dt = y(2323),
                dn = y(5573),
                Rt = y(2011),
                Yn = y(9565);
            const Zn = [
                { provide: k.TP, useClass: Ls.AuthInterceptor, multi: !0 },
            ];
            let ns = (() => {
                class _ {}
                return (
                    (_.ɵfac = function (a) {
                        return new (a || _)();
                    }),
                    (_.ɵmod = P.oAB({ type: _, bootstrap: [Xn] })),
                    (_.ɵinj = P.cJS({
                        providers: [Zn],
                        imports: [
                            [
                                Rt.hO.initializeApp({
                                    apiKey: 'AIzaSyBxv66X_Ye4MXI5lt8Sjc1xz88rdWJJ0ho',
                                    authDomain:
                                        'mountain-sol-platform.firebaseapp.com',
                                    projectId: 'mountain-sol-platform',
                                    storageBucket:
                                        'mountain-sol-platform.appspot.com',
                                    messagingSenderId: '319228048592',
                                    appId: '1:319228048592:web:2d418795ca948ba2665ad5',
                                    measurementId: 'G-QN03ENCDDC',
                                }),
                                Hn,
                                Ao,
                                Ge,
                                No,
                                Dt.Aw.forRoot({}, {}),
                                Yn.FT.instrument({ maxAge: 25, autoPause: !0 }),
                                dn.sQ.forRoot([]),
                                k.JF,
                            ],
                        ],
                    })),
                    _
                );
            })();
            (0, P.G48)(),
                tr()
                    .bootstrapModule(ns, {
                        defaultEncapsulation: P.ifc.ShadowDom,
                    })
                    .catch((_) => console.error(_));
        },
        5944: (_e, z, y) => {
            'use strict';
            y.r(z),
                y.d(z, {
                    AuthInterceptor: () => Si,
                    AuthLoginModule: () => Ti,
                    AuthLoginRoutingModule: () => Tr,
                    UserButtonModule: () => _i,
                });
            var d = y(9808),
                P = y(8996),
                H = y(8505),
                w = y(5e3),
                $ = y(4496),
                ae = y(6115);
            let re = (() => {
                    class D {
                        constructor(g, x) {
                            (this.afAuth = g), (this.router = x);
                        }
                        login(g, x) {
                            return (0, P.D)(
                                this.afAuth.signInWithEmailAndPassword(g, x)
                            );
                        }
                        emailSignup(g, x) {
                            (0, P.D)(
                                this.afAuth.createUserWithEmailAndPassword(g, x)
                            ).pipe(
                                (0, H.b)((Ne) => {
                                    console.log('Sucess', Ne),
                                        this.router.navigateByUrl('/profile');
                                })
                            );
                        }
                        logout() {
                            (0, P.D)(this.afAuth.signOut()).pipe(
                                (0, H.b)(() => this.router.navigate(['/']))
                            );
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(w.LFG($.zQ), w.LFG(ae.F0));
                        }),
                        (D.ɵprov = w.Yz7({ token: D, factory: D.ɵfac })),
                        D
                    );
                })(),
                se = (() => {
                    class D {}
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({
                            providers: [re],
                            imports: [[d.ez, $.ww]],
                        })),
                        D
                    );
                })();
            var Y = y(8306),
                j = y(4742),
                U = y(8421),
                ie = y(7669),
                Ce = y(5403),
                be = y(3268),
                xe = y(1810),
                de = y(4004);
            let Q = (() => {
                    class D {
                        constructor(g, x) {
                            (this._renderer = g),
                                (this._elementRef = x),
                                (this.onChange = (Ne) => {}),
                                (this.onTouched = () => {});
                        }
                        setProperty(g, x) {
                            this._renderer.setProperty(
                                this._elementRef.nativeElement,
                                g,
                                x
                            );
                        }
                        registerOnTouched(g) {
                            this.onTouched = g;
                        }
                        registerOnChange(g) {
                            this.onChange = g;
                        }
                        setDisabledState(g) {
                            this.setProperty('disabled', g);
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(w.Y36(w.Qsj), w.Y36(w.SBq));
                        }),
                        (D.ɵdir = w.lG2({ type: D })),
                        D
                    );
                })(),
                ye = (() => {
                    class D extends Q {}
                    return (
                        (D.ɵfac = (function () {
                            let E;
                            return function (x) {
                                return (E || (E = w.n5z(D)))(x || D);
                            };
                        })()),
                        (D.ɵdir = w.lG2({ type: D, features: [w.qOj] })),
                        D
                    );
                })();
            const M = new w.OlP('NgValueAccessor'),
                J = {
                    provide: M,
                    useExisting: (0, w.Gpc)(() => Je),
                    multi: !0,
                },
                He = new w.OlP('CompositionEventMode');
            let Je = (() => {
                class D extends Q {
                    constructor(g, x, Ne) {
                        super(g, x),
                            (this._compositionMode = Ne),
                            (this._composing = !1),
                            null == this._compositionMode &&
                                (this._compositionMode = !(function Ve() {
                                    const D = (0, d.q)()
                                        ? (0, d.q)().getUserAgent()
                                        : '';
                                    return /android (\d+)/.test(
                                        D.toLowerCase()
                                    );
                                })());
                    }
                    writeValue(g) {
                        this.setProperty('value', null == g ? '' : g);
                    }
                    _handleInput(g) {
                        (!this._compositionMode ||
                            (this._compositionMode && !this._composing)) &&
                            this.onChange(g);
                    }
                    _compositionStart() {
                        this._composing = !0;
                    }
                    _compositionEnd(g) {
                        (this._composing = !1),
                            this._compositionMode && this.onChange(g);
                    }
                }
                return (
                    (D.ɵfac = function (g) {
                        return new (g || D)(
                            w.Y36(w.Qsj),
                            w.Y36(w.SBq),
                            w.Y36(He, 8)
                        );
                    }),
                    (D.ɵdir = w.lG2({
                        type: D,
                        selectors: [
                            [
                                'input',
                                'formControlName',
                                '',
                                3,
                                'type',
                                'checkbox',
                            ],
                            ['textarea', 'formControlName', ''],
                            ['input', 'formControl', '', 3, 'type', 'checkbox'],
                            ['textarea', 'formControl', ''],
                            ['input', 'ngModel', '', 3, 'type', 'checkbox'],
                            ['textarea', 'ngModel', ''],
                            ['', 'ngDefaultControl', ''],
                        ],
                        hostBindings: function (g, x) {
                            1 & g &&
                                w.NdJ('input', function (gt) {
                                    return x._handleInput(gt.target.value);
                                })('blur', function () {
                                    return x.onTouched();
                                })('compositionstart', function () {
                                    return x._compositionStart();
                                })('compositionend', function (gt) {
                                    return x._compositionEnd(gt.target.value);
                                });
                        },
                        features: [w._Bn([J]), w.qOj],
                    })),
                    D
                );
            })();
            const Oe = new w.OlP('NgValidators'),
                Ue = new w.OlP('NgAsyncValidators');
            function $n(D) {
                return null != D;
            }
            function An(D) {
                const E = (0, w.QGY)(D) ? (0, P.D)(D) : D;
                return (0, w.CqO)(E), E;
            }
            function Jt(D) {
                let E = {};
                return (
                    D.forEach((g) => {
                        E =
                            null != g
                                ? Object.assign(Object.assign({}, E), g)
                                : E;
                    }),
                    0 === Object.keys(E).length ? null : E
                );
            }
            function ar(D, E) {
                return E.map((g) => g(D));
            }
            function cn(D) {
                return D.map((E) =>
                    (function Dn(D) {
                        return !D.validate;
                    })(E)
                        ? E
                        : (g) => E.validate(g)
                );
            }
            function tr(D) {
                return null != D
                    ? (function Rn(D) {
                          if (!D) return null;
                          const E = D.filter($n);
                          return 0 == E.length
                              ? null
                              : function (g) {
                                    return Jt(ar(g, E));
                                };
                      })(cn(D))
                    : null;
            }
            function Hn(D) {
                return null != D
                    ? (function fr(D) {
                          if (!D) return null;
                          const E = D.filter($n);
                          return 0 == E.length
                              ? null
                              : function (g) {
                                    return (function We(...D) {
                                        const E = (0, ie.jO)(D),
                                            { args: g, keys: x } = (0, j.D)(D),
                                            Ne = new Y.y((gt) => {
                                                const { length: bn } = g;
                                                if (!bn)
                                                    return void gt.complete();
                                                const In = new Array(bn);
                                                let vi = bn,
                                                    zr = bn;
                                                for (
                                                    let Ei = 0;
                                                    Ei < bn;
                                                    Ei++
                                                ) {
                                                    let as = !1;
                                                    (0, U.Xf)(g[Ei]).subscribe(
                                                        new Ce.Q(
                                                            gt,
                                                            (Ks) => {
                                                                as ||
                                                                    ((as = !0),
                                                                    zr--),
                                                                    (In[Ei] =
                                                                        Ks);
                                                            },
                                                            () => vi--,
                                                            void 0,
                                                            () => {
                                                                (!vi || !as) &&
                                                                    (zr ||
                                                                        gt.next(
                                                                            x
                                                                                ? (0,
                                                                                  xe.n)(
                                                                                      x,
                                                                                      In
                                                                                  )
                                                                                : In
                                                                        ),
                                                                    gt.complete());
                                                            }
                                                        )
                                                    );
                                                }
                                            });
                                        return E ? Ne.pipe((0, be.Z)(E)) : Ne;
                                    })(ar(g, E).map(An)).pipe((0, de.U)(Jt));
                                };
                      })(cn(D))
                    : null;
            }
            function Sr(D, E) {
                return null === D ? [E] : Array.isArray(D) ? [...D, E] : [D, E];
            }
            function St(D) {
                return D._rawValidators;
            }
            function Qn(D) {
                return D._rawAsyncValidators;
            }
            function Fn(D) {
                return D ? (Array.isArray(D) ? D : [D]) : [];
            }
            function gn(D, E) {
                return Array.isArray(D) ? D.includes(E) : D === E;
            }
            function Ir(D, E) {
                const g = Fn(E);
                return (
                    Fn(D).forEach((Ne) => {
                        gn(g, Ne) || g.push(Ne);
                    }),
                    g
                );
            }
            function Ie(D, E) {
                return Fn(E).filter((g) => !gn(D, g));
            }
            class W {
                constructor() {
                    (this._rawValidators = []),
                        (this._rawAsyncValidators = []),
                        (this._onDestroyCallbacks = []);
                }
                get value() {
                    return this.control ? this.control.value : null;
                }
                get valid() {
                    return this.control ? this.control.valid : null;
                }
                get invalid() {
                    return this.control ? this.control.invalid : null;
                }
                get pending() {
                    return this.control ? this.control.pending : null;
                }
                get disabled() {
                    return this.control ? this.control.disabled : null;
                }
                get enabled() {
                    return this.control ? this.control.enabled : null;
                }
                get errors() {
                    return this.control ? this.control.errors : null;
                }
                get pristine() {
                    return this.control ? this.control.pristine : null;
                }
                get dirty() {
                    return this.control ? this.control.dirty : null;
                }
                get touched() {
                    return this.control ? this.control.touched : null;
                }
                get status() {
                    return this.control ? this.control.status : null;
                }
                get untouched() {
                    return this.control ? this.control.untouched : null;
                }
                get statusChanges() {
                    return this.control ? this.control.statusChanges : null;
                }
                get valueChanges() {
                    return this.control ? this.control.valueChanges : null;
                }
                get path() {
                    return null;
                }
                _setValidators(E) {
                    (this._rawValidators = E || []),
                        (this._composedValidatorFn = tr(this._rawValidators));
                }
                _setAsyncValidators(E) {
                    (this._rawAsyncValidators = E || []),
                        (this._composedAsyncValidatorFn = Hn(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn || null;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn || null;
                }
                _registerOnDestroy(E) {
                    this._onDestroyCallbacks.push(E);
                }
                _invokeOnDestroyCallbacks() {
                    this._onDestroyCallbacks.forEach((E) => E()),
                        (this._onDestroyCallbacks = []);
                }
                reset(E) {
                    this.control && this.control.reset(E);
                }
                hasError(E, g) {
                    return !!this.control && this.control.hasError(E, g);
                }
                getError(E, g) {
                    return this.control ? this.control.getError(E, g) : null;
                }
            }
            class ne extends W {
                constructor() {
                    super(...arguments),
                        (this._parent = null),
                        (this.name = null),
                        (this.valueAccessor = null);
                }
            }
            class De extends W {
                get formDirective() {
                    return null;
                }
                get path() {
                    return null;
                }
            }
            class Ke {
                constructor(E) {
                    this._cd = E;
                }
                is(E) {
                    var g, x, Ne;
                    return 'submitted' === E
                        ? !!(null === (g = this._cd) || void 0 === g
                              ? void 0
                              : g.submitted)
                        : !!(null ===
                              (Ne =
                                  null === (x = this._cd) || void 0 === x
                                      ? void 0
                                      : x.control) || void 0 === Ne
                              ? void 0
                              : Ne[E]);
                }
            }
            let ut = (() => {
                    class D extends Ke {
                        constructor(g) {
                            super(g);
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(w.Y36(ne, 2));
                        }),
                        (D.ɵdir = w.lG2({
                            type: D,
                            selectors: [
                                ['', 'formControlName', ''],
                                ['', 'ngModel', ''],
                                ['', 'formControl', ''],
                            ],
                            hostVars: 14,
                            hostBindings: function (g, x) {
                                2 & g &&
                                    w.ekj('ng-untouched', x.is('untouched'))(
                                        'ng-touched',
                                        x.is('touched')
                                    )('ng-pristine', x.is('pristine'))(
                                        'ng-dirty',
                                        x.is('dirty')
                                    )('ng-valid', x.is('valid'))(
                                        'ng-invalid',
                                        x.is('invalid')
                                    )('ng-pending', x.is('pending'));
                            },
                            features: [w.qOj],
                        })),
                        D
                    );
                })(),
                Ut = (() => {
                    class D extends Ke {
                        constructor(g) {
                            super(g);
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(w.Y36(De, 10));
                        }),
                        (D.ɵdir = w.lG2({
                            type: D,
                            selectors: [
                                ['', 'formGroupName', ''],
                                ['', 'formArrayName', ''],
                                ['', 'ngModelGroup', ''],
                                ['', 'formGroup', ''],
                                ['form', 3, 'ngNoForm', ''],
                                ['', 'ngForm', ''],
                            ],
                            hostVars: 16,
                            hostBindings: function (g, x) {
                                2 & g &&
                                    w.ekj('ng-untouched', x.is('untouched'))(
                                        'ng-touched',
                                        x.is('touched')
                                    )('ng-pristine', x.is('pristine'))(
                                        'ng-dirty',
                                        x.is('dirty')
                                    )('ng-valid', x.is('valid'))(
                                        'ng-invalid',
                                        x.is('invalid')
                                    )('ng-pending', x.is('pending'))(
                                        'ng-submitted',
                                        x.is('submitted')
                                    );
                            },
                            features: [w.qOj],
                        })),
                        D
                    );
                })();
            function dt(D, E) {
                return [...E.path, D];
            }
            function Xt(D, E) {
                Xn(D, E),
                    E.valueAccessor.writeValue(D.value),
                    (function Yt(D, E) {
                        E.valueAccessor.registerOnChange((g) => {
                            (D._pendingValue = g),
                                (D._pendingChange = !0),
                                (D._pendingDirty = !0),
                                'change' === D.updateOn && Tn(D, E);
                        });
                    })(D, E),
                    (function xn(D, E) {
                        const g = (x, Ne) => {
                            E.valueAccessor.writeValue(x),
                                Ne && E.viewToModelUpdate(x);
                        };
                        D.registerOnChange(g),
                            E._registerOnDestroy(() => {
                                D._unregisterOnChange(g);
                            });
                    })(D, E),
                    (function ln(D, E) {
                        E.valueAccessor.registerOnTouched(() => {
                            (D._pendingTouched = !0),
                                'blur' === D.updateOn &&
                                    D._pendingChange &&
                                    Tn(D, E),
                                'submit' !== D.updateOn && D.markAsTouched();
                        });
                    })(D, E),
                    (function bt(D, E) {
                        if (E.valueAccessor.setDisabledState) {
                            const g = (x) => {
                                E.valueAccessor.setDisabledState(x);
                            };
                            D.registerOnDisabledChange(g),
                                E._registerOnDestroy(() => {
                                    D._unregisterOnDisabledChange(g);
                                });
                        }
                    })(D, E);
            }
            function en(D, E, g = !0) {
                const x = () => {};
                E.valueAccessor &&
                    (E.valueAccessor.registerOnChange(x),
                    E.valueAccessor.registerOnTouched(x)),
                    yr(D, E),
                    D &&
                        (E._invokeOnDestroyCallbacks(),
                        D._registerOnCollectionChange(() => {}));
            }
            function Un(D, E) {
                D.forEach((g) => {
                    g.registerOnValidatorChange &&
                        g.registerOnValidatorChange(E);
                });
            }
            function Xn(D, E) {
                const g = St(D);
                null !== E.validator
                    ? D.setValidators(Sr(g, E.validator))
                    : 'function' == typeof g && D.setValidators([g]);
                const x = Qn(D);
                null !== E.asyncValidator
                    ? D.setAsyncValidators(Sr(x, E.asyncValidator))
                    : 'function' == typeof x && D.setAsyncValidators([x]);
                const Ne = () => D.updateValueAndValidity();
                Un(E._rawValidators, Ne), Un(E._rawAsyncValidators, Ne);
            }
            function yr(D, E) {
                let g = !1;
                if (null !== D) {
                    if (null !== E.validator) {
                        const Ne = St(D);
                        if (Array.isArray(Ne) && Ne.length > 0) {
                            const gt = Ne.filter((bn) => bn !== E.validator);
                            gt.length !== Ne.length &&
                                ((g = !0), D.setValidators(gt));
                        }
                    }
                    if (null !== E.asyncValidator) {
                        const Ne = Qn(D);
                        if (Array.isArray(Ne) && Ne.length > 0) {
                            const gt = Ne.filter(
                                (bn) => bn !== E.asyncValidator
                            );
                            gt.length !== Ne.length &&
                                ((g = !0), D.setAsyncValidators(gt));
                        }
                    }
                }
                const x = () => {};
                return Un(E._rawValidators, x), Un(E._rawAsyncValidators, x), g;
            }
            function Tn(D, E) {
                D._pendingDirty && D.markAsDirty(),
                    D.setValue(D._pendingValue, { emitModelToViewChange: !1 }),
                    E.viewToModelUpdate(D._pendingValue),
                    (D._pendingChange = !1);
            }
            function Ar(D, E) {
                if (!D.hasOwnProperty('model')) return !1;
                const g = D.model;
                return !!g.isFirstChange() || !Object.is(E, g.currentValue);
            }
            function nr(D, E) {
                if (!E) return null;
                let g, x, Ne;
                return (
                    Array.isArray(E),
                    E.forEach((gt) => {
                        gt.constructor === Je
                            ? (g = gt)
                            : (function ur(D) {
                                  return (
                                      Object.getPrototypeOf(D.constructor) ===
                                      ye
                                  );
                              })(gt)
                            ? (x = gt)
                            : (Ne = gt);
                    }),
                    Ne || x || g || null
                );
            }
            function ct(D, E) {
                const g = D.indexOf(E);
                g > -1 && D.splice(g, 1);
            }
            const er = 'VALID',
                hr = 'INVALID',
                En = 'PENDING',
                cr = 'DISABLED';
            function xr(D) {
                return (_r(D) ? D.validators : D) || null;
            }
            function Cn(D) {
                return Array.isArray(D) ? tr(D) : D || null;
            }
            function Ht(D, E) {
                return (_r(E) ? E.asyncValidators : D) || null;
            }
            function Hr(D) {
                return Array.isArray(D) ? Hn(D) : D || null;
            }
            function _r(D) {
                return null != D && !Array.isArray(D) && 'object' == typeof D;
            }
            const wr = (D) => D instanceof Fe,
                hn = (D) => D instanceof ot,
                Nn = (D) => D instanceof rt;
            function Nr(D) {
                return wr(D) ? D.value : D.getRawValue();
            }
            function X(D, E) {
                const g = hn(D),
                    x = D.controls;
                if (!(g ? Object.keys(x) : x).length) throw new w.vHH(1e3, '');
                if (!x[E]) throw new w.vHH(1001, '');
            }
            function Be(D, E) {
                hn(D),
                    D._forEachChild((x, Ne) => {
                        if (void 0 === E[Ne]) throw new w.vHH(1002, '');
                    });
            }
            class Ee {
                constructor(E, g) {
                    (this._pendingDirty = !1),
                        (this._hasOwnPendingAsyncValidator = !1),
                        (this._pendingTouched = !1),
                        (this._onCollectionChange = () => {}),
                        (this._parent = null),
                        (this.pristine = !0),
                        (this.touched = !1),
                        (this._onDisabledChange = []),
                        (this._rawValidators = E),
                        (this._rawAsyncValidators = g),
                        (this._composedValidatorFn = Cn(this._rawValidators)),
                        (this._composedAsyncValidatorFn = Hr(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn;
                }
                set validator(E) {
                    this._rawValidators = this._composedValidatorFn = E;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn;
                }
                set asyncValidator(E) {
                    this._rawAsyncValidators = this._composedAsyncValidatorFn =
                        E;
                }
                get parent() {
                    return this._parent;
                }
                get valid() {
                    return this.status === er;
                }
                get invalid() {
                    return this.status === hr;
                }
                get pending() {
                    return this.status == En;
                }
                get disabled() {
                    return this.status === cr;
                }
                get enabled() {
                    return this.status !== cr;
                }
                get dirty() {
                    return !this.pristine;
                }
                get untouched() {
                    return !this.touched;
                }
                get updateOn() {
                    return this._updateOn
                        ? this._updateOn
                        : this.parent
                        ? this.parent.updateOn
                        : 'change';
                }
                setValidators(E) {
                    (this._rawValidators = E),
                        (this._composedValidatorFn = Cn(E));
                }
                setAsyncValidators(E) {
                    (this._rawAsyncValidators = E),
                        (this._composedAsyncValidatorFn = Hr(E));
                }
                addValidators(E) {
                    this.setValidators(Ir(E, this._rawValidators));
                }
                addAsyncValidators(E) {
                    this.setAsyncValidators(Ir(E, this._rawAsyncValidators));
                }
                removeValidators(E) {
                    this.setValidators(Ie(E, this._rawValidators));
                }
                removeAsyncValidators(E) {
                    this.setAsyncValidators(Ie(E, this._rawAsyncValidators));
                }
                hasValidator(E) {
                    return gn(this._rawValidators, E);
                }
                hasAsyncValidator(E) {
                    return gn(this._rawAsyncValidators, E);
                }
                clearValidators() {
                    this.validator = null;
                }
                clearAsyncValidators() {
                    this.asyncValidator = null;
                }
                markAsTouched(E = {}) {
                    (this.touched = !0),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.markAsTouched(E);
                }
                markAllAsTouched() {
                    this.markAsTouched({ onlySelf: !0 }),
                        this._forEachChild((E) => E.markAllAsTouched());
                }
                markAsUntouched(E = {}) {
                    (this.touched = !1),
                        (this._pendingTouched = !1),
                        this._forEachChild((g) => {
                            g.markAsUntouched({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updateTouched(E);
                }
                markAsDirty(E = {}) {
                    (this.pristine = !1),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.markAsDirty(E);
                }
                markAsPristine(E = {}) {
                    (this.pristine = !0),
                        (this._pendingDirty = !1),
                        this._forEachChild((g) => {
                            g.markAsPristine({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updatePristine(E);
                }
                markAsPending(E = {}) {
                    (this.status = En),
                        !1 !== E.emitEvent &&
                            this.statusChanges.emit(this.status),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.markAsPending(E);
                }
                disable(E = {}) {
                    const g = this._parentMarkedDirty(E.onlySelf);
                    (this.status = cr),
                        (this.errors = null),
                        this._forEachChild((x) => {
                            x.disable(
                                Object.assign(Object.assign({}, E), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this._updateValue(),
                        !1 !== E.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, E), {
                                skipPristineCheck: g,
                            })
                        ),
                        this._onDisabledChange.forEach((x) => x(!0));
                }
                enable(E = {}) {
                    const g = this._parentMarkedDirty(E.onlySelf);
                    (this.status = er),
                        this._forEachChild((x) => {
                            x.enable(
                                Object.assign(Object.assign({}, E), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: E.emitEvent,
                        }),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, E), {
                                skipPristineCheck: g,
                            })
                        ),
                        this._onDisabledChange.forEach((x) => x(!1));
                }
                _updateAncestors(E) {
                    this._parent &&
                        !E.onlySelf &&
                        (this._parent.updateValueAndValidity(E),
                        E.skipPristineCheck || this._parent._updatePristine(),
                        this._parent._updateTouched());
                }
                setParent(E) {
                    this._parent = E;
                }
                updateValueAndValidity(E = {}) {
                    this._setInitialStatus(),
                        this._updateValue(),
                        this.enabled &&
                            (this._cancelExistingSubscription(),
                            (this.errors = this._runValidator()),
                            (this.status = this._calculateStatus()),
                            (this.status === er || this.status === En) &&
                                this._runAsyncValidator(E.emitEvent)),
                        !1 !== E.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.updateValueAndValidity(E);
                }
                _updateTreeValidity(E = { emitEvent: !0 }) {
                    this._forEachChild((g) => g._updateTreeValidity(E)),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: E.emitEvent,
                        });
                }
                _setInitialStatus() {
                    this.status = this._allControlsDisabled() ? cr : er;
                }
                _runValidator() {
                    return this.validator ? this.validator(this) : null;
                }
                _runAsyncValidator(E) {
                    if (this.asyncValidator) {
                        (this.status = En),
                            (this._hasOwnPendingAsyncValidator = !0);
                        const g = An(this.asyncValidator(this));
                        this._asyncValidationSubscription = g.subscribe((x) => {
                            (this._hasOwnPendingAsyncValidator = !1),
                                this.setErrors(x, { emitEvent: E });
                        });
                    }
                }
                _cancelExistingSubscription() {
                    this._asyncValidationSubscription &&
                        (this._asyncValidationSubscription.unsubscribe(),
                        (this._hasOwnPendingAsyncValidator = !1));
                }
                setErrors(E, g = {}) {
                    (this.errors = E),
                        this._updateControlsErrors(!1 !== g.emitEvent);
                }
                get(E) {
                    return (function Sn(D, E, g) {
                        if (
                            null == E ||
                            (Array.isArray(E) || (E = E.split(g)),
                            Array.isArray(E) && 0 === E.length)
                        )
                            return null;
                        let x = D;
                        return (
                            E.forEach((Ne) => {
                                x = hn(x)
                                    ? x.controls.hasOwnProperty(Ne)
                                        ? x.controls[Ne]
                                        : null
                                    : (Nn(x) && x.at(Ne)) || null;
                            }),
                            x
                        );
                    })(this, E, '.');
                }
                getError(E, g) {
                    const x = g ? this.get(g) : this;
                    return x && x.errors ? x.errors[E] : null;
                }
                hasError(E, g) {
                    return !!this.getError(E, g);
                }
                get root() {
                    let E = this;
                    for (; E._parent; ) E = E._parent;
                    return E;
                }
                _updateControlsErrors(E) {
                    (this.status = this._calculateStatus()),
                        E && this.statusChanges.emit(this.status),
                        this._parent && this._parent._updateControlsErrors(E);
                }
                _initObservables() {
                    (this.valueChanges = new w.vpe()),
                        (this.statusChanges = new w.vpe());
                }
                _calculateStatus() {
                    return this._allControlsDisabled()
                        ? cr
                        : this.errors
                        ? hr
                        : this._hasOwnPendingAsyncValidator ||
                          this._anyControlsHaveStatus(En)
                        ? En
                        : this._anyControlsHaveStatus(hr)
                        ? hr
                        : er;
                }
                _anyControlsHaveStatus(E) {
                    return this._anyControls((g) => g.status === E);
                }
                _anyControlsDirty() {
                    return this._anyControls((E) => E.dirty);
                }
                _anyControlsTouched() {
                    return this._anyControls((E) => E.touched);
                }
                _updatePristine(E = {}) {
                    (this.pristine = !this._anyControlsDirty()),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updatePristine(E);
                }
                _updateTouched(E = {}) {
                    (this.touched = this._anyControlsTouched()),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updateTouched(E);
                }
                _isBoxedValue(E) {
                    return (
                        'object' == typeof E &&
                        null !== E &&
                        2 === Object.keys(E).length &&
                        'value' in E &&
                        'disabled' in E
                    );
                }
                _registerOnCollectionChange(E) {
                    this._onCollectionChange = E;
                }
                _setUpdateStrategy(E) {
                    _r(E) &&
                        null != E.updateOn &&
                        (this._updateOn = E.updateOn);
                }
                _parentMarkedDirty(E) {
                    return (
                        !E &&
                        !(!this._parent || !this._parent.dirty) &&
                        !this._parent._anyControlsDirty()
                    );
                }
            }
            class Fe extends Ee {
                constructor(E = null, g, x) {
                    super(xr(g), Ht(x, g)),
                        (this.defaultValue = null),
                        (this._onChange = []),
                        (this._pendingChange = !1),
                        this._applyFormState(E),
                        this._setUpdateStrategy(g),
                        this._initObservables(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        }),
                        _r(g) &&
                            g.initialValueIsDefault &&
                            (this.defaultValue = this._isBoxedValue(E)
                                ? E.value
                                : E);
                }
                setValue(E, g = {}) {
                    (this.value = this._pendingValue = E),
                        this._onChange.length &&
                            !1 !== g.emitModelToViewChange &&
                            this._onChange.forEach((x) =>
                                x(this.value, !1 !== g.emitViewToModelChange)
                            ),
                        this.updateValueAndValidity(g);
                }
                patchValue(E, g = {}) {
                    this.setValue(E, g);
                }
                reset(E = this.defaultValue, g = {}) {
                    this._applyFormState(E),
                        this.markAsPristine(g),
                        this.markAsUntouched(g),
                        this.setValue(this.value, g),
                        (this._pendingChange = !1);
                }
                _updateValue() {}
                _anyControls(E) {
                    return !1;
                }
                _allControlsDisabled() {
                    return this.disabled;
                }
                registerOnChange(E) {
                    this._onChange.push(E);
                }
                _unregisterOnChange(E) {
                    ct(this._onChange, E);
                }
                registerOnDisabledChange(E) {
                    this._onDisabledChange.push(E);
                }
                _unregisterOnDisabledChange(E) {
                    ct(this._onDisabledChange, E);
                }
                _forEachChild(E) {}
                _syncPendingControls() {
                    return !(
                        'submit' !== this.updateOn ||
                        (this._pendingDirty && this.markAsDirty(),
                        this._pendingTouched && this.markAsTouched(),
                        !this._pendingChange) ||
                        (this.setValue(this._pendingValue, {
                            onlySelf: !0,
                            emitModelToViewChange: !1,
                        }),
                        0)
                    );
                }
                _applyFormState(E) {
                    this._isBoxedValue(E)
                        ? ((this.value = this._pendingValue = E.value),
                          E.disabled
                              ? this.disable({ onlySelf: !0, emitEvent: !1 })
                              : this.enable({ onlySelf: !0, emitEvent: !1 }))
                        : (this.value = this._pendingValue = E);
                }
            }
            class ot extends Ee {
                constructor(E, g, x) {
                    super(xr(g), Ht(x, g)),
                        (this.controls = E),
                        this._initObservables(),
                        this._setUpdateStrategy(g),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                registerControl(E, g) {
                    return this.controls[E]
                        ? this.controls[E]
                        : ((this.controls[E] = g),
                          g.setParent(this),
                          g._registerOnCollectionChange(
                              this._onCollectionChange
                          ),
                          g);
                }
                addControl(E, g, x = {}) {
                    this.registerControl(E, g),
                        this.updateValueAndValidity({ emitEvent: x.emitEvent }),
                        this._onCollectionChange();
                }
                removeControl(E, g = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        delete this.controls[E],
                        this.updateValueAndValidity({ emitEvent: g.emitEvent }),
                        this._onCollectionChange();
                }
                setControl(E, g, x = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        delete this.controls[E],
                        g && this.registerControl(E, g),
                        this.updateValueAndValidity({ emitEvent: x.emitEvent }),
                        this._onCollectionChange();
                }
                contains(E) {
                    return (
                        this.controls.hasOwnProperty(E) &&
                        this.controls[E].enabled
                    );
                }
                setValue(E, g = {}) {
                    Be(this, E),
                        Object.keys(E).forEach((x) => {
                            X(this, x),
                                this.controls[x].setValue(E[x], {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g);
                }
                patchValue(E, g = {}) {
                    null != E &&
                        (Object.keys(E).forEach((x) => {
                            this.controls[x] &&
                                this.controls[x].patchValue(E[x], {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g));
                }
                reset(E = {}, g = {}) {
                    this._forEachChild((x, Ne) => {
                        x.reset(E[Ne], {
                            onlySelf: !0,
                            emitEvent: g.emitEvent,
                        });
                    }),
                        this._updatePristine(g),
                        this._updateTouched(g),
                        this.updateValueAndValidity(g);
                }
                getRawValue() {
                    return this._reduceChildren(
                        {},
                        (E, g, x) => ((E[x] = Nr(g)), E)
                    );
                }
                _syncPendingControls() {
                    let E = this._reduceChildren(
                        !1,
                        (g, x) => !!x._syncPendingControls() || g
                    );
                    return (
                        E && this.updateValueAndValidity({ onlySelf: !0 }), E
                    );
                }
                _forEachChild(E) {
                    Object.keys(this.controls).forEach((g) => {
                        const x = this.controls[g];
                        x && E(x, g);
                    });
                }
                _setUpControls() {
                    this._forEachChild((E) => {
                        E.setParent(this),
                            E._registerOnCollectionChange(
                                this._onCollectionChange
                            );
                    });
                }
                _updateValue() {
                    this.value = this._reduceValue();
                }
                _anyControls(E) {
                    for (const g of Object.keys(this.controls)) {
                        const x = this.controls[g];
                        if (this.contains(g) && E(x)) return !0;
                    }
                    return !1;
                }
                _reduceValue() {
                    return this._reduceChildren(
                        {},
                        (E, g, x) => (
                            (g.enabled || this.disabled) && (E[x] = g.value), E
                        )
                    );
                }
                _reduceChildren(E, g) {
                    let x = E;
                    return (
                        this._forEachChild((Ne, gt) => {
                            x = g(x, Ne, gt);
                        }),
                        x
                    );
                }
                _allControlsDisabled() {
                    for (const E of Object.keys(this.controls))
                        if (this.controls[E].enabled) return !1;
                    return (
                        Object.keys(this.controls).length > 0 || this.disabled
                    );
                }
            }
            class rt extends Ee {
                constructor(E, g, x) {
                    super(xr(g), Ht(x, g)),
                        (this.controls = E),
                        this._initObservables(),
                        this._setUpdateStrategy(g),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                at(E) {
                    return this.controls[E];
                }
                push(E, g = {}) {
                    this.controls.push(E),
                        this._registerControl(E),
                        this.updateValueAndValidity({ emitEvent: g.emitEvent }),
                        this._onCollectionChange();
                }
                insert(E, g, x = {}) {
                    this.controls.splice(E, 0, g),
                        this._registerControl(g),
                        this.updateValueAndValidity({ emitEvent: x.emitEvent });
                }
                removeAt(E, g = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        this.controls.splice(E, 1),
                        this.updateValueAndValidity({ emitEvent: g.emitEvent });
                }
                setControl(E, g, x = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        this.controls.splice(E, 1),
                        g &&
                            (this.controls.splice(E, 0, g),
                            this._registerControl(g)),
                        this.updateValueAndValidity({ emitEvent: x.emitEvent }),
                        this._onCollectionChange();
                }
                get length() {
                    return this.controls.length;
                }
                setValue(E, g = {}) {
                    Be(this, E),
                        E.forEach((x, Ne) => {
                            X(this, Ne),
                                this.at(Ne).setValue(x, {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g);
                }
                patchValue(E, g = {}) {
                    null != E &&
                        (E.forEach((x, Ne) => {
                            this.at(Ne) &&
                                this.at(Ne).patchValue(x, {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g));
                }
                reset(E = [], g = {}) {
                    this._forEachChild((x, Ne) => {
                        x.reset(E[Ne], {
                            onlySelf: !0,
                            emitEvent: g.emitEvent,
                        });
                    }),
                        this._updatePristine(g),
                        this._updateTouched(g),
                        this.updateValueAndValidity(g);
                }
                getRawValue() {
                    return this.controls.map((E) => Nr(E));
                }
                clear(E = {}) {
                    this.controls.length < 1 ||
                        (this._forEachChild((g) =>
                            g._registerOnCollectionChange(() => {})
                        ),
                        this.controls.splice(0),
                        this.updateValueAndValidity({
                            emitEvent: E.emitEvent,
                        }));
                }
                _syncPendingControls() {
                    let E = this.controls.reduce(
                        (g, x) => !!x._syncPendingControls() || g,
                        !1
                    );
                    return (
                        E && this.updateValueAndValidity({ onlySelf: !0 }), E
                    );
                }
                _forEachChild(E) {
                    this.controls.forEach((g, x) => {
                        E(g, x);
                    });
                }
                _updateValue() {
                    this.value = this.controls
                        .filter((E) => E.enabled || this.disabled)
                        .map((E) => E.value);
                }
                _anyControls(E) {
                    return this.controls.some((g) => g.enabled && E(g));
                }
                _setUpControls() {
                    this._forEachChild((E) => this._registerControl(E));
                }
                _allControlsDisabled() {
                    for (const E of this.controls) if (E.enabled) return !1;
                    return this.controls.length > 0 || this.disabled;
                }
                _registerControl(E) {
                    E.setParent(this),
                        E._registerOnCollectionChange(this._onCollectionChange);
                }
            }
            const gi = { provide: ne, useExisting: (0, w.Gpc)(() => qr) },
                Zr = (() => Promise.resolve(null))();
            let qr = (() => {
                    class D extends ne {
                        constructor(g, x, Ne, gt, bn) {
                            super(),
                                (this._changeDetectorRef = bn),
                                (this.control = new Fe()),
                                (this._registered = !1),
                                (this.update = new w.vpe()),
                                (this._parent = g),
                                this._setValidators(x),
                                this._setAsyncValidators(Ne),
                                (this.valueAccessor = nr(0, gt));
                        }
                        ngOnChanges(g) {
                            this._checkForErrors(),
                                this._registered || this._setUpControl(),
                                'isDisabled' in g && this._updateDisabled(g),
                                Ar(g, this.viewModel) &&
                                    (this._updateValue(this.model),
                                    (this.viewModel = this.model));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        get path() {
                            return this._parent
                                ? dt(this.name, this._parent)
                                : [this.name];
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        viewToModelUpdate(g) {
                            (this.viewModel = g), this.update.emit(g);
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(),
                                this._isStandalone()
                                    ? this._setUpStandalone()
                                    : this.formDirective.addControl(this),
                                (this._registered = !0);
                        }
                        _setUpdateStrategy() {
                            this.options &&
                                null != this.options.updateOn &&
                                (this.control._updateOn =
                                    this.options.updateOn);
                        }
                        _isStandalone() {
                            return (
                                !this._parent ||
                                !(!this.options || !this.options.standalone)
                            );
                        }
                        _setUpStandalone() {
                            Xt(this.control, this),
                                this.control.updateValueAndValidity({
                                    emitEvent: !1,
                                });
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(),
                                this._checkName();
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options &&
                                this.options.name &&
                                (this.name = this.options.name),
                                this._isStandalone();
                        }
                        _updateValue(g) {
                            Zr.then(() => {
                                var x;
                                this.control.setValue(g, {
                                    emitViewToModelChange: !1,
                                }),
                                    null === (x = this._changeDetectorRef) ||
                                        void 0 === x ||
                                        x.markForCheck();
                            });
                        }
                        _updateDisabled(g) {
                            const x = g.isDisabled.currentValue,
                                Ne = '' === x || (x && 'false' !== x);
                            Zr.then(() => {
                                var gt;
                                Ne && !this.control.disabled
                                    ? this.control.disable()
                                    : !Ne &&
                                      this.control.disabled &&
                                      this.control.enable(),
                                    null === (gt = this._changeDetectorRef) ||
                                        void 0 === gt ||
                                        gt.markForCheck();
                            });
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(
                                w.Y36(De, 9),
                                w.Y36(Oe, 10),
                                w.Y36(Ue, 10),
                                w.Y36(M, 10),
                                w.Y36(w.sBO, 8)
                            );
                        }),
                        (D.ɵdir = w.lG2({
                            type: D,
                            selectors: [
                                [
                                    '',
                                    'ngModel',
                                    '',
                                    3,
                                    'formControlName',
                                    '',
                                    3,
                                    'formControl',
                                    '',
                                ],
                            ],
                            inputs: {
                                name: 'name',
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                                options: ['ngModelOptions', 'options'],
                            },
                            outputs: { update: 'ngModelChange' },
                            exportAs: ['ngModel'],
                            features: [w._Bn([gi]), w.qOj, w.TTD],
                        })),
                        D
                    );
                })(),
                ps = (() => {
                    class D {}
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({})),
                        D
                    );
                })();
            const mi = new w.OlP('NgModelWithFormControlWarning'),
                li = { provide: De, useExisting: (0, w.Gpc)(() => Zi) };
            let Zi = (() => {
                class D extends De {
                    constructor(g, x) {
                        super(),
                            (this.validators = g),
                            (this.asyncValidators = x),
                            (this.submitted = !1),
                            (this._onCollectionChange = () =>
                                this._updateDomValue()),
                            (this.directives = []),
                            (this.form = null),
                            (this.ngSubmit = new w.vpe()),
                            this._setValidators(g),
                            this._setAsyncValidators(x);
                    }
                    ngOnChanges(g) {
                        this._checkFormPresent(),
                            g.hasOwnProperty('form') &&
                                (this._updateValidators(),
                                this._updateDomValue(),
                                this._updateRegistrations(),
                                (this._oldForm = this.form));
                    }
                    ngOnDestroy() {
                        this.form &&
                            (yr(this.form, this),
                            this.form._onCollectionChange ===
                                this._onCollectionChange &&
                                this.form._registerOnCollectionChange(
                                    () => {}
                                ));
                    }
                    get formDirective() {
                        return this;
                    }
                    get control() {
                        return this.form;
                    }
                    get path() {
                        return [];
                    }
                    addControl(g) {
                        const x = this.form.get(g.path);
                        return (
                            Xt(x, g),
                            x.updateValueAndValidity({ emitEvent: !1 }),
                            this.directives.push(g),
                            x
                        );
                    }
                    getControl(g) {
                        return this.form.get(g.path);
                    }
                    removeControl(g) {
                        en(g.control || null, g, !1), ct(this.directives, g);
                    }
                    addFormGroup(g) {
                        this._setUpFormContainer(g);
                    }
                    removeFormGroup(g) {
                        this._cleanUpFormContainer(g);
                    }
                    getFormGroup(g) {
                        return this.form.get(g.path);
                    }
                    addFormArray(g) {
                        this._setUpFormContainer(g);
                    }
                    removeFormArray(g) {
                        this._cleanUpFormContainer(g);
                    }
                    getFormArray(g) {
                        return this.form.get(g.path);
                    }
                    updateModel(g, x) {
                        this.form.get(g.path).setValue(x);
                    }
                    onSubmit(g) {
                        return (
                            (this.submitted = !0),
                            (function Vr(D, E) {
                                D._syncPendingControls(),
                                    E.forEach((g) => {
                                        const x = g.control;
                                        'submit' === x.updateOn &&
                                            x._pendingChange &&
                                            (g.viewToModelUpdate(
                                                x._pendingValue
                                            ),
                                            (x._pendingChange = !1));
                                    });
                            })(this.form, this.directives),
                            this.ngSubmit.emit(g),
                            !1
                        );
                    }
                    onReset() {
                        this.resetForm();
                    }
                    resetForm(g) {
                        this.form.reset(g), (this.submitted = !1);
                    }
                    _updateDomValue() {
                        this.directives.forEach((g) => {
                            const x = g.control,
                                Ne = this.form.get(g.path);
                            x !== Ne &&
                                (en(x || null, g),
                                wr(Ne) && (Xt(Ne, g), (g.control = Ne)));
                        }),
                            this.form._updateTreeValidity({ emitEvent: !1 });
                    }
                    _setUpFormContainer(g) {
                        const x = this.form.get(g.path);
                        (function lr(D, E) {
                            Xn(D, E);
                        })(x, g),
                            x.updateValueAndValidity({ emitEvent: !1 });
                    }
                    _cleanUpFormContainer(g) {
                        if (this.form) {
                            const x = this.form.get(g.path);
                            x &&
                                (function ti(D, E) {
                                    return yr(D, E);
                                })(x, g) &&
                                x.updateValueAndValidity({ emitEvent: !1 });
                        }
                    }
                    _updateRegistrations() {
                        this.form._registerOnCollectionChange(
                            this._onCollectionChange
                        ),
                            this._oldForm &&
                                this._oldForm._registerOnCollectionChange(
                                    () => {}
                                );
                    }
                    _updateValidators() {
                        Xn(this.form, this),
                            this._oldForm && yr(this._oldForm, this);
                    }
                    _checkFormPresent() {}
                }
                return (
                    (D.ɵfac = function (g) {
                        return new (g || D)(w.Y36(Oe, 10), w.Y36(Ue, 10));
                    }),
                    (D.ɵdir = w.lG2({
                        type: D,
                        selectors: [['', 'formGroup', '']],
                        hostBindings: function (g, x) {
                            1 & g &&
                                w.NdJ('submit', function (gt) {
                                    return x.onSubmit(gt);
                                })('reset', function () {
                                    return x.onReset();
                                });
                        },
                        inputs: { form: ['formGroup', 'form'] },
                        outputs: { ngSubmit: 'ngSubmit' },
                        exportAs: ['ngForm'],
                        features: [w._Bn([li]), w.qOj, w.TTD],
                    })),
                    D
                );
            })();
            const ii = { provide: ne, useExisting: (0, w.Gpc)(() => Fi) };
            let Fi = (() => {
                    class D extends ne {
                        constructor(g, x, Ne, gt, bn) {
                            super(),
                                (this._ngModelWarningConfig = bn),
                                (this._added = !1),
                                (this.update = new w.vpe()),
                                (this._ngModelWarningSent = !1),
                                (this._parent = g),
                                this._setValidators(x),
                                this._setAsyncValidators(Ne),
                                (this.valueAccessor = nr(0, gt));
                        }
                        set isDisabled(g) {}
                        ngOnChanges(g) {
                            this._added || this._setUpControl(),
                                Ar(g, this.viewModel) &&
                                    ((this.viewModel = this.model),
                                    this.formDirective.updateModel(
                                        this,
                                        this.model
                                    ));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        viewToModelUpdate(g) {
                            (this.viewModel = g), this.update.emit(g);
                        }
                        get path() {
                            return dt(
                                null == this.name
                                    ? this.name
                                    : this.name.toString(),
                                this._parent
                            );
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        _checkParentType() {}
                        _setUpControl() {
                            this._checkParentType(),
                                (this.control =
                                    this.formDirective.addControl(this)),
                                this.control.disabled &&
                                    this.valueAccessor.setDisabledState &&
                                    this.valueAccessor.setDisabledState(!0),
                                (this._added = !0);
                        }
                    }
                    return (
                        (D._ngModelWarningSentOnce = !1),
                        (D.ɵfac = function (g) {
                            return new (g || D)(
                                w.Y36(De, 13),
                                w.Y36(Oe, 10),
                                w.Y36(Ue, 10),
                                w.Y36(M, 10),
                                w.Y36(mi, 8)
                            );
                        }),
                        (D.ɵdir = w.lG2({
                            type: D,
                            selectors: [['', 'formControlName', '']],
                            inputs: {
                                name: ['formControlName', 'name'],
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                            },
                            outputs: { update: 'ngModelChange' },
                            features: [w._Bn([ii]), w.qOj, w.TTD],
                        })),
                        D
                    );
                })(),
                Ji = (() => {
                    class D {}
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({ imports: [[ps]] })),
                        D
                    );
                })(),
                Vi = (() => {
                    class D {
                        static withConfig(g) {
                            return {
                                ngModule: D,
                                providers: [
                                    {
                                        provide: mi,
                                        useValue:
                                            g.warnOnNgModelWithFormControl,
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({ imports: [Ji] })),
                        D
                    );
                })(),
                Xi = (() => {
                    class D {
                        group(g, x = null) {
                            const Ne = this._reduceControls(g);
                            let In,
                                gt = null,
                                bn = null;
                            return (
                                null != x &&
                                    ((function os(D) {
                                        return (
                                            void 0 !== D.asyncValidators ||
                                            void 0 !== D.validators ||
                                            void 0 !== D.updateOn
                                        );
                                    })(x)
                                        ? ((gt =
                                              null != x.validators
                                                  ? x.validators
                                                  : null),
                                          (bn =
                                              null != x.asyncValidators
                                                  ? x.asyncValidators
                                                  : null),
                                          (In =
                                              null != x.updateOn
                                                  ? x.updateOn
                                                  : void 0))
                                        : ((gt =
                                              null != x.validator
                                                  ? x.validator
                                                  : null),
                                          (bn =
                                              null != x.asyncValidator
                                                  ? x.asyncValidator
                                                  : null))),
                                new ot(Ne, {
                                    asyncValidators: bn,
                                    updateOn: In,
                                    validators: gt,
                                })
                            );
                        }
                        control(g, x, Ne) {
                            return new Fe(g, x, Ne);
                        }
                        array(g, x, Ne) {
                            const gt = g.map((bn) => this._createControl(bn));
                            return new rt(gt, x, Ne);
                        }
                        _reduceControls(g) {
                            const x = {};
                            return (
                                Object.keys(g).forEach((Ne) => {
                                    x[Ne] = this._createControl(g[Ne]);
                                }),
                                x
                            );
                        }
                        _createControl(g) {
                            return wr(g) || hn(g) || Nn(g)
                                ? g
                                : Array.isArray(g)
                                ? this.control(
                                      g[0],
                                      g.length > 1 ? g[1] : null,
                                      g.length > 2 ? g[2] : null
                                  )
                                : this.control(g);
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵprov = w.Yz7({
                            token: D,
                            factory: D.ɵfac,
                            providedIn: Vi,
                        })),
                        D
                    );
                })();
            var et = y(5573),
                an = y(2323);
            (0, an.PH)('[Go to Login Button] Visit Login Intent');
            const ir = (0, an.PH)('[Login Service] Login Intent', (0, an.Ky)()),
                gs = (0, an.PH)('[Login Effects] Login Success');
            var xi = y(3900),
                Rr = y(9300);
            let ms = (() => {
                    class D {
                        constructor(g, x, Ne) {
                            (this.actions$ = g),
                                (this.authService = x),
                                (this.router = Ne),
                                (this.login$ = (0, et.GW)(() =>
                                    this.actions$.pipe(
                                        (0, et.l4)(ir),
                                        (0, xi.w)(
                                            ({ email: gt, password: bn }) =>
                                                this.authService
                                                    .login(gt, bn)
                                                    .pipe(
                                                        (0, de.U)(
                                                            ({ user: In }) => In
                                                        ),
                                                        (0, Rr.h)((In) => !!In),
                                                        (0, de.U)(() => gs())
                                                    )
                                        ),
                                        (0, H.b)(() =>
                                            this.router.navigate(['/'])
                                        )
                                    )
                                ));
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(
                                w.LFG(et.eX),
                                w.LFG(re),
                                w.LFG(ae.F0)
                            );
                        }),
                        (D.ɵprov = w.Yz7({
                            token: D,
                            factory: D.ɵfac,
                            providedIn: 'root',
                        })),
                        D
                    );
                })(),
                Ss = (() => {
                    class D {
                        constructor(g, x, Ne) {
                            (this.el = g), (this.ngModel = x), (this.cd = Ne);
                        }
                        ngAfterViewInit() {
                            this.updateFilledState(), this.cd.detectChanges();
                        }
                        ngDoCheck() {
                            this.updateFilledState();
                        }
                        onInput(g) {
                            this.updateFilledState();
                        }
                        updateFilledState() {
                            this.filled =
                                (this.el.nativeElement.value &&
                                    this.el.nativeElement.value.length) ||
                                (this.ngModel && this.ngModel.model);
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(
                                w.Y36(w.SBq),
                                w.Y36(qr, 8),
                                w.Y36(w.sBO)
                            );
                        }),
                        (D.ɵdir = w.lG2({
                            type: D,
                            selectors: [['', 'pInputText', '']],
                            hostAttrs: [
                                1,
                                'p-inputtext',
                                'p-component',
                                'p-element',
                            ],
                            hostVars: 2,
                            hostBindings: function (g, x) {
                                1 & g &&
                                    w.NdJ('input', function (gt) {
                                        return x.onInput(gt);
                                    }),
                                    2 & g && w.ekj('p-filled', x.filled);
                            },
                        })),
                        D
                    );
                })(),
                Eo = (() => {
                    class D {}
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({ imports: [[d.ez]] })),
                        D
                    );
                })();
            var Is = y(5893);
            const _s = [
                {
                    path: 'login',
                    component: (() => {
                        class D {
                            constructor(g, x) {
                                (this.formBuilder = g),
                                    (this.store = x),
                                    (this.loginForm = this.formBuilder.group({
                                        email: [],
                                        password: [],
                                    }));
                            }
                            loginClick() {
                                var g, x;
                                this.store.dispatch(
                                    ir({
                                        email:
                                            null === (g = this.loginForm) ||
                                            void 0 === g
                                                ? void 0
                                                : g.value.email,
                                        password:
                                            null === (x = this.loginForm) ||
                                            void 0 === x
                                                ? void 0
                                                : x.value.password,
                                    })
                                );
                            }
                        }
                        return (
                            (D.ɵfac = function (g) {
                                return new (g || D)(w.Y36(Xi), w.Y36(an.yh));
                            }),
                            (D.ɵcmp = w.Xpm({
                                type: D,
                                selectors: [['ng-component']],
                                decls: 16,
                                vars: 1,
                                consts: [
                                    [1, 'p-fluid', 3, 'formGroup'],
                                    [1, 'field'],
                                    ['for', 'email'],
                                    [1, 'p-inputgroup'],
                                    [1, 'p-inputgroup-addon'],
                                    [1, 'pi', 'pi-user'],
                                    [
                                        'id',
                                        'email',
                                        'type',
                                        'text',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'email',
                                        'placeholder',
                                        'somebody@email.com',
                                    ],
                                    [1, 'pi', 'pi-lock'],
                                    [
                                        'type',
                                        'password',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'password',
                                    ],
                                    ['label', 'Submit', 3, 'click'],
                                ],
                                template: function (g, x) {
                                    1 & g &&
                                        (w.TgZ(0, 'div', 0),
                                        w.TgZ(1, 'div', 1),
                                        w.TgZ(2, 'label', 2),
                                        w._uU(3, 'Email'),
                                        w.qZA(),
                                        w.TgZ(4, 'div', 3),
                                        w.TgZ(5, 'span', 4),
                                        w._UZ(6, 'i', 5),
                                        w.qZA(),
                                        w._UZ(7, 'input', 6),
                                        w.qZA(),
                                        w.qZA(),
                                        w.TgZ(8, 'div', 1),
                                        w.TgZ(9, 'label', 2),
                                        w._uU(10, 'Password'),
                                        w.qZA(),
                                        w.TgZ(11, 'div', 3),
                                        w.TgZ(12, 'span', 4),
                                        w._UZ(13, 'i', 7),
                                        w.qZA(),
                                        w._UZ(14, 'input', 8),
                                        w.qZA(),
                                        w.qZA(),
                                        w.qZA(),
                                        w.TgZ(15, 'p-button', 9),
                                        w.NdJ('click', function () {
                                            return x.loginClick();
                                        }),
                                        w.qZA()),
                                        2 & g &&
                                            w.Q6J('formGroup', x.loginForm);
                                },
                                directives: [Ut, Zi, Je, Ss, ut, Fi, Is.zx],
                                encapsulation: 2,
                                changeDetection: 0,
                            })),
                            D
                        );
                    })(),
                    children: [],
                },
            ];
            let Tr = (() => {
                    class D {}
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({
                            imports: [[ae.Bz.forChild(_s)], ae.Bz],
                        })),
                        D
                    );
                })(),
                Ti = (() => {
                    class D {}
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({
                            imports: [
                                [
                                    d.ez,
                                    Tr,
                                    Vi,
                                    Is.hJ,
                                    Eo,
                                    se,
                                    et.sQ.forFeature([ms]),
                                ],
                            ],
                        })),
                        D
                    );
                })();
            var Ms = y(2266);
            let _i = (() => {
                    class D {}
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)();
                        }),
                        (D.ɵmod = w.oAB({ type: D })),
                        (D.ɵinj = w.cJS({
                            imports: [[d.ez, Is.hJ, Ms.F, ae.Bz]],
                        })),
                        D
                    );
                })(),
                Si = (() => {
                    class D {
                        constructor(g) {
                            this.afAuth = g;
                        }
                        intercept(g, x) {
                            return this.afAuth.user.pipe(
                                (0, xi.w)((Ne) =>
                                    Ne
                                        ? (0, P.D)(Ne.getIdToken()).pipe(
                                              (0, de.U)((gt) =>
                                                  g.clone({
                                                      headers: g.headers.append(
                                                          'Authorization',
                                                          `Bearer ${gt}`
                                                      ),
                                                  })
                                              ),
                                              (0, xi.w)((gt) => x.handle(gt))
                                          )
                                        : x.handle(g)
                                )
                            );
                        }
                    }
                    return (
                        (D.ɵfac = function (g) {
                            return new (g || D)(w.LFG($.zQ));
                        }),
                        (D.ɵprov = w.Yz7({ token: D, factory: D.ɵfac })),
                        D
                    );
                })();
        },
        5867: (_e, z, y) => {
            'use strict';
            y.d(z, { Mq: () => d.getApp, C6: () => d.getApps });
            var d = y(9681);
            (0, d.registerVersion)('firebase', '9.6.5', 'app');
        },
        127: (_e, z, y) => {
            'use strict';
            y.d(z, { Z: () => d.Z });
            var d = y(3942);
            d.Z.registerVersion('firebase', '9.6.5', 'app-compat');
        },
        2940: function (_e, z) {
            !(function (y) {
                'use strict';
                function d(de) {
                    return Array.prototype.slice.call(de);
                }
                function P(de) {
                    return new Promise(function (Q, ye) {
                        (de.onsuccess = function () {
                            Q(de.result);
                        }),
                            (de.onerror = function () {
                                ye(de.error);
                            });
                    });
                }
                function H(de, Q, ye) {
                    var M,
                        R = new Promise(function (oe, J) {
                            P((M = de[Q].apply(de, ye))).then(oe, J);
                        });
                    return (R.request = M), R;
                }
                function w(de, Q, ye) {
                    var M = H(de, Q, ye);
                    return M.then(function (R) {
                        if (R) return new j(R, M.request);
                    });
                }
                function $(de, Q, ye) {
                    ye.forEach(function (M) {
                        Object.defineProperty(de.prototype, M, {
                            get: function () {
                                return this[Q][M];
                            },
                            set: function (R) {
                                this[Q][M] = R;
                            },
                        });
                    });
                }
                function ae(de, Q, ye, M) {
                    M.forEach(function (R) {
                        R in ye.prototype &&
                            (de.prototype[R] = function () {
                                return H(this[Q], R, arguments);
                            });
                    });
                }
                function re(de, Q, ye, M) {
                    M.forEach(function (R) {
                        R in ye.prototype &&
                            (de.prototype[R] = function () {
                                return this[Q][R].apply(this[Q], arguments);
                            });
                    });
                }
                function se(de, Q, ye, M) {
                    M.forEach(function (R) {
                        R in ye.prototype &&
                            (de.prototype[R] = function () {
                                return w(this[Q], R, arguments);
                            });
                    });
                }
                function Y(de) {
                    this._index = de;
                }
                function j(de, Q) {
                    (this._cursor = de), (this._request = Q);
                }
                function U(de) {
                    this._store = de;
                }
                function ie(de) {
                    (this._tx = de),
                        (this.complete = new Promise(function (Q, ye) {
                            (de.oncomplete = function () {
                                Q();
                            }),
                                (de.onerror = function () {
                                    ye(de.error);
                                }),
                                (de.onabort = function () {
                                    ye(de.error);
                                });
                        }));
                }
                function Ce(de, Q, ye) {
                    (this._db = de),
                        (this.oldVersion = Q),
                        (this.transaction = new ie(ye));
                }
                function be(de) {
                    this._db = de;
                }
                $(Y, '_index', ['name', 'keyPath', 'multiEntry', 'unique']),
                    ae(Y, '_index', IDBIndex, [
                        'get',
                        'getKey',
                        'getAll',
                        'getAllKeys',
                        'count',
                    ]),
                    se(Y, '_index', IDBIndex, ['openCursor', 'openKeyCursor']),
                    $(j, '_cursor', [
                        'direction',
                        'key',
                        'primaryKey',
                        'value',
                    ]),
                    ae(j, '_cursor', IDBCursor, ['update', 'delete']),
                    ['advance', 'continue', 'continuePrimaryKey'].forEach(
                        function (de) {
                            de in IDBCursor.prototype &&
                                (j.prototype[de] = function () {
                                    var Q = this,
                                        ye = arguments;
                                    return Promise.resolve().then(function () {
                                        return (
                                            Q._cursor[de].apply(Q._cursor, ye),
                                            P(Q._request).then(function (M) {
                                                if (M)
                                                    return new j(M, Q._request);
                                            })
                                        );
                                    });
                                });
                        }
                    ),
                    (U.prototype.createIndex = function () {
                        return new Y(
                            this._store.createIndex.apply(
                                this._store,
                                arguments
                            )
                        );
                    }),
                    (U.prototype.index = function () {
                        return new Y(
                            this._store.index.apply(this._store, arguments)
                        );
                    }),
                    $(U, '_store', [
                        'name',
                        'keyPath',
                        'indexNames',
                        'autoIncrement',
                    ]),
                    ae(U, '_store', IDBObjectStore, [
                        'put',
                        'add',
                        'delete',
                        'clear',
                        'get',
                        'getAll',
                        'getKey',
                        'getAllKeys',
                        'count',
                    ]),
                    se(U, '_store', IDBObjectStore, [
                        'openCursor',
                        'openKeyCursor',
                    ]),
                    re(U, '_store', IDBObjectStore, ['deleteIndex']),
                    (ie.prototype.objectStore = function () {
                        return new U(
                            this._tx.objectStore.apply(this._tx, arguments)
                        );
                    }),
                    $(ie, '_tx', ['objectStoreNames', 'mode']),
                    re(ie, '_tx', IDBTransaction, ['abort']),
                    (Ce.prototype.createObjectStore = function () {
                        return new U(
                            this._db.createObjectStore.apply(
                                this._db,
                                arguments
                            )
                        );
                    }),
                    $(Ce, '_db', ['name', 'version', 'objectStoreNames']),
                    re(Ce, '_db', IDBDatabase, ['deleteObjectStore', 'close']),
                    (be.prototype.transaction = function () {
                        return new ie(
                            this._db.transaction.apply(this._db, arguments)
                        );
                    }),
                    $(be, '_db', ['name', 'version', 'objectStoreNames']),
                    re(be, '_db', IDBDatabase, ['close']),
                    ['openCursor', 'openKeyCursor'].forEach(function (de) {
                        [U, Y].forEach(function (Q) {
                            de in Q.prototype &&
                                (Q.prototype[de.replace('open', 'iterate')] =
                                    function () {
                                        var ye = d(arguments),
                                            M = ye[ye.length - 1],
                                            R = this._store || this._index,
                                            oe = R[de].apply(
                                                R,
                                                ye.slice(0, -1)
                                            );
                                        oe.onsuccess = function () {
                                            M(oe.result);
                                        };
                                    });
                        });
                    }),
                    [Y, U].forEach(function (de) {
                        de.prototype.getAll ||
                            (de.prototype.getAll = function (Q, ye) {
                                var M = this,
                                    R = [];
                                return new Promise(function (oe) {
                                    M.iterateCursor(Q, function (J) {
                                        J
                                            ? (R.push(J.value),
                                              void 0 === ye || R.length != ye
                                                  ? J.continue()
                                                  : oe(R))
                                            : oe(R);
                                    });
                                });
                            });
                    }),
                    (y.openDb = function xe(de, Q, ye) {
                        var M = H(indexedDB, 'open', [de, Q]),
                            R = M.request;
                        return (
                            R &&
                                (R.onupgradeneeded = function (oe) {
                                    ye &&
                                        ye(
                                            new Ce(
                                                R.result,
                                                oe.oldVersion,
                                                R.transaction
                                            )
                                        );
                                }),
                            M.then(function (oe) {
                                return new be(oe);
                            })
                        );
                    }),
                    (y.deleteDb = function We(de) {
                        return H(indexedDB, 'deleteDatabase', [de]);
                    }),
                    Object.defineProperty(y, '__esModule', { value: !0 });
            })(z);
        },
        1135: (_e, z, y) => {
            'use strict';
            y.d(z, { X: () => P });
            var d = y(7579);
            class P extends d.x {
                constructor(w) {
                    super(), (this._value = w);
                }
                get value() {
                    return this.getValue();
                }
                _subscribe(w) {
                    const $ = super._subscribe(w);
                    return !$.closed && w.next(this._value), $;
                }
                getValue() {
                    const { hasError: w, thrownError: $, _value: ae } = this;
                    if (w) throw $;
                    return this._throwIfClosed(), ae;
                }
                next(w) {
                    super.next((this._value = w));
                }
            }
        },
        8306: (_e, z, y) => {
            'use strict';
            y.d(z, { y: () => j });
            var d = y(930),
                P = y(727),
                H = y(8822),
                w = y(4671);
            var re = y(2416),
                se = y(576),
                Y = y(2806);
            let j = (() => {
                class be {
                    constructor(We) {
                        We && (this._subscribe = We);
                    }
                    lift(We) {
                        const de = new be();
                        return (de.source = this), (de.operator = We), de;
                    }
                    subscribe(We, de, Q) {
                        const ye = (function Ce(be) {
                            return (
                                (be && be instanceof d.Lv) ||
                                ((function ie(be) {
                                    return (
                                        be &&
                                        (0, se.m)(be.next) &&
                                        (0, se.m)(be.error) &&
                                        (0, se.m)(be.complete)
                                    );
                                })(be) &&
                                    (0, P.Nn)(be))
                            );
                        })(We)
                            ? We
                            : new d.Hp(We, de, Q);
                        return (
                            (0, Y.x)(() => {
                                const { operator: M, source: R } = this;
                                ye.add(
                                    M
                                        ? M.call(ye, R)
                                        : R
                                        ? this._subscribe(ye)
                                        : this._trySubscribe(ye)
                                );
                            }),
                            ye
                        );
                    }
                    _trySubscribe(We) {
                        try {
                            return this._subscribe(We);
                        } catch (de) {
                            We.error(de);
                        }
                    }
                    forEach(We, de) {
                        return new (de = U(de))((Q, ye) => {
                            let M;
                            M = this.subscribe(
                                (R) => {
                                    try {
                                        We(R);
                                    } catch (oe) {
                                        ye(oe), null == M || M.unsubscribe();
                                    }
                                },
                                ye,
                                Q
                            );
                        });
                    }
                    _subscribe(We) {
                        var de;
                        return null === (de = this.source) || void 0 === de
                            ? void 0
                            : de.subscribe(We);
                    }
                    [H.L]() {
                        return this;
                    }
                    pipe(...We) {
                        return (function ae(be) {
                            return 0 === be.length
                                ? w.y
                                : 1 === be.length
                                ? be[0]
                                : function (We) {
                                      return be.reduce((de, Q) => Q(de), We);
                                  };
                        })(We)(this);
                    }
                    toPromise(We) {
                        return new (We = U(We))((de, Q) => {
                            let ye;
                            this.subscribe(
                                (M) => (ye = M),
                                (M) => Q(M),
                                () => de(ye)
                            );
                        });
                    }
                }
                return (be.create = (xe) => new be(xe)), be;
            })();
            function U(be) {
                var xe;
                return null !== (xe = null != be ? be : re.v.Promise) &&
                    void 0 !== xe
                    ? xe
                    : Promise;
            }
        },
        4707: (_e, z, y) => {
            'use strict';
            y.d(z, { t: () => H });
            var d = y(7579),
                P = y(6063);
            class H extends d.x {
                constructor($ = 1 / 0, ae = 1 / 0, re = P.l) {
                    super(),
                        (this._bufferSize = $),
                        (this._windowTime = ae),
                        (this._timestampProvider = re),
                        (this._buffer = []),
                        (this._infiniteTimeWindow = !0),
                        (this._infiniteTimeWindow = ae === 1 / 0),
                        (this._bufferSize = Math.max(1, $)),
                        (this._windowTime = Math.max(1, ae));
                }
                next($) {
                    const {
                        isStopped: ae,
                        _buffer: re,
                        _infiniteTimeWindow: se,
                        _timestampProvider: Y,
                        _windowTime: j,
                    } = this;
                    ae || (re.push($), !se && re.push(Y.now() + j)),
                        this._trimBuffer(),
                        super.next($);
                }
                _subscribe($) {
                    this._throwIfClosed(), this._trimBuffer();
                    const ae = this._innerSubscribe($),
                        { _infiniteTimeWindow: re, _buffer: se } = this,
                        Y = se.slice();
                    for (let j = 0; j < Y.length && !$.closed; j += re ? 1 : 2)
                        $.next(Y[j]);
                    return this._checkFinalizedStatuses($), ae;
                }
                _trimBuffer() {
                    const {
                            _bufferSize: $,
                            _timestampProvider: ae,
                            _buffer: re,
                            _infiniteTimeWindow: se,
                        } = this,
                        Y = (se ? 1 : 2) * $;
                    if (
                        ($ < 1 / 0 &&
                            Y < re.length &&
                            re.splice(0, re.length - Y),
                        !se)
                    ) {
                        const j = ae.now();
                        let U = 0;
                        for (let ie = 1; ie < re.length && re[ie] <= j; ie += 2)
                            U = ie;
                        U && re.splice(0, U + 1);
                    }
                }
            }
        },
        7579: (_e, z, y) => {
            'use strict';
            y.d(z, { x: () => re });
            var d = y(8306),
                P = y(727);
            const w = (0, y(3888).d)(
                (Y) =>
                    function () {
                        Y(this),
                            (this.name = 'ObjectUnsubscribedError'),
                            (this.message = 'object unsubscribed');
                    }
            );
            var $ = y(8737),
                ae = y(2806);
            let re = (() => {
                class Y extends d.y {
                    constructor() {
                        super(),
                            (this.closed = !1),
                            (this.observers = []),
                            (this.isStopped = !1),
                            (this.hasError = !1),
                            (this.thrownError = null);
                    }
                    lift(U) {
                        const ie = new se(this, this);
                        return (ie.operator = U), ie;
                    }
                    _throwIfClosed() {
                        if (this.closed) throw new w();
                    }
                    next(U) {
                        (0, ae.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                const ie = this.observers.slice();
                                for (const Ce of ie) Ce.next(U);
                            }
                        });
                    }
                    error(U) {
                        (0, ae.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                (this.hasError = this.isStopped = !0),
                                    (this.thrownError = U);
                                const { observers: ie } = this;
                                for (; ie.length; ) ie.shift().error(U);
                            }
                        });
                    }
                    complete() {
                        (0, ae.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                this.isStopped = !0;
                                const { observers: U } = this;
                                for (; U.length; ) U.shift().complete();
                            }
                        });
                    }
                    unsubscribe() {
                        (this.isStopped = this.closed = !0),
                            (this.observers = null);
                    }
                    get observed() {
                        var U;
                        return (
                            (null === (U = this.observers) || void 0 === U
                                ? void 0
                                : U.length) > 0
                        );
                    }
                    _trySubscribe(U) {
                        return this._throwIfClosed(), super._trySubscribe(U);
                    }
                    _subscribe(U) {
                        return (
                            this._throwIfClosed(),
                            this._checkFinalizedStatuses(U),
                            this._innerSubscribe(U)
                        );
                    }
                    _innerSubscribe(U) {
                        const {
                            hasError: ie,
                            isStopped: Ce,
                            observers: be,
                        } = this;
                        return ie || Ce
                            ? P.Lc
                            : (be.push(U), new P.w0(() => (0, $.P)(be, U)));
                    }
                    _checkFinalizedStatuses(U) {
                        const {
                            hasError: ie,
                            thrownError: Ce,
                            isStopped: be,
                        } = this;
                        ie ? U.error(Ce) : be && U.complete();
                    }
                    asObservable() {
                        const U = new d.y();
                        return (U.source = this), U;
                    }
                }
                return (Y.create = (j, U) => new se(j, U)), Y;
            })();
            class se extends re {
                constructor(j, U) {
                    super(), (this.destination = j), (this.source = U);
                }
                next(j) {
                    var U, ie;
                    null ===
                        (ie =
                            null === (U = this.destination) || void 0 === U
                                ? void 0
                                : U.next) ||
                        void 0 === ie ||
                        ie.call(U, j);
                }
                error(j) {
                    var U, ie;
                    null ===
                        (ie =
                            null === (U = this.destination) || void 0 === U
                                ? void 0
                                : U.error) ||
                        void 0 === ie ||
                        ie.call(U, j);
                }
                complete() {
                    var j, U;
                    null ===
                        (U =
                            null === (j = this.destination) || void 0 === j
                                ? void 0
                                : j.complete) ||
                        void 0 === U ||
                        U.call(j);
                }
                _subscribe(j) {
                    var U, ie;
                    return null !==
                        (ie =
                            null === (U = this.source) || void 0 === U
                                ? void 0
                                : U.subscribe(j)) && void 0 !== ie
                        ? ie
                        : P.Lc;
                }
            }
        },
        930: (_e, z, y) => {
            'use strict';
            y.d(z, { Hp: () => Ce, Lv: () => ie });
            var d = y(576),
                P = y(727),
                H = y(2416),
                w = y(7849),
                $ = y(5032);
            const ae = Y('C', void 0, void 0);
            function Y(Q, ye, M) {
                return { kind: Q, value: ye, error: M };
            }
            var j = y(3410),
                U = y(2806);
            class ie extends P.w0 {
                constructor(ye) {
                    super(),
                        (this.isStopped = !1),
                        ye
                            ? ((this.destination = ye),
                              (0, P.Nn)(ye) && ye.add(this))
                            : (this.destination = de);
                }
                static create(ye, M, R) {
                    return new Ce(ye, M, R);
                }
                next(ye) {
                    this.isStopped
                        ? We(
                              (function se(Q) {
                                  return Y('N', Q, void 0);
                              })(ye),
                              this
                          )
                        : this._next(ye);
                }
                error(ye) {
                    this.isStopped
                        ? We(
                              (function re(Q) {
                                  return Y('E', void 0, Q);
                              })(ye),
                              this
                          )
                        : ((this.isStopped = !0), this._error(ye));
                }
                complete() {
                    this.isStopped
                        ? We(ae, this)
                        : ((this.isStopped = !0), this._complete());
                }
                unsubscribe() {
                    this.closed ||
                        ((this.isStopped = !0),
                        super.unsubscribe(),
                        (this.destination = null));
                }
                _next(ye) {
                    this.destination.next(ye);
                }
                _error(ye) {
                    try {
                        this.destination.error(ye);
                    } finally {
                        this.unsubscribe();
                    }
                }
                _complete() {
                    try {
                        this.destination.complete();
                    } finally {
                        this.unsubscribe();
                    }
                }
            }
            class Ce extends ie {
                constructor(ye, M, R) {
                    let oe;
                    if ((super(), (0, d.m)(ye))) oe = ye;
                    else if (ye) {
                        let J;
                        ({ next: oe, error: M, complete: R } = ye),
                            this && H.v.useDeprecatedNextContext
                                ? ((J = Object.create(ye)),
                                  (J.unsubscribe = () => this.unsubscribe()))
                                : (J = ye),
                            (oe = null == oe ? void 0 : oe.bind(J)),
                            (M = null == M ? void 0 : M.bind(J)),
                            (R = null == R ? void 0 : R.bind(J));
                    }
                    this.destination = {
                        next: oe ? be(oe) : $.Z,
                        error: be(null != M ? M : xe),
                        complete: R ? be(R) : $.Z,
                    };
                }
            }
            function be(Q, ye) {
                return (...M) => {
                    try {
                        Q(...M);
                    } catch (R) {
                        H.v.useDeprecatedSynchronousErrorHandling
                            ? (0, U.O)(R)
                            : (0, w.h)(R);
                    }
                };
            }
            function xe(Q) {
                throw Q;
            }
            function We(Q, ye) {
                const { onStoppedNotification: M } = H.v;
                M && j.z.setTimeout(() => M(Q, ye));
            }
            const de = { closed: !0, next: $.Z, error: xe, complete: $.Z };
        },
        727: (_e, z, y) => {
            'use strict';
            y.d(z, { Lc: () => ae, w0: () => $, Nn: () => re });
            var d = y(576);
            const H = (0, y(3888).d)(
                (Y) =>
                    function (U) {
                        Y(this),
                            (this.message = U
                                ? `${
                                      U.length
                                  } errors occurred during unsubscription:\n${U.map(
                                      (ie, Ce) => `${Ce + 1}) ${ie.toString()}`
                                  ).join('\n  ')}`
                                : ''),
                            (this.name = 'UnsubscriptionError'),
                            (this.errors = U);
                    }
            );
            var w = y(8737);
            class $ {
                constructor(j) {
                    (this.initialTeardown = j),
                        (this.closed = !1),
                        (this._parentage = null),
                        (this._teardowns = null);
                }
                unsubscribe() {
                    let j;
                    if (!this.closed) {
                        this.closed = !0;
                        const { _parentage: U } = this;
                        if (U)
                            if (((this._parentage = null), Array.isArray(U)))
                                for (const be of U) be.remove(this);
                            else U.remove(this);
                        const { initialTeardown: ie } = this;
                        if ((0, d.m)(ie))
                            try {
                                ie();
                            } catch (be) {
                                j = be instanceof H ? be.errors : [be];
                            }
                        const { _teardowns: Ce } = this;
                        if (Ce) {
                            this._teardowns = null;
                            for (const be of Ce)
                                try {
                                    se(be);
                                } catch (xe) {
                                    (j = null != j ? j : []),
                                        xe instanceof H
                                            ? (j = [...j, ...xe.errors])
                                            : j.push(xe);
                                }
                        }
                        if (j) throw new H(j);
                    }
                }
                add(j) {
                    var U;
                    if (j && j !== this)
                        if (this.closed) se(j);
                        else {
                            if (j instanceof $) {
                                if (j.closed || j._hasParent(this)) return;
                                j._addParent(this);
                            }
                            (this._teardowns =
                                null !== (U = this._teardowns) && void 0 !== U
                                    ? U
                                    : []).push(j);
                        }
                }
                _hasParent(j) {
                    const { _parentage: U } = this;
                    return U === j || (Array.isArray(U) && U.includes(j));
                }
                _addParent(j) {
                    const { _parentage: U } = this;
                    this._parentage = Array.isArray(U)
                        ? (U.push(j), U)
                        : U
                        ? [U, j]
                        : j;
                }
                _removeParent(j) {
                    const { _parentage: U } = this;
                    U === j
                        ? (this._parentage = null)
                        : Array.isArray(U) && (0, w.P)(U, j);
                }
                remove(j) {
                    const { _teardowns: U } = this;
                    U && (0, w.P)(U, j),
                        j instanceof $ && j._removeParent(this);
                }
            }
            $.EMPTY = (() => {
                const Y = new $();
                return (Y.closed = !0), Y;
            })();
            const ae = $.EMPTY;
            function re(Y) {
                return (
                    Y instanceof $ ||
                    (Y &&
                        'closed' in Y &&
                        (0, d.m)(Y.remove) &&
                        (0, d.m)(Y.add) &&
                        (0, d.m)(Y.unsubscribe))
                );
            }
            function se(Y) {
                (0, d.m)(Y) ? Y() : Y.unsubscribe();
            }
        },
        2416: (_e, z, y) => {
            'use strict';
            y.d(z, { v: () => d });
            const d = {
                onUnhandledError: null,
                onStoppedNotification: null,
                Promise: void 0,
                useDeprecatedSynchronousErrorHandling: !1,
                useDeprecatedNextContext: !1,
            };
        },
        7272: (_e, z, y) => {
            'use strict';
            y.d(z, { z: () => $ });
            var d = y(8189),
                H = y(7669),
                w = y(8996);
            function $(...ae) {
                return (function P() {
                    return (0, d.J)(1);
                })()((0, w.D)(ae, (0, H.yG)(ae)));
            }
        },
        515: (_e, z, y) => {
            'use strict';
            y.d(z, { E: () => P });
            const P = new (y(8306).y)(($) => $.complete());
        },
        8996: (_e, z, y) => {
            'use strict';
            y.d(z, { D: () => oe });
            var d = y(8421),
                P = y(5363),
                H = y(9468),
                ae = y(8306),
                se = y(2202),
                Y = y(576),
                j = y(9672);
            function ie(J, Ve) {
                if (!J) throw new Error('Iterable cannot be null');
                return new ae.y((He) => {
                    (0, j.f)(He, Ve, () => {
                        const Je = J[Symbol.asyncIterator]();
                        (0, j.f)(
                            He,
                            Ve,
                            () => {
                                Je.next().then((te) => {
                                    te.done ? He.complete() : He.next(te.value);
                                });
                            },
                            0,
                            !0
                        );
                    });
                });
            }
            var Ce = y(3670),
                be = y(8239),
                xe = y(1144),
                We = y(6495),
                de = y(2206),
                Q = y(4532),
                ye = y(3260);
            function oe(J, Ve) {
                return Ve
                    ? (function R(J, Ve) {
                          if (null != J) {
                              if ((0, Ce.c)(J))
                                  return (function w(J, Ve) {
                                      return (0, d.Xf)(J).pipe(
                                          (0, H.R)(Ve),
                                          (0, P.Q)(Ve)
                                      );
                                  })(J, Ve);
                              if ((0, xe.z)(J))
                                  return (function re(J, Ve) {
                                      return new ae.y((He) => {
                                          let Je = 0;
                                          return Ve.schedule(function () {
                                              Je === J.length
                                                  ? He.complete()
                                                  : (He.next(J[Je++]),
                                                    He.closed ||
                                                        this.schedule());
                                          });
                                      });
                                  })(J, Ve);
                              if ((0, be.t)(J))
                                  return (function $(J, Ve) {
                                      return (0, d.Xf)(J).pipe(
                                          (0, H.R)(Ve),
                                          (0, P.Q)(Ve)
                                      );
                                  })(J, Ve);
                              if ((0, de.D)(J)) return ie(J, Ve);
                              if ((0, We.T)(J))
                                  return (function U(J, Ve) {
                                      return new ae.y((He) => {
                                          let Je;
                                          return (
                                              (0, j.f)(He, Ve, () => {
                                                  (Je = J[se.h]()),
                                                      (0, j.f)(
                                                          He,
                                                          Ve,
                                                          () => {
                                                              let te, Re;
                                                              try {
                                                                  ({
                                                                      value: te,
                                                                      done: Re,
                                                                  } =
                                                                      Je.next());
                                                              } catch (Oe) {
                                                                  return void He.error(
                                                                      Oe
                                                                  );
                                                              }
                                                              Re
                                                                  ? He.complete()
                                                                  : He.next(te);
                                                          },
                                                          0,
                                                          !0
                                                      );
                                              }),
                                              () =>
                                                  (0, Y.m)(
                                                      null == Je
                                                          ? void 0
                                                          : Je.return
                                                  ) && Je.return()
                                          );
                                      });
                                  })(J, Ve);
                              if ((0, ye.L)(J))
                                  return (function M(J, Ve) {
                                      return ie((0, ye.Q)(J), Ve);
                                  })(J, Ve);
                          }
                          throw (0, Q.z)(J);
                      })(J, Ve)
                    : (0, d.Xf)(J);
            }
        },
        8421: (_e, z, y) => {
            'use strict';
            y.d(z, { Xf: () => Ce });
            var d = y(5987),
                P = y(1144),
                H = y(8239),
                w = y(8306),
                $ = y(3670),
                ae = y(2206),
                re = y(4532),
                se = y(6495),
                Y = y(3260),
                j = y(576),
                U = y(7849),
                ie = y(8822);
            function Ce(R) {
                if (R instanceof w.y) return R;
                if (null != R) {
                    if ((0, $.c)(R))
                        return (function be(R) {
                            return new w.y((oe) => {
                                const J = R[ie.L]();
                                if ((0, j.m)(J.subscribe))
                                    return J.subscribe(oe);
                                throw new TypeError(
                                    'Provided object does not correctly implement Symbol.observable'
                                );
                            });
                        })(R);
                    if ((0, P.z)(R))
                        return (function xe(R) {
                            return new w.y((oe) => {
                                for (let J = 0; J < R.length && !oe.closed; J++)
                                    oe.next(R[J]);
                                oe.complete();
                            });
                        })(R);
                    if ((0, H.t)(R))
                        return (function We(R) {
                            return new w.y((oe) => {
                                R.then(
                                    (J) => {
                                        oe.closed ||
                                            (oe.next(J), oe.complete());
                                    },
                                    (J) => oe.error(J)
                                ).then(null, U.h);
                            });
                        })(R);
                    if ((0, ae.D)(R)) return Q(R);
                    if ((0, se.T)(R))
                        return (function de(R) {
                            return new w.y((oe) => {
                                for (const J of R)
                                    if ((oe.next(J), oe.closed)) return;
                                oe.complete();
                            });
                        })(R);
                    if ((0, Y.L)(R))
                        return (function ye(R) {
                            return Q((0, Y.Q)(R));
                        })(R);
                }
                throw (0, re.z)(R);
            }
            function Q(R) {
                return new w.y((oe) => {
                    (function M(R, oe) {
                        var J, Ve, He, Je;
                        return (0, d.mG)(this, void 0, void 0, function* () {
                            try {
                                for (
                                    J = (0, d.KL)(R);
                                    !(Ve = yield J.next()).done;

                                )
                                    if ((oe.next(Ve.value), oe.closed)) return;
                            } catch (te) {
                                He = { error: te };
                            } finally {
                                try {
                                    Ve &&
                                        !Ve.done &&
                                        (Je = J.return) &&
                                        (yield Je.call(J));
                                } finally {
                                    if (He) throw He.error;
                                }
                            }
                            oe.complete();
                        });
                    })(R, oe).catch((J) => oe.error(J));
                });
            }
        },
        6451: (_e, z, y) => {
            'use strict';
            y.d(z, { T: () => ae });
            var d = y(8189),
                P = y(8421),
                H = y(515),
                w = y(7669),
                $ = y(8996);
            function ae(...re) {
                const se = (0, w.yG)(re),
                    Y = (0, w._6)(re, 1 / 0),
                    j = re;
                return j.length
                    ? 1 === j.length
                        ? (0, P.Xf)(j[0])
                        : (0, d.J)(Y)((0, $.D)(j, se))
                    : H.E;
            }
        },
        9646: (_e, z, y) => {
            'use strict';
            y.d(z, { of: () => H });
            var d = y(7669),
                P = y(8996);
            function H(...w) {
                const $ = (0, d.yG)(w);
                return (0, P.D)(w, $);
            }
        },
        5403: (_e, z, y) => {
            'use strict';
            y.d(z, { Q: () => P });
            var d = y(930);
            class P extends d.Lv {
                constructor(w, $, ae, re, se) {
                    super(w),
                        (this.onFinalize = se),
                        (this._next = $
                            ? function (Y) {
                                  try {
                                      $(Y);
                                  } catch (j) {
                                      w.error(j);
                                  }
                              }
                            : super._next),
                        (this._error = re
                            ? function (Y) {
                                  try {
                                      re(Y);
                                  } catch (j) {
                                      w.error(j);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._error),
                        (this._complete = ae
                            ? function () {
                                  try {
                                      ae();
                                  } catch (Y) {
                                      w.error(Y);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._complete);
                }
                unsubscribe() {
                    var w;
                    const { closed: $ } = this;
                    super.unsubscribe(),
                        !$ &&
                            (null === (w = this.onFinalize) ||
                                void 0 === w ||
                                w.call(this));
                }
            }
        },
        262: (_e, z, y) => {
            'use strict';
            y.d(z, { K: () => w });
            var d = y(8421),
                P = y(5403),
                H = y(4482);
            function w($) {
                return (0, H.e)((ae, re) => {
                    let j,
                        se = null,
                        Y = !1;
                    (se = ae.subscribe(
                        new P.Q(re, void 0, void 0, (U) => {
                            (j = (0, d.Xf)($(U, w($)(ae)))),
                                se
                                    ? (se.unsubscribe(),
                                      (se = null),
                                      j.subscribe(re))
                                    : (Y = !0);
                        })
                    )),
                        Y && (se.unsubscribe(), (se = null), j.subscribe(re));
                });
            }
        },
        4351: (_e, z, y) => {
            'use strict';
            y.d(z, { b: () => H });
            var d = y(5577),
                P = y(576);
            function H(w, $) {
                return (0, P.m)($) ? (0, d.z)(w, $, 1) : (0, d.z)(w, 1);
            }
        },
        8372: (_e, z, y) => {
            'use strict';
            y.d(z, { b: () => w });
            var d = y(4986),
                P = y(4482),
                H = y(5403);
            function w($, ae = d.z) {
                return (0, P.e)((re, se) => {
                    let Y = null,
                        j = null,
                        U = null;
                    const ie = () => {
                        if (Y) {
                            Y.unsubscribe(), (Y = null);
                            const be = j;
                            (j = null), se.next(be);
                        }
                    };
                    function Ce() {
                        const be = U + $,
                            xe = ae.now();
                        if (xe < be)
                            return (
                                (Y = this.schedule(void 0, be - xe)),
                                void se.add(Y)
                            );
                        ie();
                    }
                    re.subscribe(
                        new H.Q(
                            se,
                            (be) => {
                                (j = be),
                                    (U = ae.now()),
                                    Y || ((Y = ae.schedule(Ce, $)), se.add(Y));
                            },
                            () => {
                                ie(), se.complete();
                            },
                            void 0,
                            () => {
                                j = Y = null;
                            }
                        )
                    );
                });
            }
        },
        6590: (_e, z, y) => {
            'use strict';
            y.d(z, { d: () => H });
            var d = y(4482),
                P = y(5403);
            function H(w) {
                return (0, d.e)(($, ae) => {
                    let re = !1;
                    $.subscribe(
                        new P.Q(
                            ae,
                            (se) => {
                                (re = !0), ae.next(se);
                            },
                            () => {
                                re || ae.next(w), ae.complete();
                            }
                        )
                    );
                });
            }
        },
        9300: (_e, z, y) => {
            'use strict';
            y.d(z, { h: () => H });
            var d = y(4482),
                P = y(5403);
            function H(w, $) {
                return (0, d.e)((ae, re) => {
                    let se = 0;
                    ae.subscribe(
                        new P.Q(re, (Y) => w.call($, Y, se++) && re.next(Y))
                    );
                });
            }
        },
        590: (_e, z, y) => {
            'use strict';
            y.d(z, { P: () => re });
            var d = y(6805),
                P = y(9300),
                H = y(5698),
                w = y(6590),
                $ = y(8068),
                ae = y(4671);
            function re(se, Y) {
                const j = arguments.length >= 2;
                return (U) =>
                    U.pipe(
                        se ? (0, P.h)((ie, Ce) => se(ie, Ce, U)) : ae.y,
                        (0, H.q)(1),
                        j ? (0, w.d)(Y) : (0, $.T)(() => new d.K())
                    );
            }
        },
        4004: (_e, z, y) => {
            'use strict';
            y.d(z, { U: () => H });
            var d = y(4482),
                P = y(5403);
            function H(w, $) {
                return (0, d.e)((ae, re) => {
                    let se = 0;
                    ae.subscribe(
                        new P.Q(re, (Y) => {
                            re.next(w.call($, Y, se++));
                        })
                    );
                });
            }
        },
        8189: (_e, z, y) => {
            'use strict';
            y.d(z, { J: () => H });
            var d = y(5577),
                P = y(4671);
            function H(w = 1 / 0) {
                return (0, d.z)(P.y, w);
            }
        },
        5577: (_e, z, y) => {
            'use strict';
            y.d(z, { z: () => se });
            var d = y(4004),
                P = y(8421),
                H = y(4482),
                w = y(9672),
                $ = y(5403),
                re = y(576);
            function se(Y, j, U = 1 / 0) {
                return (0, re.m)(j)
                    ? se(
                          (ie, Ce) =>
                              (0, d.U)((be, xe) => j(ie, be, Ce, xe))(
                                  (0, P.Xf)(Y(ie, Ce))
                              ),
                          U
                      )
                    : ('number' == typeof j && (U = j),
                      (0, H.e)((ie, Ce) =>
                          (function ae(Y, j, U, ie, Ce, be, xe, We) {
                              const de = [];
                              let Q = 0,
                                  ye = 0,
                                  M = !1;
                              const R = () => {
                                      M && !de.length && !Q && j.complete();
                                  },
                                  oe = (Ve) => (Q < ie ? J(Ve) : de.push(Ve)),
                                  J = (Ve) => {
                                      be && j.next(Ve), Q++;
                                      let He = !1;
                                      (0, P.Xf)(U(Ve, ye++)).subscribe(
                                          new $.Q(
                                              j,
                                              (Je) => {
                                                  null == Ce || Ce(Je),
                                                      be ? oe(Je) : j.next(Je);
                                              },
                                              () => {
                                                  He = !0;
                                              },
                                              void 0,
                                              () => {
                                                  if (He)
                                                      try {
                                                          for (
                                                              Q--;
                                                              de.length &&
                                                              Q < ie;

                                                          ) {
                                                              const Je =
                                                                  de.shift();
                                                              xe
                                                                  ? (0, w.f)(
                                                                        j,
                                                                        xe,
                                                                        () =>
                                                                            J(
                                                                                Je
                                                                            )
                                                                    )
                                                                  : J(Je);
                                                          }
                                                          R();
                                                      } catch (Je) {
                                                          j.error(Je);
                                                      }
                                              }
                                          )
                                      );
                                  };
                              return (
                                  Y.subscribe(
                                      new $.Q(j, oe, () => {
                                          (M = !0), R();
                                      })
                                  ),
                                  () => {
                                      null == We || We();
                                  }
                              );
                          })(ie, Ce, Y, U)
                      ));
            }
        },
        5363: (_e, z, y) => {
            'use strict';
            y.d(z, { Q: () => w });
            var d = y(9672),
                P = y(4482),
                H = y(5403);
            function w($, ae = 0) {
                return (0, P.e)((re, se) => {
                    re.subscribe(
                        new H.Q(
                            se,
                            (Y) => (0, d.f)(se, $, () => se.next(Y), ae),
                            () => (0, d.f)(se, $, () => se.complete(), ae),
                            (Y) => (0, d.f)(se, $, () => se.error(Y), ae)
                        )
                    );
                });
            }
        },
        5026: (_e, z, y) => {
            'use strict';
            y.d(z, { R: () => w });
            var d = y(4482),
                P = y(5403);
            function H($, ae, re, se, Y) {
                return (j, U) => {
                    let ie = re,
                        Ce = ae,
                        be = 0;
                    j.subscribe(
                        new P.Q(
                            U,
                            (xe) => {
                                const We = be++;
                                (Ce = ie ? $(Ce, xe, We) : ((ie = !0), xe)),
                                    se && U.next(Ce);
                            },
                            Y &&
                                (() => {
                                    ie && U.next(Ce), U.complete();
                                })
                        )
                    );
                };
            }
            function w($, ae) {
                return (0, d.e)(H($, ae, arguments.length >= 2, !0));
            }
        },
        3099: (_e, z, y) => {
            'use strict';
            y.d(z, { B: () => ae });
            var d = y(8996),
                P = y(5698),
                H = y(7579),
                w = y(930),
                $ = y(4482);
            function ae(se = {}) {
                const {
                    connector: Y = () => new H.x(),
                    resetOnError: j = !0,
                    resetOnComplete: U = !0,
                    resetOnRefCountZero: ie = !0,
                } = se;
                return (Ce) => {
                    let be = null,
                        xe = null,
                        We = null,
                        de = 0,
                        Q = !1,
                        ye = !1;
                    const M = () => {
                            null == xe || xe.unsubscribe(), (xe = null);
                        },
                        R = () => {
                            M(), (be = We = null), (Q = ye = !1);
                        },
                        oe = () => {
                            const J = be;
                            R(), null == J || J.unsubscribe();
                        };
                    return (0, $.e)((J, Ve) => {
                        de++, !ye && !Q && M();
                        const He = (We = null != We ? We : Y());
                        Ve.add(() => {
                            de--, 0 === de && !ye && !Q && (xe = re(oe, ie));
                        }),
                            He.subscribe(Ve),
                            be ||
                                ((be = new w.Hp({
                                    next: (Je) => He.next(Je),
                                    error: (Je) => {
                                        (ye = !0),
                                            M(),
                                            (xe = re(R, j, Je)),
                                            He.error(Je);
                                    },
                                    complete: () => {
                                        (Q = !0),
                                            M(),
                                            (xe = re(R, U)),
                                            He.complete();
                                    },
                                })),
                                (0, d.D)(J).subscribe(be));
                    })(Ce);
                };
            }
            function re(se, Y, ...j) {
                return !0 === Y
                    ? (se(), null)
                    : !1 === Y
                    ? null
                    : Y(...j)
                          .pipe((0, P.q)(1))
                          .subscribe(() => se());
            }
        },
        5684: (_e, z, y) => {
            'use strict';
            y.d(z, { T: () => P });
            var d = y(9300);
            function P(H) {
                return (0, d.h)((w, $) => H <= $);
            }
        },
        8675: (_e, z, y) => {
            'use strict';
            y.d(z, { O: () => w });
            var d = y(7272),
                P = y(7669),
                H = y(4482);
            function w(...$) {
                const ae = (0, P.yG)($);
                return (0, H.e)((re, se) => {
                    (ae ? (0, d.z)($, re, ae) : (0, d.z)($, re)).subscribe(se);
                });
            }
        },
        9468: (_e, z, y) => {
            'use strict';
            y.d(z, { R: () => P });
            var d = y(4482);
            function P(H, w = 0) {
                return (0, d.e)(($, ae) => {
                    ae.add(H.schedule(() => $.subscribe(ae), w));
                });
            }
        },
        3900: (_e, z, y) => {
            'use strict';
            y.d(z, { w: () => w });
            var d = y(8421),
                P = y(4482),
                H = y(5403);
            function w($, ae) {
                return (0, P.e)((re, se) => {
                    let Y = null,
                        j = 0,
                        U = !1;
                    const ie = () => U && !Y && se.complete();
                    re.subscribe(
                        new H.Q(
                            se,
                            (Ce) => {
                                null == Y || Y.unsubscribe();
                                let be = 0;
                                const xe = j++;
                                (0, d.Xf)($(Ce, xe)).subscribe(
                                    (Y = new H.Q(
                                        se,
                                        (We) =>
                                            se.next(
                                                ae ? ae(Ce, We, xe, be++) : We
                                            ),
                                        () => {
                                            (Y = null), ie();
                                        }
                                    ))
                                );
                            },
                            () => {
                                (U = !0), ie();
                            }
                        )
                    );
                });
            }
        },
        5698: (_e, z, y) => {
            'use strict';
            y.d(z, { q: () => w });
            var d = y(515),
                P = y(4482),
                H = y(5403);
            function w($) {
                return $ <= 0
                    ? () => d.E
                    : (0, P.e)((ae, re) => {
                          let se = 0;
                          ae.subscribe(
                              new H.Q(re, (Y) => {
                                  ++se <= $ &&
                                      (re.next(Y), $ <= se && re.complete());
                              })
                          );
                      });
            }
        },
        2722: (_e, z, y) => {
            'use strict';
            y.d(z, { R: () => $ });
            var d = y(4482),
                P = y(5403),
                H = y(8421),
                w = y(5032);
            function $(ae) {
                return (0, d.e)((re, se) => {
                    (0, H.Xf)(ae).subscribe(
                        new P.Q(se, () => se.complete(), w.Z)
                    ),
                        !se.closed && re.subscribe(se);
                });
            }
        },
        8505: (_e, z, y) => {
            'use strict';
            y.d(z, { b: () => $ });
            var d = y(576),
                P = y(4482),
                H = y(5403),
                w = y(4671);
            function $(ae, re, se) {
                const Y =
                    (0, d.m)(ae) || re || se
                        ? { next: ae, error: re, complete: se }
                        : ae;
                return Y
                    ? (0, P.e)((j, U) => {
                          var ie;
                          null === (ie = Y.subscribe) ||
                              void 0 === ie ||
                              ie.call(Y);
                          let Ce = !0;
                          j.subscribe(
                              new H.Q(
                                  U,
                                  (be) => {
                                      var xe;
                                      null === (xe = Y.next) ||
                                          void 0 === xe ||
                                          xe.call(Y, be),
                                          U.next(be);
                                  },
                                  () => {
                                      var be;
                                      (Ce = !1),
                                          null === (be = Y.complete) ||
                                              void 0 === be ||
                                              be.call(Y),
                                          U.complete();
                                  },
                                  (be) => {
                                      var xe;
                                      (Ce = !1),
                                          null === (xe = Y.error) ||
                                              void 0 === xe ||
                                              xe.call(Y, be),
                                          U.error(be);
                                  },
                                  () => {
                                      var be, xe;
                                      Ce &&
                                          (null === (be = Y.unsubscribe) ||
                                              void 0 === be ||
                                              be.call(Y)),
                                          null === (xe = Y.finalize) ||
                                              void 0 === xe ||
                                              xe.call(Y);
                                  }
                              )
                          );
                      })
                    : w.y;
            }
        },
        8068: (_e, z, y) => {
            'use strict';
            y.d(z, { T: () => w });
            var d = y(6805),
                P = y(4482),
                H = y(5403);
            function w(ae = $) {
                return (0, P.e)((re, se) => {
                    let Y = !1;
                    re.subscribe(
                        new H.Q(
                            se,
                            (j) => {
                                (Y = !0), se.next(j);
                            },
                            () => (Y ? se.complete() : se.error(ae()))
                        )
                    );
                });
            }
            function $() {
                return new d.K();
            }
        },
        1749: (_e, z, y) => {
            'use strict';
            y.d(z, { V: () => Y });
            var d = y(4986),
                H = y(4482),
                w = y(8421),
                $ = y(3888),
                ae = y(5403),
                re = y(9672);
            const se = (0, $.d)(
                (U) =>
                    function (Ce = null) {
                        U(this),
                            (this.message = 'Timeout has occurred'),
                            (this.name = 'TimeoutError'),
                            (this.info = Ce);
                    }
            );
            function Y(U, ie) {
                const {
                    first: Ce,
                    each: be,
                    with: xe = j,
                    scheduler: We = null != ie ? ie : d.z,
                    meta: de = null,
                } = (function P(U) {
                    return U instanceof Date && !isNaN(U);
                })(U)
                    ? { first: U }
                    : 'number' == typeof U
                    ? { each: U }
                    : U;
                if (null == Ce && null == be)
                    throw new TypeError('No timeout provided.');
                return (0, H.e)((Q, ye) => {
                    let M,
                        R,
                        oe = null,
                        J = 0;
                    const Ve = (He) => {
                        R = (0, re.f)(
                            ye,
                            We,
                            () => {
                                try {
                                    M.unsubscribe(),
                                        (0, w.Xf)(
                                            xe({
                                                meta: de,
                                                lastValue: oe,
                                                seen: J,
                                            })
                                        ).subscribe(ye);
                                } catch (Je) {
                                    ye.error(Je);
                                }
                            },
                            He
                        );
                    };
                    (M = Q.subscribe(
                        new ae.Q(
                            ye,
                            (He) => {
                                null == R || R.unsubscribe(),
                                    J++,
                                    ye.next((oe = He)),
                                    be > 0 && Ve(be);
                            },
                            void 0,
                            void 0,
                            () => {
                                (null == R ? void 0 : R.closed) ||
                                    null == R ||
                                    R.unsubscribe(),
                                    (oe = null);
                            }
                        )
                    )),
                        Ve(
                            null != Ce
                                ? 'number' == typeof Ce
                                    ? Ce
                                    : +Ce - We.now()
                                : be
                        );
                });
            }
            function j(U) {
                throw new se(U);
            }
        },
        1365: (_e, z, y) => {
            'use strict';
            y.d(z, { M: () => re });
            var d = y(4482),
                P = y(5403),
                H = y(8421),
                w = y(4671),
                $ = y(5032),
                ae = y(7669);
            function re(...se) {
                const Y = (0, ae.jO)(se);
                return (0, d.e)((j, U) => {
                    const ie = se.length,
                        Ce = new Array(ie);
                    let be = se.map(() => !1),
                        xe = !1;
                    for (let We = 0; We < ie; We++)
                        (0, H.Xf)(se[We]).subscribe(
                            new P.Q(
                                U,
                                (de) => {
                                    (Ce[We] = de),
                                        !xe &&
                                            !be[We] &&
                                            ((be[We] = !0),
                                            (xe = be.every(w.y)) &&
                                                (be = null));
                                },
                                $.Z
                            )
                        );
                    j.subscribe(
                        new P.Q(U, (We) => {
                            if (xe) {
                                const de = [We, ...Ce];
                                U.next(Y ? Y(...de) : de);
                            }
                        })
                    );
                });
            }
        },
        4408: (_e, z, y) => {
            'use strict';
            y.d(z, { o: () => $ });
            var d = y(727);
            class P extends d.w0 {
                constructor(re, se) {
                    super();
                }
                schedule(re, se = 0) {
                    return this;
                }
            }
            const H = {
                setInterval(...ae) {
                    const { delegate: re } = H;
                    return (
                        (null == re ? void 0 : re.setInterval) || setInterval
                    )(...ae);
                },
                clearInterval(ae) {
                    const { delegate: re } = H;
                    return (
                        (null == re ? void 0 : re.clearInterval) ||
                        clearInterval
                    )(ae);
                },
                delegate: void 0,
            };
            var w = y(8737);
            class $ extends P {
                constructor(re, se) {
                    super(re, se),
                        (this.scheduler = re),
                        (this.work = se),
                        (this.pending = !1);
                }
                schedule(re, se = 0) {
                    if (this.closed) return this;
                    this.state = re;
                    const Y = this.id,
                        j = this.scheduler;
                    return (
                        null != Y && (this.id = this.recycleAsyncId(j, Y, se)),
                        (this.pending = !0),
                        (this.delay = se),
                        (this.id =
                            this.id || this.requestAsyncId(j, this.id, se)),
                        this
                    );
                }
                requestAsyncId(re, se, Y = 0) {
                    return H.setInterval(re.flush.bind(re, this), Y);
                }
                recycleAsyncId(re, se, Y = 0) {
                    if (null != Y && this.delay === Y && !1 === this.pending)
                        return se;
                    H.clearInterval(se);
                }
                execute(re, se) {
                    if (this.closed)
                        return new Error('executing a cancelled action');
                    this.pending = !1;
                    const Y = this._execute(re, se);
                    if (Y) return Y;
                    !1 === this.pending &&
                        null != this.id &&
                        (this.id = this.recycleAsyncId(
                            this.scheduler,
                            this.id,
                            null
                        ));
                }
                _execute(re, se) {
                    let j,
                        Y = !1;
                    try {
                        this.work(re);
                    } catch (U) {
                        (Y = !0),
                            (j =
                                U ||
                                new Error(
                                    'Scheduled action threw falsy error'
                                ));
                    }
                    if (Y) return this.unsubscribe(), j;
                }
                unsubscribe() {
                    if (!this.closed) {
                        const { id: re, scheduler: se } = this,
                            { actions: Y } = se;
                        (this.work = this.state = this.scheduler = null),
                            (this.pending = !1),
                            (0, w.P)(Y, this),
                            null != re &&
                                (this.id = this.recycleAsyncId(se, re, null)),
                            (this.delay = null),
                            super.unsubscribe();
                    }
                }
            }
        },
        7565: (_e, z, y) => {
            'use strict';
            y.d(z, { v: () => H });
            var d = y(6063);
            class P {
                constructor($, ae = P.now) {
                    (this.schedulerActionCtor = $), (this.now = ae);
                }
                schedule($, ae = 0, re) {
                    return new this.schedulerActionCtor(this, $).schedule(
                        re,
                        ae
                    );
                }
            }
            P.now = d.l.now;
            class H extends P {
                constructor($, ae = P.now) {
                    super($, ae),
                        (this.actions = []),
                        (this._active = !1),
                        (this._scheduled = void 0);
                }
                flush($) {
                    const { actions: ae } = this;
                    if (this._active) return void ae.push($);
                    let re;
                    this._active = !0;
                    do {
                        if ((re = $.execute($.state, $.delay))) break;
                    } while (($ = ae.shift()));
                    if (((this._active = !1), re)) {
                        for (; ($ = ae.shift()); ) $.unsubscribe();
                        throw re;
                    }
                }
            }
        },
        4986: (_e, z, y) => {
            'use strict';
            y.d(z, { z: () => H });
            var d = y(4408);
            const H = new (y(7565).v)(d.o);
        },
        6063: (_e, z, y) => {
            'use strict';
            y.d(z, { l: () => d });
            const d = {
                now: () => (d.delegate || Date).now(),
                delegate: void 0,
            };
        },
        233: (_e, z, y) => {
            'use strict';
            y.d(z, { N: () => $ });
            var d = y(4408),
                H = y(7565);
            const $ = new (class w extends H.v {})(
                class P extends d.o {
                    constructor(se, Y) {
                        super(se, Y), (this.scheduler = se), (this.work = Y);
                    }
                    schedule(se, Y = 0) {
                        return Y > 0
                            ? super.schedule(se, Y)
                            : ((this.delay = Y),
                              (this.state = se),
                              this.scheduler.flush(this),
                              this);
                    }
                    execute(se, Y) {
                        return Y > 0 || this.closed
                            ? super.execute(se, Y)
                            : this._execute(se, Y);
                    }
                    requestAsyncId(se, Y, j = 0) {
                        return (null != j && j > 0) ||
                            (null == j && this.delay > 0)
                            ? super.requestAsyncId(se, Y, j)
                            : se.flush(this);
                    }
                }
            );
        },
        3410: (_e, z, y) => {
            'use strict';
            y.d(z, { z: () => d });
            const d = {
                setTimeout(...P) {
                    const { delegate: H } = d;
                    return ((null == H ? void 0 : H.setTimeout) || setTimeout)(
                        ...P
                    );
                },
                clearTimeout(P) {
                    const { delegate: H } = d;
                    return (
                        (null == H ? void 0 : H.clearTimeout) || clearTimeout
                    )(P);
                },
                delegate: void 0,
            };
        },
        2202: (_e, z, y) => {
            'use strict';
            y.d(z, { h: () => P });
            const P = (function d() {
                return 'function' == typeof Symbol && Symbol.iterator
                    ? Symbol.iterator
                    : '@@iterator';
            })();
        },
        8822: (_e, z, y) => {
            'use strict';
            y.d(z, { L: () => d });
            const d =
                ('function' == typeof Symbol && Symbol.observable) ||
                '@@observable';
        },
        6805: (_e, z, y) => {
            'use strict';
            y.d(z, { K: () => P });
            const P = (0, y(3888).d)(
                (H) =>
                    function () {
                        H(this),
                            (this.name = 'EmptyError'),
                            (this.message = 'no elements in sequence');
                    }
            );
        },
        7669: (_e, z, y) => {
            'use strict';
            y.d(z, { _6: () => ae, jO: () => w, yG: () => $ });
            var d = y(576);
            function H(re) {
                return re[re.length - 1];
            }
            function w(re) {
                return (0, d.m)(H(re)) ? re.pop() : void 0;
            }
            function $(re) {
                return (function P(re) {
                    return re && (0, d.m)(re.schedule);
                })(H(re))
                    ? re.pop()
                    : void 0;
            }
            function ae(re, se) {
                return 'number' == typeof H(re) ? re.pop() : se;
            }
        },
        4742: (_e, z, y) => {
            'use strict';
            y.d(z, { D: () => $ });
            const { isArray: d } = Array,
                { getPrototypeOf: P, prototype: H, keys: w } = Object;
            function $(re) {
                if (1 === re.length) {
                    const se = re[0];
                    if (d(se)) return { args: se, keys: null };
                    if (
                        (function ae(re) {
                            return re && 'object' == typeof re && P(re) === H;
                        })(se)
                    ) {
                        const Y = w(se);
                        return { args: Y.map((j) => se[j]), keys: Y };
                    }
                }
                return { args: re, keys: null };
            }
        },
        8737: (_e, z, y) => {
            'use strict';
            function d(P, H) {
                if (P) {
                    const w = P.indexOf(H);
                    0 <= w && P.splice(w, 1);
                }
            }
            y.d(z, { P: () => d });
        },
        3888: (_e, z, y) => {
            'use strict';
            function d(P) {
                const w = P(($) => {
                    Error.call($), ($.stack = new Error().stack);
                });
                return (
                    (w.prototype = Object.create(Error.prototype)),
                    (w.prototype.constructor = w),
                    w
                );
            }
            y.d(z, { d: () => d });
        },
        1810: (_e, z, y) => {
            'use strict';
            function d(P, H) {
                return P.reduce((w, $, ae) => ((w[$] = H[ae]), w), {});
            }
            y.d(z, { n: () => d });
        },
        2806: (_e, z, y) => {
            'use strict';
            y.d(z, { x: () => H, O: () => w });
            var d = y(2416);
            let P = null;
            function H($) {
                if (d.v.useDeprecatedSynchronousErrorHandling) {
                    const ae = !P;
                    if (
                        (ae && (P = { errorThrown: !1, error: null }), $(), ae)
                    ) {
                        const { errorThrown: re, error: se } = P;
                        if (((P = null), re)) throw se;
                    }
                } else $();
            }
            function w($) {
                d.v.useDeprecatedSynchronousErrorHandling &&
                    P &&
                    ((P.errorThrown = !0), (P.error = $));
            }
        },
        9672: (_e, z, y) => {
            'use strict';
            function d(P, H, w, $ = 0, ae = !1) {
                const re = H.schedule(function () {
                    w(),
                        ae ? P.add(this.schedule(null, $)) : this.unsubscribe();
                }, $);
                if ((P.add(re), !ae)) return re;
            }
            y.d(z, { f: () => d });
        },
        4671: (_e, z, y) => {
            'use strict';
            function d(P) {
                return P;
            }
            y.d(z, { y: () => d });
        },
        1144: (_e, z, y) => {
            'use strict';
            y.d(z, { z: () => d });
            const d = (P) =>
                P && 'number' == typeof P.length && 'function' != typeof P;
        },
        2206: (_e, z, y) => {
            'use strict';
            y.d(z, { D: () => P });
            var d = y(576);
            function P(H) {
                return (
                    Symbol.asyncIterator &&
                    (0, d.m)(null == H ? void 0 : H[Symbol.asyncIterator])
                );
            }
        },
        576: (_e, z, y) => {
            'use strict';
            function d(P) {
                return 'function' == typeof P;
            }
            y.d(z, { m: () => d });
        },
        3670: (_e, z, y) => {
            'use strict';
            y.d(z, { c: () => H });
            var d = y(8822),
                P = y(576);
            function H(w) {
                return (0, P.m)(w[d.L]);
            }
        },
        6495: (_e, z, y) => {
            'use strict';
            y.d(z, { T: () => H });
            var d = y(2202),
                P = y(576);
            function H(w) {
                return (0, P.m)(null == w ? void 0 : w[d.h]);
            }
        },
        8239: (_e, z, y) => {
            'use strict';
            y.d(z, { t: () => P });
            var d = y(576);
            function P(H) {
                return (0, d.m)(null == H ? void 0 : H.then);
            }
        },
        3260: (_e, z, y) => {
            'use strict';
            y.d(z, { Q: () => H, L: () => w });
            var d = y(5987),
                P = y(576);
            function H($) {
                return (0, d.FC)(this, arguments, function* () {
                    const re = $.getReader();
                    try {
                        for (;;) {
                            const { value: se, done: Y } = yield (0, d.qq)(
                                re.read()
                            );
                            if (Y) return yield (0, d.qq)(void 0);
                            yield yield (0, d.qq)(se);
                        }
                    } finally {
                        re.releaseLock();
                    }
                });
            }
            function w($) {
                return (0, P.m)(null == $ ? void 0 : $.getReader);
            }
        },
        4482: (_e, z, y) => {
            'use strict';
            y.d(z, { A: () => P, e: () => H });
            var d = y(576);
            function P(w) {
                return (0, d.m)(null == w ? void 0 : w.lift);
            }
            function H(w) {
                return ($) => {
                    if (P($))
                        return $.lift(function (ae) {
                            try {
                                return w(ae, this);
                            } catch (re) {
                                this.error(re);
                            }
                        });
                    throw new TypeError(
                        'Unable to lift unknown Observable type'
                    );
                };
            }
        },
        3268: (_e, z, y) => {
            'use strict';
            y.d(z, { Z: () => w });
            var d = y(4004);
            const { isArray: P } = Array;
            function w($) {
                return (0, d.U)((ae) =>
                    (function H($, ae) {
                        return P(ae) ? $(...ae) : $(ae);
                    })($, ae)
                );
            }
        },
        5032: (_e, z, y) => {
            'use strict';
            function d() {}
            y.d(z, { Z: () => d });
        },
        7849: (_e, z, y) => {
            'use strict';
            y.d(z, { h: () => H });
            var d = y(2416),
                P = y(3410);
            function H(w) {
                P.z.setTimeout(() => {
                    const { onUnhandledError: $ } = d.v;
                    if (!$) throw w;
                    $(w);
                });
            }
        },
        4532: (_e, z, y) => {
            'use strict';
            function d(P) {
                return new TypeError(
                    `You provided ${
                        null !== P && 'object' == typeof P
                            ? 'an invalid object'
                            : `'${P}'`
                    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
                );
            }
            y.d(z, { z: () => d });
        },
        5987: (_e, z, y) => {
            'use strict';
            function se(te, Re, Oe, Ue) {
                return new (Oe || (Oe = Promise))(function (Ae, wt) {
                    function rn(_t) {
                        try {
                            Et(Ue.next(_t));
                        } catch (Vn) {
                            wt(Vn);
                        }
                    }
                    function Bn(_t) {
                        try {
                            Et(Ue.throw(_t));
                        } catch (Vn) {
                            wt(Vn);
                        }
                    }
                    function Et(_t) {
                        _t.done
                            ? Ae(_t.value)
                            : (function Xe(Ae) {
                                  return Ae instanceof Oe
                                      ? Ae
                                      : new Oe(function (wt) {
                                            wt(Ae);
                                        });
                              })(_t.value).then(rn, Bn);
                    }
                    Et((Ue = Ue.apply(te, Re || [])).next());
                });
            }
            function de(te) {
                return this instanceof de ? ((this.v = te), this) : new de(te);
            }
            function Q(te, Re, Oe) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var Xe,
                    Ue = Oe.apply(te, Re || []),
                    Ae = [];
                return (
                    (Xe = {}),
                    wt('next'),
                    wt('throw'),
                    wt('return'),
                    (Xe[Symbol.asyncIterator] = function () {
                        return this;
                    }),
                    Xe
                );
                function wt(Zt) {
                    Ue[Zt] &&
                        (Xe[Zt] = function (sn) {
                            return new Promise(function (Ft, $n) {
                                Ae.push([Zt, sn, Ft, $n]) > 1 || rn(Zt, sn);
                            });
                        });
                }
                function rn(Zt, sn) {
                    try {
                        !(function Bn(Zt) {
                            Zt.value instanceof de
                                ? Promise.resolve(Zt.value.v).then(Et, _t)
                                : Vn(Ae[0][2], Zt);
                        })(Ue[Zt](sn));
                    } catch (Ft) {
                        Vn(Ae[0][3], Ft);
                    }
                }
                function Et(Zt) {
                    rn('next', Zt);
                }
                function _t(Zt) {
                    rn('throw', Zt);
                }
                function Vn(Zt, sn) {
                    Zt(sn), Ae.shift(), Ae.length && rn(Ae[0][0], Ae[0][1]);
                }
            }
            function M(te) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var Oe,
                    Re = te[Symbol.asyncIterator];
                return Re
                    ? Re.call(te)
                    : ((te = (function ie(te) {
                          var Re =
                                  'function' == typeof Symbol &&
                                  Symbol.iterator,
                              Oe = Re && te[Re],
                              Ue = 0;
                          if (Oe) return Oe.call(te);
                          if (te && 'number' == typeof te.length)
                              return {
                                  next: function () {
                                      return (
                                          te &&
                                              Ue >= te.length &&
                                              (te = void 0),
                                          { value: te && te[Ue++], done: !te }
                                      );
                                  },
                              };
                          throw new TypeError(
                              Re
                                  ? 'Object is not iterable.'
                                  : 'Symbol.iterator is not defined.'
                          );
                      })(te)),
                      (Oe = {}),
                      Ue('next'),
                      Ue('throw'),
                      Ue('return'),
                      (Oe[Symbol.asyncIterator] = function () {
                          return this;
                      }),
                      Oe);
                function Ue(Ae) {
                    Oe[Ae] =
                        te[Ae] &&
                        function (wt) {
                            return new Promise(function (rn, Bn) {
                                !(function Xe(Ae, wt, rn, Bn) {
                                    Promise.resolve(Bn).then(function (Et) {
                                        Ae({ value: Et, done: rn });
                                    }, wt);
                                })(rn, Bn, (wt = te[Ae](wt)).done, wt.value);
                            });
                        };
                }
            }
            y.d(z, { mG: () => se, qq: () => de, FC: () => Q, KL: () => M });
        },
        9808: (_e, z, y) => {
            'use strict';
            y.d(z, {
                mr: () => ye,
                Ov: () => Ri,
                ez: () => Fi,
                K0: () => re,
                Do: () => R,
                V_: () => j,
                Ye: () => oe,
                S$: () => de,
                mk: () => _r,
                sg: () => Nn,
                O5: () => Be,
                PC: () => Mr,
                tP: () => ni,
                b0: () => M,
                lw: () => se,
                EM: () => it,
                JF: () => Nt,
                PM: () => ce,
                w_: () => ae,
                bD: () => Qi,
                q: () => H,
                Mx: () => Hr,
                HT: () => $,
            });
            var d = y(5e3);
            let P = null;
            function H() {
                return P;
            }
            function $(A) {
                P || (P = A);
            }
            class ae {}
            const re = new d.OlP('DocumentToken');
            let se = (() => {
                class A {
                    historyGo(b) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (A.ɵfac = function (b) {
                        return new (b || A)();
                    }),
                    (A.ɵprov = d.Yz7({
                        token: A,
                        factory: function () {
                            return (function Y() {
                                return (0, d.LFG)(U);
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    A
                );
            })();
            const j = new d.OlP('Location Initialized');
            let U = (() => {
                class A extends se {
                    constructor(b) {
                        super(), (this._doc = b), this._init();
                    }
                    _init() {
                        (this.location = window.location),
                            (this._history = window.history);
                    }
                    getBaseHrefFromDOM() {
                        return H().getBaseHref(this._doc);
                    }
                    onPopState(b) {
                        const V = H().getGlobalEventTarget(this._doc, 'window');
                        return (
                            V.addEventListener('popstate', b, !1),
                            () => V.removeEventListener('popstate', b)
                        );
                    }
                    onHashChange(b) {
                        const V = H().getGlobalEventTarget(this._doc, 'window');
                        return (
                            V.addEventListener('hashchange', b, !1),
                            () => V.removeEventListener('hashchange', b)
                        );
                    }
                    get href() {
                        return this.location.href;
                    }
                    get protocol() {
                        return this.location.protocol;
                    }
                    get hostname() {
                        return this.location.hostname;
                    }
                    get port() {
                        return this.location.port;
                    }
                    get pathname() {
                        return this.location.pathname;
                    }
                    get search() {
                        return this.location.search;
                    }
                    get hash() {
                        return this.location.hash;
                    }
                    set pathname(b) {
                        this.location.pathname = b;
                    }
                    pushState(b, V, ge) {
                        ie()
                            ? this._history.pushState(b, V, ge)
                            : (this.location.hash = ge);
                    }
                    replaceState(b, V, ge) {
                        ie()
                            ? this._history.replaceState(b, V, ge)
                            : (this.location.hash = ge);
                    }
                    forward() {
                        this._history.forward();
                    }
                    back() {
                        this._history.back();
                    }
                    historyGo(b = 0) {
                        this._history.go(b);
                    }
                    getState() {
                        return this._history.state;
                    }
                }
                return (
                    (A.ɵfac = function (b) {
                        return new (b || A)(d.LFG(re));
                    }),
                    (A.ɵprov = d.Yz7({
                        token: A,
                        factory: function () {
                            return (function Ce() {
                                return new U((0, d.LFG)(re));
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    A
                );
            })();
            function ie() {
                return !!window.history.pushState;
            }
            function be(A, N) {
                if (0 == A.length) return N;
                if (0 == N.length) return A;
                let b = 0;
                return (
                    A.endsWith('/') && b++,
                    N.startsWith('/') && b++,
                    2 == b ? A + N.substring(1) : 1 == b ? A + N : A + '/' + N
                );
            }
            function xe(A) {
                const N = A.match(/#|\?|$/),
                    b = (N && N.index) || A.length;
                return A.slice(0, b - ('/' === A[b - 1] ? 1 : 0)) + A.slice(b);
            }
            function We(A) {
                return A && '?' !== A[0] ? '?' + A : A;
            }
            let de = (() => {
                class A {
                    historyGo(b) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (A.ɵfac = function (b) {
                        return new (b || A)();
                    }),
                    (A.ɵprov = d.Yz7({
                        token: A,
                        factory: function () {
                            return (function Q(A) {
                                const N = (0, d.LFG)(re).location;
                                return new M(
                                    (0, d.LFG)(se),
                                    (N && N.origin) || ''
                                );
                            })();
                        },
                        providedIn: 'root',
                    })),
                    A
                );
            })();
            const ye = new d.OlP('appBaseHref');
            let M = (() => {
                    class A extends de {
                        constructor(b, V) {
                            if (
                                (super(),
                                (this._platformLocation = b),
                                (this._removeListenerFns = []),
                                null == V &&
                                    (V =
                                        this._platformLocation.getBaseHrefFromDOM()),
                                null == V)
                            )
                                throw new Error(
                                    'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                                );
                            this._baseHref = V;
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(b) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(b),
                                this._platformLocation.onHashChange(b)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        prepareExternalUrl(b) {
                            return be(this._baseHref, b);
                        }
                        path(b = !1) {
                            const V =
                                    this._platformLocation.pathname +
                                    We(this._platformLocation.search),
                                ge = this._platformLocation.hash;
                            return ge && b ? `${V}${ge}` : V;
                        }
                        pushState(b, V, ge, ke) {
                            const qe = this.prepareExternalUrl(ge + We(ke));
                            this._platformLocation.pushState(b, V, qe);
                        }
                        replaceState(b, V, ge, ke) {
                            const qe = this.prepareExternalUrl(ge + We(ke));
                            this._platformLocation.replaceState(b, V, qe);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(b = 0) {
                            var V, ge;
                            null ===
                                (ge = (V = this._platformLocation).historyGo) ||
                                void 0 === ge ||
                                ge.call(V, b);
                        }
                    }
                    return (
                        (A.ɵfac = function (b) {
                            return new (b || A)(d.LFG(se), d.LFG(ye, 8));
                        }),
                        (A.ɵprov = d.Yz7({ token: A, factory: A.ɵfac })),
                        A
                    );
                })(),
                R = (() => {
                    class A extends de {
                        constructor(b, V) {
                            super(),
                                (this._platformLocation = b),
                                (this._baseHref = ''),
                                (this._removeListenerFns = []),
                                null != V && (this._baseHref = V);
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(b) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(b),
                                this._platformLocation.onHashChange(b)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        path(b = !1) {
                            let V = this._platformLocation.hash;
                            return (
                                null == V && (V = '#'),
                                V.length > 0 ? V.substring(1) : V
                            );
                        }
                        prepareExternalUrl(b) {
                            const V = be(this._baseHref, b);
                            return V.length > 0 ? '#' + V : V;
                        }
                        pushState(b, V, ge, ke) {
                            let qe = this.prepareExternalUrl(ge + We(ke));
                            0 == qe.length &&
                                (qe = this._platformLocation.pathname),
                                this._platformLocation.pushState(b, V, qe);
                        }
                        replaceState(b, V, ge, ke) {
                            let qe = this.prepareExternalUrl(ge + We(ke));
                            0 == qe.length &&
                                (qe = this._platformLocation.pathname),
                                this._platformLocation.replaceState(b, V, qe);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(b = 0) {
                            var V, ge;
                            null ===
                                (ge = (V = this._platformLocation).historyGo) ||
                                void 0 === ge ||
                                ge.call(V, b);
                        }
                    }
                    return (
                        (A.ɵfac = function (b) {
                            return new (b || A)(d.LFG(se), d.LFG(ye, 8));
                        }),
                        (A.ɵprov = d.Yz7({ token: A, factory: A.ɵfac })),
                        A
                    );
                })(),
                oe = (() => {
                    class A {
                        constructor(b, V) {
                            (this._subject = new d.vpe()),
                                (this._urlChangeListeners = []),
                                (this._platformStrategy = b);
                            const ge = this._platformStrategy.getBaseHref();
                            (this._platformLocation = V),
                                (this._baseHref = xe(He(ge))),
                                this._platformStrategy.onPopState((ke) => {
                                    this._subject.emit({
                                        url: this.path(!0),
                                        pop: !0,
                                        state: ke.state,
                                        type: ke.type,
                                    });
                                });
                        }
                        path(b = !1) {
                            return this.normalize(
                                this._platformStrategy.path(b)
                            );
                        }
                        getState() {
                            return this._platformLocation.getState();
                        }
                        isCurrentPathEqualTo(b, V = '') {
                            return this.path() == this.normalize(b + We(V));
                        }
                        normalize(b) {
                            return A.stripTrailingSlash(
                                (function Ve(A, N) {
                                    return A && N.startsWith(A)
                                        ? N.substring(A.length)
                                        : N;
                                })(this._baseHref, He(b))
                            );
                        }
                        prepareExternalUrl(b) {
                            return (
                                b && '/' !== b[0] && (b = '/' + b),
                                this._platformStrategy.prepareExternalUrl(b)
                            );
                        }
                        go(b, V = '', ge = null) {
                            this._platformStrategy.pushState(ge, '', b, V),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(b + We(V)),
                                    ge
                                );
                        }
                        replaceState(b, V = '', ge = null) {
                            this._platformStrategy.replaceState(ge, '', b, V),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(b + We(V)),
                                    ge
                                );
                        }
                        forward() {
                            this._platformStrategy.forward();
                        }
                        back() {
                            this._platformStrategy.back();
                        }
                        historyGo(b = 0) {
                            var V, ge;
                            null ===
                                (ge = (V = this._platformStrategy).historyGo) ||
                                void 0 === ge ||
                                ge.call(V, b);
                        }
                        onUrlChange(b) {
                            this._urlChangeListeners.push(b),
                                this._urlChangeSubscription ||
                                    (this._urlChangeSubscription =
                                        this.subscribe((V) => {
                                            this._notifyUrlChangeListeners(
                                                V.url,
                                                V.state
                                            );
                                        }));
                        }
                        _notifyUrlChangeListeners(b = '', V) {
                            this._urlChangeListeners.forEach((ge) => ge(b, V));
                        }
                        subscribe(b, V, ge) {
                            return this._subject.subscribe({
                                next: b,
                                error: V,
                                complete: ge,
                            });
                        }
                    }
                    return (
                        (A.normalizeQueryParams = We),
                        (A.joinWithSlash = be),
                        (A.stripTrailingSlash = xe),
                        (A.ɵfac = function (b) {
                            return new (b || A)(d.LFG(de), d.LFG(se));
                        }),
                        (A.ɵprov = d.Yz7({
                            token: A,
                            factory: function () {
                                return (function J() {
                                    return new oe(
                                        (0, d.LFG)(de),
                                        (0, d.LFG)(se)
                                    );
                                })();
                            },
                            providedIn: 'root',
                        })),
                        A
                    );
                })();
            function He(A) {
                return A.replace(/\/index.html$/, '');
            }
            var Re = (() => (
                ((Re = Re || {})[(Re.Zero = 0)] = 'Zero'),
                (Re[(Re.One = 1)] = 'One'),
                (Re[(Re.Two = 2)] = 'Two'),
                (Re[(Re.Few = 3)] = 'Few'),
                (Re[(Re.Many = 4)] = 'Many'),
                (Re[(Re.Other = 5)] = 'Other'),
                Re
            ))();
            const fr = d.kL8;
            class Sn {}
            let Cn = (() => {
                class A extends Sn {
                    constructor(b) {
                        super(), (this.locale = b);
                    }
                    getPluralCategory(b, V) {
                        switch (fr(V || this.locale)(b)) {
                            case Re.Zero:
                                return 'zero';
                            case Re.One:
                                return 'one';
                            case Re.Two:
                                return 'two';
                            case Re.Few:
                                return 'few';
                            case Re.Many:
                                return 'many';
                            default:
                                return 'other';
                        }
                    }
                }
                return (
                    (A.ɵfac = function (b) {
                        return new (b || A)(d.LFG(d.soG));
                    }),
                    (A.ɵprov = d.Yz7({ token: A, factory: A.ɵfac })),
                    A
                );
            })();
            function Hr(A, N) {
                N = encodeURIComponent(N);
                for (const b of A.split(';')) {
                    const V = b.indexOf('='),
                        [ge, ke] =
                            -1 == V ? [b, ''] : [b.slice(0, V), b.slice(V + 1)];
                    if (ge.trim() === N) return decodeURIComponent(ke);
                }
                return null;
            }
            let _r = (() => {
                class A {
                    constructor(b, V, ge, ke) {
                        (this._iterableDiffers = b),
                            (this._keyValueDiffers = V),
                            (this._ngEl = ge),
                            (this._renderer = ke),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._initialClasses = []),
                            (this._rawClass = null);
                    }
                    set klass(b) {
                        this._removeClasses(this._initialClasses),
                            (this._initialClasses =
                                'string' == typeof b ? b.split(/\s+/) : []),
                            this._applyClasses(this._initialClasses),
                            this._applyClasses(this._rawClass);
                    }
                    set ngClass(b) {
                        this._removeClasses(this._rawClass),
                            this._applyClasses(this._initialClasses),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._rawClass =
                                'string' == typeof b ? b.split(/\s+/) : b),
                            this._rawClass &&
                                ((0, d.sIi)(this._rawClass)
                                    ? (this._iterableDiffer =
                                          this._iterableDiffers
                                              .find(this._rawClass)
                                              .create())
                                    : (this._keyValueDiffer =
                                          this._keyValueDiffers
                                              .find(this._rawClass)
                                              .create()));
                    }
                    ngDoCheck() {
                        if (this._iterableDiffer) {
                            const b = this._iterableDiffer.diff(this._rawClass);
                            b && this._applyIterableChanges(b);
                        } else if (this._keyValueDiffer) {
                            const b = this._keyValueDiffer.diff(this._rawClass);
                            b && this._applyKeyValueChanges(b);
                        }
                    }
                    _applyKeyValueChanges(b) {
                        b.forEachAddedItem((V) =>
                            this._toggleClass(V.key, V.currentValue)
                        ),
                            b.forEachChangedItem((V) =>
                                this._toggleClass(V.key, V.currentValue)
                            ),
                            b.forEachRemovedItem((V) => {
                                V.previousValue && this._toggleClass(V.key, !1);
                            });
                    }
                    _applyIterableChanges(b) {
                        b.forEachAddedItem((V) => {
                            if ('string' != typeof V.item)
                                throw new Error(
                                    `NgClass can only toggle CSS classes expressed as strings, got ${(0,
                                    d.AaK)(V.item)}`
                                );
                            this._toggleClass(V.item, !0);
                        }),
                            b.forEachRemovedItem((V) =>
                                this._toggleClass(V.item, !1)
                            );
                    }
                    _applyClasses(b) {
                        b &&
                            (Array.isArray(b) || b instanceof Set
                                ? b.forEach((V) => this._toggleClass(V, !0))
                                : Object.keys(b).forEach((V) =>
                                      this._toggleClass(V, !!b[V])
                                  ));
                    }
                    _removeClasses(b) {
                        b &&
                            (Array.isArray(b) || b instanceof Set
                                ? b.forEach((V) => this._toggleClass(V, !1))
                                : Object.keys(b).forEach((V) =>
                                      this._toggleClass(V, !1)
                                  ));
                    }
                    _toggleClass(b, V) {
                        (b = b.trim()) &&
                            b.split(/\s+/g).forEach((ge) => {
                                V
                                    ? this._renderer.addClass(
                                          this._ngEl.nativeElement,
                                          ge
                                      )
                                    : this._renderer.removeClass(
                                          this._ngEl.nativeElement,
                                          ge
                                      );
                            });
                    }
                }
                return (
                    (A.ɵfac = function (b) {
                        return new (b || A)(
                            d.Y36(d.ZZ4),
                            d.Y36(d.aQg),
                            d.Y36(d.SBq),
                            d.Y36(d.Qsj)
                        );
                    }),
                    (A.ɵdir = d.lG2({
                        type: A,
                        selectors: [['', 'ngClass', '']],
                        inputs: {
                            klass: ['class', 'klass'],
                            ngClass: 'ngClass',
                        },
                    })),
                    A
                );
            })();
            class hn {
                constructor(N, b, V, ge) {
                    (this.$implicit = N),
                        (this.ngForOf = b),
                        (this.index = V),
                        (this.count = ge);
                }
                get first() {
                    return 0 === this.index;
                }
                get last() {
                    return this.index === this.count - 1;
                }
                get even() {
                    return this.index % 2 == 0;
                }
                get odd() {
                    return !this.even;
                }
            }
            let Nn = (() => {
                class A {
                    constructor(b, V, ge) {
                        (this._viewContainer = b),
                            (this._template = V),
                            (this._differs = ge),
                            (this._ngForOf = null),
                            (this._ngForOfDirty = !0),
                            (this._differ = null);
                    }
                    set ngForOf(b) {
                        (this._ngForOf = b), (this._ngForOfDirty = !0);
                    }
                    set ngForTrackBy(b) {
                        this._trackByFn = b;
                    }
                    get ngForTrackBy() {
                        return this._trackByFn;
                    }
                    set ngForTemplate(b) {
                        b && (this._template = b);
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const b = this._ngForOf;
                            !this._differ &&
                                b &&
                                (this._differ = this._differs
                                    .find(b)
                                    .create(this.ngForTrackBy));
                        }
                        if (this._differ) {
                            const b = this._differ.diff(this._ngForOf);
                            b && this._applyChanges(b);
                        }
                    }
                    _applyChanges(b) {
                        const V = this._viewContainer;
                        b.forEachOperation((ge, ke, qe) => {
                            if (null == ge.previousIndex)
                                V.createEmbeddedView(
                                    this._template,
                                    new hn(ge.item, this._ngForOf, -1, -1),
                                    null === qe ? void 0 : qe
                                );
                            else if (null == qe)
                                V.remove(null === ke ? void 0 : ke);
                            else if (null !== ke) {
                                const mt = V.get(ke);
                                V.move(mt, qe), Nr(mt, ge);
                            }
                        });
                        for (let ge = 0, ke = V.length; ge < ke; ge++) {
                            const mt = V.get(ge).context;
                            (mt.index = ge),
                                (mt.count = ke),
                                (mt.ngForOf = this._ngForOf);
                        }
                        b.forEachIdentityChange((ge) => {
                            Nr(V.get(ge.currentIndex), ge);
                        });
                    }
                    static ngTemplateContextGuard(b, V) {
                        return !0;
                    }
                }
                return (
                    (A.ɵfac = function (b) {
                        return new (b || A)(
                            d.Y36(d.s_b),
                            d.Y36(d.Rgc),
                            d.Y36(d.ZZ4)
                        );
                    }),
                    (A.ɵdir = d.lG2({
                        type: A,
                        selectors: [['', 'ngFor', '', 'ngForOf', '']],
                        inputs: {
                            ngForOf: 'ngForOf',
                            ngForTrackBy: 'ngForTrackBy',
                            ngForTemplate: 'ngForTemplate',
                        },
                    })),
                    A
                );
            })();
            function Nr(A, N) {
                A.context.$implicit = N.item;
            }
            let Be = (() => {
                class A {
                    constructor(b, V) {
                        (this._viewContainer = b),
                            (this._context = new Ee()),
                            (this._thenTemplateRef = null),
                            (this._elseTemplateRef = null),
                            (this._thenViewRef = null),
                            (this._elseViewRef = null),
                            (this._thenTemplateRef = V);
                    }
                    set ngIf(b) {
                        (this._context.$implicit = this._context.ngIf = b),
                            this._updateView();
                    }
                    set ngIfThen(b) {
                        Fe('ngIfThen', b),
                            (this._thenTemplateRef = b),
                            (this._thenViewRef = null),
                            this._updateView();
                    }
                    set ngIfElse(b) {
                        Fe('ngIfElse', b),
                            (this._elseTemplateRef = b),
                            (this._elseViewRef = null),
                            this._updateView();
                    }
                    _updateView() {
                        this._context.$implicit
                            ? this._thenViewRef ||
                              (this._viewContainer.clear(),
                              (this._elseViewRef = null),
                              this._thenTemplateRef &&
                                  (this._thenViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._thenTemplateRef,
                                          this._context
                                      )))
                            : this._elseViewRef ||
                              (this._viewContainer.clear(),
                              (this._thenViewRef = null),
                              this._elseTemplateRef &&
                                  (this._elseViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._elseTemplateRef,
                                          this._context
                                      )));
                    }
                    static ngTemplateContextGuard(b, V) {
                        return !0;
                    }
                }
                return (
                    (A.ɵfac = function (b) {
                        return new (b || A)(d.Y36(d.s_b), d.Y36(d.Rgc));
                    }),
                    (A.ɵdir = d.lG2({
                        type: A,
                        selectors: [['', 'ngIf', '']],
                        inputs: {
                            ngIf: 'ngIf',
                            ngIfThen: 'ngIfThen',
                            ngIfElse: 'ngIfElse',
                        },
                    })),
                    A
                );
            })();
            class Ee {
                constructor() {
                    (this.$implicit = null), (this.ngIf = null);
                }
            }
            function Fe(A, N) {
                if (N && !N.createEmbeddedView)
                    throw new Error(
                        `${A} must be a TemplateRef, but received '${(0, d.AaK)(
                            N
                        )}'.`
                    );
            }
            let Mr = (() => {
                    class A {
                        constructor(b, V, ge) {
                            (this._ngEl = b),
                                (this._differs = V),
                                (this._renderer = ge),
                                (this._ngStyle = null),
                                (this._differ = null);
                        }
                        set ngStyle(b) {
                            (this._ngStyle = b),
                                !this._differ &&
                                    b &&
                                    (this._differ = this._differs
                                        .find(b)
                                        .create());
                        }
                        ngDoCheck() {
                            if (this._differ) {
                                const b = this._differ.diff(this._ngStyle);
                                b && this._applyChanges(b);
                            }
                        }
                        _setStyle(b, V) {
                            const [ge, ke] = b.split('.');
                            null != (V = null != V && ke ? `${V}${ke}` : V)
                                ? this._renderer.setStyle(
                                      this._ngEl.nativeElement,
                                      ge,
                                      V
                                  )
                                : this._renderer.removeStyle(
                                      this._ngEl.nativeElement,
                                      ge
                                  );
                        }
                        _applyChanges(b) {
                            b.forEachRemovedItem((V) =>
                                this._setStyle(V.key, null)
                            ),
                                b.forEachAddedItem((V) =>
                                    this._setStyle(V.key, V.currentValue)
                                ),
                                b.forEachChangedItem((V) =>
                                    this._setStyle(V.key, V.currentValue)
                                );
                        }
                    }
                    return (
                        (A.ɵfac = function (b) {
                            return new (b || A)(
                                d.Y36(d.SBq),
                                d.Y36(d.aQg),
                                d.Y36(d.Qsj)
                            );
                        }),
                        (A.ɵdir = d.lG2({
                            type: A,
                            selectors: [['', 'ngStyle', '']],
                            inputs: { ngStyle: 'ngStyle' },
                        })),
                        A
                    );
                })(),
                ni = (() => {
                    class A {
                        constructor(b) {
                            (this._viewContainerRef = b),
                                (this._viewRef = null),
                                (this.ngTemplateOutletContext = null),
                                (this.ngTemplateOutlet = null);
                        }
                        ngOnChanges(b) {
                            if (b.ngTemplateOutlet) {
                                const V = this._viewContainerRef;
                                this._viewRef &&
                                    V.remove(V.indexOf(this._viewRef)),
                                    (this._viewRef = this.ngTemplateOutlet
                                        ? V.createEmbeddedView(
                                              this.ngTemplateOutlet,
                                              this.ngTemplateOutletContext
                                          )
                                        : null);
                            } else
                                this._viewRef &&
                                    b.ngTemplateOutletContext &&
                                    this.ngTemplateOutletContext &&
                                    (this._viewRef.context =
                                        this.ngTemplateOutletContext);
                        }
                    }
                    return (
                        (A.ɵfac = function (b) {
                            return new (b || A)(d.Y36(d.s_b));
                        }),
                        (A.ɵdir = d.lG2({
                            type: A,
                            selectors: [['', 'ngTemplateOutlet', '']],
                            inputs: {
                                ngTemplateOutletContext:
                                    'ngTemplateOutletContext',
                                ngTemplateOutlet: 'ngTemplateOutlet',
                            },
                            features: [d.TTD],
                        })),
                        A
                    );
                })();
            class Pi {
                createSubscription(N, b) {
                    return N.subscribe({
                        next: b,
                        error: (V) => {
                            throw V;
                        },
                    });
                }
                dispose(N) {
                    N.unsubscribe();
                }
                onDestroy(N) {
                    N.unsubscribe();
                }
            }
            class gi {
                createSubscription(N, b) {
                    return N.then(b, (V) => {
                        throw V;
                    });
                }
                dispose(N) {}
                onDestroy(N) {}
            }
            const Zr = new gi(),
                qr = new Pi();
            let Ri = (() => {
                    class A {
                        constructor(b) {
                            (this._ref = b),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null),
                                (this._strategy = null);
                        }
                        ngOnDestroy() {
                            this._subscription && this._dispose();
                        }
                        transform(b) {
                            return this._obj
                                ? b !== this._obj
                                    ? (this._dispose(), this.transform(b))
                                    : this._latestValue
                                : (b && this._subscribe(b), this._latestValue);
                        }
                        _subscribe(b) {
                            (this._obj = b),
                                (this._strategy = this._selectStrategy(b)),
                                (this._subscription =
                                    this._strategy.createSubscription(b, (V) =>
                                        this._updateLatestValue(b, V)
                                    ));
                        }
                        _selectStrategy(b) {
                            if ((0, d.QGY)(b)) return Zr;
                            if ((0, d.F4k)(b)) return qr;
                            throw (function Or(A, N) {
                                return new d.vHH(2100, '');
                            })();
                        }
                        _dispose() {
                            this._strategy.dispose(this._subscription),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null);
                        }
                        _updateLatestValue(b, V) {
                            b === this._obj &&
                                ((this._latestValue = V),
                                this._ref.markForCheck());
                        }
                    }
                    return (
                        (A.ɵfac = function (b) {
                            return new (b || A)(d.Y36(d.sBO, 16));
                        }),
                        (A.ɵpipe = d.Yjl({ name: 'async', type: A, pure: !1 })),
                        A
                    );
                })(),
                Fi = (() => {
                    class A {}
                    return (
                        (A.ɵfac = function (b) {
                            return new (b || A)();
                        }),
                        (A.ɵmod = d.oAB({ type: A })),
                        (A.ɵinj = d.cJS({
                            providers: [{ provide: Sn, useClass: Cn }],
                        })),
                        A
                    );
                })();
            const Qi = 'browser';
            function ce(A) {
                return 'server' === A;
            }
            let it = (() => {
                class A {}
                return (
                    (A.ɵprov = (0, d.Yz7)({
                        token: A,
                        providedIn: 'root',
                        factory: () => new ht((0, d.LFG)(re), window),
                    })),
                    A
                );
            })();
            class ht {
                constructor(N, b) {
                    (this.document = N),
                        (this.window = b),
                        (this.offset = () => [0, 0]);
                }
                setOffset(N) {
                    this.offset = Array.isArray(N) ? () => N : N;
                }
                getScrollPosition() {
                    return this.supportsScrolling()
                        ? [this.window.pageXOffset, this.window.pageYOffset]
                        : [0, 0];
                }
                scrollToPosition(N) {
                    this.supportsScrolling() &&
                        this.window.scrollTo(N[0], N[1]);
                }
                scrollToAnchor(N) {
                    if (!this.supportsScrolling()) return;
                    const b = (function _n(A, N) {
                        const b =
                            A.getElementById(N) || A.getElementsByName(N)[0];
                        if (b) return b;
                        if (
                            'function' == typeof A.createTreeWalker &&
                            A.body &&
                            (A.body.createShadowRoot || A.body.attachShadow)
                        ) {
                            const V = A.createTreeWalker(
                                A.body,
                                NodeFilter.SHOW_ELEMENT
                            );
                            let ge = V.currentNode;
                            for (; ge; ) {
                                const ke = ge.shadowRoot;
                                if (ke) {
                                    const qe =
                                        ke.getElementById(N) ||
                                        ke.querySelector(`[name="${N}"]`);
                                    if (qe) return qe;
                                }
                                ge = V.nextNode();
                            }
                        }
                        return null;
                    })(this.document, N);
                    b && (this.scrollToElement(b), b.focus());
                }
                setHistoryScrollRestoration(N) {
                    if (this.supportScrollRestoration()) {
                        const b = this.window.history;
                        b && b.scrollRestoration && (b.scrollRestoration = N);
                    }
                }
                scrollToElement(N) {
                    const b = N.getBoundingClientRect(),
                        V = b.left + this.window.pageXOffset,
                        ge = b.top + this.window.pageYOffset,
                        ke = this.offset();
                    this.window.scrollTo(V - ke[0], ge - ke[1]);
                }
                supportScrollRestoration() {
                    try {
                        if (!this.supportsScrolling()) return !1;
                        const N =
                            zt(this.window.history) ||
                            zt(Object.getPrototypeOf(this.window.history));
                        return !(!N || (!N.writable && !N.set));
                    } catch (N) {
                        return !1;
                    }
                }
                supportsScrolling() {
                    try {
                        return (
                            !!this.window &&
                            !!this.window.scrollTo &&
                            'pageXOffset' in this.window
                        );
                    } catch (N) {
                        return !1;
                    }
                }
            }
            function zt(A) {
                return Object.getOwnPropertyDescriptor(A, 'scrollRestoration');
            }
            class Nt {}
        },
        520: (_e, z, y) => {
            'use strict';
            y.d(z, { TP: () => rn, eN: () => Ae, JF: () => Fn });
            var d = y(9808),
                P = y(5e3),
                H = y(9646),
                w = y(8306),
                $ = y(4351),
                ae = y(9300),
                re = y(4004);
            class se {}
            class Y {}
            class j {
                constructor(W) {
                    (this.normalizedNames = new Map()),
                        (this.lazyUpdate = null),
                        W
                            ? (this.lazyInit =
                                  'string' == typeof W
                                      ? () => {
                                            (this.headers = new Map()),
                                                W.split('\n').forEach((ne) => {
                                                    const De = ne.indexOf(':');
                                                    if (De > 0) {
                                                        const Ke = ne.slice(
                                                                0,
                                                                De
                                                            ),
                                                            at =
                                                                Ke.toLowerCase(),
                                                            st = ne
                                                                .slice(De + 1)
                                                                .trim();
                                                        this.maybeSetNormalizedName(
                                                            Ke,
                                                            at
                                                        ),
                                                            this.headers.has(at)
                                                                ? this.headers
                                                                      .get(at)
                                                                      .push(st)
                                                                : this.headers.set(
                                                                      at,
                                                                      [st]
                                                                  );
                                                    }
                                                });
                                        }
                                      : () => {
                                            (this.headers = new Map()),
                                                Object.keys(W).forEach((ne) => {
                                                    let De = W[ne];
                                                    const Ke = ne.toLowerCase();
                                                    'string' == typeof De &&
                                                        (De = [De]),
                                                        De.length > 0 &&
                                                            (this.headers.set(
                                                                Ke,
                                                                De
                                                            ),
                                                            this.maybeSetNormalizedName(
                                                                ne,
                                                                Ke
                                                            ));
                                                });
                                        })
                            : (this.headers = new Map());
                }
                has(W) {
                    return this.init(), this.headers.has(W.toLowerCase());
                }
                get(W) {
                    this.init();
                    const ne = this.headers.get(W.toLowerCase());
                    return ne && ne.length > 0 ? ne[0] : null;
                }
                keys() {
                    return (
                        this.init(), Array.from(this.normalizedNames.values())
                    );
                }
                getAll(W) {
                    return (
                        this.init(), this.headers.get(W.toLowerCase()) || null
                    );
                }
                append(W, ne) {
                    return this.clone({ name: W, value: ne, op: 'a' });
                }
                set(W, ne) {
                    return this.clone({ name: W, value: ne, op: 's' });
                }
                delete(W, ne) {
                    return this.clone({ name: W, value: ne, op: 'd' });
                }
                maybeSetNormalizedName(W, ne) {
                    this.normalizedNames.has(ne) ||
                        this.normalizedNames.set(ne, W);
                }
                init() {
                    this.lazyInit &&
                        (this.lazyInit instanceof j
                            ? this.copyFrom(this.lazyInit)
                            : this.lazyInit(),
                        (this.lazyInit = null),
                        this.lazyUpdate &&
                            (this.lazyUpdate.forEach((W) =>
                                this.applyUpdate(W)
                            ),
                            (this.lazyUpdate = null)));
                }
                copyFrom(W) {
                    W.init(),
                        Array.from(W.headers.keys()).forEach((ne) => {
                            this.headers.set(ne, W.headers.get(ne)),
                                this.normalizedNames.set(
                                    ne,
                                    W.normalizedNames.get(ne)
                                );
                        });
                }
                clone(W) {
                    const ne = new j();
                    return (
                        (ne.lazyInit =
                            this.lazyInit && this.lazyInit instanceof j
                                ? this.lazyInit
                                : this),
                        (ne.lazyUpdate = (this.lazyUpdate || []).concat([W])),
                        ne
                    );
                }
                applyUpdate(W) {
                    const ne = W.name.toLowerCase();
                    switch (W.op) {
                        case 'a':
                        case 's':
                            let De = W.value;
                            if (
                                ('string' == typeof De && (De = [De]),
                                0 === De.length)
                            )
                                return;
                            this.maybeSetNormalizedName(W.name, ne);
                            const Ke =
                                ('a' === W.op
                                    ? this.headers.get(ne)
                                    : void 0) || [];
                            Ke.push(...De), this.headers.set(ne, Ke);
                            break;
                        case 'd':
                            const at = W.value;
                            if (at) {
                                let st = this.headers.get(ne);
                                if (!st) return;
                                (st = st.filter((ut) => -1 === at.indexOf(ut))),
                                    0 === st.length
                                        ? (this.headers.delete(ne),
                                          this.normalizedNames.delete(ne))
                                        : this.headers.set(ne, st);
                            } else
                                this.headers.delete(ne),
                                    this.normalizedNames.delete(ne);
                    }
                }
                forEach(W) {
                    this.init(),
                        Array.from(this.normalizedNames.keys()).forEach((ne) =>
                            W(
                                this.normalizedNames.get(ne),
                                this.headers.get(ne)
                            )
                        );
                }
            }
            class U {
                encodeKey(W) {
                    return xe(W);
                }
                encodeValue(W) {
                    return xe(W);
                }
                decodeKey(W) {
                    return decodeURIComponent(W);
                }
                decodeValue(W) {
                    return decodeURIComponent(W);
                }
            }
            const Ce = /%(\d[a-f0-9])/gi,
                be = {
                    40: '@',
                    '3A': ':',
                    24: '$',
                    '2C': ',',
                    '3B': ';',
                    '2B': '+',
                    '3D': '=',
                    '3F': '?',
                    '2F': '/',
                };
            function xe(Ie) {
                return encodeURIComponent(Ie).replace(Ce, (W, ne) => {
                    var De;
                    return null !== (De = be[ne]) && void 0 !== De ? De : W;
                });
            }
            function We(Ie) {
                return `${Ie}`;
            }
            class de {
                constructor(W = {}) {
                    if (
                        ((this.updates = null),
                        (this.cloneFrom = null),
                        (this.encoder = W.encoder || new U()),
                        W.fromString)
                    ) {
                        if (W.fromObject)
                            throw new Error(
                                'Cannot specify both fromString and fromObject.'
                            );
                        this.map = (function ie(Ie, W) {
                            const ne = new Map();
                            return (
                                Ie.length > 0 &&
                                    Ie.replace(/^\?/, '')
                                        .split('&')
                                        .forEach((Ke) => {
                                            const at = Ke.indexOf('='),
                                                [st, ut] =
                                                    -1 == at
                                                        ? [W.decodeKey(Ke), '']
                                                        : [
                                                              W.decodeKey(
                                                                  Ke.slice(
                                                                      0,
                                                                      at
                                                                  )
                                                              ),
                                                              W.decodeValue(
                                                                  Ke.slice(
                                                                      at + 1
                                                                  )
                                                              ),
                                                          ],
                                                Ut = ne.get(st) || [];
                                            Ut.push(ut), ne.set(st, Ut);
                                        }),
                                ne
                            );
                        })(W.fromString, this.encoder);
                    } else
                        W.fromObject
                            ? ((this.map = new Map()),
                              Object.keys(W.fromObject).forEach((ne) => {
                                  const De = W.fromObject[ne];
                                  this.map.set(
                                      ne,
                                      Array.isArray(De) ? De : [De]
                                  );
                              }))
                            : (this.map = null);
                }
                has(W) {
                    return this.init(), this.map.has(W);
                }
                get(W) {
                    this.init();
                    const ne = this.map.get(W);
                    return ne ? ne[0] : null;
                }
                getAll(W) {
                    return this.init(), this.map.get(W) || null;
                }
                keys() {
                    return this.init(), Array.from(this.map.keys());
                }
                append(W, ne) {
                    return this.clone({ param: W, value: ne, op: 'a' });
                }
                appendAll(W) {
                    const ne = [];
                    return (
                        Object.keys(W).forEach((De) => {
                            const Ke = W[De];
                            Array.isArray(Ke)
                                ? Ke.forEach((at) => {
                                      ne.push({
                                          param: De,
                                          value: at,
                                          op: 'a',
                                      });
                                  })
                                : ne.push({ param: De, value: Ke, op: 'a' });
                        }),
                        this.clone(ne)
                    );
                }
                set(W, ne) {
                    return this.clone({ param: W, value: ne, op: 's' });
                }
                delete(W, ne) {
                    return this.clone({ param: W, value: ne, op: 'd' });
                }
                toString() {
                    return (
                        this.init(),
                        this.keys()
                            .map((W) => {
                                const ne = this.encoder.encodeKey(W);
                                return this.map
                                    .get(W)
                                    .map(
                                        (De) =>
                                            ne +
                                            '=' +
                                            this.encoder.encodeValue(De)
                                    )
                                    .join('&');
                            })
                            .filter((W) => '' !== W)
                            .join('&')
                    );
                }
                clone(W) {
                    const ne = new de({ encoder: this.encoder });
                    return (
                        (ne.cloneFrom = this.cloneFrom || this),
                        (ne.updates = (this.updates || []).concat(W)),
                        ne
                    );
                }
                init() {
                    null === this.map && (this.map = new Map()),
                        null !== this.cloneFrom &&
                            (this.cloneFrom.init(),
                            this.cloneFrom
                                .keys()
                                .forEach((W) =>
                                    this.map.set(W, this.cloneFrom.map.get(W))
                                ),
                            this.updates.forEach((W) => {
                                switch (W.op) {
                                    case 'a':
                                    case 's':
                                        const ne =
                                            ('a' === W.op
                                                ? this.map.get(W.param)
                                                : void 0) || [];
                                        ne.push(We(W.value)),
                                            this.map.set(W.param, ne);
                                        break;
                                    case 'd':
                                        if (void 0 === W.value) {
                                            this.map.delete(W.param);
                                            break;
                                        }
                                        {
                                            let De =
                                                this.map.get(W.param) || [];
                                            const Ke = De.indexOf(We(W.value));
                                            -1 !== Ke && De.splice(Ke, 1),
                                                De.length > 0
                                                    ? this.map.set(W.param, De)
                                                    : this.map.delete(W.param);
                                        }
                                }
                            }),
                            (this.cloneFrom = this.updates = null));
                }
            }
            class ye {
                constructor() {
                    this.map = new Map();
                }
                set(W, ne) {
                    return this.map.set(W, ne), this;
                }
                get(W) {
                    return (
                        this.map.has(W) || this.map.set(W, W.defaultValue()),
                        this.map.get(W)
                    );
                }
                delete(W) {
                    return this.map.delete(W), this;
                }
                has(W) {
                    return this.map.has(W);
                }
                keys() {
                    return this.map.keys();
                }
            }
            function R(Ie) {
                return (
                    'undefined' != typeof ArrayBuffer &&
                    Ie instanceof ArrayBuffer
                );
            }
            function oe(Ie) {
                return 'undefined' != typeof Blob && Ie instanceof Blob;
            }
            function J(Ie) {
                return 'undefined' != typeof FormData && Ie instanceof FormData;
            }
            class He {
                constructor(W, ne, De, Ke) {
                    let at;
                    if (
                        ((this.url = ne),
                        (this.body = null),
                        (this.reportProgress = !1),
                        (this.withCredentials = !1),
                        (this.responseType = 'json'),
                        (this.method = W.toUpperCase()),
                        (function M(Ie) {
                            switch (Ie) {
                                case 'DELETE':
                                case 'GET':
                                case 'HEAD':
                                case 'OPTIONS':
                                case 'JSONP':
                                    return !1;
                                default:
                                    return !0;
                            }
                        })(this.method) || Ke
                            ? ((this.body = void 0 !== De ? De : null),
                              (at = Ke))
                            : (at = De),
                        at &&
                            ((this.reportProgress = !!at.reportProgress),
                            (this.withCredentials = !!at.withCredentials),
                            at.responseType &&
                                (this.responseType = at.responseType),
                            at.headers && (this.headers = at.headers),
                            at.context && (this.context = at.context),
                            at.params && (this.params = at.params)),
                        this.headers || (this.headers = new j()),
                        this.context || (this.context = new ye()),
                        this.params)
                    ) {
                        const st = this.params.toString();
                        if (0 === st.length) this.urlWithParams = ne;
                        else {
                            const ut = ne.indexOf('?');
                            this.urlWithParams =
                                ne +
                                (-1 === ut
                                    ? '?'
                                    : ut < ne.length - 1
                                    ? '&'
                                    : '') +
                                st;
                        }
                    } else (this.params = new de()), (this.urlWithParams = ne);
                }
                serializeBody() {
                    return null === this.body
                        ? null
                        : R(this.body) ||
                          oe(this.body) ||
                          J(this.body) ||
                          (function Ve(Ie) {
                              return (
                                  'undefined' != typeof URLSearchParams &&
                                  Ie instanceof URLSearchParams
                              );
                          })(this.body) ||
                          'string' == typeof this.body
                        ? this.body
                        : this.body instanceof de
                        ? this.body.toString()
                        : 'object' == typeof this.body ||
                          'boolean' == typeof this.body ||
                          Array.isArray(this.body)
                        ? JSON.stringify(this.body)
                        : this.body.toString();
                }
                detectContentTypeHeader() {
                    return null === this.body || J(this.body)
                        ? null
                        : oe(this.body)
                        ? this.body.type || null
                        : R(this.body)
                        ? null
                        : 'string' == typeof this.body
                        ? 'text/plain'
                        : this.body instanceof de
                        ? 'application/x-www-form-urlencoded;charset=UTF-8'
                        : 'object' == typeof this.body ||
                          'number' == typeof this.body ||
                          'boolean' == typeof this.body
                        ? 'application/json'
                        : null;
                }
                clone(W = {}) {
                    var ne;
                    const De = W.method || this.method,
                        Ke = W.url || this.url,
                        at = W.responseType || this.responseType,
                        st = void 0 !== W.body ? W.body : this.body,
                        ut =
                            void 0 !== W.withCredentials
                                ? W.withCredentials
                                : this.withCredentials,
                        Ut =
                            void 0 !== W.reportProgress
                                ? W.reportProgress
                                : this.reportProgress;
                    let mn = W.headers || this.headers,
                        Lt = W.params || this.params;
                    const Gn =
                        null !== (ne = W.context) && void 0 !== ne
                            ? ne
                            : this.context;
                    return (
                        void 0 !== W.setHeaders &&
                            (mn = Object.keys(W.setHeaders).reduce(
                                (wn, $t) => wn.set($t, W.setHeaders[$t]),
                                mn
                            )),
                        W.setParams &&
                            (Lt = Object.keys(W.setParams).reduce(
                                (wn, $t) => wn.set($t, W.setParams[$t]),
                                Lt
                            )),
                        new He(De, Ke, st, {
                            params: Lt,
                            headers: mn,
                            context: Gn,
                            reportProgress: Ut,
                            responseType: at,
                            withCredentials: ut,
                        })
                    );
                }
            }
            var Je = (() => (
                ((Je = Je || {})[(Je.Sent = 0)] = 'Sent'),
                (Je[(Je.UploadProgress = 1)] = 'UploadProgress'),
                (Je[(Je.ResponseHeader = 2)] = 'ResponseHeader'),
                (Je[(Je.DownloadProgress = 3)] = 'DownloadProgress'),
                (Je[(Je.Response = 4)] = 'Response'),
                (Je[(Je.User = 5)] = 'User'),
                Je
            ))();
            class te {
                constructor(W, ne = 200, De = 'OK') {
                    (this.headers = W.headers || new j()),
                        (this.status = void 0 !== W.status ? W.status : ne),
                        (this.statusText = W.statusText || De),
                        (this.url = W.url || null),
                        (this.ok = this.status >= 200 && this.status < 300);
                }
            }
            class Re extends te {
                constructor(W = {}) {
                    super(W), (this.type = Je.ResponseHeader);
                }
                clone(W = {}) {
                    return new Re({
                        headers: W.headers || this.headers,
                        status: void 0 !== W.status ? W.status : this.status,
                        statusText: W.statusText || this.statusText,
                        url: W.url || this.url || void 0,
                    });
                }
            }
            class Oe extends te {
                constructor(W = {}) {
                    super(W),
                        (this.type = Je.Response),
                        (this.body = void 0 !== W.body ? W.body : null);
                }
                clone(W = {}) {
                    return new Oe({
                        body: void 0 !== W.body ? W.body : this.body,
                        headers: W.headers || this.headers,
                        status: void 0 !== W.status ? W.status : this.status,
                        statusText: W.statusText || this.statusText,
                        url: W.url || this.url || void 0,
                    });
                }
            }
            class Ue extends te {
                constructor(W) {
                    super(W, 0, 'Unknown Error'),
                        (this.name = 'HttpErrorResponse'),
                        (this.ok = !1),
                        (this.message =
                            this.status >= 200 && this.status < 300
                                ? `Http failure during parsing for ${
                                      W.url || '(unknown url)'
                                  }`
                                : `Http failure response for ${
                                      W.url || '(unknown url)'
                                  }: ${W.status} ${W.statusText}`),
                        (this.error = W.error || null);
                }
            }
            function Xe(Ie, W) {
                return {
                    body: W,
                    headers: Ie.headers,
                    context: Ie.context,
                    observe: Ie.observe,
                    params: Ie.params,
                    reportProgress: Ie.reportProgress,
                    responseType: Ie.responseType,
                    withCredentials: Ie.withCredentials,
                };
            }
            let Ae = (() => {
                class Ie {
                    constructor(ne) {
                        this.handler = ne;
                    }
                    request(ne, De, Ke = {}) {
                        let at;
                        if (ne instanceof He) at = ne;
                        else {
                            let Ut, mn;
                            (Ut =
                                Ke.headers instanceof j
                                    ? Ke.headers
                                    : new j(Ke.headers)),
                                Ke.params &&
                                    (mn =
                                        Ke.params instanceof de
                                            ? Ke.params
                                            : new de({
                                                  fromObject: Ke.params,
                                              })),
                                (at = new He(
                                    ne,
                                    De,
                                    void 0 !== Ke.body ? Ke.body : null,
                                    {
                                        headers: Ut,
                                        context: Ke.context,
                                        params: mn,
                                        reportProgress: Ke.reportProgress,
                                        responseType: Ke.responseType || 'json',
                                        withCredentials: Ke.withCredentials,
                                    }
                                ));
                        }
                        const st = (0, H.of)(at).pipe(
                            (0, $.b)((Ut) => this.handler.handle(Ut))
                        );
                        if (ne instanceof He || 'events' === Ke.observe)
                            return st;
                        const ut = st.pipe((0, ae.h)((Ut) => Ut instanceof Oe));
                        switch (Ke.observe || 'body') {
                            case 'body':
                                switch (at.responseType) {
                                    case 'arraybuffer':
                                        return ut.pipe(
                                            (0, re.U)((Ut) => {
                                                if (
                                                    null !== Ut.body &&
                                                    !(
                                                        Ut.body instanceof
                                                        ArrayBuffer
                                                    )
                                                )
                                                    throw new Error(
                                                        'Response is not an ArrayBuffer.'
                                                    );
                                                return Ut.body;
                                            })
                                        );
                                    case 'blob':
                                        return ut.pipe(
                                            (0, re.U)((Ut) => {
                                                if (
                                                    null !== Ut.body &&
                                                    !(Ut.body instanceof Blob)
                                                )
                                                    throw new Error(
                                                        'Response is not a Blob.'
                                                    );
                                                return Ut.body;
                                            })
                                        );
                                    case 'text':
                                        return ut.pipe(
                                            (0, re.U)((Ut) => {
                                                if (
                                                    null !== Ut.body &&
                                                    'string' != typeof Ut.body
                                                )
                                                    throw new Error(
                                                        'Response is not a string.'
                                                    );
                                                return Ut.body;
                                            })
                                        );
                                    default:
                                        return ut.pipe(
                                            (0, re.U)((Ut) => Ut.body)
                                        );
                                }
                            case 'response':
                                return ut;
                            default:
                                throw new Error(
                                    `Unreachable: unhandled observe type ${Ke.observe}}`
                                );
                        }
                    }
                    delete(ne, De = {}) {
                        return this.request('DELETE', ne, De);
                    }
                    get(ne, De = {}) {
                        return this.request('GET', ne, De);
                    }
                    head(ne, De = {}) {
                        return this.request('HEAD', ne, De);
                    }
                    jsonp(ne, De) {
                        return this.request('JSONP', ne, {
                            params: new de().append(De, 'JSONP_CALLBACK'),
                            observe: 'body',
                            responseType: 'json',
                        });
                    }
                    options(ne, De = {}) {
                        return this.request('OPTIONS', ne, De);
                    }
                    patch(ne, De, Ke = {}) {
                        return this.request('PATCH', ne, Xe(Ke, De));
                    }
                    post(ne, De, Ke = {}) {
                        return this.request('POST', ne, Xe(Ke, De));
                    }
                    put(ne, De, Ke = {}) {
                        return this.request('PUT', ne, Xe(Ke, De));
                    }
                }
                return (
                    (Ie.ɵfac = function (ne) {
                        return new (ne || Ie)(P.LFG(se));
                    }),
                    (Ie.ɵprov = P.Yz7({ token: Ie, factory: Ie.ɵfac })),
                    Ie
                );
            })();
            class wt {
                constructor(W, ne) {
                    (this.next = W), (this.interceptor = ne);
                }
                handle(W) {
                    return this.interceptor.intercept(W, this.next);
                }
            }
            const rn = new P.OlP('HTTP_INTERCEPTORS');
            let Bn = (() => {
                class Ie {
                    intercept(ne, De) {
                        return De.handle(ne);
                    }
                }
                return (
                    (Ie.ɵfac = function (ne) {
                        return new (ne || Ie)();
                    }),
                    (Ie.ɵprov = P.Yz7({ token: Ie, factory: Ie.ɵfac })),
                    Ie
                );
            })();
            const An = /^\)\]\}',?\n/;
            let ar = (() => {
                class Ie {
                    constructor(ne) {
                        this.xhrFactory = ne;
                    }
                    handle(ne) {
                        if ('JSONP' === ne.method)
                            throw new Error(
                                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.'
                            );
                        return new w.y((De) => {
                            const Ke = this.xhrFactory.build();
                            if (
                                (Ke.open(ne.method, ne.urlWithParams),
                                ne.withCredentials && (Ke.withCredentials = !0),
                                ne.headers.forEach(($t, Z) =>
                                    Ke.setRequestHeader($t, Z.join(','))
                                ),
                                ne.headers.has('Accept') ||
                                    Ke.setRequestHeader(
                                        'Accept',
                                        'application/json, text/plain, */*'
                                    ),
                                !ne.headers.has('Content-Type'))
                            ) {
                                const $t = ne.detectContentTypeHeader();
                                null !== $t &&
                                    Ke.setRequestHeader('Content-Type', $t);
                            }
                            if (ne.responseType) {
                                const $t = ne.responseType.toLowerCase();
                                Ke.responseType = 'json' !== $t ? $t : 'text';
                            }
                            const at = ne.serializeBody();
                            let st = null;
                            const ut = () => {
                                    if (null !== st) return st;
                                    const $t =
                                            1223 === Ke.status
                                                ? 204
                                                : Ke.status,
                                        Z = Ke.statusText || 'OK',
                                        fe = new j(Ke.getAllResponseHeaders()),
                                        ue =
                                            (function Jt(Ie) {
                                                return 'responseURL' in Ie &&
                                                    Ie.responseURL
                                                    ? Ie.responseURL
                                                    : /^X-Request-URL:/m.test(
                                                          Ie.getAllResponseHeaders()
                                                      )
                                                    ? Ie.getResponseHeader(
                                                          'X-Request-URL'
                                                      )
                                                    : null;
                                            })(Ke) || ne.url;
                                    return (
                                        (st = new Re({
                                            headers: fe,
                                            status: $t,
                                            statusText: Z,
                                            url: ue,
                                        })),
                                        st
                                    );
                                },
                                Ut = () => {
                                    let {
                                            headers: $t,
                                            status: Z,
                                            statusText: fe,
                                            url: ue,
                                        } = ut(),
                                        Le = null;
                                    204 !== Z &&
                                        (Le =
                                            void 0 === Ke.response
                                                ? Ke.responseText
                                                : Ke.response),
                                        0 === Z && (Z = Le ? 200 : 0);
                                    let Pe = Z >= 200 && Z < 300;
                                    if (
                                        'json' === ne.responseType &&
                                        'string' == typeof Le
                                    ) {
                                        const pt = Le;
                                        Le = Le.replace(An, '');
                                        try {
                                            Le =
                                                '' !== Le
                                                    ? JSON.parse(Le)
                                                    : null;
                                        } catch (ve) {
                                            (Le = pt),
                                                Pe &&
                                                    ((Pe = !1),
                                                    (Le = {
                                                        error: ve,
                                                        text: Le,
                                                    }));
                                        }
                                    }
                                    Pe
                                        ? (De.next(
                                              new Oe({
                                                  body: Le,
                                                  headers: $t,
                                                  status: Z,
                                                  statusText: fe,
                                                  url: ue || void 0,
                                              })
                                          ),
                                          De.complete())
                                        : De.error(
                                              new Ue({
                                                  error: Le,
                                                  headers: $t,
                                                  status: Z,
                                                  statusText: fe,
                                                  url: ue || void 0,
                                              })
                                          );
                                },
                                mn = ($t) => {
                                    const { url: Z } = ut(),
                                        fe = new Ue({
                                            error: $t,
                                            status: Ke.status || 0,
                                            statusText:
                                                Ke.statusText ||
                                                'Unknown Error',
                                            url: Z || void 0,
                                        });
                                    De.error(fe);
                                };
                            let Lt = !1;
                            const Gn = ($t) => {
                                    Lt || (De.next(ut()), (Lt = !0));
                                    let Z = {
                                        type: Je.DownloadProgress,
                                        loaded: $t.loaded,
                                    };
                                    $t.lengthComputable && (Z.total = $t.total),
                                        'text' === ne.responseType &&
                                            !!Ke.responseText &&
                                            (Z.partialText = Ke.responseText),
                                        De.next(Z);
                                },
                                wn = ($t) => {
                                    let Z = {
                                        type: Je.UploadProgress,
                                        loaded: $t.loaded,
                                    };
                                    $t.lengthComputable && (Z.total = $t.total),
                                        De.next(Z);
                                };
                            return (
                                Ke.addEventListener('load', Ut),
                                Ke.addEventListener('error', mn),
                                Ke.addEventListener('timeout', mn),
                                Ke.addEventListener('abort', mn),
                                ne.reportProgress &&
                                    (Ke.addEventListener('progress', Gn),
                                    null !== at &&
                                        Ke.upload &&
                                        Ke.upload.addEventListener(
                                            'progress',
                                            wn
                                        )),
                                Ke.send(at),
                                De.next({ type: Je.Sent }),
                                () => {
                                    Ke.removeEventListener('error', mn),
                                        Ke.removeEventListener('abort', mn),
                                        Ke.removeEventListener('load', Ut),
                                        Ke.removeEventListener('timeout', mn),
                                        ne.reportProgress &&
                                            (Ke.removeEventListener(
                                                'progress',
                                                Gn
                                            ),
                                            null !== at &&
                                                Ke.upload &&
                                                Ke.upload.removeEventListener(
                                                    'progress',
                                                    wn
                                                )),
                                        Ke.readyState !== Ke.DONE && Ke.abort();
                                }
                            );
                        });
                    }
                }
                return (
                    (Ie.ɵfac = function (ne) {
                        return new (ne || Ie)(P.LFG(d.JF));
                    }),
                    (Ie.ɵprov = P.Yz7({ token: Ie, factory: Ie.ɵfac })),
                    Ie
                );
            })();
            const Dn = new P.OlP('XSRF_COOKIE_NAME'),
                cn = new P.OlP('XSRF_HEADER_NAME');
            class Rn {}
            let tr = (() => {
                    class Ie {
                        constructor(ne, De, Ke) {
                            (this.doc = ne),
                                (this.platform = De),
                                (this.cookieName = Ke),
                                (this.lastCookieString = ''),
                                (this.lastToken = null),
                                (this.parseCount = 0);
                        }
                        getToken() {
                            if ('server' === this.platform) return null;
                            const ne = this.doc.cookie || '';
                            return (
                                ne !== this.lastCookieString &&
                                    (this.parseCount++,
                                    (this.lastToken = (0, d.Mx)(
                                        ne,
                                        this.cookieName
                                    )),
                                    (this.lastCookieString = ne)),
                                this.lastToken
                            );
                        }
                    }
                    return (
                        (Ie.ɵfac = function (ne) {
                            return new (ne || Ie)(
                                P.LFG(d.K0),
                                P.LFG(P.Lbi),
                                P.LFG(Dn)
                            );
                        }),
                        (Ie.ɵprov = P.Yz7({ token: Ie, factory: Ie.ɵfac })),
                        Ie
                    );
                })(),
                fr = (() => {
                    class Ie {
                        constructor(ne, De) {
                            (this.tokenService = ne), (this.headerName = De);
                        }
                        intercept(ne, De) {
                            const Ke = ne.url.toLowerCase();
                            if (
                                'GET' === ne.method ||
                                'HEAD' === ne.method ||
                                Ke.startsWith('http://') ||
                                Ke.startsWith('https://')
                            )
                                return De.handle(ne);
                            const at = this.tokenService.getToken();
                            return (
                                null !== at &&
                                    !ne.headers.has(this.headerName) &&
                                    (ne = ne.clone({
                                        headers: ne.headers.set(
                                            this.headerName,
                                            at
                                        ),
                                    })),
                                De.handle(ne)
                            );
                        }
                    }
                    return (
                        (Ie.ɵfac = function (ne) {
                            return new (ne || Ie)(P.LFG(Rn), P.LFG(cn));
                        }),
                        (Ie.ɵprov = P.Yz7({ token: Ie, factory: Ie.ɵfac })),
                        Ie
                    );
                })(),
                Hn = (() => {
                    class Ie {
                        constructor(ne, De) {
                            (this.backend = ne),
                                (this.injector = De),
                                (this.chain = null);
                        }
                        handle(ne) {
                            if (null === this.chain) {
                                const De = this.injector.get(rn, []);
                                this.chain = De.reduceRight(
                                    (Ke, at) => new wt(Ke, at),
                                    this.backend
                                );
                            }
                            return this.chain.handle(ne);
                        }
                    }
                    return (
                        (Ie.ɵfac = function (ne) {
                            return new (ne || Ie)(P.LFG(Y), P.LFG(P.zs3));
                        }),
                        (Ie.ɵprov = P.Yz7({ token: Ie, factory: Ie.ɵfac })),
                        Ie
                    );
                })(),
                Qn = (() => {
                    class Ie {
                        static disable() {
                            return {
                                ngModule: Ie,
                                providers: [{ provide: fr, useClass: Bn }],
                            };
                        }
                        static withOptions(ne = {}) {
                            return {
                                ngModule: Ie,
                                providers: [
                                    ne.cookieName
                                        ? {
                                              provide: Dn,
                                              useValue: ne.cookieName,
                                          }
                                        : [],
                                    ne.headerName
                                        ? {
                                              provide: cn,
                                              useValue: ne.headerName,
                                          }
                                        : [],
                                ],
                            };
                        }
                    }
                    return (
                        (Ie.ɵfac = function (ne) {
                            return new (ne || Ie)();
                        }),
                        (Ie.ɵmod = P.oAB({ type: Ie })),
                        (Ie.ɵinj = P.cJS({
                            providers: [
                                fr,
                                { provide: rn, useExisting: fr, multi: !0 },
                                { provide: Rn, useClass: tr },
                                { provide: Dn, useValue: 'XSRF-TOKEN' },
                                { provide: cn, useValue: 'X-XSRF-TOKEN' },
                            ],
                        })),
                        Ie
                    );
                })(),
                Fn = (() => {
                    class Ie {}
                    return (
                        (Ie.ɵfac = function (ne) {
                            return new (ne || Ie)();
                        }),
                        (Ie.ɵmod = P.oAB({ type: Ie })),
                        (Ie.ɵinj = P.cJS({
                            providers: [
                                Ae,
                                { provide: se, useClass: Hn },
                                ar,
                                { provide: Y, useExisting: ar },
                            ],
                            imports: [
                                [
                                    Qn.withOptions({
                                        cookieName: 'XSRF-TOKEN',
                                        headerName: 'X-XSRF-TOKEN',
                                    }),
                                ],
                            ],
                        })),
                        Ie
                    );
                })();
        },
        5e3: (_e, z, y) => {
            'use strict';
            y.d(z, {
                deG: () => Mn,
                tb: () => Og,
                AFp: () => Sg,
                ip1: () => bc,
                CZH: () => Ea,
                hGG: () => JC,
                z2F: () => Ja,
                sBO: () => IC,
                Sil: () => wc,
                _Vd: () => Wa,
                EJc: () => Rg,
                SBq: () => za,
                qLn: () => Pa,
                vpe: () => lo,
                tBr: () => wa,
                XFs: () => St,
                OlP: () => It,
                zs3: () => ws,
                ZZ4: () => Fl,
                aQg: () => xl,
                soG: () => Pl,
                YKP: () => Vp,
                h0i: () => ya,
                PXZ: () => EC,
                R0b: () => fs,
                FiY: () => ko,
                Lbi: () => Mg,
                g9A: () => Ig,
                Qsj: () => iD,
                FYo: () => xp,
                JOm: () => io,
                PiD: () => Nl,
                tp0: () => zo,
                Rgc: () => qa,
                dDg: () => Ng,
                q4F: () => Lp,
                GfV: () => Np,
                s_b: () => Sl,
                ifc: () => at,
                eFA: () => Bg,
                G48: () => SC,
                Gpc: () => U,
                X6Q: () => TC,
                _c5: () => WC,
                VLi: () => yC,
                c2e: () => Pg,
                zSh: () => Iu,
                wAp: () => nn,
                vHH: () => xe,
                cg1: () => ec,
                kL8: () => ip,
                dqk: () => Lt,
                sIi: () => ka,
                CqO: () => ah,
                QGY: () => Ku,
                F4k: () => oh,
                RDi: () => zt,
                AaK: () => se,
                qOj: () => Fu,
                TTD: () => $r,
                _Bn: () => Pp,
                xp6: () => kd,
                uIk: () => Lu,
                Tol: () => Ph,
                ekj: () => Qu,
                Suo: () => sg,
                Xpm: () => $e,
                lG2: () => Xn,
                Yz7: () => Ft,
                cJS: () => An,
                oAB: () => en,
                Yjl: () => yr,
                Y36: () => Va,
                _UZ: () => ih,
                GkF: () => sh,
                BQk: () => zu,
                ynx: () => Wu,
                qZA: () => Gu,
                TgZ: () => $u,
                n5z: () => o,
                LFG: () => gr,
                $8M: () => f,
                $Z: () => rh,
                NdJ: () => Yu,
                CRH: () => og,
                oxw: () => dh,
                ALo: () => Qp,
                lcZ: () => Jp,
                Hsn: () => hh,
                F$t: () => fh,
                Q6J: () => ju,
                DdM: () => $p,
                l5B: () => Gp,
                qbA: () => Wp,
                iGM: () => ig,
                MAs: () => zf,
                LSH: () => $l,
                kYT: () => Un,
                Akn: () => Hs,
                YNc: () => Wf,
                W1O: () => cg,
                _uU: () => Bh,
                Oqu: () => Xu,
                hij: () => vl,
            });
            var d = y(7579),
                P = y(727),
                H = y(8306),
                w = y(6451),
                $ = y(3099);
            function ae(e) {
                for (let t in e) if (e[t] === ae) return t;
                throw Error(
                    'Could not find renamed property on target object.'
                );
            }
            function re(e, t) {
                for (const n in t)
                    t.hasOwnProperty(n) &&
                        !e.hasOwnProperty(n) &&
                        (e[n] = t[n]);
            }
            function se(e) {
                if ('string' == typeof e) return e;
                if (Array.isArray(e)) return '[' + e.map(se).join(', ') + ']';
                if (null == e) return '' + e;
                if (e.overriddenName) return `${e.overriddenName}`;
                if (e.name) return `${e.name}`;
                const t = e.toString();
                if (null == t) return '' + t;
                const n = t.indexOf('\n');
                return -1 === n ? t : t.substring(0, n);
            }
            function Y(e, t) {
                return null == e || '' === e
                    ? null === t
                        ? ''
                        : t
                    : null == t || '' === t
                    ? e
                    : e + ' ' + t;
            }
            const j = ae({ __forward_ref__: ae });
            function U(e) {
                return (
                    (e.__forward_ref__ = U),
                    (e.toString = function () {
                        return se(this());
                    }),
                    e
                );
            }
            function ie(e) {
                return Ce(e) ? e() : e;
            }
            function Ce(e) {
                return (
                    'function' == typeof e &&
                    e.hasOwnProperty(j) &&
                    e.__forward_ref__ === U
                );
            }
            class xe extends Error {
                constructor(t, n) {
                    super(
                        (function We(e, t) {
                            return `NG0${Math.abs(e)}${t ? ': ' + t : ''}`;
                        })(t, n)
                    ),
                        (this.code = t);
                }
            }
            function de(e) {
                return 'string' == typeof e ? e : null == e ? '' : String(e);
            }
            function Q(e) {
                return 'function' == typeof e
                    ? e.name || e.toString()
                    : 'object' == typeof e &&
                      null != e &&
                      'function' == typeof e.type
                    ? e.type.name || e.type.toString()
                    : de(e);
            }
            function oe(e, t) {
                const n = t ? ` in ${t}` : '';
                throw new xe(-201, `No provider for ${Q(e)} found${n}`);
            }
            function Et(e, t) {
                null == e &&
                    (function _t(e, t, n, r) {
                        throw new Error(
                            `ASSERTION ERROR: ${e}` +
                                (null == r
                                    ? ''
                                    : ` [Expected=> ${n} ${r} ${t} <=Actual]`)
                        );
                    })(t, e, null, '!=');
            }
            function Ft(e) {
                return {
                    token: e.token,
                    providedIn: e.providedIn || null,
                    factory: e.factory,
                    value: void 0,
                };
            }
            function An(e) {
                return {
                    providers: e.providers || [],
                    imports: e.imports || [],
                };
            }
            function Jt(e) {
                return ar(e, tr) || ar(e, Hn);
            }
            function ar(e, t) {
                return e.hasOwnProperty(t) ? e[t] : null;
            }
            function Rn(e) {
                return e && (e.hasOwnProperty(fr) || e.hasOwnProperty(Sr))
                    ? e[fr]
                    : null;
            }
            const tr = ae({ ɵprov: ae }),
                fr = ae({ ɵinj: ae }),
                Hn = ae({ ngInjectableDef: ae }),
                Sr = ae({ ngInjectorDef: ae });
            var St = (() => (
                ((St = St || {})[(St.Default = 0)] = 'Default'),
                (St[(St.Host = 1)] = 'Host'),
                (St[(St.Self = 2)] = 'Self'),
                (St[(St.SkipSelf = 4)] = 'SkipSelf'),
                (St[(St.Optional = 8)] = 'Optional'),
                St
            ))();
            let Qn;
            function gn(e) {
                const t = Qn;
                return (Qn = e), t;
            }
            function Ir(e, t, n) {
                const r = Jt(e);
                return r && 'root' == r.providedIn
                    ? void 0 === r.value
                        ? (r.value = r.factory())
                        : r.value
                    : n & St.Optional
                    ? null
                    : void 0 !== t
                    ? t
                    : void oe(se(e), 'Injector');
            }
            function W(e) {
                return { toString: e }.toString();
            }
            var ne = (() => (
                    ((ne = ne || {})[(ne.OnPush = 0)] = 'OnPush'),
                    (ne[(ne.Default = 1)] = 'Default'),
                    ne
                ))(),
                at = (() => {
                    return (
                        ((e = at || (at = {}))[(e.Emulated = 0)] = 'Emulated'),
                        (e[(e.None = 2)] = 'None'),
                        (e[(e.ShadowDom = 3)] = 'ShadowDom'),
                        at
                    );
                    var e;
                })();
            const st = 'undefined' != typeof globalThis && globalThis,
                ut = 'undefined' != typeof window && window,
                Ut =
                    'undefined' != typeof self &&
                    'undefined' != typeof WorkerGlobalScope &&
                    self instanceof WorkerGlobalScope &&
                    self,
                Lt = st || ('undefined' != typeof global && global) || ut || Ut,
                $t = {},
                Z = [],
                fe = ae({ ɵcmp: ae }),
                ue = ae({ ɵdir: ae }),
                Le = ae({ ɵpipe: ae }),
                Pe = ae({ ɵmod: ae }),
                pt = ae({ ɵfac: ae }),
                ve = ae({ __NG_ELEMENT_ID__: ae });
            let je = 0;
            function $e(e) {
                return W(() => {
                    const n = {},
                        r = {
                            type: e.type,
                            providersResolver: null,
                            decls: e.decls,
                            vars: e.vars,
                            factory: null,
                            template: e.template || null,
                            consts: e.consts || null,
                            ngContentSelectors: e.ngContentSelectors,
                            hostBindings: e.hostBindings || null,
                            hostVars: e.hostVars || 0,
                            hostAttrs: e.hostAttrs || null,
                            contentQueries: e.contentQueries || null,
                            declaredInputs: n,
                            inputs: null,
                            outputs: null,
                            exportAs: e.exportAs || null,
                            onPush: e.changeDetection === ne.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            selectors: e.selectors || Z,
                            viewQuery: e.viewQuery || null,
                            features: e.features || null,
                            data: e.data || {},
                            encapsulation: e.encapsulation || at.Emulated,
                            id: 'c',
                            styles: e.styles || Z,
                            _: null,
                            setInput: null,
                            schemas: e.schemas || null,
                            tView: null,
                        },
                        i = e.directives,
                        s = e.features,
                        l = e.pipes;
                    return (
                        (r.id += je++),
                        (r.inputs = bt(e.inputs, n)),
                        (r.outputs = bt(e.outputs)),
                        s && s.forEach((h) => h(r)),
                        (r.directiveDefs = i
                            ? () => ('function' == typeof i ? i() : i).map(Ct)
                            : null),
                        (r.pipeDefs = l
                            ? () => ('function' == typeof l ? l() : l).map(dt)
                            : null),
                        r
                    );
                });
            }
            function Ct(e) {
                return (
                    Yt(e) ||
                    (function ln(e) {
                        return e[ue] || null;
                    })(e)
                );
            }
            function dt(e) {
                return (function Tn(e) {
                    return e[Le] || null;
                })(e);
            }
            const Xt = {};
            function en(e) {
                return W(() => {
                    const t = {
                        type: e.type,
                        bootstrap: e.bootstrap || Z,
                        declarations: e.declarations || Z,
                        imports: e.imports || Z,
                        exports: e.exports || Z,
                        transitiveCompileScopes: null,
                        schemas: e.schemas || null,
                        id: e.id || null,
                    };
                    return null != e.id && (Xt[e.id] = e.type), t;
                });
            }
            function Un(e, t) {
                return W(() => {
                    const n = xn(e, !0);
                    (n.declarations = t.declarations || Z),
                        (n.imports = t.imports || Z),
                        (n.exports = t.exports || Z);
                });
            }
            function bt(e, t) {
                if (null == e) return $t;
                const n = {};
                for (const r in e)
                    if (e.hasOwnProperty(r)) {
                        let i = e[r],
                            s = i;
                        Array.isArray(i) && ((s = i[1]), (i = i[0])),
                            (n[i] = r),
                            t && (t[i] = s);
                    }
                return n;
            }
            const Xn = $e;
            function yr(e) {
                return {
                    type: e.type,
                    name: e.name,
                    factory: null,
                    pure: !1 !== e.pure,
                    onDestroy: e.type.prototype.ngOnDestroy || null,
                };
            }
            function Yt(e) {
                return e[fe] || null;
            }
            function xn(e, t) {
                const n = e[Pe] || null;
                if (!n && !0 === t)
                    throw new Error(
                        `Type ${se(e)} does not have '\u0275mod' property.`
                    );
                return n;
            }
            const X = 18;
            function rt(e) {
                return Array.isArray(e) && 'object' == typeof e[1];
            }
            function Bt(e) {
                return Array.isArray(e) && !0 === e[1];
            }
            function yn(e) {
                return 0 != (8 & e.flags);
            }
            function On(e) {
                return 2 == (2 & e.flags);
            }
            function Wn(e) {
                return 1 == (1 & e.flags);
            }
            function on(e) {
                return null !== e.template;
            }
            function Mr(e) {
                return 0 != (512 & e[2]);
            }
            function ri(e, t) {
                return e.hasOwnProperty(pt) ? e[pt] : null;
            }
            class Ai {
                constructor(t, n, r) {
                    (this.previousValue = t),
                        (this.currentValue = n),
                        (this.firstChange = r);
                }
                isFirstChange() {
                    return this.firstChange;
                }
            }
            function $r() {
                return vr;
            }
            function vr(e) {
                return e.type.prototype.ngOnChanges && (e.setInput = ii), qi;
            }
            function qi() {
                const e = Qi(this),
                    t = null == e ? void 0 : e.current;
                if (t) {
                    const n = e.previous;
                    if (n === $t) e.previous = t;
                    else for (let r in t) n[r] = t[r];
                    (e.current = null), this.ngOnChanges(t);
                }
            }
            function ii(e, t, n, r) {
                const i =
                        Qi(e) ||
                        (function ui(e, t) {
                            return (e[Fi] = t);
                        })(e, { previous: $t, current: null }),
                    s = i.current || (i.current = {}),
                    l = i.previous,
                    h = this.declaredInputs[n],
                    m = l[h];
                (s[h] = new Ai(m && m.currentValue, t, l === $t)), (e[r] = t);
            }
            $r.ngInherit = !0;
            const Fi = '__ngSimpleChanges__';
            function Qi(e) {
                return e[Fi] || null;
            }
            let ht;
            function zt(e) {
                ht = e;
            }
            function Nt(e) {
                return !!e.listen;
            }
            const A = {
                createRenderer: (e, t) =>
                    (function _n() {
                        return void 0 !== ht
                            ? ht
                            : 'undefined' != typeof document
                            ? document
                            : void 0;
                    })(),
            };
            function b(e) {
                for (; Array.isArray(e); ) e = e[0];
                return e;
            }
            function ke(e, t) {
                return b(t[e]);
            }
            function qe(e, t) {
                return b(t[e.index]);
            }
            function kt(e, t) {
                return e.data[t];
            }
            function un(e, t) {
                return e[t];
            }
            function At(e, t) {
                const n = t[e];
                return rt(n) ? n : n[0];
            }
            function jt(e) {
                return 4 == (4 & e[2]);
            }
            function Pn(e) {
                return 128 == (128 & e[2]);
            }
            function Kn(e, t) {
                return null == t ? null : e[t];
            }
            function ci(e) {
                e[X] = 0;
            }
            function Wr(e, t) {
                e[5] += t;
                let n = e,
                    r = e[3];
                for (
                    ;
                    null !== r &&
                    ((1 === t && 1 === n[5]) || (-1 === t && 0 === n[5]));

                )
                    (r[5] += t), (n = r), (r = r[3]);
            }
            const Vt = {
                lFrame: Ks(null),
                bindingsEnabled: !0,
                isInCheckNoChangesMode: !1,
            };
            function os() {
                return Vt.bindingsEnabled;
            }
            function et() {
                return Vt.lFrame.lView;
            }
            function an() {
                return Vt.lFrame.tView;
            }
            function ir() {
                let e = gs();
                for (; null !== e && 64 === e.type; ) e = e.parent;
                return e;
            }
            function gs() {
                return Vt.lFrame.currentTNode;
            }
            function Rr(e, t) {
                const n = Vt.lFrame;
                (n.currentTNode = e), (n.isParent = t);
            }
            function ms() {
                return Vt.lFrame.isParent;
            }
            function Ss() {
                Vt.lFrame.isParent = !1;
            }
            function ys() {
                return Vt.isInCheckNoChangesMode;
            }
            function _s(e) {
                Vt.isInCheckNoChangesMode = e;
            }
            function Tr() {
                const e = Vt.lFrame;
                let t = e.bindingRootIndex;
                return (
                    -1 === t &&
                        (t = e.bindingRootIndex = e.tView.bindingStartIndex),
                    t
                );
            }
            function _i() {
                return Vt.lFrame.bindingIndex++;
            }
            function Si(e) {
                const t = Vt.lFrame,
                    n = t.bindingIndex;
                return (t.bindingIndex = t.bindingIndex + e), n;
            }
            function g(e, t) {
                const n = Vt.lFrame;
                (n.bindingIndex = n.bindingRootIndex = e), Ne(t);
            }
            function Ne(e) {
                Vt.lFrame.currentDirectiveIndex = e;
            }
            function bn() {
                return Vt.lFrame.currentQueryIndex;
            }
            function In(e) {
                Vt.lFrame.currentQueryIndex = e;
            }
            function vi(e) {
                const t = e[1];
                return 2 === t.type ? t.declTNode : 1 === t.type ? e[6] : null;
            }
            function zr(e, t, n) {
                if (n & St.SkipSelf) {
                    let i = t,
                        s = e;
                    for (
                        ;
                        !((i = i.parent),
                        null !== i ||
                            n & St.Host ||
                            ((i = vi(s)),
                            null === i || ((s = s[15]), 10 & i.type)));

                    );
                    if (null === i) return !1;
                    (t = i), (e = s);
                }
                const r = (Vt.lFrame = as());
                return (r.currentTNode = t), (r.lView = e), !0;
            }
            function Ei(e) {
                const t = as(),
                    n = e[1];
                (Vt.lFrame = t),
                    (t.currentTNode = n.firstChild),
                    (t.lView = e),
                    (t.tView = n),
                    (t.contextLView = e),
                    (t.bindingIndex = n.bindingStartIndex),
                    (t.inI18n = !1);
            }
            function as() {
                const e = Vt.lFrame,
                    t = null === e ? null : e.child;
                return null === t ? Ks(e) : t;
            }
            function Ks(e) {
                const t = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: e,
                    child: null,
                    inI18n: !1,
                };
                return null !== e && (e.child = t), t;
            }
            function Ys() {
                const e = Vt.lFrame;
                return (
                    (Vt.lFrame = e.parent),
                    (e.currentTNode = null),
                    (e.lView = null),
                    e
                );
            }
            const uo = Ys;
            function Os() {
                const e = Ys();
                (e.isParent = !0),
                    (e.tView = null),
                    (e.selectedIndex = -1),
                    (e.contextLView = null),
                    (e.elementDepthCount = 0),
                    (e.currentDirectiveIndex = -1),
                    (e.currentNamespace = null),
                    (e.bindingRootIndex = -1),
                    (e.bindingIndex = -1),
                    (e.currentQueryIndex = 0);
            }
            function kr() {
                return Vt.lFrame.selectedIndex;
            }
            function Ui(e) {
                Vt.lFrame.selectedIndex = e;
            }
            function pr() {
                const e = Vt.lFrame;
                return kt(e.tView, e.selectedIndex);
            }
            function Rs(e, t) {
                for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) {
                    const s = e.data[n].type.prototype,
                        {
                            ngAfterContentInit: l,
                            ngAfterContentChecked: h,
                            ngAfterViewInit: m,
                            ngAfterViewChecked: O,
                            ngOnDestroy: F,
                        } = s;
                    l && (e.contentHooks || (e.contentHooks = [])).push(-n, l),
                        h &&
                            ((e.contentHooks || (e.contentHooks = [])).push(
                                n,
                                h
                            ),
                            (
                                e.contentCheckHooks ||
                                (e.contentCheckHooks = [])
                            ).push(n, h)),
                        m && (e.viewHooks || (e.viewHooks = [])).push(-n, m),
                        O &&
                            ((e.viewHooks || (e.viewHooks = [])).push(n, O),
                            (e.viewCheckHooks || (e.viewCheckHooks = [])).push(
                                n,
                                O
                            )),
                        null != F &&
                            (e.destroyHooks || (e.destroyHooks = [])).push(
                                n,
                                F
                            );
                }
            }
            function ls(e, t, n) {
                Er(e, t, 3, n);
            }
            function Ur(e, t, n, r) {
                (3 & e[2]) === n && Er(e, t, n, r);
            }
            function Zs(e, t) {
                let n = e[2];
                (3 & n) === t && ((n &= 2047), (n += 1), (e[2] = n));
            }
            function Er(e, t, n, r) {
                const s = null != r ? r : -1,
                    l = t.length - 1;
                let h = 0;
                for (let m = void 0 !== r ? 65535 & e[X] : 0; m < l; m++)
                    if ('number' == typeof t[m + 1]) {
                        if (((h = t[m]), null != r && h >= r)) break;
                    } else
                        t[m] < 0 && (e[X] += 65536),
                            (h < s || -1 == s) &&
                                (Fs(e, n, t, m),
                                (e[X] = (4294901760 & e[X]) + m + 2)),
                            m++;
            }
            function Fs(e, t, n, r) {
                const i = n[r] < 0,
                    s = n[r + 1],
                    h = e[i ? -n[r] : n[r]];
                if (i) {
                    if (e[2] >> 11 < e[X] >> 16 && (3 & e[2]) === t) {
                        e[2] += 2048;
                        try {
                            s.call(h);
                        } finally {
                        }
                    }
                } else
                    try {
                        s.call(h);
                    } finally {
                    }
            }
            class Ni {
                constructor(t, n, r) {
                    (this.factory = t),
                        (this.resolving = !1),
                        (this.canSeeViewProviders = n),
                        (this.injectImpl = r);
                }
            }
            function Cr(e, t, n) {
                const r = Nt(e);
                let i = 0;
                for (; i < n.length; ) {
                    const s = n[i];
                    if ('number' == typeof s) {
                        if (0 !== s) break;
                        i++;
                        const l = n[i++],
                            h = n[i++],
                            m = n[i++];
                        r
                            ? e.setAttribute(t, h, m, l)
                            : t.setAttributeNS(l, h, m);
                    } else {
                        const l = s,
                            h = n[++i];
                        po(l)
                            ? r && e.setProperty(t, l, h)
                            : r
                            ? e.setAttribute(t, l, h)
                            : t.setAttribute(l, h),
                            i++;
                    }
                }
                return i;
            }
            function ho(e) {
                return 3 === e || 4 === e || 6 === e;
            }
            function po(e) {
                return 64 === e.charCodeAt(0);
            }
            function qs(e, t) {
                if (null !== t && 0 !== t.length)
                    if (null === e || 0 === e.length) e = t.slice();
                    else {
                        let n = -1;
                        for (let r = 0; r < t.length; r++) {
                            const i = t[r];
                            'number' == typeof i
                                ? (n = i)
                                : 0 === n ||
                                  go(
                                      e,
                                      n,
                                      i,
                                      null,
                                      -1 === n || 2 === n ? t[++r] : null
                                  );
                        }
                    }
                return e;
            }
            function go(e, t, n, r, i) {
                let s = 0,
                    l = e.length;
                if (-1 === t) l = -1;
                else
                    for (; s < e.length; ) {
                        const h = e[s++];
                        if ('number' == typeof h) {
                            if (h === t) {
                                l = -1;
                                break;
                            }
                            if (h > t) {
                                l = s - 1;
                                break;
                            }
                        }
                    }
                for (; s < e.length; ) {
                    const h = e[s];
                    if ('number' == typeof h) break;
                    if (h === n) {
                        if (null === r)
                            return void (null !== i && (e[s + 1] = i));
                        if (r === e[s + 1]) return void (e[s + 2] = i);
                    }
                    s++, null !== r && s++, null !== i && s++;
                }
                -1 !== l && (e.splice(l, 0, t), (s = l + 1)),
                    e.splice(s++, 0, n),
                    null !== r && e.splice(s++, 0, r),
                    null !== i && e.splice(s++, 0, i);
            }
            function bo(e) {
                return -1 !== e;
            }
            function us(e) {
                return 32767 & e;
            }
            function Ds(e, t) {
                let n = (function Qs(e) {
                        return e >> 16;
                    })(e),
                    r = t;
                for (; n > 0; ) (r = r[15]), n--;
                return r;
            }
            let Ns = !0;
            function Js(e) {
                const t = Ns;
                return (Ns = e), t;
            }
            let No = 0;
            function cs(e, t) {
                const n = p(e, t);
                if (-1 !== n) return n;
                const r = t[1];
                r.firstCreatePass &&
                    ((e.injectorIndex = t.length),
                    To(r.data, e),
                    To(t, null),
                    To(r.blueprint, null));
                const i = c(e, t),
                    s = e.injectorIndex;
                if (bo(i)) {
                    const l = us(i),
                        h = Ds(i, t),
                        m = h[1].data;
                    for (let O = 0; O < 8; O++) t[s + O] = h[l + O] | m[l + O];
                }
                return (t[s + 8] = i), s;
            }
            function To(e, t) {
                e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
            }
            function p(e, t) {
                return -1 === e.injectorIndex ||
                    (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
                    null === t[e.injectorIndex + 8]
                    ? -1
                    : e.injectorIndex;
            }
            function c(e, t) {
                if (e.parent && -1 !== e.parent.injectorIndex)
                    return e.parent.injectorIndex;
                let n = 0,
                    r = null,
                    i = t;
                for (; null !== i; ) {
                    const s = i[1],
                        l = s.type;
                    if (
                        ((r = 2 === l ? s.declTNode : 1 === l ? i[6] : null),
                        null === r)
                    )
                        return -1;
                    if ((n++, (i = i[15]), -1 !== r.injectorIndex))
                        return r.injectorIndex | (n << 16);
                }
                return -1;
            }
            function u(e, t, n) {
                !(function wo(e, t, n) {
                    let r;
                    'string' == typeof n
                        ? (r = n.charCodeAt(0) || 0)
                        : n.hasOwnProperty(ve) && (r = n[ve]),
                        null == r && (r = n[ve] = No++);
                    const i = 255 & r;
                    t.data[e + (i >> 5)] |= 1 << i;
                })(e, t, n);
            }
            function I(e, t, n) {
                if (n & St.Optional) return e;
                oe(t, 'NodeInjector');
            }
            function k(e, t, n, r) {
                if (
                    (n & St.Optional && void 0 === r && (r = null),
                    0 == (n & (St.Self | St.Host)))
                ) {
                    const i = e[9],
                        s = gn(void 0);
                    try {
                        return i
                            ? i.get(t, r, n & St.Optional)
                            : Ir(t, r, n & St.Optional);
                    } finally {
                        gn(s);
                    }
                }
                return I(r, t, n);
            }
            function q(e, t, n, r = St.Default, i) {
                if (null !== e) {
                    const s = (function Yn(e) {
                        if ('string' == typeof e) return e.charCodeAt(0) || 0;
                        const t = e.hasOwnProperty(ve) ? e[ve] : void 0;
                        return 'number' == typeof t
                            ? t >= 0
                                ? 255 & t
                                : Ge
                            : t;
                    })(n);
                    if ('function' == typeof s) {
                        if (!zr(t, e, r))
                            return r & St.Host ? I(i, n, r) : k(t, n, r, i);
                        try {
                            const l = s(r);
                            if (null != l || r & St.Optional) return l;
                            oe(n);
                        } finally {
                            uo();
                        }
                    } else if ('number' == typeof s) {
                        let l = null,
                            h = p(e, t),
                            m = -1,
                            O = r & St.Host ? t[16][6] : null;
                        for (
                            (-1 === h || r & St.SkipSelf) &&
                            ((m = -1 === h ? c(e, t) : t[h + 8]),
                            -1 !== m && ns(r, !1)
                                ? ((l = t[1]), (h = us(m)), (t = Ds(m, t)))
                                : (h = -1));
                            -1 !== h;

                        ) {
                            const F = t[1];
                            if (Zn(s, h, F.data)) {
                                const G = Dt(h, t, n, l, r, O);
                                if (G !== pe) return G;
                            }
                            (m = t[h + 8]),
                                -1 !== m &&
                                ns(r, t[1].data[h + 8] === O) &&
                                Zn(s, h, t)
                                    ? ((l = F), (h = us(m)), (t = Ds(m, t)))
                                    : (h = -1);
                        }
                    }
                }
                return k(t, n, r, i);
            }
            const pe = {};
            function Ge() {
                return new _(ir(), et());
            }
            function Dt(e, t, n, r, i, s) {
                const l = t[1],
                    h = l.data[e + 8],
                    F = dn(
                        h,
                        l,
                        n,
                        null == r ? On(h) && Ns : r != l && 0 != (3 & h.type),
                        i & St.Host && s === h
                    );
                return null !== F ? Rt(t, l, F, h) : pe;
            }
            function dn(e, t, n, r, i) {
                const s = e.providerIndexes,
                    l = t.data,
                    h = 1048575 & s,
                    m = e.directiveStart,
                    F = s >> 20,
                    me = i ? h + F : e.directiveEnd;
                for (let Me = r ? h : h + F; Me < me; Me++) {
                    const Qe = l[Me];
                    if ((Me < m && n === Qe) || (Me >= m && Qe.type === n))
                        return Me;
                }
                if (i) {
                    const Me = l[m];
                    if (Me && on(Me) && Me.type === n) return m;
                }
                return null;
            }
            function Rt(e, t, n, r) {
                let i = e[n];
                const s = t.data;
                if (
                    (function xo(e) {
                        return e instanceof Ni;
                    })(i)
                ) {
                    const l = i;
                    l.resolving &&
                        (function ye(e, t) {
                            const n = t
                                ? `. Dependency path: ${t.join(' > ')} > ${e}`
                                : '';
                            throw new xe(
                                -200,
                                `Circular dependency in DI detected for ${e}${n}`
                            );
                        })(Q(s[n]));
                    const h = Js(l.canSeeViewProviders);
                    l.resolving = !0;
                    const m = l.injectImpl ? gn(l.injectImpl) : null;
                    zr(e, r, St.Default);
                    try {
                        (i = e[n] = l.factory(void 0, s, e, r)),
                            t.firstCreatePass &&
                                n >= r.directiveStart &&
                                (function Do(e, t, n) {
                                    const {
                                        ngOnChanges: r,
                                        ngOnInit: i,
                                        ngDoCheck: s,
                                    } = t.type.prototype;
                                    if (r) {
                                        const l = vr(t);
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(e, l),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, l);
                                    }
                                    i &&
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(0 - e, i),
                                        s &&
                                            ((
                                                n.preOrderHooks ||
                                                (n.preOrderHooks = [])
                                            ).push(e, s),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, s));
                                })(n, s[n], t);
                    } finally {
                        null !== m && gn(m), Js(h), (l.resolving = !1), uo();
                    }
                }
                return i;
            }
            function Zn(e, t, n) {
                return !!(n[t + (e >> 5)] & (1 << e));
            }
            function ns(e, t) {
                return !(e & St.Self || (e & St.Host && t));
            }
            class _ {
                constructor(t, n) {
                    (this._tNode = t), (this._lView = n);
                }
                get(t, n, r) {
                    return q(this._tNode, this._lView, t, r, n);
                }
            }
            function o(e) {
                return W(() => {
                    const t = e.prototype.constructor,
                        n = t[pt] || a(t),
                        r = Object.prototype;
                    let i = Object.getPrototypeOf(e.prototype).constructor;
                    for (; i && i !== r; ) {
                        const s = i[pt] || a(i);
                        if (s && s !== n) return s;
                        i = Object.getPrototypeOf(i);
                    }
                    return (s) => new s();
                });
            }
            function a(e) {
                return Ce(e)
                    ? () => {
                          const t = a(ie(e));
                          return t && t();
                      }
                    : ri(e);
            }
            function f(e) {
                return (function C(e, t) {
                    if ('class' === t) return e.classes;
                    if ('style' === t) return e.styles;
                    const n = e.attrs;
                    if (n) {
                        const r = n.length;
                        let i = 0;
                        for (; i < r; ) {
                            const s = n[i];
                            if (ho(s)) break;
                            if (0 === s) i += 2;
                            else if ('number' == typeof s)
                                for (i++; i < r && 'string' == typeof n[i]; )
                                    i++;
                            else {
                                if (s === t) return n[i + 1];
                                i += 2;
                            }
                        }
                    }
                    return null;
                })(ir(), e);
            }
            const L = '__parameters__';
            function Ze(e, t, n) {
                return W(() => {
                    const r = (function Te(e) {
                        return function (...n) {
                            if (e) {
                                const r = e(...n);
                                for (const i in r) this[i] = r[i];
                            }
                        };
                    })(t);
                    function i(...s) {
                        if (this instanceof i) return r.apply(this, s), this;
                        const l = new i(...s);
                        return (h.annotation = l), h;
                        function h(m, O, F) {
                            const G = m.hasOwnProperty(L)
                                ? m[L]
                                : Object.defineProperty(m, L, { value: [] })[L];
                            for (; G.length <= F; ) G.push(null);
                            return (G[F] = G[F] || []).push(l), m;
                        }
                    }
                    return (
                        n && (i.prototype = Object.create(n.prototype)),
                        (i.prototype.ngMetadataName = e),
                        (i.annotationCls = i),
                        i
                    );
                });
            }
            class It {
                constructor(t, n) {
                    (this._desc = t),
                        (this.ngMetadataName = 'InjectionToken'),
                        (this.ɵprov = void 0),
                        'number' == typeof n
                            ? (this.__NG_ELEMENT_ID__ = n)
                            : void 0 !== n &&
                              (this.ɵprov = Ft({
                                  token: this,
                                  providedIn: n.providedIn || 'root',
                                  factory: n.factory,
                              }));
                }
                toString() {
                    return `InjectionToken ${this._desc}`;
                }
            }
            const Mn = new It('AnalyzeForEntryComponents');
            function di(e, t) {
                void 0 === t && (t = e);
                for (let n = 0; n < e.length; n++) {
                    let r = e[n];
                    Array.isArray(r)
                        ? (t === e && (t = e.slice(0, n)), di(r, t))
                        : t !== e && t.push(r);
                }
                return t;
            }
            function fi(e, t) {
                e.forEach((n) => (Array.isArray(n) ? fi(n, t) : t(n)));
            }
            function is(e, t, n) {
                t >= e.length ? e.push(n) : e.splice(t, 0, n);
            }
            function eo(e, t) {
                return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
            }
            function bs(e, t) {
                const n = [];
                for (let r = 0; r < e; r++) n.push(t);
                return n;
            }
            function Jn(e, t, n) {
                let r = or(e, t);
                return (
                    r >= 0
                        ? (e[1 | r] = n)
                        : ((r = ~r),
                          (function Qt(e, t, n, r) {
                              let i = e.length;
                              if (i == t) e.push(n, r);
                              else if (1 === i) e.push(r, e[0]), (e[0] = n);
                              else {
                                  for (i--, e.push(e[i - 1], e[i]); i > t; )
                                      (e[i] = e[i - 2]), i--;
                                  (e[t] = n), (e[t + 1] = r);
                              }
                          })(e, r, t, n)),
                    r
                );
            }
            function Hi(e, t) {
                const n = or(e, t);
                if (n >= 0) return e[1 | n];
            }
            function or(e, t) {
                return (function As(e, t, n) {
                    let r = 0,
                        i = e.length >> n;
                    for (; i !== r; ) {
                        const s = r + ((i - r) >> 1),
                            l = e[s << n];
                        if (t === l) return s << n;
                        l > t ? (i = s) : (r = s + 1);
                    }
                    return ~(i << n);
                })(e, t, 1);
            }
            const T = {},
                B = '__NG_DI_FLAG__',
                ee = 'ngTempTokenPath',
                ze = /\n/gm,
                Ot = '__source',
                Mt = ae({ provide: String, useValue: ae });
            let kn;
            function Dr(e) {
                const t = kn;
                return (kn = e), t;
            }
            function $i(e, t = St.Default) {
                if (void 0 === kn) throw new xe(203, '');
                return null === kn
                    ? Ir(e, void 0, t)
                    : kn.get(e, t & St.Optional ? null : void 0, t);
            }
            function gr(e, t = St.Default) {
                return (
                    (function Fn() {
                        return Qn;
                    })() || $i
                )(ie(e), t);
            }
            function Lo(e) {
                const t = [];
                for (let n = 0; n < e.length; n++) {
                    const r = ie(e[n]);
                    if (Array.isArray(r)) {
                        if (0 === r.length) throw new xe(900, '');
                        let i,
                            s = St.Default;
                        for (let l = 0; l < r.length; l++) {
                            const h = r[l],
                                m = yo(h);
                            'number' == typeof m
                                ? -1 === m
                                    ? (i = h.token)
                                    : (s |= m)
                                : (i = h);
                        }
                        t.push(gr(i, s));
                    } else t.push(gr(r));
                }
                return t;
            }
            function Bs(e, t) {
                return (e[B] = t), (e.prototype[B] = t), e;
            }
            function yo(e) {
                return e[B];
            }
            const wa = Bs(
                    Ze('Inject', (e) => ({ token: e })),
                    -1
                ),
                ko = Bs(Ze('Optional'), 8),
                Nl = Bs(Ze('Self'), 2),
                zo = Bs(Ze('SkipSelf'), 4);
            class qc {
                constructor(t) {
                    this.changingThisBreaksApplicationSecurity = t;
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
                }
            }
            function Mo(e) {
                return e instanceof qc
                    ? e.changingThisBreaksApplicationSecurity
                    : e;
            }
            const Dm =
                    /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
                Cm =
                    /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
            var oi = (() => (
                ((oi = oi || {})[(oi.NONE = 0)] = 'NONE'),
                (oi[(oi.HTML = 1)] = 'HTML'),
                (oi[(oi.STYLE = 2)] = 'STYLE'),
                (oi[(oi.SCRIPT = 3)] = 'SCRIPT'),
                (oi[(oi.URL = 4)] = 'URL'),
                (oi[(oi.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
                oi
            ))();
            function $l(e) {
                const t = (function Ma() {
                    const e = et();
                    return e && e[12];
                })();
                return t
                    ? t.sanitize(oi.URL, e) || ''
                    : (function Sa(e, t) {
                          const n = (function ym(e) {
                              return (
                                  (e instanceof qc && e.getTypeName()) || null
                              );
                          })(e);
                          if (null != n && n !== t) {
                              if ('ResourceURL' === n && 'URL' === t) return !0;
                              throw new Error(
                                  `Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`
                              );
                          }
                          return n === t;
                      })(e, 'URL')
                    ? Mo(e)
                    : (function il(e) {
                          return (e = String(e)).match(Dm) || e.match(Cm)
                              ? e
                              : 'unsafe:' + e;
                      })(de(e));
            }
            const od = '__ngContext__';
            function Li(e, t) {
                e[od] = t;
            }
            function Wl(e) {
                const t = (function Oa(e) {
                    return e[od] || null;
                })(e);
                return t ? (Array.isArray(t) ? t : t.lView) : null;
            }
            function Kl(e) {
                return e.ngOriginalError;
            }
            function Wm(e, ...t) {
                e.error(...t);
            }
            class Pa {
                constructor() {
                    this._console = console;
                }
                handleError(t) {
                    const n = this._findOriginalError(t),
                        r = (function Gm(e) {
                            return (e && e.ngErrorLogger) || Wm;
                        })(t);
                    r(this._console, 'ERROR', t),
                        n && r(this._console, 'ORIGINAL ERROR', n);
                }
                _findOriginalError(t) {
                    let n = t && Kl(t);
                    for (; n && Kl(n); ) n = Kl(n);
                    return n || null;
                }
            }
            const dd = (() =>
                (
                    ('undefined' != typeof requestAnimationFrame &&
                        requestAnimationFrame) ||
                    setTimeout
                ).bind(Lt))();
            function ro(e) {
                return e instanceof Function ? e() : e;
            }
            var io = (() => (
                ((io = io || {})[(io.Important = 1)] = 'Important'),
                (io[(io.DashCase = 2)] = 'DashCase'),
                io
            ))();
            function Zl(e, t) {
                return undefined(e, t);
            }
            function Ra(e) {
                const t = e[3];
                return Bt(t) ? t[3] : t;
            }
            function ql(e) {
                return md(e[13]);
            }
            function Ql(e) {
                return md(e[4]);
            }
            function md(e) {
                for (; null !== e && !Bt(e); ) e = e[4];
                return e;
            }
            function qo(e, t, n, r, i) {
                if (null != r) {
                    let s,
                        l = !1;
                    Bt(r) ? (s = r) : rt(r) && ((l = !0), (r = r[0]));
                    const h = b(r);
                    0 === e && null !== n
                        ? null == i
                            ? Cd(t, n, h)
                            : Bo(t, n, h, i || null, !0)
                        : 1 === e && null !== n
                        ? Bo(t, n, h, i || null, !0)
                        : 2 === e
                        ? (function Md(e, t, n) {
                              const r = ol(e, t);
                              r &&
                                  (function py(e, t, n, r) {
                                      Nt(e)
                                          ? e.removeChild(t, n, r)
                                          : t.removeChild(n);
                                  })(e, r, t, n);
                          })(t, h, l)
                        : 3 === e && t.destroyNode(h),
                        null != s &&
                            (function yy(e, t, n, r, i) {
                                const s = n[7];
                                s !== b(n) && qo(t, e, r, s, i);
                                for (let h = 10; h < n.length; h++) {
                                    const m = n[h];
                                    Fa(m[1], m, e, t, r, s);
                                }
                            })(t, e, s, n, i);
                }
            }
            function Xl(e, t, n) {
                if (Nt(e)) return e.createElement(t, n);
                {
                    const r =
                        null !== n
                            ? (function it(e) {
                                  const t = e.toLowerCase();
                                  return 'svg' === t
                                      ? 'http://www.w3.org/2000/svg'
                                      : 'math' === t
                                      ? 'http://www.w3.org/1998/MathML/'
                                      : null;
                              })(n)
                            : null;
                    return null === r
                        ? e.createElement(t)
                        : e.createElementNS(r, t);
                }
            }
            function _d(e, t) {
                const n = e[9],
                    r = n.indexOf(t),
                    i = t[3];
                1024 & t[2] && ((t[2] &= -1025), Wr(i, -1)), n.splice(r, 1);
            }
            function eu(e, t) {
                if (e.length <= 10) return;
                const n = 10 + t,
                    r = e[n];
                if (r) {
                    const i = r[17];
                    null !== i && i !== e && _d(i, r),
                        t > 0 && (e[n - 1][4] = r[4]);
                    const s = eo(e, 10 + t);
                    !(function oy(e, t) {
                        Fa(e, t, t[11], 2, null, null),
                            (t[0] = null),
                            (t[6] = null);
                    })(r[1], r);
                    const l = s[19];
                    null !== l && l.detachView(s[1]),
                        (r[3] = null),
                        (r[4] = null),
                        (r[2] &= -129);
                }
                return r;
            }
            function vd(e, t) {
                if (!(256 & t[2])) {
                    const n = t[11];
                    Nt(n) && n.destroyNode && Fa(e, t, n, 3, null, null),
                        (function uy(e) {
                            let t = e[13];
                            if (!t) return tu(e[1], e);
                            for (; t; ) {
                                let n = null;
                                if (rt(t)) n = t[13];
                                else {
                                    const r = t[10];
                                    r && (n = r);
                                }
                                if (!n) {
                                    for (; t && !t[4] && t !== e; )
                                        rt(t) && tu(t[1], t), (t = t[3]);
                                    null === t && (t = e),
                                        rt(t) && tu(t[1], t),
                                        (n = t && t[4]);
                                }
                                t = n;
                            }
                        })(t);
                }
            }
            function tu(e, t) {
                if (!(256 & t[2])) {
                    (t[2] &= -129),
                        (t[2] |= 256),
                        (function hy(e, t) {
                            let n;
                            if (null != e && null != (n = e.destroyHooks))
                                for (let r = 0; r < n.length; r += 2) {
                                    const i = t[n[r]];
                                    if (!(i instanceof Ni)) {
                                        const s = n[r + 1];
                                        if (Array.isArray(s))
                                            for (
                                                let l = 0;
                                                l < s.length;
                                                l += 2
                                            ) {
                                                const h = i[s[l]],
                                                    m = s[l + 1];
                                                try {
                                                    m.call(h);
                                                } finally {
                                                }
                                            }
                                        else
                                            try {
                                                s.call(i);
                                            } finally {
                                            }
                                    }
                                }
                        })(e, t),
                        (function fy(e, t) {
                            const n = e.cleanup,
                                r = t[7];
                            let i = -1;
                            if (null !== n)
                                for (let s = 0; s < n.length - 1; s += 2)
                                    if ('string' == typeof n[s]) {
                                        const l = n[s + 1],
                                            h =
                                                'function' == typeof l
                                                    ? l(t)
                                                    : b(t[l]),
                                            m = r[(i = n[s + 2])],
                                            O = n[s + 3];
                                        'boolean' == typeof O
                                            ? h.removeEventListener(n[s], m, O)
                                            : O >= 0
                                            ? r[(i = O)]()
                                            : r[(i = -O)].unsubscribe(),
                                            (s += 2);
                                    } else {
                                        const l = r[(i = n[s + 1])];
                                        n[s].call(l);
                                    }
                            if (null !== r) {
                                for (let s = i + 1; s < r.length; s++) r[s]();
                                t[7] = null;
                            }
                        })(e, t),
                        1 === t[1].type && Nt(t[11]) && t[11].destroy();
                    const n = t[17];
                    if (null !== n && Bt(t[3])) {
                        n !== t[3] && _d(n, t);
                        const r = t[19];
                        null !== r && r.detachView(e);
                    }
                }
            }
            function Ed(e, t, n) {
                return (function Dd(e, t, n) {
                    let r = t;
                    for (; null !== r && 40 & r.type; ) r = (t = r).parent;
                    if (null === r) return n[0];
                    if (2 & r.flags) {
                        const i = e.data[r.directiveStart].encapsulation;
                        if (i === at.None || i === at.Emulated) return null;
                    }
                    return qe(r, n);
                })(e, t.parent, n);
            }
            function Bo(e, t, n, r, i) {
                Nt(e) ? e.insertBefore(t, n, r, i) : t.insertBefore(n, r, i);
            }
            function Cd(e, t, n) {
                Nt(e) ? e.appendChild(t, n) : t.appendChild(n);
            }
            function bd(e, t, n, r, i) {
                null !== r ? Bo(e, t, n, r, i) : Cd(e, t, n);
            }
            function ol(e, t) {
                return Nt(e) ? e.parentNode(t) : t.parentNode;
            }
            function Ad(e, t, n) {
                return Td(e, t, n);
            }
            let Td = function wd(e, t, n) {
                return 40 & e.type ? qe(e, n) : null;
            };
            function al(e, t, n, r) {
                const i = Ed(e, r, t),
                    s = t[11],
                    h = Ad(r.parent || t[6], r, t);
                if (null != i)
                    if (Array.isArray(n))
                        for (let m = 0; m < n.length; m++)
                            bd(s, i, n[m], h, !1);
                    else bd(s, i, n, h, !1);
            }
            function ll(e, t) {
                if (null !== t) {
                    const n = t.type;
                    if (3 & n) return qe(t, e);
                    if (4 & n) return ru(-1, e[t.index]);
                    if (8 & n) {
                        const r = t.child;
                        if (null !== r) return ll(e, r);
                        {
                            const i = e[t.index];
                            return Bt(i) ? ru(-1, i) : b(i);
                        }
                    }
                    if (32 & n) return Zl(t, e)() || b(e[t.index]);
                    {
                        const r = Id(e, t);
                        return null !== r
                            ? Array.isArray(r)
                                ? r[0]
                                : ll(Ra(e[16]), r)
                            : ll(e, t.next);
                    }
                }
                return null;
            }
            function Id(e, t) {
                return null !== t ? e[16][6].projection[t.projection] : null;
            }
            function ru(e, t) {
                const n = 10 + e + 1;
                if (n < t.length) {
                    const r = t[n],
                        i = r[1].firstChild;
                    if (null !== i) return ll(r, i);
                }
                return t[7];
            }
            function iu(e, t, n, r, i, s, l) {
                for (; null != n; ) {
                    const h = r[n.index],
                        m = n.type;
                    if (
                        (l && 0 === t && (h && Li(b(h), r), (n.flags |= 4)),
                        64 != (64 & n.flags))
                    )
                        if (8 & m)
                            iu(e, t, n.child, r, i, s, !1), qo(t, e, i, h, s);
                        else if (32 & m) {
                            const O = Zl(n, r);
                            let F;
                            for (; (F = O()); ) qo(t, e, i, F, s);
                            qo(t, e, i, h, s);
                        } else
                            16 & m ? Od(e, t, r, n, i, s) : qo(t, e, i, h, s);
                    n = l ? n.projectionNext : n.next;
                }
            }
            function Fa(e, t, n, r, i, s) {
                iu(n, r, e.firstChild, t, i, s, !1);
            }
            function Od(e, t, n, r, i, s) {
                const l = n[16],
                    m = l[6].projection[r.projection];
                if (Array.isArray(m))
                    for (let O = 0; O < m.length; O++) qo(t, e, i, m[O], s);
                else iu(e, t, m, l[3], i, s, !0);
            }
            function Pd(e, t, n) {
                Nt(e) ? e.setAttribute(t, 'style', n) : (t.style.cssText = n);
            }
            function su(e, t, n) {
                Nt(e)
                    ? '' === n
                        ? e.removeAttribute(t, 'class')
                        : e.setAttribute(t, 'class', n)
                    : (t.className = n);
            }
            function Rd(e, t, n) {
                let r = e.length;
                for (;;) {
                    const i = e.indexOf(t, n);
                    if (-1 === i) return i;
                    if (0 === i || e.charCodeAt(i - 1) <= 32) {
                        const s = t.length;
                        if (i + s === r || e.charCodeAt(i + s) <= 32) return i;
                    }
                    n = i + 1;
                }
            }
            const Fd = 'ng-template';
            function vy(e, t, n) {
                let r = 0;
                for (; r < e.length; ) {
                    let i = e[r++];
                    if (n && 'class' === i) {
                        if (((i = e[r]), -1 !== Rd(i.toLowerCase(), t, 0)))
                            return !0;
                    } else if (1 === i) {
                        for (
                            ;
                            r < e.length && 'string' == typeof (i = e[r++]);

                        )
                            if (i.toLowerCase() === t) return !0;
                        return !1;
                    }
                }
                return !1;
            }
            function xd(e) {
                return 4 === e.type && e.value !== Fd;
            }
            function Ey(e, t, n) {
                return t === (4 !== e.type || n ? e.value : Fd);
            }
            function Dy(e, t, n) {
                let r = 4;
                const i = e.attrs || [],
                    s = (function Ay(e) {
                        for (let t = 0; t < e.length; t++)
                            if (ho(e[t])) return t;
                        return e.length;
                    })(i);
                let l = !1;
                for (let h = 0; h < t.length; h++) {
                    const m = t[h];
                    if ('number' != typeof m) {
                        if (!l)
                            if (4 & r) {
                                if (
                                    ((r = 2 | (1 & r)),
                                    ('' !== m && !Ey(e, m, n)) ||
                                        ('' === m && 1 === t.length))
                                ) {
                                    if (Vs(r)) return !1;
                                    l = !0;
                                }
                            } else {
                                const O = 8 & r ? m : t[++h];
                                if (8 & r && null !== e.attrs) {
                                    if (!vy(e.attrs, O, n)) {
                                        if (Vs(r)) return !1;
                                        l = !0;
                                    }
                                    continue;
                                }
                                const G = Cy(8 & r ? 'class' : m, i, xd(e), n);
                                if (-1 === G) {
                                    if (Vs(r)) return !1;
                                    l = !0;
                                    continue;
                                }
                                if ('' !== O) {
                                    let me;
                                    me = G > s ? '' : i[G + 1].toLowerCase();
                                    const Me = 8 & r ? me : null;
                                    if (
                                        (Me && -1 !== Rd(Me, O, 0)) ||
                                        (2 & r && O !== me)
                                    ) {
                                        if (Vs(r)) return !1;
                                        l = !0;
                                    }
                                }
                            }
                    } else {
                        if (!l && !Vs(r) && !Vs(m)) return !1;
                        if (l && Vs(m)) continue;
                        (l = !1), (r = m | (1 & r));
                    }
                }
                return Vs(r) || l;
            }
            function Vs(e) {
                return 0 == (1 & e);
            }
            function Cy(e, t, n, r) {
                if (null === t) return -1;
                let i = 0;
                if (r || !n) {
                    let s = !1;
                    for (; i < t.length; ) {
                        const l = t[i];
                        if (l === e) return i;
                        if (3 === l || 6 === l) s = !0;
                        else {
                            if (1 === l || 2 === l) {
                                let h = t[++i];
                                for (; 'string' == typeof h; ) h = t[++i];
                                continue;
                            }
                            if (4 === l) break;
                            if (0 === l) {
                                i += 4;
                                continue;
                            }
                        }
                        i += s ? 1 : 2;
                    }
                    return -1;
                }
                return (function wy(e, t) {
                    let n = e.indexOf(4);
                    if (n > -1)
                        for (n++; n < e.length; ) {
                            const r = e[n];
                            if ('number' == typeof r) return -1;
                            if (r === t) return n;
                            n++;
                        }
                    return -1;
                })(t, e);
            }
            function Nd(e, t, n = !1) {
                for (let r = 0; r < t.length; r++)
                    if (Dy(e, t[r], n)) return !0;
                return !1;
            }
            function Ty(e, t) {
                e: for (let n = 0; n < t.length; n++) {
                    const r = t[n];
                    if (e.length === r.length) {
                        for (let i = 0; i < e.length; i++)
                            if (e[i] !== r[i]) continue e;
                        return !0;
                    }
                }
                return !1;
            }
            function Ld(e, t) {
                return e ? ':not(' + t.trim() + ')' : t;
            }
            function Sy(e) {
                let t = e[0],
                    n = 1,
                    r = 2,
                    i = '',
                    s = !1;
                for (; n < e.length; ) {
                    let l = e[n];
                    if ('string' == typeof l)
                        if (2 & r) {
                            const h = e[++n];
                            i +=
                                '[' +
                                l +
                                (h.length > 0 ? '="' + h + '"' : '') +
                                ']';
                        } else 8 & r ? (i += '.' + l) : 4 & r && (i += ' ' + l);
                    else
                        '' !== i && !Vs(l) && ((t += Ld(s, i)), (i = '')),
                            (r = l),
                            (s = s || !Vs(r));
                    n++;
                }
                return '' !== i && (t += Ld(s, i)), t;
            }
            const pn = {};
            function kd(e) {
                Bd(an(), et(), kr() + e, ys());
            }
            function Bd(e, t, n, r) {
                if (!r)
                    if (3 == (3 & t[2])) {
                        const s = e.preOrderCheckHooks;
                        null !== s && ls(t, s, n);
                    } else {
                        const s = e.preOrderHooks;
                        null !== s && Ur(t, s, 0, n);
                    }
                Ui(n);
            }
            function ul(e, t) {
                return (e << 17) | (t << 2);
            }
            function Us(e) {
                return (e >> 17) & 32767;
            }
            function ou(e) {
                return 2 | e;
            }
            function _o(e) {
                return (131068 & e) >> 2;
            }
            function au(e, t) {
                return (-131069 & e) | (t << 2);
            }
            function lu(e) {
                return 1 | e;
            }
            function Zd(e, t) {
                const n = e.contentQueries;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2) {
                        const i = n[r],
                            s = n[r + 1];
                        if (-1 !== s) {
                            const l = e.data[s];
                            In(i), l.contentQueries(2, t[s], s);
                        }
                    }
            }
            function xa(e, t, n, r, i, s, l, h, m, O) {
                const F = t.blueprint.slice();
                return (
                    (F[0] = i),
                    (F[2] = 140 | r),
                    ci(F),
                    (F[3] = F[15] = e),
                    (F[8] = n),
                    (F[10] = l || (e && e[10])),
                    (F[11] = h || (e && e[11])),
                    (F[12] = m || (e && e[12]) || null),
                    (F[9] = O || (e && e[9]) || null),
                    (F[6] = s),
                    (F[16] = 2 == t.type ? e[16] : F),
                    F
                );
            }
            function Qo(e, t, n, r, i) {
                let s = e.data[t];
                if (null === s)
                    (s = (function yu(e, t, n, r, i) {
                        const s = gs(),
                            l = ms(),
                            m = (e.data[t] = (function Wy(e, t, n, r, i, s) {
                                return {
                                    type: n,
                                    index: r,
                                    insertBeforeIndex: null,
                                    injectorIndex: t ? t.injectorIndex : -1,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    propertyBindings: null,
                                    flags: 0,
                                    providerIndexes: 0,
                                    value: i,
                                    attrs: s,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tViews: null,
                                    next: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: t,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0,
                                };
                            })(0, l ? s : s && s.parent, n, t, r, i));
                        return (
                            null === e.firstChild && (e.firstChild = m),
                            null !== s &&
                                (l
                                    ? null == s.child &&
                                      null !== m.parent &&
                                      (s.child = m)
                                    : null === s.next && (s.next = m)),
                            m
                        );
                    })(e, t, n, r, i)),
                        (function D() {
                            return Vt.lFrame.inI18n;
                        })() && (s.flags |= 64);
                else if (64 & s.type) {
                    (s.type = n), (s.value = r), (s.attrs = i);
                    const l = (function xi() {
                        const e = Vt.lFrame,
                            t = e.currentTNode;
                        return e.isParent ? t : t.parent;
                    })();
                    s.injectorIndex = null === l ? -1 : l.injectorIndex;
                }
                return Rr(s, !0), s;
            }
            function Jo(e, t, n, r) {
                if (0 === n) return -1;
                const i = t.length;
                for (let s = 0; s < n; s++)
                    t.push(r), e.blueprint.push(r), e.data.push(null);
                return i;
            }
            function Na(e, t, n) {
                Ei(t);
                try {
                    const r = e.viewQuery;
                    null !== r && Tu(1, r, n);
                    const i = e.template;
                    null !== i && qd(e, t, i, 1, n),
                        e.firstCreatePass && (e.firstCreatePass = !1),
                        e.staticContentQueries && Zd(e, t),
                        e.staticViewQueries && Tu(2, e.viewQuery, n);
                    const s = e.components;
                    null !== s &&
                        (function Hy(e, t) {
                            for (let n = 0; n < t.length; n++) u_(e, t[n]);
                        })(t, s);
                } catch (r) {
                    throw (
                        (e.firstCreatePass &&
                            ((e.incompleteFirstPass = !0),
                            (e.firstCreatePass = !1)),
                        r)
                    );
                } finally {
                    (t[2] &= -5), Os();
                }
            }
            function Xo(e, t, n, r) {
                const i = t[2];
                if (256 == (256 & i)) return;
                Ei(t);
                const s = ys();
                try {
                    ci(t),
                        (function Ms(e) {
                            return (Vt.lFrame.bindingIndex = e);
                        })(e.bindingStartIndex),
                        null !== n && qd(e, t, n, 2, r);
                    const l = 3 == (3 & i);
                    if (!s)
                        if (l) {
                            const O = e.preOrderCheckHooks;
                            null !== O && ls(t, O, null);
                        } else {
                            const O = e.preOrderHooks;
                            null !== O && Ur(t, O, 0, null), Zs(t, 0);
                        }
                    if (
                        ((function a_(e) {
                            for (let t = ql(e); null !== t; t = Ql(t)) {
                                if (!t[2]) continue;
                                const n = t[9];
                                for (let r = 0; r < n.length; r++) {
                                    const i = n[r],
                                        s = i[3];
                                    0 == (1024 & i[2]) && Wr(s, 1),
                                        (i[2] |= 1024);
                                }
                            }
                        })(t),
                        (function o_(e) {
                            for (let t = ql(e); null !== t; t = Ql(t))
                                for (let n = 10; n < t.length; n++) {
                                    const r = t[n],
                                        i = r[1];
                                    Pn(r) && Xo(i, r, i.template, r[8]);
                                }
                        })(t),
                        null !== e.contentQueries && Zd(e, t),
                        !s)
                    )
                        if (l) {
                            const O = e.contentCheckHooks;
                            null !== O && ls(t, O);
                        } else {
                            const O = e.contentHooks;
                            null !== O && Ur(t, O, 1), Zs(t, 1);
                        }
                    !(function Uy(e, t) {
                        const n = e.hostBindingOpCodes;
                        if (null !== n)
                            try {
                                for (let r = 0; r < n.length; r++) {
                                    const i = n[r];
                                    if (i < 0) Ui(~i);
                                    else {
                                        const s = i,
                                            l = n[++r],
                                            h = n[++r];
                                        g(l, s), h(2, t[s]);
                                    }
                                }
                            } finally {
                                Ui(-1);
                            }
                    })(e, t);
                    const h = e.components;
                    null !== h &&
                        (function jy(e, t) {
                            for (let n = 0; n < t.length; n++) l_(e, t[n]);
                        })(t, h);
                    const m = e.viewQuery;
                    if ((null !== m && Tu(2, m, r), !s))
                        if (l) {
                            const O = e.viewCheckHooks;
                            null !== O && ls(t, O);
                        } else {
                            const O = e.viewHooks;
                            null !== O && Ur(t, O, 2), Zs(t, 2);
                        }
                    !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
                        s || (t[2] &= -73),
                        1024 & t[2] && ((t[2] &= -1025), Wr(t[3], -1));
                } finally {
                    Os();
                }
            }
            function $y(e, t, n, r) {
                const i = t[10],
                    s = !ys(),
                    l = jt(t);
                try {
                    s && !l && i.begin && i.begin(),
                        l && Na(e, t, r),
                        Xo(e, t, n, r);
                } finally {
                    s && !l && i.end && i.end();
                }
            }
            function qd(e, t, n, r, i) {
                const s = kr(),
                    l = 2 & r;
                try {
                    Ui(-1), l && t.length > 20 && Bd(e, t, 20, ys()), n(r, i);
                } finally {
                    Ui(s);
                }
            }
            function Qd(e, t, n) {
                if (yn(t)) {
                    const i = t.directiveEnd;
                    for (let s = t.directiveStart; s < i; s++) {
                        const l = e.data[s];
                        l.contentQueries && l.contentQueries(1, n[s], s);
                    }
                }
            }
            function _u(e, t, n) {
                !os() ||
                    ((function Jy(e, t, n, r) {
                        const i = n.directiveStart,
                            s = n.directiveEnd;
                        e.firstCreatePass || cs(n, t), Li(r, t);
                        const l = n.initialInputs;
                        for (let h = i; h < s; h++) {
                            const m = e.data[h],
                                O = on(m);
                            O && r_(t, n, m);
                            const F = Rt(t, e, h, n);
                            Li(F, t),
                                null !== l && i_(0, h - i, F, m, 0, l),
                                O && (At(n.index, t)[8] = F);
                        }
                    })(e, t, n, qe(n, t)),
                    128 == (128 & n.flags) &&
                        (function Xy(e, t, n) {
                            const r = n.directiveStart,
                                i = n.directiveEnd,
                                l = n.index,
                                h = (function x() {
                                    return Vt.lFrame.currentDirectiveIndex;
                                })();
                            try {
                                Ui(l);
                                for (let m = r; m < i; m++) {
                                    const O = e.data[m],
                                        F = t[m];
                                    Ne(m),
                                        (null !== O.hostBindings ||
                                            0 !== O.hostVars ||
                                            null !== O.hostAttrs) &&
                                            af(O, F);
                                }
                            } finally {
                                Ui(-1), Ne(h);
                            }
                        })(e, t, n));
            }
            function vu(e, t, n = qe) {
                const r = t.localNames;
                if (null !== r) {
                    let i = t.index + 1;
                    for (let s = 0; s < r.length; s += 2) {
                        const l = r[s + 1],
                            h = -1 === l ? n(t, e) : e[l];
                        e[i++] = h;
                    }
                }
            }
            function Jd(e) {
                const t = e.tView;
                return null === t || t.incompleteFirstPass
                    ? (e.tView = fl(
                          1,
                          null,
                          e.template,
                          e.decls,
                          e.vars,
                          e.directiveDefs,
                          e.pipeDefs,
                          e.viewQuery,
                          e.schemas,
                          e.consts
                      ))
                    : t;
            }
            function fl(e, t, n, r, i, s, l, h, m, O) {
                const F = 20 + r,
                    G = F + i,
                    me = (function Gy(e, t) {
                        const n = [];
                        for (let r = 0; r < t; r++) n.push(r < e ? null : pn);
                        return n;
                    })(F, G),
                    Me = 'function' == typeof O ? O() : O;
                return (me[1] = {
                    type: e,
                    blueprint: me,
                    template: n,
                    queries: null,
                    viewQuery: h,
                    declTNode: t,
                    data: me.slice().fill(null, F),
                    bindingStartIndex: F,
                    expandoStartIndex: G,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: 'function' == typeof s ? s() : s,
                    pipeRegistry: 'function' == typeof l ? l() : l,
                    firstChild: null,
                    schemas: m,
                    consts: Me,
                    incompleteFirstPass: !1,
                });
            }
            function tf(e, t, n, r) {
                const i = hf(t);
                null === n
                    ? i.push(r)
                    : (i.push(n),
                      e.firstCreatePass && pf(e).push(r, i.length - 1));
            }
            function nf(e, t, n) {
                for (let r in e)
                    if (e.hasOwnProperty(r)) {
                        const i = e[r];
                        (n = null === n ? {} : n).hasOwnProperty(r)
                            ? n[r].push(t, i)
                            : (n[r] = [t, i]);
                    }
                return n;
            }
            function Eu(e, t, n, r) {
                let i = !1;
                if (os()) {
                    const s = (function e_(e, t, n) {
                            const r = e.directiveRegistry;
                            let i = null;
                            if (r)
                                for (let s = 0; s < r.length; s++) {
                                    const l = r[s];
                                    Nd(n, l.selectors, !1) &&
                                        (i || (i = []),
                                        u(cs(n, t), e, l.type),
                                        on(l)
                                            ? (lf(e, n), i.unshift(l))
                                            : i.push(l));
                                }
                            return i;
                        })(e, t, n),
                        l = null === r ? null : { '': -1 };
                    if (null !== s) {
                        (i = !0), uf(n, e.data.length, s.length);
                        for (let F = 0; F < s.length; F++) {
                            const G = s[F];
                            G.providersResolver && G.providersResolver(G);
                        }
                        let h = !1,
                            m = !1,
                            O = Jo(e, t, s.length, null);
                        for (let F = 0; F < s.length; F++) {
                            const G = s[F];
                            (n.mergedAttrs = qs(n.mergedAttrs, G.hostAttrs)),
                                cf(e, n, t, O, G),
                                n_(O, G, l),
                                null !== G.contentQueries && (n.flags |= 8),
                                (null !== G.hostBindings ||
                                    null !== G.hostAttrs ||
                                    0 !== G.hostVars) &&
                                    (n.flags |= 128);
                            const me = G.type.prototype;
                            !h &&
                                (me.ngOnChanges ||
                                    me.ngOnInit ||
                                    me.ngDoCheck) &&
                                ((
                                    e.preOrderHooks || (e.preOrderHooks = [])
                                ).push(n.index),
                                (h = !0)),
                                !m &&
                                    (me.ngOnChanges || me.ngDoCheck) &&
                                    ((
                                        e.preOrderCheckHooks ||
                                        (e.preOrderCheckHooks = [])
                                    ).push(n.index),
                                    (m = !0)),
                                O++;
                        }
                        !(function zy(e, t) {
                            const r = t.directiveEnd,
                                i = e.data,
                                s = t.attrs,
                                l = [];
                            let h = null,
                                m = null;
                            for (let O = t.directiveStart; O < r; O++) {
                                const F = i[O],
                                    G = F.inputs,
                                    me = null === s || xd(t) ? null : s_(G, s);
                                l.push(me),
                                    (h = nf(G, O, h)),
                                    (m = nf(F.outputs, O, m));
                            }
                            null !== h &&
                                (h.hasOwnProperty('class') && (t.flags |= 16),
                                h.hasOwnProperty('style') && (t.flags |= 32)),
                                (t.initialInputs = l),
                                (t.inputs = h),
                                (t.outputs = m);
                        })(e, n);
                    }
                    l &&
                        (function t_(e, t, n) {
                            if (t) {
                                const r = (e.localNames = []);
                                for (let i = 0; i < t.length; i += 2) {
                                    const s = n[t[i + 1]];
                                    if (null == s) throw new xe(-301, !1);
                                    r.push(t[i], s);
                                }
                            }
                        })(n, r, l);
                }
                return (n.mergedAttrs = qs(n.mergedAttrs, n.attrs)), i;
            }
            function sf(e, t, n, r, i, s) {
                const l = s.hostBindings;
                if (l) {
                    let h = e.hostBindingOpCodes;
                    null === h && (h = e.hostBindingOpCodes = []);
                    const m = ~t.index;
                    (function Qy(e) {
                        let t = e.length;
                        for (; t > 0; ) {
                            const n = e[--t];
                            if ('number' == typeof n && n < 0) return n;
                        }
                        return 0;
                    })(h) != m && h.push(m),
                        h.push(r, i, l);
                }
            }
            function af(e, t) {
                null !== e.hostBindings && e.hostBindings(1, t);
            }
            function lf(e, t) {
                (t.flags |= 2),
                    (e.components || (e.components = [])).push(t.index);
            }
            function n_(e, t, n) {
                if (n) {
                    if (t.exportAs)
                        for (let r = 0; r < t.exportAs.length; r++)
                            n[t.exportAs[r]] = e;
                    on(t) && (n[''] = e);
                }
            }
            function uf(e, t, n) {
                (e.flags |= 1),
                    (e.directiveStart = t),
                    (e.directiveEnd = t + n),
                    (e.providerIndexes = t);
            }
            function cf(e, t, n, r, i) {
                e.data[r] = i;
                const s = i.factory || (i.factory = ri(i.type)),
                    l = new Ni(s, on(i), null);
                (e.blueprint[r] = l),
                    (n[r] = l),
                    sf(e, t, 0, r, Jo(e, n, i.hostVars, pn), i);
            }
            function r_(e, t, n) {
                const r = qe(t, e),
                    i = Jd(n),
                    s = e[10],
                    l = hl(
                        e,
                        xa(
                            e,
                            i,
                            null,
                            n.onPush ? 64 : 16,
                            r,
                            t,
                            s,
                            s.createRenderer(r, n),
                            null,
                            null
                        )
                    );
                e[t.index] = l;
            }
            function so(e, t, n, r, i, s) {
                const l = qe(e, t);
                !(function Du(e, t, n, r, i, s, l) {
                    if (null == s)
                        Nt(e)
                            ? e.removeAttribute(t, i, n)
                            : t.removeAttribute(i);
                    else {
                        const h = null == l ? de(s) : l(s, r || '', i);
                        Nt(e)
                            ? e.setAttribute(t, i, h, n)
                            : n
                            ? t.setAttributeNS(n, i, h)
                            : t.setAttribute(i, h);
                    }
                })(t[11], l, s, e.value, n, r, i);
            }
            function i_(e, t, n, r, i, s) {
                const l = s[t];
                if (null !== l) {
                    const h = r.setInput;
                    for (let m = 0; m < l.length; ) {
                        const O = l[m++],
                            F = l[m++],
                            G = l[m++];
                        null !== h ? r.setInput(n, G, O, F) : (n[F] = G);
                    }
                }
            }
            function s_(e, t) {
                let n = null,
                    r = 0;
                for (; r < t.length; ) {
                    const i = t[r];
                    if (0 !== i)
                        if (5 !== i) {
                            if ('number' == typeof i) break;
                            e.hasOwnProperty(i) &&
                                (null === n && (n = []),
                                n.push(i, e[i], t[r + 1])),
                                (r += 2);
                        } else r += 2;
                    else r += 4;
                }
                return n;
            }
            function df(e, t, n, r) {
                return new Array(e, !0, !1, t, null, 0, r, n, null, null);
            }
            function l_(e, t) {
                const n = At(t, e);
                if (Pn(n)) {
                    const r = n[1];
                    80 & n[2] ? Xo(r, n, r.template, n[8]) : n[5] > 0 && Cu(n);
                }
            }
            function Cu(e) {
                for (let r = ql(e); null !== r; r = Ql(r))
                    for (let i = 10; i < r.length; i++) {
                        const s = r[i];
                        if (1024 & s[2]) {
                            const l = s[1];
                            Xo(l, s, l.template, s[8]);
                        } else s[5] > 0 && Cu(s);
                    }
                const n = e[1].components;
                if (null !== n)
                    for (let r = 0; r < n.length; r++) {
                        const i = At(n[r], e);
                        Pn(i) && i[5] > 0 && Cu(i);
                    }
            }
            function u_(e, t) {
                const n = At(t, e),
                    r = n[1];
                (function c_(e, t) {
                    for (let n = t.length; n < e.blueprint.length; n++)
                        t.push(e.blueprint[n]);
                })(r, n),
                    Na(r, n, n[8]);
            }
            function hl(e, t) {
                return e[13] ? (e[14][4] = t) : (e[13] = t), (e[14] = t), t;
            }
            function bu(e) {
                for (; e; ) {
                    e[2] |= 64;
                    const t = Ra(e);
                    if (Mr(e) && !t) return e;
                    e = t;
                }
                return null;
            }
            function wu(e, t, n) {
                const r = t[10];
                r.begin && r.begin();
                try {
                    Xo(e, t, e.template, n);
                } catch (i) {
                    throw (mf(t, i), i);
                } finally {
                    r.end && r.end();
                }
            }
            function ff(e) {
                !(function Au(e) {
                    for (let t = 0; t < e.components.length; t++) {
                        const n = e.components[t],
                            r = Wl(n),
                            i = r[1];
                        $y(i, r, i.template, n);
                    }
                })(e[8]);
            }
            function Tu(e, t, n) {
                In(0), t(e, n);
            }
            const p_ = (() => Promise.resolve(null))();
            function hf(e) {
                return e[7] || (e[7] = []);
            }
            function pf(e) {
                return e.cleanup || (e.cleanup = []);
            }
            function mf(e, t) {
                const n = e[9],
                    r = n ? n.get(Pa, null) : null;
                r && r.handleError(t);
            }
            function yf(e, t, n, r, i) {
                for (let s = 0; s < n.length; ) {
                    const l = n[s++],
                        h = n[s++],
                        m = t[l],
                        O = e.data[l];
                    null !== O.setInput ? O.setInput(m, i, r, h) : (m[h] = i);
                }
            }
            function vo(e, t, n) {
                const r = ke(t, e);
                !(function yd(e, t, n) {
                    Nt(e) ? e.setValue(t, n) : (t.textContent = n);
                })(e[11], r, n);
            }
            function pl(e, t, n) {
                let r = n ? e.styles : null,
                    i = n ? e.classes : null,
                    s = 0;
                if (null !== t)
                    for (let l = 0; l < t.length; l++) {
                        const h = t[l];
                        'number' == typeof h
                            ? (s = h)
                            : 1 == s
                            ? (i = Y(i, h))
                            : 2 == s && (r = Y(r, h + ': ' + t[++l] + ';'));
                    }
                n ? (e.styles = r) : (e.stylesWithoutHost = r),
                    n ? (e.classes = i) : (e.classesWithoutHost = i);
            }
            const Su = new It('INJECTOR', -1);
            class _f {
                get(t, n = T) {
                    if (n === T) {
                        const r = new Error(
                            `NullInjectorError: No provider for ${se(t)}!`
                        );
                        throw ((r.name = 'NullInjectorError'), r);
                    }
                    return n;
                }
            }
            const Iu = new It('Set Injector scope.'),
                La = {},
                y_ = {};
            let Mu;
            function vf() {
                return void 0 === Mu && (Mu = new _f()), Mu;
            }
            function Ef(e, t = null, n = null, r) {
                const i = Df(e, t, n, r);
                return i._resolveInjectorDefTypes(), i;
            }
            function Df(e, t = null, n = null, r) {
                return new __(e, n, t || vf(), r);
            }
            class __ {
                constructor(t, n, r, i = null) {
                    (this.parent = r),
                        (this.records = new Map()),
                        (this.injectorDefTypes = new Set()),
                        (this.onDestroy = new Set()),
                        (this._destroyed = !1);
                    const s = [];
                    n && fi(n, (h) => this.processProvider(h, t, n)),
                        fi([t], (h) => this.processInjectorType(h, [], s)),
                        this.records.set(Su, ea(void 0, this));
                    const l = this.records.get(Iu);
                    (this.scope = null != l ? l.value : null),
                        (this.source =
                            i || ('object' == typeof t ? null : se(t)));
                }
                get destroyed() {
                    return this._destroyed;
                }
                destroy() {
                    this.assertNotDestroyed(), (this._destroyed = !0);
                    try {
                        this.onDestroy.forEach((t) => t.ngOnDestroy());
                    } finally {
                        this.records.clear(),
                            this.onDestroy.clear(),
                            this.injectorDefTypes.clear();
                    }
                }
                get(t, n = T, r = St.Default) {
                    this.assertNotDestroyed();
                    const i = Dr(this),
                        s = gn(void 0);
                    try {
                        if (!(r & St.SkipSelf)) {
                            let h = this.records.get(t);
                            if (void 0 === h) {
                                const m =
                                    (function T_(e) {
                                        return (
                                            'function' == typeof e ||
                                            ('object' == typeof e &&
                                                e instanceof It)
                                        );
                                    })(t) && Jt(t);
                                (h =
                                    m && this.injectableDefInScope(m)
                                        ? ea(Ou(t), La)
                                        : null),
                                    this.records.set(t, h);
                            }
                            if (null != h) return this.hydrate(t, h);
                        }
                        return (r & St.Self ? vf() : this.parent).get(
                            t,
                            (n = r & St.Optional && n === T ? null : n)
                        );
                    } catch (l) {
                        if ('NullInjectorError' === l.name) {
                            if (((l[ee] = l[ee] || []).unshift(se(t)), i))
                                throw l;
                            return (function Io(e, t, n, r) {
                                const i = e[ee];
                                throw (
                                    (t[Ot] && i.unshift(t[Ot]),
                                    (e.message = (function el(
                                        e,
                                        t,
                                        n,
                                        r = null
                                    ) {
                                        e =
                                            e &&
                                            '\n' === e.charAt(0) &&
                                            '\u0275' == e.charAt(1)
                                                ? e.substr(2)
                                                : e;
                                        let i = se(t);
                                        if (Array.isArray(t))
                                            i = t.map(se).join(' -> ');
                                        else if ('object' == typeof t) {
                                            let s = [];
                                            for (let l in t)
                                                if (t.hasOwnProperty(l)) {
                                                    let h = t[l];
                                                    s.push(
                                                        l +
                                                            ':' +
                                                            ('string' ==
                                                            typeof h
                                                                ? JSON.stringify(
                                                                      h
                                                                  )
                                                                : se(h))
                                                    );
                                                }
                                            i = `{${s.join(', ')}}`;
                                        }
                                        return `${n}${
                                            r ? '(' + r + ')' : ''
                                        }[${i}]: ${e.replace(ze, '\n  ')}`;
                                    })('\n' + e.message, i, n, r)),
                                    (e.ngTokenPath = i),
                                    (e[ee] = null),
                                    e)
                                );
                            })(l, t, 'R3InjectorError', this.source);
                        }
                        throw l;
                    } finally {
                        gn(s), Dr(i);
                    }
                }
                _resolveInjectorDefTypes() {
                    this.injectorDefTypes.forEach((t) => this.get(t));
                }
                toString() {
                    const t = [];
                    return (
                        this.records.forEach((r, i) => t.push(se(i))),
                        `R3Injector[${t.join(', ')}]`
                    );
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new xe(205, !1);
                }
                processInjectorType(t, n, r) {
                    if (!(t = ie(t))) return !1;
                    let i = Rn(t);
                    const s = (null == i && t.ngModule) || void 0,
                        l = void 0 === s ? t : s,
                        h = -1 !== r.indexOf(l);
                    if ((void 0 !== s && (i = Rn(s)), null == i)) return !1;
                    if (null != i.imports && !h) {
                        let F;
                        r.push(l);
                        try {
                            fi(i.imports, (G) => {
                                this.processInjectorType(G, n, r) &&
                                    (void 0 === F && (F = []), F.push(G));
                            });
                        } finally {
                        }
                        if (void 0 !== F)
                            for (let G = 0; G < F.length; G++) {
                                const { ngModule: me, providers: Me } = F[G];
                                fi(Me, (Qe) =>
                                    this.processProvider(Qe, me, Me || Z)
                                );
                            }
                    }
                    this.injectorDefTypes.add(l);
                    const m = ri(l) || (() => new l());
                    this.records.set(l, ea(m, La));
                    const O = i.providers;
                    if (null != O && !h) {
                        const F = t;
                        fi(O, (G) => this.processProvider(G, F, O));
                    }
                    return void 0 !== s && void 0 !== t.providers;
                }
                processProvider(t, n, r) {
                    let i = ta((t = ie(t))) ? t : ie(t && t.provide);
                    const s = (function E_(e, t, n) {
                        return bf(e) ? ea(void 0, e.useValue) : ea(Cf(e), La);
                    })(t);
                    if (ta(t) || !0 !== t.multi) this.records.get(i);
                    else {
                        let l = this.records.get(i);
                        l ||
                            ((l = ea(void 0, La, !0)),
                            (l.factory = () => Lo(l.multi)),
                            this.records.set(i, l)),
                            (i = t),
                            l.multi.push(t);
                    }
                    this.records.set(i, s);
                }
                hydrate(t, n) {
                    return (
                        n.value === La &&
                            ((n.value = y_), (n.value = n.factory())),
                        'object' == typeof n.value &&
                            n.value &&
                            (function w_(e) {
                                return (
                                    null !== e &&
                                    'object' == typeof e &&
                                    'function' == typeof e.ngOnDestroy
                                );
                            })(n.value) &&
                            this.onDestroy.add(n.value),
                        n.value
                    );
                }
                injectableDefInScope(t) {
                    if (!t.providedIn) return !1;
                    const n = ie(t.providedIn);
                    return 'string' == typeof n
                        ? 'any' === n || n === this.scope
                        : this.injectorDefTypes.has(n);
                }
            }
            function Ou(e) {
                const t = Jt(e),
                    n = null !== t ? t.factory : ri(e);
                if (null !== n) return n;
                if (e instanceof It) throw new xe(204, !1);
                if (e instanceof Function)
                    return (function v_(e) {
                        const t = e.length;
                        if (t > 0) throw (bs(t, '?'), new xe(204, !1));
                        const n = (function Dn(e) {
                            const t = e && (e[tr] || e[Hn]);
                            if (t) {
                                const n = (function cn(e) {
                                    if (e.hasOwnProperty('name')) return e.name;
                                    const t = ('' + e).match(
                                        /^function\s*([^\s(]+)/
                                    );
                                    return null === t ? '' : t[1];
                                })(e);
                                return (
                                    console.warn(
                                        `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`
                                    ),
                                    t
                                );
                            }
                            return null;
                        })(e);
                        return null !== n ? () => n.factory(e) : () => new e();
                    })(e);
                throw new xe(204, !1);
            }
            function Cf(e, t, n) {
                let r;
                if (ta(e)) {
                    const i = ie(e);
                    return ri(i) || Ou(i);
                }
                if (bf(e)) r = () => ie(e.useValue);
                else if (
                    (function C_(e) {
                        return !(!e || !e.useFactory);
                    })(e)
                )
                    r = () => e.useFactory(...Lo(e.deps || []));
                else if (
                    (function D_(e) {
                        return !(!e || !e.useExisting);
                    })(e)
                )
                    r = () => gr(ie(e.useExisting));
                else {
                    const i = ie(e && (e.useClass || e.provide));
                    if (
                        !(function A_(e) {
                            return !!e.deps;
                        })(e)
                    )
                        return ri(i) || Ou(i);
                    r = () => new i(...Lo(e.deps));
                }
                return r;
            }
            function ea(e, t, n = !1) {
                return { factory: e, value: t, multi: n ? [] : void 0 };
            }
            function bf(e) {
                return null !== e && 'object' == typeof e && Mt in e;
            }
            function ta(e) {
                return 'function' == typeof e;
            }
            let ws = (() => {
                class e {
                    static create(n, r) {
                        var i;
                        if (Array.isArray(n)) return Ef({ name: '' }, r, n, '');
                        {
                            const s =
                                null !== (i = n.name) && void 0 !== i ? i : '';
                            return Ef({ name: s }, n.parent, n.providers, s);
                        }
                    }
                }
                return (
                    (e.THROW_IF_NOT_FOUND = T),
                    (e.NULL = new _f()),
                    (e.ɵprov = Ft({
                        token: e,
                        providedIn: 'any',
                        factory: () => gr(Su),
                    })),
                    (e.__NG_ELEMENT_ID__ = -1),
                    e
                );
            })();
            function x_(e, t) {
                Rs(Wl(e)[1], ir());
            }
            function Fu(e) {
                let t = (function Nf(e) {
                        return Object.getPrototypeOf(e.prototype).constructor;
                    })(e.type),
                    n = !0;
                const r = [e];
                for (; t; ) {
                    let i;
                    if (on(e)) i = t.ɵcmp || t.ɵdir;
                    else {
                        if (t.ɵcmp) throw new xe(903, '');
                        i = t.ɵdir;
                    }
                    if (i) {
                        if (n) {
                            r.push(i);
                            const l = e;
                            (l.inputs = xu(e.inputs)),
                                (l.declaredInputs = xu(e.declaredInputs)),
                                (l.outputs = xu(e.outputs));
                            const h = i.hostBindings;
                            h && B_(e, h);
                            const m = i.viewQuery,
                                O = i.contentQueries;
                            if (
                                (m && L_(e, m),
                                O && k_(e, O),
                                re(e.inputs, i.inputs),
                                re(e.declaredInputs, i.declaredInputs),
                                re(e.outputs, i.outputs),
                                on(i) && i.data.animation)
                            ) {
                                const F = e.data;
                                F.animation = (F.animation || []).concat(
                                    i.data.animation
                                );
                            }
                        }
                        const s = i.features;
                        if (s)
                            for (let l = 0; l < s.length; l++) {
                                const h = s[l];
                                h && h.ngInherit && h(e), h === Fu && (n = !1);
                            }
                    }
                    t = Object.getPrototypeOf(t);
                }
                !(function N_(e) {
                    let t = 0,
                        n = null;
                    for (let r = e.length - 1; r >= 0; r--) {
                        const i = e[r];
                        (i.hostVars = t += i.hostVars),
                            (i.hostAttrs = qs(
                                i.hostAttrs,
                                (n = qs(n, i.hostAttrs))
                            ));
                    }
                })(r);
            }
            function xu(e) {
                return e === $t ? {} : e === Z ? [] : e;
            }
            function L_(e, t) {
                const n = e.viewQuery;
                e.viewQuery = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            function k_(e, t) {
                const n = e.contentQueries;
                e.contentQueries = n
                    ? (r, i, s) => {
                          t(r, i, s), n(r, i, s);
                      }
                    : t;
            }
            function B_(e, t) {
                const n = e.hostBindings;
                e.hostBindings = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            let gl = null;
            function na() {
                if (!gl) {
                    const e = Lt.Symbol;
                    if (e && e.iterator) gl = e.iterator;
                    else {
                        const t = Object.getOwnPropertyNames(Map.prototype);
                        for (let n = 0; n < t.length; ++n) {
                            const r = t[n];
                            'entries' !== r &&
                                'size' !== r &&
                                Map.prototype[r] === Map.prototype.entries &&
                                (gl = r);
                        }
                    }
                }
                return gl;
            }
            function ka(e) {
                return (
                    !!Nu(e) &&
                    (Array.isArray(e) || (!(e instanceof Map) && na() in e))
                );
            }
            function Nu(e) {
                return (
                    null !== e &&
                    ('function' == typeof e || 'object' == typeof e)
                );
            }
            function oo(e, t, n) {
                return (e[t] = n);
            }
            function Ba(e, t) {
                return e[t];
            }
            function ki(e, t, n) {
                return !Object.is(e[t], n) && ((e[t] = n), !0);
            }
            function Vo(e, t, n, r) {
                const i = ki(e, t, n);
                return ki(e, t + 1, r) || i;
            }
            function Ts(e, t, n, r, i, s) {
                const l = Vo(e, t, n, r);
                return Vo(e, t + 2, i, s) || l;
            }
            function Lu(e, t, n, r) {
                const i = et();
                return ki(i, _i(), t) && (an(), so(pr(), i, e, t, n, r)), Lu;
            }
            function Wf(e, t, n, r, i, s, l, h) {
                const m = et(),
                    O = an(),
                    F = e + 20,
                    G = O.firstCreatePass
                        ? (function W_(e, t, n, r, i, s, l, h, m) {
                              const O = t.consts,
                                  F = Qo(t, e, 4, l || null, Kn(O, h));
                              Eu(t, n, F, Kn(O, m)), Rs(t, F);
                              const G = (F.tViews = fl(
                                  2,
                                  F,
                                  r,
                                  i,
                                  s,
                                  t.directiveRegistry,
                                  t.pipeRegistry,
                                  null,
                                  t.schemas,
                                  O
                              ));
                              return (
                                  null !== t.queries &&
                                      (t.queries.template(t, F),
                                      (G.queries = t.queries.embeddedTView(F))),
                                  F
                              );
                          })(F, O, m, t, n, r, i, s, l)
                        : O.data[F];
                Rr(G, !1);
                const me = m[11].createComment('');
                al(O, m, me, G),
                    Li(me, m),
                    hl(m, (m[F] = df(me, m, me, G))),
                    Wn(G) && _u(O, m, G),
                    null != l && vu(m, G, h);
            }
            function zf(e) {
                return un(
                    (function Is() {
                        return Vt.lFrame.contextLView;
                    })(),
                    20 + e
                );
            }
            function Va(e, t = St.Default) {
                const n = et();
                return null === n ? gr(e, t) : q(ir(), n, ie(e), t);
            }
            function rh() {
                throw new Error('invalid');
            }
            function ju(e, t, n) {
                const r = et();
                return (
                    ki(r, _i(), t) &&
                        (function ds(e, t, n, r, i, s, l, h) {
                            const m = qe(t, n);
                            let F,
                                O = t.inputs;
                            !h && null != O && (F = O[r])
                                ? (yf(e, n, F, r, i),
                                  On(t) &&
                                      (function Yy(e, t) {
                                          const n = At(t, e);
                                          16 & n[2] || (n[2] |= 64);
                                      })(n, t.index))
                                : 3 & t.type &&
                                  ((r = (function Ky(e) {
                                      return 'class' === e
                                          ? 'className'
                                          : 'for' === e
                                          ? 'htmlFor'
                                          : 'formaction' === e
                                          ? 'formAction'
                                          : 'innerHtml' === e
                                          ? 'innerHTML'
                                          : 'readonly' === e
                                          ? 'readOnly'
                                          : 'tabindex' === e
                                          ? 'tabIndex'
                                          : e;
                                  })(r)),
                                  (i = null != l ? l(i, t.value || '', r) : i),
                                  Nt(s)
                                      ? s.setProperty(m, r, i)
                                      : po(r) ||
                                        (m.setProperty
                                            ? m.setProperty(r, i)
                                            : (m[r] = i)));
                        })(an(), pr(), r, e, t, r[11], n, !1),
                    ju
                );
            }
            function Hu(e, t, n, r, i) {
                const l = i ? 'class' : 'style';
                yf(e, n, t.inputs[l], l, r);
            }
            function $u(e, t, n, r) {
                const i = et(),
                    s = an(),
                    l = 20 + e,
                    h = i[11],
                    m = (i[l] = Xl(
                        h,
                        t,
                        (function Ps() {
                            return Vt.lFrame.currentNamespace;
                        })()
                    )),
                    O = s.firstCreatePass
                        ? (function fv(e, t, n, r, i, s, l) {
                              const h = t.consts,
                                  O = Qo(t, e, 2, i, Kn(h, s));
                              return (
                                  Eu(t, n, O, Kn(h, l)),
                                  null !== O.attrs && pl(O, O.attrs, !1),
                                  null !== O.mergedAttrs &&
                                      pl(O, O.mergedAttrs, !0),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, O),
                                  O
                              );
                          })(l, s, i, 0, t, n, r)
                        : s.data[l];
                Rr(O, !0);
                const F = O.mergedAttrs;
                null !== F && Cr(h, m, F);
                const G = O.classes;
                null !== G && su(h, m, G);
                const me = O.styles;
                null !== me && Pd(h, m, me),
                    64 != (64 & O.flags) && al(s, i, m, O),
                    0 ===
                        (function Ji() {
                            return Vt.lFrame.elementDepthCount;
                        })() && Li(m, i),
                    (function wi() {
                        Vt.lFrame.elementDepthCount++;
                    })(),
                    Wn(O) && (_u(s, i, O), Qd(s, O, i)),
                    null !== r && vu(i, O);
            }
            function Gu() {
                let e = ir();
                ms() ? Ss() : ((e = e.parent), Rr(e, !1));
                const t = e;
                !(function Vi() {
                    Vt.lFrame.elementDepthCount--;
                })();
                const n = an();
                n.firstCreatePass &&
                    (Rs(n, e), yn(e) && n.queries.elementEnd(e)),
                    null != t.classesWithoutHost &&
                        (function xs(e) {
                            return 0 != (16 & e.flags);
                        })(t) &&
                        Hu(n, t, et(), t.classesWithoutHost, !0),
                    null != t.stylesWithoutHost &&
                        (function fo(e) {
                            return 0 != (32 & e.flags);
                        })(t) &&
                        Hu(n, t, et(), t.stylesWithoutHost, !1);
            }
            function ih(e, t, n, r) {
                $u(e, t, n, r), Gu();
            }
            function Wu(e, t, n) {
                const r = et(),
                    i = an(),
                    s = e + 20,
                    l = i.firstCreatePass
                        ? (function hv(e, t, n, r, i) {
                              const s = t.consts,
                                  l = Kn(s, r),
                                  h = Qo(t, e, 8, 'ng-container', l);
                              return (
                                  null !== l && pl(h, l, !0),
                                  Eu(t, n, h, Kn(s, i)),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, h),
                                  h
                              );
                          })(s, i, r, t, n)
                        : i.data[s];
                Rr(l, !0);
                const h = (r[s] = r[11].createComment(''));
                al(i, r, h, l),
                    Li(h, r),
                    Wn(l) && (_u(i, r, l), Qd(i, l, r)),
                    null != n && vu(r, l);
            }
            function zu() {
                let e = ir();
                const t = an();
                ms() ? Ss() : ((e = e.parent), Rr(e, !1)),
                    t.firstCreatePass &&
                        (Rs(t, e), yn(e) && t.queries.elementEnd(e));
            }
            function sh(e, t, n) {
                Wu(e, t, n), zu();
            }
            function Ku(e) {
                return !!e && 'function' == typeof e.then;
            }
            function oh(e) {
                return !!e && 'function' == typeof e.subscribe;
            }
            const ah = oh;
            function Yu(e, t, n, r) {
                const i = et(),
                    s = an(),
                    l = ir();
                return (
                    (function uh(e, t, n, r, i, s, l, h) {
                        const m = Wn(r),
                            F = e.firstCreatePass && pf(e),
                            G = t[8],
                            me = hf(t);
                        let Me = !0;
                        if (3 & r.type || h) {
                            const yt = qe(r, t),
                                Pt = h ? h(yt) : yt,
                                tt = me.length,
                                Kt = h ? (jn) => h(b(jn[r.index])) : r.index;
                            if (Nt(n)) {
                                let jn = null;
                                if (
                                    (!h &&
                                        m &&
                                        (jn = (function gv(e, t, n, r) {
                                            const i = e.cleanup;
                                            if (null != i)
                                                for (
                                                    let s = 0;
                                                    s < i.length - 1;
                                                    s += 2
                                                ) {
                                                    const l = i[s];
                                                    if (
                                                        l === n &&
                                                        i[s + 1] === r
                                                    ) {
                                                        const h = t[7],
                                                            m = i[s + 2];
                                                        return h.length > m
                                                            ? h[m]
                                                            : null;
                                                    }
                                                    'string' == typeof l &&
                                                        (s += 2);
                                                }
                                            return null;
                                        })(e, t, i, r.index)),
                                    null !== jn)
                                )
                                    ((
                                        jn.__ngLastListenerFn__ || jn
                                    ).__ngNextListenerFn__ = s),
                                        (jn.__ngLastListenerFn__ = s),
                                        (Me = !1);
                                else {
                                    s = Zu(r, t, G, s, !1);
                                    const mr = n.listen(Pt, i, s);
                                    me.push(s, mr),
                                        F && F.push(i, Kt, tt, tt + 1);
                                }
                            } else
                                (s = Zu(r, t, G, s, !0)),
                                    Pt.addEventListener(i, s, l),
                                    me.push(s),
                                    F && F.push(i, Kt, tt, l);
                        } else s = Zu(r, t, G, s, !1);
                        const Qe = r.outputs;
                        let ft;
                        if (Me && null !== Qe && (ft = Qe[i])) {
                            const yt = ft.length;
                            if (yt)
                                for (let Pt = 0; Pt < yt; Pt += 2) {
                                    const hs =
                                            t[ft[Pt]][ft[Pt + 1]].subscribe(s),
                                        Ho = me.length;
                                    me.push(s, hs),
                                        F && F.push(i, r.index, Ho, -(Ho + 1));
                                }
                        }
                    })(s, i, i[11], l, e, t, !!n, r),
                    Yu
                );
            }
            function ch(e, t, n, r) {
                try {
                    return !1 !== n(r);
                } catch (i) {
                    return mf(e, i), !1;
                }
            }
            function Zu(e, t, n, r, i) {
                return function s(l) {
                    if (l === Function) return r;
                    const h = 2 & e.flags ? At(e.index, t) : t;
                    0 == (32 & t[2]) && bu(h);
                    let m = ch(t, 0, r, l),
                        O = s.__ngNextListenerFn__;
                    for (; O; )
                        (m = ch(t, 0, O, l) && m), (O = O.__ngNextListenerFn__);
                    return (
                        i &&
                            !1 === m &&
                            (l.preventDefault(), (l.returnValue = !1)),
                        m
                    );
                };
            }
            function dh(e = 1) {
                return (function es(e) {
                    return (Vt.lFrame.contextLView = (function Fo(e, t) {
                        for (; e > 0; ) (t = t[15]), e--;
                        return t;
                    })(e, Vt.lFrame.contextLView))[8];
                })(e);
            }
            function mv(e, t) {
                let n = null;
                const r = (function by(e) {
                    const t = e.attrs;
                    if (null != t) {
                        const n = t.indexOf(5);
                        if (0 == (1 & n)) return t[n + 1];
                    }
                    return null;
                })(e);
                for (let i = 0; i < t.length; i++) {
                    const s = t[i];
                    if ('*' !== s) {
                        if (null === r ? Nd(e, s, !0) : Ty(r, s)) return i;
                    } else n = i;
                }
                return n;
            }
            function fh(e) {
                const t = et()[16][6];
                if (!t.projection) {
                    const r = (t.projection = bs(e ? e.length : 1, null)),
                        i = r.slice();
                    let s = t.child;
                    for (; null !== s; ) {
                        const l = e ? mv(s, e) : 0;
                        null !== l &&
                            (i[l] ? (i[l].projectionNext = s) : (r[l] = s),
                            (i[l] = s)),
                            (s = s.next);
                    }
                }
            }
            function hh(e, t = 0, n) {
                const r = et(),
                    i = an(),
                    s = Qo(i, 20 + e, 16, null, n || null);
                null === s.projection && (s.projection = t),
                    Ss(),
                    64 != (64 & s.flags) &&
                        (function my(e, t, n) {
                            Od(
                                t[11],
                                0,
                                t,
                                n,
                                Ed(e, n, t),
                                Ad(n.parent || t[6], n, t)
                            );
                        })(i, r, s);
            }
            function bh(e, t, n, r, i) {
                const s = e[n + 1],
                    l = null === t;
                let h = r ? Us(s) : _o(s),
                    m = !1;
                for (; 0 !== h && (!1 === m || l); ) {
                    const F = e[h + 1];
                    vv(e[h], t) && ((m = !0), (e[h + 1] = r ? lu(F) : ou(F))),
                        (h = r ? Us(F) : _o(F));
                }
                m && (e[n + 1] = r ? ou(s) : lu(s));
            }
            function vv(e, t) {
                return (
                    null === e ||
                    null == t ||
                    (Array.isArray(e) ? e[1] : e) === t ||
                    (!(!Array.isArray(e) || 'string' != typeof t) &&
                        or(e, t) >= 0)
                );
            }
            const pi = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
            function Ah(e) {
                return e.substring(pi.key, pi.keyEnd);
            }
            function Ev(e) {
                return e.substring(pi.value, pi.valueEnd);
            }
            function wh(e, t) {
                const n = pi.textEnd;
                return n === t
                    ? -1
                    : ((t = pi.keyEnd =
                          (function bv(e, t, n) {
                              for (; t < n && e.charCodeAt(t) > 32; ) t++;
                              return t;
                          })(e, (pi.key = t), n)),
                      ha(e, t, n));
            }
            function Th(e, t) {
                const n = pi.textEnd;
                let r = (pi.key = ha(e, t, n));
                return n === r
                    ? -1
                    : ((r = pi.keyEnd =
                          (function Av(e, t, n) {
                              let r;
                              for (
                                  ;
                                  t < n &&
                                  (45 === (r = e.charCodeAt(t)) ||
                                      95 === r ||
                                      ((-33 & r) >= 65 && (-33 & r) <= 90) ||
                                      (r >= 48 && r <= 57));

                              )
                                  t++;
                              return t;
                          })(e, r, n)),
                      (r = Ih(e, r, n)),
                      (r = pi.value = ha(e, r, n)),
                      (r = pi.valueEnd =
                          (function wv(e, t, n) {
                              let r = -1,
                                  i = -1,
                                  s = -1,
                                  l = t,
                                  h = l;
                              for (; l < n; ) {
                                  const m = e.charCodeAt(l++);
                                  if (59 === m) return h;
                                  34 === m || 39 === m
                                      ? (h = l = Mh(e, m, l, n))
                                      : t === l - 4 &&
                                        85 === s &&
                                        82 === i &&
                                        76 === r &&
                                        40 === m
                                      ? (h = l = Mh(e, 41, l, n))
                                      : m > 32 && (h = l),
                                      (s = i),
                                      (i = r),
                                      (r = -33 & m);
                              }
                              return h;
                          })(e, r, n)),
                      Ih(e, r, n));
            }
            function Sh(e) {
                (pi.key = 0),
                    (pi.keyEnd = 0),
                    (pi.value = 0),
                    (pi.valueEnd = 0),
                    (pi.textEnd = e.length);
            }
            function ha(e, t, n) {
                for (; t < n && e.charCodeAt(t) <= 32; ) t++;
                return t;
            }
            function Ih(e, t, n, r) {
                return (t = ha(e, t, n)) < n && t++, t;
            }
            function Mh(e, t, n, r) {
                let i = -1,
                    s = n;
                for (; s < r; ) {
                    const l = e.charCodeAt(s++);
                    if (l == t && 92 !== i) return s;
                    i = 92 == l && 92 === i ? 0 : l;
                }
                throw new Error();
            }
            function Qu(e, t) {
                return (
                    (function $s(e, t, n, r) {
                        const i = et(),
                            s = an(),
                            l = Si(2);
                        s.firstUpdatePass && Fh(s, e, l, r),
                            t !== pn &&
                                ki(i, l, t) &&
                                Nh(
                                    s,
                                    s.data[kr()],
                                    i,
                                    i[11],
                                    e,
                                    (i[l + 1] = (function Fv(e, t) {
                                        return (
                                            null == e ||
                                                ('string' == typeof t
                                                    ? (e += t)
                                                    : 'object' == typeof e &&
                                                      (e = se(Mo(e)))),
                                            e
                                        );
                                    })(t, n)),
                                    r,
                                    l
                                );
                    })(e, t, null, !0),
                    Qu
                );
            }
            function Hs(e) {
                Gs(xh, Tv, e, !1);
            }
            function Tv(e, t) {
                for (
                    let n = (function Cv(e) {
                        return Sh(e), Th(e, ha(e, 0, pi.textEnd));
                    })(t);
                    n >= 0;
                    n = Th(t, n)
                )
                    xh(e, Ah(t), Ev(t));
            }
            function Ph(e) {
                Gs(Jn, ao, e, !0);
            }
            function ao(e, t) {
                for (
                    let n = (function Dv(e) {
                        return Sh(e), wh(e, ha(e, 0, pi.textEnd));
                    })(t);
                    n >= 0;
                    n = wh(t, n)
                )
                    Jn(e, Ah(t), !0);
            }
            function Gs(e, t, n, r) {
                const i = an(),
                    s = Si(2);
                i.firstUpdatePass && Fh(i, null, s, r);
                const l = et();
                if (n !== pn && ki(l, s, n)) {
                    const h = i.data[kr()];
                    if (kh(h, r) && !Rh(i, s)) {
                        let m = r ? h.classesWithoutHost : h.stylesWithoutHost;
                        null !== m && (n = Y(m, n || '')), Hu(i, h, l, n, r);
                    } else
                        !(function Rv(e, t, n, r, i, s, l, h) {
                            i === pn && (i = Z);
                            let m = 0,
                                O = 0,
                                F = 0 < i.length ? i[0] : null,
                                G = 0 < s.length ? s[0] : null;
                            for (; null !== F || null !== G; ) {
                                const me = m < i.length ? i[m + 1] : void 0,
                                    Me = O < s.length ? s[O + 1] : void 0;
                                let ft,
                                    Qe = null;
                                F === G
                                    ? ((m += 2),
                                      (O += 2),
                                      me !== Me && ((Qe = G), (ft = Me)))
                                    : null === G || (null !== F && F < G)
                                    ? ((m += 2), (Qe = F))
                                    : ((O += 2), (Qe = G), (ft = Me)),
                                    null !== Qe && Nh(e, t, n, r, Qe, ft, l, h),
                                    (F = m < i.length ? i[m] : null),
                                    (G = O < s.length ? s[O] : null);
                            }
                        })(
                            i,
                            h,
                            l,
                            l[11],
                            l[s + 1],
                            (l[s + 1] = (function Pv(e, t, n) {
                                if (null == n || '' === n) return Z;
                                const r = [],
                                    i = Mo(n);
                                if (Array.isArray(i))
                                    for (let s = 0; s < i.length; s++)
                                        e(r, i[s], !0);
                                else if ('object' == typeof i)
                                    for (const s in i)
                                        i.hasOwnProperty(s) && e(r, s, i[s]);
                                else 'string' == typeof i && t(r, i);
                                return r;
                            })(e, t, n)),
                            r,
                            s
                        );
                }
            }
            function Rh(e, t) {
                return t >= e.expandoStartIndex;
            }
            function Fh(e, t, n, r) {
                const i = e.data;
                if (null === i[n + 1]) {
                    const s = i[kr()],
                        l = Rh(e, n);
                    kh(s, r) && null === t && !l && (t = !1),
                        (t = (function Sv(e, t, n, r) {
                            const i = (function gt(e) {
                                const t = Vt.lFrame.currentDirectiveIndex;
                                return -1 === t ? null : e[t];
                            })(e);
                            let s = r ? t.residualClasses : t.residualStyles;
                            if (null === i)
                                0 === (r ? t.classBindings : t.styleBindings) &&
                                    ((n = Ua(
                                        (n = Ju(null, e, t, n, r)),
                                        t.attrs,
                                        r
                                    )),
                                    (s = null));
                            else {
                                const l = t.directiveStylingLast;
                                if (-1 === l || e[l] !== i)
                                    if (((n = Ju(i, e, t, n, r)), null === s)) {
                                        let m = (function Iv(e, t, n) {
                                            const r = n
                                                ? t.classBindings
                                                : t.styleBindings;
                                            if (0 !== _o(r)) return e[Us(r)];
                                        })(e, t, r);
                                        void 0 !== m &&
                                            Array.isArray(m) &&
                                            ((m = Ju(null, e, t, m[1], r)),
                                            (m = Ua(m, t.attrs, r)),
                                            (function Mv(e, t, n, r) {
                                                e[
                                                    Us(
                                                        n
                                                            ? t.classBindings
                                                            : t.styleBindings
                                                    )
                                                ] = r;
                                            })(e, t, r, m));
                                    } else
                                        s = (function Ov(e, t, n) {
                                            let r;
                                            const i = t.directiveEnd;
                                            for (
                                                let s =
                                                    1 + t.directiveStylingLast;
                                                s < i;
                                                s++
                                            )
                                                r = Ua(r, e[s].hostAttrs, n);
                                            return Ua(r, t.attrs, n);
                                        })(e, t, r);
                            }
                            return (
                                void 0 !== s &&
                                    (r
                                        ? (t.residualClasses = s)
                                        : (t.residualStyles = s)),
                                n
                            );
                        })(i, s, t, r)),
                        (function yv(e, t, n, r, i, s) {
                            let l = s ? t.classBindings : t.styleBindings,
                                h = Us(l),
                                m = _o(l);
                            e[r] = n;
                            let F,
                                O = !1;
                            if (Array.isArray(n)) {
                                const G = n;
                                (F = G[1]),
                                    (null === F || or(G, F) > 0) && (O = !0);
                            } else F = n;
                            if (i)
                                if (0 !== m) {
                                    const me = Us(e[h + 1]);
                                    (e[r + 1] = ul(me, h)),
                                        0 !== me &&
                                            (e[me + 1] = au(e[me + 1], r)),
                                        (e[h + 1] = (function Oy(e, t) {
                                            return (131071 & e) | (t << 17);
                                        })(e[h + 1], r));
                                } else
                                    (e[r + 1] = ul(h, 0)),
                                        0 !== h && (e[h + 1] = au(e[h + 1], r)),
                                        (h = r);
                            else
                                (e[r + 1] = ul(m, 0)),
                                    0 === h
                                        ? (h = r)
                                        : (e[m + 1] = au(e[m + 1], r)),
                                    (m = r);
                            O && (e[r + 1] = ou(e[r + 1])),
                                bh(e, F, r, !0),
                                bh(e, F, r, !1),
                                (function _v(e, t, n, r, i) {
                                    const s = i
                                        ? e.residualClasses
                                        : e.residualStyles;
                                    null != s &&
                                        'string' == typeof t &&
                                        or(s, t) >= 0 &&
                                        (n[r + 1] = lu(n[r + 1]));
                                })(t, F, e, r, s),
                                (l = ul(h, m)),
                                s
                                    ? (t.classBindings = l)
                                    : (t.styleBindings = l);
                        })(i, s, t, n, l, r);
                }
            }
            function Ju(e, t, n, r, i) {
                let s = null;
                const l = n.directiveEnd;
                let h = n.directiveStylingLast;
                for (
                    -1 === h ? (h = n.directiveStart) : h++;
                    h < l && ((s = t[h]), (r = Ua(r, s.hostAttrs, i)), s !== e);

                )
                    h++;
                return null !== e && (n.directiveStylingLast = h), r;
            }
            function Ua(e, t, n) {
                const r = n ? 1 : 2;
                let i = -1;
                if (null !== t)
                    for (let s = 0; s < t.length; s++) {
                        const l = t[s];
                        'number' == typeof l
                            ? (i = l)
                            : i === r &&
                              (Array.isArray(e) ||
                                  (e = void 0 === e ? [] : ['', e]),
                              Jn(e, l, !!n || t[++s]));
                    }
                return void 0 === e ? null : e;
            }
            function xh(e, t, n) {
                Jn(e, t, Mo(n));
            }
            function Nh(e, t, n, r, i, s, l, h) {
                if (!(3 & t.type)) return;
                const m = e.data,
                    O = m[h + 1];
                _l(
                    (function jd(e) {
                        return 1 == (1 & e);
                    })(O)
                        ? Lh(m, t, n, i, _o(O), l)
                        : void 0
                ) ||
                    (_l(s) ||
                        ((function Ud(e) {
                            return 2 == (2 & e);
                        })(O) &&
                            (s = Lh(m, null, n, i, h, l))),
                    (function _y(e, t, n, r, i) {
                        const s = Nt(e);
                        if (t)
                            i
                                ? s
                                    ? e.addClass(n, r)
                                    : n.classList.add(r)
                                : s
                                ? e.removeClass(n, r)
                                : n.classList.remove(r);
                        else {
                            let l =
                                -1 === r.indexOf('-') ? void 0 : io.DashCase;
                            if (null == i)
                                s
                                    ? e.removeStyle(n, r, l)
                                    : n.style.removeProperty(r);
                            else {
                                const h =
                                    'string' == typeof i &&
                                    i.endsWith('!important');
                                h &&
                                    ((i = i.slice(0, -10)),
                                    (l |= io.Important)),
                                    s
                                        ? e.setStyle(n, r, i, l)
                                        : n.style.setProperty(
                                              r,
                                              i,
                                              h ? 'important' : ''
                                          );
                            }
                        }
                    })(r, l, ke(kr(), n), i, s));
            }
            function Lh(e, t, n, r, i, s) {
                const l = null === t;
                let h;
                for (; i > 0; ) {
                    const m = e[i],
                        O = Array.isArray(m),
                        F = O ? m[1] : m,
                        G = null === F;
                    let me = n[i + 1];
                    me === pn && (me = G ? Z : void 0);
                    let Me = G ? Hi(me, r) : F === r ? me : void 0;
                    if (
                        (O && !_l(Me) && (Me = Hi(m, r)),
                        _l(Me) && ((h = Me), l))
                    )
                        return h;
                    const Qe = e[i + 1];
                    i = l ? Us(Qe) : _o(Qe);
                }
                if (null !== t) {
                    let m = s ? t.residualClasses : t.residualStyles;
                    null != m && (h = Hi(m, r));
                }
                return h;
            }
            function _l(e) {
                return void 0 !== e;
            }
            function kh(e, t) {
                return 0 != (e.flags & (t ? 16 : 32));
            }
            function Bh(e, t = '') {
                const n = et(),
                    r = an(),
                    i = e + 20,
                    s = r.firstCreatePass ? Qo(r, i, 1, t, null) : r.data[i],
                    l = (n[i] = (function Jl(e, t) {
                        return Nt(e) ? e.createText(t) : e.createTextNode(t);
                    })(n[11], t));
                al(r, n, l, s), Rr(s, !1);
            }
            function Xu(e) {
                return vl('', e, ''), Xu;
            }
            function vl(e, t, n) {
                const r = et(),
                    i = (function ia(e, t, n, r) {
                        return ki(e, _i(), n) ? t + de(n) + r : pn;
                    })(r, e, t, n);
                return i !== pn && vo(r, kr(), i), vl;
            }
            const Uo = void 0;
            var Xv = [
                'en',
                [['a', 'p'], ['AM', 'PM'], Uo],
                [['AM', 'PM'], Uo, Uo],
                [
                    ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
                    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                    [
                        'Sunday',
                        'Monday',
                        'Tuesday',
                        'Wednesday',
                        'Thursday',
                        'Friday',
                        'Saturday',
                    ],
                    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                ],
                Uo,
                [
                    [
                        'J',
                        'F',
                        'M',
                        'A',
                        'M',
                        'J',
                        'J',
                        'A',
                        'S',
                        'O',
                        'N',
                        'D',
                    ],
                    [
                        'Jan',
                        'Feb',
                        'Mar',
                        'Apr',
                        'May',
                        'Jun',
                        'Jul',
                        'Aug',
                        'Sep',
                        'Oct',
                        'Nov',
                        'Dec',
                    ],
                    [
                        'January',
                        'February',
                        'March',
                        'April',
                        'May',
                        'June',
                        'July',
                        'August',
                        'September',
                        'October',
                        'November',
                        'December',
                    ],
                ],
                Uo,
                [
                    ['B', 'A'],
                    ['BC', 'AD'],
                    ['Before Christ', 'Anno Domini'],
                ],
                0,
                [6, 0],
                ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
                ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
                ['{1}, {0}', Uo, "{1} 'at' {0}", Uo],
                [
                    '.',
                    ',',
                    ';',
                    '%',
                    '+',
                    '-',
                    'E',
                    '\xd7',
                    '\u2030',
                    '\u221e',
                    'NaN',
                    ':',
                ],
                ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
                'USD',
                '$',
                'US Dollar',
                {},
                'ltr',
                function Jv(e) {
                    const n = Math.floor(Math.abs(e)),
                        r = e.toString().replace(/^[^.]*\.?/, '').length;
                    return 1 === n && 0 === r ? 1 : 5;
                },
            ];
            let pa = {};
            function ec(e) {
                const t = (function eE(e) {
                    return e.toLowerCase().replace(/_/g, '-');
                })(e);
                let n = sp(t);
                if (n) return n;
                const r = t.split('-')[0];
                if (((n = sp(r)), n)) return n;
                if ('en' === r) return Xv;
                throw new Error(`Missing locale data for the locale "${e}".`);
            }
            function ip(e) {
                return ec(e)[nn.PluralCase];
            }
            function sp(e) {
                return (
                    e in pa ||
                        (pa[e] =
                            Lt.ng &&
                            Lt.ng.common &&
                            Lt.ng.common.locales &&
                            Lt.ng.common.locales[e]),
                    pa[e]
                );
            }
            var nn = (() => (
                ((nn = nn || {})[(nn.LocaleId = 0)] = 'LocaleId'),
                (nn[(nn.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
                (nn[(nn.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
                (nn[(nn.DaysFormat = 3)] = 'DaysFormat'),
                (nn[(nn.DaysStandalone = 4)] = 'DaysStandalone'),
                (nn[(nn.MonthsFormat = 5)] = 'MonthsFormat'),
                (nn[(nn.MonthsStandalone = 6)] = 'MonthsStandalone'),
                (nn[(nn.Eras = 7)] = 'Eras'),
                (nn[(nn.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
                (nn[(nn.WeekendRange = 9)] = 'WeekendRange'),
                (nn[(nn.DateFormat = 10)] = 'DateFormat'),
                (nn[(nn.TimeFormat = 11)] = 'TimeFormat'),
                (nn[(nn.DateTimeFormat = 12)] = 'DateTimeFormat'),
                (nn[(nn.NumberSymbols = 13)] = 'NumberSymbols'),
                (nn[(nn.NumberFormats = 14)] = 'NumberFormats'),
                (nn[(nn.CurrencyCode = 15)] = 'CurrencyCode'),
                (nn[(nn.CurrencySymbol = 16)] = 'CurrencySymbol'),
                (nn[(nn.CurrencyName = 17)] = 'CurrencyName'),
                (nn[(nn.Currencies = 18)] = 'Currencies'),
                (nn[(nn.Directionality = 19)] = 'Directionality'),
                (nn[(nn.PluralCase = 20)] = 'PluralCase'),
                (nn[(nn.ExtraData = 21)] = 'ExtraData'),
                nn
            ))();
            const El = 'en-US';
            let op = El;
            function rc(e, t, n, r, i) {
                if (((e = ie(e)), Array.isArray(e)))
                    for (let s = 0; s < e.length; s++) rc(e[s], t, n, r, i);
                else {
                    const s = an(),
                        l = et();
                    let h = ta(e) ? e : ie(e.provide),
                        m = Cf(e);
                    const O = ir(),
                        F = 1048575 & O.providerIndexes,
                        G = O.directiveStart,
                        me = O.providerIndexes >> 20;
                    if (ta(e) || !e.multi) {
                        const Me = new Ni(m, i, Va),
                            Qe = sc(h, t, i ? F : F + me, G);
                        -1 === Qe
                            ? (u(cs(O, l), s, h),
                              ic(s, e, t.length),
                              t.push(h),
                              O.directiveStart++,
                              O.directiveEnd++,
                              i && (O.providerIndexes += 1048576),
                              n.push(Me),
                              l.push(Me))
                            : ((n[Qe] = Me), (l[Qe] = Me));
                    } else {
                        const Me = sc(h, t, F + me, G),
                            Qe = sc(h, t, F, F + me),
                            ft = Me >= 0 && n[Me],
                            yt = Qe >= 0 && n[Qe];
                        if ((i && !yt) || (!i && !ft)) {
                            u(cs(O, l), s, h);
                            const Pt = (function JE(e, t, n, r, i) {
                                const s = new Ni(e, n, Va);
                                return (
                                    (s.multi = []),
                                    (s.index = t),
                                    (s.componentProviders = 0),
                                    Op(s, i, r && !n),
                                    s
                                );
                            })(i ? QE : qE, n.length, i, r, m);
                            !i && yt && (n[Qe].providerFactory = Pt),
                                ic(s, e, t.length, 0),
                                t.push(h),
                                O.directiveStart++,
                                O.directiveEnd++,
                                i && (O.providerIndexes += 1048576),
                                n.push(Pt),
                                l.push(Pt);
                        } else
                            ic(
                                s,
                                e,
                                Me > -1 ? Me : Qe,
                                Op(n[i ? Qe : Me], m, !i && r)
                            );
                        !i && r && yt && n[Qe].componentProviders++;
                    }
                }
            }
            function ic(e, t, n, r) {
                const i = ta(t),
                    s = (function b_(e) {
                        return !!e.useClass;
                    })(t);
                if (i || s) {
                    const m = (s ? ie(t.useClass) : t).prototype.ngOnDestroy;
                    if (m) {
                        const O = e.destroyHooks || (e.destroyHooks = []);
                        if (!i && t.multi) {
                            const F = O.indexOf(n);
                            -1 === F ? O.push(n, [r, m]) : O[F + 1].push(r, m);
                        } else O.push(n, m);
                    }
                }
            }
            function Op(e, t, n) {
                return n && e.componentProviders++, e.multi.push(t) - 1;
            }
            function sc(e, t, n, r) {
                for (let i = n; i < r; i++) if (t[i] === e) return i;
                return -1;
            }
            function qE(e, t, n, r) {
                return oc(this.multi, []);
            }
            function QE(e, t, n, r) {
                const i = this.multi;
                let s;
                if (this.providerFactory) {
                    const l = this.providerFactory.componentProviders,
                        h = Rt(n, n[1], this.providerFactory.index, r);
                    (s = h.slice(0, l)), oc(i, s);
                    for (let m = l; m < h.length; m++) s.push(h[m]);
                } else (s = []), oc(i, s);
                return s;
            }
            function oc(e, t) {
                for (let n = 0; n < e.length; n++) t.push((0, e[n])());
                return t;
            }
            function Pp(e, t = []) {
                return (n) => {
                    n.providersResolver = (r, i) =>
                        (function ZE(e, t, n) {
                            const r = an();
                            if (r.firstCreatePass) {
                                const i = on(e);
                                rc(n, r.data, r.blueprint, i, !0),
                                    rc(t, r.data, r.blueprint, i, !1);
                            }
                        })(r, i ? i(e) : e, t);
                };
            }
            class Rp {}
            class tD {
                resolveComponentFactory(t) {
                    throw (function eD(e) {
                        const t = Error(
                            `No component factory found for ${se(
                                e
                            )}. Did you add it to @NgModule.entryComponents?`
                        );
                        return (t.ngComponent = e), t;
                    })(t);
                }
            }
            let Wa = (() => {
                class e {}
                return (e.NULL = new tD()), e;
            })();
            function nD() {
                return ma(ir(), et());
            }
            function ma(e, t) {
                return new za(qe(e, t));
            }
            let za = (() => {
                class e {
                    constructor(n) {
                        this.nativeElement = n;
                    }
                }
                return (e.__NG_ELEMENT_ID__ = nD), e;
            })();
            function rD(e) {
                return e instanceof za ? e.nativeElement : e;
            }
            class xp {}
            let iD = (() => {
                    class e {}
                    return (
                        (e.__NG_ELEMENT_ID__ = () =>
                            (function oD() {
                                const e = et(),
                                    n = At(ir().index, e);
                                return (function sD(e) {
                                    return e[11];
                                })(rt(n) ? n : e);
                            })()),
                        e
                    );
                })(),
                aD = (() => {
                    class e {}
                    return (
                        (e.ɵprov = Ft({
                            token: e,
                            providedIn: 'root',
                            factory: () => null,
                        })),
                        e
                    );
                })();
            class Np {
                constructor(t) {
                    (this.full = t),
                        (this.major = t.split('.')[0]),
                        (this.minor = t.split('.')[1]),
                        (this.patch = t.split('.').slice(2).join('.'));
                }
            }
            const Lp = new Np('13.2.1'),
                ac = {};
            function wl(e, t, n, r, i = !1) {
                for (; null !== n; ) {
                    const s = t[n.index];
                    if ((null !== s && r.push(b(s)), Bt(s)))
                        for (let h = 10; h < s.length; h++) {
                            const m = s[h],
                                O = m[1].firstChild;
                            null !== O && wl(m[1], m, O, r);
                        }
                    const l = n.type;
                    if (8 & l) wl(e, t, n.child, r);
                    else if (32 & l) {
                        const h = Zl(n, t);
                        let m;
                        for (; (m = h()); ) r.push(m);
                    } else if (16 & l) {
                        const h = Id(t, n);
                        if (Array.isArray(h)) r.push(...h);
                        else {
                            const m = Ra(t[16]);
                            wl(m[1], m, h, r, !0);
                        }
                    }
                    n = i ? n.projectionNext : n.next;
                }
                return r;
            }
            class Ka {
                constructor(t, n) {
                    (this._lView = t),
                        (this._cdRefInjectingView = n),
                        (this._appRef = null),
                        (this._attachedToViewContainer = !1);
                }
                get rootNodes() {
                    const t = this._lView,
                        n = t[1];
                    return wl(n, t, n.firstChild, []);
                }
                get context() {
                    return this._lView[8];
                }
                set context(t) {
                    this._lView[8] = t;
                }
                get destroyed() {
                    return 256 == (256 & this._lView[2]);
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const t = this._lView[3];
                        if (Bt(t)) {
                            const n = t[8],
                                r = n ? n.indexOf(this) : -1;
                            r > -1 && (eu(t, r), eo(n, r));
                        }
                        this._attachedToViewContainer = !1;
                    }
                    vd(this._lView[1], this._lView);
                }
                onDestroy(t) {
                    tf(this._lView[1], this._lView, null, t);
                }
                markForCheck() {
                    bu(this._cdRefInjectingView || this._lView);
                }
                detach() {
                    this._lView[2] &= -129;
                }
                reattach() {
                    this._lView[2] |= 128;
                }
                detectChanges() {
                    wu(this._lView[1], this._lView, this.context);
                }
                checkNoChanges() {
                    !(function f_(e, t, n) {
                        _s(!0);
                        try {
                            wu(e, t, n);
                        } finally {
                            _s(!1);
                        }
                    })(this._lView[1], this._lView, this.context);
                }
                attachToViewContainerRef() {
                    if (this._appRef) throw new xe(902, '');
                    this._attachedToViewContainer = !0;
                }
                detachFromAppRef() {
                    (this._appRef = null),
                        (function ly(e, t) {
                            Fa(e, t, t[11], 2, null, null);
                        })(this._lView[1], this._lView);
                }
                attachToAppRef(t) {
                    if (this._attachedToViewContainer) throw new xe(902, '');
                    this._appRef = t;
                }
            }
            class lD extends Ka {
                constructor(t) {
                    super(t), (this._view = t);
                }
                detectChanges() {
                    ff(this._view);
                }
                checkNoChanges() {
                    !(function h_(e) {
                        _s(!0);
                        try {
                            ff(e);
                        } finally {
                            _s(!1);
                        }
                    })(this._view);
                }
                get context() {
                    return null;
                }
            }
            class kp extends Wa {
                constructor(t) {
                    super(), (this.ngModule = t);
                }
                resolveComponentFactory(t) {
                    const n = Yt(t);
                    return new lc(n, this.ngModule);
                }
            }
            function Bp(e) {
                const t = [];
                for (let n in e)
                    e.hasOwnProperty(n) &&
                        t.push({ propName: e[n], templateName: n });
                return t;
            }
            const cD = new It('SCHEDULER_TOKEN', {
                providedIn: 'root',
                factory: () => dd,
            });
            class lc extends Rp {
                constructor(t, n) {
                    super(),
                        (this.componentDef = t),
                        (this.ngModule = n),
                        (this.componentType = t.type),
                        (this.selector = (function Iy(e) {
                            return e.map(Sy).join(',');
                        })(t.selectors)),
                        (this.ngContentSelectors = t.ngContentSelectors
                            ? t.ngContentSelectors
                            : []),
                        (this.isBoundToModule = !!n);
                }
                get inputs() {
                    return Bp(this.componentDef.inputs);
                }
                get outputs() {
                    return Bp(this.componentDef.outputs);
                }
                create(t, n, r, i) {
                    const s = (i = i || this.ngModule)
                            ? (function dD(e, t) {
                                  return {
                                      get: (n, r, i) => {
                                          const s = e.get(n, ac, i);
                                          return s !== ac || r === ac
                                              ? s
                                              : t.get(n, r, i);
                                      },
                                  };
                              })(t, i.injector)
                            : t,
                        l = s.get(xp, A),
                        h = s.get(aD, null),
                        m = l.createRenderer(null, this.componentDef),
                        O = this.componentDef.selectors[0][0] || 'div',
                        F = r
                            ? (function ef(e, t, n) {
                                  if (Nt(e))
                                      return e.selectRootElement(
                                          t,
                                          n === at.ShadowDom
                                      );
                                  let r =
                                      'string' == typeof t
                                          ? e.querySelector(t)
                                          : t;
                                  return (r.textContent = ''), r;
                              })(m, r, this.componentDef.encapsulation)
                            : Xl(
                                  l.createRenderer(null, this.componentDef),
                                  O,
                                  (function uD(e) {
                                      const t = e.toLowerCase();
                                      return 'svg' === t
                                          ? 'svg'
                                          : 'math' === t
                                          ? 'math'
                                          : null;
                                  })(O)
                              ),
                        G = this.componentDef.onPush ? 576 : 528,
                        me = (function xf(e, t) {
                            return {
                                components: [],
                                scheduler: e || dd,
                                clean: p_,
                                playerHandler: t || null,
                                flags: 0,
                            };
                        })(),
                        Me = fl(
                            0,
                            null,
                            null,
                            1,
                            0,
                            null,
                            null,
                            null,
                            null,
                            null
                        ),
                        Qe = xa(null, Me, me, G, null, null, l, m, h, s);
                    let ft, yt;
                    Ei(Qe);
                    try {
                        const Pt = (function Rf(e, t, n, r, i, s) {
                            const l = n[1];
                            n[20] = e;
                            const m = Qo(l, 20, 2, '#host', null),
                                O = (m.mergedAttrs = t.hostAttrs);
                            null !== O &&
                                (pl(m, O, !0),
                                null !== e &&
                                    (Cr(i, e, O),
                                    null !== m.classes && su(i, e, m.classes),
                                    null !== m.styles && Pd(i, e, m.styles)));
                            const F = r.createRenderer(e, t),
                                G = xa(
                                    n,
                                    Jd(t),
                                    null,
                                    t.onPush ? 64 : 16,
                                    n[20],
                                    m,
                                    r,
                                    F,
                                    s || null,
                                    null
                                );
                            return (
                                l.firstCreatePass &&
                                    (u(cs(m, n), l, t.type),
                                    lf(l, m),
                                    uf(m, n.length, 1)),
                                hl(n, G),
                                (n[20] = G)
                            );
                        })(F, this.componentDef, Qe, l, m);
                        if (F)
                            if (r) Cr(m, F, ['ng-version', Lp.full]);
                            else {
                                const { attrs: tt, classes: Kt } = (function My(
                                    e
                                ) {
                                    const t = [],
                                        n = [];
                                    let r = 1,
                                        i = 2;
                                    for (; r < e.length; ) {
                                        let s = e[r];
                                        if ('string' == typeof s)
                                            2 === i
                                                ? '' !== s && t.push(s, e[++r])
                                                : 8 === i && n.push(s);
                                        else {
                                            if (!Vs(i)) break;
                                            i = s;
                                        }
                                        r++;
                                    }
                                    return { attrs: t, classes: n };
                                })(this.componentDef.selectors[0]);
                                tt && Cr(m, F, tt),
                                    Kt &&
                                        Kt.length > 0 &&
                                        su(m, F, Kt.join(' '));
                            }
                        if (((yt = kt(Me, 20)), void 0 !== n)) {
                            const tt = (yt.projection = []);
                            for (
                                let Kt = 0;
                                Kt < this.ngContentSelectors.length;
                                Kt++
                            ) {
                                const jn = n[Kt];
                                tt.push(null != jn ? Array.from(jn) : null);
                            }
                        }
                        (ft = (function Ff(e, t, n, r, i) {
                            const s = n[1],
                                l = (function qy(e, t, n) {
                                    const r = ir();
                                    e.firstCreatePass &&
                                        (n.providersResolver &&
                                            n.providersResolver(n),
                                        cf(e, r, t, Jo(e, t, 1, null), n));
                                    const i = Rt(t, e, r.directiveStart, r);
                                    Li(i, t);
                                    const s = qe(r, t);
                                    return s && Li(s, t), i;
                                })(s, n, t);
                            if (
                                (r.components.push(l),
                                (e[8] = l),
                                i && i.forEach((m) => m(l, t)),
                                t.contentQueries)
                            ) {
                                const m = ir();
                                t.contentQueries(1, l, m.directiveStart);
                            }
                            const h = ir();
                            return (
                                !s.firstCreatePass ||
                                    (null === t.hostBindings &&
                                        null === t.hostAttrs) ||
                                    (Ui(h.index),
                                    sf(
                                        n[1],
                                        h,
                                        0,
                                        h.directiveStart,
                                        h.directiveEnd,
                                        t
                                    ),
                                    af(t, l)),
                                l
                            );
                        })(Pt, this.componentDef, Qe, me, [x_])),
                            Na(Me, Qe, null);
                    } finally {
                        Os();
                    }
                    return new hD(this.componentType, ft, ma(yt, Qe), Qe, yt);
                }
            }
            class hD extends class XE {} {
                constructor(t, n, r, i, s) {
                    super(),
                        (this.location = r),
                        (this._rootLView = i),
                        (this._tNode = s),
                        (this.instance = n),
                        (this.hostView = this.changeDetectorRef = new lD(i)),
                        (this.componentType = t);
                }
                get injector() {
                    return new _(this._tNode, this._rootLView);
                }
                destroy() {
                    this.hostView.destroy();
                }
                onDestroy(t) {
                    this.hostView.onDestroy(t);
                }
            }
            class ya {}
            class Vp {}
            const _a = new Map();
            class Hp extends ya {
                constructor(t, n) {
                    super(),
                        (this._parent = n),
                        (this._bootstrapComponents = []),
                        (this.injector = this),
                        (this.destroyCbs = []),
                        (this.componentFactoryResolver = new kp(this));
                    const r = xn(t);
                    (this._bootstrapComponents = ro(r.bootstrap)),
                        (this._r3Injector = Df(
                            t,
                            n,
                            [
                                { provide: ya, useValue: this },
                                {
                                    provide: Wa,
                                    useValue: this.componentFactoryResolver,
                                },
                            ],
                            se(t)
                        )),
                        this._r3Injector._resolveInjectorDefTypes(),
                        (this.instance = this.get(t));
                }
                get(t, n = ws.THROW_IF_NOT_FOUND, r = St.Default) {
                    return t === ws || t === ya || t === Su
                        ? this
                        : this._r3Injector.get(t, n, r);
                }
                destroy() {
                    const t = this._r3Injector;
                    !t.destroyed && t.destroy(),
                        this.destroyCbs.forEach((n) => n()),
                        (this.destroyCbs = null);
                }
                onDestroy(t) {
                    this.destroyCbs.push(t);
                }
            }
            class uc extends Vp {
                constructor(t) {
                    super(),
                        (this.moduleType = t),
                        null !== xn(t) &&
                            (function gD(e) {
                                const t = new Set();
                                !(function n(r) {
                                    const i = xn(r, !0),
                                        s = i.id;
                                    null !== s &&
                                        ((function Up(e, t, n) {
                                            if (t && t !== n)
                                                throw new Error(
                                                    `Duplicate module registered for ${e} - ${se(
                                                        t
                                                    )} vs ${se(t.name)}`
                                                );
                                        })(s, _a.get(s), r),
                                        _a.set(s, r));
                                    const l = ro(i.imports);
                                    for (const h of l)
                                        t.has(h) || (t.add(h), n(h));
                                })(e);
                            })(t);
                }
                create(t) {
                    return new Hp(this.moduleType, t);
                }
            }
            function $p(e, t, n) {
                const r = Tr() + e,
                    i = et();
                return i[r] === pn ? oo(i, r, n ? t.call(n) : t()) : Ba(i, r);
            }
            function Gp(e, t, n, r, i, s, l) {
                return (function Zp(e, t, n, r, i, s, l, h, m) {
                    const O = t + n;
                    return Ts(e, O, i, s, l, h)
                        ? oo(
                              e,
                              O + 4,
                              m ? r.call(m, i, s, l, h) : r(i, s, l, h)
                          )
                        : Ya(e, O + 4);
                })(et(), Tr(), e, t, n, r, i, s, l);
            }
            function Wp(e, t, n, r, i, s, l, h) {
                const m = Tr() + e,
                    O = et(),
                    F = Ts(O, m, n, r, i, s);
                return ki(O, m + 4, l) || F
                    ? oo(
                          O,
                          m + 5,
                          h ? t.call(h, n, r, i, s, l) : t(n, r, i, s, l)
                      )
                    : Ba(O, m + 5);
            }
            function Ya(e, t) {
                const n = e[t];
                return n === pn ? void 0 : n;
            }
            function Qp(e, t) {
                const n = an();
                let r;
                const i = e + 20;
                n.firstCreatePass
                    ? ((r = (function bD(e, t) {
                          if (t)
                              for (let n = t.length - 1; n >= 0; n--) {
                                  const r = t[n];
                                  if (e === r.name) return r;
                              }
                      })(t, n.pipeRegistry)),
                      (n.data[i] = r),
                      r.onDestroy &&
                          (n.destroyHooks || (n.destroyHooks = [])).push(
                              i,
                              r.onDestroy
                          ))
                    : (r = n.data[i]);
                const s = r.factory || (r.factory = ri(r.type)),
                    l = gn(Va);
                try {
                    const h = Js(!1),
                        m = s();
                    return (
                        Js(h),
                        (function z_(e, t, n, r) {
                            n >= e.data.length &&
                                ((e.data[n] = null), (e.blueprint[n] = null)),
                                (t[n] = r);
                        })(n, et(), i, m),
                        m
                    );
                } finally {
                    gn(l);
                }
            }
            function Jp(e, t, n) {
                const r = e + 20,
                    i = et(),
                    s = un(i, r);
                return (function Za(e, t) {
                    return e[1].data[t].pure;
                })(i, r)
                    ? (function zp(e, t, n, r, i, s) {
                          const l = t + n;
                          return ki(e, l, i)
                              ? oo(e, l + 1, s ? r.call(s, i) : r(i))
                              : Ya(e, l + 1);
                      })(i, Tr(), t, s.transform, n, s)
                    : s.transform(n);
            }
            function cc(e) {
                return (t) => {
                    setTimeout(e, void 0, t);
                };
            }
            const lo = class ID extends d.x {
                constructor(t = !1) {
                    super(), (this.__isAsync = t);
                }
                emit(t) {
                    super.next(t);
                }
                subscribe(t, n, r) {
                    var i, s, l;
                    let h = t,
                        m = n || (() => null),
                        O = r;
                    if (t && 'object' == typeof t) {
                        const G = t;
                        (h =
                            null === (i = G.next) || void 0 === i
                                ? void 0
                                : i.bind(G)),
                            (m =
                                null === (s = G.error) || void 0 === s
                                    ? void 0
                                    : s.bind(G)),
                            (O =
                                null === (l = G.complete) || void 0 === l
                                    ? void 0
                                    : l.bind(G));
                    }
                    this.__isAsync &&
                        ((m = cc(m)), h && (h = cc(h)), O && (O = cc(O)));
                    const F = super.subscribe({
                        next: h,
                        error: m,
                        complete: O,
                    });
                    return t instanceof P.w0 && t.add(F), F;
                }
            };
            function MD() {
                return this._results[na()]();
            }
            class dc {
                constructor(t = !1) {
                    (this._emitDistinctChangesOnly = t),
                        (this.dirty = !0),
                        (this._results = []),
                        (this._changesDetected = !1),
                        (this._changes = null),
                        (this.length = 0),
                        (this.first = void 0),
                        (this.last = void 0);
                    const n = na(),
                        r = dc.prototype;
                    r[n] || (r[n] = MD);
                }
                get changes() {
                    return this._changes || (this._changes = new lo());
                }
                get(t) {
                    return this._results[t];
                }
                map(t) {
                    return this._results.map(t);
                }
                filter(t) {
                    return this._results.filter(t);
                }
                find(t) {
                    return this._results.find(t);
                }
                reduce(t, n) {
                    return this._results.reduce(t, n);
                }
                forEach(t) {
                    this._results.forEach(t);
                }
                some(t) {
                    return this._results.some(t);
                }
                toArray() {
                    return this._results.slice();
                }
                toString() {
                    return this._results.toString();
                }
                reset(t, n) {
                    const r = this;
                    r.dirty = !1;
                    const i = di(t);
                    (this._changesDetected = !(function rs(e, t, n) {
                        if (e.length !== t.length) return !1;
                        for (let r = 0; r < e.length; r++) {
                            let i = e[r],
                                s = t[r];
                            if ((n && ((i = n(i)), (s = n(s))), s !== i))
                                return !1;
                        }
                        return !0;
                    })(r._results, i, n)) &&
                        ((r._results = i),
                        (r.length = i.length),
                        (r.last = i[this.length - 1]),
                        (r.first = i[0]));
                }
                notifyOnChanges() {
                    this._changes &&
                        (this._changesDetected ||
                            !this._emitDistinctChangesOnly) &&
                        this._changes.emit(this);
                }
                setDirty() {
                    this.dirty = !0;
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe();
                }
            }
            Symbol;
            let qa = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = RD), e;
            })();
            const OD = qa,
                PD = class extends OD {
                    constructor(t, n, r) {
                        super(),
                            (this._declarationLView = t),
                            (this._declarationTContainer = n),
                            (this.elementRef = r);
                    }
                    createEmbeddedView(t) {
                        const n = this._declarationTContainer.tViews,
                            r = xa(
                                this._declarationLView,
                                n,
                                t,
                                16,
                                null,
                                n.declTNode,
                                null,
                                null,
                                null,
                                null
                            );
                        r[17] =
                            this._declarationLView[
                                this._declarationTContainer.index
                            ];
                        const s = this._declarationLView[19];
                        return (
                            null !== s && (r[19] = s.createEmbeddedView(n)),
                            Na(n, r, t),
                            new Ka(r)
                        );
                    }
                };
            function RD() {
                return Tl(ir(), et());
            }
            function Tl(e, t) {
                return 4 & e.type ? new PD(t, e, ma(e, t)) : null;
            }
            let Sl = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = FD), e;
            })();
            function FD() {
                return tg(ir(), et());
            }
            const xD = Sl,
                Xp = class extends xD {
                    constructor(t, n, r) {
                        super(),
                            (this._lContainer = t),
                            (this._hostTNode = n),
                            (this._hostLView = r);
                    }
                    get element() {
                        return ma(this._hostTNode, this._hostLView);
                    }
                    get injector() {
                        return new _(this._hostTNode, this._hostLView);
                    }
                    get parentInjector() {
                        const t = c(this._hostTNode, this._hostLView);
                        if (bo(t)) {
                            const n = Ds(t, this._hostLView),
                                r = us(t);
                            return new _(n[1].data[r + 8], n);
                        }
                        return new _(null, this._hostLView);
                    }
                    clear() {
                        for (; this.length > 0; ) this.remove(this.length - 1);
                    }
                    get(t) {
                        const n = eg(this._lContainer);
                        return (null !== n && n[t]) || null;
                    }
                    get length() {
                        return this._lContainer.length - 10;
                    }
                    createEmbeddedView(t, n, r) {
                        const i = t.createEmbeddedView(n || {});
                        return this.insert(i, r), i;
                    }
                    createComponent(t, n, r, i, s) {
                        const l =
                            t &&
                            !(function Mi(e) {
                                return 'function' == typeof e;
                            })(t);
                        let h;
                        if (l) h = n;
                        else {
                            const G = n || {};
                            (h = G.index),
                                (r = G.injector),
                                (i = G.projectableNodes),
                                (s = G.ngModuleRef);
                        }
                        const m = l ? t : new lc(Yt(t)),
                            O = r || this.parentInjector;
                        if (!s && null == m.ngModule && O) {
                            const G = O.get(ya, null);
                            G && (s = G);
                        }
                        const F = m.create(O, i, void 0, s);
                        return this.insert(F.hostView, h), F;
                    }
                    insert(t, n) {
                        const r = t._lView,
                            i = r[1];
                        if (
                            (function Ln(e) {
                                return Bt(e[3]);
                            })(r)
                        ) {
                            const F = this.indexOf(t);
                            if (-1 !== F) this.detach(F);
                            else {
                                const G = r[3],
                                    me = new Xp(G, G[6], G[3]);
                                me.detach(me.indexOf(t));
                            }
                        }
                        const s = this._adjustIndex(n),
                            l = this._lContainer;
                        !(function cy(e, t, n, r) {
                            const i = 10 + r,
                                s = n.length;
                            r > 0 && (n[i - 1][4] = t),
                                r < s - 10
                                    ? ((t[4] = n[i]), is(n, 10 + r, t))
                                    : (n.push(t), (t[4] = null)),
                                (t[3] = n);
                            const l = t[17];
                            null !== l &&
                                n !== l &&
                                (function dy(e, t) {
                                    const n = e[9];
                                    t[16] !== t[3][3][16] && (e[2] = !0),
                                        null === n ? (e[9] = [t]) : n.push(t);
                                })(l, t);
                            const h = t[19];
                            null !== h && h.insertView(e), (t[2] |= 128);
                        })(i, r, l, s);
                        const h = ru(s, l),
                            m = r[11],
                            O = ol(m, l[7]);
                        return (
                            null !== O &&
                                (function ay(e, t, n, r, i, s) {
                                    (r[0] = i),
                                        (r[6] = t),
                                        Fa(e, r, n, 1, i, s);
                                })(i, l[6], m, r, O, h),
                            t.attachToViewContainerRef(),
                            is(fc(l), s, t),
                            t
                        );
                    }
                    move(t, n) {
                        return this.insert(t, n);
                    }
                    indexOf(t) {
                        const n = eg(this._lContainer);
                        return null !== n ? n.indexOf(t) : -1;
                    }
                    remove(t) {
                        const n = this._adjustIndex(t, -1),
                            r = eu(this._lContainer, n);
                        r && (eo(fc(this._lContainer), n), vd(r[1], r));
                    }
                    detach(t) {
                        const n = this._adjustIndex(t, -1),
                            r = eu(this._lContainer, n);
                        return r && null != eo(fc(this._lContainer), n)
                            ? new Ka(r)
                            : null;
                    }
                    _adjustIndex(t, n = 0) {
                        return null == t ? this.length + n : t;
                    }
                };
            function eg(e) {
                return e[8];
            }
            function fc(e) {
                return e[8] || (e[8] = []);
            }
            function tg(e, t) {
                let n;
                const r = t[e.index];
                if (Bt(r)) n = r;
                else {
                    let i;
                    if (8 & e.type) i = b(r);
                    else {
                        const s = t[11];
                        i = s.createComment('');
                        const l = qe(e, t);
                        Bo(
                            s,
                            ol(s, l),
                            i,
                            (function gy(e, t) {
                                return Nt(e) ? e.nextSibling(t) : t.nextSibling;
                            })(s, l),
                            !1
                        );
                    }
                    (t[e.index] = n = df(r, t, i, e)), hl(t, n);
                }
                return new Xp(n, e, t);
            }
            class hc {
                constructor(t) {
                    (this.queryList = t), (this.matches = null);
                }
                clone() {
                    return new hc(this.queryList);
                }
                setDirty() {
                    this.queryList.setDirty();
                }
            }
            class pc {
                constructor(t = []) {
                    this.queries = t;
                }
                createEmbeddedView(t) {
                    const n = t.queries;
                    if (null !== n) {
                        const r =
                                null !== t.contentQueries
                                    ? t.contentQueries[0]
                                    : n.length,
                            i = [];
                        for (let s = 0; s < r; s++) {
                            const l = n.getByIndex(s);
                            i.push(
                                this.queries[l.indexInDeclarationView].clone()
                            );
                        }
                        return new pc(i);
                    }
                    return null;
                }
                insertView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                detachView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                dirtyQueriesWithMatches(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        null !== ug(t, n).matches && this.queries[n].setDirty();
                }
            }
            class ng {
                constructor(t, n, r = null) {
                    (this.predicate = t), (this.flags = n), (this.read = r);
                }
            }
            class gc {
                constructor(t = []) {
                    this.queries = t;
                }
                elementStart(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].elementStart(t, n);
                }
                elementEnd(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        this.queries[n].elementEnd(t);
                }
                embeddedTView(t) {
                    let n = null;
                    for (let r = 0; r < this.length; r++) {
                        const i = null !== n ? n.length : 0,
                            s = this.getByIndex(r).embeddedTView(t, i);
                        s &&
                            ((s.indexInDeclarationView = r),
                            null !== n ? n.push(s) : (n = [s]));
                    }
                    return null !== n ? new gc(n) : null;
                }
                template(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].template(t, n);
                }
                getByIndex(t) {
                    return this.queries[t];
                }
                get length() {
                    return this.queries.length;
                }
                track(t) {
                    this.queries.push(t);
                }
            }
            class mc {
                constructor(t, n = -1) {
                    (this.metadata = t),
                        (this.matches = null),
                        (this.indexInDeclarationView = -1),
                        (this.crossesNgTemplate = !1),
                        (this._appliesToNextNode = !0),
                        (this._declarationNodeIndex = n);
                }
                elementStart(t, n) {
                    this.isApplyingToNode(n) && this.matchTNode(t, n);
                }
                elementEnd(t) {
                    this._declarationNodeIndex === t.index &&
                        (this._appliesToNextNode = !1);
                }
                template(t, n) {
                    this.elementStart(t, n);
                }
                embeddedTView(t, n) {
                    return this.isApplyingToNode(t)
                        ? ((this.crossesNgTemplate = !0),
                          this.addMatch(-t.index, n),
                          new mc(this.metadata))
                        : null;
                }
                isApplyingToNode(t) {
                    if (
                        this._appliesToNextNode &&
                        1 != (1 & this.metadata.flags)
                    ) {
                        const n = this._declarationNodeIndex;
                        let r = t.parent;
                        for (; null !== r && 8 & r.type && r.index !== n; )
                            r = r.parent;
                        return n === (null !== r ? r.index : -1);
                    }
                    return this._appliesToNextNode;
                }
                matchTNode(t, n) {
                    const r = this.metadata.predicate;
                    if (Array.isArray(r))
                        for (let i = 0; i < r.length; i++) {
                            const s = r[i];
                            this.matchTNodeWithReadOption(t, n, kD(n, s)),
                                this.matchTNodeWithReadOption(
                                    t,
                                    n,
                                    dn(n, t, s, !1, !1)
                                );
                        }
                    else
                        r === qa
                            ? 4 & n.type &&
                              this.matchTNodeWithReadOption(t, n, -1)
                            : this.matchTNodeWithReadOption(
                                  t,
                                  n,
                                  dn(n, t, r, !1, !1)
                              );
                }
                matchTNodeWithReadOption(t, n, r) {
                    if (null !== r) {
                        const i = this.metadata.read;
                        if (null !== i)
                            if (
                                i === za ||
                                i === Sl ||
                                (i === qa && 4 & n.type)
                            )
                                this.addMatch(n.index, -2);
                            else {
                                const s = dn(n, t, i, !1, !1);
                                null !== s && this.addMatch(n.index, s);
                            }
                        else this.addMatch(n.index, r);
                    }
                }
                addMatch(t, n) {
                    null === this.matches
                        ? (this.matches = [t, n])
                        : this.matches.push(t, n);
                }
            }
            function kD(e, t) {
                const n = e.localNames;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2)
                        if (n[r] === t) return n[r + 1];
                return null;
            }
            function VD(e, t, n, r) {
                return -1 === n
                    ? (function BD(e, t) {
                          return 11 & e.type
                              ? ma(e, t)
                              : 4 & e.type
                              ? Tl(e, t)
                              : null;
                      })(t, e)
                    : -2 === n
                    ? (function UD(e, t, n) {
                          return n === za
                              ? ma(t, e)
                              : n === qa
                              ? Tl(t, e)
                              : n === Sl
                              ? tg(t, e)
                              : void 0;
                      })(e, t, r)
                    : Rt(e, e[1], n, t);
            }
            function rg(e, t, n, r) {
                const i = t[19].queries[r];
                if (null === i.matches) {
                    const s = e.data,
                        l = n.matches,
                        h = [];
                    for (let m = 0; m < l.length; m += 2) {
                        const O = l[m];
                        h.push(
                            O < 0
                                ? null
                                : VD(t, s[O], l[m + 1], n.metadata.read)
                        );
                    }
                    i.matches = h;
                }
                return i.matches;
            }
            function yc(e, t, n, r) {
                const i = e.queries.getByIndex(n),
                    s = i.matches;
                if (null !== s) {
                    const l = rg(e, t, i, n);
                    for (let h = 0; h < s.length; h += 2) {
                        const m = s[h];
                        if (m > 0) r.push(l[h / 2]);
                        else {
                            const O = s[h + 1],
                                F = t[-m];
                            for (let G = 10; G < F.length; G++) {
                                const me = F[G];
                                me[17] === me[3] && yc(me[1], me, O, r);
                            }
                            if (null !== F[9]) {
                                const G = F[9];
                                for (let me = 0; me < G.length; me++) {
                                    const Me = G[me];
                                    yc(Me[1], Me, O, r);
                                }
                            }
                        }
                    }
                }
                return r;
            }
            function ig(e) {
                const t = et(),
                    n = an(),
                    r = bn();
                In(r + 1);
                const i = ug(n, r);
                if (e.dirty && jt(t) === (2 == (2 & i.metadata.flags))) {
                    if (null === i.matches) e.reset([]);
                    else {
                        const s = i.crossesNgTemplate
                            ? yc(n, t, r, [])
                            : rg(n, t, i, r);
                        e.reset(s, rD), e.notifyOnChanges();
                    }
                    return !0;
                }
                return !1;
            }
            function sg(e, t, n, r) {
                const i = an();
                if (i.firstCreatePass) {
                    const s = ir();
                    (function lg(e, t, n) {
                        null === e.queries && (e.queries = new gc()),
                            e.queries.track(new mc(t, n));
                    })(i, new ng(t, n, r), s.index),
                        (function $D(e, t) {
                            const n =
                                e.contentQueries || (e.contentQueries = []);
                            t !== (n.length ? n[n.length - 1] : -1) &&
                                n.push(e.queries.length - 1, t);
                        })(i, e),
                        2 == (2 & n) && (i.staticContentQueries = !0);
                }
                !(function ag(e, t, n) {
                    const r = new dc(4 == (4 & n));
                    tf(e, t, r, r.destroy),
                        null === t[19] && (t[19] = new pc()),
                        t[19].queries.push(new hc(r));
                })(i, et(), n);
            }
            function og() {
                return (function HD(e, t) {
                    return e[19].queries[t].queryList;
                })(et(), bn());
            }
            function ug(e, t) {
                return e.queries.getByIndex(t);
            }
            function cg(e, t) {
                return Tl(e, t);
            }
            function Ol(...e) {}
            const bc = new It('Application Initializer');
            let Ea = (() => {
                class e {
                    constructor(n) {
                        (this.appInits = n),
                            (this.resolve = Ol),
                            (this.reject = Ol),
                            (this.initialized = !1),
                            (this.done = !1),
                            (this.donePromise = new Promise((r, i) => {
                                (this.resolve = r), (this.reject = i);
                            }));
                    }
                    runInitializers() {
                        if (this.initialized) return;
                        const n = [],
                            r = () => {
                                (this.done = !0), this.resolve();
                            };
                        if (this.appInits)
                            for (let i = 0; i < this.appInits.length; i++) {
                                const s = this.appInits[i]();
                                if (Ku(s)) n.push(s);
                                else if (ah(s)) {
                                    const l = new Promise((h, m) => {
                                        s.subscribe({ complete: h, error: m });
                                    });
                                    n.push(l);
                                }
                            }
                        Promise.all(n)
                            .then(() => {
                                r();
                            })
                            .catch((i) => {
                                this.reject(i);
                            }),
                            0 === n.length && r(),
                            (this.initialized = !0);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(gr(bc, 8));
                    }),
                    (e.ɵprov = Ft({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const Sg = new It('AppId'),
                aC = {
                    provide: Sg,
                    useFactory: function oC() {
                        return `${Ac()}${Ac()}${Ac()}`;
                    },
                    deps: [],
                };
            function Ac() {
                return String.fromCharCode(97 + Math.floor(25 * Math.random()));
            }
            const Ig = new It('Platform Initializer'),
                Mg = new It('Platform ID'),
                Og = new It('appBootstrapListener');
            let Pg = (() => {
                class e {
                    log(n) {
                        console.log(n);
                    }
                    warn(n) {
                        console.warn(n);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = Ft({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const Pl = new It('LocaleId'),
                Rg = new It('DefaultCurrencyCode');
            class lC {
                constructor(t, n) {
                    (this.ngModuleFactory = t), (this.componentFactories = n);
                }
            }
            let wc = (() => {
                class e {
                    compileModuleSync(n) {
                        return new uc(n);
                    }
                    compileModuleAsync(n) {
                        return Promise.resolve(this.compileModuleSync(n));
                    }
                    compileModuleAndAllComponentsSync(n) {
                        const r = this.compileModuleSync(n),
                            s = ro(xn(n).declarations).reduce((l, h) => {
                                const m = Yt(h);
                                return m && l.push(new lc(m)), l;
                            }, []);
                        return new lC(r, s);
                    }
                    compileModuleAndAllComponentsAsync(n) {
                        return Promise.resolve(
                            this.compileModuleAndAllComponentsSync(n)
                        );
                    }
                    clearCache() {}
                    clearCacheFor(n) {}
                    getModuleId(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = Ft({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const cC = (() => Promise.resolve(0))();
            function Tc(e) {
                'undefined' == typeof Zone
                    ? cC.then(() => {
                          e && e.apply(null, null);
                      })
                    : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
            }
            class fs {
                constructor({
                    enableLongStackTrace: t = !1,
                    shouldCoalesceEventChangeDetection: n = !1,
                    shouldCoalesceRunChangeDetection: r = !1,
                }) {
                    if (
                        ((this.hasPendingMacrotasks = !1),
                        (this.hasPendingMicrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new lo(!1)),
                        (this.onMicrotaskEmpty = new lo(!1)),
                        (this.onStable = new lo(!1)),
                        (this.onError = new lo(!1)),
                        'undefined' == typeof Zone)
                    )
                        throw new Error(
                            'In this configuration Angular requires Zone.js'
                        );
                    Zone.assertZonePatched();
                    const i = this;
                    (i._nesting = 0),
                        (i._outer = i._inner = Zone.current),
                        Zone.TaskTrackingZoneSpec &&
                            (i._inner = i._inner.fork(
                                new Zone.TaskTrackingZoneSpec()
                            )),
                        t &&
                            Zone.longStackTraceZoneSpec &&
                            (i._inner = i._inner.fork(
                                Zone.longStackTraceZoneSpec
                            )),
                        (i.shouldCoalesceEventChangeDetection = !r && n),
                        (i.shouldCoalesceRunChangeDetection = r),
                        (i.lastRequestAnimationFrameId = -1),
                        (i.nativeRequestAnimationFrame = (function dC() {
                            let e = Lt.requestAnimationFrame,
                                t = Lt.cancelAnimationFrame;
                            if ('undefined' != typeof Zone && e && t) {
                                const n =
                                    e[Zone.__symbol__('OriginalDelegate')];
                                n && (e = n);
                                const r =
                                    t[Zone.__symbol__('OriginalDelegate')];
                                r && (t = r);
                            }
                            return {
                                nativeRequestAnimationFrame: e,
                                nativeCancelAnimationFrame: t,
                            };
                        })().nativeRequestAnimationFrame),
                        (function pC(e) {
                            const t = () => {
                                !(function hC(e) {
                                    e.isCheckStableRunning ||
                                        -1 !== e.lastRequestAnimationFrameId ||
                                        ((e.lastRequestAnimationFrameId =
                                            e.nativeRequestAnimationFrame.call(
                                                Lt,
                                                () => {
                                                    e.fakeTopEventTask ||
                                                        (e.fakeTopEventTask =
                                                            Zone.root.scheduleEventTask(
                                                                'fakeTopEventTask',
                                                                () => {
                                                                    (e.lastRequestAnimationFrameId =
                                                                        -1),
                                                                        Ic(e),
                                                                        (e.isCheckStableRunning =
                                                                            !0),
                                                                        Sc(e),
                                                                        (e.isCheckStableRunning =
                                                                            !1);
                                                                },
                                                                void 0,
                                                                () => {},
                                                                () => {}
                                                            )),
                                                        e.fakeTopEventTask.invoke();
                                                }
                                            )),
                                        Ic(e));
                                })(e);
                            };
                            e._inner = e._inner.fork({
                                name: 'angular',
                                properties: { isAngularZone: !0 },
                                onInvokeTask: (n, r, i, s, l, h) => {
                                    try {
                                        return Fg(e), n.invokeTask(i, s, l, h);
                                    } finally {
                                        ((e.shouldCoalesceEventChangeDetection &&
                                            'eventTask' === s.type) ||
                                            e.shouldCoalesceRunChangeDetection) &&
                                            t(),
                                            xg(e);
                                    }
                                },
                                onInvoke: (n, r, i, s, l, h, m) => {
                                    try {
                                        return Fg(e), n.invoke(i, s, l, h, m);
                                    } finally {
                                        e.shouldCoalesceRunChangeDetection &&
                                            t(),
                                            xg(e);
                                    }
                                },
                                onHasTask: (n, r, i, s) => {
                                    n.hasTask(i, s),
                                        r === i &&
                                            ('microTask' == s.change
                                                ? ((e._hasPendingMicrotasks =
                                                      s.microTask),
                                                  Ic(e),
                                                  Sc(e))
                                                : 'macroTask' == s.change &&
                                                  (e.hasPendingMacrotasks =
                                                      s.macroTask));
                                },
                                onHandleError: (n, r, i, s) => (
                                    n.handleError(i, s),
                                    e.runOutsideAngular(() =>
                                        e.onError.emit(s)
                                    ),
                                    !1
                                ),
                            });
                        })(i);
                }
                static isInAngularZone() {
                    return (
                        'undefined' != typeof Zone &&
                        !0 === Zone.current.get('isAngularZone')
                    );
                }
                static assertInAngularZone() {
                    if (!fs.isInAngularZone())
                        throw new Error(
                            'Expected to be in Angular Zone, but it is not!'
                        );
                }
                static assertNotInAngularZone() {
                    if (fs.isInAngularZone())
                        throw new Error(
                            'Expected to not be in Angular Zone, but it is!'
                        );
                }
                run(t, n, r) {
                    return this._inner.run(t, n, r);
                }
                runTask(t, n, r, i) {
                    const s = this._inner,
                        l = s.scheduleEventTask(
                            'NgZoneEvent: ' + i,
                            t,
                            fC,
                            Ol,
                            Ol
                        );
                    try {
                        return s.runTask(l, n, r);
                    } finally {
                        s.cancelTask(l);
                    }
                }
                runGuarded(t, n, r) {
                    return this._inner.runGuarded(t, n, r);
                }
                runOutsideAngular(t) {
                    return this._outer.run(t);
                }
            }
            const fC = {};
            function Sc(e) {
                if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
                    try {
                        e._nesting++, e.onMicrotaskEmpty.emit(null);
                    } finally {
                        if ((e._nesting--, !e.hasPendingMicrotasks))
                            try {
                                e.runOutsideAngular(() =>
                                    e.onStable.emit(null)
                                );
                            } finally {
                                e.isStable = !0;
                            }
                    }
            }
            function Ic(e) {
                e.hasPendingMicrotasks = !!(
                    e._hasPendingMicrotasks ||
                    ((e.shouldCoalesceEventChangeDetection ||
                        e.shouldCoalesceRunChangeDetection) &&
                        -1 !== e.lastRequestAnimationFrameId)
                );
            }
            function Fg(e) {
                e._nesting++,
                    e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
            }
            function xg(e) {
                e._nesting--, Sc(e);
            }
            class gC {
                constructor() {
                    (this.hasPendingMicrotasks = !1),
                        (this.hasPendingMacrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new lo()),
                        (this.onMicrotaskEmpty = new lo()),
                        (this.onStable = new lo()),
                        (this.onError = new lo());
                }
                run(t, n, r) {
                    return t.apply(n, r);
                }
                runGuarded(t, n, r) {
                    return t.apply(n, r);
                }
                runOutsideAngular(t) {
                    return t();
                }
                runTask(t, n, r, i) {
                    return t.apply(n, r);
                }
            }
            let Ng = (() => {
                    class e {
                        constructor(n) {
                            (this._ngZone = n),
                                (this._pendingCount = 0),
                                (this._isZoneStable = !0),
                                (this._didWork = !1),
                                (this._callbacks = []),
                                (this.taskTrackingZone = null),
                                this._watchAngularEvents(),
                                n.run(() => {
                                    this.taskTrackingZone =
                                        'undefined' == typeof Zone
                                            ? null
                                            : Zone.current.get(
                                                  'TaskTrackingZone'
                                              );
                                });
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    (this._didWork = !0),
                                        (this._isZoneStable = !1);
                                },
                            }),
                                this._ngZone.runOutsideAngular(() => {
                                    this._ngZone.onStable.subscribe({
                                        next: () => {
                                            fs.assertNotInAngularZone(),
                                                Tc(() => {
                                                    (this._isZoneStable = !0),
                                                        this._runCallbacksIfReady();
                                                });
                                        },
                                    });
                                });
                        }
                        increasePendingRequestCount() {
                            return (
                                (this._pendingCount += 1),
                                (this._didWork = !0),
                                this._pendingCount
                            );
                        }
                        decreasePendingRequestCount() {
                            if (
                                ((this._pendingCount -= 1),
                                this._pendingCount < 0)
                            )
                                throw new Error(
                                    'pending async requests below zero'
                                );
                            return (
                                this._runCallbacksIfReady(), this._pendingCount
                            );
                        }
                        isStable() {
                            return (
                                this._isZoneStable &&
                                0 === this._pendingCount &&
                                !this._ngZone.hasPendingMacrotasks
                            );
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable())
                                Tc(() => {
                                    for (; 0 !== this._callbacks.length; ) {
                                        let n = this._callbacks.pop();
                                        clearTimeout(n.timeoutId),
                                            n.doneCb(this._didWork);
                                    }
                                    this._didWork = !1;
                                });
                            else {
                                let n = this.getPendingTasks();
                                (this._callbacks = this._callbacks.filter(
                                    (r) =>
                                        !r.updateCb ||
                                        !r.updateCb(n) ||
                                        (clearTimeout(r.timeoutId), !1)
                                )),
                                    (this._didWork = !0);
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone
                                ? this.taskTrackingZone.macroTasks.map((n) => ({
                                      source: n.source,
                                      creationLocation: n.creationLocation,
                                      data: n.data,
                                  }))
                                : [];
                        }
                        addCallback(n, r, i) {
                            let s = -1;
                            r &&
                                r > 0 &&
                                (s = setTimeout(() => {
                                    (this._callbacks = this._callbacks.filter(
                                        (l) => l.timeoutId !== s
                                    )),
                                        n(
                                            this._didWork,
                                            this.getPendingTasks()
                                        );
                                }, r)),
                                this._callbacks.push({
                                    doneCb: n,
                                    timeoutId: s,
                                    updateCb: i,
                                });
                        }
                        whenStable(n, r, i) {
                            if (i && !this.taskTrackingZone)
                                throw new Error(
                                    'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                                );
                            this.addCallback(n, r, i),
                                this._runCallbacksIfReady();
                        }
                        getPendingRequestCount() {
                            return this._pendingCount;
                        }
                        findProviders(n, r, i) {
                            return [];
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)(gr(fs));
                        }),
                        (e.ɵprov = Ft({ token: e, factory: e.ɵfac })),
                        e
                    );
                })(),
                Lg = (() => {
                    class e {
                        constructor() {
                            (this._applications = new Map()),
                                Mc.addToWindow(this);
                        }
                        registerApplication(n, r) {
                            this._applications.set(n, r);
                        }
                        unregisterApplication(n) {
                            this._applications.delete(n);
                        }
                        unregisterAllApplications() {
                            this._applications.clear();
                        }
                        getTestability(n) {
                            return this._applications.get(n) || null;
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values());
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys());
                        }
                        findTestabilityInTree(n, r = !0) {
                            return Mc.findTestabilityInTree(this, n, r);
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)();
                        }),
                        (e.ɵprov = Ft({ token: e, factory: e.ɵfac })),
                        e
                    );
                })();
            class mC {
                addToWindow(t) {}
                findTestabilityInTree(t, n, r) {
                    return null;
                }
            }
            function yC(e) {
                Mc = e;
            }
            let Ws,
                Mc = new mC();
            const kg = new It('AllowMultipleToken');
            class EC {
                constructor(t, n) {
                    (this.name = t), (this.token = n);
                }
            }
            function Bg(e, t, n = []) {
                const r = `Platform: ${t}`,
                    i = new It(r);
                return (s = []) => {
                    let l = Vg();
                    if (!l || l.injector.get(kg, !1))
                        if (e)
                            e(n.concat(s).concat({ provide: i, useValue: !0 }));
                        else {
                            const h = n
                                .concat(s)
                                .concat(
                                    { provide: i, useValue: !0 },
                                    { provide: Iu, useValue: 'platform' }
                                );
                            !(function DC(e) {
                                if (
                                    Ws &&
                                    !Ws.destroyed &&
                                    !Ws.injector.get(kg, !1)
                                )
                                    throw new xe(400, '');
                                Ws = e.get(Ug);
                                const t = e.get(Ig, null);
                                t && t.forEach((n) => n());
                            })(ws.create({ providers: h, name: r }));
                        }
                    return (function CC(e) {
                        const t = Vg();
                        if (!t) throw new xe(401, '');
                        return t;
                    })();
                };
            }
            function Vg() {
                return Ws && !Ws.destroyed ? Ws : null;
            }
            let Ug = (() => {
                class e {
                    constructor(n) {
                        (this._injector = n),
                            (this._modules = []),
                            (this._destroyListeners = []),
                            (this._destroyed = !1);
                    }
                    bootstrapModuleFactory(n, r) {
                        const h = (function bC(e, t) {
                                let n;
                                return (
                                    (n =
                                        'noop' === e
                                            ? new gC()
                                            : ('zone.js' === e ? void 0 : e) ||
                                              new fs({
                                                  enableLongStackTrace: !1,
                                                  shouldCoalesceEventChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneEventCoalescing),
                                                  shouldCoalesceRunChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneRunCoalescing),
                                              })),
                                    n
                                );
                            })(r ? r.ngZone : void 0, {
                                ngZoneEventCoalescing:
                                    (r && r.ngZoneEventCoalescing) || !1,
                                ngZoneRunCoalescing:
                                    (r && r.ngZoneRunCoalescing) || !1,
                            }),
                            m = [{ provide: fs, useValue: h }];
                        return h.run(() => {
                            const O = ws.create({
                                    providers: m,
                                    parent: this.injector,
                                    name: n.moduleType.name,
                                }),
                                F = n.create(O),
                                G = F.injector.get(Pa, null);
                            if (!G) throw new xe(402, '');
                            return (
                                h.runOutsideAngular(() => {
                                    const me = h.onError.subscribe({
                                        next: (Me) => {
                                            G.handleError(Me);
                                        },
                                    });
                                    F.onDestroy(() => {
                                        Oc(this._modules, F), me.unsubscribe();
                                    });
                                }),
                                (function AC(e, t, n) {
                                    try {
                                        const r = n();
                                        return Ku(r)
                                            ? r.catch((i) => {
                                                  throw (
                                                      (t.runOutsideAngular(() =>
                                                          e.handleError(i)
                                                      ),
                                                      i)
                                                  );
                                              })
                                            : r;
                                    } catch (r) {
                                        throw (
                                            (t.runOutsideAngular(() =>
                                                e.handleError(r)
                                            ),
                                            r)
                                        );
                                    }
                                })(G, h, () => {
                                    const me = F.injector.get(Ea);
                                    return (
                                        me.runInitializers(),
                                        me.donePromise.then(
                                            () => (
                                                (function iE(e) {
                                                    Et(
                                                        e,
                                                        'Expected localeId to be defined'
                                                    ),
                                                        'string' == typeof e &&
                                                            (op = e
                                                                .toLowerCase()
                                                                .replace(
                                                                    /_/g,
                                                                    '-'
                                                                ));
                                                })(
                                                    F.injector.get(Pl, El) || El
                                                ),
                                                this._moduleDoBootstrap(F),
                                                F
                                            )
                                        )
                                    );
                                })
                            );
                        });
                    }
                    bootstrapModule(n, r = []) {
                        const i = jg({}, r);
                        return (function _C(e, t, n) {
                            const r = new uc(n);
                            return Promise.resolve(r);
                        })(0, 0, n).then((s) =>
                            this.bootstrapModuleFactory(s, i)
                        );
                    }
                    _moduleDoBootstrap(n) {
                        const r = n.injector.get(Ja);
                        if (n._bootstrapComponents.length > 0)
                            n._bootstrapComponents.forEach((i) =>
                                r.bootstrap(i)
                            );
                        else {
                            if (!n.instance.ngDoBootstrap)
                                throw new xe(403, '');
                            n.instance.ngDoBootstrap(r);
                        }
                        this._modules.push(n);
                    }
                    onDestroy(n) {
                        this._destroyListeners.push(n);
                    }
                    get injector() {
                        return this._injector;
                    }
                    destroy() {
                        if (this._destroyed) throw new xe(404, '');
                        this._modules.slice().forEach((n) => n.destroy()),
                            this._destroyListeners.forEach((n) => n()),
                            (this._destroyed = !0);
                    }
                    get destroyed() {
                        return this._destroyed;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(gr(ws));
                    }),
                    (e.ɵprov = Ft({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            function jg(e, t) {
                return Array.isArray(t)
                    ? t.reduce(jg, e)
                    : Object.assign(Object.assign({}, e), t);
            }
            let Ja = (() => {
                class e {
                    constructor(n, r, i, s, l) {
                        (this._zone = n),
                            (this._injector = r),
                            (this._exceptionHandler = i),
                            (this._componentFactoryResolver = s),
                            (this._initStatus = l),
                            (this._bootstrapListeners = []),
                            (this._views = []),
                            (this._runningTick = !1),
                            (this._stable = !0),
                            (this.componentTypes = []),
                            (this.components = []),
                            (this._onMicrotaskEmptySubscription =
                                this._zone.onMicrotaskEmpty.subscribe({
                                    next: () => {
                                        this._zone.run(() => {
                                            this.tick();
                                        });
                                    },
                                }));
                        const h = new H.y((O) => {
                                (this._stable =
                                    this._zone.isStable &&
                                    !this._zone.hasPendingMacrotasks &&
                                    !this._zone.hasPendingMicrotasks),
                                    this._zone.runOutsideAngular(() => {
                                        O.next(this._stable), O.complete();
                                    });
                            }),
                            m = new H.y((O) => {
                                let F;
                                this._zone.runOutsideAngular(() => {
                                    F = this._zone.onStable.subscribe(() => {
                                        fs.assertNotInAngularZone(),
                                            Tc(() => {
                                                !this._stable &&
                                                    !this._zone
                                                        .hasPendingMacrotasks &&
                                                    !this._zone
                                                        .hasPendingMicrotasks &&
                                                    ((this._stable = !0),
                                                    O.next(!0));
                                            });
                                    });
                                });
                                const G = this._zone.onUnstable.subscribe(
                                    () => {
                                        fs.assertInAngularZone(),
                                            this._stable &&
                                                ((this._stable = !1),
                                                this._zone.runOutsideAngular(
                                                    () => {
                                                        O.next(!1);
                                                    }
                                                ));
                                    }
                                );
                                return () => {
                                    F.unsubscribe(), G.unsubscribe();
                                };
                            });
                        this.isStable = (0, w.T)(h, m.pipe((0, $.B)()));
                    }
                    bootstrap(n, r) {
                        if (!this._initStatus.done) throw new xe(405, '');
                        let i;
                        (i =
                            n instanceof Rp
                                ? n
                                : this._componentFactoryResolver.resolveComponentFactory(
                                      n
                                  )),
                            this.componentTypes.push(i.componentType);
                        const s = (function vC(e) {
                                return e.isBoundToModule;
                            })(i)
                                ? void 0
                                : this._injector.get(ya),
                            h = i.create(ws.NULL, [], r || i.selector, s),
                            m = h.location.nativeElement,
                            O = h.injector.get(Ng, null),
                            F = O && h.injector.get(Lg);
                        return (
                            O && F && F.registerApplication(m, O),
                            h.onDestroy(() => {
                                this.detachView(h.hostView),
                                    Oc(this.components, h),
                                    F && F.unregisterApplication(m);
                            }),
                            this._loadComponent(h),
                            h
                        );
                    }
                    tick() {
                        if (this._runningTick) throw new xe(101, '');
                        try {
                            this._runningTick = !0;
                            for (let n of this._views) n.detectChanges();
                        } catch (n) {
                            this._zone.runOutsideAngular(() =>
                                this._exceptionHandler.handleError(n)
                            );
                        } finally {
                            this._runningTick = !1;
                        }
                    }
                    attachView(n) {
                        const r = n;
                        this._views.push(r), r.attachToAppRef(this);
                    }
                    detachView(n) {
                        const r = n;
                        Oc(this._views, r), r.detachFromAppRef();
                    }
                    _loadComponent(n) {
                        this.attachView(n.hostView),
                            this.tick(),
                            this.components.push(n),
                            this._injector
                                .get(Og, [])
                                .concat(this._bootstrapListeners)
                                .forEach((i) => i(n));
                    }
                    ngOnDestroy() {
                        this._views.slice().forEach((n) => n.destroy()),
                            this._onMicrotaskEmptySubscription.unsubscribe();
                    }
                    get viewCount() {
                        return this._views.length;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(
                            gr(fs),
                            gr(ws),
                            gr(Pa),
                            gr(Wa),
                            gr(Ea)
                        );
                    }),
                    (e.ɵprov = Ft({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            function Oc(e, t) {
                const n = e.indexOf(t);
                n > -1 && e.splice(n, 1);
            }
            let $g = !0,
                Gg = !1;
            function TC() {
                return (Gg = !0), $g;
            }
            function SC() {
                if (Gg)
                    throw new Error(
                        'Cannot enable prod mode after platform setup.'
                    );
                $g = !1;
            }
            let IC = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = MC), e;
            })();
            function MC(e) {
                return (function OC(e, t, n) {
                    if (On(e) && !n) {
                        const r = At(e.index, t);
                        return new Ka(r, r);
                    }
                    return 47 & e.type ? new Ka(t[16], t) : null;
                })(ir(), et(), 16 == (16 & e));
            }
            class qg {
                constructor() {}
                supports(t) {
                    return ka(t);
                }
                create(t) {
                    return new LC(t);
                }
            }
            const NC = (e, t) => t;
            class LC {
                constructor(t) {
                    (this.length = 0),
                        (this._linkedRecords = null),
                        (this._unlinkedRecords = null),
                        (this._previousItHead = null),
                        (this._itHead = null),
                        (this._itTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._movesHead = null),
                        (this._movesTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null),
                        (this._identityChangesHead = null),
                        (this._identityChangesTail = null),
                        (this._trackByFn = t || NC);
                }
                forEachItem(t) {
                    let n;
                    for (n = this._itHead; null !== n; n = n._next) t(n);
                }
                forEachOperation(t) {
                    let n = this._itHead,
                        r = this._removalsHead,
                        i = 0,
                        s = null;
                    for (; n || r; ) {
                        const l =
                                !r || (n && n.currentIndex < Jg(r, i, s))
                                    ? n
                                    : r,
                            h = Jg(l, i, s),
                            m = l.currentIndex;
                        if (l === r) i--, (r = r._nextRemoved);
                        else if (((n = n._next), null == l.previousIndex)) i++;
                        else {
                            s || (s = []);
                            const O = h - i,
                                F = m - i;
                            if (O != F) {
                                for (let me = 0; me < O; me++) {
                                    const Me =
                                            me < s.length ? s[me] : (s[me] = 0),
                                        Qe = Me + me;
                                    F <= Qe && Qe < O && (s[me] = Me + 1);
                                }
                                s[l.previousIndex] = F - O;
                            }
                        }
                        h !== m && t(l, h, m);
                    }
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousItHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachMovedItem(t) {
                    let n;
                    for (n = this._movesHead; null !== n; n = n._nextMoved)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                forEachIdentityChange(t) {
                    let n;
                    for (
                        n = this._identityChangesHead;
                        null !== n;
                        n = n._nextIdentityChange
                    )
                        t(n);
                }
                diff(t) {
                    if ((null == t && (t = []), !ka(t))) throw new xe(900, '');
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let i,
                        s,
                        l,
                        n = this._itHead,
                        r = !1;
                    if (Array.isArray(t)) {
                        this.length = t.length;
                        for (let h = 0; h < this.length; h++)
                            (s = t[h]),
                                (l = this._trackByFn(h, s)),
                                null !== n && Object.is(n.trackById, l)
                                    ? (r &&
                                          (n = this._verifyReinsertion(
                                              n,
                                              s,
                                              l,
                                              h
                                          )),
                                      Object.is(n.item, s) ||
                                          this._addIdentityChange(n, s))
                                    : ((n = this._mismatch(n, s, l, h)),
                                      (r = !0)),
                                (n = n._next);
                    } else
                        (i = 0),
                            (function G_(e, t) {
                                if (Array.isArray(e))
                                    for (let n = 0; n < e.length; n++) t(e[n]);
                                else {
                                    const n = e[na()]();
                                    let r;
                                    for (; !(r = n.next()).done; ) t(r.value);
                                }
                            })(t, (h) => {
                                (l = this._trackByFn(i, h)),
                                    null !== n && Object.is(n.trackById, l)
                                        ? (r &&
                                              (n = this._verifyReinsertion(
                                                  n,
                                                  h,
                                                  l,
                                                  i
                                              )),
                                          Object.is(n.item, h) ||
                                              this._addIdentityChange(n, h))
                                        : ((n = this._mismatch(n, h, l, i)),
                                          (r = !0)),
                                    (n = n._next),
                                    i++;
                            }),
                            (this.length = i);
                    return (
                        this._truncate(n), (this.collection = t), this.isDirty
                    );
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._movesHead ||
                        null !== this._removalsHead ||
                        null !== this._identityChangesHead
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            t = this._previousItHead = this._itHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._additionsHead;
                            null !== t;
                            t = t._nextAdded
                        )
                            t.previousIndex = t.currentIndex;
                        for (
                            this._additionsHead = this._additionsTail = null,
                                t = this._movesHead;
                            null !== t;
                            t = t._nextMoved
                        )
                            t.previousIndex = t.currentIndex;
                        (this._movesHead = this._movesTail = null),
                            (this._removalsHead = this._removalsTail = null),
                            (this._identityChangesHead =
                                this._identityChangesTail =
                                    null);
                    }
                }
                _mismatch(t, n, r, i) {
                    let s;
                    return (
                        null === t
                            ? (s = this._itTail)
                            : ((s = t._prev), this._remove(t)),
                        null !==
                        (t =
                            null === this._unlinkedRecords
                                ? null
                                : this._unlinkedRecords.get(r, null))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._reinsertAfter(t, s, i))
                            : null !==
                              (t =
                                  null === this._linkedRecords
                                      ? null
                                      : this._linkedRecords.get(r, i))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._moveAfter(t, s, i))
                            : (t = this._addAfter(new kC(n, r), s, i)),
                        t
                    );
                }
                _verifyReinsertion(t, n, r, i) {
                    let s =
                        null === this._unlinkedRecords
                            ? null
                            : this._unlinkedRecords.get(r, null);
                    return (
                        null !== s
                            ? (t = this._reinsertAfter(s, t._prev, i))
                            : t.currentIndex != i &&
                              ((t.currentIndex = i), this._addToMoves(t, i)),
                        t
                    );
                }
                _truncate(t) {
                    for (; null !== t; ) {
                        const n = t._next;
                        this._addToRemovals(this._unlink(t)), (t = n);
                    }
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.clear(),
                        null !== this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        null !== this._movesTail &&
                            (this._movesTail._nextMoved = null),
                        null !== this._itTail && (this._itTail._next = null),
                        null !== this._removalsTail &&
                            (this._removalsTail._nextRemoved = null),
                        null !== this._identityChangesTail &&
                            (this._identityChangesTail._nextIdentityChange =
                                null);
                }
                _reinsertAfter(t, n, r) {
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.remove(t);
                    const i = t._prevRemoved,
                        s = t._nextRemoved;
                    return (
                        null === i
                            ? (this._removalsHead = s)
                            : (i._nextRemoved = s),
                        null === s
                            ? (this._removalsTail = i)
                            : (s._prevRemoved = i),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _moveAfter(t, n, r) {
                    return (
                        this._unlink(t),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _addAfter(t, n, r) {
                    return (
                        this._insertAfter(t, n, r),
                        (this._additionsTail =
                            null === this._additionsTail
                                ? (this._additionsHead = t)
                                : (this._additionsTail._nextAdded = t)),
                        t
                    );
                }
                _insertAfter(t, n, r) {
                    const i = null === n ? this._itHead : n._next;
                    return (
                        (t._next = i),
                        (t._prev = n),
                        null === i ? (this._itTail = t) : (i._prev = t),
                        null === n ? (this._itHead = t) : (n._next = t),
                        null === this._linkedRecords &&
                            (this._linkedRecords = new Qg()),
                        this._linkedRecords.put(t),
                        (t.currentIndex = r),
                        t
                    );
                }
                _remove(t) {
                    return this._addToRemovals(this._unlink(t));
                }
                _unlink(t) {
                    null !== this._linkedRecords &&
                        this._linkedRecords.remove(t);
                    const n = t._prev,
                        r = t._next;
                    return (
                        null === n ? (this._itHead = r) : (n._next = r),
                        null === r ? (this._itTail = n) : (r._prev = n),
                        t
                    );
                }
                _addToMoves(t, n) {
                    return (
                        t.previousIndex === n ||
                            (this._movesTail =
                                null === this._movesTail
                                    ? (this._movesHead = t)
                                    : (this._movesTail._nextMoved = t)),
                        t
                    );
                }
                _addToRemovals(t) {
                    return (
                        null === this._unlinkedRecords &&
                            (this._unlinkedRecords = new Qg()),
                        this._unlinkedRecords.put(t),
                        (t.currentIndex = null),
                        (t._nextRemoved = null),
                        null === this._removalsTail
                            ? ((this._removalsTail = this._removalsHead = t),
                              (t._prevRemoved = null))
                            : ((t._prevRemoved = this._removalsTail),
                              (this._removalsTail =
                                  this._removalsTail._nextRemoved =
                                      t)),
                        t
                    );
                }
                _addIdentityChange(t, n) {
                    return (
                        (t.item = n),
                        (this._identityChangesTail =
                            null === this._identityChangesTail
                                ? (this._identityChangesHead = t)
                                : (this._identityChangesTail._nextIdentityChange =
                                      t)),
                        t
                    );
                }
            }
            class kC {
                constructor(t, n) {
                    (this.item = t),
                        (this.trackById = n),
                        (this.currentIndex = null),
                        (this.previousIndex = null),
                        (this._nextPrevious = null),
                        (this._prev = null),
                        (this._next = null),
                        (this._prevDup = null),
                        (this._nextDup = null),
                        (this._prevRemoved = null),
                        (this._nextRemoved = null),
                        (this._nextAdded = null),
                        (this._nextMoved = null),
                        (this._nextIdentityChange = null);
                }
            }
            class BC {
                constructor() {
                    (this._head = null), (this._tail = null);
                }
                add(t) {
                    null === this._head
                        ? ((this._head = this._tail = t),
                          (t._nextDup = null),
                          (t._prevDup = null))
                        : ((this._tail._nextDup = t),
                          (t._prevDup = this._tail),
                          (t._nextDup = null),
                          (this._tail = t));
                }
                get(t, n) {
                    let r;
                    for (r = this._head; null !== r; r = r._nextDup)
                        if (
                            (null === n || n <= r.currentIndex) &&
                            Object.is(r.trackById, t)
                        )
                            return r;
                    return null;
                }
                remove(t) {
                    const n = t._prevDup,
                        r = t._nextDup;
                    return (
                        null === n ? (this._head = r) : (n._nextDup = r),
                        null === r ? (this._tail = n) : (r._prevDup = n),
                        null === this._head
                    );
                }
            }
            class Qg {
                constructor() {
                    this.map = new Map();
                }
                put(t) {
                    const n = t.trackById;
                    let r = this.map.get(n);
                    r || ((r = new BC()), this.map.set(n, r)), r.add(t);
                }
                get(t, n) {
                    const i = this.map.get(t);
                    return i ? i.get(t, n) : null;
                }
                remove(t) {
                    const n = t.trackById;
                    return this.map.get(n).remove(t) && this.map.delete(n), t;
                }
                get isEmpty() {
                    return 0 === this.map.size;
                }
                clear() {
                    this.map.clear();
                }
            }
            function Jg(e, t, n) {
                const r = e.previousIndex;
                if (null === r) return r;
                let i = 0;
                return n && r < n.length && (i = n[r]), r + t + i;
            }
            class Xg {
                constructor() {}
                supports(t) {
                    return t instanceof Map || Nu(t);
                }
                create() {
                    return new VC();
                }
            }
            class VC {
                constructor() {
                    (this._records = new Map()),
                        (this._mapHead = null),
                        (this._appendAfter = null),
                        (this._previousMapHead = null),
                        (this._changesHead = null),
                        (this._changesTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null);
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._changesHead ||
                        null !== this._removalsHead
                    );
                }
                forEachItem(t) {
                    let n;
                    for (n = this._mapHead; null !== n; n = n._next) t(n);
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousMapHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachChangedItem(t) {
                    let n;
                    for (n = this._changesHead; null !== n; n = n._nextChanged)
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                diff(t) {
                    if (t) {
                        if (!(t instanceof Map || Nu(t))) throw new xe(900, '');
                    } else t = new Map();
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let n = this._mapHead;
                    if (
                        ((this._appendAfter = null),
                        this._forEach(t, (r, i) => {
                            if (n && n.key === i)
                                this._maybeAddToChanges(n, r),
                                    (this._appendAfter = n),
                                    (n = n._next);
                            else {
                                const s = this._getOrCreateRecordForKey(i, r);
                                n = this._insertBeforeOrAppend(n, s);
                            }
                        }),
                        n)
                    ) {
                        n._prev && (n._prev._next = null),
                            (this._removalsHead = n);
                        for (let r = n; null !== r; r = r._nextRemoved)
                            r === this._mapHead && (this._mapHead = null),
                                this._records.delete(r.key),
                                (r._nextRemoved = r._next),
                                (r.previousValue = r.currentValue),
                                (r.currentValue = null),
                                (r._prev = null),
                                (r._next = null);
                    }
                    return (
                        this._changesTail &&
                            (this._changesTail._nextChanged = null),
                        this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        this.isDirty
                    );
                }
                _insertBeforeOrAppend(t, n) {
                    if (t) {
                        const r = t._prev;
                        return (
                            (n._next = t),
                            (n._prev = r),
                            (t._prev = n),
                            r && (r._next = n),
                            t === this._mapHead && (this._mapHead = n),
                            (this._appendAfter = t),
                            t
                        );
                    }
                    return (
                        this._appendAfter
                            ? ((this._appendAfter._next = n),
                              (n._prev = this._appendAfter))
                            : (this._mapHead = n),
                        (this._appendAfter = n),
                        null
                    );
                }
                _getOrCreateRecordForKey(t, n) {
                    if (this._records.has(t)) {
                        const i = this._records.get(t);
                        this._maybeAddToChanges(i, n);
                        const s = i._prev,
                            l = i._next;
                        return (
                            s && (s._next = l),
                            l && (l._prev = s),
                            (i._next = null),
                            (i._prev = null),
                            i
                        );
                    }
                    const r = new UC(t);
                    return (
                        this._records.set(t, r),
                        (r.currentValue = n),
                        this._addToAdditions(r),
                        r
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            this._previousMapHead = this._mapHead,
                                t = this._previousMapHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._changesHead;
                            null !== t;
                            t = t._nextChanged
                        )
                            t.previousValue = t.currentValue;
                        for (
                            t = this._additionsHead;
                            null != t;
                            t = t._nextAdded
                        )
                            t.previousValue = t.currentValue;
                        (this._changesHead = this._changesTail = null),
                            (this._additionsHead = this._additionsTail = null),
                            (this._removalsHead = null);
                    }
                }
                _maybeAddToChanges(t, n) {
                    Object.is(n, t.currentValue) ||
                        ((t.previousValue = t.currentValue),
                        (t.currentValue = n),
                        this._addToChanges(t));
                }
                _addToAdditions(t) {
                    null === this._additionsHead
                        ? (this._additionsHead = this._additionsTail = t)
                        : ((this._additionsTail._nextAdded = t),
                          (this._additionsTail = t));
                }
                _addToChanges(t) {
                    null === this._changesHead
                        ? (this._changesHead = this._changesTail = t)
                        : ((this._changesTail._nextChanged = t),
                          (this._changesTail = t));
                }
                _forEach(t, n) {
                    t instanceof Map
                        ? t.forEach(n)
                        : Object.keys(t).forEach((r) => n(t[r], r));
                }
            }
            class UC {
                constructor(t) {
                    (this.key = t),
                        (this.previousValue = null),
                        (this.currentValue = null),
                        (this._nextPrevious = null),
                        (this._next = null),
                        (this._prev = null),
                        (this._nextAdded = null),
                        (this._nextRemoved = null),
                        (this._nextChanged = null);
                }
            }
            function em() {
                return new Fl([new qg()]);
            }
            let Fl = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (null != r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || em()),
                            deps: [[e, new zo(), new ko()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((i) => i.supports(n));
                        if (null != r) return r;
                        throw new xe(901, '');
                    }
                }
                return (
                    (e.ɵprov = Ft({
                        token: e,
                        providedIn: 'root',
                        factory: em,
                    })),
                    e
                );
            })();
            function tm() {
                return new xl([new Xg()]);
            }
            let xl = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || tm()),
                            deps: [[e, new zo(), new ko()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((s) => s.supports(n));
                        if (r) return r;
                        throw new xe(901, '');
                    }
                }
                return (
                    (e.ɵprov = Ft({
                        token: e,
                        providedIn: 'root',
                        factory: tm,
                    })),
                    e
                );
            })();
            const jC = [new Xg()],
                $C = new Fl([new qg()]),
                GC = new xl(jC),
                WC = Bg(null, 'core', [
                    { provide: Mg, useValue: 'unknown' },
                    { provide: Ug, deps: [ws] },
                    { provide: Lg, deps: [] },
                    { provide: Pg, deps: [] },
                ]),
                qC = [
                    { provide: Ja, useClass: Ja, deps: [fs, ws, Pa, Wa, Ea] },
                    {
                        provide: cD,
                        deps: [fs],
                        useFactory: function QC(e) {
                            let t = [];
                            return (
                                e.onStable.subscribe(() => {
                                    for (; t.length; ) t.pop()();
                                }),
                                function (n) {
                                    t.push(n);
                                }
                            );
                        },
                    },
                    { provide: Ea, useClass: Ea, deps: [[new ko(), bc]] },
                    { provide: wc, useClass: wc, deps: [] },
                    aC,
                    {
                        provide: Fl,
                        useFactory: function zC() {
                            return $C;
                        },
                        deps: [],
                    },
                    {
                        provide: xl,
                        useFactory: function KC() {
                            return GC;
                        },
                        deps: [],
                    },
                    {
                        provide: Pl,
                        useFactory: function YC(e) {
                            return (
                                e ||
                                (function ZC() {
                                    return (
                                        ('undefined' != typeof $localize &&
                                            $localize.locale) ||
                                        El
                                    );
                                })()
                            );
                        },
                        deps: [[new wa(Pl), new ko(), new zo()]],
                    },
                    { provide: Rg, useValue: 'USD' },
                ];
            let JC = (() => {
                class e {
                    constructor(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(gr(Ja));
                    }),
                    (e.ɵmod = en({ type: e })),
                    (e.ɵinj = An({ providers: qC })),
                    e
                );
            })();
        },
        6115: (_e, z, y) => {
            'use strict';
            y.d(z, { F0: () => Ur, rH: () => Fs, Bz: () => go, lC: () => we });
            var d = y(5e3),
                P = y(8306),
                H = y(4742),
                w = y(8996),
                $ = y(4671),
                ae = y(3268),
                re = y(7669),
                se = y(1810),
                Y = y(5403),
                j = y(9672);
            function Ce(p, c, u) {
                p ? (0, j.f)(u, p, c) : c();
            }
            var be = y(8421);
            function xe(p) {
                return new P.y((c) => {
                    (0, be.Xf)(p()).subscribe(c);
                });
            }
            var We = y(727),
                de = y(4482);
            function Q() {
                return (0, de.e)((p, c) => {
                    let u = null;
                    p._refCount++;
                    const C = new Y.Q(c, void 0, void 0, void 0, () => {
                        if (!p || p._refCount <= 0 || 0 < --p._refCount)
                            return void (u = null);
                        const I = p._connection,
                            k = u;
                        (u = null),
                            I && (!k || I === k) && I.unsubscribe(),
                            c.unsubscribe();
                    });
                    p.subscribe(C), C.closed || (u = p.connect());
                });
            }
            class ye extends P.y {
                constructor(c, u) {
                    super(),
                        (this.source = c),
                        (this.subjectFactory = u),
                        (this._subject = null),
                        (this._refCount = 0),
                        (this._connection = null),
                        (0, de.A)(c) && (this.lift = c.lift);
                }
                _subscribe(c) {
                    return this.getSubject().subscribe(c);
                }
                getSubject() {
                    const c = this._subject;
                    return (
                        (!c || c.isStopped) &&
                            (this._subject = this.subjectFactory()),
                        this._subject
                    );
                }
                _teardown() {
                    this._refCount = 0;
                    const { _connection: c } = this;
                    (this._subject = this._connection = null),
                        null == c || c.unsubscribe();
                }
                connect() {
                    let c = this._connection;
                    if (!c) {
                        c = this._connection = new We.w0();
                        const u = this.getSubject();
                        c.add(
                            this.source.subscribe(
                                new Y.Q(
                                    u,
                                    void 0,
                                    () => {
                                        this._teardown(), u.complete();
                                    },
                                    (C) => {
                                        this._teardown(), u.error(C);
                                    },
                                    () => this._teardown()
                                )
                            )
                        ),
                            c.closed &&
                                ((this._connection = null), (c = We.w0.EMPTY));
                    }
                    return c;
                }
                refCount() {
                    return Q()(this);
                }
            }
            var M = y(9646),
                R = y(1135),
                oe = y(6805),
                J = y(7272),
                Ve = y(515),
                He = y(7579),
                Je = y(9300);
            function te(p) {
                return p <= 0
                    ? () => Ve.E
                    : (0, de.e)((c, u) => {
                          let C = [];
                          c.subscribe(
                              new Y.Q(
                                  u,
                                  (I) => {
                                      C.push(I), p < C.length && C.shift();
                                  },
                                  () => {
                                      for (const I of C) u.next(I);
                                      u.complete();
                                  },
                                  void 0,
                                  () => {
                                      C = null;
                                  }
                              )
                          );
                      });
            }
            var Re = y(8068),
                Oe = y(6590),
                Ae = y(4004),
                wt = y(3900),
                rn = y(5698),
                Bn = y(8675),
                Et = y(5026),
                _t = y(262),
                Vn = y(4351),
                Zt = y(590),
                sn = y(5577),
                Ft = y(8505),
                $n = y(8189),
                An = y(9808);
            class Jt {
                constructor(c, u) {
                    (this.id = c), (this.url = u);
                }
            }
            class ar extends Jt {
                constructor(c, u, C = 'imperative', I = null) {
                    super(c, u),
                        (this.navigationTrigger = C),
                        (this.restoredState = I);
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class Dn extends Jt {
                constructor(c, u, C) {
                    super(c, u), (this.urlAfterRedirects = C);
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
                }
            }
            class cn extends Jt {
                constructor(c, u, C) {
                    super(c, u), (this.reason = C);
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class Rn extends Jt {
                constructor(c, u, C) {
                    super(c, u), (this.error = C);
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
                }
            }
            class tr extends Jt {
                constructor(c, u, C, I) {
                    super(c, u), (this.urlAfterRedirects = C), (this.state = I);
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class fr extends Jt {
                constructor(c, u, C, I) {
                    super(c, u), (this.urlAfterRedirects = C), (this.state = I);
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Hn extends Jt {
                constructor(c, u, C, I, k) {
                    super(c, u),
                        (this.urlAfterRedirects = C),
                        (this.state = I),
                        (this.shouldActivate = k);
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
                }
            }
            class Sr extends Jt {
                constructor(c, u, C, I) {
                    super(c, u), (this.urlAfterRedirects = C), (this.state = I);
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class St extends Jt {
                constructor(c, u, C, I) {
                    super(c, u), (this.urlAfterRedirects = C), (this.state = I);
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Qn {
                constructor(c) {
                    this.route = c;
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`;
                }
            }
            class Fn {
                constructor(c) {
                    this.route = c;
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`;
                }
            }
            class gn {
                constructor(c) {
                    this.snapshot = c;
                }
                toString() {
                    return `ChildActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class Ir {
                constructor(c) {
                    this.snapshot = c;
                }
                toString() {
                    return `ChildActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class Ie {
                constructor(c) {
                    this.snapshot = c;
                }
                toString() {
                    return `ActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class W {
                constructor(c) {
                    this.snapshot = c;
                }
                toString() {
                    return `ActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class ne {
                constructor(c, u, C) {
                    (this.routerEvent = c),
                        (this.position = u),
                        (this.anchor = C);
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${
                        this.position
                            ? `${this.position[0]}, ${this.position[1]}`
                            : null
                    }')`;
                }
            }
            const De = 'primary';
            class Ke {
                constructor(c) {
                    this.params = c || {};
                }
                has(c) {
                    return Object.prototype.hasOwnProperty.call(this.params, c);
                }
                get(c) {
                    if (this.has(c)) {
                        const u = this.params[c];
                        return Array.isArray(u) ? u[0] : u;
                    }
                    return null;
                }
                getAll(c) {
                    if (this.has(c)) {
                        const u = this.params[c];
                        return Array.isArray(u) ? u : [u];
                    }
                    return [];
                }
                get keys() {
                    return Object.keys(this.params);
                }
            }
            function at(p) {
                return new Ke(p);
            }
            const st = 'ngNavigationCancelingError';
            function ut(p) {
                const c = Error('NavigationCancelingError: ' + p);
                return (c[st] = !0), c;
            }
            function mn(p, c, u) {
                const C = u.path.split('/');
                if (
                    C.length > p.length ||
                    ('full' === u.pathMatch &&
                        (c.hasChildren() || C.length < p.length))
                )
                    return null;
                const I = {};
                for (let k = 0; k < C.length; k++) {
                    const q = C[k],
                        pe = p[k];
                    if (q.startsWith(':')) I[q.substring(1)] = pe;
                    else if (q !== pe.path) return null;
                }
                return { consumed: p.slice(0, C.length), posParams: I };
            }
            function Gn(p, c) {
                const u = p ? Object.keys(p) : void 0,
                    C = c ? Object.keys(c) : void 0;
                if (!u || !C || u.length != C.length) return !1;
                let I;
                for (let k = 0; k < u.length; k++)
                    if (((I = u[k]), !wn(p[I], c[I]))) return !1;
                return !0;
            }
            function wn(p, c) {
                if (Array.isArray(p) && Array.isArray(c)) {
                    if (p.length !== c.length) return !1;
                    const u = [...p].sort(),
                        C = [...c].sort();
                    return u.every((I, k) => C[k] === I);
                }
                return p === c;
            }
            function $t(p) {
                return Array.prototype.concat.apply([], p);
            }
            function Z(p) {
                return p.length > 0 ? p[p.length - 1] : null;
            }
            function ue(p, c) {
                for (const u in p) p.hasOwnProperty(u) && c(p[u], u);
            }
            function Le(p) {
                return (0, d.CqO)(p)
                    ? p
                    : (0, d.QGY)(p)
                    ? (0, w.D)(Promise.resolve(p))
                    : (0, M.of)(p);
            }
            const pt = {
                    exact: function nt(p, c, u) {
                        if (
                            !Yt(p.segments, c.segments) ||
                            !en(p.segments, c.segments, u) ||
                            p.numberOfChildren !== c.numberOfChildren
                        )
                            return !1;
                        for (const C in c.children)
                            if (
                                !p.children[C] ||
                                !nt(p.children[C], c.children[C], u)
                            )
                                return !1;
                        return !0;
                    },
                    subset: dt,
                },
                ve = {
                    exact: function $e(p, c) {
                        return Gn(p, c);
                    },
                    subset: function Ct(p, c) {
                        return (
                            Object.keys(c).length <= Object.keys(p).length &&
                            Object.keys(c).every((u) => wn(p[u], c[u]))
                        );
                    },
                    ignored: () => !0,
                };
            function je(p, c, u) {
                return (
                    pt[u.paths](p.root, c.root, u.matrixParams) &&
                    ve[u.queryParams](p.queryParams, c.queryParams) &&
                    !('exact' === u.fragment && p.fragment !== c.fragment)
                );
            }
            function dt(p, c, u) {
                return Xt(p, c, c.segments, u);
            }
            function Xt(p, c, u, C) {
                if (p.segments.length > u.length) {
                    const I = p.segments.slice(0, u.length);
                    return !(!Yt(I, u) || c.hasChildren() || !en(I, u, C));
                }
                if (p.segments.length === u.length) {
                    if (!Yt(p.segments, u) || !en(p.segments, u, C)) return !1;
                    for (const I in c.children)
                        if (
                            !p.children[I] ||
                            !dt(p.children[I], c.children[I], C)
                        )
                            return !1;
                    return !0;
                }
                {
                    const I = u.slice(0, p.segments.length),
                        k = u.slice(p.segments.length);
                    return (
                        !!(
                            Yt(p.segments, I) &&
                            en(p.segments, I, C) &&
                            p.children[De]
                        ) && Xt(p.children[De], c, k, C)
                    );
                }
            }
            function en(p, c, u) {
                return c.every((C, I) => ve[u](p[I].parameters, C.parameters));
            }
            class Un {
                constructor(c, u, C) {
                    (this.root = c),
                        (this.queryParams = u),
                        (this.fragment = C);
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = at(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return lr.serialize(this);
                }
            }
            class bt {
                constructor(c, u) {
                    (this.segments = c),
                        (this.children = u),
                        (this.parent = null),
                        ue(u, (C, I) => (C.parent = this));
                }
                hasChildren() {
                    return this.numberOfChildren > 0;
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length;
                }
                toString() {
                    return ti(this);
                }
            }
            class Xn {
                constructor(c, u) {
                    (this.path = c), (this.parameters = u);
                }
                get parameterMap() {
                    return (
                        this._parameterMap ||
                            (this._parameterMap = at(this.parameters)),
                        this._parameterMap
                    );
                }
                toString() {
                    return tn(this);
                }
            }
            function Yt(p, c) {
                return (
                    p.length === c.length &&
                    p.every((u, C) => u.path === c[C].path)
                );
            }
            class Tn {}
            class xn {
                parse(c) {
                    const u = new Ht(c);
                    return new Un(
                        u.parseRootSegment(),
                        u.parseQueryParams(),
                        u.parseFragment()
                    );
                }
                serialize(c) {
                    const u = `/${br(c.root, !0)}`,
                        C = (function er(p) {
                            const c = Object.keys(p)
                                .map((u) => {
                                    const C = p[u];
                                    return Array.isArray(C)
                                        ? C.map(
                                              (I) => `${Ar(u)}=${Ar(I)}`
                                          ).join('&')
                                        : `${Ar(u)}=${Ar(C)}`;
                                })
                                .filter((u) => !!u);
                            return c.length ? `?${c.join('&')}` : '';
                        })(c.queryParams);
                    return `${u}${C}${
                        'string' == typeof c.fragment
                            ? `#${(function ur(p) {
                                  return encodeURI(p);
                              })(c.fragment)}`
                            : ''
                    }`;
                }
            }
            const lr = new xn();
            function ti(p) {
                return p.segments.map((c) => tn(c)).join('/');
            }
            function br(p, c) {
                if (!p.hasChildren()) return ti(p);
                if (c) {
                    const u = p.children[De] ? br(p.children[De], !1) : '',
                        C = [];
                    return (
                        ue(p.children, (I, k) => {
                            k !== De && C.push(`${k}:${br(I, !1)}`);
                        }),
                        C.length > 0 ? `${u}(${C.join('//')})` : u
                    );
                }
                {
                    const u = (function ln(p, c) {
                        let u = [];
                        return (
                            ue(p.children, (C, I) => {
                                I === De && (u = u.concat(c(C, I)));
                            }),
                            ue(p.children, (C, I) => {
                                I !== De && (u = u.concat(c(C, I)));
                            }),
                            u
                        );
                    })(p, (C, I) =>
                        I === De
                            ? [br(p.children[De], !1)]
                            : [`${I}:${br(C, !1)}`]
                    );
                    return 1 === Object.keys(p.children).length &&
                        null != p.children[De]
                        ? `${ti(p)}/${u[0]}`
                        : `${ti(p)}/(${u.join('//')})`;
                }
            }
            function Br(p) {
                return encodeURIComponent(p)
                    .replace(/%40/g, '@')
                    .replace(/%3A/gi, ':')
                    .replace(/%24/g, '$')
                    .replace(/%2C/gi, ',');
            }
            function Ar(p) {
                return Br(p).replace(/%3B/gi, ';');
            }
            function Vr(p) {
                return Br(p)
                    .replace(/\(/g, '%28')
                    .replace(/\)/g, '%29')
                    .replace(/%26/gi, '&');
            }
            function nr(p) {
                return decodeURIComponent(p);
            }
            function ct(p) {
                return nr(p.replace(/\+/g, '%20'));
            }
            function tn(p) {
                return `${Vr(p.path)}${(function fn(p) {
                    return Object.keys(p)
                        .map((c) => `;${Vr(c)}=${Vr(p[c])}`)
                        .join('');
                })(p.parameters)}`;
            }
            const hr = /^[^\/()?;=#]+/;
            function En(p) {
                const c = p.match(hr);
                return c ? c[0] : '';
            }
            const cr = /^[^=?&#]+/,
                xr = /^[^&#]+/;
            class Ht {
                constructor(c) {
                    (this.url = c), (this.remaining = c);
                }
                parseRootSegment() {
                    return (
                        this.consumeOptional('/'),
                        '' === this.remaining ||
                        this.peekStartsWith('?') ||
                        this.peekStartsWith('#')
                            ? new bt([], {})
                            : new bt([], this.parseChildren())
                    );
                }
                parseQueryParams() {
                    const c = {};
                    if (this.consumeOptional('?'))
                        do {
                            this.parseQueryParam(c);
                        } while (this.consumeOptional('&'));
                    return c;
                }
                parseFragment() {
                    return this.consumeOptional('#')
                        ? decodeURIComponent(this.remaining)
                        : null;
                }
                parseChildren() {
                    if ('' === this.remaining) return {};
                    this.consumeOptional('/');
                    const c = [];
                    for (
                        this.peekStartsWith('(') || c.push(this.parseSegment());
                        this.peekStartsWith('/') &&
                        !this.peekStartsWith('//') &&
                        !this.peekStartsWith('/(');

                    )
                        this.capture('/'), c.push(this.parseSegment());
                    let u = {};
                    this.peekStartsWith('/(') &&
                        (this.capture('/'), (u = this.parseParens(!0)));
                    let C = {};
                    return (
                        this.peekStartsWith('(') && (C = this.parseParens(!1)),
                        (c.length > 0 || Object.keys(u).length > 0) &&
                            (C[De] = new bt(c, u)),
                        C
                    );
                }
                parseSegment() {
                    const c = En(this.remaining);
                    if ('' === c && this.peekStartsWith(';'))
                        throw new Error(
                            `Empty path url segment cannot have parameters: '${this.remaining}'.`
                        );
                    return (
                        this.capture(c), new Xn(nr(c), this.parseMatrixParams())
                    );
                }
                parseMatrixParams() {
                    const c = {};
                    for (; this.consumeOptional(';'); ) this.parseParam(c);
                    return c;
                }
                parseParam(c) {
                    const u = En(this.remaining);
                    if (!u) return;
                    this.capture(u);
                    let C = '';
                    if (this.consumeOptional('=')) {
                        const I = En(this.remaining);
                        I && ((C = I), this.capture(C));
                    }
                    c[nr(u)] = nr(C);
                }
                parseQueryParam(c) {
                    const u = (function Sn(p) {
                        const c = p.match(cr);
                        return c ? c[0] : '';
                    })(this.remaining);
                    if (!u) return;
                    this.capture(u);
                    let C = '';
                    if (this.consumeOptional('=')) {
                        const q = (function Cn(p) {
                            const c = p.match(xr);
                            return c ? c[0] : '';
                        })(this.remaining);
                        q && ((C = q), this.capture(C));
                    }
                    const I = ct(u),
                        k = ct(C);
                    if (c.hasOwnProperty(I)) {
                        let q = c[I];
                        Array.isArray(q) || ((q = [q]), (c[I] = q)), q.push(k);
                    } else c[I] = k;
                }
                parseParens(c) {
                    const u = {};
                    for (
                        this.capture('(');
                        !this.consumeOptional(')') && this.remaining.length > 0;

                    ) {
                        const C = En(this.remaining),
                            I = this.remaining[C.length];
                        if ('/' !== I && ')' !== I && ';' !== I)
                            throw new Error(`Cannot parse url '${this.url}'`);
                        let k;
                        C.indexOf(':') > -1
                            ? ((k = C.substr(0, C.indexOf(':'))),
                              this.capture(k),
                              this.capture(':'))
                            : c && (k = De);
                        const q = this.parseChildren();
                        (u[k] =
                            1 === Object.keys(q).length
                                ? q[De]
                                : new bt([], q)),
                            this.consumeOptional('//');
                    }
                    return u;
                }
                peekStartsWith(c) {
                    return this.remaining.startsWith(c);
                }
                consumeOptional(c) {
                    return (
                        !!this.peekStartsWith(c) &&
                        ((this.remaining = this.remaining.substring(c.length)),
                        !0)
                    );
                }
                capture(c) {
                    if (!this.consumeOptional(c))
                        throw new Error(`Expected "${c}".`);
                }
            }
            class Hr {
                constructor(c) {
                    this._root = c;
                }
                get root() {
                    return this._root.value;
                }
                parent(c) {
                    const u = this.pathFromRoot(c);
                    return u.length > 1 ? u[u.length - 2] : null;
                }
                children(c) {
                    const u = _r(c, this._root);
                    return u ? u.children.map((C) => C.value) : [];
                }
                firstChild(c) {
                    const u = _r(c, this._root);
                    return u && u.children.length > 0
                        ? u.children[0].value
                        : null;
                }
                siblings(c) {
                    const u = wr(c, this._root);
                    return u.length < 2
                        ? []
                        : u[u.length - 2].children
                              .map((I) => I.value)
                              .filter((I) => I !== c);
                }
                pathFromRoot(c) {
                    return wr(c, this._root).map((u) => u.value);
                }
            }
            function _r(p, c) {
                if (p === c.value) return c;
                for (const u of c.children) {
                    const C = _r(p, u);
                    if (C) return C;
                }
                return null;
            }
            function wr(p, c) {
                if (p === c.value) return [c];
                for (const u of c.children) {
                    const C = wr(p, u);
                    if (C.length) return C.unshift(c), C;
                }
                return [];
            }
            class hn {
                constructor(c, u) {
                    (this.value = c), (this.children = u);
                }
                toString() {
                    return `TreeNode(${this.value})`;
                }
            }
            function Nn(p) {
                const c = {};
                return (
                    p && p.children.forEach((u) => (c[u.value.outlet] = u)), c
                );
            }
            class Nr extends Hr {
                constructor(c, u) {
                    super(c), (this.snapshot = u), yn(this, c);
                }
                toString() {
                    return this.snapshot.toString();
                }
            }
            function X(p, c) {
                const u = (function Be(p, c) {
                        const q = new rt(
                            [],
                            {},
                            {},
                            '',
                            {},
                            De,
                            c,
                            null,
                            p.root,
                            -1,
                            {}
                        );
                        return new Bt('', new hn(q, []));
                    })(p, c),
                    C = new R.X([new Xn('', {})]),
                    I = new R.X({}),
                    k = new R.X({}),
                    q = new R.X({}),
                    pe = new R.X(''),
                    Ge = new Ee(C, I, q, pe, k, De, c, u.root);
                return (Ge.snapshot = u.root), new Nr(new hn(Ge, []), u);
            }
            class Ee {
                constructor(c, u, C, I, k, q, pe, Ge) {
                    (this.url = c),
                        (this.params = u),
                        (this.queryParams = C),
                        (this.fragment = I),
                        (this.data = k),
                        (this.outlet = q),
                        (this.component = pe),
                        (this._futureSnapshot = Ge);
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig;
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap ||
                            (this._paramMap = this.params.pipe(
                                (0, Ae.U)((c) => at(c))
                            )),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = this.queryParams.pipe(
                                (0, Ae.U)((c) => at(c))
                            )),
                        this._queryParamMap
                    );
                }
                toString() {
                    return this.snapshot
                        ? this.snapshot.toString()
                        : `Future(${this._futureSnapshot})`;
                }
            }
            function Fe(p, c = 'emptyOnly') {
                const u = p.pathFromRoot;
                let C = 0;
                if ('always' !== c)
                    for (C = u.length - 1; C >= 1; ) {
                        const I = u[C],
                            k = u[C - 1];
                        if (I.routeConfig && '' === I.routeConfig.path) C--;
                        else {
                            if (k.component) break;
                            C--;
                        }
                    }
                return (function ot(p) {
                    return p.reduce(
                        (c, u) => ({
                            params: Object.assign(
                                Object.assign({}, c.params),
                                u.params
                            ),
                            data: Object.assign(
                                Object.assign({}, c.data),
                                u.data
                            ),
                            resolve: Object.assign(
                                Object.assign({}, c.resolve),
                                u._resolvedData
                            ),
                        }),
                        { params: {}, data: {}, resolve: {} }
                    );
                })(u.slice(C));
            }
            class rt {
                constructor(c, u, C, I, k, q, pe, Ge, Dt, dn, Rt) {
                    (this.url = c),
                        (this.params = u),
                        (this.queryParams = C),
                        (this.fragment = I),
                        (this.data = k),
                        (this.outlet = q),
                        (this.component = pe),
                        (this.routeConfig = Ge),
                        (this._urlSegment = Dt),
                        (this._lastPathIndex = dn),
                        (this._resolve = Rt);
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap || (this._paramMap = at(this.params)),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = at(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return `Route(url:'${this.url
                        .map((C) => C.toString())
                        .join('/')}', path:'${
                        this.routeConfig ? this.routeConfig.path : ''
                    }')`;
                }
            }
            class Bt extends Hr {
                constructor(c, u) {
                    super(u), (this.url = c), yn(this, u);
                }
                toString() {
                    return On(this._root);
                }
            }
            function yn(p, c) {
                (c.value._routerState = p), c.children.forEach((u) => yn(p, u));
            }
            function On(p) {
                const c =
                    p.children.length > 0
                        ? ` { ${p.children.map(On).join(', ')} } `
                        : '';
                return `${p.value}${c}`;
            }
            function Wn(p) {
                if (p.snapshot) {
                    const c = p.snapshot,
                        u = p._futureSnapshot;
                    (p.snapshot = u),
                        Gn(c.queryParams, u.queryParams) ||
                            p.queryParams.next(u.queryParams),
                        c.fragment !== u.fragment &&
                            p.fragment.next(u.fragment),
                        Gn(c.params, u.params) || p.params.next(u.params),
                        (function Lt(p, c) {
                            if (p.length !== c.length) return !1;
                            for (let u = 0; u < p.length; ++u)
                                if (!Gn(p[u], c[u])) return !1;
                            return !0;
                        })(c.url, u.url) || p.url.next(u.url),
                        Gn(c.data, u.data) || p.data.next(u.data);
                } else
                    (p.snapshot = p._futureSnapshot),
                        p.data.next(p._futureSnapshot.data);
            }
            function on(p, c) {
                const u =
                    Gn(p.params, c.params) &&
                    (function yr(p, c) {
                        return (
                            Yt(p, c) &&
                            p.every((u, C) => Gn(u.parameters, c[C].parameters))
                        );
                    })(p.url, c.url);
                return (
                    u &&
                    !(!p.parent != !c.parent) &&
                    (!p.parent || on(p.parent, c.parent))
                );
            }
            function ni(p, c, u) {
                if (u && p.shouldReuseRoute(c.value, u.value.snapshot)) {
                    const C = u.value;
                    C._futureSnapshot = c.value;
                    const I = (function zi(p, c, u) {
                        return c.children.map((C) => {
                            for (const I of u.children)
                                if (
                                    p.shouldReuseRoute(
                                        C.value,
                                        I.value.snapshot
                                    )
                                )
                                    return ni(p, C, I);
                            return ni(p, C);
                        });
                    })(p, c, u);
                    return new hn(C, I);
                }
                {
                    if (p.shouldAttach(c.value)) {
                        const k = p.retrieve(c.value);
                        if (null !== k) {
                            const q = k.route;
                            return (
                                (q.value._futureSnapshot = c.value),
                                (q.children = c.children.map((pe) =>
                                    ni(p, pe)
                                )),
                                q
                            );
                        }
                    }
                    const C = (function Or(p) {
                            return new Ee(
                                new R.X(p.url),
                                new R.X(p.params),
                                new R.X(p.queryParams),
                                new R.X(p.fragment),
                                new R.X(p.data),
                                p.outlet,
                                p.component,
                                p
                            );
                        })(c.value),
                        I = c.children.map((k) => ni(p, k));
                    return new hn(C, I);
                }
            }
            function gi(p) {
                return (
                    'object' == typeof p &&
                    null != p &&
                    !p.outlets &&
                    !p.segmentPath
                );
            }
            function Zr(p) {
                return 'object' == typeof p && null != p && p.outlets;
            }
            function qr(p, c, u, C, I) {
                let k = {};
                return (
                    C &&
                        ue(C, (q, pe) => {
                            k[pe] = Array.isArray(q)
                                ? q.map((Ge) => `${Ge}`)
                                : `${q}`;
                        }),
                    new Un(u.root === p ? c : Ri(u.root, p, c), k, I)
                );
            }
            function Ri(p, c, u) {
                const C = {};
                return (
                    ue(p.children, (I, k) => {
                        C[k] = I === c ? u : Ri(I, c, u);
                    }),
                    new bt(p.segments, C)
                );
            }
            class Ki {
                constructor(c, u, C) {
                    if (
                        ((this.isAbsolute = c),
                        (this.numberOfDoubleDots = u),
                        (this.commands = C),
                        c && C.length > 0 && gi(C[0]))
                    )
                        throw new Error(
                            'Root segment cannot have matrix parameters'
                        );
                    const I = C.find(Zr);
                    if (I && I !== Z(C))
                        throw new Error(
                            '{outlets:{}} has to be the last command'
                        );
                }
                toRoot() {
                    return (
                        this.isAbsolute &&
                        1 === this.commands.length &&
                        '/' == this.commands[0]
                    );
                }
            }
            class Qr {
                constructor(c, u, C) {
                    (this.segmentGroup = c),
                        (this.processChildren = u),
                        (this.index = C);
                }
            }
            function Bi(p, c, u) {
                if (
                    (p || (p = new bt([], {})),
                    0 === p.segments.length && p.hasChildren())
                )
                    return Jr(p, c, u);
                const C = (function ss(p, c, u) {
                        let C = 0,
                            I = c;
                        const k = { match: !1, pathIndex: 0, commandIndex: 0 };
                        for (; I < p.segments.length; ) {
                            if (C >= u.length) return k;
                            const q = p.segments[I],
                                pe = u[C];
                            if (Zr(pe)) break;
                            const Ge = `${pe}`,
                                Dt = C < u.length - 1 ? u[C + 1] : null;
                            if (I > 0 && void 0 === Ge) break;
                            if (
                                Ge &&
                                Dt &&
                                'object' == typeof Dt &&
                                void 0 === Dt.outlets
                            ) {
                                if (!li(Ge, Dt, q)) return k;
                                C += 2;
                            } else {
                                if (!li(Ge, {}, q)) return k;
                                C++;
                            }
                            I++;
                        }
                        return { match: !0, pathIndex: I, commandIndex: C };
                    })(p, c, u),
                    I = u.slice(C.commandIndex);
                if (C.match && C.pathIndex < p.segments.length) {
                    const k = new bt(p.segments.slice(0, C.pathIndex), {});
                    return (
                        (k.children[De] = new bt(
                            p.segments.slice(C.pathIndex),
                            p.children
                        )),
                        Jr(k, 0, I)
                    );
                }
                return C.match && 0 === I.length
                    ? new bt(p.segments, {})
                    : C.match && !p.hasChildren()
                    ? mi(p, c, u)
                    : C.match
                    ? Jr(p, 0, I)
                    : mi(p, c, u);
            }
            function Jr(p, c, u) {
                if (0 === u.length) return new bt(p.segments, {});
                {
                    const C = (function bi(p) {
                            return Zr(p[0]) ? p[0].outlets : { [De]: p };
                        })(u),
                        I = {};
                    return (
                        ue(C, (k, q) => {
                            'string' == typeof k && (k = [k]),
                                null !== k && (I[q] = Bi(p.children[q], c, k));
                        }),
                        ue(p.children, (k, q) => {
                            void 0 === C[q] && (I[q] = k);
                        }),
                        new bt(p.segments, I)
                    );
                }
            }
            function mi(p, c, u) {
                const C = p.segments.slice(0, c);
                let I = 0;
                for (; I < u.length; ) {
                    const k = u[I];
                    if (Zr(k)) {
                        const Ge = Pr(k.outlets);
                        return new bt(C, Ge);
                    }
                    if (0 === I && gi(u[0])) {
                        C.push(new Xn(p.segments[c].path, ai(u[0]))), I++;
                        continue;
                    }
                    const q = Zr(k) ? k.outlets[De] : `${k}`,
                        pe = I < u.length - 1 ? u[I + 1] : null;
                    q && pe && gi(pe)
                        ? (C.push(new Xn(q, ai(pe))), (I += 2))
                        : (C.push(new Xn(q, {})), I++);
                }
                return new bt(C, {});
            }
            function Pr(p) {
                const c = {};
                return (
                    ue(p, (u, C) => {
                        'string' == typeof u && (u = [u]),
                            null !== u && (c[C] = mi(new bt([], {}), 0, u));
                    }),
                    c
                );
            }
            function ai(p) {
                const c = {};
                return ue(p, (u, C) => (c[C] = `${u}`)), c;
            }
            function li(p, c, u) {
                return p == u.path && Gn(c, u.parameters);
            }
            class ri {
                constructor(c, u, C, I) {
                    (this.routeReuseStrategy = c),
                        (this.futureState = u),
                        (this.currState = C),
                        (this.forwardEvent = I);
                }
                activate(c) {
                    const u = this.futureState._root,
                        C = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(u, C, c),
                        Wn(this.futureState.root),
                        this.activateChildRoutes(u, C, c);
                }
                deactivateChildRoutes(c, u, C) {
                    const I = Nn(u);
                    c.children.forEach((k) => {
                        const q = k.value.outlet;
                        this.deactivateRoutes(k, I[q], C), delete I[q];
                    }),
                        ue(I, (k, q) => {
                            this.deactivateRouteAndItsChildren(k, C);
                        });
                }
                deactivateRoutes(c, u, C) {
                    const I = c.value,
                        k = u ? u.value : null;
                    if (I === k)
                        if (I.component) {
                            const q = C.getContext(I.outlet);
                            q && this.deactivateChildRoutes(c, u, q.children);
                        } else this.deactivateChildRoutes(c, u, C);
                    else k && this.deactivateRouteAndItsChildren(u, C);
                }
                deactivateRouteAndItsChildren(c, u) {
                    c.value.component &&
                    this.routeReuseStrategy.shouldDetach(c.value.snapshot)
                        ? this.detachAndStoreRouteSubtree(c, u)
                        : this.deactivateRouteAndOutlet(c, u);
                }
                detachAndStoreRouteSubtree(c, u) {
                    const C = u.getContext(c.value.outlet),
                        I = C && c.value.component ? C.children : u,
                        k = Nn(c);
                    for (const q of Object.keys(k))
                        this.deactivateRouteAndItsChildren(k[q], I);
                    if (C && C.outlet) {
                        const q = C.outlet.detach(),
                            pe = C.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(c.value.snapshot, {
                            componentRef: q,
                            route: c,
                            contexts: pe,
                        });
                    }
                }
                deactivateRouteAndOutlet(c, u) {
                    const C = u.getContext(c.value.outlet),
                        I = C && c.value.component ? C.children : u,
                        k = Nn(c);
                    for (const q of Object.keys(k))
                        this.deactivateRouteAndItsChildren(k[q], I);
                    C &&
                        C.outlet &&
                        (C.outlet.deactivate(),
                        C.children.onOutletDeactivated(),
                        (C.attachRef = null),
                        (C.resolver = null),
                        (C.route = null));
                }
                activateChildRoutes(c, u, C) {
                    const I = Nn(u);
                    c.children.forEach((k) => {
                        this.activateRoutes(k, I[k.value.outlet], C),
                            this.forwardEvent(new W(k.value.snapshot));
                    }),
                        c.children.length &&
                            this.forwardEvent(new Ir(c.value.snapshot));
                }
                activateRoutes(c, u, C) {
                    const I = c.value,
                        k = u ? u.value : null;
                    if ((Wn(I), I === k))
                        if (I.component) {
                            const q = C.getOrCreateContext(I.outlet);
                            this.activateChildRoutes(c, u, q.children);
                        } else this.activateChildRoutes(c, u, C);
                    else if (I.component) {
                        const q = C.getOrCreateContext(I.outlet);
                        if (this.routeReuseStrategy.shouldAttach(I.snapshot)) {
                            const pe = this.routeReuseStrategy.retrieve(
                                I.snapshot
                            );
                            this.routeReuseStrategy.store(I.snapshot, null),
                                q.children.onOutletReAttached(pe.contexts),
                                (q.attachRef = pe.componentRef),
                                (q.route = pe.route.value),
                                q.outlet &&
                                    q.outlet.attach(
                                        pe.componentRef,
                                        pe.route.value
                                    ),
                                Wn(pe.route.value),
                                this.activateChildRoutes(c, null, q.children);
                        } else {
                            const pe = (function Ai(p) {
                                    for (let c = p.parent; c; c = c.parent) {
                                        const u = c.routeConfig;
                                        if (u && u._loadedConfig)
                                            return u._loadedConfig;
                                        if (u && u.component) return null;
                                    }
                                    return null;
                                })(I.snapshot),
                                Ge = pe
                                    ? pe.module.componentFactoryResolver
                                    : null;
                            (q.attachRef = null),
                                (q.route = I),
                                (q.resolver = Ge),
                                q.outlet && q.outlet.activateWith(I, Ge),
                                this.activateChildRoutes(c, null, q.children);
                        }
                    } else this.activateChildRoutes(c, null, C);
                }
            }
            class $r {
                constructor(c, u) {
                    (this.routes = c), (this.module = u);
                }
            }
            function vr(p) {
                return 'function' == typeof p;
            }
            function ii(p) {
                return p instanceof Un;
            }
            const Gr = Symbol('INITIAL_VALUE');
            function rr() {
                return (0, wt.w)((p) =>
                    (function U(...p) {
                        const c = (0, re.yG)(p),
                            u = (0, re.jO)(p),
                            { args: C, keys: I } = (0, H.D)(p);
                        if (0 === C.length) return (0, w.D)([], c);
                        const k = new P.y(
                            (function ie(p, c, u = $.y) {
                                return (C) => {
                                    Ce(
                                        c,
                                        () => {
                                            const { length: I } = p,
                                                k = new Array(I);
                                            let q = I,
                                                pe = I;
                                            for (let Ge = 0; Ge < I; Ge++)
                                                Ce(
                                                    c,
                                                    () => {
                                                        const Dt = (0, w.D)(
                                                            p[Ge],
                                                            c
                                                        );
                                                        let dn = !1;
                                                        Dt.subscribe(
                                                            new Y.Q(
                                                                C,
                                                                (Rt) => {
                                                                    (k[Ge] =
                                                                        Rt),
                                                                        dn ||
                                                                            ((dn =
                                                                                !0),
                                                                            pe--),
                                                                        pe ||
                                                                            C.next(
                                                                                u(
                                                                                    k.slice()
                                                                                )
                                                                            );
                                                                },
                                                                () => {
                                                                    --q ||
                                                                        C.complete();
                                                                }
                                                            )
                                                        );
                                                    },
                                                    C
                                                );
                                        },
                                        C
                                    );
                                };
                            })(C, c, I ? (q) => (0, se.n)(I, q) : $.y)
                        );
                        return u ? k.pipe((0, ae.Z)(u)) : k;
                    })(p.map((c) => c.pipe((0, rn.q)(1), (0, Bn.O)(Gr)))).pipe(
                        (0, Et.R)((c, u) => {
                            let C = !1;
                            return u.reduce(
                                (I, k, q) =>
                                    I !== Gr
                                        ? I
                                        : (k === Gr && (C = !0),
                                          C ||
                                          (!1 !== k &&
                                              q !== u.length - 1 &&
                                              !ii(k))
                                              ? I
                                              : k),
                                c
                            );
                        }, Gr),
                        (0, Je.h)((c) => c !== Gr),
                        (0, Ae.U)((c) => (ii(c) ? c : !0 === c)),
                        (0, rn.q)(1)
                    )
                );
            }
            class ce {
                constructor() {
                    (this.outlet = null),
                        (this.route = null),
                        (this.resolver = null),
                        (this.children = new he()),
                        (this.attachRef = null);
                }
            }
            class he {
                constructor() {
                    this.contexts = new Map();
                }
                onChildOutletCreated(c, u) {
                    const C = this.getOrCreateContext(c);
                    (C.outlet = u), this.contexts.set(c, C);
                }
                onChildOutletDestroyed(c) {
                    const u = this.getContext(c);
                    u && ((u.outlet = null), (u.attachRef = null));
                }
                onOutletDeactivated() {
                    const c = this.contexts;
                    return (this.contexts = new Map()), c;
                }
                onOutletReAttached(c) {
                    this.contexts = c;
                }
                getOrCreateContext(c) {
                    let u = this.getContext(c);
                    return u || ((u = new ce()), this.contexts.set(c, u)), u;
                }
                getContext(c) {
                    return this.contexts.get(c) || null;
                }
            }
            let we = (() => {
                class p {
                    constructor(u, C, I, k, q) {
                        (this.parentContexts = u),
                            (this.location = C),
                            (this.resolver = I),
                            (this.changeDetector = q),
                            (this.activated = null),
                            (this._activatedRoute = null),
                            (this.activateEvents = new d.vpe()),
                            (this.deactivateEvents = new d.vpe()),
                            (this.attachEvents = new d.vpe()),
                            (this.detachEvents = new d.vpe()),
                            (this.name = k || De),
                            u.onChildOutletCreated(this.name, this);
                    }
                    ngOnDestroy() {
                        this.parentContexts.onChildOutletDestroyed(this.name);
                    }
                    ngOnInit() {
                        if (!this.activated) {
                            const u = this.parentContexts.getContext(this.name);
                            u &&
                                u.route &&
                                (u.attachRef
                                    ? this.attach(u.attachRef, u.route)
                                    : this.activateWith(
                                          u.route,
                                          u.resolver || null
                                      ));
                        }
                    }
                    get isActivated() {
                        return !!this.activated;
                    }
                    get component() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this.activated.instance;
                    }
                    get activatedRoute() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this._activatedRoute;
                    }
                    get activatedRouteData() {
                        return this._activatedRoute
                            ? this._activatedRoute.snapshot.data
                            : {};
                    }
                    detach() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        this.location.detach();
                        const u = this.activated;
                        return (
                            (this.activated = null),
                            (this._activatedRoute = null),
                            this.detachEvents.emit(u.instance),
                            u
                        );
                    }
                    attach(u, C) {
                        (this.activated = u),
                            (this._activatedRoute = C),
                            this.location.insert(u.hostView),
                            this.attachEvents.emit(u.instance);
                    }
                    deactivate() {
                        if (this.activated) {
                            const u = this.component;
                            this.activated.destroy(),
                                (this.activated = null),
                                (this._activatedRoute = null),
                                this.deactivateEvents.emit(u);
                        }
                    }
                    activateWith(u, C) {
                        if (this.isActivated)
                            throw new Error(
                                'Cannot activate an already activated outlet'
                            );
                        this._activatedRoute = u;
                        const q = (C =
                                C || this.resolver).resolveComponentFactory(
                                u._futureSnapshot.routeConfig.component
                            ),
                            pe = this.parentContexts.getOrCreateContext(
                                this.name
                            ).children,
                            Ge = new Ye(u, pe, this.location.injector);
                        (this.activated = this.location.createComponent(
                            q,
                            this.location.length,
                            Ge
                        )),
                            this.changeDetector.markForCheck(),
                            this.activateEvents.emit(this.activated.instance);
                    }
                }
                return (
                    (p.ɵfac = function (u) {
                        return new (u || p)(
                            d.Y36(he),
                            d.Y36(d.s_b),
                            d.Y36(d._Vd),
                            d.$8M('name'),
                            d.Y36(d.sBO)
                        );
                    }),
                    (p.ɵdir = d.lG2({
                        type: p,
                        selectors: [['router-outlet']],
                        outputs: {
                            activateEvents: 'activate',
                            deactivateEvents: 'deactivate',
                            attachEvents: 'attach',
                            detachEvents: 'detach',
                        },
                        exportAs: ['outlet'],
                    })),
                    p
                );
            })();
            class Ye {
                constructor(c, u, C) {
                    (this.route = c),
                        (this.childContexts = u),
                        (this.parent = C);
                }
                get(c, u) {
                    return c === Ee
                        ? this.route
                        : c === he
                        ? this.childContexts
                        : this.parent.get(c, u);
                }
            }
            let it = (() => {
                class p {}
                return (
                    (p.ɵfac = function (u) {
                        return new (u || p)();
                    }),
                    (p.ɵcmp = d.Xpm({
                        type: p,
                        selectors: [['ng-component']],
                        decls: 1,
                        vars: 0,
                        template: function (u, C) {
                            1 & u && d._UZ(0, 'router-outlet');
                        },
                        directives: [we],
                        encapsulation: 2,
                    })),
                    p
                );
            })();
            function ht(p, c = '') {
                for (let u = 0; u < p.length; u++) {
                    const C = p[u];
                    zt(C, _n(c, C));
                }
            }
            function zt(p, c) {
                p.children && ht(p.children, c);
            }
            function _n(p, c) {
                return c
                    ? p || c.path
                        ? p && !c.path
                            ? `${p}/`
                            : !p && c.path
                            ? c.path
                            : `${p}/${c.path}`
                        : ''
                    : p;
            }
            function Gt(p) {
                const c = p.children && p.children.map(Gt),
                    u = c
                        ? Object.assign(Object.assign({}, p), { children: c })
                        : Object.assign({}, p);
                return (
                    !u.component &&
                        (c || u.loadChildren) &&
                        u.outlet &&
                        u.outlet !== De &&
                        (u.component = it),
                    u
                );
            }
            function Nt(p) {
                return p.outlet || De;
            }
            function A(p, c) {
                const u = p.filter((C) => Nt(C) === c);
                return u.push(...p.filter((C) => Nt(C) !== c)), u;
            }
            const N = {
                matched: !1,
                consumedSegments: [],
                lastChild: 0,
                parameters: {},
                positionalParamSegments: {},
            };
            function b(p, c, u) {
                var C;
                if ('' === c.path)
                    return 'full' === c.pathMatch &&
                        (p.hasChildren() || u.length > 0)
                        ? Object.assign({}, N)
                        : {
                              matched: !0,
                              consumedSegments: [],
                              lastChild: 0,
                              parameters: {},
                              positionalParamSegments: {},
                          };
                const k = (c.matcher || mn)(u, p, c);
                if (!k) return Object.assign({}, N);
                const q = {};
                ue(k.posParams, (Ge, Dt) => {
                    q[Dt] = Ge.path;
                });
                const pe =
                    k.consumed.length > 0
                        ? Object.assign(
                              Object.assign({}, q),
                              k.consumed[k.consumed.length - 1].parameters
                          )
                        : q;
                return {
                    matched: !0,
                    consumedSegments: k.consumed,
                    lastChild: k.consumed.length,
                    parameters: pe,
                    positionalParamSegments:
                        null !== (C = k.posParams) && void 0 !== C ? C : {},
                };
            }
            function V(p, c, u, C, I = 'corrected') {
                if (
                    u.length > 0 &&
                    (function qe(p, c, u) {
                        return u.some((C) => kt(p, c, C) && Nt(C) !== De);
                    })(p, u, C)
                ) {
                    const q = new bt(
                        c,
                        (function ke(p, c, u, C) {
                            const I = {};
                            (I[De] = C),
                                (C._sourceSegment = p),
                                (C._segmentIndexShift = c.length);
                            for (const k of u)
                                if ('' === k.path && Nt(k) !== De) {
                                    const q = new bt([], {});
                                    (q._sourceSegment = p),
                                        (q._segmentIndexShift = c.length),
                                        (I[Nt(k)] = q);
                                }
                            return I;
                        })(p, c, C, new bt(u, p.children))
                    );
                    return (
                        (q._sourceSegment = p),
                        (q._segmentIndexShift = c.length),
                        { segmentGroup: q, slicedSegments: [] }
                    );
                }
                if (
                    0 === u.length &&
                    (function mt(p, c, u) {
                        return u.some((C) => kt(p, c, C));
                    })(p, u, C)
                ) {
                    const q = new bt(
                        p.segments,
                        (function ge(p, c, u, C, I, k) {
                            const q = {};
                            for (const pe of C)
                                if (kt(p, u, pe) && !I[Nt(pe)]) {
                                    const Ge = new bt([], {});
                                    (Ge._sourceSegment = p),
                                        (Ge._segmentIndexShift =
                                            'legacy' === k
                                                ? p.segments.length
                                                : c.length),
                                        (q[Nt(pe)] = Ge);
                                }
                            return Object.assign(Object.assign({}, I), q);
                        })(p, c, u, C, p.children, I)
                    );
                    return (
                        (q._sourceSegment = p),
                        (q._segmentIndexShift = c.length),
                        { segmentGroup: q, slicedSegments: u }
                    );
                }
                const k = new bt(p.segments, p.children);
                return (
                    (k._sourceSegment = p),
                    (k._segmentIndexShift = c.length),
                    { segmentGroup: k, slicedSegments: u }
                );
            }
            function kt(p, c, u) {
                return (
                    (!(p.hasChildren() || c.length > 0) ||
                        'full' !== u.pathMatch) &&
                    '' === u.path
                );
            }
            function un(p, c, u, C) {
                return (
                    !!(Nt(p) === C || (C !== De && kt(c, u, p))) &&
                    ('**' === p.path || b(c, p, u).matched)
                );
            }
            function At(p, c, u) {
                return 0 === c.length && !p.children[u];
            }
            class jt {
                constructor(c) {
                    this.segmentGroup = c || null;
                }
            }
            class Pn {
                constructor(c) {
                    this.urlTree = c;
                }
            }
            function Ln(p) {
                return new P.y((c) => c.error(new jt(p)));
            }
            function Kn(p) {
                return new P.y((c) => c.error(new Pn(p)));
            }
            function ci(p) {
                return new P.y((c) =>
                    c.error(
                        new Error(
                            `Only absolute redirects can have named outlets. redirectTo: '${p}'`
                        )
                    )
                );
            }
            class yi {
                constructor(c, u, C, I, k) {
                    (this.configLoader = u),
                        (this.urlSerializer = C),
                        (this.urlTree = I),
                        (this.config = k),
                        (this.allowRedirects = !0),
                        (this.ngModule = c.get(d.h0i));
                }
                apply() {
                    const c = V(
                            this.urlTree.root,
                            [],
                            [],
                            this.config
                        ).segmentGroup,
                        u = new bt(c.segments, c.children);
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        u,
                        De
                    )
                        .pipe(
                            (0, Ae.U)((k) =>
                                this.createUrlTree(
                                    wi(k),
                                    this.urlTree.queryParams,
                                    this.urlTree.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, _t.K)((k) => {
                                if (k instanceof Pn)
                                    return (
                                        (this.allowRedirects = !1),
                                        this.match(k.urlTree)
                                    );
                                throw k instanceof jt
                                    ? this.noMatchError(k)
                                    : k;
                            })
                        );
                }
                match(c) {
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        c.root,
                        De
                    )
                        .pipe(
                            (0, Ae.U)((I) =>
                                this.createUrlTree(
                                    wi(I),
                                    c.queryParams,
                                    c.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, _t.K)((I) => {
                                throw I instanceof jt
                                    ? this.noMatchError(I)
                                    : I;
                            })
                        );
                }
                noMatchError(c) {
                    return new Error(
                        `Cannot match any routes. URL Segment: '${c.segmentGroup}'`
                    );
                }
                createUrlTree(c, u, C) {
                    const I =
                        c.segments.length > 0 ? new bt([], { [De]: c }) : c;
                    return new Un(I, u, C);
                }
                expandSegmentGroup(c, u, C, I) {
                    return 0 === C.segments.length && C.hasChildren()
                        ? this.expandChildren(c, u, C).pipe(
                              (0, Ae.U)((k) => new bt([], k))
                          )
                        : this.expandSegment(c, C, u, C.segments, I, !0);
                }
                expandChildren(c, u, C) {
                    const I = [];
                    for (const k of Object.keys(C.children))
                        'primary' === k ? I.unshift(k) : I.push(k);
                    return (0, w.D)(I).pipe(
                        (0, Vn.b)((k) => {
                            const q = C.children[k],
                                pe = A(u, k);
                            return this.expandSegmentGroup(c, pe, q, k).pipe(
                                (0, Ae.U)((Ge) => ({ segment: Ge, outlet: k }))
                            );
                        }),
                        (0, Et.R)((k, q) => ((k[q.outlet] = q.segment), k), {}),
                        (function Ue(p, c) {
                            const u = arguments.length >= 2;
                            return (C) =>
                                C.pipe(
                                    p ? (0, Je.h)((I, k) => p(I, k, C)) : $.y,
                                    te(1),
                                    u
                                        ? (0, Oe.d)(c)
                                        : (0, Re.T)(() => new oe.K())
                                );
                        })()
                    );
                }
                expandSegment(c, u, C, I, k, q) {
                    return (0, w.D)(C).pipe(
                        (0, Vn.b)((pe) =>
                            this.expandSegmentAgainstRoute(
                                c,
                                u,
                                C,
                                pe,
                                I,
                                k,
                                q
                            ).pipe(
                                (0, _t.K)((Dt) => {
                                    if (Dt instanceof jt)
                                        return (0, M.of)(null);
                                    throw Dt;
                                })
                            )
                        ),
                        (0, Zt.P)((pe) => !!pe),
                        (0, _t.K)((pe, Ge) => {
                            if (
                                pe instanceof oe.K ||
                                'EmptyError' === pe.name
                            ) {
                                if (At(u, I, k))
                                    return (0, M.of)(new bt([], {}));
                                throw new jt(u);
                            }
                            throw pe;
                        })
                    );
                }
                expandSegmentAgainstRoute(c, u, C, I, k, q, pe) {
                    return un(I, u, k, q)
                        ? void 0 === I.redirectTo
                            ? this.matchSegmentAgainstRoute(c, u, I, k, q)
                            : pe && this.allowRedirects
                            ? this.expandSegmentAgainstRouteUsingRedirect(
                                  c,
                                  u,
                                  C,
                                  I,
                                  k,
                                  q
                              )
                            : Ln(u)
                        : Ln(u);
                }
                expandSegmentAgainstRouteUsingRedirect(c, u, C, I, k, q) {
                    return '**' === I.path
                        ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(
                              c,
                              C,
                              I,
                              q
                          )
                        : this.expandRegularSegmentAgainstRouteUsingRedirect(
                              c,
                              u,
                              C,
                              I,
                              k,
                              q
                          );
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(c, u, C, I) {
                    const k = this.applyRedirectCommands([], C.redirectTo, {});
                    return C.redirectTo.startsWith('/')
                        ? Kn(k)
                        : this.lineralizeSegments(C, k).pipe(
                              (0, sn.z)((q) => {
                                  const pe = new bt(q, {});
                                  return this.expandSegment(c, pe, u, q, I, !1);
                              })
                          );
                }
                expandRegularSegmentAgainstRouteUsingRedirect(
                    c,
                    u,
                    C,
                    I,
                    k,
                    q
                ) {
                    const {
                        matched: pe,
                        consumedSegments: Ge,
                        lastChild: Dt,
                        positionalParamSegments: dn,
                    } = b(u, I, k);
                    if (!pe) return Ln(u);
                    const Rt = this.applyRedirectCommands(Ge, I.redirectTo, dn);
                    return I.redirectTo.startsWith('/')
                        ? Kn(Rt)
                        : this.lineralizeSegments(I, Rt).pipe(
                              (0, sn.z)((Yn) =>
                                  this.expandSegment(
                                      c,
                                      u,
                                      C,
                                      Yn.concat(k.slice(Dt)),
                                      q,
                                      !1
                                  )
                              )
                          );
                }
                matchSegmentAgainstRoute(c, u, C, I, k) {
                    if ('**' === C.path)
                        return C.loadChildren
                            ? (C._loadedConfig
                                  ? (0, M.of)(C._loadedConfig)
                                  : this.configLoader.load(c.injector, C)
                              ).pipe(
                                  (0, Ae.U)(
                                      (Yn) => (
                                          (C._loadedConfig = Yn), new bt(I, {})
                                      )
                                  )
                              )
                            : (0, M.of)(new bt(I, {}));
                    const {
                        matched: q,
                        consumedSegments: pe,
                        lastChild: Ge,
                    } = b(u, C, I);
                    if (!q) return Ln(u);
                    const Dt = I.slice(Ge);
                    return this.getChildConfig(c, C, I).pipe(
                        (0, sn.z)((Rt) => {
                            const Yn = Rt.module,
                                Zn = Rt.routes,
                                { segmentGroup: ns, slicedSegments: _ } = V(
                                    u,
                                    pe,
                                    Dt,
                                    Zn
                                ),
                                o = new bt(ns.segments, ns.children);
                            if (0 === _.length && o.hasChildren())
                                return this.expandChildren(Yn, Zn, o).pipe(
                                    (0, Ae.U)((L) => new bt(pe, L))
                                );
                            if (0 === Zn.length && 0 === _.length)
                                return (0, M.of)(new bt(pe, {}));
                            const a = Nt(C) === k;
                            return this.expandSegment(
                                Yn,
                                o,
                                Zn,
                                _,
                                a ? De : k,
                                !0
                            ).pipe(
                                (0, Ae.U)(
                                    (S) =>
                                        new bt(
                                            pe.concat(S.segments),
                                            S.children
                                        )
                                )
                            );
                        })
                    );
                }
                getChildConfig(c, u, C) {
                    return u.children
                        ? (0, M.of)(new $r(u.children, c))
                        : u.loadChildren
                        ? void 0 !== u._loadedConfig
                            ? (0, M.of)(u._loadedConfig)
                            : this.runCanLoadGuards(c.injector, u, C).pipe(
                                  (0, sn.z)((I) =>
                                      I
                                          ? this.configLoader
                                                .load(c.injector, u)
                                                .pipe(
                                                    (0, Ae.U)(
                                                        (k) => (
                                                            (u._loadedConfig =
                                                                k),
                                                            k
                                                        )
                                                    )
                                                )
                                          : (function Wr(p) {
                                                return new P.y((c) =>
                                                    c.error(
                                                        ut(
                                                            `Cannot load children because the guard of the route "path: '${p.path}'" returned false`
                                                        )
                                                    )
                                                );
                                            })(u)
                                  )
                              )
                        : (0, M.of)(new $r([], c));
                }
                runCanLoadGuards(c, u, C) {
                    const I = u.canLoad;
                    if (!I || 0 === I.length) return (0, M.of)(!0);
                    const k = I.map((q) => {
                        const pe = c.get(q);
                        let Ge;
                        if (
                            (function Fi(p) {
                                return p && vr(p.canLoad);
                            })(pe)
                        )
                            Ge = pe.canLoad(u, C);
                        else {
                            if (!vr(pe))
                                throw new Error('Invalid CanLoad guard');
                            Ge = pe(u, C);
                        }
                        return Le(Ge);
                    });
                    return (0, M.of)(k).pipe(
                        rr(),
                        (0, Ft.b)((q) => {
                            if (!ii(q)) return;
                            const pe = ut(
                                `Redirecting to "${this.urlSerializer.serialize(
                                    q
                                )}"`
                            );
                            throw ((pe.url = q), pe);
                        }),
                        (0, Ae.U)((q) => !0 === q)
                    );
                }
                lineralizeSegments(c, u) {
                    let C = [],
                        I = u.root;
                    for (;;) {
                        if (
                            ((C = C.concat(I.segments)),
                            0 === I.numberOfChildren)
                        )
                            return (0, M.of)(C);
                        if (I.numberOfChildren > 1 || !I.children[De])
                            return ci(c.redirectTo);
                        I = I.children[De];
                    }
                }
                applyRedirectCommands(c, u, C) {
                    return this.applyRedirectCreatreUrlTree(
                        u,
                        this.urlSerializer.parse(u),
                        c,
                        C
                    );
                }
                applyRedirectCreatreUrlTree(c, u, C, I) {
                    const k = this.createSegmentGroup(c, u.root, C, I);
                    return new Un(
                        k,
                        this.createQueryParams(
                            u.queryParams,
                            this.urlTree.queryParams
                        ),
                        u.fragment
                    );
                }
                createQueryParams(c, u) {
                    const C = {};
                    return (
                        ue(c, (I, k) => {
                            if ('string' == typeof I && I.startsWith(':')) {
                                const pe = I.substring(1);
                                C[k] = u[pe];
                            } else C[k] = I;
                        }),
                        C
                    );
                }
                createSegmentGroup(c, u, C, I) {
                    const k = this.createSegments(c, u.segments, C, I);
                    let q = {};
                    return (
                        ue(u.children, (pe, Ge) => {
                            q[Ge] = this.createSegmentGroup(c, pe, C, I);
                        }),
                        new bt(k, q)
                    );
                }
                createSegments(c, u, C, I) {
                    return u.map((k) =>
                        k.path.startsWith(':')
                            ? this.findPosParam(c, k, I)
                            : this.findOrReturn(k, C)
                    );
                }
                findPosParam(c, u, C) {
                    const I = C[u.path.substring(1)];
                    if (!I)
                        throw new Error(
                            `Cannot redirect to '${c}'. Cannot find '${u.path}'.`
                        );
                    return I;
                }
                findOrReturn(c, u) {
                    let C = 0;
                    for (const I of u) {
                        if (I.path === c.path) return u.splice(C), I;
                        C++;
                    }
                    return c;
                }
            }
            function wi(p) {
                const c = {};
                for (const C of Object.keys(p.children)) {
                    const k = wi(p.children[C]);
                    (k.segments.length > 0 || k.hasChildren()) && (c[C] = k);
                }
                return (function Ji(p) {
                    if (1 === p.numberOfChildren && p.children[De]) {
                        const c = p.children[De];
                        return new bt(
                            p.segments.concat(c.segments),
                            c.children
                        );
                    }
                    return p;
                })(new bt(p.segments, c));
            }
            class os {
                constructor(c) {
                    (this.path = c),
                        (this.route = this.path[this.path.length - 1]);
                }
            }
            class Xi {
                constructor(c, u) {
                    (this.component = c), (this.route = u);
                }
            }
            function Ro(p, c, u) {
                const C = p._root;
                return ir(C, c ? c._root : null, u, [C.value]);
            }
            function an(p, c, u) {
                const C = (function zs(p) {
                    if (!p) return null;
                    for (let c = p.parent; c; c = c.parent) {
                        const u = c.routeConfig;
                        if (u && u._loadedConfig) return u._loadedConfig;
                    }
                    return null;
                })(c);
                return (C ? C.module.injector : u).get(p);
            }
            function ir(
                p,
                c,
                u,
                C,
                I = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
                const k = Nn(c);
                return (
                    p.children.forEach((q) => {
                        (function gs(
                            p,
                            c,
                            u,
                            C,
                            I = {
                                canDeactivateChecks: [],
                                canActivateChecks: [],
                            }
                        ) {
                            const k = p.value,
                                q = c ? c.value : null,
                                pe = u ? u.getContext(p.value.outlet) : null;
                            if (q && k.routeConfig === q.routeConfig) {
                                const Ge = (function xi(p, c, u) {
                                    if ('function' == typeof u) return u(p, c);
                                    switch (u) {
                                        case 'pathParamsChange':
                                            return !Yt(p.url, c.url);
                                        case 'pathParamsOrQueryParamsChange':
                                            return (
                                                !Yt(p.url, c.url) ||
                                                !Gn(
                                                    p.queryParams,
                                                    c.queryParams
                                                )
                                            );
                                        case 'always':
                                            return !0;
                                        case 'paramsOrQueryParamsChange':
                                            return (
                                                !on(p, c) ||
                                                !Gn(
                                                    p.queryParams,
                                                    c.queryParams
                                                )
                                            );
                                        default:
                                            return !on(p, c);
                                    }
                                })(q, k, k.routeConfig.runGuardsAndResolvers);
                                Ge
                                    ? I.canActivateChecks.push(new os(C))
                                    : ((k.data = q.data),
                                      (k._resolvedData = q._resolvedData)),
                                    ir(
                                        p,
                                        c,
                                        k.component
                                            ? pe
                                                ? pe.children
                                                : null
                                            : u,
                                        C,
                                        I
                                    ),
                                    Ge &&
                                        pe &&
                                        pe.outlet &&
                                        pe.outlet.isActivated &&
                                        I.canDeactivateChecks.push(
                                            new Xi(pe.outlet.component, q)
                                        );
                            } else
                                q && Rr(c, pe, I),
                                    I.canActivateChecks.push(new os(C)),
                                    ir(
                                        p,
                                        null,
                                        k.component
                                            ? pe
                                                ? pe.children
                                                : null
                                            : u,
                                        C,
                                        I
                                    );
                        })(q, k[q.value.outlet], u, C.concat([q.value]), I),
                            delete k[q.value.outlet];
                    }),
                    ue(k, (q, pe) => Rr(q, u.getContext(pe), I)),
                    I
                );
            }
            function Rr(p, c, u) {
                const C = Nn(p),
                    I = p.value;
                ue(C, (k, q) => {
                    Rr(
                        k,
                        I.component ? (c ? c.children.getContext(q) : null) : c,
                        u
                    );
                }),
                    u.canDeactivateChecks.push(
                        new Xi(
                            I.component && c && c.outlet && c.outlet.isActivated
                                ? c.outlet.component
                                : null,
                            I
                        )
                    );
            }
            class Ms {}
            function _i(p) {
                return new P.y((c) => c.error(p));
            }
            class D {
                constructor(c, u, C, I, k, q) {
                    (this.rootComponentType = c),
                        (this.config = u),
                        (this.urlTree = C),
                        (this.url = I),
                        (this.paramsInheritanceStrategy = k),
                        (this.relativeLinkResolution = q);
                }
                recognize() {
                    const c = V(
                            this.urlTree.root,
                            [],
                            [],
                            this.config.filter((q) => void 0 === q.redirectTo),
                            this.relativeLinkResolution
                        ).segmentGroup,
                        u = this.processSegmentGroup(this.config, c, De);
                    if (null === u) return null;
                    const C = new rt(
                            [],
                            Object.freeze({}),
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            {},
                            De,
                            this.rootComponentType,
                            null,
                            this.urlTree.root,
                            -1,
                            {}
                        ),
                        I = new hn(C, u),
                        k = new Bt(this.url, I);
                    return this.inheritParamsAndData(k._root), k;
                }
                inheritParamsAndData(c) {
                    const u = c.value,
                        C = Fe(u, this.paramsInheritanceStrategy);
                    (u.params = Object.freeze(C.params)),
                        (u.data = Object.freeze(C.data)),
                        c.children.forEach((I) => this.inheritParamsAndData(I));
                }
                processSegmentGroup(c, u, C) {
                    return 0 === u.segments.length && u.hasChildren()
                        ? this.processChildren(c, u)
                        : this.processSegment(c, u, u.segments, C);
                }
                processChildren(c, u) {
                    const C = [];
                    for (const k of Object.keys(u.children)) {
                        const q = u.children[k],
                            pe = A(c, k),
                            Ge = this.processSegmentGroup(pe, q, k);
                        if (null === Ge) return null;
                        C.push(...Ge);
                    }
                    const I = Ne(C);
                    return (
                        (function E(p) {
                            p.sort((c, u) =>
                                c.value.outlet === De
                                    ? -1
                                    : u.value.outlet === De
                                    ? 1
                                    : c.value.outlet.localeCompare(
                                          u.value.outlet
                                      )
                            );
                        })(I),
                        I
                    );
                }
                processSegment(c, u, C, I) {
                    for (const k of c) {
                        const q = this.processSegmentAgainstRoute(k, u, C, I);
                        if (null !== q) return q;
                    }
                    return At(u, C, I) ? [] : null;
                }
                processSegmentAgainstRoute(c, u, C, I) {
                    if (c.redirectTo || !un(c, u, C, I)) return null;
                    let k,
                        q = [],
                        pe = [];
                    if ('**' === c.path) {
                        const Zn = C.length > 0 ? Z(C).parameters : {};
                        k = new rt(
                            C,
                            Zn,
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            vi(c),
                            Nt(c),
                            c.component,
                            c,
                            bn(u),
                            In(u) + C.length,
                            zr(c)
                        );
                    } else {
                        const Zn = b(u, c, C);
                        if (!Zn.matched) return null;
                        (q = Zn.consumedSegments),
                            (pe = C.slice(Zn.lastChild)),
                            (k = new rt(
                                q,
                                Zn.parameters,
                                Object.freeze(
                                    Object.assign({}, this.urlTree.queryParams)
                                ),
                                this.urlTree.fragment,
                                vi(c),
                                Nt(c),
                                c.component,
                                c,
                                bn(u),
                                In(u) + q.length,
                                zr(c)
                            ));
                    }
                    const Ge = (function g(p) {
                            return p.children
                                ? p.children
                                : p.loadChildren
                                ? p._loadedConfig.routes
                                : [];
                        })(c),
                        { segmentGroup: Dt, slicedSegments: dn } = V(
                            u,
                            q,
                            pe,
                            Ge.filter((Zn) => void 0 === Zn.redirectTo),
                            this.relativeLinkResolution
                        );
                    if (0 === dn.length && Dt.hasChildren()) {
                        const Zn = this.processChildren(Ge, Dt);
                        return null === Zn ? null : [new hn(k, Zn)];
                    }
                    if (0 === Ge.length && 0 === dn.length)
                        return [new hn(k, [])];
                    const Rt = Nt(c) === I,
                        Yn = this.processSegment(Ge, Dt, dn, Rt ? De : I);
                    return null === Yn ? null : [new hn(k, Yn)];
                }
            }
            function x(p) {
                const c = p.value.routeConfig;
                return c && '' === c.path && void 0 === c.redirectTo;
            }
            function Ne(p) {
                const c = [],
                    u = new Set();
                for (const C of p) {
                    if (!x(C)) {
                        c.push(C);
                        continue;
                    }
                    const I = c.find(
                        (k) => C.value.routeConfig === k.value.routeConfig
                    );
                    void 0 !== I
                        ? (I.children.push(...C.children), u.add(I))
                        : c.push(C);
                }
                for (const C of u) {
                    const I = Ne(C.children);
                    c.push(new hn(C.value, I));
                }
                return c.filter((C) => !u.has(C));
            }
            function bn(p) {
                let c = p;
                for (; c._sourceSegment; ) c = c._sourceSegment;
                return c;
            }
            function In(p) {
                let c = p,
                    u = c._segmentIndexShift ? c._segmentIndexShift : 0;
                for (; c._sourceSegment; )
                    (c = c._sourceSegment),
                        (u += c._segmentIndexShift ? c._segmentIndexShift : 0);
                return u - 1;
            }
            function vi(p) {
                return p.data || {};
            }
            function zr(p) {
                return p.resolve || {};
            }
            function uo(p) {
                return [...Object.keys(p), ...Object.getOwnPropertySymbols(p)];
            }
            function es(p) {
                return (0, wt.w)((c) => {
                    const u = p(c);
                    return u
                        ? (0, w.D)(u).pipe((0, Ae.U)(() => c))
                        : (0, M.of)(c);
                });
            }
            class Ui extends class kr {
                shouldDetach(c) {
                    return !1;
                }
                store(c, u) {}
                shouldAttach(c) {
                    return !1;
                }
                retrieve(c) {
                    return null;
                }
                shouldReuseRoute(c, u) {
                    return c.routeConfig === u.routeConfig;
                }
            } {}
            const pr = new d.OlP('ROUTES');
            class Di {
                constructor(c, u, C, I) {
                    (this.injector = c),
                        (this.compiler = u),
                        (this.onLoadStartListener = C),
                        (this.onLoadEndListener = I);
                }
                load(c, u) {
                    if (u._loader$) return u._loader$;
                    this.onLoadStartListener && this.onLoadStartListener(u);
                    const I = this.loadModuleFactory(u.loadChildren).pipe(
                        (0, Ae.U)((k) => {
                            this.onLoadEndListener && this.onLoadEndListener(u);
                            const q = k.create(c);
                            return new $r(
                                $t(
                                    q.injector.get(
                                        pr,
                                        void 0,
                                        d.XFs.Self | d.XFs.Optional
                                    )
                                ).map(Gt),
                                q
                            );
                        }),
                        (0, _t.K)((k) => {
                            throw ((u._loader$ = void 0), k);
                        })
                    );
                    return (
                        (u._loader$ = new ye(I, () => new He.x()).pipe(Q())),
                        u._loader$
                    );
                }
                loadModuleFactory(c) {
                    return Le(c()).pipe(
                        (0, sn.z)((u) =>
                            u instanceof d.YKP
                                ? (0, M.of)(u)
                                : (0, w.D)(this.compiler.compileModuleAsync(u))
                        )
                    );
                }
            }
            class $o {
                shouldProcessUrl(c) {
                    return !0;
                }
                extract(c) {
                    return c;
                }
                merge(c, u) {
                    return c;
                }
            }
            function Go(p) {
                throw p;
            }
            function Ps(p, c, u) {
                return c.parse('/');
            }
            function Do(p, c) {
                return (0, M.of)(null);
            }
            const Rs = {
                    paths: 'exact',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'exact',
                },
                ls = {
                    paths: 'subset',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'subset',
                };
            let Ur = (() => {
                class p {
                    constructor(u, C, I, k, q, pe, Ge) {
                        (this.rootComponentType = u),
                            (this.urlSerializer = C),
                            (this.rootContexts = I),
                            (this.location = k),
                            (this.config = Ge),
                            (this.lastSuccessfulNavigation = null),
                            (this.currentNavigation = null),
                            (this.disposed = !1),
                            (this.navigationId = 0),
                            (this.currentPageId = 0),
                            (this.isNgZoneEnabled = !1),
                            (this.events = new He.x()),
                            (this.errorHandler = Go),
                            (this.malformedUriErrorHandler = Ps),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1),
                            (this.hooks = {
                                beforePreactivation: Do,
                                afterPreactivation: Do,
                            }),
                            (this.urlHandlingStrategy = new $o()),
                            (this.routeReuseStrategy = new Ui()),
                            (this.onSameUrlNavigation = 'ignore'),
                            (this.paramsInheritanceStrategy = 'emptyOnly'),
                            (this.urlUpdateStrategy = 'deferred'),
                            (this.relativeLinkResolution = 'corrected'),
                            (this.canceledNavigationResolution = 'replace'),
                            (this.ngModule = q.get(d.h0i)),
                            (this.console = q.get(d.c2e));
                        const Rt = q.get(d.R0b);
                        (this.isNgZoneEnabled =
                            Rt instanceof d.R0b && d.R0b.isInAngularZone()),
                            this.resetConfig(Ge),
                            (this.currentUrlTree = (function Pe() {
                                return new Un(new bt([], {}), {}, null);
                            })()),
                            (this.rawUrlTree = this.currentUrlTree),
                            (this.browserUrlTree = this.currentUrlTree),
                            (this.configLoader = new Di(
                                q,
                                pe,
                                (Yn) => this.triggerEvent(new Qn(Yn)),
                                (Yn) => this.triggerEvent(new Fn(Yn))
                            )),
                            (this.routerState = X(
                                this.currentUrlTree,
                                this.rootComponentType
                            )),
                            (this.transitions = new R.X({
                                id: 0,
                                targetPageId: 0,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.currentUrlTree,
                                extractedUrl: this.urlHandlingStrategy.extract(
                                    this.currentUrlTree
                                ),
                                urlAfterRedirects:
                                    this.urlHandlingStrategy.extract(
                                        this.currentUrlTree
                                    ),
                                rawUrl: this.currentUrlTree,
                                extras: {},
                                resolve: null,
                                reject: null,
                                promise: Promise.resolve(!0),
                                source: 'imperative',
                                restoredState: null,
                                currentSnapshot: this.routerState.snapshot,
                                targetSnapshot: null,
                                currentRouterState: this.routerState,
                                targetRouterState: null,
                                guards: {
                                    canActivateChecks: [],
                                    canDeactivateChecks: [],
                                },
                                guardsResult: null,
                            })),
                            (this.navigations = this.setupNavigations(
                                this.transitions
                            )),
                            this.processNavigations();
                    }
                    get browserPageId() {
                        var u;
                        return null === (u = this.location.getState()) ||
                            void 0 === u
                            ? void 0
                            : u.ɵrouterPageId;
                    }
                    setupNavigations(u) {
                        const C = this.events;
                        return u.pipe(
                            (0, Je.h)((I) => 0 !== I.id),
                            (0, Ae.U)((I) =>
                                Object.assign(Object.assign({}, I), {
                                    extractedUrl:
                                        this.urlHandlingStrategy.extract(
                                            I.rawUrl
                                        ),
                                })
                            ),
                            (0, wt.w)((I) => {
                                let k = !1,
                                    q = !1;
                                return (0, M.of)(I).pipe(
                                    (0, Ft.b)((pe) => {
                                        this.currentNavigation = {
                                            id: pe.id,
                                            initialUrl: pe.currentRawUrl,
                                            extractedUrl: pe.extractedUrl,
                                            trigger: pe.source,
                                            extras: pe.extras,
                                            previousNavigation: this
                                                .lastSuccessfulNavigation
                                                ? Object.assign(
                                                      Object.assign(
                                                          {},
                                                          this
                                                              .lastSuccessfulNavigation
                                                      ),
                                                      {
                                                          previousNavigation:
                                                              null,
                                                      }
                                                  )
                                                : null,
                                        };
                                    }),
                                    (0, wt.w)((pe) => {
                                        const Ge =
                                                this.browserUrlTree.toString(),
                                            Dt =
                                                !this.navigated ||
                                                pe.extractedUrl.toString() !==
                                                    Ge ||
                                                Ge !==
                                                    this.currentUrlTree.toString();
                                        if (
                                            ('reload' ===
                                                this.onSameUrlNavigation ||
                                                Dt) &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                pe.rawUrl
                                            )
                                        )
                                            return (
                                                Er(pe.source) &&
                                                    (this.browserUrlTree =
                                                        pe.extractedUrl),
                                                (0, M.of)(pe).pipe(
                                                    (0, wt.w)((Rt) => {
                                                        const Yn =
                                                            this.transitions.getValue();
                                                        return (
                                                            C.next(
                                                                new ar(
                                                                    Rt.id,
                                                                    this.serializeUrl(
                                                                        Rt.extractedUrl
                                                                    ),
                                                                    Rt.source,
                                                                    Rt.restoredState
                                                                )
                                                            ),
                                                            Yn !==
                                                            this.transitions.getValue()
                                                                ? Ve.E
                                                                : Promise.resolve(
                                                                      Rt
                                                                  )
                                                        );
                                                    }),
                                                    (function Vi(p, c, u, C) {
                                                        return (0, wt.w)((I) =>
                                                            (function Vt(
                                                                p,
                                                                c,
                                                                u,
                                                                C,
                                                                I
                                                            ) {
                                                                return new yi(
                                                                    p,
                                                                    c,
                                                                    u,
                                                                    C,
                                                                    I
                                                                ).apply();
                                                            })(
                                                                p,
                                                                c,
                                                                u,
                                                                I.extractedUrl,
                                                                C
                                                            ).pipe(
                                                                (0, Ae.U)((k) =>
                                                                    Object.assign(
                                                                        Object.assign(
                                                                            {},
                                                                            I
                                                                        ),
                                                                        {
                                                                            urlAfterRedirects:
                                                                                k,
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.ngModule.injector,
                                                        this.configLoader,
                                                        this.urlSerializer,
                                                        this.config
                                                    ),
                                                    (0, Ft.b)((Rt) => {
                                                        this.currentNavigation =
                                                            Object.assign(
                                                                Object.assign(
                                                                    {},
                                                                    this
                                                                        .currentNavigation
                                                                ),
                                                                {
                                                                    finalUrl:
                                                                        Rt.urlAfterRedirects,
                                                                }
                                                            );
                                                    }),
                                                    (function Ei(
                                                        p,
                                                        c,
                                                        u,
                                                        C,
                                                        I
                                                    ) {
                                                        return (0, sn.z)((k) =>
                                                            (function Si(
                                                                p,
                                                                c,
                                                                u,
                                                                C,
                                                                I = 'emptyOnly',
                                                                k = 'legacy'
                                                            ) {
                                                                try {
                                                                    const q =
                                                                        new D(
                                                                            p,
                                                                            c,
                                                                            u,
                                                                            C,
                                                                            I,
                                                                            k
                                                                        ).recognize();
                                                                    return null ===
                                                                        q
                                                                        ? _i(
                                                                              new Ms()
                                                                          )
                                                                        : (0,
                                                                          M.of)(
                                                                              q
                                                                          );
                                                                } catch (q) {
                                                                    return _i(
                                                                        q
                                                                    );
                                                                }
                                                            })(
                                                                p,
                                                                c,
                                                                k.urlAfterRedirects,
                                                                u(
                                                                    k.urlAfterRedirects
                                                                ),
                                                                C,
                                                                I
                                                            ).pipe(
                                                                (0, Ae.U)((q) =>
                                                                    Object.assign(
                                                                        Object.assign(
                                                                            {},
                                                                            k
                                                                        ),
                                                                        {
                                                                            targetSnapshot:
                                                                                q,
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.rootComponentType,
                                                        this.config,
                                                        (Rt) =>
                                                            this.serializeUrl(
                                                                Rt
                                                            ),
                                                        this
                                                            .paramsInheritanceStrategy,
                                                        this
                                                            .relativeLinkResolution
                                                    ),
                                                    (0, Ft.b)((Rt) => {
                                                        if (
                                                            'eager' ===
                                                            this
                                                                .urlUpdateStrategy
                                                        ) {
                                                            if (
                                                                !Rt.extras
                                                                    .skipLocationChange
                                                            ) {
                                                                const Zn =
                                                                    this.urlHandlingStrategy.merge(
                                                                        Rt.urlAfterRedirects,
                                                                        Rt.rawUrl
                                                                    );
                                                                this.setBrowserUrl(
                                                                    Zn,
                                                                    Rt
                                                                );
                                                            }
                                                            this.browserUrlTree =
                                                                Rt.urlAfterRedirects;
                                                        }
                                                        const Yn = new tr(
                                                            Rt.id,
                                                            this.serializeUrl(
                                                                Rt.extractedUrl
                                                            ),
                                                            this.serializeUrl(
                                                                Rt.urlAfterRedirects
                                                            ),
                                                            Rt.targetSnapshot
                                                        );
                                                        C.next(Yn);
                                                    })
                                                )
                                            );
                                        if (
                                            Dt &&
                                            this.rawUrlTree &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                this.rawUrlTree
                                            )
                                        ) {
                                            const {
                                                    id: Yn,
                                                    extractedUrl: Zn,
                                                    source: ns,
                                                    restoredState: _,
                                                    extras: o,
                                                } = pe,
                                                a = new ar(
                                                    Yn,
                                                    this.serializeUrl(Zn),
                                                    ns,
                                                    _
                                                );
                                            C.next(a);
                                            const f = X(
                                                Zn,
                                                this.rootComponentType
                                            ).snapshot;
                                            return (0, M.of)(
                                                Object.assign(
                                                    Object.assign({}, pe),
                                                    {
                                                        targetSnapshot: f,
                                                        urlAfterRedirects: Zn,
                                                        extras: Object.assign(
                                                            Object.assign(
                                                                {},
                                                                o
                                                            ),
                                                            {
                                                                skipLocationChange:
                                                                    !1,
                                                                replaceUrl: !1,
                                                            }
                                                        ),
                                                    }
                                                )
                                            );
                                        }
                                        return (
                                            (this.rawUrlTree = pe.rawUrl),
                                            pe.resolve(null),
                                            Ve.E
                                        );
                                    }),
                                    es((pe) => {
                                        const {
                                            targetSnapshot: Ge,
                                            id: Dt,
                                            extractedUrl: dn,
                                            rawUrl: Rt,
                                            extras: {
                                                skipLocationChange: Yn,
                                                replaceUrl: Zn,
                                            },
                                        } = pe;
                                        return this.hooks.beforePreactivation(
                                            Ge,
                                            {
                                                navigationId: Dt,
                                                appliedUrlTree: dn,
                                                rawUrlTree: Rt,
                                                skipLocationChange: !!Yn,
                                                replaceUrl: !!Zn,
                                            }
                                        );
                                    }),
                                    (0, Ft.b)((pe) => {
                                        const Ge = new fr(
                                            pe.id,
                                            this.serializeUrl(pe.extractedUrl),
                                            this.serializeUrl(
                                                pe.urlAfterRedirects
                                            ),
                                            pe.targetSnapshot
                                        );
                                        this.triggerEvent(Ge);
                                    }),
                                    (0, Ae.U)((pe) =>
                                        Object.assign(Object.assign({}, pe), {
                                            guards: Ro(
                                                pe.targetSnapshot,
                                                pe.currentSnapshot,
                                                this.rootContexts
                                            ),
                                        })
                                    ),
                                    (function ms(p, c) {
                                        return (0, sn.z)((u) => {
                                            const {
                                                targetSnapshot: C,
                                                currentSnapshot: I,
                                                guards: {
                                                    canActivateChecks: k,
                                                    canDeactivateChecks: q,
                                                },
                                            } = u;
                                            return 0 === q.length &&
                                                0 === k.length
                                                ? (0, M.of)(
                                                      Object.assign(
                                                          Object.assign({}, u),
                                                          { guardsResult: !0 }
                                                      )
                                                  )
                                                : (function Ss(p, c, u, C) {
                                                      return (0, w.D)(p).pipe(
                                                          (0, sn.z)((I) =>
                                                              (function Ti(
                                                                  p,
                                                                  c,
                                                                  u,
                                                                  C,
                                                                  I
                                                              ) {
                                                                  const k =
                                                                      c &&
                                                                      c.routeConfig
                                                                          ? c
                                                                                .routeConfig
                                                                                .canDeactivate
                                                                          : null;
                                                                  if (
                                                                      !k ||
                                                                      0 ===
                                                                          k.length
                                                                  )
                                                                      return (0,
                                                                      M.of)(!0);
                                                                  const q =
                                                                      k.map(
                                                                          (
                                                                              pe
                                                                          ) => {
                                                                              const Ge =
                                                                                  an(
                                                                                      pe,
                                                                                      c,
                                                                                      I
                                                                                  );
                                                                              let Dt;
                                                                              if (
                                                                                  (function zn(
                                                                                      p
                                                                                  ) {
                                                                                      return (
                                                                                          p &&
                                                                                          vr(
                                                                                              p.canDeactivate
                                                                                          )
                                                                                      );
                                                                                  })(
                                                                                      Ge
                                                                                  )
                                                                              )
                                                                                  Dt =
                                                                                      Le(
                                                                                          Ge.canDeactivate(
                                                                                              p,
                                                                                              c,
                                                                                              u,
                                                                                              C
                                                                                          )
                                                                                      );
                                                                              else {
                                                                                  if (
                                                                                      !vr(
                                                                                          Ge
                                                                                      )
                                                                                  )
                                                                                      throw new Error(
                                                                                          'Invalid CanDeactivate guard'
                                                                                      );
                                                                                  Dt =
                                                                                      Le(
                                                                                          Ge(
                                                                                              p,
                                                                                              c,
                                                                                              u,
                                                                                              C
                                                                                          )
                                                                                      );
                                                                              }
                                                                              return Dt.pipe(
                                                                                  (0,
                                                                                  Zt.P)()
                                                                              );
                                                                          }
                                                                      );
                                                                  return (0,
                                                                  M.of)(q).pipe(
                                                                      rr()
                                                                  );
                                                              })(
                                                                  I.component,
                                                                  I.route,
                                                                  u,
                                                                  c,
                                                                  C
                                                              )
                                                          ),
                                                          (0, Zt.P)(
                                                              (I) => !0 !== I,
                                                              !0
                                                          )
                                                      );
                                                  })(q, C, I, p).pipe(
                                                      (0, sn.z)((pe) =>
                                                          pe &&
                                                          (function qi(p) {
                                                              return (
                                                                  'boolean' ==
                                                                  typeof p
                                                              );
                                                          })(pe)
                                                              ? (function Eo(
                                                                    p,
                                                                    c,
                                                                    u,
                                                                    C
                                                                ) {
                                                                    return (0,
                                                                    w.D)(
                                                                        c
                                                                    ).pipe(
                                                                        (0,
                                                                        Vn.b)(
                                                                            (
                                                                                I
                                                                            ) =>
                                                                                (0,
                                                                                J.z)(
                                                                                    (function ys(
                                                                                        p,
                                                                                        c
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                p &&
                                                                                                c &&
                                                                                                c(
                                                                                                    new gn(
                                                                                                        p
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            M.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        I
                                                                                            .route
                                                                                            .parent,
                                                                                        C
                                                                                    ),
                                                                                    (function Is(
                                                                                        p,
                                                                                        c
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                p &&
                                                                                                c &&
                                                                                                c(
                                                                                                    new Ie(
                                                                                                        p
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            M.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        I.route,
                                                                                        C
                                                                                    ),
                                                                                    (function Tr(
                                                                                        p,
                                                                                        c,
                                                                                        u
                                                                                    ) {
                                                                                        const C =
                                                                                                c[
                                                                                                    c.length -
                                                                                                        1
                                                                                                ],
                                                                                            k =
                                                                                                c
                                                                                                    .slice(
                                                                                                        0,
                                                                                                        c.length -
                                                                                                            1
                                                                                                    )
                                                                                                    .reverse()
                                                                                                    .map(
                                                                                                        (
                                                                                                            q
                                                                                                        ) =>
                                                                                                            (function et(
                                                                                                                p
                                                                                                            ) {
                                                                                                                const c =
                                                                                                                    p.routeConfig
                                                                                                                        ? p
                                                                                                                              .routeConfig
                                                                                                                              .canActivateChild
                                                                                                                        : null;
                                                                                                                return c &&
                                                                                                                    0 !==
                                                                                                                        c.length
                                                                                                                    ? {
                                                                                                                          node: p,
                                                                                                                          guards: c,
                                                                                                                      }
                                                                                                                    : null;
                                                                                                            })(
                                                                                                                q
                                                                                                            )
                                                                                                    )
                                                                                                    .filter(
                                                                                                        (
                                                                                                            q
                                                                                                        ) =>
                                                                                                            null !==
                                                                                                            q
                                                                                                    )
                                                                                                    .map(
                                                                                                        (
                                                                                                            q
                                                                                                        ) =>
                                                                                                            xe(
                                                                                                                () => {
                                                                                                                    const pe =
                                                                                                                        q.guards.map(
                                                                                                                            (
                                                                                                                                Ge
                                                                                                                            ) => {
                                                                                                                                const Dt =
                                                                                                                                    an(
                                                                                                                                        Ge,
                                                                                                                                        q.node,
                                                                                                                                        u
                                                                                                                                    );
                                                                                                                                let dn;
                                                                                                                                if (
                                                                                                                                    (function ui(
                                                                                                                                        p
                                                                                                                                    ) {
                                                                                                                                        return (
                                                                                                                                            p &&
                                                                                                                                            vr(
                                                                                                                                                p.canActivateChild
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                    })(
                                                                                                                                        Dt
                                                                                                                                    )
                                                                                                                                )
                                                                                                                                    dn =
                                                                                                                                        Le(
                                                                                                                                            Dt.canActivateChild(
                                                                                                                                                C,
                                                                                                                                                p
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                else {
                                                                                                                                    if (
                                                                                                                                        !vr(
                                                                                                                                            Dt
                                                                                                                                        )
                                                                                                                                    )
                                                                                                                                        throw new Error(
                                                                                                                                            'Invalid CanActivateChild guard'
                                                                                                                                        );
                                                                                                                                    dn =
                                                                                                                                        Le(
                                                                                                                                            Dt(
                                                                                                                                                C,
                                                                                                                                                p
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                }
                                                                                                                                return dn.pipe(
                                                                                                                                    (0,
                                                                                                                                    Zt.P)()
                                                                                                                                );
                                                                                                                            }
                                                                                                                        );
                                                                                                                    return (0,
                                                                                                                    M.of)(
                                                                                                                        pe
                                                                                                                    ).pipe(
                                                                                                                        rr()
                                                                                                                    );
                                                                                                                }
                                                                                                            )
                                                                                                    );
                                                                                        return (0,
                                                                                        M.of)(
                                                                                            k
                                                                                        ).pipe(
                                                                                            rr()
                                                                                        );
                                                                                    })(
                                                                                        p,
                                                                                        I.path,
                                                                                        u
                                                                                    ),
                                                                                    (function _s(
                                                                                        p,
                                                                                        c,
                                                                                        u
                                                                                    ) {
                                                                                        const C =
                                                                                            c.routeConfig
                                                                                                ? c
                                                                                                      .routeConfig
                                                                                                      .canActivate
                                                                                                : null;
                                                                                        if (
                                                                                            !C ||
                                                                                            0 ===
                                                                                                C.length
                                                                                        )
                                                                                            return (0,
                                                                                            M.of)(
                                                                                                !0
                                                                                            );
                                                                                        const I =
                                                                                            C.map(
                                                                                                (
                                                                                                    k
                                                                                                ) =>
                                                                                                    xe(
                                                                                                        () => {
                                                                                                            const q =
                                                                                                                an(
                                                                                                                    k,
                                                                                                                    c,
                                                                                                                    u
                                                                                                                );
                                                                                                            let pe;
                                                                                                            if (
                                                                                                                (function Qi(
                                                                                                                    p
                                                                                                                ) {
                                                                                                                    return (
                                                                                                                        p &&
                                                                                                                        vr(
                                                                                                                            p.canActivate
                                                                                                                        )
                                                                                                                    );
                                                                                                                })(
                                                                                                                    q
                                                                                                                )
                                                                                                            )
                                                                                                                pe =
                                                                                                                    Le(
                                                                                                                        q.canActivate(
                                                                                                                            c,
                                                                                                                            p
                                                                                                                        )
                                                                                                                    );
                                                                                                            else {
                                                                                                                if (
                                                                                                                    !vr(
                                                                                                                        q
                                                                                                                    )
                                                                                                                )
                                                                                                                    throw new Error(
                                                                                                                        'Invalid CanActivate guard'
                                                                                                                    );
                                                                                                                pe =
                                                                                                                    Le(
                                                                                                                        q(
                                                                                                                            c,
                                                                                                                            p
                                                                                                                        )
                                                                                                                    );
                                                                                                            }
                                                                                                            return pe.pipe(
                                                                                                                (0,
                                                                                                                Zt.P)()
                                                                                                            );
                                                                                                        }
                                                                                                    )
                                                                                            );
                                                                                        return (0,
                                                                                        M.of)(
                                                                                            I
                                                                                        ).pipe(
                                                                                            rr()
                                                                                        );
                                                                                    })(
                                                                                        p,
                                                                                        I.route,
                                                                                        u
                                                                                    )
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        Zt.P)(
                                                                            (
                                                                                I
                                                                            ) =>
                                                                                !0 !==
                                                                                I,
                                                                            !0
                                                                        )
                                                                    );
                                                                })(C, k, p, c)
                                                              : (0, M.of)(pe)
                                                      ),
                                                      (0, Ae.U)((pe) =>
                                                          Object.assign(
                                                              Object.assign(
                                                                  {},
                                                                  u
                                                              ),
                                                              {
                                                                  guardsResult:
                                                                      pe,
                                                              }
                                                          )
                                                      )
                                                  );
                                        });
                                    })(this.ngModule.injector, (pe) =>
                                        this.triggerEvent(pe)
                                    ),
                                    (0, Ft.b)((pe) => {
                                        if (ii(pe.guardsResult)) {
                                            const Dt = ut(
                                                `Redirecting to "${this.serializeUrl(
                                                    pe.guardsResult
                                                )}"`
                                            );
                                            throw (
                                                ((Dt.url = pe.guardsResult), Dt)
                                            );
                                        }
                                        const Ge = new Hn(
                                            pe.id,
                                            this.serializeUrl(pe.extractedUrl),
                                            this.serializeUrl(
                                                pe.urlAfterRedirects
                                            ),
                                            pe.targetSnapshot,
                                            !!pe.guardsResult
                                        );
                                        this.triggerEvent(Ge);
                                    }),
                                    (0, Je.h)(
                                        (pe) =>
                                            !!pe.guardsResult ||
                                            (this.restoreHistory(pe),
                                            this.cancelNavigationTransition(
                                                pe,
                                                ''
                                            ),
                                            !1)
                                    ),
                                    es((pe) => {
                                        if (pe.guards.canActivateChecks.length)
                                            return (0, M.of)(pe).pipe(
                                                (0, Ft.b)((Ge) => {
                                                    const Dt = new Sr(
                                                        Ge.id,
                                                        this.serializeUrl(
                                                            Ge.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            Ge.urlAfterRedirects
                                                        ),
                                                        Ge.targetSnapshot
                                                    );
                                                    this.triggerEvent(Dt);
                                                }),
                                                (0, wt.w)((Ge) => {
                                                    let Dt = !1;
                                                    return (0, M.of)(Ge).pipe(
                                                        (function as(p, c) {
                                                            return (0, sn.z)(
                                                                (u) => {
                                                                    const {
                                                                        targetSnapshot:
                                                                            C,
                                                                        guards: {
                                                                            canActivateChecks:
                                                                                I,
                                                                        },
                                                                    } = u;
                                                                    if (
                                                                        !I.length
                                                                    )
                                                                        return (0,
                                                                        M.of)(
                                                                            u
                                                                        );
                                                                    let k = 0;
                                                                    return (0,
                                                                    w.D)(
                                                                        I
                                                                    ).pipe(
                                                                        (0,
                                                                        Vn.b)(
                                                                            (
                                                                                q
                                                                            ) =>
                                                                                (function Ks(
                                                                                    p,
                                                                                    c,
                                                                                    u,
                                                                                    C
                                                                                ) {
                                                                                    return (function Ys(
                                                                                        p,
                                                                                        c,
                                                                                        u,
                                                                                        C
                                                                                    ) {
                                                                                        const I =
                                                                                            uo(
                                                                                                p
                                                                                            );
                                                                                        if (
                                                                                            0 ===
                                                                                            I.length
                                                                                        )
                                                                                            return (0,
                                                                                            M.of)(
                                                                                                {}
                                                                                            );
                                                                                        const k =
                                                                                            {};
                                                                                        return (0,
                                                                                        w.D)(
                                                                                            I
                                                                                        ).pipe(
                                                                                            (0,
                                                                                            sn.z)(
                                                                                                (
                                                                                                    q
                                                                                                ) =>
                                                                                                    (function Os(
                                                                                                        p,
                                                                                                        c,
                                                                                                        u,
                                                                                                        C
                                                                                                    ) {
                                                                                                        const I =
                                                                                                            an(
                                                                                                                p,
                                                                                                                c,
                                                                                                                C
                                                                                                            );
                                                                                                        return Le(
                                                                                                            I.resolve
                                                                                                                ? I.resolve(
                                                                                                                      c,
                                                                                                                      u
                                                                                                                  )
                                                                                                                : I(
                                                                                                                      c,
                                                                                                                      u
                                                                                                                  )
                                                                                                        );
                                                                                                    })(
                                                                                                        p[
                                                                                                            q
                                                                                                        ],
                                                                                                        c,
                                                                                                        u,
                                                                                                        C
                                                                                                    ).pipe(
                                                                                                        (0,
                                                                                                        Ft.b)(
                                                                                                            (
                                                                                                                pe
                                                                                                            ) => {
                                                                                                                k[
                                                                                                                    q
                                                                                                                ] =
                                                                                                                    pe;
                                                                                                            }
                                                                                                        )
                                                                                                    )
                                                                                            ),
                                                                                            te(
                                                                                                1
                                                                                            ),
                                                                                            (0,
                                                                                            sn.z)(
                                                                                                () =>
                                                                                                    uo(
                                                                                                        k
                                                                                                    )
                                                                                                        .length ===
                                                                                                    I.length
                                                                                                        ? (0,
                                                                                                          M.of)(
                                                                                                              k
                                                                                                          )
                                                                                                        : Ve.E
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        p._resolve,
                                                                                        p,
                                                                                        c,
                                                                                        C
                                                                                    ).pipe(
                                                                                        (0,
                                                                                        Ae.U)(
                                                                                            (
                                                                                                k
                                                                                            ) => (
                                                                                                (p._resolvedData =
                                                                                                    k),
                                                                                                (p.data =
                                                                                                    Object.assign(
                                                                                                        Object.assign(
                                                                                                            {},
                                                                                                            p.data
                                                                                                        ),
                                                                                                        Fe(
                                                                                                            p,
                                                                                                            u
                                                                                                        )
                                                                                                            .resolve
                                                                                                    )),
                                                                                                null
                                                                                            )
                                                                                        )
                                                                                    );
                                                                                })(
                                                                                    q.route,
                                                                                    C,
                                                                                    p,
                                                                                    c
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        Ft.b)(
                                                                            () =>
                                                                                k++
                                                                        ),
                                                                        te(1),
                                                                        (0,
                                                                        sn.z)(
                                                                            (
                                                                                q
                                                                            ) =>
                                                                                k ===
                                                                                I.length
                                                                                    ? (0,
                                                                                      M.of)(
                                                                                          u
                                                                                      )
                                                                                    : Ve.E
                                                                        )
                                                                    );
                                                                }
                                                            );
                                                        })(
                                                            this
                                                                .paramsInheritanceStrategy,
                                                            this.ngModule
                                                                .injector
                                                        ),
                                                        (0, Ft.b)({
                                                            next: () =>
                                                                (Dt = !0),
                                                            complete: () => {
                                                                Dt ||
                                                                    (this.restoreHistory(
                                                                        Ge
                                                                    ),
                                                                    this.cancelNavigationTransition(
                                                                        Ge,
                                                                        "At least one route resolver didn't emit any value."
                                                                    ));
                                                            },
                                                        })
                                                    );
                                                }),
                                                (0, Ft.b)((Ge) => {
                                                    const Dt = new St(
                                                        Ge.id,
                                                        this.serializeUrl(
                                                            Ge.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            Ge.urlAfterRedirects
                                                        ),
                                                        Ge.targetSnapshot
                                                    );
                                                    this.triggerEvent(Dt);
                                                })
                                            );
                                    }),
                                    es((pe) => {
                                        const {
                                            targetSnapshot: Ge,
                                            id: Dt,
                                            extractedUrl: dn,
                                            rawUrl: Rt,
                                            extras: {
                                                skipLocationChange: Yn,
                                                replaceUrl: Zn,
                                            },
                                        } = pe;
                                        return this.hooks.afterPreactivation(
                                            Ge,
                                            {
                                                navigationId: Dt,
                                                appliedUrlTree: dn,
                                                rawUrlTree: Rt,
                                                skipLocationChange: !!Yn,
                                                replaceUrl: !!Zn,
                                            }
                                        );
                                    }),
                                    (0, Ae.U)((pe) => {
                                        const Ge = (function Mr(p, c, u) {
                                            const C = ni(
                                                p,
                                                c._root,
                                                u ? u._root : void 0
                                            );
                                            return new Nr(C, c);
                                        })(
                                            this.routeReuseStrategy,
                                            pe.targetSnapshot,
                                            pe.currentRouterState
                                        );
                                        return Object.assign(
                                            Object.assign({}, pe),
                                            { targetRouterState: Ge }
                                        );
                                    }),
                                    (0, Ft.b)((pe) => {
                                        (this.currentUrlTree =
                                            pe.urlAfterRedirects),
                                            (this.rawUrlTree =
                                                this.urlHandlingStrategy.merge(
                                                    pe.urlAfterRedirects,
                                                    pe.rawUrl
                                                )),
                                            (this.routerState =
                                                pe.targetRouterState),
                                            'deferred' ===
                                                this.urlUpdateStrategy &&
                                                (pe.extras.skipLocationChange ||
                                                    this.setBrowserUrl(
                                                        this.rawUrlTree,
                                                        pe
                                                    ),
                                                (this.browserUrlTree =
                                                    pe.urlAfterRedirects));
                                    }),
                                    ((p, c, u) =>
                                        (0, Ae.U)(
                                            (C) => (
                                                new ri(
                                                    c,
                                                    C.targetRouterState,
                                                    C.currentRouterState,
                                                    u
                                                ).activate(p),
                                                C
                                            )
                                        ))(
                                        this.rootContexts,
                                        this.routeReuseStrategy,
                                        (pe) => this.triggerEvent(pe)
                                    ),
                                    (0, Ft.b)({
                                        next() {
                                            k = !0;
                                        },
                                        complete() {
                                            k = !0;
                                        },
                                    }),
                                    (function Xe(p) {
                                        return (0, de.e)((c, u) => {
                                            try {
                                                c.subscribe(u);
                                            } finally {
                                                u.add(p);
                                            }
                                        });
                                    })(() => {
                                        var pe;
                                        k ||
                                            q ||
                                            this.cancelNavigationTransition(
                                                I,
                                                `Navigation ID ${I.id} is not equal to the current navigation id ${this.navigationId}`
                                            ),
                                            (null ===
                                                (pe = this.currentNavigation) ||
                                            void 0 === pe
                                                ? void 0
                                                : pe.id) === I.id &&
                                                (this.currentNavigation = null);
                                    }),
                                    (0, _t.K)((pe) => {
                                        if (
                                            ((q = !0),
                                            (function Ut(p) {
                                                return p && p[st];
                                            })(pe))
                                        ) {
                                            const Ge = ii(pe.url);
                                            Ge ||
                                                ((this.navigated = !0),
                                                this.restoreHistory(I, !0));
                                            const Dt = new cn(
                                                I.id,
                                                this.serializeUrl(
                                                    I.extractedUrl
                                                ),
                                                pe.message
                                            );
                                            C.next(Dt),
                                                Ge
                                                    ? setTimeout(() => {
                                                          const dn =
                                                                  this.urlHandlingStrategy.merge(
                                                                      pe.url,
                                                                      this
                                                                          .rawUrlTree
                                                                  ),
                                                              Rt = {
                                                                  skipLocationChange:
                                                                      I.extras
                                                                          .skipLocationChange,
                                                                  replaceUrl:
                                                                      'eager' ===
                                                                          this
                                                                              .urlUpdateStrategy ||
                                                                      Er(
                                                                          I.source
                                                                      ),
                                                              };
                                                          this.scheduleNavigation(
                                                              dn,
                                                              'imperative',
                                                              null,
                                                              Rt,
                                                              {
                                                                  resolve:
                                                                      I.resolve,
                                                                  reject: I.reject,
                                                                  promise:
                                                                      I.promise,
                                                              }
                                                          );
                                                      }, 0)
                                                    : I.resolve(!1);
                                        } else {
                                            this.restoreHistory(I, !0);
                                            const Ge = new Rn(
                                                I.id,
                                                this.serializeUrl(
                                                    I.extractedUrl
                                                ),
                                                pe
                                            );
                                            C.next(Ge);
                                            try {
                                                I.resolve(
                                                    this.errorHandler(pe)
                                                );
                                            } catch (Dt) {
                                                I.reject(Dt);
                                            }
                                        }
                                        return Ve.E;
                                    })
                                );
                            })
                        );
                    }
                    resetRootComponentType(u) {
                        (this.rootComponentType = u),
                            (this.routerState.root.component =
                                this.rootComponentType);
                    }
                    setTransition(u) {
                        this.transitions.next(
                            Object.assign(
                                Object.assign({}, this.transitions.value),
                                u
                            )
                        );
                    }
                    initialNavigation() {
                        this.setUpLocationChangeListener(),
                            0 === this.navigationId &&
                                this.navigateByUrl(this.location.path(!0), {
                                    replaceUrl: !0,
                                });
                    }
                    setUpLocationChangeListener() {
                        this.locationSubscription ||
                            (this.locationSubscription =
                                this.location.subscribe((u) => {
                                    const C =
                                        'popstate' === u.type
                                            ? 'popstate'
                                            : 'hashchange';
                                    'popstate' === C &&
                                        setTimeout(() => {
                                            var I;
                                            const k = { replaceUrl: !0 },
                                                q = (
                                                    null === (I = u.state) ||
                                                    void 0 === I
                                                        ? void 0
                                                        : I.navigationId
                                                )
                                                    ? u.state
                                                    : null;
                                            if (q) {
                                                const Ge = Object.assign({}, q);
                                                delete Ge.navigationId,
                                                    delete Ge.ɵrouterPageId,
                                                    0 !==
                                                        Object.keys(Ge)
                                                            .length &&
                                                        (k.state = Ge);
                                            }
                                            const pe = this.parseUrl(u.url);
                                            this.scheduleNavigation(
                                                pe,
                                                C,
                                                q,
                                                k
                                            );
                                        }, 0);
                                }));
                    }
                    get url() {
                        return this.serializeUrl(this.currentUrlTree);
                    }
                    getCurrentNavigation() {
                        return this.currentNavigation;
                    }
                    triggerEvent(u) {
                        this.events.next(u);
                    }
                    resetConfig(u) {
                        ht(u),
                            (this.config = u.map(Gt)),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1);
                    }
                    ngOnDestroy() {
                        this.dispose();
                    }
                    dispose() {
                        this.transitions.complete(),
                            this.locationSubscription &&
                                (this.locationSubscription.unsubscribe(),
                                (this.locationSubscription = void 0)),
                            (this.disposed = !0);
                    }
                    createUrlTree(u, C = {}) {
                        const {
                                relativeTo: I,
                                queryParams: k,
                                fragment: q,
                                queryParamsHandling: pe,
                                preserveFragment: Ge,
                            } = C,
                            Dt = I || this.routerState.root,
                            dn = Ge ? this.currentUrlTree.fragment : q;
                        let Rt = null;
                        switch (pe) {
                            case 'merge':
                                Rt = Object.assign(
                                    Object.assign(
                                        {},
                                        this.currentUrlTree.queryParams
                                    ),
                                    k
                                );
                                break;
                            case 'preserve':
                                Rt = this.currentUrlTree.queryParams;
                                break;
                            default:
                                Rt = k || null;
                        }
                        return (
                            null !== Rt && (Rt = this.removeEmptyProps(Rt)),
                            (function Pi(p, c, u, C, I) {
                                if (0 === u.length)
                                    return qr(c.root, c.root, c, C, I);
                                const k = (function Lr(p) {
                                    if (
                                        'string' == typeof p[0] &&
                                        1 === p.length &&
                                        '/' === p[0]
                                    )
                                        return new Ki(!0, 0, p);
                                    let c = 0,
                                        u = !1;
                                    const C = p.reduce((I, k, q) => {
                                        if ('object' == typeof k && null != k) {
                                            if (k.outlets) {
                                                const pe = {};
                                                return (
                                                    ue(k.outlets, (Ge, Dt) => {
                                                        pe[Dt] =
                                                            'string' ==
                                                            typeof Ge
                                                                ? Ge.split('/')
                                                                : Ge;
                                                    }),
                                                    [...I, { outlets: pe }]
                                                );
                                            }
                                            if (k.segmentPath)
                                                return [...I, k.segmentPath];
                                        }
                                        return 'string' != typeof k
                                            ? [...I, k]
                                            : 0 === q
                                            ? (k
                                                  .split('/')
                                                  .forEach((pe, Ge) => {
                                                      (0 == Ge && '.' === pe) ||
                                                          (0 == Ge && '' === pe
                                                              ? (u = !0)
                                                              : '..' === pe
                                                              ? c++
                                                              : '' != pe &&
                                                                I.push(pe));
                                                  }),
                                              I)
                                            : [...I, k];
                                    }, []);
                                    return new Ki(u, c, C);
                                })(u);
                                if (k.toRoot())
                                    return qr(c.root, new bt([], {}), c, C, I);
                                const q = (function Yi(p, c, u) {
                                        if (p.isAbsolute)
                                            return new Qr(c.root, !0, 0);
                                        if (-1 === u.snapshot._lastPathIndex) {
                                            const k = u.snapshot._urlSegment;
                                            return new Qr(k, k === c.root, 0);
                                        }
                                        const C = gi(p.commands[0]) ? 0 : 1;
                                        return (function ps(p, c, u) {
                                            let C = p,
                                                I = c,
                                                k = u;
                                            for (; k > I; ) {
                                                if (
                                                    ((k -= I),
                                                    (C = C.parent),
                                                    !C)
                                                )
                                                    throw new Error(
                                                        "Invalid number of '../'"
                                                    );
                                                I = C.segments.length;
                                            }
                                            return new Qr(C, !1, I - k);
                                        })(
                                            u.snapshot._urlSegment,
                                            u.snapshot._lastPathIndex + C,
                                            p.numberOfDoubleDots
                                        );
                                    })(k, c, p),
                                    pe = q.processChildren
                                        ? Jr(
                                              q.segmentGroup,
                                              q.index,
                                              k.commands
                                          )
                                        : Bi(
                                              q.segmentGroup,
                                              q.index,
                                              k.commands
                                          );
                                return qr(q.segmentGroup, pe, c, C, I);
                            })(
                                Dt,
                                this.currentUrlTree,
                                u,
                                Rt,
                                null != dn ? dn : null
                            )
                        );
                    }
                    navigateByUrl(u, C = { skipLocationChange: !1 }) {
                        const I = ii(u) ? u : this.parseUrl(u),
                            k = this.urlHandlingStrategy.merge(
                                I,
                                this.rawUrlTree
                            );
                        return this.scheduleNavigation(
                            k,
                            'imperative',
                            null,
                            C
                        );
                    }
                    navigate(u, C = { skipLocationChange: !1 }) {
                        return (
                            (function Zs(p) {
                                for (let c = 0; c < p.length; c++) {
                                    const u = p[c];
                                    if (null == u)
                                        throw new Error(
                                            `The requested path contains ${u} segment at index ${c}`
                                        );
                                }
                            })(u),
                            this.navigateByUrl(this.createUrlTree(u, C), C)
                        );
                    }
                    serializeUrl(u) {
                        return this.urlSerializer.serialize(u);
                    }
                    parseUrl(u) {
                        let C;
                        try {
                            C = this.urlSerializer.parse(u);
                        } catch (I) {
                            C = this.malformedUriErrorHandler(
                                I,
                                this.urlSerializer,
                                u
                            );
                        }
                        return C;
                    }
                    isActive(u, C) {
                        let I;
                        if (
                            ((I =
                                !0 === C
                                    ? Object.assign({}, Rs)
                                    : !1 === C
                                    ? Object.assign({}, ls)
                                    : C),
                            ii(u))
                        )
                            return je(this.currentUrlTree, u, I);
                        const k = this.parseUrl(u);
                        return je(this.currentUrlTree, k, I);
                    }
                    removeEmptyProps(u) {
                        return Object.keys(u).reduce((C, I) => {
                            const k = u[I];
                            return null != k && (C[I] = k), C;
                        }, {});
                    }
                    processNavigations() {
                        this.navigations.subscribe(
                            (u) => {
                                (this.navigated = !0),
                                    (this.lastSuccessfulId = u.id),
                                    (this.currentPageId = u.targetPageId),
                                    this.events.next(
                                        new Dn(
                                            u.id,
                                            this.serializeUrl(u.extractedUrl),
                                            this.serializeUrl(
                                                this.currentUrlTree
                                            )
                                        )
                                    ),
                                    (this.lastSuccessfulNavigation =
                                        this.currentNavigation),
                                    u.resolve(!0);
                            },
                            (u) => {
                                this.console.warn(
                                    `Unhandled Navigation Error: ${u}`
                                );
                            }
                        );
                    }
                    scheduleNavigation(u, C, I, k, q) {
                        var pe, Ge, Dt;
                        if (this.disposed) return Promise.resolve(!1);
                        const dn = this.transitions.value,
                            Rt = Er(C) && dn && !Er(dn.source),
                            Yn = dn.rawUrl.toString() === u.toString(),
                            Zn =
                                dn.id ===
                                (null === (pe = this.currentNavigation) ||
                                void 0 === pe
                                    ? void 0
                                    : pe.id);
                        if (Rt && Yn && Zn) return Promise.resolve(!0);
                        let _, o, a;
                        q
                            ? ((_ = q.resolve), (o = q.reject), (a = q.promise))
                            : (a = new Promise((L, K) => {
                                  (_ = L), (o = K);
                              }));
                        const f = ++this.navigationId;
                        let S;
                        return (
                            'computed' === this.canceledNavigationResolution
                                ? (0 === this.currentPageId &&
                                      (I = this.location.getState()),
                                  (S =
                                      I && I.ɵrouterPageId
                                          ? I.ɵrouterPageId
                                          : k.replaceUrl || k.skipLocationChange
                                          ? null !==
                                                (Ge = this.browserPageId) &&
                                            void 0 !== Ge
                                              ? Ge
                                              : 0
                                          : (null !==
                                                (Dt = this.browserPageId) &&
                                            void 0 !== Dt
                                                ? Dt
                                                : 0) + 1))
                                : (S = 0),
                            this.setTransition({
                                id: f,
                                targetPageId: S,
                                source: C,
                                restoredState: I,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.rawUrlTree,
                                rawUrl: u,
                                extras: k,
                                resolve: _,
                                reject: o,
                                promise: a,
                                currentSnapshot: this.routerState.snapshot,
                                currentRouterState: this.routerState,
                            }),
                            a.catch((L) => Promise.reject(L))
                        );
                    }
                    setBrowserUrl(u, C) {
                        const I = this.urlSerializer.serialize(u),
                            k = Object.assign(
                                Object.assign({}, C.extras.state),
                                this.generateNgRouterState(C.id, C.targetPageId)
                            );
                        this.location.isCurrentPathEqualTo(I) ||
                        C.extras.replaceUrl
                            ? this.location.replaceState(I, '', k)
                            : this.location.go(I, '', k);
                    }
                    restoreHistory(u, C = !1) {
                        var I, k;
                        if ('computed' === this.canceledNavigationResolution) {
                            const q = this.currentPageId - u.targetPageId;
                            ('popstate' !== u.source &&
                                'eager' !== this.urlUpdateStrategy &&
                                this.currentUrlTree !==
                                    (null === (I = this.currentNavigation) ||
                                    void 0 === I
                                        ? void 0
                                        : I.finalUrl)) ||
                            0 === q
                                ? this.currentUrlTree ===
                                      (null === (k = this.currentNavigation) ||
                                      void 0 === k
                                          ? void 0
                                          : k.finalUrl) &&
                                  0 === q &&
                                  (this.resetState(u),
                                  (this.browserUrlTree = u.currentUrlTree),
                                  this.resetUrlToCurrentUrlTree())
                                : this.location.historyGo(q);
                        } else
                            'replace' === this.canceledNavigationResolution &&
                                (C && this.resetState(u),
                                this.resetUrlToCurrentUrlTree());
                    }
                    resetState(u) {
                        (this.routerState = u.currentRouterState),
                            (this.currentUrlTree = u.currentUrlTree),
                            (this.rawUrlTree = this.urlHandlingStrategy.merge(
                                this.currentUrlTree,
                                u.rawUrl
                            ));
                    }
                    resetUrlToCurrentUrlTree() {
                        this.location.replaceState(
                            this.urlSerializer.serialize(this.rawUrlTree),
                            '',
                            this.generateNgRouterState(
                                this.lastSuccessfulId,
                                this.currentPageId
                            )
                        );
                    }
                    cancelNavigationTransition(u, C) {
                        const I = new cn(
                            u.id,
                            this.serializeUrl(u.extractedUrl),
                            C
                        );
                        this.triggerEvent(I), u.resolve(!1);
                    }
                    generateNgRouterState(u, C) {
                        return 'computed' === this.canceledNavigationResolution
                            ? { navigationId: u, ɵrouterPageId: C }
                            : { navigationId: u };
                    }
                }
                return (
                    (p.ɵfac = function (u) {
                        d.$Z();
                    }),
                    (p.ɵprov = d.Yz7({ token: p, factory: p.ɵfac })),
                    p
                );
            })();
            function Er(p) {
                return 'imperative' !== p;
            }
            let Fs = (() => {
                class p {
                    constructor(u, C, I, k, q) {
                        (this.router = u),
                            (this.route = C),
                            (this.tabIndexAttribute = I),
                            (this.renderer = k),
                            (this.el = q),
                            (this.commands = null),
                            (this.onChanges = new He.x()),
                            this.setTabIndexIfNotOnNativeEl('0');
                    }
                    setTabIndexIfNotOnNativeEl(u) {
                        if (null != this.tabIndexAttribute) return;
                        const C = this.renderer,
                            I = this.el.nativeElement;
                        null !== u
                            ? C.setAttribute(I, 'tabindex', u)
                            : C.removeAttribute(I, 'tabindex');
                    }
                    ngOnChanges(u) {
                        this.onChanges.next(this);
                    }
                    set routerLink(u) {
                        null != u
                            ? ((this.commands = Array.isArray(u) ? u : [u]),
                              this.setTabIndexIfNotOnNativeEl('0'))
                            : ((this.commands = null),
                              this.setTabIndexIfNotOnNativeEl(null));
                    }
                    onClick() {
                        if (null === this.urlTree) return !0;
                        const u = {
                            skipLocationChange: Ni(this.skipLocationChange),
                            replaceUrl: Ni(this.replaceUrl),
                            state: this.state,
                        };
                        return this.router.navigateByUrl(this.urlTree, u), !0;
                    }
                    get urlTree() {
                        return null === this.commands
                            ? null
                            : this.router.createUrlTree(this.commands, {
                                  relativeTo:
                                      void 0 !== this.relativeTo
                                          ? this.relativeTo
                                          : this.route,
                                  queryParams: this.queryParams,
                                  fragment: this.fragment,
                                  queryParamsHandling: this.queryParamsHandling,
                                  preserveFragment: Ni(this.preserveFragment),
                              });
                    }
                }
                return (
                    (p.ɵfac = function (u) {
                        return new (u || p)(
                            d.Y36(Ur),
                            d.Y36(Ee),
                            d.$8M('tabindex'),
                            d.Y36(d.Qsj),
                            d.Y36(d.SBq)
                        );
                    }),
                    (p.ɵdir = d.lG2({
                        type: p,
                        selectors: [['', 'routerLink', '', 5, 'a', 5, 'area']],
                        hostBindings: function (u, C) {
                            1 & u &&
                                d.NdJ('click', function () {
                                    return C.onClick();
                                });
                        },
                        inputs: {
                            queryParams: 'queryParams',
                            fragment: 'fragment',
                            queryParamsHandling: 'queryParamsHandling',
                            preserveFragment: 'preserveFragment',
                            skipLocationChange: 'skipLocationChange',
                            replaceUrl: 'replaceUrl',
                            state: 'state',
                            relativeTo: 'relativeTo',
                            routerLink: 'routerLink',
                        },
                        features: [d.TTD],
                    })),
                    p
                );
            })();
            function Ni(p) {
                return '' === p || !!p;
            }
            class vs {}
            class xs {
                preload(c, u) {
                    return (0, M.of)(null);
                }
            }
            let fo = (() => {
                    class p {
                        constructor(u, C, I, k) {
                            (this.router = u),
                                (this.injector = I),
                                (this.preloadingStrategy = k),
                                (this.loader = new Di(
                                    I,
                                    C,
                                    (Ge) => u.triggerEvent(new Qn(Ge)),
                                    (Ge) => u.triggerEvent(new Fn(Ge))
                                ));
                        }
                        setUpPreloading() {
                            this.subscription = this.router.events
                                .pipe(
                                    (0, Je.h)((u) => u instanceof Dn),
                                    (0, Vn.b)(() => this.preload())
                                )
                                .subscribe(() => {});
                        }
                        preload() {
                            const u = this.injector.get(d.h0i);
                            return this.processRoutes(u, this.router.config);
                        }
                        ngOnDestroy() {
                            this.subscription &&
                                this.subscription.unsubscribe();
                        }
                        processRoutes(u, C) {
                            const I = [];
                            for (const k of C)
                                if (
                                    k.loadChildren &&
                                    !k.canLoad &&
                                    k._loadedConfig
                                ) {
                                    const q = k._loadedConfig;
                                    I.push(
                                        this.processRoutes(q.module, q.routes)
                                    );
                                } else
                                    k.loadChildren && !k.canLoad
                                        ? I.push(this.preloadConfig(u, k))
                                        : k.children &&
                                          I.push(
                                              this.processRoutes(u, k.children)
                                          );
                            return (0, w.D)(I).pipe(
                                (0, $n.J)(),
                                (0, Ae.U)((k) => {})
                            );
                        }
                        preloadConfig(u, C) {
                            return this.preloadingStrategy.preload(C, () =>
                                (C._loadedConfig
                                    ? (0, M.of)(C._loadedConfig)
                                    : this.loader.load(u.injector, C)
                                ).pipe(
                                    (0, sn.z)(
                                        (k) => (
                                            (C._loadedConfig = k),
                                            this.processRoutes(
                                                k.module,
                                                k.routes
                                            )
                                        )
                                    )
                                )
                            );
                        }
                    }
                    return (
                        (p.ɵfac = function (u) {
                            return new (u || p)(
                                d.LFG(Ur),
                                d.LFG(d.Sil),
                                d.LFG(d.zs3),
                                d.LFG(vs)
                            );
                        }),
                        (p.ɵprov = d.Yz7({ token: p, factory: p.ɵfac })),
                        p
                    );
                })(),
                Co = (() => {
                    class p {
                        constructor(u, C, I = {}) {
                            (this.router = u),
                                (this.viewportScroller = C),
                                (this.options = I),
                                (this.lastId = 0),
                                (this.lastSource = 'imperative'),
                                (this.restoredId = 0),
                                (this.store = {}),
                                (I.scrollPositionRestoration =
                                    I.scrollPositionRestoration || 'disabled'),
                                (I.anchorScrolling =
                                    I.anchorScrolling || 'disabled');
                        }
                        init() {
                            'disabled' !==
                                this.options.scrollPositionRestoration &&
                                this.viewportScroller.setHistoryScrollRestoration(
                                    'manual'
                                ),
                                (this.routerEventsSubscription =
                                    this.createScrollEvents()),
                                (this.scrollEventsSubscription =
                                    this.consumeScrollEvents());
                        }
                        createScrollEvents() {
                            return this.router.events.subscribe((u) => {
                                u instanceof ar
                                    ? ((this.store[this.lastId] =
                                          this.viewportScroller.getScrollPosition()),
                                      (this.lastSource = u.navigationTrigger),
                                      (this.restoredId = u.restoredState
                                          ? u.restoredState.navigationId
                                          : 0))
                                    : u instanceof Dn &&
                                      ((this.lastId = u.id),
                                      this.scheduleScrollEvent(
                                          u,
                                          this.router.parseUrl(
                                              u.urlAfterRedirects
                                          ).fragment
                                      ));
                            });
                        }
                        consumeScrollEvents() {
                            return this.router.events.subscribe((u) => {
                                u instanceof ne &&
                                    (u.position
                                        ? 'top' ===
                                          this.options.scrollPositionRestoration
                                            ? this.viewportScroller.scrollToPosition(
                                                  [0, 0]
                                              )
                                            : 'enabled' ===
                                                  this.options
                                                      .scrollPositionRestoration &&
                                              this.viewportScroller.scrollToPosition(
                                                  u.position
                                              )
                                        : u.anchor &&
                                          'enabled' ===
                                              this.options.anchorScrolling
                                        ? this.viewportScroller.scrollToAnchor(
                                              u.anchor
                                          )
                                        : 'disabled' !==
                                              this.options
                                                  .scrollPositionRestoration &&
                                          this.viewportScroller.scrollToPosition(
                                              [0, 0]
                                          ));
                            });
                        }
                        scheduleScrollEvent(u, C) {
                            this.router.triggerEvent(
                                new ne(
                                    u,
                                    'popstate' === this.lastSource
                                        ? this.store[this.restoredId]
                                        : null,
                                    C
                                )
                            );
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription &&
                                this.routerEventsSubscription.unsubscribe(),
                                this.scrollEventsSubscription &&
                                    this.scrollEventsSubscription.unsubscribe();
                        }
                    }
                    return (
                        (p.ɵfac = function (u) {
                            d.$Z();
                        }),
                        (p.ɵprov = d.Yz7({ token: p, factory: p.ɵfac })),
                        p
                    );
                })();
            const Cr = new d.OlP('ROUTER_CONFIGURATION'),
                ho = new d.OlP('ROUTER_FORROOT_GUARD'),
                po = [
                    An.Ye,
                    { provide: Tn, useClass: xn },
                    {
                        provide: Ur,
                        useFactory: function Ns(
                            p,
                            c,
                            u,
                            C,
                            I,
                            k,
                            q = {},
                            pe,
                            Ge
                        ) {
                            const Dt = new Ur(null, p, c, u, C, I, $t(k));
                            return (
                                pe && (Dt.urlHandlingStrategy = pe),
                                Ge && (Dt.routeReuseStrategy = Ge),
                                (function Js(p, c) {
                                    p.errorHandler &&
                                        (c.errorHandler = p.errorHandler),
                                        p.malformedUriErrorHandler &&
                                            (c.malformedUriErrorHandler =
                                                p.malformedUriErrorHandler),
                                        p.onSameUrlNavigation &&
                                            (c.onSameUrlNavigation =
                                                p.onSameUrlNavigation),
                                        p.paramsInheritanceStrategy &&
                                            (c.paramsInheritanceStrategy =
                                                p.paramsInheritanceStrategy),
                                        p.relativeLinkResolution &&
                                            (c.relativeLinkResolution =
                                                p.relativeLinkResolution),
                                        p.urlUpdateStrategy &&
                                            (c.urlUpdateStrategy =
                                                p.urlUpdateStrategy),
                                        p.canceledNavigationResolution &&
                                            (c.canceledNavigationResolution =
                                                p.canceledNavigationResolution);
                                })(q, Dt),
                                q.enableTracing &&
                                    Dt.events.subscribe((dn) => {
                                        var Rt, Yn;
                                        null === (Rt = console.group) ||
                                            void 0 === Rt ||
                                            Rt.call(
                                                console,
                                                `Router Event: ${dn.constructor.name}`
                                            ),
                                            console.log(dn.toString()),
                                            console.log(dn),
                                            null === (Yn = console.groupEnd) ||
                                                void 0 === Yn ||
                                                Yn.call(console);
                                    }),
                                Dt
                            );
                        },
                        deps: [
                            Tn,
                            he,
                            An.Ye,
                            d.zs3,
                            d.Sil,
                            pr,
                            Cr,
                            [class ts {}, new d.FiY()],
                            [class Fo {}, new d.FiY()],
                        ],
                    },
                    he,
                    {
                        provide: Ee,
                        useFactory: function Ao(p) {
                            return p.routerState.root;
                        },
                        deps: [Ur],
                    },
                    fo,
                    xs,
                    class Es {
                        preload(c, u) {
                            return u().pipe((0, _t.K)(() => (0, M.of)(null)));
                        }
                    },
                    { provide: Cr, useValue: { enableTracing: !1 } },
                ];
            function qs() {
                return new d.PXZ('Router', Ur);
            }
            let go = (() => {
                class p {
                    constructor(u, C) {}
                    static forRoot(u, C) {
                        return {
                            ngModule: p,
                            providers: [
                                po,
                                Ds(u),
                                {
                                    provide: ho,
                                    useFactory: Qs,
                                    deps: [[Ur, new d.FiY(), new d.tp0()]],
                                },
                                { provide: Cr, useValue: C || {} },
                                {
                                    provide: An.S$,
                                    useFactory: us,
                                    deps: [
                                        An.lw,
                                        [new d.tBr(An.mr), new d.FiY()],
                                        Cr,
                                    ],
                                },
                                {
                                    provide: Co,
                                    useFactory: bo,
                                    deps: [Ur, An.EM, Cr],
                                },
                                {
                                    provide: vs,
                                    useExisting:
                                        C && C.preloadingStrategy
                                            ? C.preloadingStrategy
                                            : xs,
                                },
                                { provide: d.PXZ, multi: !0, useFactory: qs },
                                [
                                    Ls,
                                    {
                                        provide: d.ip1,
                                        multi: !0,
                                        useFactory: Xs,
                                        deps: [Ls],
                                    },
                                    { provide: wo, useFactory: No, deps: [Ls] },
                                    {
                                        provide: d.tb,
                                        multi: !0,
                                        useExisting: wo,
                                    },
                                ],
                            ],
                        };
                    }
                    static forChild(u) {
                        return { ngModule: p, providers: [Ds(u)] };
                    }
                }
                return (
                    (p.ɵfac = function (u) {
                        return new (u || p)(d.LFG(ho, 8), d.LFG(Ur, 8));
                    }),
                    (p.ɵmod = d.oAB({ type: p })),
                    (p.ɵinj = d.cJS({})),
                    p
                );
            })();
            function bo(p, c, u) {
                return (
                    u.scrollOffset && c.setOffset(u.scrollOffset),
                    new Co(p, c, u)
                );
            }
            function us(p, c, u = {}) {
                return u.useHash ? new An.Do(p, c) : new An.b0(p, c);
            }
            function Qs(p) {
                return 'guarded';
            }
            function Ds(p) {
                return [
                    { provide: d.deG, multi: !0, useValue: p },
                    { provide: pr, multi: !0, useValue: p },
                ];
            }
            let Ls = (() => {
                class p {
                    constructor(u) {
                        (this.injector = u),
                            (this.initNavigation = !1),
                            (this.destroyed = !1),
                            (this.resultOfPreactivationDone = new He.x());
                    }
                    appInitializer() {
                        return this.injector
                            .get(An.V_, Promise.resolve(null))
                            .then(() => {
                                if (this.destroyed) return Promise.resolve(!0);
                                let C = null;
                                const I = new Promise((pe) => (C = pe)),
                                    k = this.injector.get(Ur),
                                    q = this.injector.get(Cr);
                                return (
                                    'disabled' === q.initialNavigation
                                        ? (k.setUpLocationChangeListener(),
                                          C(!0))
                                        : 'enabled' === q.initialNavigation ||
                                          'enabledBlocking' ===
                                              q.initialNavigation
                                        ? ((k.hooks.afterPreactivation = () =>
                                              this.initNavigation
                                                  ? (0, M.of)(null)
                                                  : ((this.initNavigation = !0),
                                                    C(!0),
                                                    this
                                                        .resultOfPreactivationDone)),
                                          k.initialNavigation())
                                        : C(!0),
                                    I
                                );
                            });
                    }
                    bootstrapListener(u) {
                        const C = this.injector.get(Cr),
                            I = this.injector.get(fo),
                            k = this.injector.get(Co),
                            q = this.injector.get(Ur),
                            pe = this.injector.get(d.z2F);
                        u === pe.components[0] &&
                            (('enabledNonBlocking' === C.initialNavigation ||
                                void 0 === C.initialNavigation) &&
                                q.initialNavigation(),
                            I.setUpPreloading(),
                            k.init(),
                            q.resetRootComponentType(pe.componentTypes[0]),
                            this.resultOfPreactivationDone.next(null),
                            this.resultOfPreactivationDone.complete());
                    }
                    ngOnDestroy() {
                        this.destroyed = !0;
                    }
                }
                return (
                    (p.ɵfac = function (u) {
                        return new (u || p)(d.LFG(d.zs3));
                    }),
                    (p.ɵprov = d.Yz7({ token: p, factory: p.ɵfac })),
                    p
                );
            })();
            function Xs(p) {
                return p.appInitializer.bind(p);
            }
            function No(p) {
                return p.bootstrapListener.bind(p);
            }
            const wo = new d.OlP('Router Initializer');
        },
        3942: (_e, z, y) => {
            'use strict';
            y.d(z, { Z: () => xe });
            var d = y(2090),
                P = y(4859),
                H = y(9681),
                w = y(1877);
            class $ {
                constructor(de, Q) {
                    (this._delegate = de),
                        (this.firebase = Q),
                        (0, H._addComponent)(
                            de,
                            new P.wA('app-compat', () => this, 'PUBLIC')
                        ),
                        (this.container = de.container);
                }
                get automaticDataCollectionEnabled() {
                    return this._delegate.automaticDataCollectionEnabled;
                }
                set automaticDataCollectionEnabled(de) {
                    this._delegate.automaticDataCollectionEnabled = de;
                }
                get name() {
                    return this._delegate.name;
                }
                get options() {
                    return this._delegate.options;
                }
                delete() {
                    return new Promise((de) => {
                        this._delegate.checkDestroyed(), de();
                    }).then(
                        () => (
                            this.firebase.INTERNAL.removeApp(this.name),
                            (0, H.deleteApp)(this._delegate)
                        )
                    );
                }
                _getService(de, Q = H._DEFAULT_ENTRY_NAME) {
                    var ye;
                    this._delegate.checkDestroyed();
                    const M = this._delegate.container.getProvider(de);
                    return (
                        !M.isInitialized() &&
                            'EXPLICIT' ===
                                (null === (ye = M.getComponent()) ||
                                void 0 === ye
                                    ? void 0
                                    : ye.instantiationMode) &&
                            M.initialize(),
                        M.getImmediate({ identifier: Q })
                    );
                }
                _removeServiceInstance(de, Q = H._DEFAULT_ENTRY_NAME) {
                    this._delegate.container.getProvider(de).clearInstance(Q);
                }
                _addComponent(de) {
                    (0, H._addComponent)(this._delegate, de);
                }
                _addOrOverwriteComponent(de) {
                    (0, H._addOrOverwriteComponent)(this._delegate, de);
                }
                toJSON() {
                    return {
                        name: this.name,
                        automaticDataCollectionEnabled:
                            this.automaticDataCollectionEnabled,
                        options: this.options,
                    };
                }
            }
            const re = new d.LL('app-compat', 'Firebase', {
                    'no-app':
                        "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                    'invalid-app-argument':
                        'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                }),
                j = (function Y() {
                    const We = (function se(We) {
                        const de = {},
                            Q = {
                                __esModule: !0,
                                initializeApp: function R(He, Je = {}) {
                                    const te = H.initializeApp(He, Je);
                                    if ((0, d.r3)(de, te.name))
                                        return de[te.name];
                                    const Re = new We(te, Q);
                                    return (de[te.name] = Re), Re;
                                },
                                app: M,
                                registerVersion: H.registerVersion,
                                setLogLevel: H.setLogLevel,
                                onLog: H.onLog,
                                apps: null,
                                SDK_VERSION: H.SDK_VERSION,
                                INTERNAL: {
                                    registerComponent: function J(He) {
                                        const Je = He.name,
                                            te = Je.replace('-compat', '');
                                        if (
                                            H._registerComponent(He) &&
                                            'PUBLIC' === He.type
                                        ) {
                                            const Re = (Oe = M()) => {
                                                if ('function' != typeof Oe[te])
                                                    throw re.create(
                                                        'invalid-app-argument',
                                                        { appName: Je }
                                                    );
                                                return Oe[te]();
                                            };
                                            void 0 !== He.serviceProps &&
                                                (0, d.ZB)(Re, He.serviceProps),
                                                (Q[te] = Re),
                                                (We.prototype[te] = function (
                                                    ...Oe
                                                ) {
                                                    return this._getService
                                                        .bind(this, Je)
                                                        .apply(
                                                            this,
                                                            He.multipleInstances
                                                                ? Oe
                                                                : []
                                                        );
                                                });
                                        }
                                        return 'PUBLIC' === He.type
                                            ? Q[te]
                                            : null;
                                    },
                                    removeApp: function ye(He) {
                                        delete de[He];
                                    },
                                    useAsService: function Ve(He, Je) {
                                        return 'serverAuth' === Je ? null : Je;
                                    },
                                    modularAPIs: H,
                                },
                            };
                        function M(He) {
                            if (
                                !(0, d.r3)(
                                    de,
                                    (He = He || H._DEFAULT_ENTRY_NAME)
                                )
                            )
                                throw re.create('no-app', { appName: He });
                            return de[He];
                        }
                        return (
                            (Q.default = Q),
                            Object.defineProperty(Q, 'apps', {
                                get: function oe() {
                                    return Object.keys(de).map((He) => de[He]);
                                },
                            }),
                            (M.App = We),
                            Q
                        );
                    })($);
                    return (
                        (We.INTERNAL = Object.assign(
                            Object.assign({}, We.INTERNAL),
                            {
                                createFirebaseNamespace: Y,
                                extendNamespace: function de(Q) {
                                    (0, d.ZB)(We, Q);
                                },
                                createSubscribe: d.ne,
                                ErrorFactory: d.LL,
                                deepExtend: d.ZB,
                            }
                        )),
                        We
                    );
                })(),
                U = new w.Yd('@firebase/app-compat');
            if ((0, d.jU)() && void 0 !== self.firebase) {
                U.warn(
                    '\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  '
                );
                const We = self.firebase.SDK_VERSION;
                We &&
                    We.indexOf('LITE') >= 0 &&
                    U.warn(
                        '\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    '
                    );
            }
            const xe = j;
            !(function be(We) {
                (0, H.registerVersion)('@firebase/app-compat', '0.1.16', We);
            })();
        },
        9681: (_e, z, y) => {
            'use strict';
            y.r(z),
                y.d(z, {
                    FirebaseError: () => w.ZR,
                    SDK_VERSION: () => Rn,
                    _DEFAULT_ENTRY_NAME: () => Bn,
                    _addComponent: () => Zt,
                    _addOrOverwriteComponent: () => sn,
                    _apps: () => _t,
                    _clearComponents: () => Jt,
                    _components: () => Vn,
                    _getProvider: () => $n,
                    _registerComponent: () => Ft,
                    _removeServiceInstance: () => An,
                    deleteApp: () => Sr,
                    getApp: () => fr,
                    getApps: () => Hn,
                    initializeApp: () => tr,
                    onLog: () => Fn,
                    registerVersion: () => Qn,
                    setLogLevel: () => gn,
                });
            var d = y(5861),
                P = y(4859),
                H = y(1877),
                w = y(2090);
            class $ {
                constructor(W) {
                    this.container = W;
                }
                getPlatformInfoString() {
                    return this.container
                        .getProviders()
                        .map((ne) => {
                            if (
                                (function ae(Ie) {
                                    const W = Ie.getComponent();
                                    return (
                                        'VERSION' ===
                                        (null == W ? void 0 : W.type)
                                    );
                                })(ne)
                            ) {
                                const De = ne.getImmediate();
                                return `${De.library}/${De.version}`;
                            }
                            return null;
                        })
                        .filter((ne) => ne)
                        .join(' ');
                }
            }
            const re = '@firebase/app',
                Y = new H.Yd('@firebase/app'),
                Bn = '[DEFAULT]',
                Et = {
                    [re]: 'fire-core',
                    '@firebase/app-compat': 'fire-core-compat',
                    '@firebase/analytics': 'fire-analytics',
                    '@firebase/analytics-compat': 'fire-analytics-compat',
                    '@firebase/app-check': 'fire-app-check',
                    '@firebase/app-check-compat': 'fire-app-check-compat',
                    '@firebase/auth': 'fire-auth',
                    '@firebase/auth-compat': 'fire-auth-compat',
                    '@firebase/database': 'fire-rtdb',
                    '@firebase/database-compat': 'fire-rtdb-compat',
                    '@firebase/functions': 'fire-fn',
                    '@firebase/functions-compat': 'fire-fn-compat',
                    '@firebase/installations': 'fire-iid',
                    '@firebase/installations-compat': 'fire-iid-compat',
                    '@firebase/messaging': 'fire-fcm',
                    '@firebase/messaging-compat': 'fire-fcm-compat',
                    '@firebase/performance': 'fire-perf',
                    '@firebase/performance-compat': 'fire-perf-compat',
                    '@firebase/remote-config': 'fire-rc',
                    '@firebase/remote-config-compat': 'fire-rc-compat',
                    '@firebase/storage': 'fire-gcs',
                    '@firebase/storage-compat': 'fire-gcs-compat',
                    '@firebase/firestore': 'fire-fst',
                    '@firebase/firestore-compat': 'fire-fst-compat',
                    'fire-js': 'fire-js',
                    firebase: 'fire-js-all',
                },
                _t = new Map(),
                Vn = new Map();
            function Zt(Ie, W) {
                try {
                    Ie.container.addComponent(W);
                } catch (ne) {
                    Y.debug(
                        `Component ${W.name} failed to register with FirebaseApp ${Ie.name}`,
                        ne
                    );
                }
            }
            function sn(Ie, W) {
                Ie.container.addOrOverwriteComponent(W);
            }
            function Ft(Ie) {
                const W = Ie.name;
                if (Vn.has(W))
                    return (
                        Y.debug(
                            `There were multiple attempts to register component ${W}.`
                        ),
                        !1
                    );
                Vn.set(W, Ie);
                for (const ne of _t.values()) Zt(ne, Ie);
                return !0;
            }
            function $n(Ie, W) {
                return Ie.container.getProvider(W);
            }
            function An(Ie, W, ne = Bn) {
                $n(Ie, W).clearInstance(ne);
            }
            function Jt() {
                Vn.clear();
            }
            const Dn = new w.LL('app', 'Firebase', {
                'no-app':
                    "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                'bad-app-name': "Illegal App name: '{$appName}",
                'duplicate-app':
                    "Firebase App named '{$appName}' already exists with different options or config",
                'app-deleted':
                    "Firebase App named '{$appName}' already deleted",
                'invalid-app-argument':
                    'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                'invalid-log-argument':
                    'First argument to `onLog` must be null or a function.',
            });
            class cn {
                constructor(W, ne, De) {
                    (this._isDeleted = !1),
                        (this._options = Object.assign({}, W)),
                        (this._config = Object.assign({}, ne)),
                        (this._name = ne.name),
                        (this._automaticDataCollectionEnabled =
                            ne.automaticDataCollectionEnabled),
                        (this._container = De),
                        this.container.addComponent(
                            new P.wA('app', () => this, 'PUBLIC')
                        );
                }
                get automaticDataCollectionEnabled() {
                    return (
                        this.checkDestroyed(),
                        this._automaticDataCollectionEnabled
                    );
                }
                set automaticDataCollectionEnabled(W) {
                    this.checkDestroyed(),
                        (this._automaticDataCollectionEnabled = W);
                }
                get name() {
                    return this.checkDestroyed(), this._name;
                }
                get options() {
                    return this.checkDestroyed(), this._options;
                }
                get config() {
                    return this.checkDestroyed(), this._config;
                }
                get container() {
                    return this._container;
                }
                get isDeleted() {
                    return this._isDeleted;
                }
                set isDeleted(W) {
                    this._isDeleted = W;
                }
                checkDestroyed() {
                    if (this.isDeleted)
                        throw Dn.create('app-deleted', { appName: this._name });
                }
            }
            const Rn = '9.6.5';
            function tr(Ie, W = {}) {
                'object' != typeof W && (W = { name: W });
                const ne = Object.assign(
                        { name: Bn, automaticDataCollectionEnabled: !1 },
                        W
                    ),
                    De = ne.name;
                if ('string' != typeof De || !De)
                    throw Dn.create('bad-app-name', { appName: String(De) });
                const Ke = _t.get(De);
                if (Ke) {
                    if ((0, w.vZ)(Ie, Ke.options) && (0, w.vZ)(ne, Ke.config))
                        return Ke;
                    throw Dn.create('duplicate-app', { appName: De });
                }
                const at = new P.H0(De);
                for (const ut of Vn.values()) at.addComponent(ut);
                const st = new cn(Ie, ne, at);
                return _t.set(De, st), st;
            }
            function fr(Ie = Bn) {
                const W = _t.get(Ie);
                if (!W) throw Dn.create('no-app', { appName: Ie });
                return W;
            }
            function Hn() {
                return Array.from(_t.values());
            }
            function Sr(Ie) {
                return St.apply(this, arguments);
            }
            function St() {
                return (St = (0, d.Z)(function* (Ie) {
                    const W = Ie.name;
                    _t.has(W) &&
                        (_t.delete(W),
                        yield Promise.all(
                            Ie.container.getProviders().map((ne) => ne.delete())
                        ),
                        (Ie.isDeleted = !0));
                })).apply(this, arguments);
            }
            function Qn(Ie, W, ne) {
                var De;
                let Ke = null !== (De = Et[Ie]) && void 0 !== De ? De : Ie;
                ne && (Ke += `-${ne}`);
                const at = Ke.match(/\s|\//),
                    st = W.match(/\s|\//);
                if (at || st) {
                    const ut = [
                        `Unable to register library "${Ke}" with version "${W}":`,
                    ];
                    return (
                        at &&
                            ut.push(
                                `library name "${Ke}" contains illegal characters (whitespace or "/")`
                            ),
                        at && st && ut.push('and'),
                        st &&
                            ut.push(
                                `version name "${W}" contains illegal characters (whitespace or "/")`
                            ),
                        void Y.warn(ut.join(' '))
                    );
                }
                Ft(
                    new P.wA(
                        `${Ke}-version`,
                        () => ({ library: Ke, version: W }),
                        'VERSION'
                    )
                );
            }
            function Fn(Ie, W) {
                if (null !== Ie && 'function' != typeof Ie)
                    throw Dn.create('invalid-log-argument');
                (0, H.Am)(Ie, W);
            }
            function gn(Ie) {
                (0, H.Ub)(Ie);
            }
            !(function Ir(Ie) {
                Ft(new P.wA('platform-logger', (W) => new $(W), 'PRIVATE')),
                    Qn(re, '0.7.15', Ie),
                    Qn(re, '0.7.15', 'esm2017'),
                    Qn('fire-js', '');
            })('');
        },
        4859: (_e, z, y) => {
            'use strict';
            y.d(z, { wA: () => H, H0: () => se });
            var d = y(5861),
                P = y(2090);
            class H {
                constructor(j, U, ie) {
                    (this.name = j),
                        (this.instanceFactory = U),
                        (this.type = ie),
                        (this.multipleInstances = !1),
                        (this.serviceProps = {}),
                        (this.instantiationMode = 'LAZY'),
                        (this.onInstanceCreated = null);
                }
                setInstantiationMode(j) {
                    return (this.instantiationMode = j), this;
                }
                setMultipleInstances(j) {
                    return (this.multipleInstances = j), this;
                }
                setServiceProps(j) {
                    return (this.serviceProps = j), this;
                }
                setInstanceCreatedCallback(j) {
                    return (this.onInstanceCreated = j), this;
                }
            }
            const w = '[DEFAULT]';
            class $ {
                constructor(j, U) {
                    (this.name = j),
                        (this.container = U),
                        (this.component = null),
                        (this.instances = new Map()),
                        (this.instancesDeferred = new Map()),
                        (this.instancesOptions = new Map()),
                        (this.onInitCallbacks = new Map());
                }
                get(j) {
                    const U = this.normalizeInstanceIdentifier(j);
                    if (!this.instancesDeferred.has(U)) {
                        const ie = new P.BH();
                        if (
                            (this.instancesDeferred.set(U, ie),
                            this.isInitialized(U) ||
                                this.shouldAutoInitialize())
                        )
                            try {
                                const Ce = this.getOrInitializeService({
                                    instanceIdentifier: U,
                                });
                                Ce && ie.resolve(Ce);
                            } catch (Ce) {}
                    }
                    return this.instancesDeferred.get(U).promise;
                }
                getImmediate(j) {
                    var U;
                    const ie = this.normalizeInstanceIdentifier(
                            null == j ? void 0 : j.identifier
                        ),
                        Ce =
                            null !== (U = null == j ? void 0 : j.optional) &&
                            void 0 !== U &&
                            U;
                    if (
                        !this.isInitialized(ie) &&
                        !this.shouldAutoInitialize()
                    ) {
                        if (Ce) return null;
                        throw Error(`Service ${this.name} is not available`);
                    }
                    try {
                        return this.getOrInitializeService({
                            instanceIdentifier: ie,
                        });
                    } catch (be) {
                        if (Ce) return null;
                        throw be;
                    }
                }
                getComponent() {
                    return this.component;
                }
                setComponent(j) {
                    if (j.name !== this.name)
                        throw Error(
                            `Mismatching Component ${j.name} for Provider ${this.name}.`
                        );
                    if (this.component)
                        throw Error(
                            `Component for ${this.name} has already been provided`
                        );
                    if (((this.component = j), this.shouldAutoInitialize())) {
                        if (
                            (function re(Y) {
                                return 'EAGER' === Y.instantiationMode;
                            })(j)
                        )
                            try {
                                this.getOrInitializeService({
                                    instanceIdentifier: w,
                                });
                            } catch (U) {}
                        for (const [
                            U,
                            ie,
                        ] of this.instancesDeferred.entries()) {
                            const Ce = this.normalizeInstanceIdentifier(U);
                            try {
                                const be = this.getOrInitializeService({
                                    instanceIdentifier: Ce,
                                });
                                ie.resolve(be);
                            } catch (be) {}
                        }
                    }
                }
                clearInstance(j = w) {
                    this.instancesDeferred.delete(j),
                        this.instancesOptions.delete(j),
                        this.instances.delete(j);
                }
                delete() {
                    var j = this;
                    return (0, d.Z)(function* () {
                        const U = Array.from(j.instances.values());
                        yield Promise.all([
                            ...U.filter((ie) => 'INTERNAL' in ie).map((ie) =>
                                ie.INTERNAL.delete()
                            ),
                            ...U.filter((ie) => '_delete' in ie).map((ie) =>
                                ie._delete()
                            ),
                        ]);
                    })();
                }
                isComponentSet() {
                    return null != this.component;
                }
                isInitialized(j = w) {
                    return this.instances.has(j);
                }
                getOptions(j = w) {
                    return this.instancesOptions.get(j) || {};
                }
                initialize(j = {}) {
                    const { options: U = {} } = j,
                        ie = this.normalizeInstanceIdentifier(
                            j.instanceIdentifier
                        );
                    if (this.isInitialized(ie))
                        throw Error(
                            `${this.name}(${ie}) has already been initialized`
                        );
                    if (!this.isComponentSet())
                        throw Error(
                            `Component ${this.name} has not been registered yet`
                        );
                    const Ce = this.getOrInitializeService({
                        instanceIdentifier: ie,
                        options: U,
                    });
                    for (const [be, xe] of this.instancesDeferred.entries())
                        ie === this.normalizeInstanceIdentifier(be) &&
                            xe.resolve(Ce);
                    return Ce;
                }
                onInit(j, U) {
                    var ie;
                    const Ce = this.normalizeInstanceIdentifier(U),
                        be =
                            null !== (ie = this.onInitCallbacks.get(Ce)) &&
                            void 0 !== ie
                                ? ie
                                : new Set();
                    be.add(j), this.onInitCallbacks.set(Ce, be);
                    const xe = this.instances.get(Ce);
                    return (
                        xe && j(xe, Ce),
                        () => {
                            be.delete(j);
                        }
                    );
                }
                invokeOnInitCallbacks(j, U) {
                    const ie = this.onInitCallbacks.get(U);
                    if (ie)
                        for (const Ce of ie)
                            try {
                                Ce(j, U);
                            } catch (be) {}
                }
                getOrInitializeService({
                    instanceIdentifier: j,
                    options: U = {},
                }) {
                    let ie = this.instances.get(j);
                    if (
                        !ie &&
                        this.component &&
                        ((ie = this.component.instanceFactory(this.container, {
                            instanceIdentifier: ((Y = j), Y === w ? void 0 : Y),
                            options: U,
                        })),
                        this.instances.set(j, ie),
                        this.instancesOptions.set(j, U),
                        this.invokeOnInitCallbacks(ie, j),
                        this.component.onInstanceCreated)
                    )
                        try {
                            this.component.onInstanceCreated(
                                this.container,
                                j,
                                ie
                            );
                        } catch (Ce) {}
                    var Y;
                    return ie || null;
                }
                normalizeInstanceIdentifier(j = w) {
                    return this.component
                        ? this.component.multipleInstances
                            ? j
                            : w
                        : j;
                }
                shouldAutoInitialize() {
                    return (
                        !!this.component &&
                        'EXPLICIT' !== this.component.instantiationMode
                    );
                }
            }
            class se {
                constructor(j) {
                    (this.name = j), (this.providers = new Map());
                }
                addComponent(j) {
                    const U = this.getProvider(j.name);
                    if (U.isComponentSet())
                        throw new Error(
                            `Component ${j.name} has already been registered with ${this.name}`
                        );
                    U.setComponent(j);
                }
                addOrOverwriteComponent(j) {
                    this.getProvider(j.name).isComponentSet() &&
                        this.providers.delete(j.name),
                        this.addComponent(j);
                }
                getProvider(j) {
                    if (this.providers.has(j)) return this.providers.get(j);
                    const U = new $(j, this);
                    return this.providers.set(j, U), U;
                }
                getProviders() {
                    return Array.from(this.providers.values());
                }
            }
        },
        1877: (_e, z, y) => {
            'use strict';
            y.d(z, { in: () => P, Yd: () => re, Ub: () => se, Am: () => Y });
            const d = [];
            var P = (() => {
                return (
                    ((j = P || (P = {}))[(j.DEBUG = 0)] = 'DEBUG'),
                    (j[(j.VERBOSE = 1)] = 'VERBOSE'),
                    (j[(j.INFO = 2)] = 'INFO'),
                    (j[(j.WARN = 3)] = 'WARN'),
                    (j[(j.ERROR = 4)] = 'ERROR'),
                    (j[(j.SILENT = 5)] = 'SILENT'),
                    P
                );
                var j;
            })();
            const H = {
                    debug: P.DEBUG,
                    verbose: P.VERBOSE,
                    info: P.INFO,
                    warn: P.WARN,
                    error: P.ERROR,
                    silent: P.SILENT,
                },
                w = P.INFO,
                $ = {
                    [P.DEBUG]: 'log',
                    [P.VERBOSE]: 'log',
                    [P.INFO]: 'info',
                    [P.WARN]: 'warn',
                    [P.ERROR]: 'error',
                },
                ae = (j, U, ...ie) => {
                    if (U < j.logLevel) return;
                    const Ce = new Date().toISOString(),
                        be = $[U];
                    if (!be)
                        throw new Error(
                            `Attempted to log a message with an invalid logType (value: ${U})`
                        );
                    console[be](`[${Ce}]  ${j.name}:`, ...ie);
                };
            class re {
                constructor(U) {
                    (this.name = U),
                        (this._logLevel = w),
                        (this._logHandler = ae),
                        (this._userLogHandler = null),
                        d.push(this);
                }
                get logLevel() {
                    return this._logLevel;
                }
                set logLevel(U) {
                    if (!(U in P))
                        throw new TypeError(
                            `Invalid value "${U}" assigned to \`logLevel\``
                        );
                    this._logLevel = U;
                }
                setLogLevel(U) {
                    this._logLevel = 'string' == typeof U ? H[U] : U;
                }
                get logHandler() {
                    return this._logHandler;
                }
                set logHandler(U) {
                    if ('function' != typeof U)
                        throw new TypeError(
                            'Value assigned to `logHandler` must be a function'
                        );
                    this._logHandler = U;
                }
                get userLogHandler() {
                    return this._userLogHandler;
                }
                set userLogHandler(U) {
                    this._userLogHandler = U;
                }
                debug(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.DEBUG, ...U),
                        this._logHandler(this, P.DEBUG, ...U);
                }
                log(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.VERBOSE, ...U),
                        this._logHandler(this, P.VERBOSE, ...U);
                }
                info(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.INFO, ...U),
                        this._logHandler(this, P.INFO, ...U);
                }
                warn(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.WARN, ...U),
                        this._logHandler(this, P.WARN, ...U);
                }
                error(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.ERROR, ...U),
                        this._logHandler(this, P.ERROR, ...U);
                }
            }
            function se(j) {
                d.forEach((U) => {
                    U.setLogLevel(j);
                });
            }
            function Y(j, U) {
                for (const ie of d) {
                    let Ce = null;
                    U && U.level && (Ce = H[U.level]),
                        (ie.userLogHandler =
                            null === j
                                ? null
                                : (be, xe, ...We) => {
                                      const de = We.map((Q) => {
                                          if (null == Q) return null;
                                          if ('string' == typeof Q) return Q;
                                          if (
                                              'number' == typeof Q ||
                                              'boolean' == typeof Q
                                          )
                                              return Q.toString();
                                          if (Q instanceof Error)
                                              return Q.message;
                                          try {
                                              return JSON.stringify(Q);
                                          } catch (ye) {
                                              return null;
                                          }
                                      })
                                          .filter((Q) => Q)
                                          .join(' ');
                                      xe >= (null != Ce ? Ce : be.logLevel) &&
                                          j({
                                              level: P[xe].toLowerCase(),
                                              message: de,
                                              args: We,
                                              type: be.name,
                                          });
                                  });
                }
            }
        },
        5573: (_e, z, y) => {
            'use strict';
            y.d(z, { eX: () => Jt, sQ: () => Z, GW: () => Ue, l4: () => ar });
            var d = y(2323),
                P = y(6451),
                H = y(8306),
                w = y(7579),
                $ = y(4482),
                ae = y(5403),
                re = y(5032),
                Y = y(515),
                j = y(9646),
                U = y(576);
            class be {
                constructor(je, $e, nt) {
                    (this.kind = je),
                        (this.value = $e),
                        (this.error = nt),
                        (this.hasValue = 'N' === je);
                }
                observe(je) {
                    return xe(this, je);
                }
                do(je, $e, nt) {
                    const { kind: Ct, value: dt, error: Xt } = this;
                    return 'N' === Ct
                        ? null == je
                            ? void 0
                            : je(dt)
                        : 'E' === Ct
                        ? null == $e
                            ? void 0
                            : $e(Xt)
                        : null == nt
                        ? void 0
                        : nt();
                }
                accept(je, $e, nt) {
                    var Ct;
                    return (0, U.m)(
                        null === (Ct = je) || void 0 === Ct ? void 0 : Ct.next
                    )
                        ? this.observe(je)
                        : this.do(je, $e, nt);
                }
                toObservable() {
                    const { kind: je, value: $e, error: nt } = this,
                        Ct =
                            'N' === je
                                ? (0, j.of)($e)
                                : 'E' === je
                                ? (function ie(ve, je) {
                                      const $e = (0, U.m)(ve) ? ve : () => ve,
                                          nt = (Ct) => Ct.error($e());
                                      return new H.y(
                                          je
                                              ? (Ct) => je.schedule(nt, 0, Ct)
                                              : nt
                                      );
                                  })(() => nt)
                                : 'C' === je
                                ? Y.E
                                : 0;
                    if (!Ct)
                        throw new TypeError(
                            `Unexpected notification kind ${je}`
                        );
                    return Ct;
                }
                static createNext(je) {
                    return new be('N', je);
                }
                static createError(je) {
                    return new be('E', void 0, je);
                }
                static createComplete() {
                    return be.completeNotification;
                }
            }
            function xe(ve, je) {
                var $e, nt, Ct;
                const { kind: dt, value: Xt, error: en } = ve;
                if ('string' != typeof dt)
                    throw new TypeError('Invalid notification, missing "kind"');
                'N' === dt
                    ? null === ($e = je.next) ||
                      void 0 === $e ||
                      $e.call(je, Xt)
                    : 'E' === dt
                    ? null === (nt = je.error) ||
                      void 0 === nt ||
                      nt.call(je, en)
                    : null === (Ct = je.complete) ||
                      void 0 === Ct ||
                      Ct.call(je);
            }
            be.completeNotification = new be('C');
            var de = y(8421);
            function Q(ve, je, $e, nt) {
                return (0, $.e)((Ct, dt) => {
                    let Xt;
                    je && 'function' != typeof je
                        ? ({ duration: $e, element: Xt, connector: nt } = je)
                        : (Xt = je);
                    const en = new Map(),
                        Un = (Yt) => {
                            en.forEach(Yt), Yt(dt);
                        },
                        bt = (Yt) => Un((ln) => ln.error(Yt)),
                        Xn = new ye(
                            dt,
                            (Yt) => {
                                try {
                                    const ln = ve(Yt);
                                    let Tn = en.get(ln);
                                    if (!Tn) {
                                        en.set(
                                            ln,
                                            (Tn = nt ? nt() : new w.x())
                                        );
                                        const xn = (function yr(Yt, ln) {
                                            const Tn = new H.y((xn) => {
                                                Xn.activeGroups++;
                                                const lr = ln.subscribe(xn);
                                                return () => {
                                                    lr.unsubscribe(),
                                                        0 ==
                                                            --Xn.activeGroups &&
                                                            Xn.teardownAttempted &&
                                                            Xn.unsubscribe();
                                                };
                                            });
                                            return (Tn.key = Yt), Tn;
                                        })(ln, Tn);
                                        if ((dt.next(xn), $e)) {
                                            const lr = new ae.Q(
                                                Tn,
                                                () => {
                                                    Tn.complete(),
                                                        null == lr ||
                                                            lr.unsubscribe();
                                                },
                                                void 0,
                                                void 0,
                                                () => en.delete(ln)
                                            );
                                            Xn.add(
                                                (0, de.Xf)($e(xn)).subscribe(lr)
                                            );
                                        }
                                    }
                                    Tn.next(Xt ? Xt(Yt) : Yt);
                                } catch (ln) {
                                    bt(ln);
                                }
                            },
                            () => Un((Yt) => Yt.complete()),
                            bt,
                            () => en.clear()
                        );
                    Ct.subscribe(Xn);
                });
            }
            class ye extends ae.Q {
                constructor() {
                    super(...arguments),
                        (this.activeGroups = 0),
                        (this.teardownAttempted = !1);
                }
                unsubscribe() {
                    (this.teardownAttempted = !0),
                        0 === this.activeGroups && super.unsubscribe();
                }
            }
            var M = y(4004);
            function R(ve, je) {
                return je
                    ? ($e) =>
                          $e.pipe(
                              R((nt, Ct) =>
                                  (0, de.Xf)(ve(nt, Ct)).pipe(
                                      (0, M.U)((dt, Xt) => je(nt, dt, Ct, Xt))
                                  )
                              )
                          )
                    : (0, $.e)(($e, nt) => {
                          let Ct = 0,
                              dt = null,
                              Xt = !1;
                          $e.subscribe(
                              new ae.Q(
                                  nt,
                                  (en) => {
                                      dt ||
                                          ((dt = new ae.Q(nt, void 0, () => {
                                              (dt = null), Xt && nt.complete();
                                          })),
                                          (0, de.Xf)(ve(en, Ct++)).subscribe(
                                              dt
                                          ));
                                  },
                                  () => {
                                      (Xt = !0), !dt && nt.complete();
                                  }
                              )
                          );
                      });
            }
            var J = y(262),
                Ve = y(9300),
                He = y(5577),
                Je = y(5698),
                te = y(5e3);
            const Re = { dispatch: !0, useEffectsErrorHandler: !0 },
                Oe = '__@ngrx/effects_create__';
            function Ue(ve, je) {
                const $e = ve(),
                    nt = Object.assign(Object.assign({}, Re), je);
                return Object.defineProperty($e, Oe, { value: nt }), $e;
            }
            function Xe(ve) {
                return Object.getOwnPropertyNames(ve)
                    .filter(
                        (nt) =>
                            !(!ve[nt] || !ve[nt].hasOwnProperty(Oe)) &&
                            ve[nt][Oe].hasOwnProperty('dispatch')
                    )
                    .map((nt) =>
                        Object.assign({ propertyName: nt }, ve[nt][Oe])
                    );
            }
            function Ae(ve) {
                return Object.getPrototypeOf(ve);
            }
            const wt = '__@ngrx/effects__';
            function Bn(ve) {
                return (0, d.qC)(Vn, Ae)(ve);
            }
            function Vn(ve) {
                return (function Et(ve) {
                    return ve.constructor.hasOwnProperty(wt);
                })(ve)
                    ? ve.constructor[wt]
                    : [];
            }
            function Ft(ve, je, $e) {
                const nt = Ae(ve).constructor.name,
                    Ct = (function sn(ve) {
                        return [Bn, Xe].reduce(
                            ($e, nt) => $e.concat(nt(ve)),
                            []
                        );
                    })(ve).map(
                        ({
                            propertyName: dt,
                            dispatch: Xt,
                            useEffectsErrorHandler: en,
                        }) => {
                            const Un =
                                    'function' == typeof ve[dt]
                                        ? ve[dt]()
                                        : ve[dt],
                                bt = en ? $e(Un, je) : Un;
                            return !1 === Xt
                                ? bt.pipe(
                                      (function se() {
                                          return (0, $.e)((ve, je) => {
                                              ve.subscribe(new ae.Q(je, re.Z));
                                          });
                                      })()
                                  )
                                : bt
                                      .pipe(
                                          (function We() {
                                              return (0, $.e)((ve, je) => {
                                                  ve.subscribe(
                                                      new ae.Q(
                                                          je,
                                                          ($e) => {
                                                              je.next(
                                                                  be.createNext(
                                                                      $e
                                                                  )
                                                              );
                                                          },
                                                          () => {
                                                              je.next(
                                                                  be.createComplete()
                                                              ),
                                                                  je.complete();
                                                          },
                                                          ($e) => {
                                                              je.next(
                                                                  be.createError(
                                                                      $e
                                                                  )
                                                              ),
                                                                  je.complete();
                                                          }
                                                      )
                                                  );
                                              });
                                          })()
                                      )
                                      .pipe(
                                          (0, M.U)((yr) => ({
                                              effect: ve[dt],
                                              notification: yr,
                                              propertyName: dt,
                                              sourceName: nt,
                                              sourceInstance: ve,
                                          }))
                                      );
                        }
                    );
                return (0, P.T)(...Ct);
            }
            function An(ve, je, $e = 10) {
                return ve.pipe(
                    (0, J.K)(
                        (nt) => (
                            je && je.handleError(nt),
                            $e <= 1 ? ve : An(ve, je, $e - 1)
                        )
                    )
                );
            }
            let Jt = (() => {
                class ve extends H.y {
                    constructor($e) {
                        super(), $e && (this.source = $e);
                    }
                    lift($e) {
                        const nt = new ve();
                        return (nt.source = this), (nt.operator = $e), nt;
                    }
                }
                return (
                    (ve.ɵfac = function ($e) {
                        return new ($e || ve)(te.LFG(d.Y$));
                    }),
                    (ve.ɵprov = te.Yz7({ token: ve, factory: ve.ɵfac })),
                    ve
                );
            })();
            function ar(...ve) {
                return (0, Ve.h)((je) =>
                    ve.some(($e) =>
                        'string' == typeof $e
                            ? $e === je.type
                            : $e.type === je.type
                    )
                );
            }
            function Fn(ve) {
                return gn(ve, 'ngrxOnInitEffects');
            }
            function gn(ve, je) {
                return ve && je in ve && 'function' == typeof ve[je];
            }
            const Ir = new te.OlP('@ngrx/effects Internal Root Guard'),
                Ie = new te.OlP('@ngrx/effects User Provided Effects'),
                W = new te.OlP('@ngrx/effects Internal Root Effects'),
                ne = new te.OlP('@ngrx/effects Root Effects'),
                De = new te.OlP('@ngrx/effects Internal Feature Effects'),
                Ke = new te.OlP('@ngrx/effects Feature Effects'),
                at = new te.OlP('@ngrx/effects Effects Error Handler');
            let st = (() => {
                class ve extends w.x {
                    constructor($e, nt) {
                        super(),
                            (this.errorHandler = $e),
                            (this.effectsErrorHandler = nt);
                    }
                    addEffects($e) {
                        this.next($e);
                    }
                    toActions() {
                        return this.pipe(
                            Q(Ae),
                            (0, He.z)(($e) => $e.pipe(Q(ut))),
                            (0, He.z)(($e) => {
                                const nt = $e.pipe(
                                        R((dt) =>
                                            (function Ut(ve, je) {
                                                return ($e) => {
                                                    const nt = Ft($e, ve, je);
                                                    return (function St(ve) {
                                                        return gn(
                                                            ve,
                                                            'ngrxOnRunEffects'
                                                        );
                                                    })($e)
                                                        ? $e.ngrxOnRunEffects(
                                                              nt
                                                          )
                                                        : nt;
                                                };
                                            })(
                                                this.errorHandler,
                                                this.effectsErrorHandler
                                            )(dt)
                                        ),
                                        (0, M.U)(
                                            (dt) => (
                                                (function Dn(ve, je) {
                                                    if (
                                                        'N' ===
                                                        ve.notification.kind
                                                    ) {
                                                        const $e =
                                                            ve.notification
                                                                .value;
                                                        !(function cn(ve) {
                                                            return (
                                                                'function' !=
                                                                    typeof ve &&
                                                                ve &&
                                                                ve.type &&
                                                                'string' ==
                                                                    typeof ve.type
                                                            );
                                                        })($e) &&
                                                            je.handleError(
                                                                new Error(
                                                                    `Effect ${(function Rn({
                                                                        propertyName:
                                                                            ve,
                                                                        sourceInstance:
                                                                            je,
                                                                        sourceName:
                                                                            $e,
                                                                    }) {
                                                                        const nt =
                                                                            'function' ==
                                                                            typeof je[
                                                                                ve
                                                                            ];
                                                                        return `"${$e}.${String(
                                                                            ve
                                                                        )}${
                                                                            nt
                                                                                ? '()'
                                                                                : ''
                                                                        }"`;
                                                                    })(
                                                                        ve
                                                                    )} dispatched an invalid action: ${(function tr(
                                                                        ve
                                                                    ) {
                                                                        try {
                                                                            return JSON.stringify(
                                                                                ve
                                                                            );
                                                                        } catch (je) {
                                                                            return ve;
                                                                        }
                                                                    })($e)}`
                                                                )
                                                            );
                                                    }
                                                })(dt, this.errorHandler),
                                                dt.notification
                                            )
                                        ),
                                        (0, Ve.h)(
                                            (dt) =>
                                                'N' === dt.kind &&
                                                null != dt.value
                                        ),
                                        (function oe() {
                                            return (0, $.e)((ve, je) => {
                                                ve.subscribe(
                                                    new ae.Q(je, ($e) =>
                                                        xe($e, je)
                                                    )
                                                );
                                            });
                                        })()
                                    ),
                                    Ct = $e.pipe(
                                        (0, Je.q)(1),
                                        (0, Ve.h)(Fn),
                                        (0, M.U)((dt) => dt.ngrxOnInitEffects())
                                    );
                                return (0, P.T)(nt, Ct);
                            })
                        );
                    }
                }
                return (
                    (ve.ɵfac = function ($e) {
                        return new ($e || ve)(te.LFG(te.qLn), te.LFG(at));
                    }),
                    (ve.ɵprov = te.Yz7({ token: ve, factory: ve.ɵfac })),
                    ve
                );
            })();
            function ut(ve) {
                return (function Hn(ve) {
                    return gn(ve, 'ngrxOnIdentifyEffects');
                })(ve)
                    ? ve.ngrxOnIdentifyEffects()
                    : '';
            }
            let mn = (() => {
                class ve {
                    constructor($e, nt) {
                        (this.effectSources = $e),
                            (this.store = nt),
                            (this.effectsSubscription = null);
                    }
                    start() {
                        this.effectsSubscription ||
                            (this.effectsSubscription = this.effectSources
                                .toActions()
                                .subscribe(this.store));
                    }
                    ngOnDestroy() {
                        this.effectsSubscription &&
                            (this.effectsSubscription.unsubscribe(),
                            (this.effectsSubscription = null));
                    }
                }
                return (
                    (ve.ɵfac = function ($e) {
                        return new ($e || ve)(te.LFG(st), te.LFG(d.yh));
                    }),
                    (ve.ɵprov = te.Yz7({ token: ve, factory: ve.ɵfac })),
                    ve
                );
            })();
            const Lt = '@ngrx/effects/init';
            (0, d.PH)(Lt);
            let wn = (() => {
                    class ve {
                        constructor($e, nt, Ct, dt, Xt, en, Un) {
                            (this.sources = $e),
                                nt.start(),
                                dt.forEach((bt) => $e.addEffects(bt)),
                                Ct.dispatch({ type: Lt });
                        }
                        addEffects($e) {
                            this.sources.addEffects($e);
                        }
                    }
                    return (
                        (ve.ɵfac = function ($e) {
                            return new ($e || ve)(
                                te.LFG(st),
                                te.LFG(mn),
                                te.LFG(d.yh),
                                te.LFG(ne),
                                te.LFG(d.cr, 8),
                                te.LFG(d.CK, 8),
                                te.LFG(Ir, 8)
                            );
                        }),
                        (ve.ɵmod = te.oAB({ type: ve })),
                        (ve.ɵinj = te.cJS({})),
                        ve
                    );
                })(),
                $t = (() => {
                    class ve {
                        constructor($e, nt, Ct, dt) {
                            nt.forEach((Xt) =>
                                Xt.forEach((en) => $e.addEffects(en))
                            );
                        }
                    }
                    return (
                        (ve.ɵfac = function ($e) {
                            return new ($e || ve)(
                                te.LFG(wn),
                                te.LFG(Ke),
                                te.LFG(d.cr, 8),
                                te.LFG(d.CK, 8)
                            );
                        }),
                        (ve.ɵmod = te.oAB({ type: ve })),
                        (ve.ɵinj = te.cJS({})),
                        ve
                    );
                })(),
                Z = (() => {
                    class ve {
                        static forFeature($e = []) {
                            return {
                                ngModule: $t,
                                providers: [
                                    $e,
                                    { provide: De, multi: !0, useValue: $e },
                                    { provide: Ie, multi: !0, useValue: [] },
                                    {
                                        provide: Ke,
                                        multi: !0,
                                        useFactory: fe,
                                        deps: [te.zs3, De, Ie],
                                    },
                                ],
                            };
                        }
                        static forRoot($e = []) {
                            return {
                                ngModule: wn,
                                providers: [
                                    { provide: at, useValue: An },
                                    mn,
                                    st,
                                    Jt,
                                    $e,
                                    { provide: W, useValue: [$e] },
                                    {
                                        provide: Ir,
                                        useFactory: Le,
                                        deps: [
                                            [mn, new te.FiY(), new te.tp0()],
                                            [W, new te.PiD()],
                                        ],
                                    },
                                    { provide: Ie, multi: !0, useValue: [] },
                                    {
                                        provide: ne,
                                        useFactory: fe,
                                        deps: [te.zs3, W, Ie],
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (ve.ɵfac = function ($e) {
                            return new ($e || ve)();
                        }),
                        (ve.ɵmod = te.oAB({ type: ve })),
                        (ve.ɵinj = te.cJS({})),
                        ve
                    );
                })();
            function fe(ve, je, $e) {
                const nt = [];
                for (const Ct of je) nt.push(...Ct);
                for (const Ct of $e) nt.push(...Ct);
                return (function ue(ve, je) {
                    return je.map(($e) => ve.get($e));
                })(ve, nt);
            }
            function Le(ve, je) {
                if ((1 !== je.length || 0 !== je[0].length) && ve)
                    throw new TypeError(
                        'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        9565: (
            __unused_webpack___webpack_module__,
            __webpack_exports__,
            __webpack_require__
        ) => {
            'use strict';
            __webpack_require__.d(__webpack_exports__, {
                FT: () => StoreDevtoolsModule,
            });
            var _angular_core__WEBPACK_IMPORTED_MODULE_0__ =
                    __webpack_require__(5e3),
                _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ =
                    __webpack_require__(2323),
                rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(515),
                rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8306),
                rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9646),
                rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(6451),
                rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(233),
                rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(4707),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ =
                    __webpack_require__(3099),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ =
                    __webpack_require__(9300),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ =
                    __webpack_require__(4004),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ =
                    __webpack_require__(4351),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ =
                    __webpack_require__(1749),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ =
                    __webpack_require__(8372),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ =
                    __webpack_require__(262),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ =
                    __webpack_require__(5698),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ =
                    __webpack_require__(2722),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ =
                    __webpack_require__(3900),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ =
                    __webpack_require__(5684),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ =
                    __webpack_require__(5363),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ =
                    __webpack_require__(1365),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_21__ =
                    __webpack_require__(5026);
            class StoreDevtoolsConfig {
                constructor() {
                    this.maxAge = !1;
                }
            }
            const STORE_DEVTOOLS_CONFIG =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Options'
                    ),
                INITIAL_OPTIONS =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Initial Config'
                    );
            function noMonitor() {
                return null;
            }
            const DEFAULT_NAME = 'NgRx Store DevTools';
            function createConfig(_e) {
                const z = {
                        maxAge: !1,
                        monitor: noMonitor,
                        actionSanitizer: void 0,
                        stateSanitizer: void 0,
                        name: DEFAULT_NAME,
                        serialize: !1,
                        logOnly: !1,
                        autoPause: !1,
                        features: {
                            pause: !0,
                            lock: !0,
                            persist: !0,
                            export: !0,
                            import: 'custom',
                            jump: !0,
                            skip: !0,
                            reorder: !0,
                            dispatch: !0,
                            test: !0,
                        },
                    },
                    y = 'function' == typeof _e ? _e() : _e,
                    H = Object.assign(
                        {},
                        z,
                        {
                            features:
                                y.features ||
                                (!!y.logOnly && {
                                    pause: !0,
                                    export: !0,
                                    test: !0,
                                }) ||
                                z.features,
                        },
                        y
                    );
                if (H.maxAge && H.maxAge < 2)
                    throw new Error(
                        `Devtools 'maxAge' cannot be less than 2, got ${H.maxAge}`
                    );
                return H;
            }
            const PERFORM_ACTION = 'PERFORM_ACTION',
                REFRESH = 'REFRESH',
                RESET = 'RESET',
                ROLLBACK = 'ROLLBACK',
                COMMIT = 'COMMIT',
                SWEEP = 'SWEEP',
                TOGGLE_ACTION = 'TOGGLE_ACTION',
                SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE',
                JUMP_TO_STATE = 'JUMP_TO_STATE',
                JUMP_TO_ACTION = 'JUMP_TO_ACTION',
                IMPORT_STATE = 'IMPORT_STATE',
                LOCK_CHANGES = 'LOCK_CHANGES',
                PAUSE_RECORDING = 'PAUSE_RECORDING';
            class PerformAction {
                constructor(z, y) {
                    if (
                        ((this.action = z),
                        (this.timestamp = y),
                        (this.type = PERFORM_ACTION),
                        void 0 === z.type)
                    )
                        throw new Error(
                            'Actions may not have an undefined "type" property. Have you misspelled a constant?'
                        );
                }
            }
            class Refresh {
                constructor() {
                    this.type = REFRESH;
                }
            }
            class Reset {
                constructor(z) {
                    (this.timestamp = z), (this.type = RESET);
                }
            }
            class Rollback {
                constructor(z) {
                    (this.timestamp = z), (this.type = ROLLBACK);
                }
            }
            class Commit {
                constructor(z) {
                    (this.timestamp = z), (this.type = COMMIT);
                }
            }
            class Sweep {
                constructor() {
                    this.type = SWEEP;
                }
            }
            class ToggleAction {
                constructor(z) {
                    (this.id = z), (this.type = TOGGLE_ACTION);
                }
            }
            class SetActionsActive {
                constructor(z, y, d = !0) {
                    (this.start = z),
                        (this.end = y),
                        (this.active = d),
                        (this.type = SET_ACTIONS_ACTIVE);
                }
            }
            class JumpToState {
                constructor(z) {
                    (this.index = z), (this.type = JUMP_TO_STATE);
                }
            }
            class JumpToAction {
                constructor(z) {
                    (this.actionId = z), (this.type = JUMP_TO_ACTION);
                }
            }
            class ImportState {
                constructor(z) {
                    (this.nextLiftedState = z), (this.type = IMPORT_STATE);
                }
            }
            class LockChanges {
                constructor(z) {
                    (this.status = z), (this.type = LOCK_CHANGES);
                }
            }
            class PauseRecording {
                constructor(z) {
                    (this.status = z), (this.type = PAUSE_RECORDING);
                }
            }
            function difference(_e, z) {
                return _e.filter((y) => z.indexOf(y) < 0);
            }
            function unliftState(_e) {
                const { computedStates: z, currentStateIndex: y } = _e;
                if (y >= z.length) {
                    const { state: P } = z[z.length - 1];
                    return P;
                }
                const { state: d } = z[y];
                return d;
            }
            function unliftAction(_e) {
                return _e.actionsById[_e.nextActionId - 1];
            }
            function liftAction(_e) {
                return new PerformAction(_e, +Date.now());
            }
            function sanitizeActions(_e, z) {
                return Object.keys(z).reduce((y, d) => {
                    const P = Number(d);
                    return (y[P] = sanitizeAction(_e, z[P], P)), y;
                }, {});
            }
            function sanitizeAction(_e, z, y) {
                return Object.assign(Object.assign({}, z), {
                    action: _e(z.action, y),
                });
            }
            function sanitizeStates(_e, z) {
                return z.map((y, d) => ({
                    state: sanitizeState(_e, y.state, d),
                    error: y.error,
                }));
            }
            function sanitizeState(_e, z, y) {
                return _e(z, y);
            }
            function shouldFilterActions(_e) {
                return (
                    _e.predicate || _e.actionsSafelist || _e.actionsBlocklist
                );
            }
            function filterLiftedState(_e, z, y, d) {
                const P = [],
                    H = {},
                    w = [];
                return (
                    _e.stagedActionIds.forEach(($, ae) => {
                        const re = _e.actionsById[$];
                        !re ||
                            (ae &&
                                isActionFiltered(
                                    _e.computedStates[ae],
                                    re,
                                    z,
                                    y,
                                    d
                                )) ||
                            ((H[$] = re),
                            P.push($),
                            w.push(_e.computedStates[ae]));
                    }),
                    Object.assign(Object.assign({}, _e), {
                        stagedActionIds: P,
                        actionsById: H,
                        computedStates: w,
                    })
                );
            }
            function isActionFiltered(_e, z, y, d, P) {
                const H = y && !y(_e, z.action),
                    w =
                        d &&
                        !z.action.type.match(
                            d.map((ae) => escapeRegExp(ae)).join('|')
                        ),
                    $ =
                        P &&
                        z.action.type.match(
                            P.map((ae) => escapeRegExp(ae)).join('|')
                        );
                return H || w || $;
            }
            function escapeRegExp(_e) {
                return _e.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
            }
            const INIT_ACTION = {
                    type: _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg,
                },
                RECOMPUTE = '@ngrx/store-devtools/recompute',
                RECOMPUTE_ACTION = { type: RECOMPUTE };
            function computeNextEntry(_e, z, y, d, P) {
                if (d)
                    return {
                        state: y,
                        error: 'Interrupted by an error up the chain',
                    };
                let w,
                    H = y;
                try {
                    H = _e(y, z);
                } catch ($) {
                    (w = $.toString()), P.handleError($);
                }
                return { state: H, error: w };
            }
            function recomputeStates(_e, z, y, d, P, H, w, $, ae) {
                if (z >= _e.length && _e.length === H.length) return _e;
                const re = _e.slice(0, z),
                    se = H.length - (ae ? 1 : 0);
                for (let Y = z; Y < se; Y++) {
                    const j = H[Y],
                        U = P[j].action,
                        ie = re[Y - 1],
                        Ce = ie ? ie.state : d,
                        be = ie ? ie.error : void 0,
                        We =
                            w.indexOf(j) > -1
                                ? ie
                                : computeNextEntry(y, U, Ce, be, $);
                    re.push(We);
                }
                return ae && re.push(_e[_e.length - 1]), re;
            }
            function liftInitialState(_e, z) {
                return {
                    monitorState: z(void 0, {}),
                    nextActionId: 1,
                    actionsById: { 0: liftAction(INIT_ACTION) },
                    stagedActionIds: [0],
                    skippedActionIds: [],
                    committedState: _e,
                    currentStateIndex: 0,
                    computedStates: [],
                    isLocked: !1,
                    isPaused: !1,
                };
            }
            function liftReducerWith(_e, z, y, d, P = {}) {
                return (H) => (w, $) => {
                    let {
                        monitorState: ae,
                        actionsById: re,
                        nextActionId: se,
                        stagedActionIds: Y,
                        skippedActionIds: j,
                        committedState: U,
                        currentStateIndex: ie,
                        computedStates: Ce,
                        isLocked: be,
                        isPaused: xe,
                    } = w || z;
                    function We(ye) {
                        let M = ye,
                            R = Y.slice(1, M + 1);
                        for (let oe = 0; oe < R.length; oe++) {
                            if (Ce[oe + 1].error) {
                                (M = oe), (R = Y.slice(1, M + 1));
                                break;
                            }
                            delete re[R[oe]];
                        }
                        (j = j.filter((oe) => -1 === R.indexOf(oe))),
                            (Y = [0, ...Y.slice(M + 1)]),
                            (U = Ce[M].state),
                            (Ce = Ce.slice(M)),
                            (ie = ie > M ? ie - M : 0);
                    }
                    function de() {
                        (re = { 0: liftAction(INIT_ACTION) }),
                            (se = 1),
                            (Y = [0]),
                            (j = []),
                            (U = Ce[ie].state),
                            (ie = 0),
                            (Ce = []);
                    }
                    w || (re = Object.create(re));
                    let Q = 0;
                    switch ($.type) {
                        case LOCK_CHANGES:
                            (be = $.status), (Q = 1 / 0);
                            break;
                        case PAUSE_RECORDING:
                            (xe = $.status),
                                xe
                                    ? ((Y = [...Y, se]),
                                      (re[se] = new PerformAction(
                                          { type: '@ngrx/devtools/pause' },
                                          +Date.now()
                                      )),
                                      se++,
                                      (Q = Y.length - 1),
                                      (Ce = Ce.concat(Ce[Ce.length - 1])),
                                      ie === Y.length - 2 && ie++,
                                      (Q = 1 / 0))
                                    : de();
                            break;
                        case RESET:
                            (re = { 0: liftAction(INIT_ACTION) }),
                                (se = 1),
                                (Y = [0]),
                                (j = []),
                                (U = _e),
                                (ie = 0),
                                (Ce = []);
                            break;
                        case COMMIT:
                            de();
                            break;
                        case ROLLBACK:
                            (re = { 0: liftAction(INIT_ACTION) }),
                                (se = 1),
                                (Y = [0]),
                                (j = []),
                                (ie = 0),
                                (Ce = []);
                            break;
                        case TOGGLE_ACTION: {
                            const { id: ye } = $;
                            (j =
                                -1 === j.indexOf(ye)
                                    ? [ye, ...j]
                                    : j.filter((R) => R !== ye)),
                                (Q = Y.indexOf(ye));
                            break;
                        }
                        case SET_ACTIONS_ACTIVE: {
                            const { start: ye, end: M, active: R } = $,
                                oe = [];
                            for (let J = ye; J < M; J++) oe.push(J);
                            (j = R ? difference(j, oe) : [...j, ...oe]),
                                (Q = Y.indexOf(ye));
                            break;
                        }
                        case JUMP_TO_STATE:
                            (ie = $.index), (Q = 1 / 0);
                            break;
                        case JUMP_TO_ACTION: {
                            const ye = Y.indexOf($.actionId);
                            -1 !== ye && (ie = ye), (Q = 1 / 0);
                            break;
                        }
                        case SWEEP:
                            (Y = difference(Y, j)),
                                (j = []),
                                (ie = Math.min(ie, Y.length - 1));
                            break;
                        case PERFORM_ACTION: {
                            if (be) return w || z;
                            if (
                                xe ||
                                (w &&
                                    isActionFiltered(
                                        w.computedStates[ie],
                                        $,
                                        P.predicate,
                                        P.actionsSafelist,
                                        P.actionsBlocklist
                                    ))
                            ) {
                                const M = Ce[Ce.length - 1];
                                (Ce = [
                                    ...Ce.slice(0, -1),
                                    computeNextEntry(
                                        H,
                                        $.action,
                                        M.state,
                                        M.error,
                                        y
                                    ),
                                ]),
                                    (Q = 1 / 0);
                                break;
                            }
                            P.maxAge && Y.length === P.maxAge && We(1),
                                ie === Y.length - 1 && ie++;
                            const ye = se++;
                            (re[ye] = $), (Y = [...Y, ye]), (Q = Y.length - 1);
                            break;
                        }
                        case IMPORT_STATE:
                            ({
                                monitorState: ae,
                                actionsById: re,
                                nextActionId: se,
                                stagedActionIds: Y,
                                skippedActionIds: j,
                                committedState: U,
                                currentStateIndex: ie,
                                computedStates: Ce,
                                isLocked: be,
                                isPaused: xe,
                            } = $.nextLiftedState);
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg:
                            (Q = 0),
                                P.maxAge &&
                                    Y.length > P.maxAge &&
                                    ((Ce = recomputeStates(
                                        Ce,
                                        Q,
                                        H,
                                        U,
                                        re,
                                        Y,
                                        j,
                                        y,
                                        xe
                                    )),
                                    We(Y.length - P.maxAge),
                                    (Q = 1 / 0));
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb:
                            if (Ce.filter((M) => M.error).length > 0)
                                (Q = 0),
                                    P.maxAge &&
                                        Y.length > P.maxAge &&
                                        ((Ce = recomputeStates(
                                            Ce,
                                            Q,
                                            H,
                                            U,
                                            re,
                                            Y,
                                            j,
                                            y,
                                            xe
                                        )),
                                        We(Y.length - P.maxAge),
                                        (Q = 1 / 0));
                            else {
                                if (!xe && !be) {
                                    ie === Y.length - 1 && ie++;
                                    const M = se++;
                                    (re[M] = new PerformAction($, +Date.now())),
                                        (Y = [...Y, M]),
                                        (Q = Y.length - 1),
                                        (Ce = recomputeStates(
                                            Ce,
                                            Q,
                                            H,
                                            U,
                                            re,
                                            Y,
                                            j,
                                            y,
                                            xe
                                        ));
                                }
                                (Ce = Ce.map((M) =>
                                    Object.assign(Object.assign({}, M), {
                                        state: H(M.state, RECOMPUTE_ACTION),
                                    })
                                )),
                                    (ie = Y.length - 1),
                                    P.maxAge &&
                                        Y.length > P.maxAge &&
                                        We(Y.length - P.maxAge),
                                    (Q = 1 / 0);
                            }
                            break;
                        default:
                            Q = 1 / 0;
                    }
                    return (
                        (Ce = recomputeStates(Ce, Q, H, U, re, Y, j, y, xe)),
                        (ae = d(ae, $)),
                        {
                            monitorState: ae,
                            actionsById: re,
                            nextActionId: se,
                            stagedActionIds: Y,
                            skippedActionIds: j,
                            committedState: U,
                            currentStateIndex: ie,
                            computedStates: Ce,
                            isLocked: be,
                            isPaused: xe,
                        }
                    );
                };
            }
            let DevtoolsDispatcher = (() => {
                class _e extends _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO {}
                return (
                    (_e.ɵfac = (function () {
                        let z;
                        return function (d) {
                            return (
                                z ||
                                (z =
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.n5z(
                                        _e
                                    ))
                            )(d || _e);
                        };
                    })()),
                    (_e.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                        token: _e,
                        factory: _e.ɵfac,
                    })),
                    _e
                );
            })();
            const ExtensionActionTypes = {
                    START: 'START',
                    DISPATCH: 'DISPATCH',
                    STOP: 'STOP',
                    ACTION: 'ACTION',
                },
                REDUX_DEVTOOLS_EXTENSION =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Redux Devtools Extension'
                    );
            let DevtoolsExtension = (() => {
                    class DevtoolsExtension {
                        constructor(_e, z, y) {
                            (this.config = z),
                                (this.dispatcher = y),
                                (this.devtoolsExtension = _e),
                                this.createActionStreams();
                        }
                        notify(_e, z) {
                            if (this.devtoolsExtension)
                                if (_e.type === PERFORM_ACTION) {
                                    if (z.isLocked || z.isPaused) return;
                                    const y = unliftState(z);
                                    if (
                                        shouldFilterActions(this.config) &&
                                        isActionFiltered(
                                            y,
                                            _e,
                                            this.config.predicate,
                                            this.config.actionsSafelist,
                                            this.config.actionsBlocklist
                                        )
                                    )
                                        return;
                                    const d = this.config.stateSanitizer
                                            ? sanitizeState(
                                                  this.config.stateSanitizer,
                                                  y,
                                                  z.currentStateIndex
                                              )
                                            : y,
                                        P = this.config.actionSanitizer
                                            ? sanitizeAction(
                                                  this.config.actionSanitizer,
                                                  _e,
                                                  z.nextActionId
                                              )
                                            : _e;
                                    this.sendToReduxDevtools(() =>
                                        this.extensionConnection.send(P, d)
                                    );
                                } else {
                                    const y = Object.assign(
                                        Object.assign({}, z),
                                        {
                                            stagedActionIds: z.stagedActionIds,
                                            actionsById: this.config
                                                .actionSanitizer
                                                ? sanitizeActions(
                                                      this.config
                                                          .actionSanitizer,
                                                      z.actionsById
                                                  )
                                                : z.actionsById,
                                            computedStates: this.config
                                                .stateSanitizer
                                                ? sanitizeStates(
                                                      this.config
                                                          .stateSanitizer,
                                                      z.computedStates
                                                  )
                                                : z.computedStates,
                                        }
                                    );
                                    this.sendToReduxDevtools(() =>
                                        this.devtoolsExtension.send(
                                            null,
                                            y,
                                            this.getExtensionConfig(this.config)
                                        )
                                    );
                                }
                        }
                        createChangesObservable() {
                            return this.devtoolsExtension
                                ? new rxjs__WEBPACK_IMPORTED_MODULE_3__.y(
                                      (_e) => {
                                          const z =
                                              this.devtoolsExtension.connect(
                                                  this.getExtensionConfig(
                                                      this.config
                                                  )
                                              );
                                          return (
                                              (this.extensionConnection = z),
                                              z.init(),
                                              z.subscribe((y) => _e.next(y)),
                                              z.unsubscribe
                                          );
                                      }
                                  )
                                : rxjs__WEBPACK_IMPORTED_MODULE_2__.E;
                        }
                        createActionStreams() {
                            const _e = this.createChangesObservable().pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.B)()
                                ),
                                z = _e.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        ($) =>
                                            $.type ===
                                            ExtensionActionTypes.START
                                    )
                                ),
                                y = _e.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        ($) =>
                                            $.type === ExtensionActionTypes.STOP
                                    )
                                ),
                                d = _e.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        ($) =>
                                            $.type ===
                                            ExtensionActionTypes.DISPATCH
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        ($) => this.unwrapAction($.payload)
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.b)(
                                        ($) =>
                                            $.type === IMPORT_STATE
                                                ? this.dispatcher.pipe(
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                                          (ae) =>
                                                              ae.type ===
                                                              _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.V)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.b)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                                          () => $
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.K)(
                                                          () =>
                                                              (0,
                                                              rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                                  $
                                                              )
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.q)(
                                                          1
                                                      )
                                                  )
                                                : (0,
                                                  rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                      $
                                                  )
                                    )
                                ),
                                H = _e
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                            ($) =>
                                                $.type ===
                                                ExtensionActionTypes.ACTION
                                        ),
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            ($) => this.unwrapAction($.payload)
                                        )
                                    )
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                            y
                                        )
                                    ),
                                w = d.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                        y
                                    )
                                );
                            (this.start$ = z.pipe(
                                (0,
                                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                    y
                                )
                            )),
                                (this.actions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => H
                                    )
                                )),
                                (this.liftedActions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => w
                                    )
                                ));
                        }
                        unwrapAction(action) {
                            return 'string' == typeof action
                                ? eval(`(${action})`)
                                : action;
                        }
                        getExtensionConfig(_e) {
                            var z;
                            const y = {
                                name: _e.name,
                                features: _e.features,
                                serialize: _e.serialize,
                                autoPause:
                                    null !== (z = _e.autoPause) &&
                                    void 0 !== z &&
                                    z,
                            };
                            return (
                                !1 !== _e.maxAge && (y.maxAge = _e.maxAge), y
                            );
                        }
                        sendToReduxDevtools(_e) {
                            try {
                                _e();
                            } catch (z) {
                                console.warn(
                                    '@ngrx/store-devtools: something went wrong inside the redux devtools',
                                    z
                                );
                            }
                        }
                    }
                    return (
                        (DevtoolsExtension.ɵfac = function _e(z) {
                            return new (z || DevtoolsExtension)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    REDUX_DEVTOOLS_EXTENSION
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                )
                            );
                        }),
                        (DevtoolsExtension.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: DevtoolsExtension,
                                factory: DevtoolsExtension.ɵfac,
                            })),
                        DevtoolsExtension
                    );
                })(),
                StoreDevtools = (() => {
                    class _e {
                        constructor(y, d, P, H, w, $, ae, re) {
                            const se = liftInitialState(ae, re.monitor),
                                Y = liftReducerWith(ae, se, $, re.monitor, re),
                                j = (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                    (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                        d
                                            .asObservable()
                                            .pipe(
                                                (0,
                                                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.T)(
                                                    1
                                                )
                                            ),
                                        H.actions$
                                    ).pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            liftAction
                                        )
                                    ),
                                    y,
                                    H.liftedActions$
                                ).pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.Q)(
                                        rxjs__WEBPACK_IMPORTED_MODULE_18__.N
                                    )
                                ),
                                U = P.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        Y
                                    )
                                ),
                                ie = new rxjs__WEBPACK_IMPORTED_MODULE_19__.t(
                                    1
                                ),
                                Ce = j
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.M)(
                                            U
                                        ),
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_21__.R)(
                                            ({ state: de }, [Q, ye]) => {
                                                let M = ye(de, Q);
                                                return (
                                                    Q.type !== PERFORM_ACTION &&
                                                        shouldFilterActions(
                                                            re
                                                        ) &&
                                                        (M = filterLiftedState(
                                                            M,
                                                            re.predicate,
                                                            re.actionsSafelist,
                                                            re.actionsBlocklist
                                                        )),
                                                    H.notify(Q, M),
                                                    { state: M, action: Q }
                                                );
                                            },
                                            { state: se, action: null }
                                        )
                                    )
                                    .subscribe(({ state: de, action: Q }) => {
                                        ie.next(de),
                                            Q.type === PERFORM_ACTION &&
                                                w.next(Q.action);
                                    }),
                                be = H.start$.subscribe(() => {
                                    this.refresh();
                                }),
                                xe = ie.asObservable(),
                                We = xe.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        unliftState
                                    )
                                );
                            (this.extensionStartSubscription = be),
                                (this.stateSubscription = Ce),
                                (this.dispatcher = y),
                                (this.liftedState = xe),
                                (this.state = We);
                        }
                        dispatch(y) {
                            this.dispatcher.next(y);
                        }
                        next(y) {
                            this.dispatcher.next(y);
                        }
                        error(y) {}
                        complete() {}
                        performAction(y) {
                            this.dispatch(new PerformAction(y, +Date.now()));
                        }
                        refresh() {
                            this.dispatch(new Refresh());
                        }
                        reset() {
                            this.dispatch(new Reset(+Date.now()));
                        }
                        rollback() {
                            this.dispatch(new Rollback(+Date.now()));
                        }
                        commit() {
                            this.dispatch(new Commit(+Date.now()));
                        }
                        sweep() {
                            this.dispatch(new Sweep());
                        }
                        toggleAction(y) {
                            this.dispatch(new ToggleAction(y));
                        }
                        jumpToAction(y) {
                            this.dispatch(new JumpToAction(y));
                        }
                        jumpToState(y) {
                            this.dispatch(new JumpToState(y));
                        }
                        importState(y) {
                            this.dispatch(new ImportState(y));
                        }
                        lockChanges(y) {
                            this.dispatch(new LockChanges(y));
                        }
                        pauseRecording(y) {
                            this.dispatch(new PauseRecording(y));
                        }
                    }
                    return (
                        (_e.ɵfac = function (y) {
                            return new (y || _e)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.n$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsExtension
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.qLn
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y6
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                )
                            );
                        }),
                        (_e.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: _e,
                                factory: _e.ɵfac,
                            })),
                        _e
                    );
                })();
            const IS_EXTENSION_OR_MONITOR_PRESENT =
                new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                    '@ngrx/store-devtools Is Devtools Extension or Monitor Present'
                );
            function createIsExtensionOrMonitorPresent(_e, z) {
                return Boolean(_e) || z.monitor !== noMonitor;
            }
            function createReduxDevtoolsExtension() {
                const _e = '__REDUX_DEVTOOLS_EXTENSION__';
                return 'object' == typeof window && void 0 !== window[_e]
                    ? window[_e]
                    : null;
            }
            function createStateObservable(_e) {
                return _e.state;
            }
            let StoreDevtoolsModule = (() => {
                class _e {
                    static instrument(y = {}) {
                        return {
                            ngModule: _e,
                            providers: [
                                DevtoolsExtension,
                                DevtoolsDispatcher,
                                StoreDevtools,
                                { provide: INITIAL_OPTIONS, useValue: y },
                                {
                                    provide: IS_EXTENSION_OR_MONITOR_PRESENT,
                                    deps: [
                                        REDUX_DEVTOOLS_EXTENSION,
                                        STORE_DEVTOOLS_CONFIG,
                                    ],
                                    useFactory:
                                        createIsExtensionOrMonitorPresent,
                                },
                                {
                                    provide: REDUX_DEVTOOLS_EXTENSION,
                                    useFactory: createReduxDevtoolsExtension,
                                },
                                {
                                    provide: STORE_DEVTOOLS_CONFIG,
                                    deps: [INITIAL_OPTIONS],
                                    useFactory: createConfig,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.FR,
                                    deps: [StoreDevtools],
                                    useFactory: createStateObservable,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.mK,
                                    useExisting: DevtoolsDispatcher,
                                },
                            ],
                        };
                    }
                }
                return (
                    (_e.ɵfac = function (y) {
                        return new (y || _e)();
                    }),
                    (_e.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__.oAB({
                        type: _e,
                    })),
                    (_e.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__.cJS(
                        {}
                    )),
                    _e
                );
            })();
        },
        2323: (_e, z, y) => {
            'use strict';
            y.d(z, {
                UO: () => J,
                qg: () => oe,
                Y6: () => te,
                mK: () => Sr,
                n$: () => Hn,
                Y$: () => gn,
                FR: () => Ie,
                yh: () => Ke,
                CK: () => Sn,
                Aw: () => xr,
                cr: () => cr,
                wb: () => St,
                qC: () => Rn,
                PH: () => Q,
                Ky: () => ye,
            });
            var d = y(5e3),
                P = y(1135),
                H = y(8306),
                w = y(7579),
                $ = y(233),
                ae = y(4004),
                se = y(4671),
                Y = y(4482),
                j = y(5403);
            function ie(X, Be) {
                return X === Be;
            }
            var Ce = y(5363),
                be = y(1365),
                xe = y(5026);
            const We = {};
            function Q(X, Be) {
                if (((We[X] = (We[X] || 0) + 1), 'function' == typeof Be))
                    return R(X, (...Fe) =>
                        Object.assign(Object.assign({}, Be(...Fe)), { type: X })
                    );
                switch (Be ? Be._as : 'empty') {
                    case 'empty':
                        return R(X, () => ({ type: X }));
                    case 'props':
                        return R(X, (Fe) =>
                            Object.assign(Object.assign({}, Fe), { type: X })
                        );
                    default:
                        throw new Error('Unexpected config.');
                }
            }
            function ye() {
                return { _as: 'props', _p: void 0 };
            }
            function R(X, Be) {
                return Object.defineProperty(Be, 'type', {
                    value: X,
                    writable: !1,
                });
            }
            const oe = '@ngrx/store/init';
            let J = (() => {
                class X extends P.X {
                    constructor() {
                        super({ type: oe });
                    }
                    next(Ee) {
                        if ('function' == typeof Ee)
                            throw new TypeError(
                                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction()."
                            );
                        if (void 0 === Ee)
                            throw new TypeError('Actions must be objects');
                        if (void 0 === Ee.type)
                            throw new TypeError(
                                'Actions must have a type property'
                            );
                        super.next(Ee);
                    }
                    complete() {}
                    ngOnDestroy() {
                        super.complete();
                    }
                }
                return (
                    (X.ɵfac = function (Ee) {
                        return new (Ee || X)();
                    }),
                    (X.ɵprov = d.Yz7({ token: X, factory: X.ɵfac })),
                    X
                );
            })();
            const Ve = [J],
                He = new d.OlP('@ngrx/store Internal Root Guard'),
                Je = new d.OlP('@ngrx/store Internal Initial State'),
                te = new d.OlP('@ngrx/store Initial State'),
                Re = new d.OlP('@ngrx/store Reducer Factory'),
                Oe = new d.OlP('@ngrx/store Internal Reducer Factory Provider'),
                Ue = new d.OlP('@ngrx/store Initial Reducers'),
                Xe = new d.OlP('@ngrx/store Internal Initial Reducers'),
                Ae = new d.OlP('@ngrx/store Store Features'),
                wt = new d.OlP('@ngrx/store Internal Store Reducers'),
                rn = new d.OlP('@ngrx/store Internal Feature Reducers'),
                Bn = new d.OlP('@ngrx/store Internal Feature Configs'),
                Et = new d.OlP('@ngrx/store Internal Store Features'),
                _t = new d.OlP('@ngrx/store Internal Feature Reducers Token'),
                Vn = new d.OlP('@ngrx/store Feature Reducers'),
                Zt = new d.OlP('@ngrx/store User Provided Meta Reducers'),
                sn = new d.OlP('@ngrx/store Meta Reducers'),
                Ft = new d.OlP('@ngrx/store Internal Resolved Meta Reducers'),
                $n = new d.OlP('@ngrx/store User Runtime Checks Config'),
                An = new d.OlP(
                    '@ngrx/store Internal User Runtime Checks Config'
                ),
                Jt = new d.OlP('@ngrx/store Internal Runtime Checks'),
                ar = new d.OlP('@ngrx/store Check if Action types are unique');
            function Dn(X, Be = {}) {
                const Ee = Object.keys(X),
                    Fe = {};
                for (let rt = 0; rt < Ee.length; rt++) {
                    const Bt = Ee[rt];
                    'function' == typeof X[Bt] && (Fe[Bt] = X[Bt]);
                }
                const ot = Object.keys(Fe);
                return function (Bt, yn) {
                    Bt = void 0 === Bt ? Be : Bt;
                    let On = !1;
                    const Wn = {};
                    for (let on = 0; on < ot.length; on++) {
                        const Mr = ot[on],
                            zi = Bt[Mr],
                            Or = (0, Fe[Mr])(zi, yn);
                        (Wn[Mr] = Or), (On = On || Or !== zi);
                    }
                    return On ? Wn : Bt;
                };
            }
            function Rn(...X) {
                return function (Be) {
                    if (0 === X.length) return Be;
                    const Ee = X[X.length - 1];
                    return X.slice(0, -1).reduceRight(
                        (ot, rt) => rt(ot),
                        Ee(Be)
                    );
                };
            }
            function tr(X, Be) {
                return (
                    Array.isArray(Be) &&
                        Be.length > 0 &&
                        (X = Rn.apply(null, [...Be, X])),
                    (Ee, Fe) => {
                        const ot = X(Ee);
                        return (rt, Bt) =>
                            ot((rt = void 0 === rt ? Fe : rt), Bt);
                    }
                );
            }
            class Hn extends H.y {}
            class Sr extends J {}
            const St = '@ngrx/store/update-reducers';
            let Qn = (() => {
                class X extends P.X {
                    constructor(Ee, Fe, ot, rt) {
                        super(rt(ot, Fe)),
                            (this.dispatcher = Ee),
                            (this.initialState = Fe),
                            (this.reducers = ot),
                            (this.reducerFactory = rt);
                    }
                    get currentReducers() {
                        return this.reducers;
                    }
                    addFeature(Ee) {
                        this.addFeatures([Ee]);
                    }
                    addFeatures(Ee) {
                        const Fe = Ee.reduce(
                            (
                                ot,
                                {
                                    reducers: rt,
                                    reducerFactory: Bt,
                                    metaReducers: yn,
                                    initialState: On,
                                    key: Wn,
                                }
                            ) => {
                                const on =
                                    'function' == typeof rt
                                        ? (function fr(X) {
                                              const Be =
                                                  Array.isArray(X) &&
                                                  X.length > 0
                                                      ? Rn(...X)
                                                      : (Ee) => Ee;
                                              return (Ee, Fe) => (
                                                  (Ee = Be(Ee)),
                                                  (ot, rt) =>
                                                      Ee(
                                                          (ot =
                                                              void 0 === ot
                                                                  ? Fe
                                                                  : ot),
                                                          rt
                                                      )
                                              );
                                          })(yn)(rt, On)
                                        : tr(Bt, yn)(rt, On);
                                return (ot[Wn] = on), ot;
                            },
                            {}
                        );
                        this.addReducers(Fe);
                    }
                    removeFeature(Ee) {
                        this.removeFeatures([Ee]);
                    }
                    removeFeatures(Ee) {
                        this.removeReducers(Ee.map((Fe) => Fe.key));
                    }
                    addReducer(Ee, Fe) {
                        this.addReducers({ [Ee]: Fe });
                    }
                    addReducers(Ee) {
                        (this.reducers = Object.assign(
                            Object.assign({}, this.reducers),
                            Ee
                        )),
                            this.updateReducers(Object.keys(Ee));
                    }
                    removeReducer(Ee) {
                        this.removeReducers([Ee]);
                    }
                    removeReducers(Ee) {
                        Ee.forEach((Fe) => {
                            this.reducers = (function cn(X, Be) {
                                return Object.keys(X)
                                    .filter((Ee) => Ee !== Be)
                                    .reduce(
                                        (Ee, Fe) =>
                                            Object.assign(Ee, { [Fe]: X[Fe] }),
                                        {}
                                    );
                            })(this.reducers, Fe);
                        }),
                            this.updateReducers(Ee);
                    }
                    updateReducers(Ee) {
                        this.next(
                            this.reducerFactory(
                                this.reducers,
                                this.initialState
                            )
                        ),
                            this.dispatcher.next({ type: St, features: Ee });
                    }
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (X.ɵfac = function (Ee) {
                        return new (Ee || X)(
                            d.LFG(Sr),
                            d.LFG(te),
                            d.LFG(Ue),
                            d.LFG(Re)
                        );
                    }),
                    (X.ɵprov = d.Yz7({ token: X, factory: X.ɵfac })),
                    X
                );
            })();
            const Fn = [
                Qn,
                { provide: Hn, useExisting: Qn },
                { provide: Sr, useExisting: J },
            ];
            let gn = (() => {
                class X extends w.x {
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (X.ɵfac = (function () {
                        let Be;
                        return function (Fe) {
                            return (Be || (Be = d.n5z(X)))(Fe || X);
                        };
                    })()),
                    (X.ɵprov = d.Yz7({ token: X, factory: X.ɵfac })),
                    X
                );
            })();
            const Ir = [gn];
            class Ie extends H.y {}
            let W = (() => {
                class X extends P.X {
                    constructor(Ee, Fe, ot, rt) {
                        super(rt);
                        const Wn = Ee.pipe((0, Ce.Q)($.N))
                            .pipe((0, be.M)(Fe))
                            .pipe((0, xe.R)(ne, { state: rt }));
                        this.stateSubscription = Wn.subscribe(
                            ({ state: on, action: Mr }) => {
                                this.next(on), ot.next(Mr);
                            }
                        );
                    }
                    ngOnDestroy() {
                        this.stateSubscription.unsubscribe(), this.complete();
                    }
                }
                return (
                    (X.INIT = oe),
                    (X.ɵfac = function (Ee) {
                        return new (Ee || X)(
                            d.LFG(J),
                            d.LFG(Hn),
                            d.LFG(gn),
                            d.LFG(te)
                        );
                    }),
                    (X.ɵprov = d.Yz7({ token: X, factory: X.ɵfac })),
                    X
                );
            })();
            function ne(X = { state: void 0 }, [Be, Ee]) {
                const { state: Fe } = X;
                return { state: Ee(Fe, Be), action: Be };
            }
            const De = [W, { provide: Ie, useExisting: W }];
            let Ke = (() => {
                class X extends H.y {
                    constructor(Ee, Fe, ot) {
                        super(),
                            (this.actionsObserver = Fe),
                            (this.reducerManager = ot),
                            (this.source = Ee);
                    }
                    select(Ee, ...Fe) {
                        return st.call(null, Ee, ...Fe)(this);
                    }
                    lift(Ee) {
                        const Fe = new X(
                            this,
                            this.actionsObserver,
                            this.reducerManager
                        );
                        return (Fe.operator = Ee), Fe;
                    }
                    dispatch(Ee) {
                        this.actionsObserver.next(Ee);
                    }
                    next(Ee) {
                        this.actionsObserver.next(Ee);
                    }
                    error(Ee) {
                        this.actionsObserver.error(Ee);
                    }
                    complete() {
                        this.actionsObserver.complete();
                    }
                    addReducer(Ee, Fe) {
                        this.reducerManager.addReducer(Ee, Fe);
                    }
                    removeReducer(Ee) {
                        this.reducerManager.removeReducer(Ee);
                    }
                }
                return (
                    (X.ɵfac = function (Ee) {
                        return new (Ee || X)(d.LFG(Ie), d.LFG(J), d.LFG(Qn));
                    }),
                    (X.ɵprov = d.Yz7({ token: X, factory: X.ɵfac })),
                    X
                );
            })();
            const at = [Ke];
            function st(X, Be, ...Ee) {
                return function (ot) {
                    let rt;
                    if ('string' == typeof X) {
                        const Bt = [Be, ...Ee].filter(Boolean);
                        rt = ot.pipe(
                            (function re(...X) {
                                const Be = X.length;
                                if (0 === Be)
                                    throw new Error(
                                        'list of properties cannot be empty.'
                                    );
                                return (0, ae.U)((Ee) => {
                                    let Fe = Ee;
                                    for (let ot = 0; ot < Be; ot++) {
                                        const rt =
                                            null == Fe ? void 0 : Fe[X[ot]];
                                        if (void 0 === rt) return;
                                        Fe = rt;
                                    }
                                    return Fe;
                                });
                            })(X, ...Bt)
                        );
                    } else {
                        if ('function' != typeof X)
                            throw new TypeError(
                                `Unexpected type '${typeof X}' in select operator, expected 'string' or 'function'`
                            );
                        rt = ot.pipe((0, ae.U)((Bt) => X(Bt, Be)));
                    }
                    return rt.pipe(
                        (function U(X, Be = se.y) {
                            return (
                                (X = null != X ? X : ie),
                                (0, Y.e)((Ee, Fe) => {
                                    let ot,
                                        rt = !0;
                                    Ee.subscribe(
                                        new j.Q(Fe, (Bt) => {
                                            const yn = Be(Bt);
                                            (rt || !X(ot, yn)) &&
                                                ((rt = !1),
                                                (ot = yn),
                                                Fe.next(Bt));
                                        })
                                    );
                                })
                            );
                        })()
                    );
                };
            }
            const Ut =
                'https://ngrx.io/guide/store/configuration/runtime-checks';
            function mn(X) {
                return void 0 === X;
            }
            function Lt(X) {
                return null === X;
            }
            function Gn(X) {
                return Array.isArray(X);
            }
            function fe(X) {
                return 'object' == typeof X && null !== X;
            }
            function Pe(X) {
                return 'function' == typeof X;
            }
            function lr(X) {
                Object.freeze(X);
                const Be = Pe(X);
                return (
                    Object.getOwnPropertyNames(X).forEach((Ee) => {
                        if (
                            !Ee.startsWith('\u0275') &&
                            (function ve(X, Be) {
                                return Object.prototype.hasOwnProperty.call(
                                    X,
                                    Be
                                );
                            })(X, Ee) &&
                            (!Be ||
                                ('caller' !== Ee &&
                                    'callee' !== Ee &&
                                    'arguments' !== Ee))
                        ) {
                            const Fe = X[Ee];
                            (fe(Fe) || Pe(Fe)) &&
                                !Object.isFrozen(Fe) &&
                                lr(Fe);
                        }
                    }),
                    X
                );
            }
            function br(X, Be = []) {
                return (mn(X) || Lt(X)) && 0 === Be.length
                    ? { path: ['root'], value: X }
                    : Object.keys(X).reduce((Fe, ot) => {
                          if (Fe) return Fe;
                          const rt = X[ot];
                          return (function pt(X) {
                              return Pe(X) && X.hasOwnProperty('\u0275cmp');
                          })(rt)
                              ? Fe
                              : !(
                                    mn(rt) ||
                                    Lt(rt) ||
                                    (function Z(X) {
                                        return 'number' == typeof X;
                                    })(rt) ||
                                    (function $t(X) {
                                        return 'boolean' == typeof X;
                                    })(rt) ||
                                    (function wn(X) {
                                        return 'string' == typeof X;
                                    })(rt) ||
                                    Gn(rt)
                                ) &&
                                    ((function Le(X) {
                                        if (
                                            !(function ue(X) {
                                                return fe(X) && !Gn(X);
                                            })(X)
                                        )
                                            return !1;
                                        const Be = Object.getPrototypeOf(X);
                                        return (
                                            Be === Object.prototype ||
                                            null === Be
                                        );
                                    })(rt)
                                        ? br(rt, [...Be, ot])
                                        : { path: [...Be, ot], value: rt });
                      }, !1);
            }
            function Br(X, Be) {
                if (!1 === X) return;
                const Ee = X.path.join('.'),
                    Fe = new Error(
                        `Detected unserializable ${Be} at "${Ee}". ${Ut}#strict${Be}serializability`
                    );
                throw ((Fe.value = X.value), (Fe.unserializablePath = Ee), Fe);
            }
            function ur(X) {
                return (0, d.X6Q)()
                    ? Object.assign(
                          {
                              strictStateSerializability: !1,
                              strictActionSerializability: !1,
                              strictStateImmutability: !0,
                              strictActionImmutability: !0,
                              strictActionWithinNgZone: !1,
                              strictActionTypeUniqueness: !1,
                          },
                          X
                      )
                    : {
                          strictStateSerializability: !1,
                          strictActionSerializability: !1,
                          strictStateImmutability: !1,
                          strictActionImmutability: !1,
                          strictActionWithinNgZone: !1,
                          strictActionTypeUniqueness: !1,
                      };
            }
            function Vr({
                strictActionSerializability: X,
                strictStateSerializability: Be,
            }) {
                return (Ee) =>
                    X || Be
                        ? (function ti(X, Be) {
                              return function (Ee, Fe) {
                                  Be.action(Fe) && Br(br(Fe), 'action');
                                  const ot = X(Ee, Fe);
                                  return Be.state() && Br(br(ot), 'state'), ot;
                              };
                          })(Ee, {
                              action: (Fe) => X && !ct(Fe),
                              state: () => Be,
                          })
                        : Ee;
            }
            function nr({
                strictActionImmutability: X,
                strictStateImmutability: Be,
            }) {
                return (Ee) =>
                    X || Be
                        ? (function xn(X, Be) {
                              return function (Ee, Fe) {
                                  const ot = Be.action(Fe) ? lr(Fe) : Fe,
                                      rt = X(Ee, ot);
                                  return Be.state() ? lr(rt) : rt;
                              };
                          })(Ee, {
                              action: (Fe) => X && !ct(Fe),
                              state: () => Be,
                          })
                        : Ee;
            }
            function ct(X) {
                return X.type.startsWith('@ngrx');
            }
            function tn({ strictActionWithinNgZone: X }) {
                return (Be) =>
                    X
                        ? (function Ar(X, Be) {
                              return function (Ee, Fe) {
                                  if (Be.action(Fe) && !d.R0b.isInAngularZone())
                                      throw new Error(
                                          `Action '${Fe.type}' running outside NgZone. ${Ut}#strictactionwithinngzone`
                                      );
                                  return X(Ee, Fe);
                              };
                          })(Be, { action: (Ee) => X && !ct(Ee) })
                        : Be;
            }
            function fn(X) {
                return [
                    { provide: An, useValue: X },
                    { provide: $n, useFactory: hr, deps: [An] },
                    { provide: Jt, deps: [$n], useFactory: ur },
                    { provide: sn, multi: !0, deps: [Jt], useFactory: nr },
                    { provide: sn, multi: !0, deps: [Jt], useFactory: Vr },
                    { provide: sn, multi: !0, deps: [Jt], useFactory: tn },
                ];
            }
            function er() {
                return [{ provide: ar, multi: !0, deps: [Jt], useFactory: En }];
            }
            function hr(X) {
                return X;
            }
            function En(X) {
                if (!X.strictActionTypeUniqueness) return;
                const Be = Object.entries(We)
                    .filter(([, Ee]) => Ee > 1)
                    .map(([Ee]) => Ee);
                if (Be.length)
                    throw new Error(
                        `Action types are registered more than once, ${Be.map(
                            (Ee) => `"${Ee}"`
                        ).join(', ')}. ${Ut}#strictactiontypeuniqueness`
                    );
            }
            let cr = (() => {
                    class X {
                        constructor(Ee, Fe, ot, rt, Bt, yn) {}
                    }
                    return (
                        (X.ɵfac = function (Ee) {
                            return new (Ee || X)(
                                d.LFG(J),
                                d.LFG(Hn),
                                d.LFG(gn),
                                d.LFG(Ke),
                                d.LFG(He, 8),
                                d.LFG(ar, 8)
                            );
                        }),
                        (X.ɵmod = d.oAB({ type: X })),
                        (X.ɵinj = d.cJS({})),
                        X
                    );
                })(),
                Sn = (() => {
                    class X {
                        constructor(Ee, Fe, ot, rt, Bt) {
                            (this.features = Ee),
                                (this.featureReducers = Fe),
                                (this.reducerManager = ot);
                            const yn = Ee.map((On, Wn) => {
                                const Mr = Fe.shift()[Wn];
                                return Object.assign(Object.assign({}, On), {
                                    reducers: Mr,
                                    initialState: _r(On.initialState),
                                });
                            });
                            ot.addFeatures(yn);
                        }
                        ngOnDestroy() {
                            this.reducerManager.removeFeatures(this.features);
                        }
                    }
                    return (
                        (X.ɵfac = function (Ee) {
                            return new (Ee || X)(
                                d.LFG(Et),
                                d.LFG(Vn),
                                d.LFG(Qn),
                                d.LFG(cr),
                                d.LFG(ar, 8)
                            );
                        }),
                        (X.ɵmod = d.oAB({ type: X })),
                        (X.ɵinj = d.cJS({})),
                        X
                    );
                })(),
                xr = (() => {
                    class X {
                        static forRoot(Ee, Fe = {}) {
                            return {
                                ngModule: cr,
                                providers: [
                                    {
                                        provide: He,
                                        useFactory: hn,
                                        deps: [[Ke, new d.FiY(), new d.tp0()]],
                                    },
                                    { provide: Je, useValue: Fe.initialState },
                                    { provide: te, useFactory: _r, deps: [Je] },
                                    { provide: Xe, useValue: Ee },
                                    {
                                        provide: wt,
                                        useExisting:
                                            Ee instanceof d.OlP ? Ee : Xe,
                                    },
                                    {
                                        provide: Ue,
                                        deps: [d.zs3, Xe, [new d.tBr(wt)]],
                                        useFactory: Cn,
                                    },
                                    {
                                        provide: Zt,
                                        useValue: Fe.metaReducers
                                            ? Fe.metaReducers
                                            : [],
                                    },
                                    {
                                        provide: Ft,
                                        deps: [sn, Zt],
                                        useFactory: wr,
                                    },
                                    {
                                        provide: Oe,
                                        useValue: Fe.reducerFactory
                                            ? Fe.reducerFactory
                                            : Dn,
                                    },
                                    {
                                        provide: Re,
                                        deps: [Oe, Ft],
                                        useFactory: tr,
                                    },
                                    Ve,
                                    Fn,
                                    Ir,
                                    De,
                                    at,
                                    fn(Fe.runtimeChecks),
                                    er(),
                                ],
                            };
                        }
                        static forFeature(Ee, Fe, ot = {}) {
                            return {
                                ngModule: Sn,
                                providers: [
                                    {
                                        provide: Bn,
                                        multi: !0,
                                        useValue:
                                            Ee instanceof Object ? {} : ot,
                                    },
                                    {
                                        provide: Ae,
                                        multi: !0,
                                        useValue: {
                                            key:
                                                Ee instanceof Object
                                                    ? Ee.name
                                                    : Ee,
                                            reducerFactory:
                                                ot instanceof d.OlP ||
                                                !ot.reducerFactory
                                                    ? Dn
                                                    : ot.reducerFactory,
                                            metaReducers:
                                                ot instanceof d.OlP ||
                                                !ot.metaReducers
                                                    ? []
                                                    : ot.metaReducers,
                                            initialState:
                                                ot instanceof d.OlP ||
                                                !ot.initialState
                                                    ? void 0
                                                    : ot.initialState,
                                        },
                                    },
                                    {
                                        provide: Et,
                                        deps: [d.zs3, Bn, Ae],
                                        useFactory: Ht,
                                    },
                                    {
                                        provide: rn,
                                        multi: !0,
                                        useValue:
                                            Ee instanceof Object
                                                ? Ee.reducer
                                                : Fe,
                                    },
                                    {
                                        provide: _t,
                                        multi: !0,
                                        useExisting:
                                            Fe instanceof d.OlP ? Fe : rn,
                                    },
                                    {
                                        provide: Vn,
                                        multi: !0,
                                        deps: [d.zs3, rn, [new d.tBr(_t)]],
                                        useFactory: Hr,
                                    },
                                    er(),
                                ],
                            };
                        }
                    }
                    return (
                        (X.ɵfac = function (Ee) {
                            return new (Ee || X)();
                        }),
                        (X.ɵmod = d.oAB({ type: X })),
                        (X.ɵinj = d.cJS({})),
                        X
                    );
                })();
            function Cn(X, Be) {
                return Be instanceof d.OlP ? X.get(Be) : Be;
            }
            function Ht(X, Be, Ee) {
                return Ee.map((Fe, ot) => {
                    if (Be[ot] instanceof d.OlP) {
                        const rt = X.get(Be[ot]);
                        return {
                            key: Fe.key,
                            reducerFactory: rt.reducerFactory
                                ? rt.reducerFactory
                                : Dn,
                            metaReducers: rt.metaReducers
                                ? rt.metaReducers
                                : [],
                            initialState: rt.initialState,
                        };
                    }
                    return Fe;
                });
            }
            function Hr(X, Be) {
                return Be.map((Fe) => (Fe instanceof d.OlP ? X.get(Fe) : Fe));
            }
            function _r(X) {
                return 'function' == typeof X ? X() : X;
            }
            function wr(X, Be) {
                return X.concat(Be);
            }
            function hn(X) {
                if (X)
                    throw new TypeError(
                        'StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        9783: (_e, z, y) => {
            'use strict';
            y.d(z, {
                $_: () => de,
                h4: () => We,
                b4: () => ae,
                jx: () => Q,
                m8: () => ye,
            });
            var d = y(5e3),
                P = y(7579),
                H = y(9808);
            const w = ['*'];
            let $ = (() => {
                    class R {}
                    return (
                        (R.STARTS_WITH = 'startsWith'),
                        (R.CONTAINS = 'contains'),
                        (R.NOT_CONTAINS = 'notContains'),
                        (R.ENDS_WITH = 'endsWith'),
                        (R.EQUALS = 'equals'),
                        (R.NOT_EQUALS = 'notEquals'),
                        (R.IN = 'in'),
                        (R.LESS_THAN = 'lt'),
                        (R.LESS_THAN_OR_EQUAL_TO = 'lte'),
                        (R.GREATER_THAN = 'gt'),
                        (R.GREATER_THAN_OR_EQUAL_TO = 'gte'),
                        (R.BETWEEN = 'between'),
                        (R.IS = 'is'),
                        (R.IS_NOT = 'isNot'),
                        (R.BEFORE = 'before'),
                        (R.AFTER = 'after'),
                        (R.DATE_IS = 'dateIs'),
                        (R.DATE_IS_NOT = 'dateIsNot'),
                        (R.DATE_BEFORE = 'dateBefore'),
                        (R.DATE_AFTER = 'dateAfter'),
                        R
                    );
                })(),
                ae = (() => {
                    class R {
                        constructor() {
                            (this.ripple = !1),
                                (this.filterMatchModeOptions = {
                                    text: [
                                        $.STARTS_WITH,
                                        $.CONTAINS,
                                        $.NOT_CONTAINS,
                                        $.ENDS_WITH,
                                        $.EQUALS,
                                        $.NOT_EQUALS,
                                    ],
                                    numeric: [
                                        $.EQUALS,
                                        $.NOT_EQUALS,
                                        $.LESS_THAN,
                                        $.LESS_THAN_OR_EQUAL_TO,
                                        $.GREATER_THAN,
                                        $.GREATER_THAN_OR_EQUAL_TO,
                                    ],
                                    date: [
                                        $.DATE_IS,
                                        $.DATE_IS_NOT,
                                        $.DATE_BEFORE,
                                        $.DATE_AFTER,
                                    ],
                                }),
                                (this.translation = {
                                    startsWith: 'Starts with',
                                    contains: 'Contains',
                                    notContains: 'Not contains',
                                    endsWith: 'Ends with',
                                    equals: 'Equals',
                                    notEquals: 'Not equals',
                                    noFilter: 'No Filter',
                                    lt: 'Less than',
                                    lte: 'Less than or equal to',
                                    gt: 'Greater than',
                                    gte: 'Greater than or equal to',
                                    is: 'Is',
                                    isNot: 'Is not',
                                    before: 'Before',
                                    after: 'After',
                                    dateIs: 'Date is',
                                    dateIsNot: 'Date is not',
                                    dateBefore: 'Date is before',
                                    dateAfter: 'Date is after',
                                    clear: 'Clear',
                                    apply: 'Apply',
                                    matchAll: 'Match All',
                                    matchAny: 'Match Any',
                                    addRule: 'Add Rule',
                                    removeRule: 'Remove Rule',
                                    accept: 'Yes',
                                    reject: 'No',
                                    choose: 'Choose',
                                    upload: 'Upload',
                                    cancel: 'Cancel',
                                    dayNames: [
                                        'Sunday',
                                        'Monday',
                                        'Tuesday',
                                        'Wednesday',
                                        'Thursday',
                                        'Friday',
                                        'Saturday',
                                    ],
                                    dayNamesShort: [
                                        'Sun',
                                        'Mon',
                                        'Tue',
                                        'Wed',
                                        'Thu',
                                        'Fri',
                                        'Sat',
                                    ],
                                    dayNamesMin: [
                                        'Su',
                                        'Mo',
                                        'Tu',
                                        'We',
                                        'Th',
                                        'Fr',
                                        'Sa',
                                    ],
                                    monthNames: [
                                        'January',
                                        'February',
                                        'March',
                                        'April',
                                        'May',
                                        'June',
                                        'July',
                                        'August',
                                        'September',
                                        'October',
                                        'November',
                                        'December',
                                    ],
                                    monthNamesShort: [
                                        'Jan',
                                        'Feb',
                                        'Mar',
                                        'Apr',
                                        'May',
                                        'Jun',
                                        'Jul',
                                        'Aug',
                                        'Sep',
                                        'Oct',
                                        'Nov',
                                        'Dec',
                                    ],
                                    dateFormat: 'mm/dd/yy',
                                    today: 'Today',
                                    weekHeader: 'Wk',
                                    weak: 'Weak',
                                    medium: 'Medium',
                                    strong: 'Strong',
                                    passwordPrompt: 'Enter a password',
                                    emptyMessage: 'No results found',
                                    emptyFilterMessage: 'No results found',
                                }),
                                (this.zIndex = {
                                    modal: 1100,
                                    overlay: 1e3,
                                    menu: 1e3,
                                    tooltip: 1100,
                                }),
                                (this.translationSource = new P.x()),
                                (this.translationObserver =
                                    this.translationSource.asObservable());
                        }
                        getTranslation(J) {
                            return this.translation[J];
                        }
                        setTranslation(J) {
                            (this.translation = Object.assign(
                                Object.assign({}, this.translation),
                                J
                            )),
                                this.translationSource.next(this.translation);
                        }
                    }
                    return (
                        (R.ɵfac = function (J) {
                            return new (J || R)();
                        }),
                        (R.ɵprov = d.Yz7({
                            token: R,
                            factory: R.ɵfac,
                            providedIn: 'root',
                        })),
                        R
                    );
                })(),
                We = (() => {
                    class R {}
                    return (
                        (R.ɵfac = function (J) {
                            return new (J || R)();
                        }),
                        (R.ɵcmp = d.Xpm({
                            type: R,
                            selectors: [['p-header']],
                            ngContentSelectors: w,
                            decls: 1,
                            vars: 0,
                            template: function (J, Ve) {
                                1 & J && (d.F$t(), d.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        R
                    );
                })(),
                de = (() => {
                    class R {}
                    return (
                        (R.ɵfac = function (J) {
                            return new (J || R)();
                        }),
                        (R.ɵcmp = d.Xpm({
                            type: R,
                            selectors: [['p-footer']],
                            ngContentSelectors: w,
                            decls: 1,
                            vars: 0,
                            template: function (J, Ve) {
                                1 & J && (d.F$t(), d.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        R
                    );
                })(),
                Q = (() => {
                    class R {
                        constructor(J) {
                            this.template = J;
                        }
                        getType() {
                            return this.name;
                        }
                    }
                    return (
                        (R.ɵfac = function (J) {
                            return new (J || R)(d.Y36(d.Rgc));
                        }),
                        (R.ɵdir = d.lG2({
                            type: R,
                            selectors: [['', 'pTemplate', '']],
                            inputs: {
                                type: 'type',
                                name: ['pTemplate', 'name'],
                            },
                        })),
                        R
                    );
                })(),
                ye = (() => {
                    class R {}
                    return (
                        (R.ɵfac = function (J) {
                            return new (J || R)();
                        }),
                        (R.ɵmod = d.oAB({ type: R })),
                        (R.ɵinj = d.cJS({ imports: [[H.ez]] })),
                        R
                    );
                })();
        },
        2266: (_e, z, y) => {
            'use strict';
            y.d(z, { q: () => Y, F: () => j });
            var d = y(5e3),
                P = y(9808);
            function H(U, ie) {
                if (
                    (1 & U && (d.TgZ(0, 'span', 4), d._uU(1), d.qZA()), 2 & U)
                ) {
                    const Ce = d.oxw();
                    d.xp6(1), d.Oqu(Ce.label);
                }
            }
            function w(U, ie) {
                if ((1 & U && d._UZ(0, 'span', 6), 2 & U)) {
                    const Ce = d.oxw(2);
                    d.Tol(Ce.icon), d.Q6J('ngClass', 'p-avatar-icon');
                }
            }
            function $(U, ie) {
                if ((1 & U && d.YNc(0, w, 1, 3, 'span', 5), 2 & U)) {
                    const Ce = d.oxw(),
                        be = d.MAs(6);
                    d.Q6J('ngIf', Ce.icon)('ngIfElse', be);
                }
            }
            function ae(U, ie) {
                if ((1 & U && d._UZ(0, 'img', 8), 2 & U)) {
                    const Ce = d.oxw(2);
                    d.Q6J('src', Ce.image, d.LSH);
                }
            }
            function re(U, ie) {
                if ((1 & U && d.YNc(0, ae, 1, 1, 'img', 7), 2 & U)) {
                    const Ce = d.oxw();
                    d.Q6J('ngIf', Ce.image);
                }
            }
            const se = ['*'];
            let Y = (() => {
                    class U {
                        constructor() {
                            (this.size = 'normal'), (this.shape = 'square');
                        }
                        containerClass() {
                            return {
                                'p-avatar p-component': !0,
                                'p-avatar-image': null != this.image,
                                'p-avatar-circle': 'circle' === this.shape,
                                'p-avatar-lg': 'large' === this.size,
                                'p-avatar-xl': 'xlarge' === this.size,
                            };
                        }
                    }
                    return (
                        (U.ɵfac = function (Ce) {
                            return new (Ce || U)();
                        }),
                        (U.ɵcmp = d.Xpm({
                            type: U,
                            selectors: [['p-avatar']],
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                label: 'label',
                                icon: 'icon',
                                image: 'image',
                                size: 'size',
                                shape: 'shape',
                                style: 'style',
                                styleClass: 'styleClass',
                            },
                            ngContentSelectors: se,
                            decls: 7,
                            vars: 6,
                            consts: [
                                [3, 'ngClass', 'ngStyle'],
                                [
                                    'class',
                                    'p-avatar-text',
                                    4,
                                    'ngIf',
                                    'ngIfElse',
                                ],
                                ['iconTemplate', ''],
                                ['imageTemplate', ''],
                                [1, 'p-avatar-text'],
                                [3, 'class', 'ngClass', 4, 'ngIf', 'ngIfElse'],
                                [3, 'ngClass'],
                                [3, 'src', 4, 'ngIf'],
                                [3, 'src'],
                            ],
                            template: function (Ce, be) {
                                if (
                                    (1 & Ce &&
                                        (d.F$t(),
                                        d.TgZ(0, 'div', 0),
                                        d.Hsn(1),
                                        d.YNc(2, H, 2, 1, 'span', 1),
                                        d.YNc(
                                            3,
                                            $,
                                            1,
                                            2,
                                            'ng-template',
                                            null,
                                            2,
                                            d.W1O
                                        ),
                                        d.YNc(
                                            5,
                                            re,
                                            1,
                                            1,
                                            'ng-template',
                                            null,
                                            3,
                                            d.W1O
                                        ),
                                        d.qZA()),
                                    2 & Ce)
                                ) {
                                    const xe = d.MAs(4);
                                    d.Tol(be.styleClass),
                                        d.Q6J('ngClass', be.containerClass())(
                                            'ngStyle',
                                            be.style
                                        ),
                                        d.xp6(2),
                                        d.Q6J('ngIf', be.label)('ngIfElse', xe);
                                }
                            },
                            directives: [P.mk, P.PC, P.O5],
                            styles: [
                                '.p-avatar{display:inline-flex;align-items:center;justify-content:center;width:2rem;height:2rem;font-size:1rem}.p-avatar.p-avatar-image{background-color:transparent}.p-avatar.p-avatar-circle{border-radius:50%;overflow:hidden}.p-avatar .p-avatar-icon{font-size:1rem}.p-avatar img{width:100%;height:100%}\n',
                            ],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        U
                    );
                })(),
                j = (() => {
                    class U {}
                    return (
                        (U.ɵfac = function (Ce) {
                            return new (Ce || U)();
                        }),
                        (U.ɵmod = d.oAB({ type: U })),
                        (U.ɵinj = d.cJS({ imports: [[P.ez]] })),
                        U
                    );
                })();
        },
        5893: (_e, z, y) => {
            'use strict';
            y.d(z, { zx: () => We, hJ: () => de });
            var d = y(5e3),
                P = y(9808);
            let H = (() => {
                class Q {
                    static addClass(M, R) {
                        M.classList
                            ? M.classList.add(R)
                            : (M.className += ' ' + R);
                    }
                    static addMultipleClasses(M, R) {
                        if (M.classList) {
                            let oe = R.trim().split(' ');
                            for (let J = 0; J < oe.length; J++)
                                M.classList.add(oe[J]);
                        } else {
                            let oe = R.split(' ');
                            for (let J = 0; J < oe.length; J++)
                                M.className += ' ' + oe[J];
                        }
                    }
                    static removeClass(M, R) {
                        M.classList
                            ? M.classList.remove(R)
                            : (M.className = M.className.replace(
                                  new RegExp(
                                      '(^|\\b)' +
                                          R.split(' ').join('|') +
                                          '(\\b|$)',
                                      'gi'
                                  ),
                                  ' '
                              ));
                    }
                    static hasClass(M, R) {
                        return M.classList
                            ? M.classList.contains(R)
                            : new RegExp('(^| )' + R + '( |$)', 'gi').test(
                                  M.className
                              );
                    }
                    static siblings(M) {
                        return Array.prototype.filter.call(
                            M.parentNode.children,
                            function (R) {
                                return R !== M;
                            }
                        );
                    }
                    static find(M, R) {
                        return Array.from(M.querySelectorAll(R));
                    }
                    static findSingle(M, R) {
                        return M ? M.querySelector(R) : null;
                    }
                    static index(M) {
                        let R = M.parentNode.childNodes,
                            oe = 0;
                        for (var J = 0; J < R.length; J++) {
                            if (R[J] == M) return oe;
                            1 == R[J].nodeType && oe++;
                        }
                        return -1;
                    }
                    static indexWithinGroup(M, R) {
                        let oe = M.parentNode ? M.parentNode.childNodes : [],
                            J = 0;
                        for (var Ve = 0; Ve < oe.length; Ve++) {
                            if (oe[Ve] == M) return J;
                            oe[Ve].attributes &&
                                oe[Ve].attributes[R] &&
                                1 == oe[Ve].nodeType &&
                                J++;
                        }
                        return -1;
                    }
                    static relativePosition(M, R) {
                        let oe = M.offsetParent
                            ? { width: M.offsetWidth, height: M.offsetHeight }
                            : this.getHiddenElementDimensions(M);
                        const J = R.offsetHeight,
                            Ve = R.getBoundingClientRect(),
                            He = this.getViewport();
                        let Je, te;
                        Ve.top + J + oe.height > He.height
                            ? ((Je = -1 * oe.height),
                              (M.style.transformOrigin = 'bottom'),
                              Ve.top + Je < 0 && (Je = -1 * Ve.top))
                            : ((Je = J), (M.style.transformOrigin = 'top')),
                            (te =
                                oe.width > He.width
                                    ? -1 * Ve.left
                                    : Ve.left + oe.width > He.width
                                    ? -1 * (Ve.left + oe.width - He.width)
                                    : 0),
                            (M.style.top = Je + 'px'),
                            (M.style.left = te + 'px');
                    }
                    static absolutePosition(M, R) {
                        let Xe,
                            Ae,
                            oe = M.offsetParent
                                ? {
                                      width: M.offsetWidth,
                                      height: M.offsetHeight,
                                  }
                                : this.getHiddenElementDimensions(M),
                            J = oe.height,
                            Ve = oe.width,
                            He = R.offsetHeight,
                            Je = R.offsetWidth,
                            te = R.getBoundingClientRect(),
                            Re = this.getWindowScrollTop(),
                            Oe = this.getWindowScrollLeft(),
                            Ue = this.getViewport();
                        te.top + He + J > Ue.height
                            ? ((Xe = te.top + Re - J),
                              (M.style.transformOrigin = 'bottom'),
                              Xe < 0 && (Xe = Re))
                            : ((Xe = He + te.top + Re),
                              (M.style.transformOrigin = 'top')),
                            (Ae =
                                te.left + Ve > Ue.width
                                    ? Math.max(0, te.left + Oe + Je - Ve)
                                    : te.left + Oe),
                            (M.style.top = Xe + 'px'),
                            (M.style.left = Ae + 'px');
                    }
                    static getParents(M, R = []) {
                        return null === M.parentNode
                            ? R
                            : this.getParents(
                                  M.parentNode,
                                  R.concat([M.parentNode])
                              );
                    }
                    static getScrollableParents(M) {
                        let R = [];
                        if (M) {
                            let oe = this.getParents(M);
                            const J = /(auto|scroll)/,
                                Ve = (He) => {
                                    let Je = window.getComputedStyle(He, null);
                                    return (
                                        J.test(
                                            Je.getPropertyValue('overflow')
                                        ) ||
                                        J.test(
                                            Je.getPropertyValue('overflowX')
                                        ) ||
                                        J.test(Je.getPropertyValue('overflowY'))
                                    );
                                };
                            for (let He of oe) {
                                let Je =
                                    1 === He.nodeType &&
                                    He.dataset.scrollselectors;
                                if (Je) {
                                    let te = Je.split(',');
                                    for (let Re of te) {
                                        let Oe = this.findSingle(He, Re);
                                        Oe && Ve(Oe) && R.push(Oe);
                                    }
                                }
                                9 !== He.nodeType && Ve(He) && R.push(He);
                            }
                        }
                        return R;
                    }
                    static getHiddenElementOuterHeight(M) {
                        (M.style.visibility = 'hidden'),
                            (M.style.display = 'block');
                        let R = M.offsetHeight;
                        return (
                            (M.style.display = 'none'),
                            (M.style.visibility = 'visible'),
                            R
                        );
                    }
                    static getHiddenElementOuterWidth(M) {
                        (M.style.visibility = 'hidden'),
                            (M.style.display = 'block');
                        let R = M.offsetWidth;
                        return (
                            (M.style.display = 'none'),
                            (M.style.visibility = 'visible'),
                            R
                        );
                    }
                    static getHiddenElementDimensions(M) {
                        let R = {};
                        return (
                            (M.style.visibility = 'hidden'),
                            (M.style.display = 'block'),
                            (R.width = M.offsetWidth),
                            (R.height = M.offsetHeight),
                            (M.style.display = 'none'),
                            (M.style.visibility = 'visible'),
                            R
                        );
                    }
                    static scrollInView(M, R) {
                        let oe =
                                getComputedStyle(M).getPropertyValue(
                                    'borderTopWidth'
                                ),
                            J = oe ? parseFloat(oe) : 0,
                            Ve =
                                getComputedStyle(M).getPropertyValue(
                                    'paddingTop'
                                ),
                            He = Ve ? parseFloat(Ve) : 0,
                            Je = M.getBoundingClientRect(),
                            Re =
                                R.getBoundingClientRect().top +
                                document.body.scrollTop -
                                (Je.top + document.body.scrollTop) -
                                J -
                                He,
                            Oe = M.scrollTop,
                            Ue = M.clientHeight,
                            Xe = this.getOuterHeight(R);
                        Re < 0
                            ? (M.scrollTop = Oe + Re)
                            : Re + Xe > Ue && (M.scrollTop = Oe + Re - Ue + Xe);
                    }
                    static fadeIn(M, R) {
                        M.style.opacity = 0;
                        let oe = +new Date(),
                            J = 0,
                            Ve = function () {
                                (J =
                                    +M.style.opacity.replace(',', '.') +
                                    (new Date().getTime() - oe) / R),
                                    (M.style.opacity = J),
                                    (oe = +new Date()),
                                    +J < 1 &&
                                        ((window.requestAnimationFrame &&
                                            requestAnimationFrame(Ve)) ||
                                            setTimeout(Ve, 16));
                            };
                        Ve();
                    }
                    static fadeOut(M, R) {
                        var oe = 1,
                            He = 50 / R;
                        let Je = setInterval(() => {
                            (oe -= He) <= 0 && ((oe = 0), clearInterval(Je)),
                                (M.style.opacity = oe);
                        }, 50);
                    }
                    static getWindowScrollTop() {
                        let M = document.documentElement;
                        return (
                            (window.pageYOffset || M.scrollTop) -
                            (M.clientTop || 0)
                        );
                    }
                    static getWindowScrollLeft() {
                        let M = document.documentElement;
                        return (
                            (window.pageXOffset || M.scrollLeft) -
                            (M.clientLeft || 0)
                        );
                    }
                    static matches(M, R) {
                        var oe = Element.prototype;
                        return (
                            oe.matches ||
                            oe.webkitMatchesSelector ||
                            oe.mozMatchesSelector ||
                            oe.msMatchesSelector ||
                            function (Ve) {
                                return (
                                    -1 !==
                                    [].indexOf.call(
                                        document.querySelectorAll(Ve),
                                        this
                                    )
                                );
                            }
                        ).call(M, R);
                    }
                    static getOuterWidth(M, R) {
                        let oe = M.offsetWidth;
                        if (R) {
                            let J = getComputedStyle(M);
                            oe +=
                                parseFloat(J.marginLeft) +
                                parseFloat(J.marginRight);
                        }
                        return oe;
                    }
                    static getHorizontalPadding(M) {
                        let R = getComputedStyle(M);
                        return (
                            parseFloat(R.paddingLeft) +
                            parseFloat(R.paddingRight)
                        );
                    }
                    static getHorizontalMargin(M) {
                        let R = getComputedStyle(M);
                        return (
                            parseFloat(R.marginLeft) + parseFloat(R.marginRight)
                        );
                    }
                    static innerWidth(M) {
                        let R = M.offsetWidth,
                            oe = getComputedStyle(M);
                        return (
                            (R +=
                                parseFloat(oe.paddingLeft) +
                                parseFloat(oe.paddingRight)),
                            R
                        );
                    }
                    static width(M) {
                        let R = M.offsetWidth,
                            oe = getComputedStyle(M);
                        return (
                            (R -=
                                parseFloat(oe.paddingLeft) +
                                parseFloat(oe.paddingRight)),
                            R
                        );
                    }
                    static getInnerHeight(M) {
                        let R = M.offsetHeight,
                            oe = getComputedStyle(M);
                        return (
                            (R +=
                                parseFloat(oe.paddingTop) +
                                parseFloat(oe.paddingBottom)),
                            R
                        );
                    }
                    static getOuterHeight(M, R) {
                        let oe = M.offsetHeight;
                        if (R) {
                            let J = getComputedStyle(M);
                            oe +=
                                parseFloat(J.marginTop) +
                                parseFloat(J.marginBottom);
                        }
                        return oe;
                    }
                    static getHeight(M) {
                        let R = M.offsetHeight,
                            oe = getComputedStyle(M);
                        return (
                            (R -=
                                parseFloat(oe.paddingTop) +
                                parseFloat(oe.paddingBottom) +
                                parseFloat(oe.borderTopWidth) +
                                parseFloat(oe.borderBottomWidth)),
                            R
                        );
                    }
                    static getWidth(M) {
                        let R = M.offsetWidth,
                            oe = getComputedStyle(M);
                        return (
                            (R -=
                                parseFloat(oe.paddingLeft) +
                                parseFloat(oe.paddingRight) +
                                parseFloat(oe.borderLeftWidth) +
                                parseFloat(oe.borderRightWidth)),
                            R
                        );
                    }
                    static getViewport() {
                        let M = window,
                            R = document,
                            oe = R.documentElement,
                            J = R.getElementsByTagName('body')[0];
                        return {
                            width:
                                M.innerWidth || oe.clientWidth || J.clientWidth,
                            height:
                                M.innerHeight ||
                                oe.clientHeight ||
                                J.clientHeight,
                        };
                    }
                    static getOffset(M) {
                        var R = M.getBoundingClientRect();
                        return {
                            top:
                                R.top +
                                (window.pageYOffset ||
                                    document.documentElement.scrollTop ||
                                    document.body.scrollTop ||
                                    0),
                            left:
                                R.left +
                                (window.pageXOffset ||
                                    document.documentElement.scrollLeft ||
                                    document.body.scrollLeft ||
                                    0),
                        };
                    }
                    static replaceElementWith(M, R) {
                        let oe = M.parentNode;
                        if (!oe) throw "Can't replace element";
                        return oe.replaceChild(R, M);
                    }
                    static getUserAgent() {
                        return navigator.userAgent;
                    }
                    static isIE() {
                        var M = window.navigator.userAgent;
                        return (
                            M.indexOf('MSIE ') > 0 ||
                            (M.indexOf('Trident/') > 0
                                ? (M.indexOf('rv:'), !0)
                                : M.indexOf('Edge/') > 0)
                        );
                    }
                    static isIOS() {
                        return (
                            /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                            !window.MSStream
                        );
                    }
                    static isAndroid() {
                        return /(android)/i.test(navigator.userAgent);
                    }
                    static isTouchDevice() {
                        return (
                            'ontouchstart' in window ||
                            navigator.maxTouchPoints > 0
                        );
                    }
                    static appendChild(M, R) {
                        if (this.isElement(R)) R.appendChild(M);
                        else {
                            if (!R.el || !R.el.nativeElement)
                                throw 'Cannot append ' + R + ' to ' + M;
                            R.el.nativeElement.appendChild(M);
                        }
                    }
                    static removeChild(M, R) {
                        if (this.isElement(R)) R.removeChild(M);
                        else {
                            if (!R.el || !R.el.nativeElement)
                                throw 'Cannot remove ' + M + ' from ' + R;
                            R.el.nativeElement.removeChild(M);
                        }
                    }
                    static removeElement(M) {
                        'remove' in Element.prototype
                            ? M.remove()
                            : M.parentNode.removeChild(M);
                    }
                    static isElement(M) {
                        return 'object' == typeof HTMLElement
                            ? M instanceof HTMLElement
                            : M &&
                                  'object' == typeof M &&
                                  null !== M &&
                                  1 === M.nodeType &&
                                  'string' == typeof M.nodeName;
                    }
                    static calculateScrollbarWidth(M) {
                        if (M) {
                            let R = getComputedStyle(M);
                            return (
                                M.offsetWidth -
                                M.clientWidth -
                                parseFloat(R.borderLeftWidth) -
                                parseFloat(R.borderRightWidth)
                            );
                        }
                        {
                            if (null !== this.calculatedScrollbarWidth)
                                return this.calculatedScrollbarWidth;
                            let R = document.createElement('div');
                            (R.className = 'p-scrollbar-measure'),
                                document.body.appendChild(R);
                            let oe = R.offsetWidth - R.clientWidth;
                            return (
                                document.body.removeChild(R),
                                (this.calculatedScrollbarWidth = oe),
                                oe
                            );
                        }
                    }
                    static calculateScrollbarHeight() {
                        if (null !== this.calculatedScrollbarHeight)
                            return this.calculatedScrollbarHeight;
                        let M = document.createElement('div');
                        (M.className = 'p-scrollbar-measure'),
                            document.body.appendChild(M);
                        let R = M.offsetHeight - M.clientHeight;
                        return (
                            document.body.removeChild(M),
                            (this.calculatedScrollbarWidth = R),
                            R
                        );
                    }
                    static invokeElementMethod(M, R, oe) {
                        M[R].apply(M, oe);
                    }
                    static clearSelection() {
                        if (window.getSelection)
                            window.getSelection().empty
                                ? window.getSelection().empty()
                                : window.getSelection().removeAllRanges &&
                                  window.getSelection().rangeCount > 0 &&
                                  window
                                      .getSelection()
                                      .getRangeAt(0)
                                      .getClientRects().length > 0 &&
                                  window.getSelection().removeAllRanges();
                        else if (document.selection && document.selection.empty)
                            try {
                                document.selection.empty();
                            } catch (M) {}
                    }
                    static getBrowser() {
                        if (!this.browser) {
                            let M = this.resolveUserAgent();
                            (this.browser = {}),
                                M.browser &&
                                    ((this.browser[M.browser] = !0),
                                    (this.browser.version = M.version)),
                                this.browser.chrome
                                    ? (this.browser.webkit = !0)
                                    : this.browser.webkit &&
                                      (this.browser.safari = !0);
                        }
                        return this.browser;
                    }
                    static resolveUserAgent() {
                        let M = navigator.userAgent.toLowerCase(),
                            R =
                                /(chrome)[ \/]([\w.]+)/.exec(M) ||
                                /(webkit)[ \/]([\w.]+)/.exec(M) ||
                                /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(M) ||
                                /(msie) ([\w.]+)/.exec(M) ||
                                (M.indexOf('compatible') < 0 &&
                                    /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(M)) ||
                                [];
                        return { browser: R[1] || '', version: R[2] || '0' };
                    }
                    static isInteger(M) {
                        return Number.isInteger
                            ? Number.isInteger(M)
                            : 'number' == typeof M &&
                                  isFinite(M) &&
                                  Math.floor(M) === M;
                    }
                    static isHidden(M) {
                        return null === M.offsetParent;
                    }
                    static getFocusableElements(M) {
                        let R = Q.find(
                                M,
                                'button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]):not(.p-disabled)'
                            ),
                            oe = [];
                        for (let J of R)
                            'none' != getComputedStyle(J).display &&
                                'hidden' != getComputedStyle(J).visibility &&
                                oe.push(J);
                        return oe;
                    }
                    static generateZIndex() {
                        return (
                            (this.zindex = this.zindex || 999), ++this.zindex
                        );
                    }
                }
                return (
                    (Q.zindex = 1e3),
                    (Q.calculatedScrollbarWidth = null),
                    (Q.calculatedScrollbarHeight = null),
                    Q
                );
            })();
            var $ = y(9783);
            let ae = (() => {
                    class Q {
                        constructor(M, R, oe) {
                            (this.el = M), (this.zone = R), (this.config = oe);
                        }
                        ngAfterViewInit() {
                            this.config &&
                                this.config.ripple &&
                                this.zone.runOutsideAngular(() => {
                                    this.create(),
                                        (this.mouseDownListener =
                                            this.onMouseDown.bind(this)),
                                        this.el.nativeElement.addEventListener(
                                            'mousedown',
                                            this.mouseDownListener
                                        );
                                });
                        }
                        onMouseDown(M) {
                            let R = this.getInk();
                            if (
                                !R ||
                                'none' === getComputedStyle(R, null).display
                            )
                                return;
                            if (
                                (H.removeClass(R, 'p-ink-active'),
                                !H.getHeight(R) && !H.getWidth(R))
                            ) {
                                let He = Math.max(
                                    H.getOuterWidth(this.el.nativeElement),
                                    H.getOuterHeight(this.el.nativeElement)
                                );
                                (R.style.height = He + 'px'),
                                    (R.style.width = He + 'px');
                            }
                            let oe = H.getOffset(this.el.nativeElement),
                                J =
                                    M.pageX -
                                    oe.left +
                                    document.body.scrollTop -
                                    H.getWidth(R) / 2,
                                Ve =
                                    M.pageY -
                                    oe.top +
                                    document.body.scrollLeft -
                                    H.getHeight(R) / 2;
                            (R.style.top = Ve + 'px'),
                                (R.style.left = J + 'px'),
                                H.addClass(R, 'p-ink-active');
                        }
                        getInk() {
                            for (
                                let M = 0;
                                M < this.el.nativeElement.children.length;
                                M++
                            )
                                if (
                                    -1 !==
                                    this.el.nativeElement.children[
                                        M
                                    ].className.indexOf('p-ink')
                                )
                                    return this.el.nativeElement.children[M];
                            return null;
                        }
                        resetInk() {
                            let M = this.getInk();
                            M && H.removeClass(M, 'p-ink-active');
                        }
                        onAnimationEnd(M) {
                            H.removeClass(M.currentTarget, 'p-ink-active');
                        }
                        create() {
                            let M = document.createElement('span');
                            (M.className = 'p-ink'),
                                this.el.nativeElement.appendChild(M),
                                (this.animationListener =
                                    this.onAnimationEnd.bind(this)),
                                M.addEventListener(
                                    'animationend',
                                    this.animationListener
                                );
                        }
                        remove() {
                            let M = this.getInk();
                            M &&
                                (this.el.nativeElement.removeEventListener(
                                    'mousedown',
                                    this.mouseDownListener
                                ),
                                M.removeEventListener(
                                    'animationend',
                                    this.animationListener
                                ),
                                H.removeElement(M));
                        }
                        ngOnDestroy() {
                            this.config && this.config.ripple && this.remove();
                        }
                    }
                    return (
                        (Q.ɵfac = function (M) {
                            return new (M || Q)(
                                d.Y36(d.SBq),
                                d.Y36(d.R0b),
                                d.Y36($.b4, 8)
                            );
                        }),
                        (Q.ɵdir = d.lG2({
                            type: Q,
                            selectors: [['', 'pRipple', '']],
                            hostAttrs: [1, 'p-ripple', 'p-element'],
                        })),
                        Q
                    );
                })(),
                re = (() => {
                    class Q {}
                    return (
                        (Q.ɵfac = function (M) {
                            return new (M || Q)();
                        }),
                        (Q.ɵmod = d.oAB({ type: Q })),
                        (Q.ɵinj = d.cJS({ imports: [[P.ez]] })),
                        Q
                    );
                })();
            function se(Q, ye) {
                1 & Q && d.GkF(0);
            }
            const Y = function (Q, ye, M, R) {
                return {
                    'p-button-icon': !0,
                    'p-button-icon-left': Q,
                    'p-button-icon-right': ye,
                    'p-button-icon-top': M,
                    'p-button-icon-bottom': R,
                };
            };
            function j(Q, ye) {
                if ((1 & Q && d._UZ(0, 'span', 4), 2 & Q)) {
                    const M = d.oxw();
                    d.Tol(
                        M.loading
                            ? 'p-button-loading-icon ' + M.loadingIcon
                            : M.icon
                    ),
                        d.Q6J(
                            'ngClass',
                            d.l5B(
                                4,
                                Y,
                                'left' === M.iconPos && M.label,
                                'right' === M.iconPos && M.label,
                                'top' === M.iconPos && M.label,
                                'bottom' === M.iconPos && M.label
                            )
                        ),
                        d.uIk('aria-hidden', !0);
                }
            }
            function U(Q, ye) {
                if (
                    (1 & Q && (d.TgZ(0, 'span', 5), d._uU(1), d.qZA()), 2 & Q)
                ) {
                    const M = d.oxw();
                    d.uIk('aria-hidden', M.icon && !M.label),
                        d.xp6(1),
                        d.Oqu(M.label || '\xa0');
                }
            }
            function ie(Q, ye) {
                if (
                    (1 & Q && (d.TgZ(0, 'span', 4), d._uU(1), d.qZA()), 2 & Q)
                ) {
                    const M = d.oxw();
                    d.Tol(M.badgeClass),
                        d.Q6J('ngClass', M.badgeStyleClass()),
                        d.xp6(1),
                        d.Oqu(M.badge);
                }
            }
            const Ce = function (Q, ye, M, R, oe) {
                    return {
                        'p-button p-component': !0,
                        'p-button-icon-only': Q,
                        'p-button-vertical': ye,
                        'p-disabled': M,
                        'p-button-loading': R,
                        'p-button-loading-label-only': oe,
                    };
                },
                be = ['*'];
            let We = (() => {
                    class Q {
                        constructor() {
                            (this.type = 'button'),
                                (this.iconPos = 'left'),
                                (this.loading = !1),
                                (this.loadingIcon = 'pi pi-spinner pi-spin'),
                                (this.onClick = new d.vpe()),
                                (this.onFocus = new d.vpe()),
                                (this.onBlur = new d.vpe());
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((M) => {
                                M.getType(),
                                    (this.contentTemplate = M.template);
                            });
                        }
                        badgeStyleClass() {
                            return {
                                'p-badge p-component': !0,
                                'p-badge-no-gutter':
                                    this.badge &&
                                    1 === String(this.badge).length,
                            };
                        }
                    }
                    return (
                        (Q.ɵfac = function (M) {
                            return new (M || Q)();
                        }),
                        (Q.ɵcmp = d.Xpm({
                            type: Q,
                            selectors: [['p-button']],
                            contentQueries: function (M, R, oe) {
                                if ((1 & M && d.Suo(oe, $.jx, 4), 2 & M)) {
                                    let J;
                                    d.iGM((J = d.CRH())) && (R.templates = J);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                type: 'type',
                                iconPos: 'iconPos',
                                icon: 'icon',
                                badge: 'badge',
                                label: 'label',
                                disabled: 'disabled',
                                loading: 'loading',
                                loadingIcon: 'loadingIcon',
                                style: 'style',
                                styleClass: 'styleClass',
                                badgeClass: 'badgeClass',
                            },
                            outputs: {
                                onClick: 'onClick',
                                onFocus: 'onFocus',
                                onBlur: 'onBlur',
                            },
                            ngContentSelectors: be,
                            decls: 6,
                            vars: 16,
                            consts: [
                                [
                                    'pRipple',
                                    '',
                                    3,
                                    'ngStyle',
                                    'disabled',
                                    'ngClass',
                                    'click',
                                    'focus',
                                    'blur',
                                ],
                                [4, 'ngTemplateOutlet'],
                                [3, 'ngClass', 'class', 4, 'ngIf'],
                                ['class', 'p-button-label', 4, 'ngIf'],
                                [3, 'ngClass'],
                                [1, 'p-button-label'],
                            ],
                            template: function (M, R) {
                                1 & M &&
                                    (d.F$t(),
                                    d.TgZ(0, 'button', 0),
                                    d.NdJ('click', function (J) {
                                        return R.onClick.emit(J);
                                    })('focus', function (J) {
                                        return R.onFocus.emit(J);
                                    })('blur', function (J) {
                                        return R.onBlur.emit(J);
                                    }),
                                    d.Hsn(1),
                                    d.YNc(2, se, 1, 0, 'ng-container', 1),
                                    d.YNc(3, j, 1, 9, 'span', 2),
                                    d.YNc(4, U, 2, 2, 'span', 3),
                                    d.YNc(5, ie, 2, 4, 'span', 2),
                                    d.qZA()),
                                    2 & M &&
                                        (d.Tol(R.styleClass),
                                        d.Q6J('ngStyle', R.style)(
                                            'disabled',
                                            R.disabled || R.loading
                                        )(
                                            'ngClass',
                                            d.qbA(
                                                10,
                                                Ce,
                                                R.icon && !R.label,
                                                ('top' === R.iconPos ||
                                                    'bottom' === R.iconPos) &&
                                                    R.label,
                                                R.disabled || R.loading,
                                                R.loading,
                                                R.loading && !R.icon && R.label
                                            )
                                        ),
                                        d.uIk('type', R.type),
                                        d.xp6(2),
                                        d.Q6J(
                                            'ngTemplateOutlet',
                                            R.contentTemplate
                                        ),
                                        d.xp6(1),
                                        d.Q6J(
                                            'ngIf',
                                            !R.contentTemplate &&
                                                (R.icon || R.loading)
                                        ),
                                        d.xp6(1),
                                        d.Q6J('ngIf', !R.contentTemplate),
                                        d.xp6(1),
                                        d.Q6J(
                                            'ngIf',
                                            !R.contentTemplate && R.badge
                                        ));
                            },
                            directives: [ae, P.PC, P.mk, P.tP, P.O5],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        Q
                    );
                })(),
                de = (() => {
                    class Q {}
                    return (
                        (Q.ɵfac = function (M) {
                            return new (M || Q)();
                        }),
                        (Q.ɵmod = d.oAB({ type: Q })),
                        (Q.ɵinj = d.cJS({ imports: [[P.ez, re]] })),
                        Q
                    );
                })();
        },
        5861: (_e, z, y) => {
            'use strict';
            function d(H, w, $, ae, re, se, Y) {
                try {
                    var j = H[se](Y),
                        U = j.value;
                } catch (ie) {
                    return void $(ie);
                }
                j.done ? w(U) : Promise.resolve(U).then(ae, re);
            }
            function P(H) {
                return function () {
                    var w = this,
                        $ = arguments;
                    return new Promise(function (ae, re) {
                        var se = H.apply(w, $);
                        function Y(U) {
                            d(se, ae, re, Y, j, 'next', U);
                        }
                        function j(U) {
                            d(se, ae, re, Y, j, 'throw', U);
                        }
                        Y(void 0);
                    });
                };
            }
            y.d(z, { Z: () => P });
        },
    },
    (_e) => {
        _e((_e.s = 2957));
    },
]);
