'use strict';
var e0 = Object.defineProperty,
    t0 = Object.defineProperties,
    n0 = Object.getOwnPropertyDescriptors,
    am = Object.getOwnPropertySymbols,
    r0 = Object.prototype.hasOwnProperty,
    s0 = Object.prototype.propertyIsEnumerable,
    lm = (de, Y, f) =>
        Y in de
            ? e0(de, Y, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: f,
              })
            : (de[Y] = f),
    um = (de, Y) => {
        for (var f in Y || (Y = {})) r0.call(Y, f) && lm(de, f, Y[f]);
        if (am) for (var f of am(Y)) s0.call(Y, f) && lm(de, f, Y[f]);
        return de;
    },
    cm = (de, Y) => t0(de, n0(Y));
(self.webpackChunkportal = self.webpackChunkportal || []).push([
    [179],
    {
        440: (de, Y, f) => {
            f.d(Y, { nm: () => _t });
            var s = f(6351);
            f(5e3), f(5867);
            var De = f(5861),
                R = f(9681),
                te = f(4859),
                G = f(2090),
                oe = f(1877);
            const re = new Map(),
                ne = { activated: !1, tokenObservers: [] },
                we = { initialized: !1, enabled: !1 };
            function Fe(Pe) {
                return re.get(Pe) || ne;
            }
            function je(Pe, Ie) {
                re.set(Pe, Ie);
            }
            function We() {
                return we;
            }
            class gt {
                constructor(Ie, $e, ut, Et, Ut) {
                    if (
                        ((this.operation = Ie),
                        (this.retryPolicy = $e),
                        (this.getWaitDuration = ut),
                        (this.lowerBound = Et),
                        (this.upperBound = Ut),
                        (this.pending = null),
                        (this.nextErrorWaitInterval = Et),
                        Et > Ut)
                    )
                        throw new Error(
                            'Proactive refresh lower bound greater than upper bound!'
                        );
                }
                start() {
                    (this.nextErrorWaitInterval = this.lowerBound),
                        this.process(!0).catch(() => {});
                }
                stop() {
                    this.pending &&
                        (this.pending.reject('cancelled'),
                        (this.pending = null));
                }
                isRunning() {
                    return !!this.pending;
                }
                process(Ie) {
                    var $e = this;
                    return (0, De.Z)(function* () {
                        $e.stop();
                        try {
                            ($e.pending = new G.BH()),
                                yield (function Pt(Pe) {
                                    return new Promise((Ie) => {
                                        setTimeout(Ie, Pe);
                                    });
                                })($e.getNextRun(Ie)),
                                $e.pending.resolve(),
                                yield $e.pending.promise,
                                ($e.pending = new G.BH()),
                                yield $e.operation(),
                                $e.pending.resolve(),
                                yield $e.pending.promise,
                                $e.process(!0).catch(() => {});
                        } catch (ut) {
                            $e.retryPolicy(ut)
                                ? $e.process(!1).catch(() => {})
                                : $e.stop();
                        }
                    })();
                }
                getNextRun(Ie) {
                    if (Ie)
                        return (
                            (this.nextErrorWaitInterval = this.lowerBound),
                            this.getWaitDuration()
                        );
                    {
                        const $e = this.nextErrorWaitInterval;
                        return (
                            (this.nextErrorWaitInterval *= 2),
                            this.nextErrorWaitInterval > this.upperBound &&
                                (this.nextErrorWaitInterval = this.upperBound),
                            $e
                        );
                    }
                }
            }
            const mt = new G.LL('appCheck', 'AppCheck', {
                'already-initialized':
                    'You have already called initializeAppCheck() for FirebaseApp {$appName} with different options. To avoid this error, call initializeAppCheck() with the same options as when it was originally called. This will return the already initialized instance.',
                'use-before-activation':
                    'App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. Call initializeAppCheck() before instantiating other Firebase services.',
                'fetch-network-error':
                    'Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                'fetch-parse-error':
                    'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                'fetch-status-error':
                    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                'storage-open':
                    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                'storage-get':
                    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                'storage-set':
                    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                'recaptcha-error': 'ReCAPTCHA error.',
                throttled:
                    'Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}',
            });
            function nt(Pe) {
                if (!Fe(Pe).activated)
                    throw mt.create('use-before-activation', {
                        appName: Pe.name,
                    });
            }
            function xt(Pe, Ie) {
                return Qt.apply(this, arguments);
            }
            function Qt() {
                return (Qt = (0, De.Z)(function* ({ url: Pe, body: Ie }, $e) {
                    const ut = { 'Content-Type': 'application/json' },
                        Et = $e.getImmediate({ optional: !0 });
                    if (Et) {
                        const Br = yield Et.getHeartbeatsHeader();
                        Br && (ut['X-Firebase-Client'] = Br);
                    }
                    const Ut = {
                        method: 'POST',
                        body: JSON.stringify(Ie),
                        headers: ut,
                    };
                    let On, mr;
                    try {
                        On = yield fetch(Pe, Ut);
                    } catch (Br) {
                        throw mt.create('fetch-network-error', {
                            originalErrorMessage: Br.message,
                        });
                    }
                    if (200 !== On.status)
                        throw mt.create('fetch-status-error', {
                            httpStatus: On.status,
                        });
                    try {
                        mr = yield On.json();
                    } catch (Br) {
                        throw mt.create('fetch-parse-error', {
                            originalErrorMessage: Br.message,
                        });
                    }
                    const Rn = mr.ttl.match(/^([\d.]+)(s)$/);
                    if (!Rn || !Rn[2] || isNaN(Number(Rn[1])))
                        throw mt.create('fetch-parse-error', {
                            originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration format: ${mr.ttl}`,
                        });
                    const Gr = 1e3 * Number(Rn[1]),
                        _i = Date.now();
                    return {
                        token: mr.token,
                        expireTimeMillis: _i + Gr,
                        issuedAtTimeMillis: _i,
                    };
                })).apply(this, arguments);
            }
            function rn(Pe, Ie) {
                const { projectId: $e, appId: ut, apiKey: Et } = Pe.options;
                return {
                    url: `https://content-firebaseappcheck.googleapis.com/v1/projects/${$e}/apps/${ut}:exchangeDebugToken?key=${Et}`,
                    body: { debug_token: Ie },
                };
            }
            const Un = 'firebase-app-check-store';
            let Dn = null;
            function rr() {
                return (
                    Dn ||
                    ((Dn = new Promise((Pe, Ie) => {
                        try {
                            const $e = indexedDB.open(
                                'firebase-app-check-database',
                                1
                            );
                            ($e.onsuccess = (ut) => {
                                Pe(ut.target.result);
                            }),
                                ($e.onerror = (ut) => {
                                    var Et;
                                    Ie(
                                        mt.create('storage-open', {
                                            originalErrorMessage:
                                                null ===
                                                    (Et = ut.target.error) ||
                                                void 0 === Et
                                                    ? void 0
                                                    : Et.message,
                                        })
                                    );
                                }),
                                ($e.onupgradeneeded = (ut) => {
                                    0 === ut.oldVersion &&
                                        ut.target.result.createObjectStore(Un, {
                                            keyPath: 'compositeKey',
                                        });
                                });
                        } catch ($e) {
                            Ie(
                                mt.create('storage-open', {
                                    originalErrorMessage: $e.message,
                                })
                            );
                        }
                    })),
                    Dn)
                );
            }
            function Ze() {
                return (Ze = (0, De.Z)(function* (Pe, Ie) {
                    const ut = (yield rr()).transaction(Un, 'readwrite'),
                        Ut = ut
                            .objectStore(Un)
                            .put({ compositeKey: Pe, value: Ie });
                    return new Promise((On, mr) => {
                        (Ut.onsuccess = (Rn) => {
                            On();
                        }),
                            (ut.onerror = (Rn) => {
                                var Gr;
                                mr(
                                    mt.create('storage-set', {
                                        originalErrorMessage:
                                            null === (Gr = Rn.target.error) ||
                                            void 0 === Gr
                                                ? void 0
                                                : Gr.message,
                                    })
                                );
                            });
                    });
                })).apply(this, arguments);
            }
            const Kt = new oe.Yd('@firebase/app-check');
            function yn(Pe, Ie) {
                return (0, G.hl)()
                    ? (function rt(Pe, Ie) {
                          return (function ze(Pe, Ie) {
                              return Ze.apply(this, arguments);
                          })(
                              (function mn(Pe) {
                                  return `${Pe.options.appId}-${Pe.name}`;
                              })(Pe),
                              Ie
                          );
                      })(Pe, Ie).catch(($e) => {
                          Kt.warn(
                              `Failed to write token to IndexedDB. Error: ${$e}`
                          );
                      })
                    : Promise.resolve();
            }
            function ue() {
                return We().enabled;
            }
            function Ee() {
                return Ke.apply(this, arguments);
            }
            function Ke() {
                return (Ke = (0, De.Z)(function* () {
                    const Pe = We();
                    if (Pe.enabled && Pe.token) return Pe.token.promise;
                    throw Error(
                        "\n            Can't get debug token in production mode.\n        "
                    );
                })).apply(this, arguments);
            }
            const Z = { error: 'UNKNOWN_ERROR' };
            function be(Pe) {
                return G.US.encodeString(JSON.stringify(Pe), !1);
            }
            function Ne(Pe) {
                return et.apply(this, arguments);
            }
            function et() {
                return (et = (0, De.Z)(function* (Pe, Ie = !1) {
                    const $e = Pe.app;
                    nt($e);
                    const ut = Fe($e);
                    let Ut,
                        Et = ut.token;
                    if (!Et) {
                        const Rn = yield ut.cachedTokenPromise;
                        Rn && Fn(Rn) && (Et = Rn);
                    }
                    if (!Ie && Et && Fn(Et)) return { token: Et.token };
                    let mr,
                        On = !1;
                    if (ue()) {
                        ut.exchangeTokenPromise ||
                            ((ut.exchangeTokenPromise = xt(
                                rn($e, yield Ee()),
                                Pe.heartbeatServiceProvider
                            ).then(
                                (Gr) => ((ut.exchangeTokenPromise = void 0), Gr)
                            )),
                            (On = !0));
                        const Rn = yield ut.exchangeTokenPromise;
                        return (
                            yield yn($e, Rn),
                            je(
                                $e,
                                Object.assign(Object.assign({}, ut), {
                                    token: Rn,
                                })
                            ),
                            { token: Rn.token }
                        );
                    }
                    try {
                        ut.exchangeTokenPromise ||
                            ((ut.exchangeTokenPromise = ut.provider
                                .getToken()
                                .then(
                                    (Rn) => (
                                        (ut.exchangeTokenPromise = void 0), Rn
                                    )
                                )),
                            (On = !0)),
                            (Et = yield ut.exchangeTokenPromise);
                    } catch (Rn) {
                        'appCheck/throttled' === Rn.code
                            ? Kt.warn(Rn.message)
                            : Kt.error(Rn),
                            (Ut = Rn);
                    }
                    return (
                        Et
                            ? ((mr = { token: Et.token }),
                              je(
                                  $e,
                                  Object.assign(Object.assign({}, ut), {
                                      token: Et,
                                  })
                              ),
                              yield yn($e, Et))
                            : (mr = Le(Ut)),
                        On && xn($e, mr),
                        mr
                    );
                })).apply(this, arguments);
            }
            function St(Pe, Ie) {
                const $e = Fe(Pe),
                    ut = $e.tokenObservers.filter((Et) => Et.next !== Ie);
                0 === ut.length &&
                    $e.tokenRefresher &&
                    $e.tokenRefresher.isRunning() &&
                    $e.tokenRefresher.stop(),
                    je(
                        Pe,
                        Object.assign(Object.assign({}, $e), {
                            tokenObservers: ut,
                        })
                    );
            }
            function Rt(Pe) {
                const { app: Ie } = Pe,
                    $e = Fe(Ie);
                let ut = $e.tokenRefresher;
                ut ||
                    ((ut = (function un(Pe) {
                        const { app: Ie } = Pe;
                        return new gt(
                            (0, De.Z)(function* () {
                                let ut;
                                if (
                                    ((ut = Fe(Ie).token
                                        ? yield Ne(Pe, !0)
                                        : yield Ne(Pe)),
                                    ut.error)
                                )
                                    throw ut.error;
                            }),
                            () => !0,
                            () => {
                                const $e = Fe(Ie);
                                if ($e.token) {
                                    let ut =
                                        $e.token.issuedAtTimeMillis +
                                        0.5 *
                                            ($e.token.expireTimeMillis -
                                                $e.token.issuedAtTimeMillis) +
                                        3e5;
                                    return (
                                        (ut = Math.min(
                                            ut,
                                            $e.token.expireTimeMillis - 3e5
                                        )),
                                        Math.max(0, ut - Date.now())
                                    );
                                }
                                return 0;
                            },
                            3e4,
                            96e4
                        );
                    })(Pe)),
                    je(
                        Ie,
                        Object.assign(Object.assign({}, $e), {
                            tokenRefresher: ut,
                        })
                    )),
                    !ut.isRunning() &&
                        $e.isTokenAutoRefreshEnabled &&
                        ut.start();
            }
            function xn(Pe, Ie) {
                const $e = Fe(Pe).tokenObservers;
                for (const ut of $e)
                    try {
                        'EXTERNAL' === ut.type && null != Ie.error
                            ? ut.error(Ie.error)
                            : ut.next(Ie);
                    } catch (Et) {}
            }
            function Fn(Pe) {
                return Pe.expireTimeMillis - Date.now() > 0;
            }
            function Le(Pe) {
                return { token: be(Z), error: Pe };
            }
            class se {
                constructor(Ie, $e) {
                    (this.app = Ie), (this.heartbeatServiceProvider = $e);
                }
                _delete() {
                    const { tokenObservers: Ie } = Fe(this.app);
                    for (const $e of Ie) St(this.app, $e.next);
                    return Promise.resolve();
                }
            }
            const Qe = 'app-check-internal';
            !(function xe() {
                (0, R._registerComponent)(
                    new te.wA(
                        'app-check',
                        (Pe) =>
                            (function X(Pe, Ie) {
                                return new se(Pe, Ie);
                            })(
                                Pe.getProvider('app').getImmediate(),
                                Pe.getProvider('heartbeat')
                            ),
                        'PUBLIC'
                    )
                        .setInstantiationMode('EXPLICIT')
                        .setInstanceCreatedCallback((Pe, Ie, $e) => {
                            Pe.getProvider(Qe).initialize();
                        })
                ),
                    (0, R._registerComponent)(
                        new te.wA(
                            Qe,
                            (Pe) =>
                                (function Se(Pe) {
                                    return {
                                        getToken: (Ie) => Ne(Pe, Ie),
                                        addTokenListener: (Ie) =>
                                            (function Ct(Pe, Ie, $e, ut) {
                                                const { app: Et } = Pe,
                                                    Ut = Fe(Et),
                                                    On = {
                                                        next: $e,
                                                        error: ut,
                                                        type: Ie,
                                                    };
                                                if (
                                                    (je(
                                                        Et,
                                                        Object.assign(
                                                            Object.assign(
                                                                {},
                                                                Ut
                                                            ),
                                                            {
                                                                tokenObservers:
                                                                    [
                                                                        ...Ut.tokenObservers,
                                                                        On,
                                                                    ],
                                                            }
                                                        )
                                                    ),
                                                    Ut.token && Fn(Ut.token))
                                                ) {
                                                    const mr = Ut.token;
                                                    Promise.resolve()
                                                        .then(() => {
                                                            $e({
                                                                token: mr.token,
                                                            }),
                                                                Rt(Pe);
                                                        })
                                                        .catch(() => {});
                                                }
                                                Ut.cachedTokenPromise.then(() =>
                                                    Rt(Pe)
                                                );
                                            })(Pe, 'INTERNAL', Ie),
                                        removeTokenListener: (Ie) =>
                                            St(Pe.app, Ie),
                                    };
                                })(Pe.getProvider('app-check').getImmediate()),
                            'PUBLIC'
                        ).setInstantiationMode('EXPLICIT')
                    ),
                    (0, R.registerVersion)('@firebase/app-check', '0.5.8');
            })();
            class _t {
                constructor() {
                    return (0, s.vb)('app-check');
                }
            }
            'undefined' != typeof window && window;
        },
        3385: (de, Y, f) => {
            f.d(Y, { zQ: () => Fe, ww: () => je });
            var s = f(5e3),
                m = f(7579),
                L = f(9646),
                k = f(8306),
                T = f(8996),
                S = f(6451),
                O = f(3900),
                N = f(576);
            function U(We, ke) {
                return (0, N.m)(ke)
                    ? (0, O.w)(() => We, ke)
                    : (0, O.w)(() => We);
            }
            var w = f(5363),
                F = f(4004),
                K = f(4782),
                fe = f(590),
                _e = f(9468),
                Re = f(9300),
                Oe = f(6351),
                pe = f(2011),
                J = f(9808),
                Me = f(440),
                he = f(127);
            const R = new s.OlP('angularfire2.auth.use-emulator'),
                te = new s.OlP('angularfire2.auth.settings'),
                G = new s.OlP('angularfire2.auth.tenant-id'),
                oe = new s.OlP('angularfire2.auth.langugage-code'),
                re = new s.OlP('angularfire2.auth.use-device-language'),
                ne = new s.OlP('angularfire.auth.persistence');
            let Fe = (() => {
                    class We {
                        constructor(
                            pt,
                            Lt,
                            hn,
                            yt,
                            Ot,
                            gt,
                            Pt,
                            It,
                            mt,
                            $t,
                            nt,
                            At
                        ) {
                            const He = new m.x(),
                                st = (0, L.of)(void 0).pipe(
                                    (0, w.Q)(Ot.outsideAngular),
                                    (0, O.w)(() =>
                                        yt.runOutsideAngular(() =>
                                            Promise.all([
                                                f.e(592),
                                                f.e(775),
                                            ]).then(f.bind(f, 8775))
                                        )
                                    ),
                                    (0, F.U)(() => (0, pe.on)(pt, yt, Lt)),
                                    (0, F.U)((xt) =>
                                        ((We, ke, pt, Lt, hn, yt, Ot, gt) =>
                                            (0, pe.cc)(
                                                `${We.name}.auth`,
                                                'AngularFireAuth',
                                                We.name,
                                                () => {
                                                    const Pt =
                                                        ke.runOutsideAngular(
                                                            () => We.auth()
                                                        );
                                                    if (
                                                        (pt &&
                                                            Pt.useEmulator(
                                                                ...pt
                                                            ),
                                                        Lt &&
                                                            (Pt.tenantId = Lt),
                                                        (Pt.languageCode = hn),
                                                        yt &&
                                                            Pt.useDeviceLanguage(),
                                                        Ot)
                                                    )
                                                        for (const [
                                                            It,
                                                            mt,
                                                        ] of Object.entries(Ot))
                                                            Pt.settings[It] =
                                                                mt;
                                                    return (
                                                        gt &&
                                                            Pt.setPersistence(
                                                                gt
                                                            ),
                                                        Pt
                                                    );
                                                },
                                                [pt, Lt, hn, yt, Ot, gt]
                                            ))(xt, yt, gt, It, mt, $t, Pt, nt)
                                    ),
                                    (0, K.d)({ bufferSize: 1, refCount: !1 })
                                );
                            if ((0, J.PM)(hn))
                                this.authState =
                                    this.user =
                                    this.idToken =
                                    this.idTokenResult =
                                    this.credential =
                                        (0, L.of)(null);
                            else {
                                st.pipe((0, fe.P)()).subscribe();
                                const Qt = st.pipe(
                                        (0, O.w)((rn) =>
                                            rn.getRedirectResult().then(
                                                (gn) => gn,
                                                () => null
                                            )
                                        ),
                                        Oe.iC,
                                        (0, K.d)({
                                            bufferSize: 1,
                                            refCount: !1,
                                        })
                                    ),
                                    ln = st.pipe(
                                        (0, O.w)(
                                            (rn) =>
                                                new k.y((gn) => ({
                                                    unsubscribe:
                                                        yt.runOutsideAngular(
                                                            () =>
                                                                rn.onAuthStateChanged(
                                                                    (Nt) =>
                                                                        gn.next(
                                                                            Nt
                                                                        ),
                                                                    (Nt) =>
                                                                        gn.error(
                                                                            Nt
                                                                        ),
                                                                    () =>
                                                                        gn.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    ),
                                    Bn = st.pipe(
                                        (0, O.w)(
                                            (rn) =>
                                                new k.y((gn) => ({
                                                    unsubscribe:
                                                        yt.runOutsideAngular(
                                                            () =>
                                                                rn.onIdTokenChanged(
                                                                    (Nt) =>
                                                                        gn.next(
                                                                            Nt
                                                                        ),
                                                                    (Nt) =>
                                                                        gn.error(
                                                                            Nt
                                                                        ),
                                                                    () =>
                                                                        gn.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    );
                                (this.authState = Qt.pipe(
                                    U(ln),
                                    (0, _e.R)(Ot.outsideAngular),
                                    (0, w.Q)(Ot.insideAngular)
                                )),
                                    (this.user = Qt.pipe(
                                        U(Bn),
                                        (0, _e.R)(Ot.outsideAngular),
                                        (0, w.Q)(Ot.insideAngular)
                                    )),
                                    (this.idToken = this.user.pipe(
                                        (0, O.w)((rn) =>
                                            rn
                                                ? (0, T.D)(rn.getIdToken())
                                                : (0, L.of)(null)
                                        )
                                    )),
                                    (this.idTokenResult = this.user.pipe(
                                        (0, O.w)((rn) =>
                                            rn
                                                ? (0, T.D)(
                                                      rn.getIdTokenResult()
                                                  )
                                                : (0, L.of)(null)
                                        )
                                    )),
                                    (this.credential = (0, S.T)(
                                        Qt,
                                        He,
                                        this.authState.pipe(
                                            (0, Re.h)((rn) => !rn)
                                        )
                                    ).pipe(
                                        (0, F.U)((rn) =>
                                            (null == rn ? void 0 : rn.user)
                                                ? rn
                                                : null
                                        ),
                                        (0, _e.R)(Ot.outsideAngular),
                                        (0, w.Q)(Ot.insideAngular)
                                    ));
                            }
                            return (0, pe.pX)(this, st, yt, {
                                spy: {
                                    apply: (xt, Qt, ln) => {
                                        (xt.startsWith('signIn') ||
                                            xt.startsWith('createUser')) &&
                                            ln.then((Bn) => He.next(Bn));
                                    },
                                },
                            });
                        }
                    }
                    return (
                        (We.ɵfac = function (pt) {
                            return new (pt || We)(
                                s.LFG(pe.Dh),
                                s.LFG(pe.xv, 8),
                                s.LFG(s.Lbi),
                                s.LFG(s.R0b),
                                s.LFG(Oe.HU),
                                s.LFG(R, 8),
                                s.LFG(te, 8),
                                s.LFG(G, 8),
                                s.LFG(oe, 8),
                                s.LFG(re, 8),
                                s.LFG(ne, 8),
                                s.LFG(Me.nm, 8)
                            );
                        }),
                        (We.ɵprov = s.Yz7({
                            token: We,
                            factory: We.ɵfac,
                            providedIn: 'any',
                        })),
                        We
                    );
                })(),
                je = (() => {
                    class We {
                        constructor() {
                            he.Z.registerVersion(
                                'angularfire',
                                Oe.q4.full,
                                'auth-compat'
                            );
                        }
                    }
                    return (
                        (We.ɵfac = function (pt) {
                            return new (pt || We)();
                        }),
                        (We.ɵmod = s.oAB({ type: We })),
                        (We.ɵinj = s.cJS({ providers: [Fe] })),
                        We
                    );
                })();
        },
        2228: (de, Y, f) => {
            f.d(Y, { Qv: () => pe, Wq: () => Re, jQ: () => fe, l4: () => Oe });
            var s = f(5e3),
                m = f(9646),
                L = f(8996),
                k = f(5363),
                T = f(3900),
                S = f(4004),
                O = f(4782),
                N = f(6351),
                U = f(2011),
                w = f(440),
                F = f(127);
            const fe = new s.OlP('angularfire2.functions.origin'),
                _e = new s.OlP('angularfire2.functions.region'),
                Re = new s.OlP('angularfire2.functions.use-emulator');
            let Oe = (() => {
                    class J {
                        constructor(he, De, R, te, G, oe, re, ne) {
                            const we = re,
                                Fe = (0, m.of)(void 0).pipe(
                                    (0, k.Q)(te.outsideAngular),
                                    (0, T.w)(() =>
                                        f.e(568).then(f.bind(f, 7568))
                                    ),
                                    (0, S.U)(() => (0, U.on)(he, R, De)),
                                    (0, S.U)((je) =>
                                        (0, U.cc)(
                                            `${je.name}.functions.${G || oe}`,
                                            'AngularFireFunctions',
                                            je.name,
                                            () => {
                                                let We;
                                                if (G && oe)
                                                    throw new Error(
                                                        "REGION and ORIGIN can't be used at the same time."
                                                    );
                                                return (
                                                    (We = je.functions(
                                                        G || oe || void 0
                                                    )),
                                                    we && We.useEmulator(...we),
                                                    We
                                                );
                                            },
                                            [G, oe, we]
                                        )
                                    ),
                                    (0, O.d)({ bufferSize: 1, refCount: !1 })
                                );
                            return (
                                (this.httpsCallable = (je, We) => (ke) =>
                                    (0, L.D)(Fe).pipe(
                                        (0, k.Q)(te.insideAngular),
                                        (0, T.w)((pt) =>
                                            pt.httpsCallable(je, We)(ke)
                                        ),
                                        (0, S.U)((pt) => pt.data)
                                    )),
                                (0, U.pX)(this, Fe, R)
                            );
                        }
                    }
                    return (
                        (J.ɵfac = function (he) {
                            return new (he || J)(
                                s.LFG(U.Dh),
                                s.LFG(U.xv, 8),
                                s.LFG(s.R0b),
                                s.LFG(N.HU),
                                s.LFG(_e, 8),
                                s.LFG(fe, 8),
                                s.LFG(Re, 8),
                                s.LFG(w.nm, 8)
                            );
                        }),
                        (J.ɵprov = s.Yz7({
                            token: J,
                            factory: J.ɵfac,
                            providedIn: 'any',
                        })),
                        J
                    );
                })(),
                pe = (() => {
                    class J {
                        constructor() {
                            F.Z.registerVersion(
                                'angularfire',
                                N.q4.full,
                                'fn-compat'
                            );
                        }
                    }
                    return (
                        (J.ɵfac = function (he) {
                            return new (he || J)();
                        }),
                        (J.ɵmod = s.oAB({ type: J })),
                        (J.ɵinj = s.cJS({ providers: [Oe] })),
                        J
                    );
                })();
        },
        2011: (de, Y, f) => {
            f.d(Y, {
                Dh: () => N,
                GT: () => S,
                cc: () => _e,
                hO: () => fe,
                on: () => w,
                pX: () => T,
                xv: () => U,
            });
            var s = f(5e3),
                m = f(127),
                L = f(6351);
            de = f.hmd(de);
            const k = ['ngOnDestroy'],
                T = (J, Me, he, De = {}) =>
                    new Proxy(J, {
                        get: (R, te) =>
                            he.runOutsideAngular(() => {
                                var G;
                                if (J[te])
                                    return (
                                        (null ===
                                            (G =
                                                null == De ? void 0 : De.spy) ||
                                        void 0 === G
                                            ? void 0
                                            : G.get) && De.spy.get(te, J[te]),
                                        J[te]
                                    );
                                if (k.indexOf(te) > -1) return () => {};
                                const oe = Me.toPromise().then((re) => {
                                    const ne = re && re[te];
                                    return 'function' == typeof ne
                                        ? ne.bind(re)
                                        : ne && ne.then
                                        ? ne.then((we) => he.run(() => we))
                                        : he.run(() => ne);
                                });
                                return new Proxy(() => {}, {
                                    get: (re, ne) => oe[ne],
                                    apply: (re, ne, we) =>
                                        oe.then((Fe) => {
                                            var je;
                                            const We = Fe && Fe(...we);
                                            return (
                                                (null ===
                                                    (je =
                                                        null == De
                                                            ? void 0
                                                            : De.spy) ||
                                                void 0 === je
                                                    ? void 0
                                                    : je.apply) &&
                                                    De.spy.apply(te, we, We),
                                                We
                                            );
                                        }),
                                });
                            }),
                    }),
                S = (J, Me) => {
                    Me.forEach((he) => {
                        Object.getOwnPropertyNames(he.prototype || he).forEach(
                            (De) => {
                                Object.defineProperty(
                                    J.prototype,
                                    De,
                                    Object.getOwnPropertyDescriptor(
                                        he.prototype || he,
                                        De
                                    )
                                );
                            }
                        );
                    });
                };
            class O {
                constructor(Me) {
                    return Me;
                }
            }
            const N = new s.OlP('angularfire2.app.options'),
                U = new s.OlP('angularfire2.app.name');
            function w(J, Me, he) {
                const R = ('object' == typeof he && he) || {};
                R.name = R.name || ('string' == typeof he && he) || '[DEFAULT]';
                const G =
                    m.Z.apps.filter((oe) => oe && oe.name === R.name)[0] ||
                    Me.runOutsideAngular(() => m.Z.initializeApp(J, R));
                try {
                    JSON.stringify(J) !== JSON.stringify(G.options) &&
                        F(
                            'error',
                            `${
                                G.name
                            } Firebase App already initialized with different options${
                                de.hot
                                    ? ', you may need to reload as Firebase is not HMR aware.'
                                    : '.'
                            }`
                        );
                } catch (oe) {}
                return new O(G);
            }
            const F = (J, ...Me) => {
                    (0, s.X6Q)() &&
                        'undefined' != typeof console &&
                        console[J](...Me);
                },
                K = {
                    provide: O,
                    useFactory: w,
                    deps: [N, s.R0b, [new s.FiY(), U]],
                };
            let fe = (() => {
                class J {
                    constructor(he) {
                        m.Z.registerVersion('angularfire', L.q4.full, 'core'),
                            m.Z.registerVersion(
                                'angularfire',
                                L.q4.full,
                                'app-compat'
                            ),
                            m.Z.registerVersion(
                                'angular',
                                s.q4F.full,
                                he.toString()
                            );
                    }
                    static initializeApp(he, De) {
                        return {
                            ngModule: J,
                            providers: [
                                { provide: N, useValue: he },
                                { provide: U, useValue: De },
                            ],
                        };
                    }
                }
                return (
                    (J.ɵfac = function (he) {
                        return new (he || J)(s.LFG(s.Lbi));
                    }),
                    (J.ɵmod = s.oAB({ type: J })),
                    (J.ɵinj = s.cJS({ providers: [K] })),
                    J
                );
            })();
            function _e(J, Me, he, De, R) {
                const [, te, G] =
                    globalThis.ɵAngularfireInstanceCache.find(
                        (oe) => oe[0] === J
                    ) || [];
                if (te)
                    return (
                        (function Re(J, Me) {
                            try {
                                return J.toString() === Me.toString();
                            } catch (he) {
                                return J === Me;
                            }
                        })(R, G) ||
                            (pe(
                                'error',
                                `${Me} was already initialized on the ${he} Firebase App with different settings.${
                                    Oe
                                        ? ' You may need to reload as Firebase is not HMR aware.'
                                        : ''
                                }`
                            ),
                            pe('warn', { is: R, was: G })),
                        te
                    );
                {
                    const oe = De();
                    return (
                        globalThis.ɵAngularfireInstanceCache.push([J, oe, R]),
                        oe
                    );
                }
            }
            const Oe = !!de.hot,
                pe = (J, ...Me) => {
                    (0, s.X6Q)() &&
                        'undefined' != typeof console &&
                        console[J](...Me);
                };
            globalThis.ɵAngularfireInstanceCache ||
                (globalThis.ɵAngularfireInstanceCache = []);
        },
        6351: (de, Y, f) => {
            f.d(Y, {
                q4: () => uo,
                iC: () => Oa,
                HU: () => to,
                vb: () => Gc,
                JM: () => Wc,
            });
            var s = f(5e3),
                m = f(5867),
                L = f(5861),
                k = f(9681),
                T = f(2090),
                S = f(4859),
                O = f(1877),
                N = f(8766);
            const U = '@firebase/installations',
                w = '0.5.9',
                K = `w:${w}`,
                fe = 'FIS_v2',
                Me = new T.LL('installations', 'Installations', {
                    'missing-app-config-values':
                        'Missing App configuration value: "{$valueName}"',
                    'not-registered':
                        'Firebase Installation is not registered.',
                    'installation-not-found':
                        'Firebase Installation not found.',
                    'request-failed':
                        '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
                    'app-offline':
                        'Could not process request. Application offline.',
                    'delete-pending-registration':
                        "Can't delete installation while there is a pending registration request.",
                });
            function he(v) {
                return v instanceof T.ZR && v.code.includes('request-failed');
            }
            function De({ projectId: v }) {
                return `https://firebaseinstallations.googleapis.com/v1/projects/${v}/installations`;
            }
            function R(v) {
                return {
                    token: v.token,
                    requestStatus: 2,
                    expiresIn: Fe(v.expiresIn),
                    creationTime: Date.now(),
                };
            }
            function te(v, I) {
                return G.apply(this, arguments);
            }
            function G() {
                return (G = (0, L.Z)(function* (v, I) {
                    const le = (yield I.json()).error;
                    return Me.create('request-failed', {
                        requestName: v,
                        serverCode: le.code,
                        serverMessage: le.message,
                        serverStatus: le.status,
                    });
                })).apply(this, arguments);
            }
            function oe({ apiKey: v }) {
                return new Headers({
                    'Content-Type': 'application/json',
                    Accept: 'application/json',
                    'x-goog-api-key': v,
                });
            }
            function re(v, { refreshToken: I }) {
                const W = oe(v);
                return (
                    W.append(
                        'Authorization',
                        (function je(v) {
                            return `${fe} ${v}`;
                        })(I)
                    ),
                    W
                );
            }
            function ne(v) {
                return we.apply(this, arguments);
            }
            function we() {
                return (we = (0, L.Z)(function* (v) {
                    const I = yield v();
                    return I.status >= 500 && I.status < 600 ? v() : I;
                })).apply(this, arguments);
            }
            function Fe(v) {
                return Number(v.replace('s', '000'));
            }
            function We(v, I) {
                return ke.apply(this, arguments);
            }
            function ke() {
                return (ke = (0, L.Z)(function* (
                    { appConfig: v, heartbeatServiceProvider: I },
                    { fid: W }
                ) {
                    const le = De(v),
                        Be = oe(v),
                        tt = I.getImmediate({ optional: !0 });
                    if (tt) {
                        const bn = yield tt.getHeartbeatsHeader();
                        bn && Be.append('x-firebase-client', bn);
                    }
                    const Jt = {
                            method: 'POST',
                            headers: Be,
                            body: JSON.stringify({
                                fid: W,
                                authVersion: fe,
                                appId: v.appId,
                                sdkVersion: K,
                            }),
                        },
                        En = yield ne(() => fetch(le, Jt));
                    if (En.ok) {
                        const bn = yield En.json();
                        return {
                            fid: bn.fid || W,
                            registrationStatus: 2,
                            refreshToken: bn.refreshToken,
                            authToken: R(bn.authToken),
                        };
                    }
                    throw yield te('Create Installation', En);
                })).apply(this, arguments);
            }
            function pt(v) {
                return new Promise((I) => {
                    setTimeout(I, v);
                });
            }
            const hn = /^[cdef][\w-]{21}$/;
            function Ot() {
                try {
                    const v = new Uint8Array(17);
                    (self.crypto || self.msCrypto).getRandomValues(v),
                        (v[0] = 112 + (v[0] % 16));
                    const W = (function gt(v) {
                        return (function Lt(v) {
                            return btoa(String.fromCharCode(...v))
                                .replace(/\+/g, '-')
                                .replace(/\//g, '_');
                        })(v).substr(0, 22);
                    })(v);
                    return hn.test(W) ? W : '';
                } catch (v) {
                    return '';
                }
            }
            function Pt(v) {
                return `${v.appName}!${v.appId}`;
            }
            const It = new Map();
            function mt(v, I) {
                const W = Pt(v);
                At(W, I),
                    (function He(v, I) {
                        const W = (function xt() {
                            return (
                                !st &&
                                    'BroadcastChannel' in self &&
                                    ((st = new BroadcastChannel(
                                        '[Firebase] FID Change'
                                    )),
                                    (st.onmessage = (v) => {
                                        At(v.data.key, v.data.fid);
                                    })),
                                st
                            );
                        })();
                        W && W.postMessage({ key: v, fid: I }),
                            (function Qt() {
                                0 === It.size &&
                                    st &&
                                    (st.close(), (st = null));
                            })();
                    })(W, I);
            }
            function At(v, I) {
                const W = It.get(v);
                if (W) for (const le of W) le(I);
            }
            let st = null;
            const rn = 'firebase-installations-store';
            let gn = null;
            function Nt() {
                return (
                    gn ||
                        (gn = (0, N.X3)('firebase-installations-database', 1, {
                            upgrade: (v, I) => {
                                0 === I && v.createObjectStore(rn);
                            },
                        })),
                    gn
                );
            }
            function Un(v, I) {
                return vn.apply(this, arguments);
            }
            function vn() {
                return (vn = (0, L.Z)(function* (v, I) {
                    const W = Pt(v),
                        Be = (yield Nt()).transaction(rn, 'readwrite'),
                        tt = Be.objectStore(rn),
                        Tt = yield tt.get(W);
                    return (
                        yield tt.put(I, W),
                        yield Be.done,
                        (!Tt || Tt.fid !== I.fid) && mt(v, I.fid),
                        I
                    );
                })).apply(this, arguments);
            }
            function Dn(v) {
                return rr.apply(this, arguments);
            }
            function rr() {
                return (rr = (0, L.Z)(function* (v) {
                    const I = Pt(v),
                        le = (yield Nt()).transaction(rn, 'readwrite');
                    yield le.objectStore(rn).delete(I), yield le.done;
                })).apply(this, arguments);
            }
            function Kn(v, I) {
                return rt.apply(this, arguments);
            }
            function rt() {
                return (rt = (0, L.Z)(function* (v, I) {
                    const W = Pt(v),
                        Be = (yield Nt()).transaction(rn, 'readwrite'),
                        tt = Be.objectStore(rn),
                        Tt = yield tt.get(W),
                        Jt = I(Tt);
                    return (
                        void 0 === Jt
                            ? yield tt.delete(W)
                            : yield tt.put(Jt, W),
                        yield Be.done,
                        Jt && (!Tt || Tt.fid !== Jt.fid) && mt(v, Jt.fid),
                        Jt
                    );
                })).apply(this, arguments);
            }
            function ge(v) {
                return Ae.apply(this, arguments);
            }
            function Ae() {
                return (Ae = (0, L.Z)(function* (v) {
                    let I;
                    const W = yield Kn(v.appConfig, (le) => {
                        const Be = ze(le),
                            tt = Ze(v, Be);
                        return (
                            (I = tt.registrationPromise), tt.installationEntry
                        );
                    });
                    return '' === W.fid
                        ? { installationEntry: yield I }
                        : { installationEntry: W, registrationPromise: I };
                })).apply(this, arguments);
            }
            function ze(v) {
                return Gn(v || { fid: Ot(), registrationStatus: 0 });
            }
            function Ze(v, I) {
                if (0 === I.registrationStatus) {
                    if (!navigator.onLine)
                        return {
                            installationEntry: I,
                            registrationPromise: Promise.reject(
                                Me.create('app-offline')
                            ),
                        };
                    const W = {
                            fid: I.fid,
                            registrationStatus: 1,
                            registrationTime: Date.now(),
                        },
                        le = (function lt(v, I) {
                            return bt.apply(this, arguments);
                        })(v, W);
                    return { installationEntry: W, registrationPromise: le };
                }
                return 1 === I.registrationStatus
                    ? { installationEntry: I, registrationPromise: mn(v) }
                    : { installationEntry: I };
            }
            function bt() {
                return (bt = (0, L.Z)(function* (v, I) {
                    try {
                        const W = yield We(v, I);
                        return Un(v.appConfig, W);
                    } catch (W) {
                        throw (
                            (he(W) && 409 === W.customData.serverCode
                                ? yield Dn(v.appConfig)
                                : yield Un(v.appConfig, {
                                      fid: I.fid,
                                      registrationStatus: 0,
                                  }),
                            W)
                        );
                    }
                })).apply(this, arguments);
            }
            function mn(v) {
                return Kt.apply(this, arguments);
            }
            function Kt() {
                return (Kt = (0, L.Z)(function* (v) {
                    let I = yield Wt(v.appConfig);
                    for (; 1 === I.registrationStatus; )
                        yield pt(100), (I = yield Wt(v.appConfig));
                    if (0 === I.registrationStatus) {
                        const {
                            installationEntry: W,
                            registrationPromise: le,
                        } = yield ge(v);
                        return le || W;
                    }
                    return I;
                })).apply(this, arguments);
            }
            function Wt(v) {
                return Kn(v, (I) => {
                    if (!I) throw Me.create('installation-not-found');
                    return Gn(I);
                });
            }
            function Gn(v) {
                return (function yn(v) {
                    return (
                        1 === v.registrationStatus &&
                        v.registrationTime + 1e4 < Date.now()
                    );
                })(v)
                    ? { fid: v.fid, registrationStatus: 0 }
                    : v;
            }
            function Mn(v, I) {
                return q.apply(this, arguments);
            }
            function q() {
                return (q = (0, L.Z)(function* (
                    { appConfig: v, heartbeatServiceProvider: I },
                    W
                ) {
                    const le = ue(v, W),
                        Be = re(v, W),
                        tt = I.getImmediate({ optional: !0 });
                    if (tt) {
                        const bn = yield tt.getHeartbeatsHeader();
                        bn && Be.append('x-firebase-client', bn);
                    }
                    const Jt = {
                            method: 'POST',
                            headers: Be,
                            body: JSON.stringify({
                                installation: { sdkVersion: K, appId: v.appId },
                            }),
                        },
                        En = yield ne(() => fetch(le, Jt));
                    if (En.ok) return R(yield En.json());
                    throw yield te('Generate Auth Token', En);
                })).apply(this, arguments);
            }
            function ue(v, { fid: I }) {
                return `${De(v)}/${I}/authTokens:generate`;
            }
            function Ee(v) {
                return Ke.apply(this, arguments);
            }
            function Ke() {
                return (Ke = (0, L.Z)(function* (v, I = !1) {
                    let W;
                    const le = yield Kn(v.appConfig, (tt) => {
                        if (!Ct(tt)) throw Me.create('not-registered');
                        const Tt = tt.authToken;
                        if (!I && St(Tt)) return tt;
                        if (1 === Tt.requestStatus) return (W = ae(v, I)), tt;
                        {
                            if (!navigator.onLine)
                                throw Me.create('app-offline');
                            const Jt = un(tt);
                            return (W = Ne(v, Jt)), Jt;
                        }
                    });
                    return W ? yield W : le.authToken;
                })).apply(this, arguments);
            }
            function ae(v, I) {
                return Z.apply(this, arguments);
            }
            function Z() {
                return (Z = (0, L.Z)(function* (v, I) {
                    let W = yield be(v.appConfig);
                    for (; 1 === W.authToken.requestStatus; )
                        yield pt(100), (W = yield be(v.appConfig));
                    const le = W.authToken;
                    return 0 === le.requestStatus ? Ee(v, I) : le;
                })).apply(this, arguments);
            }
            function be(v) {
                return Kn(v, (I) => {
                    if (!Ct(I)) throw Me.create('not-registered');
                    return (function xn(v) {
                        return (
                            1 === v.requestStatus &&
                            v.requestTime + 1e4 < Date.now()
                        );
                    })(I.authToken)
                        ? Object.assign(Object.assign({}, I), {
                              authToken: { requestStatus: 0 },
                          })
                        : I;
                });
            }
            function Ne(v, I) {
                return et.apply(this, arguments);
            }
            function et() {
                return (et = (0, L.Z)(function* (v, I) {
                    try {
                        const W = yield Mn(v, I),
                            le = Object.assign(Object.assign({}, I), {
                                authToken: W,
                            });
                        return yield Un(v.appConfig, le), W;
                    } catch (W) {
                        if (
                            !he(W) ||
                            (401 !== W.customData.serverCode &&
                                404 !== W.customData.serverCode)
                        ) {
                            const le = Object.assign(Object.assign({}, I), {
                                authToken: { requestStatus: 0 },
                            });
                            yield Un(v.appConfig, le);
                        } else yield Dn(v.appConfig);
                        throw W;
                    }
                })).apply(this, arguments);
            }
            function Ct(v) {
                return void 0 !== v && 2 === v.registrationStatus;
            }
            function St(v) {
                return (
                    2 === v.requestStatus &&
                    !(function Rt(v) {
                        const I = Date.now();
                        return (
                            I < v.creationTime ||
                            v.creationTime + v.expiresIn < I + 36e5
                        );
                    })(v)
                );
            }
            function un(v) {
                const I = { requestStatus: 1, requestTime: Date.now() };
                return Object.assign(Object.assign({}, v), { authToken: I });
            }
            function Le() {
                return (Le = (0, L.Z)(function* (v) {
                    const I = v,
                        { installationEntry: W, registrationPromise: le } =
                            yield ge(I);
                    return (
                        le
                            ? le.catch(console.error)
                            : Ee(I).catch(console.error),
                        W.fid
                    );
                })).apply(this, arguments);
            }
            function X() {
                return (X = (0, L.Z)(function* (v, I = !1) {
                    const W = v;
                    return yield Se(W), (yield Ee(W, I)).token;
                })).apply(this, arguments);
            }
            function Se(v) {
                return Ye.apply(this, arguments);
            }
            function Ye() {
                return (Ye = (0, L.Z)(function* (v) {
                    const { registrationPromise: I } = yield ge(v);
                    I && (yield I);
                })).apply(this, arguments);
            }
            function Yn(v) {
                return Me.create('missing-app-config-values', { valueName: v });
            }
            const or = 'installations',
                Xt = (v) => {
                    const I = v.getProvider('app').getImmediate(),
                        W = (function Qn(v) {
                            if (!v || !v.options) throw Yn('App Configuration');
                            if (!v.name) throw Yn('App Name');
                            const I = ['projectId', 'apiKey', 'appId'];
                            for (const W of I) if (!v.options[W]) throw Yn(W);
                            return {
                                appName: v.name,
                                projectId: v.options.projectId,
                                apiKey: v.options.apiKey,
                                appId: v.options.appId,
                            };
                        })(I);
                    return {
                        app: I,
                        appConfig: W,
                        heartbeatServiceProvider: (0, k._getProvider)(
                            I,
                            'heartbeat'
                        ),
                        _delete: () => Promise.resolve(),
                    };
                },
                Cn = (v) => {
                    const I = v.getProvider('app').getImmediate(),
                        W = (0, k._getProvider)(I, or).getImmediate();
                    return {
                        getId: () =>
                            (function Fn(v) {
                                return Le.apply(this, arguments);
                            })(W),
                        getToken: (Be) =>
                            (function se(v) {
                                return X.apply(this, arguments);
                            })(W, Be),
                    };
                };
            (function cr() {
                (0, k._registerComponent)(new S.wA(or, Xt, 'PUBLIC')),
                    (0, k._registerComponent)(
                        new S.wA('installations-internal', Cn, 'PRIVATE')
                    );
            })(),
                (0, k.registerVersion)(U, w),
                (0, k.registerVersion)(U, w, 'esm2017');
            const yr = '@firebase/remote-config',
                qn = new T.LL('remoteconfig', 'Remote Config', {
                    'registration-window':
                        'Undefined window object. This SDK only supports usage in a browser environment.',
                    'registration-project-id':
                        'Undefined project identifier. Check Firebase app initialization.',
                    'registration-api-key':
                        'Undefined API key. Check Firebase app initialization.',
                    'registration-app-id':
                        'Undefined app identifier. Check Firebase app initialization.',
                    'storage-open':
                        'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                    'storage-get':
                        'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                    'storage-set':
                        'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                    'storage-delete':
                        'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',
                    'fetch-client-network':
                        'Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                    'fetch-timeout':
                        'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'fetch-client-parse':
                        'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                    'fetch-status':
                        'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                    'indexed-db-unavailable':
                        'Indexed DB is not supported by current browser',
                });
            class Ui {
                constructor(I, W, le, Be) {
                    (this.client = I),
                        (this.storage = W),
                        (this.storageCache = le),
                        (this.logger = Be);
                }
                isCachedDataFresh(I, W) {
                    if (!W)
                        return (
                            this.logger.debug(
                                'Config fetch cache check. Cache unpopulated.'
                            ),
                            !1
                        );
                    const le = Date.now() - W,
                        Be = le <= I;
                    return (
                        this.logger.debug(
                            `Config fetch cache check. Cache age millis: ${le}. Cache max age millis (minimumFetchIntervalMillis setting): ${I}. Is cache hit: ${Be}.`
                        ),
                        Be
                    );
                }
                fetch(I) {
                    var W = this;
                    return (0, L.Z)(function* () {
                        const [le, Be] = yield Promise.all([
                            W.storage.getLastSuccessfulFetchTimestampMillis(),
                            W.storage.getLastSuccessfulFetchResponse(),
                        ]);
                        if (Be && W.isCachedDataFresh(I.cacheMaxAgeMillis, le))
                            return Be;
                        I.eTag = Be && Be.eTag;
                        const tt = yield W.client.fetch(I),
                            Tt = [
                                W.storageCache.setLastSuccessfulFetchTimestampMillis(
                                    Date.now()
                                ),
                            ];
                        return (
                            200 === tt.status &&
                                Tt.push(
                                    W.storage.setLastSuccessfulFetchResponse(tt)
                                ),
                            yield Promise.all(Tt),
                            tt
                        );
                    })();
                }
            }
            function Ci(v = navigator) {
                return (v.languages && v.languages[0]) || v.language;
            }
            class xr {
                constructor(I, W, le, Be, tt, Tt) {
                    (this.firebaseInstallations = I),
                        (this.sdkVersion = W),
                        (this.namespace = le),
                        (this.projectId = Be),
                        (this.apiKey = tt),
                        (this.appId = Tt);
                }
                fetch(I) {
                    var W = this;
                    return (0, L.Z)(function* () {
                        const [le, Be] = yield Promise.all([
                                W.firebaseInstallations.getId(),
                                W.firebaseInstallations.getToken(),
                            ]),
                            Tt = `${
                                window.FIREBASE_REMOTE_CONFIG_URL_BASE ||
                                'https://firebaseremoteconfig.googleapis.com'
                            }/v1/projects/${W.projectId}/namespaces/${
                                W.namespace
                            }:fetch?key=${W.apiKey}`,
                            Jt = {
                                'Content-Type': 'application/json',
                                'Content-Encoding': 'gzip',
                                'If-None-Match': I.eTag || '*',
                            },
                            En = {
                                sdk_version: W.sdkVersion,
                                app_instance_id: le,
                                app_instance_id_token: Be,
                                app_id: W.appId,
                                language_code: Ci(),
                            },
                            bn = {
                                method: 'POST',
                                headers: Jt,
                                body: JSON.stringify(En),
                            },
                            kn = fetch(Tt, bn),
                            wn = new Promise((Li, ro) => {
                                I.signal.addEventListener(() => {
                                    const xa = new Error(
                                        'The operation was aborted.'
                                    );
                                    (xa.name = 'AbortError'), ro(xa);
                                });
                            });
                        let Si;
                        try {
                            yield Promise.race([kn, wn]), (Si = yield kn);
                        } catch (Li) {
                            let ro = 'fetch-client-network';
                            throw (
                                ('AbortError' === Li.name &&
                                    (ro = 'fetch-timeout'),
                                qn.create(ro, {
                                    originalErrorMessage: Li.message,
                                }))
                            );
                        }
                        let Zn = Si.status;
                        const co = Si.headers.get('ETag') || void 0;
                        let Co, Ws;
                        if (200 === Si.status) {
                            let Li;
                            try {
                                Li = yield Si.json();
                            } catch (ro) {
                                throw qn.create('fetch-client-parse', {
                                    originalErrorMessage: ro.message,
                                });
                            }
                            (Co = Li.entries), (Ws = Li.state);
                        }
                        if (
                            ('INSTANCE_STATE_UNSPECIFIED' === Ws
                                ? (Zn = 500)
                                : 'NO_CHANGE' === Ws
                                ? (Zn = 304)
                                : ('NO_TEMPLATE' === Ws ||
                                      'EMPTY_CONFIG' === Ws) &&
                                  (Co = {}),
                            304 !== Zn && 200 !== Zn)
                        )
                            throw qn.create('fetch-status', { httpStatus: Zn });
                        return { status: Zn, eTag: co, config: Co };
                    })();
                }
            }
            class Pe {
                constructor(I, W) {
                    (this.client = I), (this.storage = W);
                }
                fetch(I) {
                    var W = this;
                    return (0, L.Z)(function* () {
                        const le = (yield W.storage.getThrottleMetadata()) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        };
                        return W.attemptFetch(I, le);
                    })();
                }
                attemptFetch(
                    I,
                    { throttleEndTimeMillis: W, backoffCount: le }
                ) {
                    var Be = this;
                    return (0, L.Z)(function* () {
                        yield (function Qi(v, I) {
                            return new Promise((W, le) => {
                                const Be = Math.max(I - Date.now(), 0),
                                    tt = setTimeout(W, Be);
                                v.addEventListener(() => {
                                    clearTimeout(tt),
                                        le(
                                            qn.create('fetch-throttle', {
                                                throttleEndTimeMillis: I,
                                            })
                                        );
                                });
                            });
                        })(I.signal, W);
                        try {
                            const tt = yield Be.client.fetch(I);
                            return (
                                yield Be.storage.deleteThrottleMetadata(), tt
                            );
                        } catch (tt) {
                            if (
                                !(function Vi(v) {
                                    if (!(v instanceof T.ZR && v.customData))
                                        return !1;
                                    const I = Number(v.customData.httpStatus);
                                    return (
                                        429 === I ||
                                        500 === I ||
                                        503 === I ||
                                        504 === I
                                    );
                                })(tt)
                            )
                                throw tt;
                            const Tt = {
                                throttleEndTimeMillis:
                                    Date.now() + (0, T.$s)(le),
                                backoffCount: le + 1,
                            };
                            return (
                                yield Be.storage.setThrottleMetadata(Tt),
                                Be.attemptFetch(I, Tt)
                            );
                        }
                    })();
                }
            }
            class ut {
                constructor(I, W, le, Be, tt) {
                    (this.app = I),
                        (this._client = W),
                        (this._storageCache = le),
                        (this._storage = Be),
                        (this._logger = tt),
                        (this._isInitializationComplete = !1),
                        (this.settings = {
                            fetchTimeoutMillis: 6e4,
                            minimumFetchIntervalMillis: 432e5,
                        }),
                        (this.defaultConfig = {});
                }
                get fetchTimeMillis() {
                    return (
                        this._storageCache.getLastSuccessfulFetchTimestampMillis() ||
                        -1
                    );
                }
                get lastFetchStatus() {
                    return (
                        this._storageCache.getLastFetchStatus() ||
                        'no-fetch-yet'
                    );
                }
            }
            function Et(v, I) {
                const W = v.target.error || void 0;
                return qn.create(I, { originalErrorMessage: W && W.message });
            }
            const Ut = 'app_namespace_store';
            class Gr {
                constructor(
                    I,
                    W,
                    le,
                    Be = (function Rn() {
                        return new Promise((v, I) => {
                            try {
                                const W = indexedDB.open(
                                    'firebase_remote_config',
                                    1
                                );
                                (W.onerror = (le) => {
                                    I(Et(le, 'storage-open'));
                                }),
                                    (W.onsuccess = (le) => {
                                        v(le.target.result);
                                    }),
                                    (W.onupgradeneeded = (le) => {
                                        0 === le.oldVersion &&
                                            le.target.result.createObjectStore(
                                                Ut,
                                                { keyPath: 'compositeKey' }
                                            );
                                    });
                            } catch (W) {
                                I(
                                    qn.create('storage-open', {
                                        originalErrorMessage: W,
                                    })
                                );
                            }
                        });
                    })()
                ) {
                    (this.appId = I),
                        (this.appName = W),
                        (this.namespace = le),
                        (this.openDbPromise = Be);
                }
                getLastFetchStatus() {
                    return this.get('last_fetch_status');
                }
                setLastFetchStatus(I) {
                    return this.set('last_fetch_status', I);
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.get('last_successful_fetch_timestamp_millis');
                }
                setLastSuccessfulFetchTimestampMillis(I) {
                    return this.set(
                        'last_successful_fetch_timestamp_millis',
                        I
                    );
                }
                getLastSuccessfulFetchResponse() {
                    return this.get('last_successful_fetch_response');
                }
                setLastSuccessfulFetchResponse(I) {
                    return this.set('last_successful_fetch_response', I);
                }
                getActiveConfig() {
                    return this.get('active_config');
                }
                setActiveConfig(I) {
                    return this.set('active_config', I);
                }
                getActiveConfigEtag() {
                    return this.get('active_config_etag');
                }
                setActiveConfigEtag(I) {
                    return this.set('active_config_etag', I);
                }
                getThrottleMetadata() {
                    return this.get('throttle_metadata');
                }
                setThrottleMetadata(I) {
                    return this.set('throttle_metadata', I);
                }
                deleteThrottleMetadata() {
                    return this.delete('throttle_metadata');
                }
                get(I) {
                    var W = this;
                    return (0, L.Z)(function* () {
                        const le = yield W.openDbPromise;
                        return new Promise((Be, tt) => {
                            const Jt = le
                                    .transaction([Ut], 'readonly')
                                    .objectStore(Ut),
                                En = W.createCompositeKey(I);
                            try {
                                const bn = Jt.get(En);
                                (bn.onerror = (kn) => {
                                    tt(Et(kn, 'storage-get'));
                                }),
                                    (bn.onsuccess = (kn) => {
                                        const wn = kn.target.result;
                                        Be(wn ? wn.value : void 0);
                                    });
                            } catch (bn) {
                                tt(
                                    qn.create('storage-get', {
                                        originalErrorMessage: bn && bn.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                set(I, W) {
                    var le = this;
                    return (0, L.Z)(function* () {
                        const Be = yield le.openDbPromise;
                        return new Promise((tt, Tt) => {
                            const En = Be.transaction(
                                    [Ut],
                                    'readwrite'
                                ).objectStore(Ut),
                                bn = le.createCompositeKey(I);
                            try {
                                const kn = En.put({
                                    compositeKey: bn,
                                    value: W,
                                });
                                (kn.onerror = (wn) => {
                                    Tt(Et(wn, 'storage-set'));
                                }),
                                    (kn.onsuccess = () => {
                                        tt();
                                    });
                            } catch (kn) {
                                Tt(
                                    qn.create('storage-set', {
                                        originalErrorMessage: kn && kn.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                delete(I) {
                    var W = this;
                    return (0, L.Z)(function* () {
                        const le = yield W.openDbPromise;
                        return new Promise((Be, tt) => {
                            const Jt = le
                                    .transaction([Ut], 'readwrite')
                                    .objectStore(Ut),
                                En = W.createCompositeKey(I);
                            try {
                                const bn = Jt.delete(En);
                                (bn.onerror = (kn) => {
                                    tt(Et(kn, 'storage-delete'));
                                }),
                                    (bn.onsuccess = () => {
                                        Be();
                                    });
                            } catch (bn) {
                                tt(
                                    qn.create('storage-delete', {
                                        originalErrorMessage: bn && bn.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                createCompositeKey(I) {
                    return [this.appId, this.appName, this.namespace, I].join();
                }
            }
            class _i {
                constructor(I) {
                    this.storage = I;
                }
                getLastFetchStatus() {
                    return this.lastFetchStatus;
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.lastSuccessfulFetchTimestampMillis;
                }
                getActiveConfig() {
                    return this.activeConfig;
                }
                loadFromStorage() {
                    var I = this;
                    return (0, L.Z)(function* () {
                        const W = I.storage.getLastFetchStatus(),
                            le =
                                I.storage.getLastSuccessfulFetchTimestampMillis(),
                            Be = I.storage.getActiveConfig(),
                            tt = yield W;
                        tt && (I.lastFetchStatus = tt);
                        const Tt = yield le;
                        Tt && (I.lastSuccessfulFetchTimestampMillis = Tt);
                        const Jt = yield Be;
                        Jt && (I.activeConfig = Jt);
                    })();
                }
                setLastFetchStatus(I) {
                    return (
                        (this.lastFetchStatus = I),
                        this.storage.setLastFetchStatus(I)
                    );
                }
                setLastSuccessfulFetchTimestampMillis(I) {
                    return (
                        (this.lastSuccessfulFetchTimestampMillis = I),
                        this.storage.setLastSuccessfulFetchTimestampMillis(I)
                    );
                }
                setActiveConfig(I) {
                    return (
                        (this.activeConfig = I), this.storage.setActiveConfig(I)
                    );
                }
            }
            function qi() {
                return ri.apply(this, arguments);
            }
            function ri() {
                return (ri = (0, L.Z)(function* () {
                    if (!(0, T.hl)()) return !1;
                    try {
                        return yield (0, T.eu)();
                    } catch (v) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            !(function Br() {
                (0, k._registerComponent)(
                    new S.wA(
                        'remote-config',
                        function v(I, { instanceIdentifier: W }) {
                            const le = I.getProvider('app').getImmediate(),
                                Be = I.getProvider(
                                    'installations-internal'
                                ).getImmediate();
                            if ('undefined' == typeof window)
                                throw qn.create('registration-window');
                            if (!(0, T.hl)())
                                throw qn.create('indexed-db-unavailable');
                            const {
                                projectId: tt,
                                apiKey: Tt,
                                appId: Jt,
                            } = le.options;
                            if (!tt) throw qn.create('registration-project-id');
                            if (!Tt) throw qn.create('registration-api-key');
                            if (!Jt) throw qn.create('registration-app-id');
                            const En = new Gr(
                                    Jt,
                                    le.name,
                                    (W = W || 'firebase')
                                ),
                                bn = new _i(En),
                                kn = new O.Yd(yr);
                            kn.logLevel = O.in.ERROR;
                            const wn = new xr(Be, k.SDK_VERSION, W, tt, Tt, Jt),
                                Si = new Pe(wn, En),
                                Zn = new Ui(Si, En, bn, kn),
                                co = new ut(le, Zn, bn, En, kn);
                            return (
                                (function Gt(v) {
                                    const I = (0, T.m9)(v);
                                    I._initializePromise ||
                                        (I._initializePromise = I._storageCache
                                            .loadFromStorage()
                                            .then(() => {
                                                I._isInitializationComplete =
                                                    !0;
                                            }));
                                })(co),
                                co
                            );
                        },
                        'PUBLIC'
                    ).setMultipleInstances(!0)
                ),
                    (0, k.registerVersion)(yr, '0.3.8'),
                    (0, k.registerVersion)(yr, '0.3.8', 'esm2017');
            })();
            const ji = '/firebase-messaging-sw.js',
                Zr = '/firebase-cloud-messaging-push-scope',
                Hi =
                    'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4',
                Xr = 'google.c.a.c_id',
                ei = 'google.c.a.c_l',
                cs = 'google.c.a.ts',
                zr = 'google.c.a.e';
            var ti = (() => {
                return (
                    ((v = ti || (ti = {})).PUSH_RECEIVED = 'push-received'),
                    (v.NOTIFICATION_CLICKED = 'notification-clicked'),
                    ti
                );
                var v;
            })();
            function Ur(v) {
                const I = new Uint8Array(v);
                return btoa(String.fromCharCode(...I))
                    .replace(/=/g, '')
                    .replace(/\+/g, '-')
                    .replace(/\//g, '_');
            }
            function bi(v) {
                const W = (v + '='.repeat((4 - (v.length % 4)) % 4))
                        .replace(/\-/g, '+')
                        .replace(/_/g, '/'),
                    le = atob(W),
                    Be = new Uint8Array(le.length);
                for (let tt = 0; tt < le.length; ++tt)
                    Be[tt] = le.charCodeAt(tt);
                return Be;
            }
            const Xn = 'fcm_token_details_db',
                Wi = 'fcm_token_object_Store';
            function ui(v) {
                return ci.apply(this, arguments);
            }
            function ci() {
                return (
                    (ci = (0, L.Z)(function* (v) {
                        if (
                            'databases' in indexedDB &&
                            !(yield indexedDB.databases())
                                .map((tt) => tt.name)
                                .includes(Xn)
                        )
                            return null;
                        let I = null;
                        return (
                            (yield (0, N.X3)(Xn, 5, {
                                upgrade:
                                    ((le = (0, L.Z)(function* (Be, tt, Tt, Jt) {
                                        var En;
                                        if (
                                            tt < 2 ||
                                            !Be.objectStoreNames.contains(Wi)
                                        )
                                            return;
                                        const bn = Jt.objectStore(Wi),
                                            kn = yield bn
                                                .index('fcmSenderId')
                                                .get(v);
                                        if ((yield bn.clear(), kn))
                                            if (2 === tt) {
                                                const wn = kn;
                                                if (
                                                    !wn.auth ||
                                                    !wn.p256dh ||
                                                    !wn.endpoint
                                                )
                                                    return;
                                                I = {
                                                    token: wn.fcmToken,
                                                    createTime:
                                                        null !==
                                                            (En =
                                                                wn.createTime) &&
                                                        void 0 !== En
                                                            ? En
                                                            : Date.now(),
                                                    subscriptionOptions: {
                                                        auth: wn.auth,
                                                        p256dh: wn.p256dh,
                                                        endpoint: wn.endpoint,
                                                        swScope: wn.swScope,
                                                        vapidKey:
                                                            'string' ==
                                                            typeof wn.vapidKey
                                                                ? wn.vapidKey
                                                                : Ur(
                                                                      wn.vapidKey
                                                                  ),
                                                    },
                                                };
                                            } else if (3 === tt) {
                                                const wn = kn;
                                                I = {
                                                    token: wn.fcmToken,
                                                    createTime: wn.createTime,
                                                    subscriptionOptions: {
                                                        auth: Ur(wn.auth),
                                                        p256dh: Ur(wn.p256dh),
                                                        endpoint: wn.endpoint,
                                                        swScope: wn.swScope,
                                                        vapidKey: Ur(
                                                            wn.vapidKey
                                                        ),
                                                    },
                                                };
                                            } else if (4 === tt) {
                                                const wn = kn;
                                                I = {
                                                    token: wn.fcmToken,
                                                    createTime: wn.createTime,
                                                    subscriptionOptions: {
                                                        auth: Ur(wn.auth),
                                                        p256dh: Ur(wn.p256dh),
                                                        endpoint: wn.endpoint,
                                                        swScope: wn.swScope,
                                                        vapidKey: Ur(
                                                            wn.vapidKey
                                                        ),
                                                    },
                                                };
                                            }
                                    })),
                                    function (tt, Tt, Jt, En) {
                                        return le.apply(this, arguments);
                                    }),
                            })).close(),
                            yield (0, N.Lj)(Xn),
                            yield (0, N.Lj)('fcm_vapid_details_db'),
                            yield (0, N.Lj)('undefined'),
                            Xi(I) ? I : null
                        );
                        var le;
                    })),
                    ci.apply(this, arguments)
                );
            }
            function Xi(v) {
                if (!v || !v.subscriptionOptions) return !1;
                const { subscriptionOptions: I } = v;
                return (
                    'number' == typeof v.createTime &&
                    v.createTime > 0 &&
                    'string' == typeof v.token &&
                    v.token.length > 0 &&
                    'string' == typeof I.auth &&
                    I.auth.length > 0 &&
                    'string' == typeof I.p256dh &&
                    I.p256dh.length > 0 &&
                    'string' == typeof I.endpoint &&
                    I.endpoint.length > 0 &&
                    'string' == typeof I.swScope &&
                    I.swScope.length > 0 &&
                    'string' == typeof I.vapidKey &&
                    I.vapidKey.length > 0
                );
            }
            const Pr = 'firebase-messaging-store';
            let Oi = null;
            function jn() {
                return (
                    Oi ||
                        (Oi = (0, N.X3)('firebase-messaging-database', 1, {
                            upgrade: (v, I) => {
                                0 === I && v.createObjectStore(Pr);
                            },
                        })),
                    Oi
                );
            }
            function C(v) {
                return j.apply(this, arguments);
            }
            function j() {
                return (j = (0, L.Z)(function* (v) {
                    const I = ct(v),
                        le = yield (yield jn())
                            .transaction(Pr)
                            .objectStore(Pr)
                            .get(I);
                    if (le) return le;
                    {
                        const Be = yield ui(v.appConfig.senderId);
                        if (Be) return yield b(v, Be), Be;
                    }
                })).apply(this, arguments);
            }
            function b(v, I) {
                return z.apply(this, arguments);
            }
            function z() {
                return (z = (0, L.Z)(function* (v, I) {
                    const W = ct(v),
                        Be = (yield jn()).transaction(Pr, 'readwrite');
                    return yield Be.objectStore(Pr).put(I, W), yield Be.done, I;
                })).apply(this, arguments);
            }
            function Ce(v) {
                return Je.apply(this, arguments);
            }
            function Je() {
                return (Je = (0, L.Z)(function* (v) {
                    const I = ct(v),
                        le = (yield jn()).transaction(Pr, 'readwrite');
                    yield le.objectStore(Pr).delete(I), yield le.done;
                })).apply(this, arguments);
            }
            function ct({ appConfig: v }) {
                return v.appId;
            }
            const cn = new T.LL('messaging', 'Messaging', {
                'missing-app-config-values':
                    'Missing App configuration value: "{$valueName}"',
                'only-available-in-window':
                    'This method is available in a Window context.',
                'only-available-in-sw':
                    'This method is available in a service worker context.',
                'permission-default':
                    'The notification permission was not granted and dismissed instead.',
                'permission-blocked':
                    'The notification permission was not granted and blocked instead.',
                'unsupported-browser':
                    "This browser doesn't support the API's required to use the Firebase SDK.",
                'indexed-db-unsupported':
                    "This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)",
                'failed-service-worker-registration':
                    'We are unable to register the default service worker. {$browserErrorMessage}',
                'token-subscribe-failed':
                    'A problem occurred while subscribing the user to FCM: {$errorInfo}',
                'token-subscribe-no-token':
                    'FCM returned no token when subscribing the user to push.',
                'token-unsubscribe-failed':
                    'A problem occurred while unsubscribing the user from FCM: {$errorInfo}',
                'token-update-failed':
                    'A problem occurred while updating the user from FCM: {$errorInfo}',
                'token-update-no-token':
                    'FCM returned no token when updating the user to push.',
                'use-sw-after-get-token':
                    'The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.',
                'invalid-sw-registration':
                    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',
                'invalid-bg-handler':
                    'The input to setBackgroundMessageHandler() must be a function.',
                'invalid-vapid-key': 'The public VAPID key must be a string.',
                'use-vapid-key-after-get-token':
                    'The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.',
            });
            function sn(v, I) {
                return on.apply(this, arguments);
            }
            function on() {
                return (on = (0, L.Z)(function* (v, I) {
                    const W = yield E(v),
                        le = H(I),
                        Be = {
                            method: 'POST',
                            headers: W,
                            body: JSON.stringify(le),
                        };
                    let tt;
                    try {
                        tt = yield (yield fetch(A(v.appConfig), Be)).json();
                    } catch (Tt) {
                        throw cn.create('token-subscribe-failed', {
                            errorInfo: Tt,
                        });
                    }
                    if (tt.error)
                        throw cn.create('token-subscribe-failed', {
                            errorInfo: tt.error.message,
                        });
                    if (!tt.token) throw cn.create('token-subscribe-no-token');
                    return tt.token;
                })).apply(this, arguments);
            }
            function An(v, I) {
                return tr.apply(this, arguments);
            }
            function tr() {
                return (tr = (0, L.Z)(function* (v, I) {
                    const W = yield E(v),
                        le = H(I.subscriptionOptions),
                        Be = {
                            method: 'PATCH',
                            headers: W,
                            body: JSON.stringify(le),
                        };
                    let tt;
                    try {
                        tt = yield (yield fetch(
                            `${A(v.appConfig)}/${I.token}`,
                            Be
                        )).json();
                    } catch (Tt) {
                        throw cn.create('token-update-failed', {
                            errorInfo: Tt,
                        });
                    }
                    if (tt.error)
                        throw cn.create('token-update-failed', {
                            errorInfo: tt.error.message,
                        });
                    if (!tt.token) throw cn.create('token-update-no-token');
                    return tt.token;
                })).apply(this, arguments);
            }
            function zn(v, I) {
                return Hn.apply(this, arguments);
            }
            function Hn() {
                return (Hn = (0, L.Z)(function* (v, I) {
                    const le = { method: 'DELETE', headers: yield E(v) };
                    try {
                        const tt = yield (yield fetch(
                            `${A(v.appConfig)}/${I}`,
                            le
                        )).json();
                        if (tt.error)
                            throw cn.create('token-unsubscribe-failed', {
                                errorInfo: tt.error.message,
                            });
                    } catch (Be) {
                        throw cn.create('token-unsubscribe-failed', {
                            errorInfo: Be,
                        });
                    }
                })).apply(this, arguments);
            }
            function A({ projectId: v }) {
                return `https://fcmregistrations.googleapis.com/v1/projects/${v}/registrations`;
            }
            function E(v) {
                return g.apply(this, arguments);
            }
            function g() {
                return (g = (0, L.Z)(function* ({
                    appConfig: v,
                    installations: I,
                }) {
                    const W = yield I.getToken();
                    return new Headers({
                        'Content-Type': 'application/json',
                        Accept: 'application/json',
                        'x-goog-api-key': v.apiKey,
                        'x-goog-firebase-installations-auth': `FIS ${W}`,
                    });
                })).apply(this, arguments);
            }
            function H({ p256dh: v, auth: I, endpoint: W, vapidKey: le }) {
                const Be = { web: { endpoint: W, auth: I, p256dh: v } };
                return le !== Hi && (Be.web.applicationPubKey = le), Be;
            }
            const qe = 6048e5;
            function jt(v) {
                return $n.apply(this, arguments);
            }
            function $n() {
                return ($n = (0, L.Z)(function* (v) {
                    const I = yield es(v.swRegistration, v.vapidKey),
                        W = {
                            vapidKey: v.vapidKey,
                            swScope: v.swRegistration.scope,
                            endpoint: I.endpoint,
                            auth: Ur(I.getKey('auth')),
                            p256dh: Ur(I.getKey('p256dh')),
                        },
                        le = yield C(v.firebaseDependencies);
                    if (le) {
                        if (Ys(le.subscriptionOptions, W))
                            return Date.now() >= le.createTime + qe
                                ? Ti(v, {
                                      token: le.token,
                                      createTime: Date.now(),
                                      subscriptionOptions: W,
                                  })
                                : le.token;
                        try {
                            yield zn(v.firebaseDependencies, le.token);
                        } catch (Be) {
                            console.warn(Be);
                        }
                        return ht(v.firebaseDependencies, W);
                    }
                    return ht(v.firebaseDependencies, W);
                })).apply(this, arguments);
            }
            function Qr(v) {
                return Er.apply(this, arguments);
            }
            function Er() {
                return (Er = (0, L.Z)(function* (v) {
                    const I = yield C(v.firebaseDependencies);
                    I &&
                        (yield zn(v.firebaseDependencies, I.token),
                        yield Ce(v.firebaseDependencies));
                    const W =
                        yield v.swRegistration.pushManager.getSubscription();
                    return !W || W.unsubscribe();
                })).apply(this, arguments);
            }
            function Ti(v, I) {
                return Rs.apply(this, arguments);
            }
            function Rs() {
                return (Rs = (0, L.Z)(function* (v, I) {
                    try {
                        const W = yield An(v.firebaseDependencies, I),
                            le = Object.assign(Object.assign({}, I), {
                                token: W,
                                createTime: Date.now(),
                            });
                        return yield b(v.firebaseDependencies, le), W;
                    } catch (W) {
                        throw (yield Qr(v), W);
                    }
                })).apply(this, arguments);
            }
            function ht(v, I) {
                return Tn.apply(this, arguments);
            }
            function Tn() {
                return (Tn = (0, L.Z)(function* (v, I) {
                    const le = {
                        token: yield sn(v, I),
                        createTime: Date.now(),
                        subscriptionOptions: I,
                    };
                    return yield b(v, le), le.token;
                })).apply(this, arguments);
            }
            function es(v, I) {
                return ar.apply(this, arguments);
            }
            function ar() {
                return (ar = (0, L.Z)(function* (v, I) {
                    return (
                        (yield v.pushManager.getSubscription()) ||
                        v.pushManager.subscribe({
                            userVisibleOnly: !0,
                            applicationServerKey: bi(I),
                        })
                    );
                })).apply(this, arguments);
            }
            function Ys(v, I) {
                return (
                    I.vapidKey === v.vapidKey &&
                    I.endpoint === v.endpoint &&
                    I.auth === v.auth &&
                    I.p256dh === v.p256dh
                );
            }
            function Pi(v) {
                const I = {
                    from: v.from,
                    collapseKey: v.collapse_key,
                    messageId: v.fcmMessageId,
                };
                return (
                    (function Kr(v, I) {
                        if (!I.notification) return;
                        v.notification = {};
                        const W = I.notification.title;
                        W && (v.notification.title = W);
                        const le = I.notification.body;
                        le && (v.notification.body = le);
                        const Be = I.notification.image;
                        Be && (v.notification.image = Be);
                    })(I, v),
                    (function xs(v, I) {
                        !I.data || (v.data = I.data);
                    })(I, v),
                    (function Fs(v, I) {
                        if (!I.fcmOptions) return;
                        v.fcmOptions = {};
                        const W = I.fcmOptions.link;
                        W && (v.fcmOptions.link = W);
                        const le = I.fcmOptions.analytics_label;
                        le && (v.fcmOptions.analyticsLabel = le);
                    })(I, v),
                    I
                );
            }
            function vo(v) {
                return 'object' == typeof v && !!v && Xr in v;
            }
            function Zs(v, I) {
                const W = [];
                for (let le = 0; le < v.length; le++)
                    W.push(v.charAt(le)), le < I.length && W.push(I.charAt(le));
                return W.join('');
            }
            function Ri(v) {
                return cn.create('missing-app-config-values', { valueName: v });
            }
            Zs(
                'hts/frbslgigp.ogepscmv/ieo/eaylg',
                'tp:/ieaeogn-agolai.o/1frlglgc/o'
            ),
                Zs('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');
            class Lr {
                constructor(I, W, le) {
                    (this.deliveryMetricsExportedToBigQueryEnabled = !1),
                        (this.onBackgroundMessageHandler = null),
                        (this.onMessageHandler = null),
                        (this.logEvents = []),
                        (this.isLogServiceStarted = !1);
                    const Be = (function Eo(v) {
                        if (!v || !v.options)
                            throw Ri('App Configuration Object');
                        if (!v.name) throw Ri('App Name');
                        const I = [
                                'projectId',
                                'apiKey',
                                'appId',
                                'messagingSenderId',
                            ],
                            { options: W } = v;
                        for (const le of I) if (!W[le]) throw Ri(le);
                        return {
                            appName: v.name,
                            projectId: W.projectId,
                            apiKey: W.apiKey,
                            appId: W.appId,
                            senderId: W.messagingSenderId,
                        };
                    })(I);
                    this.firebaseDependencies = {
                        app: I,
                        appConfig: Be,
                        installations: W,
                        analyticsProvider: le,
                    };
                }
                _delete() {
                    return Promise.resolve();
                }
            }
            function oi(v) {
                return ds.apply(this, arguments);
            }
            function ds() {
                return (ds = (0, L.Z)(function* (v) {
                    try {
                        (v.swRegistration =
                            yield navigator.serviceWorker.register(ji, {
                                scope: Zr,
                            })),
                            v.swRegistration.update().catch(() => {});
                    } catch (I) {
                        throw cn.create('failed-service-worker-registration', {
                            browserErrorMessage: I.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function xi(v, I) {
                return di.apply(this, arguments);
            }
            function di() {
                return (di = (0, L.Z)(function* (v, I) {
                    if (
                        (!I && !v.swRegistration && (yield oi(v)),
                        I || !v.swRegistration)
                    ) {
                        if (!(I instanceof ServiceWorkerRegistration))
                            throw cn.create('invalid-sw-registration');
                        v.swRegistration = I;
                    }
                })).apply(this, arguments);
            }
            function Qs(v, I) {
                return Gi.apply(this, arguments);
            }
            function Gi() {
                return (Gi = (0, L.Z)(function* (v, I) {
                    I ? (v.vapidKey = I) : v.vapidKey || (v.vapidKey = Hi);
                })).apply(this, arguments);
            }
            function Ls() {
                return (Ls = (0, L.Z)(function* (v, I) {
                    if (!navigator) throw cn.create('only-available-in-window');
                    if (
                        ('default' === Notification.permission &&
                            (yield Notification.requestPermission()),
                        'granted' !== Notification.permission)
                    )
                        throw cn.create('permission-blocked');
                    return (
                        yield Qs(v, null == I ? void 0 : I.vapidKey),
                        yield xi(
                            v,
                            null == I ? void 0 : I.serviceWorkerRegistration
                        ),
                        jt(v)
                    );
                })).apply(this, arguments);
            }
            function fs(v, I, W) {
                return hs.apply(this, arguments);
            }
            function hs() {
                return (hs = (0, L.Z)(function* (v, I, W) {
                    const le = ks(I);
                    (yield v.firebaseDependencies.analyticsProvider.get()).logEvent(
                        le,
                        {
                            message_id: W[Xr],
                            message_name: W[ei],
                            message_time: W[cs],
                            message_device_time: Math.floor(Date.now() / 1e3),
                        }
                    );
                })).apply(this, arguments);
            }
            function ks(v) {
                switch (v) {
                    case ti.NOTIFICATION_CLICKED:
                        return 'notification_open';
                    case ti.PUSH_RECEIVED:
                        return 'notification_foreground';
                    default:
                        throw new Error();
                }
            }
            function gs() {
                return (gs = (0, L.Z)(function* (v, I) {
                    const W = I.data;
                    if (!W.isFirebaseMessaging) return;
                    v.onMessageHandler &&
                        W.messageType === ti.PUSH_RECEIVED &&
                        ('function' == typeof v.onMessageHandler
                            ? v.onMessageHandler(Pi(W))
                            : v.onMessageHandler.next(Pi(W)));
                    const le = W.data;
                    vo(le) &&
                        '1' === le[zr] &&
                        (yield fs(v, W.messageType, le));
                })).apply(this, arguments);
            }
            const ms = '@firebase/messaging',
                Js = (v) => {
                    const I = new Lr(
                        v.getProvider('app').getImmediate(),
                        v.getProvider('installations-internal').getImmediate(),
                        v.getProvider('analytics-internal')
                    );
                    return (
                        navigator.serviceWorker.addEventListener(
                            'message',
                            (W) =>
                                (function ps(v, I) {
                                    return gs.apply(this, arguments);
                                })(I, W)
                        ),
                        I
                    );
                },
                Bs = (v) => {
                    const I = v.getProvider('messaging').getImmediate();
                    return {
                        getToken: (le) =>
                            (function Ns(v, I) {
                                return Ls.apply(this, arguments);
                            })(I, le),
                    };
                };
            function _s() {
                return zi.apply(this, arguments);
            }
            function zi() {
                return (zi = (0, L.Z)(function* () {
                    try {
                        yield (0, T.eu)();
                    } catch (v) {
                        return !1;
                    }
                    return (
                        'undefined' != typeof window &&
                        (0, T.hl)() &&
                        (0, T.zI)() &&
                        'serviceWorker' in navigator &&
                        'PushManager' in window &&
                        'Notification' in window &&
                        'fetch' in window &&
                        ServiceWorkerRegistration.prototype.hasOwnProperty(
                            'showNotification'
                        ) &&
                        PushSubscription.prototype.hasOwnProperty('getKey')
                    );
                })).apply(this, arguments);
            }
            !(function qs() {
                (0, k._registerComponent)(new S.wA('messaging', Js, 'PUBLIC')),
                    (0, k._registerComponent)(
                        new S.wA('messaging-internal', Bs, 'PRIVATE')
                    ),
                    (0, k.registerVersion)(ms, '0.9.13'),
                    (0, k.registerVersion)(ms, '0.9.13', 'esm2017');
            })();
            const vs = 'analytics',
                oo = 'firebase_id',
                Ds =
                    'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig',
                Mr = 'https://www.googletagmanager.com/gtag/js',
                Dr = new O.Yd('@firebase/analytics');
            function ns(v) {
                return Promise.all(v.map((I) => I.catch((W) => W)));
            }
            function Cs(v, I) {
                const W = document.createElement('script');
                (W.src = `${Mr}?l=${v}&id=${I}`),
                    (W.async = !0),
                    document.head.appendChild(W);
            }
            function fi(v, I, W, le, Be, tt) {
                return bs.apply(this, arguments);
            }
            function bs() {
                return (bs = (0, L.Z)(function* (v, I, W, le, Be, tt) {
                    const Tt = le[Be];
                    try {
                        if (Tt) yield I[Tt];
                        else {
                            const En = (yield ns(W)).find(
                                (bn) => bn.measurementId === Be
                            );
                            En && (yield I[En.appId]);
                        }
                    } catch (Jt) {
                        Dr.error(Jt);
                    }
                    v('config', Be, tt);
                })).apply(this, arguments);
            }
            function ao(v, I, W, le, Be) {
                return Ai.apply(this, arguments);
            }
            function Ai() {
                return (Ai = (0, L.Z)(function* (v, I, W, le, Be) {
                    try {
                        let tt = [];
                        if (Be && Be.send_to) {
                            let Tt = Be.send_to;
                            Array.isArray(Tt) || (Tt = [Tt]);
                            const Jt = yield ns(W);
                            for (const En of Tt) {
                                const bn = Jt.find(
                                        (wn) => wn.measurementId === En
                                    ),
                                    kn = bn && I[bn.appId];
                                if (!kn) {
                                    tt = [];
                                    break;
                                }
                                tt.push(kn);
                            }
                        }
                        0 === tt.length && (tt = Object.values(I)),
                            yield Promise.all(tt),
                            v('event', le, Be || {});
                    } catch (tt) {
                        Dr.error(tt);
                    }
                })).apply(this, arguments);
            }
            function u() {
                const v = window.document.getElementsByTagName('script');
                for (const I of Object.values(v))
                    if (I.src && I.src.includes(Mr)) return I;
                return null;
            }
            const B = new T.LL('analytics', 'Analytics', {
                    'already-exists':
                        'A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.',
                    'already-initialized':
                        'initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.',
                    'already-initialized-settings':
                        'Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.',
                    'interop-component-reg-failed':
                        'Firebase Analytics Interop Component failed to instantiate: {$reason}',
                    'invalid-analytics-context':
                        'Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'indexeddb-unavailable':
                        'IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'config-fetch-failed':
                        'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',
                    'no-api-key':
                        'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
                    'no-app-id':
                        'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
                }),
                Ue = new (class ye {
                    constructor(I = {}, W = 1e3) {
                        (this.throttleMetadata = I), (this.intervalMillis = W);
                    }
                    getThrottleMetadata(I) {
                        return this.throttleMetadata[I];
                    }
                    setThrottleMetadata(I, W) {
                        this.throttleMetadata[I] = W;
                    }
                    deleteThrottleMetadata(I) {
                        delete this.throttleMetadata[I];
                    }
                })();
            function ot(v) {
                return new Headers({
                    Accept: 'application/json',
                    'x-goog-api-key': v,
                });
            }
            function Bt(v) {
                return Ht.apply(this, arguments);
            }
            function Ht() {
                return (Ht = (0, L.Z)(function* (v) {
                    var I;
                    const { appId: W, apiKey: le } = v,
                        Be = { method: 'GET', headers: ot(le) },
                        tt = Ds.replace('{app-id}', W),
                        Tt = yield fetch(tt, Be);
                    if (200 !== Tt.status && 304 !== Tt.status) {
                        let Jt = '';
                        try {
                            const En = yield Tt.json();
                            (null === (I = En.error) || void 0 === I
                                ? void 0
                                : I.message) && (Jt = En.error.message);
                        } catch (En) {}
                        throw B.create('config-fetch-failed', {
                            httpStatus: Tt.status,
                            responseMessage: Jt,
                        });
                    }
                    return Tt.json();
                })).apply(this, arguments);
            }
            function _n(v) {
                return pn.apply(this, arguments);
            }
            function pn() {
                return (pn = (0, L.Z)(function* (v, I = Ue, W) {
                    const {
                        appId: le,
                        apiKey: Be,
                        measurementId: tt,
                    } = v.options;
                    if (!le) throw B.create('no-app-id');
                    if (!Be) {
                        if (tt) return { measurementId: tt, appId: le };
                        throw B.create('no-api-key');
                    }
                    const Tt = I.getThrottleMetadata(le) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        },
                        Jt = new Sr();
                    return (
                        setTimeout(
                            (0, L.Z)(function* () {
                                Jt.abort();
                            }),
                            void 0 !== W ? W : 6e4
                        ),
                        qt(
                            { appId: le, apiKey: Be, measurementId: tt },
                            Tt,
                            Jt,
                            I
                        )
                    );
                })).apply(this, arguments);
            }
            function qt(v, I, W) {
                return dn.apply(this, arguments);
            }
            function dn() {
                return (dn = (0, L.Z)(function* (
                    v,
                    { throttleEndTimeMillis: I, backoffCount: W },
                    le,
                    Be = Ue
                ) {
                    const { appId: tt, measurementId: Tt } = v;
                    try {
                        yield nr(le, I);
                    } catch (Jt) {
                        if (Tt)
                            return (
                                Dr.warn(
                                    `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Tt} provided in the "measurementId" field in the local Firebase config. [${Jt.message}]`
                                ),
                                { appId: tt, measurementId: Tt }
                            );
                        throw Jt;
                    }
                    try {
                        const Jt = yield Bt(v);
                        return Be.deleteThrottleMetadata(tt), Jt;
                    } catch (Jt) {
                        if (!_r(Jt)) {
                            if ((Be.deleteThrottleMetadata(tt), Tt))
                                return (
                                    Dr.warn(
                                        `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Tt} provided in the "measurementId" field in the local Firebase config. [${Jt.message}]`
                                    ),
                                    { appId: tt, measurementId: Tt }
                                );
                            throw Jt;
                        }
                        const En =
                                503 === Number(Jt.customData.httpStatus)
                                    ? (0, T.$s)(W, Be.intervalMillis, 30)
                                    : (0, T.$s)(W, Be.intervalMillis),
                            bn = {
                                throttleEndTimeMillis: Date.now() + En,
                                backoffCount: W + 1,
                            };
                        return (
                            Be.setThrottleMetadata(tt, bn),
                            Dr.debug(
                                `Calling attemptFetch again in ${En} millis`
                            ),
                            qt(v, bn, le, Be)
                        );
                    }
                })).apply(this, arguments);
            }
            function nr(v, I) {
                return new Promise((W, le) => {
                    const Be = Math.max(I - Date.now(), 0),
                        tt = setTimeout(W, Be);
                    v.addEventListener(() => {
                        clearTimeout(tt),
                            le(
                                B.create('fetch-throttle', {
                                    throttleEndTimeMillis: I,
                                })
                            );
                    });
                });
            }
            function _r(v) {
                if (!(v instanceof T.ZR && v.customData)) return !1;
                const I = Number(v.customData.httpStatus);
                return 429 === I || 500 === I || 503 === I || 504 === I;
            }
            class Sr {
                constructor() {
                    this.listeners = [];
                }
                addEventListener(I) {
                    this.listeners.push(I);
                }
                abort() {
                    this.listeners.forEach((I) => I());
                }
            }
            function jr() {
                return br.apply(this, arguments);
            }
            function br() {
                return (br = (0, L.Z)(function* () {
                    if (!(0, T.hl)())
                        return (
                            Dr.warn(
                                B.create('indexeddb-unavailable', {
                                    errorInfo:
                                        'IndexedDB is not available in this environment.',
                                }).message
                            ),
                            !1
                        );
                    try {
                        yield (0, T.eu)();
                    } catch (v) {
                        return (
                            Dr.warn(
                                B.create('indexeddb-unavailable', {
                                    errorInfo: v,
                                }).message
                            ),
                            !1
                        );
                    }
                    return !0;
                })).apply(this, arguments);
            }
            function Jr() {
                return (Jr = (0, L.Z)(function* (v, I, W, le, Be, tt, Tt) {
                    var Jt;
                    const En = _n(v);
                    En.then((Zn) => {
                        (W[Zn.measurementId] = Zn.appId),
                            v.options.measurementId &&
                                Zn.measurementId !== v.options.measurementId &&
                                Dr.warn(
                                    `The measurement ID in the local Firebase config (${v.options.measurementId}) does not match the measurement ID fetched from the server (${Zn.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                                );
                    }).catch((Zn) => Dr.error(Zn)),
                        I.push(En);
                    const bn = jr().then((Zn) => {
                            if (Zn) return le.getId();
                        }),
                        [kn, wn] = yield Promise.all([En, bn]);
                    u() || Cs(tt, kn.measurementId), Be('js', new Date());
                    const Si =
                        null !== (Jt = null == Tt ? void 0 : Tt.config) &&
                        void 0 !== Jt
                            ? Jt
                            : {};
                    return (
                        (Si.origin = 'firebase'),
                        (Si.update = !0),
                        null != wn && (Si[oo] = wn),
                        Be('config', kn.measurementId, Si),
                        kn.measurementId
                    );
                })).apply(this, arguments);
            }
            class p {
                constructor(I) {
                    this.app = I;
                }
                _delete() {
                    return delete d[this.app.options.appId], Promise.resolve();
                }
            }
            let d = {},
                c = [];
            const D = {};
            let ie,
                ve,
                P = 'dataLayer',
                Xe = !1;
            function dt(v, I, W) {
                !(function Dt() {
                    const v = [];
                    if (
                        ((0, T.ru)() &&
                            v.push('This is a browser extension environment.'),
                        (0, T.zI)() || v.push('Cookies are not available.'),
                        v.length > 0)
                    ) {
                        const I = v
                                .map((le, Be) => `(${Be + 1}) ${le}`)
                                .join(' '),
                            W = B.create('invalid-analytics-context', {
                                errorInfo: I,
                            });
                        Dr.warn(W.message);
                    }
                })();
                const le = v.options.appId;
                if (!le) throw B.create('no-app-id');
                if (!v.options.apiKey) {
                    if (!v.options.measurementId) throw B.create('no-api-key');
                    Dr.warn(
                        `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${v.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
                    );
                }
                if (null != d[le]) throw B.create('already-exists', { id: le });
                if (!Xe) {
                    !(function ai(v) {
                        let I = [];
                        Array.isArray(window[v])
                            ? (I = window[v])
                            : (window[v] = I);
                    })(P);
                    const { wrappedGtag: tt, gtagCore: Tt } = (function a(
                        v,
                        I,
                        W,
                        le,
                        Be
                    ) {
                        let tt = function (...Tt) {
                            window[le].push(arguments);
                        };
                        return (
                            window[Be] &&
                                'function' == typeof window[Be] &&
                                (tt = window[Be]),
                            (window[Be] = (function M(v, I, W, le) {
                                function tt() {
                                    return (tt = (0, L.Z)(function* (
                                        Tt,
                                        Jt,
                                        En
                                    ) {
                                        try {
                                            'event' === Tt
                                                ? yield ao(v, I, W, Jt, En)
                                                : 'config' === Tt
                                                ? yield fi(v, I, W, le, Jt, En)
                                                : v('set', Jt);
                                        } catch (bn) {
                                            Dr.error(bn);
                                        }
                                    })).apply(this, arguments);
                                }
                                return function Be(Tt, Jt, En) {
                                    return tt.apply(this, arguments);
                                };
                            })(tt, v, I, W)),
                            { gtagCore: tt, wrappedGtag: window[Be] }
                        );
                    })(d, c, D, P, 'gtag');
                    (ve = tt), (ie = Tt), (Xe = !0);
                }
                return (
                    (d[le] = (function hi(v, I, W, le, Be, tt, Tt) {
                        return Jr.apply(this, arguments);
                    })(v, c, D, I, ie, P, W)),
                    new p(v)
                );
            }
            function en() {
                return (en = (0, L.Z)(function* (v, I, W, le, Be) {
                    if (Be && Be.global) v('event', W, le);
                    else {
                        const tt = yield I;
                        v(
                            'event',
                            W,
                            Object.assign(Object.assign({}, le), {
                                send_to: tt,
                            })
                        );
                    }
                })).apply(this, arguments);
            }
            function Yi() {
                return Ma.apply(this, arguments);
            }
            function Ma() {
                return (Ma = (0, L.Z)(function* () {
                    if ((0, T.ru)() || !(0, T.zI)() || !(0, T.hl)()) return !1;
                    try {
                        return yield (0, T.eu)();
                    } catch (v) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            const yl = '@firebase/analytics';
            !(function Uc() {
                (0, k._registerComponent)(
                    new S.wA(
                        vs,
                        (I, { options: W }) =>
                            dt(
                                I.getProvider('app').getImmediate(),
                                I.getProvider(
                                    'installations-internal'
                                ).getImmediate(),
                                W
                            ),
                        'PUBLIC'
                    )
                ),
                    (0, k._registerComponent)(
                        new S.wA(
                            'analytics-internal',
                            function v(I) {
                                try {
                                    const W = I.getProvider(vs).getImmediate();
                                    return {
                                        logEvent: (le, Be, tt) =>
                                            (function Bc(v, I, W, le) {
                                                (v = (0, T.m9)(v)),
                                                    (function Yt(
                                                        v,
                                                        I,
                                                        W,
                                                        le,
                                                        Be
                                                    ) {
                                                        return en.apply(
                                                            this,
                                                            arguments
                                                        );
                                                    })(
                                                        ve,
                                                        d[v.app.options.appId],
                                                        I,
                                                        W,
                                                        le
                                                    ).catch((Be) =>
                                                        Dr.error(Be)
                                                    );
                                            })(W, le, Be, tt),
                                    };
                                } catch (W) {
                                    throw B.create(
                                        'interop-component-reg-failed',
                                        { reason: W }
                                    );
                                }
                            },
                            'PRIVATE'
                        )
                    ),
                    (0, k.registerVersion)(yl, '0.7.9'),
                    (0, k.registerVersion)(yl, '0.7.9', 'esm2017');
            })();
            var Vc = f(233),
                lo = f(4986),
                jc = f(8505),
                Hr = f(9468),
                qo = f(5363);
            const uo = new s.GfV('7.2.0'),
                Xo = '__angularfire_symbol__analyticsIsSupported',
                Mi = '__angularfire_symbol__remoteConfigIsSupported',
                eo = '__angularfire_symbol__messagingIsSupported';
            function Wc(v, I, W) {
                if (I) {
                    if (1 === I.length) return I[0];
                    const tt = I.filter((Tt) => Tt.app === W);
                    if (1 === tt.length) return tt[0];
                }
                return W.container
                    .getProvider(v)
                    .getImmediate({ optional: !0 });
            }
            globalThis[Xo] ||
                (globalThis[Xo] = Yi().then(
                    (v) =>
                        (globalThis.__angularfire_symbol__analyticsIsSupportedValue =
                            v)
                )),
                globalThis[eo] ||
                    (globalThis[eo] = _s().then(
                        (v) =>
                            (globalThis.__angularfire_symbol__messagingIsSupportedValue =
                                v)
                    )),
                globalThis[Mi] ||
                    (globalThis[Mi] = qi().then(
                        (v) =>
                            (globalThis.__angularfire_symbol__remoteConfigIsSupportedValue =
                                v)
                    ));
            const Gc = (v, I) => {
                const W = I ? [I] : (0, m.C6)(),
                    le = [];
                return (
                    W.forEach((Be) => {
                        Be.container.getProvider(v).instances.forEach((Tt) => {
                            le.includes(Tt) || le.push(Tt);
                        });
                    }),
                    le
                );
            };
            function Hs() {}
            class pi {
                constructor(I, W = Vc.N) {
                    (this.zone = I), (this.delegate = W);
                }
                now() {
                    return this.delegate.now();
                }
                schedule(I, W, le) {
                    const Be = this.zone;
                    return this.delegate.schedule(
                        function (Tt) {
                            Be.runGuarded(() => {
                                I.apply(this, [Tt]);
                            });
                        },
                        W,
                        le
                    );
                }
            }
            class ta {
                constructor(I) {
                    (this.zone = I), (this.task = null);
                }
                call(I, W) {
                    const le = this.unscheduleTask.bind(this);
                    return (
                        (this.task = this.zone.run(() =>
                            Zone.current.scheduleMacroTask(
                                'firebaseZoneBlock',
                                Hs,
                                {},
                                Hs,
                                Hs
                            )
                        )),
                        W.pipe((0, jc.b)({ next: le, complete: le, error: le }))
                            .subscribe(I)
                            .add(le)
                    );
                }
                unscheduleTask() {
                    setTimeout(() => {
                        null != this.task &&
                            'scheduled' === this.task.state &&
                            (this.task.invoke(), (this.task = null));
                    }, 10);
                }
            }
            let to = (() => {
                class v {
                    constructor(W) {
                        (this.ngZone = W),
                            (this.outsideAngular = W.runOutsideAngular(
                                () => new pi(Zone.current)
                            )),
                            (this.insideAngular = W.run(
                                () => new pi(Zone.current, lo.z)
                            )),
                            globalThis.ɵAngularFireScheduler ||
                                (globalThis.ɵAngularFireScheduler = this);
                    }
                }
                return (
                    (v.ɵfac = function (W) {
                        return new (W || v)(s.LFG(s.R0b));
                    }),
                    (v.ɵprov = s.Yz7({
                        token: v,
                        factory: v.ɵfac,
                        providedIn: 'root',
                    })),
                    v
                );
            })();
            function no() {
                const v = globalThis.ɵAngularFireScheduler;
                if (!v)
                    throw new Error(
                        "Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported)."
                    );
                return v;
            }
            function Oa(v) {
                return (
                    no(),
                    (function Cl(v) {
                        return function (W) {
                            return (W = W.lift(new ta(v.ngZone))).pipe(
                                (0, Hr.R)(v.outsideAngular),
                                (0, qo.Q)(v.insideAngular)
                            );
                        };
                    })(no())(v)
                );
            }
        },
        2090: (de, Y, f) => {
            f.d(Y, {
                $s: () => Wt,
                BH: () => fe,
                L: () => N,
                LL: () => ke,
                UG: () => pe,
                US: () => S,
                ZB: () => F,
                ZR: () => We,
                b$: () => he,
                eu: () => ne,
                hl: () => re,
                jU: () => J,
                m9: () => Mn,
                ne: () => gn,
                pd: () => Bn,
                r3: () => $t,
                ru: () => Me,
                tV: () => U,
                uI: () => Oe,
                vZ: () => st,
                w1: () => R,
                xO: () => Qt,
                xb: () => At,
                z$: () => Re,
                zI: () => we,
                zd: () => ln,
            });
            const k = function (q) {
                    const ue = [];
                    let Ee = 0;
                    for (let Ke = 0; Ke < q.length; Ke++) {
                        let ae = q.charCodeAt(Ke);
                        ae < 128
                            ? (ue[Ee++] = ae)
                            : ae < 2048
                            ? ((ue[Ee++] = (ae >> 6) | 192),
                              (ue[Ee++] = (63 & ae) | 128))
                            : 55296 == (64512 & ae) &&
                              Ke + 1 < q.length &&
                              56320 == (64512 & q.charCodeAt(Ke + 1))
                            ? ((ae =
                                  65536 +
                                  ((1023 & ae) << 10) +
                                  (1023 & q.charCodeAt(++Ke))),
                              (ue[Ee++] = (ae >> 18) | 240),
                              (ue[Ee++] = ((ae >> 12) & 63) | 128),
                              (ue[Ee++] = ((ae >> 6) & 63) | 128),
                              (ue[Ee++] = (63 & ae) | 128))
                            : ((ue[Ee++] = (ae >> 12) | 224),
                              (ue[Ee++] = ((ae >> 6) & 63) | 128),
                              (ue[Ee++] = (63 & ae) | 128));
                    }
                    return ue;
                },
                S = {
                    byteToCharMap_: null,
                    charToByteMap_: null,
                    byteToCharMapWebSafe_: null,
                    charToByteMapWebSafe_: null,
                    ENCODED_VALS_BASE:
                        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
                    get ENCODED_VALS() {
                        return this.ENCODED_VALS_BASE + '+/=';
                    },
                    get ENCODED_VALS_WEBSAFE() {
                        return this.ENCODED_VALS_BASE + '-_.';
                    },
                    HAS_NATIVE_SUPPORT: 'function' == typeof atob,
                    encodeByteArray(q, ue) {
                        if (!Array.isArray(q))
                            throw Error(
                                'encodeByteArray takes an array as a parameter'
                            );
                        this.init_();
                        const Ee = ue
                                ? this.byteToCharMapWebSafe_
                                : this.byteToCharMap_,
                            Ke = [];
                        for (let ae = 0; ae < q.length; ae += 3) {
                            const Z = q[ae],
                                be = ae + 1 < q.length,
                                Ne = be ? q[ae + 1] : 0,
                                et = ae + 2 < q.length,
                                Ct = et ? q[ae + 2] : 0;
                            let un = ((15 & Ne) << 2) | (Ct >> 6),
                                xn = 63 & Ct;
                            et || ((xn = 64), be || (un = 64)),
                                Ke.push(
                                    Ee[Z >> 2],
                                    Ee[((3 & Z) << 4) | (Ne >> 4)],
                                    Ee[un],
                                    Ee[xn]
                                );
                        }
                        return Ke.join('');
                    },
                    encodeString(q, ue) {
                        return this.HAS_NATIVE_SUPPORT && !ue
                            ? btoa(q)
                            : this.encodeByteArray(k(q), ue);
                    },
                    decodeString(q, ue) {
                        return this.HAS_NATIVE_SUPPORT && !ue
                            ? atob(q)
                            : (function (q) {
                                  const ue = [];
                                  let Ee = 0,
                                      Ke = 0;
                                  for (; Ee < q.length; ) {
                                      const ae = q[Ee++];
                                      if (ae < 128)
                                          ue[Ke++] = String.fromCharCode(ae);
                                      else if (ae > 191 && ae < 224) {
                                          const Z = q[Ee++];
                                          ue[Ke++] = String.fromCharCode(
                                              ((31 & ae) << 6) | (63 & Z)
                                          );
                                      } else if (ae > 239 && ae < 365) {
                                          const et =
                                              (((7 & ae) << 18) |
                                                  ((63 & q[Ee++]) << 12) |
                                                  ((63 & q[Ee++]) << 6) |
                                                  (63 & q[Ee++])) -
                                              65536;
                                          (ue[Ke++] = String.fromCharCode(
                                              55296 + (et >> 10)
                                          )),
                                              (ue[Ke++] = String.fromCharCode(
                                                  56320 + (1023 & et)
                                              ));
                                      } else {
                                          const Z = q[Ee++],
                                              be = q[Ee++];
                                          ue[Ke++] = String.fromCharCode(
                                              ((15 & ae) << 12) |
                                                  ((63 & Z) << 6) |
                                                  (63 & be)
                                          );
                                      }
                                  }
                                  return ue.join('');
                              })(this.decodeStringToByteArray(q, ue));
                    },
                    decodeStringToByteArray(q, ue) {
                        this.init_();
                        const Ee = ue
                                ? this.charToByteMapWebSafe_
                                : this.charToByteMap_,
                            Ke = [];
                        for (let ae = 0; ae < q.length; ) {
                            const Z = Ee[q.charAt(ae++)],
                                Ne = ae < q.length ? Ee[q.charAt(ae)] : 0;
                            ++ae;
                            const Ct = ae < q.length ? Ee[q.charAt(ae)] : 64;
                            ++ae;
                            const Rt = ae < q.length ? Ee[q.charAt(ae)] : 64;
                            if (
                                (++ae,
                                null == Z ||
                                    null == Ne ||
                                    null == Ct ||
                                    null == Rt)
                            )
                                throw Error();
                            Ke.push((Z << 2) | (Ne >> 4)),
                                64 !== Ct &&
                                    (Ke.push(((Ne << 4) & 240) | (Ct >> 2)),
                                    64 !== Rt &&
                                        Ke.push(((Ct << 6) & 192) | Rt));
                        }
                        return Ke;
                    },
                    init_() {
                        if (!this.byteToCharMap_) {
                            (this.byteToCharMap_ = {}),
                                (this.charToByteMap_ = {}),
                                (this.byteToCharMapWebSafe_ = {}),
                                (this.charToByteMapWebSafe_ = {});
                            for (let q = 0; q < this.ENCODED_VALS.length; q++)
                                (this.byteToCharMap_[q] =
                                    this.ENCODED_VALS.charAt(q)),
                                    (this.charToByteMap_[
                                        this.byteToCharMap_[q]
                                    ] = q),
                                    (this.byteToCharMapWebSafe_[q] =
                                        this.ENCODED_VALS_WEBSAFE.charAt(q)),
                                    (this.charToByteMapWebSafe_[
                                        this.byteToCharMapWebSafe_[q]
                                    ] = q),
                                    q >= this.ENCODED_VALS_BASE.length &&
                                        ((this.charToByteMap_[
                                            this.ENCODED_VALS_WEBSAFE.charAt(q)
                                        ] = q),
                                        (this.charToByteMapWebSafe_[
                                            this.ENCODED_VALS.charAt(q)
                                        ] = q));
                        }
                    },
                },
                N = function (q) {
                    return (function (q) {
                        const ue = k(q);
                        return S.encodeByteArray(ue, !0);
                    })(q).replace(/\./g, '');
                },
                U = function (q) {
                    try {
                        return S.decodeString(q, !0);
                    } catch (ue) {
                        console.error('base64Decode failed: ', ue);
                    }
                    return null;
                };
            function F(q, ue) {
                if (!(ue instanceof Object)) return ue;
                switch (ue.constructor) {
                    case Date:
                        return new Date(ue.getTime());
                    case Object:
                        void 0 === q && (q = {});
                        break;
                    case Array:
                        q = [];
                        break;
                    default:
                        return ue;
                }
                for (const Ee in ue)
                    !ue.hasOwnProperty(Ee) ||
                        !K(Ee) ||
                        (q[Ee] = F(q[Ee], ue[Ee]));
                return q;
            }
            function K(q) {
                return '__proto__' !== q;
            }
            class fe {
                constructor() {
                    (this.reject = () => {}),
                        (this.resolve = () => {}),
                        (this.promise = new Promise((ue, Ee) => {
                            (this.resolve = ue), (this.reject = Ee);
                        }));
                }
                wrapCallback(ue) {
                    return (Ee, Ke) => {
                        Ee ? this.reject(Ee) : this.resolve(Ke),
                            'function' == typeof ue &&
                                (this.promise.catch(() => {}),
                                1 === ue.length ? ue(Ee) : ue(Ee, Ke));
                    };
                }
            }
            function Re() {
                return 'undefined' != typeof navigator &&
                    'string' == typeof navigator.userAgent
                    ? navigator.userAgent
                    : '';
            }
            function Oe() {
                return (
                    'undefined' != typeof window &&
                    !!(window.cordova || window.phonegap || window.PhoneGap) &&
                    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(
                        Re()
                    )
                );
            }
            function pe() {
                try {
                    return (
                        '[object process]' ===
                        Object.prototype.toString.call(global.process)
                    );
                } catch (q) {
                    return !1;
                }
            }
            function J() {
                return 'object' == typeof self && self.self === self;
            }
            function Me() {
                const q =
                    'object' == typeof chrome
                        ? chrome.runtime
                        : 'object' == typeof browser
                        ? browser.runtime
                        : void 0;
                return 'object' == typeof q && void 0 !== q.id;
            }
            function he() {
                return (
                    'object' == typeof navigator &&
                    'ReactNative' === navigator.product
                );
            }
            function R() {
                const q = Re();
                return q.indexOf('MSIE ') >= 0 || q.indexOf('Trident/') >= 0;
            }
            function re() {
                return 'object' == typeof indexedDB;
            }
            function ne() {
                return new Promise((q, ue) => {
                    try {
                        let Ee = !0;
                        const Ke =
                                'validate-browser-context-for-indexeddb-analytics-module',
                            ae = self.indexedDB.open(Ke);
                        (ae.onsuccess = () => {
                            ae.result.close(),
                                Ee || self.indexedDB.deleteDatabase(Ke),
                                q(!0);
                        }),
                            (ae.onupgradeneeded = () => {
                                Ee = !1;
                            }),
                            (ae.onerror = () => {
                                var Z;
                                ue(
                                    (null === (Z = ae.error) || void 0 === Z
                                        ? void 0
                                        : Z.message) || ''
                                );
                            });
                    } catch (Ee) {
                        ue(Ee);
                    }
                });
            }
            function we() {
                return !(
                    'undefined' == typeof navigator || !navigator.cookieEnabled
                );
            }
            class We extends Error {
                constructor(ue, Ee, Ke) {
                    super(Ee),
                        (this.code = ue),
                        (this.customData = Ke),
                        (this.name = 'FirebaseError'),
                        Object.setPrototypeOf(this, We.prototype),
                        Error.captureStackTrace &&
                            Error.captureStackTrace(this, ke.prototype.create);
                }
            }
            class ke {
                constructor(ue, Ee, Ke) {
                    (this.service = ue),
                        (this.serviceName = Ee),
                        (this.errors = Ke);
                }
                create(ue, ...Ee) {
                    const Ke = Ee[0] || {},
                        ae = `${this.service}/${ue}`,
                        Z = this.errors[ue],
                        be = Z
                            ? (function pt(q, ue) {
                                  return q.replace(Lt, (Ee, Ke) => {
                                      const ae = ue[Ke];
                                      return null != ae
                                          ? String(ae)
                                          : `<${Ke}?>`;
                                  });
                              })(Z, Ke)
                            : 'Error';
                    return new We(
                        ae,
                        `${this.serviceName}: ${be} (${ae}).`,
                        Ke
                    );
                }
            }
            const Lt = /\{\$([^}]+)}/g;
            function $t(q, ue) {
                return Object.prototype.hasOwnProperty.call(q, ue);
            }
            function At(q) {
                for (const ue in q)
                    if (Object.prototype.hasOwnProperty.call(q, ue)) return !1;
                return !0;
            }
            function st(q, ue) {
                if (q === ue) return !0;
                const Ee = Object.keys(q),
                    Ke = Object.keys(ue);
                for (const ae of Ee) {
                    if (!Ke.includes(ae)) return !1;
                    const Z = q[ae],
                        be = ue[ae];
                    if (xt(Z) && xt(be)) {
                        if (!st(Z, be)) return !1;
                    } else if (Z !== be) return !1;
                }
                for (const ae of Ke) if (!Ee.includes(ae)) return !1;
                return !0;
            }
            function xt(q) {
                return null !== q && 'object' == typeof q;
            }
            function Qt(q) {
                const ue = [];
                for (const [Ee, Ke] of Object.entries(q))
                    Array.isArray(Ke)
                        ? Ke.forEach((ae) => {
                              ue.push(
                                  encodeURIComponent(Ee) +
                                      '=' +
                                      encodeURIComponent(ae)
                              );
                          })
                        : ue.push(
                              encodeURIComponent(Ee) +
                                  '=' +
                                  encodeURIComponent(Ke)
                          );
                return ue.length ? '&' + ue.join('&') : '';
            }
            function ln(q) {
                const ue = {};
                return (
                    q
                        .replace(/^\?/, '')
                        .split('&')
                        .forEach((Ke) => {
                            if (Ke) {
                                const [ae, Z] = Ke.split('=');
                                ue[decodeURIComponent(ae)] =
                                    decodeURIComponent(Z);
                            }
                        }),
                    ue
                );
            }
            function Bn(q) {
                const ue = q.indexOf('?');
                if (!ue) return '';
                const Ee = q.indexOf('#', ue);
                return q.substring(ue, Ee > 0 ? Ee : void 0);
            }
            function gn(q, ue) {
                const Ee = new Nt(q, ue);
                return Ee.subscribe.bind(Ee);
            }
            class Nt {
                constructor(ue, Ee) {
                    (this.observers = []),
                        (this.unsubscribes = []),
                        (this.observerCount = 0),
                        (this.task = Promise.resolve()),
                        (this.finalized = !1),
                        (this.onNoObservers = Ee),
                        this.task
                            .then(() => {
                                ue(this);
                            })
                            .catch((Ke) => {
                                this.error(Ke);
                            });
                }
                next(ue) {
                    this.forEachObserver((Ee) => {
                        Ee.next(ue);
                    });
                }
                error(ue) {
                    this.forEachObserver((Ee) => {
                        Ee.error(ue);
                    }),
                        this.close(ue);
                }
                complete() {
                    this.forEachObserver((ue) => {
                        ue.complete();
                    }),
                        this.close();
                }
                subscribe(ue, Ee, Ke) {
                    let ae;
                    if (void 0 === ue && void 0 === Ee && void 0 === Ke)
                        throw new Error('Missing Observer.');
                    (ae = (function vn(q, ue) {
                        if ('object' != typeof q || null === q) return !1;
                        for (const Ee of ue)
                            if (Ee in q && 'function' == typeof q[Ee])
                                return !0;
                        return !1;
                    })(ue, ['next', 'error', 'complete'])
                        ? ue
                        : { next: ue, error: Ee, complete: Ke }),
                        void 0 === ae.next && (ae.next = Dn),
                        void 0 === ae.error && (ae.error = Dn),
                        void 0 === ae.complete && (ae.complete = Dn);
                    const Z = this.unsubscribeOne.bind(
                        this,
                        this.observers.length
                    );
                    return (
                        this.finalized &&
                            this.task.then(() => {
                                try {
                                    this.finalError
                                        ? ae.error(this.finalError)
                                        : ae.complete();
                                } catch (be) {}
                            }),
                        this.observers.push(ae),
                        Z
                    );
                }
                unsubscribeOne(ue) {
                    void 0 === this.observers ||
                        void 0 === this.observers[ue] ||
                        (delete this.observers[ue],
                        (this.observerCount -= 1),
                        0 === this.observerCount &&
                            void 0 !== this.onNoObservers &&
                            this.onNoObservers(this));
                }
                forEachObserver(ue) {
                    if (!this.finalized)
                        for (let Ee = 0; Ee < this.observers.length; Ee++)
                            this.sendOne(Ee, ue);
                }
                sendOne(ue, Ee) {
                    this.task.then(() => {
                        if (
                            void 0 !== this.observers &&
                            void 0 !== this.observers[ue]
                        )
                            try {
                                Ee(this.observers[ue]);
                            } catch (Ke) {
                                'undefined' != typeof console &&
                                    console.error &&
                                    console.error(Ke);
                            }
                    });
                }
                close(ue) {
                    this.finalized ||
                        ((this.finalized = !0),
                        void 0 !== ue && (this.finalError = ue),
                        this.task.then(() => {
                            (this.observers = void 0),
                                (this.onNoObservers = void 0);
                        }));
                }
            }
            function Dn() {}
            function Wt(q, ue = 1e3, Ee = 2) {
                const Ke = ue * Math.pow(Ee, q),
                    ae = Math.round(0.5 * Ke * (Math.random() - 0.5) * 2);
                return Math.min(144e5, Ke + ae);
            }
            function Mn(q) {
                return q && q._delegate ? q._delegate : q;
            }
        },
        7499: (de, Y, f) => {
            var s = f(2313),
                m = f(5e3),
                L = f(6115),
                k = f(7773);
            let T = (() => {
                class M {}
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)();
                    }),
                    (M.ɵcmp = m.Xpm({
                        type: M,
                        selectors: [['sol-root']],
                        decls: 3,
                        vars: 0,
                        consts: [['position', 'top-center']],
                        template: function (u, y) {
                            1 & u &&
                                (m.TgZ(0, 'div'),
                                m._UZ(1, 'router-outlet')(2, 'p-toast', 0),
                                m.qZA());
                        },
                        directives: [L.lC, k.FN],
                        styles: [''],
                        changeDetection: 0,
                    })),
                    M
                );
            })();
            var S = f(1777);
            const O = !1;
            function U(M) {
                return new m.vHH(3e3, O);
            }
            function He() {
                return (
                    'undefined' != typeof window && void 0 !== window.document
                );
            }
            function st() {
                return (
                    'undefined' != typeof process &&
                    '[object process]' === {}.toString.call(process)
                );
            }
            function xt(M) {
                switch (M.length) {
                    case 0:
                        return new S.ZN();
                    case 1:
                        return M[0];
                    default:
                        return new S.ZE(M);
                }
            }
            function Qt(M, a, u, y, B = {}, Q = {}) {
                const me = [],
                    ye = [];
                let Ue = -1,
                    ot = null;
                if (
                    (y.forEach((Bt) => {
                        const Ht = Bt.offset,
                            _n = Ht == Ue,
                            pn = (_n && ot) || {};
                        Object.keys(Bt).forEach((qt) => {
                            let dn = qt,
                                nr = Bt[qt];
                            if ('offset' !== qt)
                                switch (
                                    ((dn = a.normalizePropertyName(dn, me)), nr)
                                ) {
                                    case S.k1:
                                        nr = B[qt];
                                        break;
                                    case S.l3:
                                        nr = Q[qt];
                                        break;
                                    default:
                                        nr = a.normalizeStyleValue(
                                            qt,
                                            dn,
                                            nr,
                                            me
                                        );
                                }
                            pn[dn] = nr;
                        }),
                            _n || ye.push(pn),
                            (ot = pn),
                            (Ue = Ht);
                    }),
                    me.length)
                )
                    throw (function pt(M) {
                        return new m.vHH(3502, O);
                    })();
                return ye;
            }
            function ln(M, a, u, y) {
                switch (a) {
                    case 'start':
                        M.onStart(() => y(u && Bn(u, 'start', M)));
                        break;
                    case 'done':
                        M.onDone(() => y(u && Bn(u, 'done', M)));
                        break;
                    case 'destroy':
                        M.onDestroy(() => y(u && Bn(u, 'destroy', M)));
                }
            }
            function Bn(M, a, u) {
                const y = u.totalTime,
                    Q = rn(
                        M.element,
                        M.triggerName,
                        M.fromState,
                        M.toState,
                        a || M.phaseName,
                        null == y ? M.totalTime : y,
                        !!u.disabled
                    ),
                    me = M._data;
                return null != me && (Q._data = me), Q;
            }
            function rn(M, a, u, y, B = '', Q = 0, me) {
                return {
                    element: M,
                    triggerName: a,
                    fromState: u,
                    toState: y,
                    phaseName: B,
                    totalTime: Q,
                    disabled: !!me,
                };
            }
            function gn(M, a, u) {
                let y;
                return (
                    M instanceof Map
                        ? ((y = M.get(a)), y || M.set(a, (y = u)))
                        : ((y = M[a]), y || (y = M[a] = u)),
                    y
                );
            }
            function Nt(M) {
                const a = M.indexOf(':');
                return [M.substring(1, a), M.substr(a + 1)];
            }
            let Un = (M, a) => !1,
                vn = (M, a, u) => [],
                Dn = null;
            function rr(M) {
                const a = M.parentNode || M.host;
                return a === Dn ? null : a;
            }
            (st() || 'undefined' != typeof Element) &&
                (He()
                    ? ((Dn = (() => document.documentElement)()),
                      (Un = (M, a) => {
                          for (; a; ) {
                              if (a === M) return !0;
                              a = rr(a);
                          }
                          return !1;
                      }))
                    : (Un = (M, a) => M.contains(a)),
                (vn = (M, a, u) => {
                    if (u) return Array.from(M.querySelectorAll(a));
                    const y = M.querySelector(a);
                    return y ? [y] : [];
                }));
            let ge = null,
                Ae = !1;
            function ze(M) {
                ge ||
                    ((ge =
                        (function Ze() {
                            return 'undefined' != typeof document
                                ? document.body
                                : null;
                        })() || {}),
                    (Ae = !!ge.style && 'WebkitAppearance' in ge.style));
                let a = !0;
                return (
                    ge.style &&
                        !(function rt(M) {
                            return 'ebkit' == M.substring(1, 6);
                        })(M) &&
                        ((a = M in ge.style),
                        !a &&
                            Ae &&
                            (a =
                                'Webkit' +
                                    M.charAt(0).toUpperCase() +
                                    M.substr(1) in
                                ge.style)),
                    a
                );
            }
            const lt = Un,
                bt = vn;
            let Kt = (() => {
                    class M {
                        validateStyleProperty(u) {
                            return ze(u);
                        }
                        matchesElement(u, y) {
                            return !1;
                        }
                        containsElement(u, y) {
                            return lt(u, y);
                        }
                        getParentElement(u) {
                            return rr(u);
                        }
                        query(u, y, B) {
                            return bt(u, y, B);
                        }
                        computeStyle(u, y, B) {
                            return B || '';
                        }
                        animate(u, y, B, Q, me, ye = [], Ue) {
                            return new S.ZN(B, Q);
                        }
                    }
                    return (
                        (M.ɵfac = function (u) {
                            return new (u || M)();
                        }),
                        (M.ɵprov = m.Yz7({ token: M, factory: M.ɵfac })),
                        M
                    );
                })(),
                Wt = (() => {
                    class M {}
                    return (M.NOOP = new Kt()), M;
                })();
            const q = 'ng-enter',
                ue = 'ng-leave',
                Ee = 'ng-trigger',
                Ke = '.ng-trigger',
                ae = 'ng-animating',
                Z = '.ng-animating';
            function be(M) {
                if ('number' == typeof M) return M;
                const a = M.match(/^(-?[\.\d]+)(m?s)/);
                return !a || a.length < 2 ? 0 : Ne(parseFloat(a[1]), a[2]);
            }
            function Ne(M, a) {
                return 's' === a ? 1e3 * M : M;
            }
            function et(M, a, u) {
                return M.hasOwnProperty('duration')
                    ? M
                    : (function Ct(M, a, u) {
                          let B,
                              Q = 0,
                              me = '';
                          if ('string' == typeof M) {
                              const ye = M.match(
                                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                              );
                              if (null === ye)
                                  return (
                                      a.push(U()),
                                      { duration: 0, delay: 0, easing: '' }
                                  );
                              B = Ne(parseFloat(ye[1]), ye[2]);
                              const Ue = ye[3];
                              null != Ue && (Q = Ne(parseFloat(Ue), ye[4]));
                              const ot = ye[5];
                              ot && (me = ot);
                          } else B = M;
                          if (!u) {
                              let ye = !1,
                                  Ue = a.length;
                              B < 0 &&
                                  (a.push(
                                      (function w() {
                                          return new m.vHH(3100, O);
                                      })()
                                  ),
                                  (ye = !0)),
                                  Q < 0 &&
                                      (a.push(
                                          (function F() {
                                              return new m.vHH(3101, O);
                                          })()
                                      ),
                                      (ye = !0)),
                                  ye && a.splice(Ue, 0, U());
                          }
                          return { duration: B, delay: Q, easing: me };
                      })(M, a, u);
            }
            function St(M, a = {}) {
                return (
                    Object.keys(M).forEach((u) => {
                        a[u] = M[u];
                    }),
                    a
                );
            }
            function un(M, a, u = {}) {
                if (a) for (let y in M) u[y] = M[y];
                else St(M, u);
                return u;
            }
            function xn(M, a, u) {
                return u ? a + ':' + u + ';' : '';
            }
            function Fn(M) {
                let a = '';
                for (let u = 0; u < M.style.length; u++) {
                    const y = M.style.item(u);
                    a += xn(0, y, M.style.getPropertyValue(y));
                }
                for (const u in M.style)
                    M.style.hasOwnProperty(u) &&
                        !u.startsWith('_') &&
                        (a += xn(0, ur(u), M.style[u]));
                M.setAttribute('style', a);
            }
            function Le(M, a, u) {
                M.style &&
                    (Object.keys(a).forEach((y) => {
                        const B = sr(y);
                        u && !u.hasOwnProperty(y) && (u[y] = M.style[B]),
                            (M.style[B] = a[y]);
                    }),
                    st() && Fn(M));
            }
            function se(M, a) {
                M.style &&
                    (Object.keys(a).forEach((u) => {
                        const y = sr(u);
                        M.style[y] = '';
                    }),
                    st() && Fn(M));
            }
            function X(M) {
                return Array.isArray(M)
                    ? 1 == M.length
                        ? M[0]
                        : (0, S.vP)(M)
                    : M;
            }
            const Ye = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
            function kt(M) {
                let a = [];
                if ('string' == typeof M) {
                    let u;
                    for (; (u = Ye.exec(M)); ) a.push(u[1]);
                    Ye.lastIndex = 0;
                }
                return a;
            }
            function Vt(M, a, u) {
                const y = M.toString(),
                    B = y.replace(Ye, (Q, me) => {
                        let ye = a[me];
                        return (
                            a.hasOwnProperty(me) ||
                                (u.push(
                                    (function fe(M) {
                                        return new m.vHH(3003, O);
                                    })()
                                ),
                                (ye = '')),
                            ye.toString()
                        );
                    });
                return B == y ? M : B;
            }
            function Sn(M) {
                const a = [];
                let u = M.next();
                for (; !u.done; ) a.push(u.value), (u = M.next());
                return a;
            }
            const ir = /-+([a-z0-9])/g;
            function sr(M) {
                return M.replace(ir, (...a) => a[1].toUpperCase());
            }
            function ur(M) {
                return M.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
            }
            function Yn(M, a, u) {
                switch (a.type) {
                    case 7:
                        return M.visitTrigger(a, u);
                    case 0:
                        return M.visitState(a, u);
                    case 1:
                        return M.visitTransition(a, u);
                    case 2:
                        return M.visitSequence(a, u);
                    case 3:
                        return M.visitGroup(a, u);
                    case 4:
                        return M.visitAnimate(a, u);
                    case 5:
                        return M.visitKeyframes(a, u);
                    case 6:
                        return M.visitStyle(a, u);
                    case 8:
                        return M.visitReference(a, u);
                    case 9:
                        return M.visitAnimateChild(a, u);
                    case 10:
                        return M.visitAnimateRef(a, u);
                    case 11:
                        return M.visitQuery(a, u);
                    case 12:
                        return M.visitStagger(a, u);
                    default:
                        throw (function _e(M) {
                            return new m.vHH(3004, O);
                        })();
                }
            }
            function or(M, a) {
                return window.getComputedStyle(M)[a];
            }
            function Nr(M, a) {
                const u = [];
                return (
                    'string' == typeof M
                        ? M.split(/\s*,\s*/).forEach((y) =>
                              (function qn(M, a, u) {
                                  if (':' == M[0]) {
                                      const Ue = (function tn(M, a) {
                                          switch (M) {
                                              case ':enter':
                                                  return 'void => *';
                                              case ':leave':
                                                  return '* => void';
                                              case ':increment':
                                                  return (u, y) =>
                                                      parseFloat(y) >
                                                      parseFloat(u);
                                              case ':decrement':
                                                  return (u, y) =>
                                                      parseFloat(y) <
                                                      parseFloat(u);
                                              default:
                                                  return (
                                                      a.push(
                                                          (function Fe(M) {
                                                              return new m.vHH(
                                                                  3016,
                                                                  O
                                                              );
                                                          })()
                                                      ),
                                                      '* => *'
                                                  );
                                          }
                                      })(M, u);
                                      if ('function' == typeof Ue)
                                          return void a.push(Ue);
                                      M = Ue;
                                  }
                                  const y = M.match(
                                      /^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/
                                  );
                                  if (null == y || y.length < 4)
                                      return (
                                          u.push(
                                              (function we(M) {
                                                  return new m.vHH(3015, O);
                                              })()
                                          ),
                                          a
                                      );
                                  const B = y[1],
                                      Q = y[2],
                                      me = y[3];
                                  a.push(ce(B, me));
                                  '<' == Q[0] &&
                                      !('*' == B && '*' == me) &&
                                      a.push(ce(me, B));
                              })(y, u, a)
                          )
                        : u.push(M),
                    u
                );
            }
            const Ar = new Set(['true', '1']),
                Or = new Set(['false', '0']);
            function ce(M, a) {
                const u = Ar.has(M) || Or.has(M),
                    y = Ar.has(a) || Or.has(a);
                return (B, Q) => {
                    let me = '*' == M || M == B,
                        ye = '*' == a || a == Q;
                    return (
                        !me &&
                            u &&
                            'boolean' == typeof B &&
                            (me = B ? Ar.has(M) : Or.has(M)),
                        !ye &&
                            y &&
                            'boolean' == typeof Q &&
                            (ye = Q ? Ar.has(a) : Or.has(a)),
                        me && ye
                    );
                };
            }
            const xe = new RegExp('s*:selfs*,?', 'g');
            function Ge(M, a, u, y) {
                return new _t(M).build(a, u, y);
            }
            class _t {
                constructor(a) {
                    this._driver = a;
                }
                build(a, u, y) {
                    const B = new Nn(u);
                    this._resetContextStyleTimingState(B);
                    const Q = Yn(this, X(a), B);
                    return (
                        B.unsupportedCSSPropertiesFound.size &&
                            B.unsupportedCSSPropertiesFound.keys(),
                        Q
                    );
                }
                _resetContextStyleTimingState(a) {
                    (a.currentQuerySelector = ''),
                        (a.collectedStyles = {}),
                        (a.collectedStyles[''] = {}),
                        (a.currentTime = 0);
                }
                visitTrigger(a, u) {
                    let y = (u.queryCount = 0),
                        B = (u.depCount = 0);
                    const Q = [],
                        me = [];
                    return (
                        '@' == a.name.charAt(0) &&
                            u.errors.push(
                                (function Oe() {
                                    return new m.vHH(3006, O);
                                })()
                            ),
                        a.definitions.forEach((ye) => {
                            if (
                                (this._resetContextStyleTimingState(u),
                                0 == ye.type)
                            ) {
                                const Ue = ye,
                                    ot = Ue.name;
                                ot
                                    .toString()
                                    .split(/\s*,\s*/)
                                    .forEach((Bt) => {
                                        (Ue.name = Bt),
                                            Q.push(this.visitState(Ue, u));
                                    }),
                                    (Ue.name = ot);
                            } else if (1 == ye.type) {
                                const Ue = this.visitTransition(ye, u);
                                (y += Ue.queryCount),
                                    (B += Ue.depCount),
                                    me.push(Ue);
                            } else
                                u.errors.push(
                                    (function pe() {
                                        return new m.vHH(3007, O);
                                    })()
                                );
                        }),
                        {
                            type: 7,
                            name: a.name,
                            states: Q,
                            transitions: me,
                            queryCount: y,
                            depCount: B,
                            options: null,
                        }
                    );
                }
                visitState(a, u) {
                    const y = this.visitStyle(a.styles, u),
                        B = (a.options && a.options.params) || null;
                    if (y.containsDynamicStyles) {
                        const Q = new Set(),
                            me = B || {};
                        y.styles.forEach((ye) => {
                            if (an(ye)) {
                                const Ue = ye;
                                Object.keys(Ue).forEach((ot) => {
                                    kt(Ue[ot]).forEach((Bt) => {
                                        me.hasOwnProperty(Bt) || Q.add(Bt);
                                    });
                                });
                            }
                        }),
                            Q.size &&
                                (Sn(Q.values()),
                                u.errors.push(
                                    (function J(M, a) {
                                        return new m.vHH(3008, O);
                                    })()
                                ));
                    }
                    return {
                        type: 0,
                        name: a.name,
                        style: y,
                        options: B ? { params: B } : null,
                    };
                }
                visitTransition(a, u) {
                    (u.queryCount = 0), (u.depCount = 0);
                    const y = Yn(this, X(a.animation), u);
                    return {
                        type: 1,
                        matchers: Nr(a.expr, u.errors),
                        animation: y,
                        queryCount: u.queryCount,
                        depCount: u.depCount,
                        options: Cr(a.options),
                    };
                }
                visitSequence(a, u) {
                    return {
                        type: 2,
                        steps: a.steps.map((y) => Yn(this, y, u)),
                        options: Cr(a.options),
                    };
                }
                visitGroup(a, u) {
                    const y = u.currentTime;
                    let B = 0;
                    const Q = a.steps.map((me) => {
                        u.currentTime = y;
                        const ye = Yn(this, me, u);
                        return (B = Math.max(B, u.currentTime)), ye;
                    });
                    return (
                        (u.currentTime = B),
                        { type: 3, steps: Q, options: Cr(a.options) }
                    );
                }
                visitAnimate(a, u) {
                    const y = (function pr(M, a) {
                        if (M.hasOwnProperty('duration')) return M;
                        if ('number' == typeof M)
                            return wr(et(M, a).duration, 0, '');
                        const u = M;
                        if (
                            u
                                .split(/\s+/)
                                .some(
                                    (Q) =>
                                        '{' == Q.charAt(0) && '{' == Q.charAt(1)
                                )
                        ) {
                            const Q = wr(0, 0, '');
                            return (Q.dynamic = !0), (Q.strValue = u), Q;
                        }
                        const B = et(u, a);
                        return wr(B.duration, B.delay, B.easing);
                    })(a.timings, u.errors);
                    u.currentAnimateTimings = y;
                    let B,
                        Q = a.styles ? a.styles : (0, S.oB)({});
                    if (5 == Q.type) B = this.visitKeyframes(Q, u);
                    else {
                        let me = a.styles,
                            ye = !1;
                        if (!me) {
                            ye = !0;
                            const ot = {};
                            y.easing && (ot.easing = y.easing),
                                (me = (0, S.oB)(ot));
                        }
                        u.currentTime += y.duration + y.delay;
                        const Ue = this.visitStyle(me, u);
                        (Ue.isEmptyStep = ye), (B = Ue);
                    }
                    return (
                        (u.currentAnimateTimings = null),
                        { type: 4, timings: y, style: B, options: null }
                    );
                }
                visitStyle(a, u) {
                    const y = this._makeStyleAst(a, u);
                    return this._validateStyleAst(y, u), y;
                }
                _makeStyleAst(a, u) {
                    const y = [];
                    Array.isArray(a.styles)
                        ? a.styles.forEach((me) => {
                              'string' == typeof me
                                  ? me == S.l3
                                      ? y.push(me)
                                      : u.errors.push(
                                            (function Me(M) {
                                                return new m.vHH(3002, O);
                                            })()
                                        )
                                  : y.push(me);
                          })
                        : y.push(a.styles);
                    let B = !1,
                        Q = null;
                    return (
                        y.forEach((me) => {
                            if (an(me)) {
                                const ye = me,
                                    Ue = ye.easing;
                                if ((Ue && ((Q = Ue), delete ye.easing), !B))
                                    for (let ot in ye)
                                        if (
                                            ye[ot].toString().indexOf('{{') >= 0
                                        ) {
                                            B = !0;
                                            break;
                                        }
                            }
                        }),
                        {
                            type: 6,
                            styles: y,
                            easing: Q,
                            offset: a.offset,
                            containsDynamicStyles: B,
                            options: null,
                        }
                    );
                }
                _validateStyleAst(a, u) {
                    const y = u.currentAnimateTimings;
                    let B = u.currentTime,
                        Q = u.currentTime;
                    y && Q > 0 && (Q -= y.duration + y.delay),
                        a.styles.forEach((me) => {
                            'string' != typeof me &&
                                Object.keys(me).forEach((ye) => {
                                    if (!this._driver.validateStyleProperty(ye))
                                        return (
                                            delete me[ye],
                                            void u.unsupportedCSSPropertiesFound.add(
                                                ye
                                            )
                                        );
                                    const Ue =
                                            u.collectedStyles[
                                                u.currentQuerySelector
                                            ],
                                        ot = Ue[ye];
                                    let Bt = !0;
                                    ot &&
                                        (Q != B &&
                                            Q >= ot.startTime &&
                                            B <= ot.endTime &&
                                            (u.errors.push(
                                                (function De(M, a, u, y, B) {
                                                    return new m.vHH(3010, O);
                                                })()
                                            ),
                                            (Bt = !1)),
                                        (Q = ot.startTime)),
                                        Bt &&
                                            (Ue[ye] = {
                                                startTime: Q,
                                                endTime: B,
                                            }),
                                        u.options &&
                                            (function Se(M, a, u) {
                                                const y = a.params || {},
                                                    B = kt(M);
                                                B.length &&
                                                    B.forEach((Q) => {
                                                        y.hasOwnProperty(Q) ||
                                                            u.push(
                                                                (function K(M) {
                                                                    return new m.vHH(
                                                                        3001,
                                                                        O
                                                                    );
                                                                })()
                                                            );
                                                    });
                                            })(me[ye], u.options, u.errors);
                                });
                        });
                }
                visitKeyframes(a, u) {
                    const y = { type: 5, styles: [], options: null };
                    if (!u.currentAnimateTimings)
                        return (
                            u.errors.push(
                                (function R() {
                                    return new m.vHH(3011, O);
                                })()
                            ),
                            y
                        );
                    let Q = 0;
                    const me = [];
                    let ye = !1,
                        Ue = !1,
                        ot = 0;
                    const Bt = a.steps.map((_r) => {
                        const Sr = this._makeStyleAst(_r, u);
                        let jr =
                                null != Sr.offset
                                    ? Sr.offset
                                    : (function Vn(M) {
                                          if ('string' == typeof M) return null;
                                          let a = null;
                                          if (Array.isArray(M))
                                              M.forEach((u) => {
                                                  if (
                                                      an(u) &&
                                                      u.hasOwnProperty('offset')
                                                  ) {
                                                      const y = u;
                                                      (a = parseFloat(
                                                          y.offset
                                                      )),
                                                          delete y.offset;
                                                  }
                                              });
                                          else if (
                                              an(M) &&
                                              M.hasOwnProperty('offset')
                                          ) {
                                              const u = M;
                                              (a = parseFloat(u.offset)),
                                                  delete u.offset;
                                          }
                                          return a;
                                      })(Sr.styles),
                            br = 0;
                        return (
                            null != jr && (Q++, (br = Sr.offset = jr)),
                            (Ue = Ue || br < 0 || br > 1),
                            (ye = ye || br < ot),
                            (ot = br),
                            me.push(br),
                            Sr
                        );
                    });
                    Ue &&
                        u.errors.push(
                            (function te() {
                                return new m.vHH(3012, O);
                            })()
                        ),
                        ye &&
                            u.errors.push(
                                (function G() {
                                    return new m.vHH(3200, O);
                                })()
                            );
                    const Ht = a.steps.length;
                    let _n = 0;
                    Q > 0 && Q < Ht
                        ? u.errors.push(
                              (function oe() {
                                  return new m.vHH(3202, O);
                              })()
                          )
                        : 0 == Q && (_n = 1 / (Ht - 1));
                    const pn = Ht - 1,
                        qt = u.currentTime,
                        dn = u.currentAnimateTimings,
                        nr = dn.duration;
                    return (
                        Bt.forEach((_r, Sr) => {
                            const jr =
                                    _n > 0 ? (Sr == pn ? 1 : _n * Sr) : me[Sr],
                                br = jr * nr;
                            (u.currentTime = qt + dn.delay + br),
                                (dn.duration = br),
                                this._validateStyleAst(_r, u),
                                (_r.offset = jr),
                                y.styles.push(_r);
                        }),
                        y
                    );
                }
                visitReference(a, u) {
                    return {
                        type: 8,
                        animation: Yn(this, X(a.animation), u),
                        options: Cr(a.options),
                    };
                }
                visitAnimateChild(a, u) {
                    return u.depCount++, { type: 9, options: Cr(a.options) };
                }
                visitAnimateRef(a, u) {
                    return {
                        type: 10,
                        animation: this.visitReference(a.animation, u),
                        options: Cr(a.options),
                    };
                }
                visitQuery(a, u) {
                    const y = u.currentQuerySelector,
                        B = a.options || {};
                    u.queryCount++, (u.currentQuery = a);
                    const [Q, me] = (function Gt(M) {
                        const a = !!M.split(/\s*,\s*/).find(
                            (u) => ':self' == u
                        );
                        return (
                            a && (M = M.replace(xe, '')),
                            (M = M.replace(/@\*/g, Ke)
                                .replace(/@\w+/g, (u) => Ke + '-' + u.substr(1))
                                .replace(/:animating/g, Z)),
                            [M, a]
                        );
                    })(a.selector);
                    (u.currentQuerySelector = y.length ? y + ' ' + Q : Q),
                        gn(u.collectedStyles, u.currentQuerySelector, {});
                    const ye = Yn(this, X(a.animation), u);
                    return (
                        (u.currentQuery = null),
                        (u.currentQuerySelector = y),
                        {
                            type: 11,
                            selector: Q,
                            limit: B.limit || 0,
                            optional: !!B.optional,
                            includeSelf: me,
                            animation: ye,
                            originalSelector: a.selector,
                            options: Cr(a.options),
                        }
                    );
                }
                visitStagger(a, u) {
                    u.currentQuery ||
                        u.errors.push(
                            (function re() {
                                return new m.vHH(3013, O);
                            })()
                        );
                    const y =
                        'full' === a.timings
                            ? { duration: 0, delay: 0, easing: 'full' }
                            : et(a.timings, u.errors, !0);
                    return {
                        type: 12,
                        animation: Yn(this, X(a.animation), u),
                        timings: y,
                        options: null,
                    };
                }
            }
            class Nn {
                constructor(a) {
                    (this.errors = a),
                        (this.queryCount = 0),
                        (this.depCount = 0),
                        (this.currentTransition = null),
                        (this.currentQuery = null),
                        (this.currentQuerySelector = null),
                        (this.currentAnimateTimings = null),
                        (this.currentTime = 0),
                        (this.collectedStyles = {}),
                        (this.options = null),
                        (this.unsupportedCSSPropertiesFound = new Set());
                }
            }
            function an(M) {
                return !Array.isArray(M) && 'object' == typeof M;
            }
            function Cr(M) {
                return (
                    M
                        ? (M = St(M)).params &&
                          (M.params = (function Ln(M) {
                              return M ? St(M) : null;
                          })(M.params))
                        : (M = {}),
                    M
                );
            }
            function wr(M, a, u) {
                return { duration: M, delay: a, easing: u };
            }
            function gr(M, a, u, y, B, Q, me = null, ye = !1) {
                return {
                    type: 1,
                    element: M,
                    keyframes: a,
                    preStyleProps: u,
                    postStyleProps: y,
                    duration: B,
                    delay: Q,
                    totalTime: B + Q,
                    easing: me,
                    subTimeline: ye,
                };
            }
            class Wr {
                constructor() {
                    this._map = new Map();
                }
                get(a) {
                    return this._map.get(a) || [];
                }
                append(a, u) {
                    let y = this._map.get(a);
                    y || this._map.set(a, (y = [])), y.push(...u);
                }
                has(a) {
                    return this._map.has(a);
                }
                clear() {
                    this._map.clear();
                }
            }
            const xr = new RegExp(':enter', 'g'),
                Vi = new RegExp(':leave', 'g');
            function Pe(M, a, u, y, B, Q = {}, me = {}, ye, Ue, ot = []) {
                return new Ie().buildKeyframes(
                    M,
                    a,
                    u,
                    y,
                    B,
                    Q,
                    me,
                    ye,
                    Ue,
                    ot
                );
            }
            class Ie {
                buildKeyframes(a, u, y, B, Q, me, ye, Ue, ot, Bt = []) {
                    ot = ot || new Wr();
                    const Ht = new ut(a, u, ot, B, Q, Bt, []);
                    (Ht.options = Ue),
                        Ht.currentTimeline.setStyles([me], null, Ht.errors, Ue),
                        Yn(this, y, Ht);
                    const _n = Ht.timelines.filter((pn) =>
                        pn.containsAnimation()
                    );
                    if (Object.keys(ye).length) {
                        let pn;
                        for (let qt = _n.length - 1; qt >= 0; qt--) {
                            const dn = _n[qt];
                            if (dn.element === u) {
                                pn = dn;
                                break;
                            }
                        }
                        pn &&
                            !pn.allowOnlyTimelineStyles() &&
                            pn.setStyles([ye], null, Ht.errors, Ue);
                    }
                    return _n.length
                        ? _n.map((pn) => pn.buildKeyframes())
                        : [gr(u, [], [], [], 0, 0, '', !1)];
                }
                visitTrigger(a, u) {}
                visitState(a, u) {}
                visitTransition(a, u) {}
                visitAnimateChild(a, u) {
                    const y = u.subInstructions.get(u.element);
                    if (y) {
                        const B = u.createSubContext(a.options),
                            Q = u.currentTimeline.currentTime,
                            me = this._visitSubInstructions(y, B, B.options);
                        Q != me && u.transformIntoNewTimeline(me);
                    }
                    u.previousNode = a;
                }
                visitAnimateRef(a, u) {
                    const y = u.createSubContext(a.options);
                    y.transformIntoNewTimeline(),
                        this.visitReference(a.animation, y),
                        u.transformIntoNewTimeline(
                            y.currentTimeline.currentTime
                        ),
                        (u.previousNode = a);
                }
                _visitSubInstructions(a, u, y) {
                    let Q = u.currentTimeline.currentTime;
                    const me = null != y.duration ? be(y.duration) : null,
                        ye = null != y.delay ? be(y.delay) : null;
                    return (
                        0 !== me &&
                            a.forEach((Ue) => {
                                const ot = u.appendInstructionToTimeline(
                                    Ue,
                                    me,
                                    ye
                                );
                                Q = Math.max(Q, ot.duration + ot.delay);
                            }),
                        Q
                    );
                }
                visitReference(a, u) {
                    u.updateOptions(a.options, !0),
                        Yn(this, a.animation, u),
                        (u.previousNode = a);
                }
                visitSequence(a, u) {
                    const y = u.subContextCount;
                    let B = u;
                    const Q = a.options;
                    if (
                        Q &&
                        (Q.params || Q.delay) &&
                        ((B = u.createSubContext(Q)),
                        B.transformIntoNewTimeline(),
                        null != Q.delay)
                    ) {
                        6 == B.previousNode.type &&
                            (B.currentTimeline.snapshotCurrentStyles(),
                            (B.previousNode = $e));
                        const me = be(Q.delay);
                        B.delayNextStep(me);
                    }
                    a.steps.length &&
                        (a.steps.forEach((me) => Yn(this, me, B)),
                        B.currentTimeline.applyStylesToKeyframe(),
                        B.subContextCount > y && B.transformIntoNewTimeline()),
                        (u.previousNode = a);
                }
                visitGroup(a, u) {
                    const y = [];
                    let B = u.currentTimeline.currentTime;
                    const Q =
                        a.options && a.options.delay ? be(a.options.delay) : 0;
                    a.steps.forEach((me) => {
                        const ye = u.createSubContext(a.options);
                        Q && ye.delayNextStep(Q),
                            Yn(this, me, ye),
                            (B = Math.max(B, ye.currentTimeline.currentTime)),
                            y.push(ye.currentTimeline);
                    }),
                        y.forEach((me) =>
                            u.currentTimeline.mergeTimelineCollectedStyles(me)
                        ),
                        u.transformIntoNewTimeline(B),
                        (u.previousNode = a);
                }
                _visitTiming(a, u) {
                    if (a.dynamic) {
                        const y = a.strValue;
                        return et(
                            u.params ? Vt(y, u.params, u.errors) : y,
                            u.errors
                        );
                    }
                    return {
                        duration: a.duration,
                        delay: a.delay,
                        easing: a.easing,
                    };
                }
                visitAnimate(a, u) {
                    const y = (u.currentAnimateTimings = this._visitTiming(
                            a.timings,
                            u
                        )),
                        B = u.currentTimeline;
                    y.delay &&
                        (u.incrementTime(y.delay), B.snapshotCurrentStyles());
                    const Q = a.style;
                    5 == Q.type
                        ? this.visitKeyframes(Q, u)
                        : (u.incrementTime(y.duration),
                          this.visitStyle(Q, u),
                          B.applyStylesToKeyframe()),
                        (u.currentAnimateTimings = null),
                        (u.previousNode = a);
                }
                visitStyle(a, u) {
                    const y = u.currentTimeline,
                        B = u.currentAnimateTimings;
                    !B &&
                        y.getCurrentStyleProperties().length &&
                        y.forwardFrame();
                    const Q = (B && B.easing) || a.easing;
                    a.isEmptyStep
                        ? y.applyEmptyStep(Q)
                        : y.setStyles(a.styles, Q, u.errors, u.options),
                        (u.previousNode = a);
                }
                visitKeyframes(a, u) {
                    const y = u.currentAnimateTimings,
                        B = u.currentTimeline.duration,
                        Q = y.duration,
                        ye = u.createSubContext().currentTimeline;
                    (ye.easing = y.easing),
                        a.styles.forEach((Ue) => {
                            ye.forwardTime((Ue.offset || 0) * Q),
                                ye.setStyles(
                                    Ue.styles,
                                    Ue.easing,
                                    u.errors,
                                    u.options
                                ),
                                ye.applyStylesToKeyframe();
                        }),
                        u.currentTimeline.mergeTimelineCollectedStyles(ye),
                        u.transformIntoNewTimeline(B + Q),
                        (u.previousNode = a);
                }
                visitQuery(a, u) {
                    const y = u.currentTimeline.currentTime,
                        B = a.options || {},
                        Q = B.delay ? be(B.delay) : 0;
                    Q &&
                        (6 === u.previousNode.type ||
                            (0 == y &&
                                u.currentTimeline.getCurrentStyleProperties()
                                    .length)) &&
                        (u.currentTimeline.snapshotCurrentStyles(),
                        (u.previousNode = $e));
                    let me = y;
                    const ye = u.invokeQuery(
                        a.selector,
                        a.originalSelector,
                        a.limit,
                        a.includeSelf,
                        !!B.optional,
                        u.errors
                    );
                    u.currentQueryTotal = ye.length;
                    let Ue = null;
                    ye.forEach((ot, Bt) => {
                        u.currentQueryIndex = Bt;
                        const Ht = u.createSubContext(a.options, ot);
                        Q && Ht.delayNextStep(Q),
                            ot === u.element && (Ue = Ht.currentTimeline),
                            Yn(this, a.animation, Ht),
                            Ht.currentTimeline.applyStylesToKeyframe(),
                            (me = Math.max(me, Ht.currentTimeline.currentTime));
                    }),
                        (u.currentQueryIndex = 0),
                        (u.currentQueryTotal = 0),
                        u.transformIntoNewTimeline(me),
                        Ue &&
                            (u.currentTimeline.mergeTimelineCollectedStyles(Ue),
                            u.currentTimeline.snapshotCurrentStyles()),
                        (u.previousNode = a);
                }
                visitStagger(a, u) {
                    const y = u.parentContext,
                        B = u.currentTimeline,
                        Q = a.timings,
                        me = Math.abs(Q.duration),
                        ye = me * (u.currentQueryTotal - 1);
                    let Ue = me * u.currentQueryIndex;
                    switch (Q.duration < 0 ? 'reverse' : Q.easing) {
                        case 'reverse':
                            Ue = ye - Ue;
                            break;
                        case 'full':
                            Ue = y.currentStaggerTime;
                    }
                    const Bt = u.currentTimeline;
                    Ue && Bt.delayNextStep(Ue);
                    const Ht = Bt.currentTime;
                    Yn(this, a.animation, u),
                        (u.previousNode = a),
                        (y.currentStaggerTime =
                            B.currentTime -
                            Ht +
                            (B.startTime - y.currentTimeline.startTime));
                }
            }
            const $e = {};
            class ut {
                constructor(a, u, y, B, Q, me, ye, Ue) {
                    (this._driver = a),
                        (this.element = u),
                        (this.subInstructions = y),
                        (this._enterClassName = B),
                        (this._leaveClassName = Q),
                        (this.errors = me),
                        (this.timelines = ye),
                        (this.parentContext = null),
                        (this.currentAnimateTimings = null),
                        (this.previousNode = $e),
                        (this.subContextCount = 0),
                        (this.options = {}),
                        (this.currentQueryIndex = 0),
                        (this.currentQueryTotal = 0),
                        (this.currentStaggerTime = 0),
                        (this.currentTimeline =
                            Ue || new Et(this._driver, u, 0)),
                        ye.push(this.currentTimeline);
                }
                get params() {
                    return this.options.params;
                }
                updateOptions(a, u) {
                    if (!a) return;
                    const y = a;
                    let B = this.options;
                    null != y.duration && (B.duration = be(y.duration)),
                        null != y.delay && (B.delay = be(y.delay));
                    const Q = y.params;
                    if (Q) {
                        let me = B.params;
                        me || (me = this.options.params = {}),
                            Object.keys(Q).forEach((ye) => {
                                (!u || !me.hasOwnProperty(ye)) &&
                                    (me[ye] = Vt(Q[ye], me, this.errors));
                            });
                    }
                }
                _copyOptions() {
                    const a = {};
                    if (this.options) {
                        const u = this.options.params;
                        if (u) {
                            const y = (a.params = {});
                            Object.keys(u).forEach((B) => {
                                y[B] = u[B];
                            });
                        }
                    }
                    return a;
                }
                createSubContext(a = null, u, y) {
                    const B = u || this.element,
                        Q = new ut(
                            this._driver,
                            B,
                            this.subInstructions,
                            this._enterClassName,
                            this._leaveClassName,
                            this.errors,
                            this.timelines,
                            this.currentTimeline.fork(B, y || 0)
                        );
                    return (
                        (Q.previousNode = this.previousNode),
                        (Q.currentAnimateTimings = this.currentAnimateTimings),
                        (Q.options = this._copyOptions()),
                        Q.updateOptions(a),
                        (Q.currentQueryIndex = this.currentQueryIndex),
                        (Q.currentQueryTotal = this.currentQueryTotal),
                        (Q.parentContext = this),
                        this.subContextCount++,
                        Q
                    );
                }
                transformIntoNewTimeline(a) {
                    return (
                        (this.previousNode = $e),
                        (this.currentTimeline = this.currentTimeline.fork(
                            this.element,
                            a
                        )),
                        this.timelines.push(this.currentTimeline),
                        this.currentTimeline
                    );
                }
                appendInstructionToTimeline(a, u, y) {
                    const B = {
                            duration: null != u ? u : a.duration,
                            delay:
                                this.currentTimeline.currentTime +
                                (null != y ? y : 0) +
                                a.delay,
                            easing: '',
                        },
                        Q = new Ut(
                            this._driver,
                            a.element,
                            a.keyframes,
                            a.preStyleProps,
                            a.postStyleProps,
                            B,
                            a.stretchStartingKeyframe
                        );
                    return this.timelines.push(Q), B;
                }
                incrementTime(a) {
                    this.currentTimeline.forwardTime(
                        this.currentTimeline.duration + a
                    );
                }
                delayNextStep(a) {
                    a > 0 && this.currentTimeline.delayNextStep(a);
                }
                invokeQuery(a, u, y, B, Q, me) {
                    let ye = [];
                    if ((B && ye.push(this.element), a.length > 0)) {
                        a = (a = a.replace(
                            xr,
                            '.' + this._enterClassName
                        )).replace(Vi, '.' + this._leaveClassName);
                        let ot = this._driver.query(this.element, a, 1 != y);
                        0 !== y &&
                            (ot =
                                y < 0
                                    ? ot.slice(ot.length + y, ot.length)
                                    : ot.slice(0, y)),
                            ye.push(...ot);
                    }
                    return (
                        !Q &&
                            0 == ye.length &&
                            me.push(
                                (function ne(M) {
                                    return new m.vHH(3014, O);
                                })()
                            ),
                        ye
                    );
                }
            }
            class Et {
                constructor(a, u, y, B) {
                    (this._driver = a),
                        (this.element = u),
                        (this.startTime = y),
                        (this._elementTimelineStylesLookup = B),
                        (this.duration = 0),
                        (this._previousKeyframe = {}),
                        (this._currentKeyframe = {}),
                        (this._keyframes = new Map()),
                        (this._styleSummary = {}),
                        (this._pendingStyles = {}),
                        (this._backFill = {}),
                        (this._currentEmptyStepKeyframe = null),
                        this._elementTimelineStylesLookup ||
                            (this._elementTimelineStylesLookup = new Map()),
                        (this._localTimelineStyles = Object.create(
                            this._backFill,
                            {}
                        )),
                        (this._globalTimelineStyles =
                            this._elementTimelineStylesLookup.get(u)),
                        this._globalTimelineStyles ||
                            ((this._globalTimelineStyles =
                                this._localTimelineStyles),
                            this._elementTimelineStylesLookup.set(
                                u,
                                this._localTimelineStyles
                            )),
                        this._loadKeyframe();
                }
                containsAnimation() {
                    switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.getCurrentStyleProperties().length > 0;
                        default:
                            return !0;
                    }
                }
                getCurrentStyleProperties() {
                    return Object.keys(this._currentKeyframe);
                }
                get currentTime() {
                    return this.startTime + this.duration;
                }
                delayNextStep(a) {
                    const u =
                        1 == this._keyframes.size &&
                        Object.keys(this._pendingStyles).length;
                    this.duration || u
                        ? (this.forwardTime(this.currentTime + a),
                          u && this.snapshotCurrentStyles())
                        : (this.startTime += a);
                }
                fork(a, u) {
                    return (
                        this.applyStylesToKeyframe(),
                        new Et(
                            this._driver,
                            a,
                            u || this.currentTime,
                            this._elementTimelineStylesLookup
                        )
                    );
                }
                _loadKeyframe() {
                    this._currentKeyframe &&
                        (this._previousKeyframe = this._currentKeyframe),
                        (this._currentKeyframe = this._keyframes.get(
                            this.duration
                        )),
                        this._currentKeyframe ||
                            ((this._currentKeyframe = Object.create(
                                this._backFill,
                                {}
                            )),
                            this._keyframes.set(
                                this.duration,
                                this._currentKeyframe
                            ));
                }
                forwardFrame() {
                    (this.duration += 1), this._loadKeyframe();
                }
                forwardTime(a) {
                    this.applyStylesToKeyframe(),
                        (this.duration = a),
                        this._loadKeyframe();
                }
                _updateStyle(a, u) {
                    (this._localTimelineStyles[a] = u),
                        (this._globalTimelineStyles[a] = u),
                        (this._styleSummary[a] = {
                            time: this.currentTime,
                            value: u,
                        });
                }
                allowOnlyTimelineStyles() {
                    return (
                        this._currentEmptyStepKeyframe !== this._currentKeyframe
                    );
                }
                applyEmptyStep(a) {
                    a && (this._previousKeyframe.easing = a),
                        Object.keys(this._globalTimelineStyles).forEach((u) => {
                            (this._backFill[u] =
                                this._globalTimelineStyles[u] || S.l3),
                                (this._currentKeyframe[u] = S.l3);
                        }),
                        (this._currentEmptyStepKeyframe =
                            this._currentKeyframe);
                }
                setStyles(a, u, y, B) {
                    u && (this._previousKeyframe.easing = u);
                    const Q = (B && B.params) || {},
                        me = (function mr(M, a) {
                            const u = {};
                            let y;
                            return (
                                M.forEach((B) => {
                                    '*' === B
                                        ? ((y = y || Object.keys(a)),
                                          y.forEach((Q) => {
                                              u[Q] = S.l3;
                                          }))
                                        : un(B, !1, u);
                                }),
                                u
                            );
                        })(a, this._globalTimelineStyles);
                    Object.keys(me).forEach((ye) => {
                        const Ue = Vt(me[ye], Q, y);
                        (this._pendingStyles[ye] = Ue),
                            this._localTimelineStyles.hasOwnProperty(ye) ||
                                (this._backFill[ye] =
                                    this._globalTimelineStyles.hasOwnProperty(
                                        ye
                                    )
                                        ? this._globalTimelineStyles[ye]
                                        : S.l3),
                            this._updateStyle(ye, Ue);
                    });
                }
                applyStylesToKeyframe() {
                    const a = this._pendingStyles,
                        u = Object.keys(a);
                    0 != u.length &&
                        ((this._pendingStyles = {}),
                        u.forEach((y) => {
                            this._currentKeyframe[y] = a[y];
                        }),
                        Object.keys(this._localTimelineStyles).forEach((y) => {
                            this._currentKeyframe.hasOwnProperty(y) ||
                                (this._currentKeyframe[y] =
                                    this._localTimelineStyles[y]);
                        }));
                }
                snapshotCurrentStyles() {
                    Object.keys(this._localTimelineStyles).forEach((a) => {
                        const u = this._localTimelineStyles[a];
                        (this._pendingStyles[a] = u), this._updateStyle(a, u);
                    });
                }
                getFinalKeyframe() {
                    return this._keyframes.get(this.duration);
                }
                get properties() {
                    const a = [];
                    for (let u in this._currentKeyframe) a.push(u);
                    return a;
                }
                mergeTimelineCollectedStyles(a) {
                    Object.keys(a._styleSummary).forEach((u) => {
                        const y = this._styleSummary[u],
                            B = a._styleSummary[u];
                        (!y || B.time > y.time) &&
                            this._updateStyle(u, B.value);
                    });
                }
                buildKeyframes() {
                    this.applyStylesToKeyframe();
                    const a = new Set(),
                        u = new Set(),
                        y = 1 === this._keyframes.size && 0 === this.duration;
                    let B = [];
                    this._keyframes.forEach((ye, Ue) => {
                        const ot = un(ye, !0);
                        Object.keys(ot).forEach((Bt) => {
                            const Ht = ot[Bt];
                            Ht == S.k1 ? a.add(Bt) : Ht == S.l3 && u.add(Bt);
                        }),
                            y || (ot.offset = Ue / this.duration),
                            B.push(ot);
                    });
                    const Q = a.size ? Sn(a.values()) : [],
                        me = u.size ? Sn(u.values()) : [];
                    if (y) {
                        const ye = B[0],
                            Ue = St(ye);
                        (ye.offset = 0), (Ue.offset = 1), (B = [ye, Ue]);
                    }
                    return gr(
                        this.element,
                        B,
                        Q,
                        me,
                        this.duration,
                        this.startTime,
                        this.easing,
                        !1
                    );
                }
            }
            class Ut extends Et {
                constructor(a, u, y, B, Q, me, ye = !1) {
                    super(a, u, me.delay),
                        (this.keyframes = y),
                        (this.preStyleProps = B),
                        (this.postStyleProps = Q),
                        (this._stretchStartingKeyframe = ye),
                        (this.timings = {
                            duration: me.duration,
                            delay: me.delay,
                            easing: me.easing,
                        });
                }
                containsAnimation() {
                    return this.keyframes.length > 1;
                }
                buildKeyframes() {
                    let a = this.keyframes,
                        { delay: u, duration: y, easing: B } = this.timings;
                    if (this._stretchStartingKeyframe && u) {
                        const Q = [],
                            me = y + u,
                            ye = u / me,
                            Ue = un(a[0], !1);
                        (Ue.offset = 0), Q.push(Ue);
                        const ot = un(a[0], !1);
                        (ot.offset = On(ye)), Q.push(ot);
                        const Bt = a.length - 1;
                        for (let Ht = 1; Ht <= Bt; Ht++) {
                            let _n = un(a[Ht], !1);
                            (_n.offset = On((u + _n.offset * y) / me)),
                                Q.push(_n);
                        }
                        (y = me), (u = 0), (B = ''), (a = Q);
                    }
                    return gr(
                        this.element,
                        a,
                        this.preStyleProps,
                        this.postStyleProps,
                        y,
                        u,
                        B,
                        !0
                    );
                }
            }
            function On(M, a = 3) {
                const u = Math.pow(10, a - 1);
                return Math.round(M * u) / u;
            }
            class Gr {}
            class Br extends Gr {
                normalizePropertyName(a, u) {
                    return sr(a);
                }
                normalizeStyleValue(a, u, y, B) {
                    let Q = '';
                    const me = y.toString().trim();
                    if (Ji[u] && 0 !== y && '0' !== y)
                        if ('number' == typeof y) Q = 'px';
                        else {
                            const ye = y.match(/^[+-]?[\d\.]+([a-z]*)$/);
                            ye &&
                                0 == ye[1].length &&
                                B.push(
                                    (function Re(M, a) {
                                        return new m.vHH(3005, O);
                                    })()
                                );
                        }
                    return me + Q;
                }
            }
            const Ji = (() =>
                (function Yr(M) {
                    const a = {};
                    return M.forEach((u) => (a[u] = !0)), a;
                })(
                    'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
                        ','
                    )
                ))();
            function qi(M, a, u, y, B, Q, me, ye, Ue, ot, Bt, Ht, _n) {
                return {
                    type: 0,
                    element: M,
                    triggerName: a,
                    isRemovalTransition: B,
                    fromState: u,
                    fromStyles: Q,
                    toState: y,
                    toStyles: me,
                    timelines: ye,
                    queriedElements: Ue,
                    preStyleProps: ot,
                    postStyleProps: Bt,
                    totalTime: Ht,
                    errors: _n,
                };
            }
            const ri = {};
            class ji {
                constructor(a, u, y) {
                    (this._triggerName = a),
                        (this.ast = u),
                        (this._stateStyles = y);
                }
                match(a, u, y, B) {
                    return (function Zr(M, a, u, y, B) {
                        return M.some((Q) => Q(a, u, y, B));
                    })(this.ast.matchers, a, u, y, B);
                }
                buildStyles(a, u, y) {
                    const B = this._stateStyles['*'],
                        Q = this._stateStyles[a],
                        me = B ? B.buildStyles(u, y) : {};
                    return Q ? Q.buildStyles(u, y) : me;
                }
                build(a, u, y, B, Q, me, ye, Ue, ot, Bt) {
                    const Ht = [],
                        _n =
                            (this.ast.options && this.ast.options.params) || ri,
                        qt = this.buildStyles(y, (ye && ye.params) || ri, Ht),
                        dn = (Ue && Ue.params) || ri,
                        nr = this.buildStyles(B, dn, Ht),
                        _r = new Set(),
                        Sr = new Map(),
                        jr = new Map(),
                        br = 'void' === B,
                        hi = {
                            params: Object.assign(Object.assign({}, _n), dn),
                        },
                        Jr = Bt
                            ? []
                            : Pe(
                                  a,
                                  u,
                                  this.ast.animation,
                                  Q,
                                  me,
                                  qt,
                                  nr,
                                  hi,
                                  ot,
                                  Ht
                              );
                    let p = 0;
                    if (
                        (Jr.forEach((c) => {
                            p = Math.max(c.duration + c.delay, p);
                        }),
                        Ht.length)
                    )
                        return qi(
                            u,
                            this._triggerName,
                            y,
                            B,
                            br,
                            qt,
                            nr,
                            [],
                            [],
                            Sr,
                            jr,
                            p,
                            Ht
                        );
                    Jr.forEach((c) => {
                        const D = c.element,
                            P = gn(Sr, D, {});
                        c.preStyleProps.forEach((ie) => (P[ie] = !0));
                        const $ = gn(jr, D, {});
                        c.postStyleProps.forEach((ie) => ($[ie] = !0)),
                            D !== u && _r.add(D);
                    });
                    const d = Sn(_r.values());
                    return qi(
                        u,
                        this._triggerName,
                        y,
                        B,
                        br,
                        qt,
                        nr,
                        Jr,
                        d,
                        Sr,
                        jr,
                        p
                    );
                }
            }
            class Hi {
                constructor(a, u, y) {
                    (this.styles = a),
                        (this.defaultParams = u),
                        (this.normalizer = y);
                }
                buildStyles(a, u) {
                    const y = {},
                        B = St(this.defaultParams);
                    return (
                        Object.keys(a).forEach((Q) => {
                            const me = a[Q];
                            null != me && (B[Q] = me);
                        }),
                        this.styles.styles.forEach((Q) => {
                            if ('string' != typeof Q) {
                                const me = Q;
                                Object.keys(me).forEach((ye) => {
                                    let Ue = me[ye];
                                    Ue.length > 1 && (Ue = Vt(Ue, B, u));
                                    const ot =
                                        this.normalizer.normalizePropertyName(
                                            ye,
                                            u
                                        );
                                    (Ue = this.normalizer.normalizeStyleValue(
                                        ye,
                                        ot,
                                        Ue,
                                        u
                                    )),
                                        (y[ot] = Ue);
                                });
                            }
                        }),
                        y
                    );
                }
            }
            class Xr {
                constructor(a, u, y) {
                    (this.name = a),
                        (this.ast = u),
                        (this._normalizer = y),
                        (this.transitionFactories = []),
                        (this.states = {}),
                        u.states.forEach((B) => {
                            this.states[B.name] = new Hi(
                                B.style,
                                (B.options && B.options.params) || {},
                                y
                            );
                        }),
                        cs(this.states, 'true', '1'),
                        cs(this.states, 'false', '0'),
                        u.transitions.forEach((B) => {
                            this.transitionFactories.push(
                                new ji(a, B, this.states)
                            );
                        }),
                        (this.fallbackTransition = (function ei(M, a, u) {
                            return new ji(
                                M,
                                {
                                    type: 1,
                                    animation: {
                                        type: 2,
                                        steps: [],
                                        options: null,
                                    },
                                    matchers: [(me, ye) => !0],
                                    options: null,
                                    queryCount: 0,
                                    depCount: 0,
                                },
                                a
                            );
                        })(a, this.states));
                }
                get containsQueries() {
                    return this.ast.queryCount > 0;
                }
                matchTransition(a, u, y, B) {
                    return (
                        this.transitionFactories.find((me) =>
                            me.match(a, u, y, B)
                        ) || null
                    );
                }
                matchStyles(a, u, y) {
                    return this.fallbackTransition.buildStyles(a, u, y);
                }
            }
            function cs(M, a, u) {
                M.hasOwnProperty(a)
                    ? M.hasOwnProperty(u) || (M[u] = M[a])
                    : M.hasOwnProperty(u) && (M[a] = M[u]);
            }
            const zr = new Wr();
            class $i {
                constructor(a, u, y) {
                    (this.bodyNode = a),
                        (this._driver = u),
                        (this._normalizer = y),
                        (this._animations = {}),
                        (this._playersById = {}),
                        (this.players = []);
                }
                register(a, u) {
                    const y = [],
                        Q = Ge(this._driver, u, y, []);
                    if (y.length)
                        throw (function Lt(M) {
                            return new m.vHH(3503, O);
                        })();
                    this._animations[a] = Q;
                }
                _buildPlayer(a, u, y) {
                    const B = a.element,
                        Q = Qt(0, this._normalizer, 0, a.keyframes, u, y);
                    return this._driver.animate(
                        B,
                        Q,
                        a.duration,
                        a.delay,
                        a.easing,
                        [],
                        !0
                    );
                }
                create(a, u, y = {}) {
                    const B = [],
                        Q = this._animations[a];
                    let me;
                    const ye = new Map();
                    if (
                        (Q
                            ? ((me = Pe(
                                  this._driver,
                                  u,
                                  Q,
                                  q,
                                  ue,
                                  {},
                                  {},
                                  y,
                                  zr,
                                  B
                              )),
                              me.forEach((Bt) => {
                                  const Ht = gn(ye, Bt.element, {});
                                  Bt.postStyleProps.forEach(
                                      (_n) => (Ht[_n] = null)
                                  );
                              }))
                            : (B.push(
                                  (function hn() {
                                      return new m.vHH(3300, O);
                                  })()
                              ),
                              (me = [])),
                        B.length)
                    )
                        throw (function yt(M) {
                            return new m.vHH(3504, O);
                        })();
                    ye.forEach((Bt, Ht) => {
                        Object.keys(Bt).forEach((_n) => {
                            Bt[_n] = this._driver.computeStyle(Ht, _n, S.l3);
                        });
                    });
                    const ot = xt(
                        me.map((Bt) => {
                            const Ht = ye.get(Bt.element);
                            return this._buildPlayer(Bt, {}, Ht);
                        })
                    );
                    return (
                        (this._playersById[a] = ot),
                        ot.onDestroy(() => this.destroy(a)),
                        this.players.push(ot),
                        ot
                    );
                }
                destroy(a) {
                    const u = this._getPlayer(a);
                    u.destroy(), delete this._playersById[a];
                    const y = this.players.indexOf(u);
                    y >= 0 && this.players.splice(y, 1);
                }
                _getPlayer(a) {
                    const u = this._playersById[a];
                    if (!u)
                        throw (function Ot(M) {
                            return new m.vHH(3301, O);
                        })();
                    return u;
                }
                listen(a, u, y, B) {
                    const Q = rn(u, '', '', '');
                    return ln(this._getPlayer(a), y, Q, B), () => {};
                }
                command(a, u, y, B) {
                    if ('register' == y) return void this.register(a, B[0]);
                    if ('create' == y)
                        return void this.create(a, u, B[0] || {});
                    const Q = this._getPlayer(a);
                    switch (y) {
                        case 'play':
                            Q.play();
                            break;
                        case 'pause':
                            Q.pause();
                            break;
                        case 'reset':
                            Q.reset();
                            break;
                        case 'restart':
                            Q.restart();
                            break;
                        case 'finish':
                            Q.finish();
                            break;
                        case 'init':
                            Q.init();
                            break;
                        case 'setPosition':
                            Q.setPosition(parseFloat(B[0]));
                            break;
                        case 'destroy':
                            this.destroy(a);
                    }
                }
            }
            const ti = 'ng-animate-queued',
                bi = 'ng-animate-disabled',
                ui = [],
                ci = {
                    namespaceId: '',
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1,
                },
                Xi = {
                    namespaceId: '',
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0,
                },
                Ir = '__ng_removed';
            class si {
                constructor(a, u = '') {
                    this.namespaceId = u;
                    const y = a && a.hasOwnProperty('value');
                    if (
                        ((this.value = (function z(M) {
                            return null != M ? M : null;
                        })(y ? a.value : a)),
                        y)
                    ) {
                        const Q = St(a);
                        delete Q.value, (this.options = Q);
                    } else this.options = {};
                    this.options.params || (this.options.params = {});
                }
                get params() {
                    return this.options.params;
                }
                absorbOptions(a) {
                    const u = a.params;
                    if (u) {
                        const y = this.options.params;
                        Object.keys(u).forEach((B) => {
                            null == y[B] && (y[B] = u[B]);
                        });
                    }
                }
            }
            const Pr = 'void',
                Oi = new si(Pr);
            class jn {
                constructor(a, u, y) {
                    (this.id = a),
                        (this.hostElement = u),
                        (this._engine = y),
                        (this.players = []),
                        (this._triggers = {}),
                        (this._queue = []),
                        (this._elementListeners = new Map()),
                        (this._hostClassName = 'ng-tns-' + a),
                        sn(u, this._hostClassName);
                }
                listen(a, u, y, B) {
                    if (!this._triggers.hasOwnProperty(u))
                        throw (function gt(M, a) {
                            return new m.vHH(3302, O);
                        })();
                    if (null == y || 0 == y.length)
                        throw (function Pt(M) {
                            return new m.vHH(3303, O);
                        })();
                    if (
                        !(function Je(M) {
                            return 'start' == M || 'done' == M;
                        })(y)
                    )
                        throw (function It(M, a) {
                            return new m.vHH(3400, O);
                        })();
                    const Q = gn(this._elementListeners, a, []),
                        me = { name: u, phase: y, callback: B };
                    Q.push(me);
                    const ye = gn(this._engine.statesByElement, a, {});
                    return (
                        ye.hasOwnProperty(u) ||
                            (sn(a, Ee), sn(a, Ee + '-' + u), (ye[u] = Oi)),
                        () => {
                            this._engine.afterFlush(() => {
                                const Ue = Q.indexOf(me);
                                Ue >= 0 && Q.splice(Ue, 1),
                                    this._triggers[u] || delete ye[u];
                            });
                        }
                    );
                }
                register(a, u) {
                    return !this._triggers[a] && ((this._triggers[a] = u), !0);
                }
                _getTrigger(a) {
                    const u = this._triggers[a];
                    if (!u)
                        throw (function mt(M) {
                            return new m.vHH(3401, O);
                        })();
                    return u;
                }
                trigger(a, u, y, B = !0) {
                    const Q = this._getTrigger(u),
                        me = new j(this.id, u, a);
                    let ye = this._engine.statesByElement.get(a);
                    ye ||
                        (sn(a, Ee),
                        sn(a, Ee + '-' + u),
                        this._engine.statesByElement.set(a, (ye = {})));
                    let Ue = ye[u];
                    const ot = new si(y, this.id);
                    if (
                        (!(y && y.hasOwnProperty('value')) &&
                            Ue &&
                            ot.absorbOptions(Ue.options),
                        (ye[u] = ot),
                        Ue || (Ue = Oi),
                        ot.value !== Pr && Ue.value === ot.value)
                    ) {
                        if (
                            !(function Hn(M, a) {
                                const u = Object.keys(M),
                                    y = Object.keys(a);
                                if (u.length != y.length) return !1;
                                for (let B = 0; B < u.length; B++) {
                                    const Q = u[B];
                                    if (!a.hasOwnProperty(Q) || M[Q] !== a[Q])
                                        return !1;
                                }
                                return !0;
                            })(Ue.params, ot.params)
                        ) {
                            const dn = [],
                                nr = Q.matchStyles(Ue.value, Ue.params, dn),
                                _r = Q.matchStyles(ot.value, ot.params, dn);
                            dn.length
                                ? this._engine.reportError(dn)
                                : this._engine.afterFlush(() => {
                                      se(a, nr), Le(a, _r);
                                  });
                        }
                        return;
                    }
                    const _n = gn(this._engine.playersByElement, a, []);
                    _n.forEach((dn) => {
                        dn.namespaceId == this.id &&
                            dn.triggerName == u &&
                            dn.queued &&
                            dn.destroy();
                    });
                    let pn = Q.matchTransition(
                            Ue.value,
                            ot.value,
                            a,
                            ot.params
                        ),
                        qt = !1;
                    if (!pn) {
                        if (!B) return;
                        (pn = Q.fallbackTransition), (qt = !0);
                    }
                    return (
                        this._engine.totalQueuedPlayers++,
                        this._queue.push({
                            element: a,
                            triggerName: u,
                            transition: pn,
                            fromState: Ue,
                            toState: ot,
                            player: me,
                            isFallbackTransition: qt,
                        }),
                        qt ||
                            (sn(a, ti),
                            me.onStart(() => {
                                on(a, ti);
                            })),
                        me.onDone(() => {
                            let dn = this.players.indexOf(me);
                            dn >= 0 && this.players.splice(dn, 1);
                            const nr = this._engine.playersByElement.get(a);
                            if (nr) {
                                let _r = nr.indexOf(me);
                                _r >= 0 && nr.splice(_r, 1);
                            }
                        }),
                        this.players.push(me),
                        _n.push(me),
                        me
                    );
                }
                deregister(a) {
                    delete this._triggers[a],
                        this._engine.statesByElement.forEach((u, y) => {
                            delete u[a];
                        }),
                        this._elementListeners.forEach((u, y) => {
                            this._elementListeners.set(
                                y,
                                u.filter((B) => B.name != a)
                            );
                        });
                }
                clearElementCache(a) {
                    this._engine.statesByElement.delete(a),
                        this._elementListeners.delete(a);
                    const u = this._engine.playersByElement.get(a);
                    u &&
                        (u.forEach((y) => y.destroy()),
                        this._engine.playersByElement.delete(a));
                }
                _signalRemovalForInnerTriggers(a, u) {
                    const y = this._engine.driver.query(a, Ke, !0);
                    y.forEach((B) => {
                        if (B[Ir]) return;
                        const Q = this._engine.fetchNamespacesByElement(B);
                        Q.size
                            ? Q.forEach((me) =>
                                  me.triggerLeaveAnimation(B, u, !1, !0)
                              )
                            : this.clearElementCache(B);
                    }),
                        this._engine.afterFlushAnimationsDone(() =>
                            y.forEach((B) => this.clearElementCache(B))
                        );
                }
                triggerLeaveAnimation(a, u, y, B) {
                    const Q = this._engine.statesByElement.get(a),
                        me = new Map();
                    if (Q) {
                        const ye = [];
                        if (
                            (Object.keys(Q).forEach((Ue) => {
                                if (
                                    (me.set(Ue, Q[Ue].value),
                                    this._triggers[Ue])
                                ) {
                                    const ot = this.trigger(a, Ue, Pr, B);
                                    ot && ye.push(ot);
                                }
                            }),
                            ye.length)
                        )
                            return (
                                this._engine.markElementAsRemoved(
                                    this.id,
                                    a,
                                    !0,
                                    u,
                                    me
                                ),
                                y &&
                                    xt(ye).onDone(() =>
                                        this._engine.processLeaveNode(a)
                                    ),
                                !0
                            );
                    }
                    return !1;
                }
                prepareLeaveAnimationListeners(a) {
                    const u = this._elementListeners.get(a),
                        y = this._engine.statesByElement.get(a);
                    if (u && y) {
                        const B = new Set();
                        u.forEach((Q) => {
                            const me = Q.name;
                            if (B.has(me)) return;
                            B.add(me);
                            const Ue = this._triggers[me].fallbackTransition,
                                ot = y[me] || Oi,
                                Bt = new si(Pr),
                                Ht = new j(this.id, me, a);
                            this._engine.totalQueuedPlayers++,
                                this._queue.push({
                                    element: a,
                                    triggerName: me,
                                    transition: Ue,
                                    fromState: ot,
                                    toState: Bt,
                                    player: Ht,
                                    isFallbackTransition: !0,
                                });
                        });
                    }
                }
                removeNode(a, u) {
                    const y = this._engine;
                    if (
                        (a.childElementCount &&
                            this._signalRemovalForInnerTriggers(a, u),
                        this.triggerLeaveAnimation(a, u, !0))
                    )
                        return;
                    let B = !1;
                    if (y.totalAnimations) {
                        const Q = y.players.length
                            ? y.playersByQueriedElement.get(a)
                            : [];
                        if (Q && Q.length) B = !0;
                        else {
                            let me = a;
                            for (; (me = me.parentNode); )
                                if (y.statesByElement.get(me)) {
                                    B = !0;
                                    break;
                                }
                        }
                    }
                    if ((this.prepareLeaveAnimationListeners(a), B))
                        y.markElementAsRemoved(this.id, a, !1, u);
                    else {
                        const Q = a[Ir];
                        (!Q || Q === ci) &&
                            (y.afterFlush(() => this.clearElementCache(a)),
                            y.destroyInnerAnimations(a),
                            y._onRemovalComplete(a, u));
                    }
                }
                insertNode(a, u) {
                    sn(a, this._hostClassName);
                }
                drainQueuedTransitions(a) {
                    const u = [];
                    return (
                        this._queue.forEach((y) => {
                            const B = y.player;
                            if (B.destroyed) return;
                            const Q = y.element,
                                me = this._elementListeners.get(Q);
                            me &&
                                me.forEach((ye) => {
                                    if (ye.name == y.triggerName) {
                                        const Ue = rn(
                                            Q,
                                            y.triggerName,
                                            y.fromState.value,
                                            y.toState.value
                                        );
                                        (Ue._data = a),
                                            ln(
                                                y.player,
                                                ye.phase,
                                                Ue,
                                                ye.callback
                                            );
                                    }
                                }),
                                B.markedForDestroy
                                    ? this._engine.afterFlush(() => {
                                          B.destroy();
                                      })
                                    : u.push(y);
                        }),
                        (this._queue = []),
                        u.sort((y, B) => {
                            const Q = y.transition.ast.depCount,
                                me = B.transition.ast.depCount;
                            return 0 == Q || 0 == me
                                ? Q - me
                                : this._engine.driver.containsElement(
                                      y.element,
                                      B.element
                                  )
                                ? 1
                                : -1;
                        })
                    );
                }
                destroy(a) {
                    this.players.forEach((u) => u.destroy()),
                        this._signalRemovalForInnerTriggers(
                            this.hostElement,
                            a
                        );
                }
                elementContainsData(a) {
                    let u = !1;
                    return (
                        this._elementListeners.has(a) && (u = !0),
                        (u = !!this._queue.find((y) => y.element === a) || u),
                        u
                    );
                }
            }
            class C {
                constructor(a, u, y) {
                    (this.bodyNode = a),
                        (this.driver = u),
                        (this._normalizer = y),
                        (this.players = []),
                        (this.newHostElements = new Map()),
                        (this.playersByElement = new Map()),
                        (this.playersByQueriedElement = new Map()),
                        (this.statesByElement = new Map()),
                        (this.disabledNodes = new Set()),
                        (this.totalAnimations = 0),
                        (this.totalQueuedPlayers = 0),
                        (this._namespaceLookup = {}),
                        (this._namespaceList = []),
                        (this._flushFns = []),
                        (this._whenQuietFns = []),
                        (this.namespacesByHostElement = new Map()),
                        (this.collectedEnterElements = []),
                        (this.collectedLeaveElements = []),
                        (this.onRemovalComplete = (B, Q) => {});
                }
                _onRemovalComplete(a, u) {
                    this.onRemovalComplete(a, u);
                }
                get queuedPlayers() {
                    const a = [];
                    return (
                        this._namespaceList.forEach((u) => {
                            u.players.forEach((y) => {
                                y.queued && a.push(y);
                            });
                        }),
                        a
                    );
                }
                createNamespace(a, u) {
                    const y = new jn(a, u, this);
                    return (
                        this.bodyNode &&
                        this.driver.containsElement(this.bodyNode, u)
                            ? this._balanceNamespaceList(y, u)
                            : (this.newHostElements.set(u, y),
                              this.collectEnterElement(u)),
                        (this._namespaceLookup[a] = y)
                    );
                }
                _balanceNamespaceList(a, u) {
                    const y = this._namespaceList,
                        B = this.namespacesByHostElement,
                        Q = y.length - 1;
                    if (Q >= 0) {
                        let me = !1;
                        if (void 0 !== this.driver.getParentElement) {
                            let ye = this.driver.getParentElement(u);
                            for (; ye; ) {
                                const Ue = B.get(ye);
                                if (Ue) {
                                    const ot = y.indexOf(Ue);
                                    y.splice(ot + 1, 0, a), (me = !0);
                                    break;
                                }
                                ye = this.driver.getParentElement(ye);
                            }
                        } else
                            for (let ye = Q; ye >= 0; ye--)
                                if (
                                    this.driver.containsElement(
                                        y[ye].hostElement,
                                        u
                                    )
                                ) {
                                    y.splice(ye + 1, 0, a), (me = !0);
                                    break;
                                }
                        me || y.unshift(a);
                    } else y.push(a);
                    return B.set(u, a), a;
                }
                register(a, u) {
                    let y = this._namespaceLookup[a];
                    return y || (y = this.createNamespace(a, u)), y;
                }
                registerTrigger(a, u, y) {
                    let B = this._namespaceLookup[a];
                    B && B.register(u, y) && this.totalAnimations++;
                }
                destroy(a, u) {
                    if (!a) return;
                    const y = this._fetchNamespace(a);
                    this.afterFlush(() => {
                        this.namespacesByHostElement.delete(y.hostElement),
                            delete this._namespaceLookup[a];
                        const B = this._namespaceList.indexOf(y);
                        B >= 0 && this._namespaceList.splice(B, 1);
                    }),
                        this.afterFlushAnimationsDone(() => y.destroy(u));
                }
                _fetchNamespace(a) {
                    return this._namespaceLookup[a];
                }
                fetchNamespacesByElement(a) {
                    const u = new Set(),
                        y = this.statesByElement.get(a);
                    if (y) {
                        const B = Object.keys(y);
                        for (let Q = 0; Q < B.length; Q++) {
                            const me = y[B[Q]].namespaceId;
                            if (me) {
                                const ye = this._fetchNamespace(me);
                                ye && u.add(ye);
                            }
                        }
                    }
                    return u;
                }
                trigger(a, u, y, B) {
                    if (Ce(u)) {
                        const Q = this._fetchNamespace(a);
                        if (Q) return Q.trigger(u, y, B), !0;
                    }
                    return !1;
                }
                insertNode(a, u, y, B) {
                    if (!Ce(u)) return;
                    const Q = u[Ir];
                    if (Q && Q.setForRemoval) {
                        (Q.setForRemoval = !1), (Q.setForMove = !0);
                        const me = this.collectedLeaveElements.indexOf(u);
                        me >= 0 && this.collectedLeaveElements.splice(me, 1);
                    }
                    if (a) {
                        const me = this._fetchNamespace(a);
                        me && me.insertNode(u, y);
                    }
                    B && this.collectEnterElement(u);
                }
                collectEnterElement(a) {
                    this.collectedEnterElements.push(a);
                }
                markElementAsDisabled(a, u) {
                    u
                        ? this.disabledNodes.has(a) ||
                          (this.disabledNodes.add(a), sn(a, bi))
                        : this.disabledNodes.has(a) &&
                          (this.disabledNodes.delete(a), on(a, bi));
                }
                removeNode(a, u, y, B) {
                    if (Ce(u)) {
                        const Q = a ? this._fetchNamespace(a) : null;
                        if (
                            (Q
                                ? Q.removeNode(u, B)
                                : this.markElementAsRemoved(a, u, !1, B),
                            y)
                        ) {
                            const me = this.namespacesByHostElement.get(u);
                            me && me.id !== a && me.removeNode(u, B);
                        }
                    } else this._onRemovalComplete(u, B);
                }
                markElementAsRemoved(a, u, y, B, Q) {
                    this.collectedLeaveElements.push(u),
                        (u[Ir] = {
                            namespaceId: a,
                            setForRemoval: B,
                            hasAnimation: y,
                            removedBeforeQueried: !1,
                            previousTriggersValues: Q,
                        });
                }
                listen(a, u, y, B, Q) {
                    return Ce(u)
                        ? this._fetchNamespace(a).listen(u, y, B, Q)
                        : () => {};
                }
                _buildInstruction(a, u, y, B, Q) {
                    return a.transition.build(
                        this.driver,
                        a.element,
                        a.fromState.value,
                        a.toState.value,
                        y,
                        B,
                        a.fromState.options,
                        a.toState.options,
                        u,
                        Q
                    );
                }
                destroyInnerAnimations(a) {
                    let u = this.driver.query(a, Ke, !0);
                    u.forEach((y) => this.destroyActiveAnimationsForElement(y)),
                        0 != this.playersByQueriedElement.size &&
                            ((u = this.driver.query(a, Z, !0)),
                            u.forEach((y) =>
                                this.finishActiveQueriedAnimationOnElement(y)
                            ));
                }
                destroyActiveAnimationsForElement(a) {
                    const u = this.playersByElement.get(a);
                    u &&
                        u.forEach((y) => {
                            y.queued ? (y.markedForDestroy = !0) : y.destroy();
                        });
                }
                finishActiveQueriedAnimationOnElement(a) {
                    const u = this.playersByQueriedElement.get(a);
                    u && u.forEach((y) => y.finish());
                }
                whenRenderingDone() {
                    return new Promise((a) => {
                        if (this.players.length)
                            return xt(this.players).onDone(() => a());
                        a();
                    });
                }
                processLeaveNode(a) {
                    var u;
                    const y = a[Ir];
                    if (y && y.setForRemoval) {
                        if (((a[Ir] = ci), y.namespaceId)) {
                            this.destroyInnerAnimations(a);
                            const B = this._fetchNamespace(y.namespaceId);
                            B && B.clearElementCache(a);
                        }
                        this._onRemovalComplete(a, y.setForRemoval);
                    }
                    (null === (u = a.classList) || void 0 === u
                        ? void 0
                        : u.contains(bi)) && this.markElementAsDisabled(a, !1),
                        this.driver
                            .query(a, '.ng-animate-disabled', !0)
                            .forEach((B) => {
                                this.markElementAsDisabled(B, !1);
                            });
                }
                flush(a = -1) {
                    let u = [];
                    if (
                        (this.newHostElements.size &&
                            (this.newHostElements.forEach((y, B) =>
                                this._balanceNamespaceList(y, B)
                            ),
                            this.newHostElements.clear()),
                        this.totalAnimations &&
                            this.collectedEnterElements.length)
                    )
                        for (
                            let y = 0;
                            y < this.collectedEnterElements.length;
                            y++
                        )
                            sn(
                                this.collectedEnterElements[y],
                                'ng-star-inserted'
                            );
                    if (
                        this._namespaceList.length &&
                        (this.totalQueuedPlayers ||
                            this.collectedLeaveElements.length)
                    ) {
                        const y = [];
                        try {
                            u = this._flushAnimations(y, a);
                        } finally {
                            for (let B = 0; B < y.length; B++) y[B]();
                        }
                    } else
                        for (
                            let y = 0;
                            y < this.collectedLeaveElements.length;
                            y++
                        )
                            this.processLeaveNode(
                                this.collectedLeaveElements[y]
                            );
                    if (
                        ((this.totalQueuedPlayers = 0),
                        (this.collectedEnterElements.length = 0),
                        (this.collectedLeaveElements.length = 0),
                        this._flushFns.forEach((y) => y()),
                        (this._flushFns = []),
                        this._whenQuietFns.length)
                    ) {
                        const y = this._whenQuietFns;
                        (this._whenQuietFns = []),
                            u.length
                                ? xt(u).onDone(() => {
                                      y.forEach((B) => B());
                                  })
                                : y.forEach((B) => B());
                    }
                }
                reportError(a) {
                    throw (function $t(M) {
                        return new m.vHH(3402, O);
                    })();
                }
                _flushAnimations(a, u) {
                    const y = new Wr(),
                        B = [],
                        Q = new Map(),
                        me = [],
                        ye = new Map(),
                        Ue = new Map(),
                        ot = new Map(),
                        Bt = new Set();
                    this.disabledNodes.forEach((it) => {
                        Bt.add(it);
                        const Dt = this.driver.query(
                            it,
                            '.ng-animate-queued',
                            !0
                        );
                        for (let dt = 0; dt < Dt.length; dt++) Bt.add(Dt[dt]);
                    });
                    const Ht = this.bodyNode,
                        _n = Array.from(this.statesByElement.keys()),
                        pn = cn(_n, this.collectedEnterElements),
                        qt = new Map();
                    let dn = 0;
                    pn.forEach((it, Dt) => {
                        const dt = q + dn++;
                        qt.set(Dt, dt), it.forEach((Yt) => sn(Yt, dt));
                    });
                    const nr = [],
                        _r = new Set(),
                        Sr = new Set();
                    for (
                        let it = 0;
                        it < this.collectedLeaveElements.length;
                        it++
                    ) {
                        const Dt = this.collectedLeaveElements[it],
                            dt = Dt[Ir];
                        dt &&
                            dt.setForRemoval &&
                            (nr.push(Dt),
                            _r.add(Dt),
                            dt.hasAnimation
                                ? this.driver
                                      .query(Dt, '.ng-star-inserted', !0)
                                      .forEach((Yt) => _r.add(Yt))
                                : Sr.add(Dt));
                    }
                    const jr = new Map(),
                        br = cn(_n, Array.from(_r));
                    br.forEach((it, Dt) => {
                        const dt = ue + dn++;
                        jr.set(Dt, dt), it.forEach((Yt) => sn(Yt, dt));
                    }),
                        a.push(() => {
                            pn.forEach((it, Dt) => {
                                const dt = qt.get(Dt);
                                it.forEach((Yt) => on(Yt, dt));
                            }),
                                br.forEach((it, Dt) => {
                                    const dt = jr.get(Dt);
                                    it.forEach((Yt) => on(Yt, dt));
                                }),
                                nr.forEach((it) => {
                                    this.processLeaveNode(it);
                                });
                        });
                    const hi = [],
                        Jr = [];
                    for (let it = this._namespaceList.length - 1; it >= 0; it--)
                        this._namespaceList[it]
                            .drainQueuedTransitions(u)
                            .forEach((dt) => {
                                const Yt = dt.player,
                                    en = dt.element;
                                if (
                                    (hi.push(Yt),
                                    this.collectedEnterElements.length)
                                ) {
                                    const Rr = en[Ir];
                                    if (Rr && Rr.setForMove) {
                                        if (
                                            Rr.previousTriggersValues &&
                                            Rr.previousTriggersValues.has(
                                                dt.triggerName
                                            )
                                        ) {
                                            const ni =
                                                    Rr.previousTriggersValues.get(
                                                        dt.triggerName
                                                    ),
                                                Ki = this.statesByElement.get(
                                                    dt.element
                                                );
                                            Ki &&
                                                Ki[dt.triggerName] &&
                                                (Ki[dt.triggerName].value = ni);
                                        }
                                        return void Yt.destroy();
                                    }
                                }
                                const Tr =
                                        !Ht ||
                                        !this.driver.containsElement(Ht, en),
                                    lr = jr.get(en),
                                    li = qt.get(en),
                                    er = this._buildInstruction(
                                        dt,
                                        y,
                                        li,
                                        lr,
                                        Tr
                                    );
                                if (er.errors && er.errors.length)
                                    return void Jr.push(er);
                                if (Tr)
                                    return (
                                        Yt.onStart(() => se(en, er.fromStyles)),
                                        Yt.onDestroy(() => Le(en, er.toStyles)),
                                        void B.push(Yt)
                                    );
                                if (dt.isFallbackTransition)
                                    return (
                                        Yt.onStart(() => se(en, er.fromStyles)),
                                        Yt.onDestroy(() => Le(en, er.toStyles)),
                                        void B.push(Yt)
                                    );
                                const wi = [];
                                er.timelines.forEach((Rr) => {
                                    (Rr.stretchStartingKeyframe = !0),
                                        this.disabledNodes.has(Rr.element) ||
                                            wi.push(Rr);
                                }),
                                    (er.timelines = wi),
                                    y.append(en, er.timelines),
                                    me.push({
                                        instruction: er,
                                        player: Yt,
                                        element: en,
                                    }),
                                    er.queriedElements.forEach((Rr) =>
                                        gn(ye, Rr, []).push(Yt)
                                    ),
                                    er.preStyleProps.forEach((Rr, ni) => {
                                        const Ki = Object.keys(Rr);
                                        if (Ki.length) {
                                            let Ni = Ue.get(ni);
                                            Ni || Ue.set(ni, (Ni = new Set())),
                                                Ki.forEach((Yi) => Ni.add(Yi));
                                        }
                                    }),
                                    er.postStyleProps.forEach((Rr, ni) => {
                                        const Ki = Object.keys(Rr);
                                        let Ni = ot.get(ni);
                                        Ni || ot.set(ni, (Ni = new Set())),
                                            Ki.forEach((Yi) => Ni.add(Yi));
                                    });
                            });
                    if (Jr.length) {
                        const it = [];
                        Jr.forEach((Dt) => {
                            it.push(
                                (function At(M, a) {
                                    return new m.vHH(3505, O);
                                })()
                            );
                        }),
                            hi.forEach((Dt) => Dt.destroy()),
                            this.reportError(it);
                    }
                    const p = new Map(),
                        d = new Map();
                    me.forEach((it) => {
                        const Dt = it.element;
                        y.has(Dt) &&
                            (d.set(Dt, Dt),
                            this._beforeAnimationBuild(
                                it.player.namespaceId,
                                it.instruction,
                                p
                            ));
                    }),
                        B.forEach((it) => {
                            const Dt = it.element;
                            this._getPreviousPlayers(
                                Dt,
                                !1,
                                it.namespaceId,
                                it.triggerName,
                                null
                            ).forEach((Yt) => {
                                gn(p, Dt, []).push(Yt), Yt.destroy();
                            });
                        });
                    const c = nr.filter((it) => A(it, Ue, ot)),
                        D = new Map();
                    zt(D, this.driver, Sr, ot, S.l3).forEach((it) => {
                        A(it, Ue, ot) && c.push(it);
                    });
                    const $ = new Map();
                    pn.forEach((it, Dt) => {
                        zt($, this.driver, new Set(it), Ue, S.k1);
                    }),
                        c.forEach((it) => {
                            const Dt = D.get(it),
                                dt = $.get(it);
                            D.set(it, Object.assign(Object.assign({}, Dt), dt));
                        });
                    const ie = [],
                        ve = [],
                        Xe = {};
                    me.forEach((it) => {
                        const { element: Dt, player: dt, instruction: Yt } = it;
                        if (y.has(Dt)) {
                            if (Bt.has(Dt))
                                return (
                                    dt.onDestroy(() => Le(Dt, Yt.toStyles)),
                                    (dt.disabled = !0),
                                    dt.overrideTotalTime(Yt.totalTime),
                                    void B.push(dt)
                                );
                            let en = Xe;
                            if (d.size > 1) {
                                let lr = Dt;
                                const li = [];
                                for (; (lr = lr.parentNode); ) {
                                    const er = d.get(lr);
                                    if (er) {
                                        en = er;
                                        break;
                                    }
                                    li.push(lr);
                                }
                                li.forEach((er) => d.set(er, en));
                            }
                            const Tr = this._buildAnimation(
                                dt.namespaceId,
                                Yt,
                                p,
                                Q,
                                $,
                                D
                            );
                            if ((dt.setRealPlayer(Tr), en === Xe)) ie.push(dt);
                            else {
                                const lr = this.playersByElement.get(en);
                                lr && lr.length && (dt.parentPlayer = xt(lr)),
                                    B.push(dt);
                            }
                        } else
                            se(Dt, Yt.fromStyles),
                                dt.onDestroy(() => Le(Dt, Yt.toStyles)),
                                ve.push(dt),
                                Bt.has(Dt) && B.push(dt);
                    }),
                        ve.forEach((it) => {
                            const Dt = Q.get(it.element);
                            if (Dt && Dt.length) {
                                const dt = xt(Dt);
                                it.setRealPlayer(dt);
                            }
                        }),
                        B.forEach((it) => {
                            it.parentPlayer
                                ? it.syncPlayerEvents(it.parentPlayer)
                                : it.destroy();
                        });
                    for (let it = 0; it < nr.length; it++) {
                        const Dt = nr[it],
                            dt = Dt[Ir];
                        if ((on(Dt, ue), dt && dt.hasAnimation)) continue;
                        let Yt = [];
                        if (ye.size) {
                            let Tr = ye.get(Dt);
                            Tr && Tr.length && Yt.push(...Tr);
                            let lr = this.driver.query(Dt, Z, !0);
                            for (let li = 0; li < lr.length; li++) {
                                let er = ye.get(lr[li]);
                                er && er.length && Yt.push(...er);
                            }
                        }
                        const en = Yt.filter((Tr) => !Tr.destroyed);
                        en.length
                            ? An(this, Dt, en)
                            : this.processLeaveNode(Dt);
                    }
                    return (
                        (nr.length = 0),
                        ie.forEach((it) => {
                            this.players.push(it),
                                it.onDone(() => {
                                    it.destroy();
                                    const Dt = this.players.indexOf(it);
                                    this.players.splice(Dt, 1);
                                }),
                                it.play();
                        }),
                        ie
                    );
                }
                elementContainsData(a, u) {
                    let y = !1;
                    const B = u[Ir];
                    return (
                        B && B.setForRemoval && (y = !0),
                        this.playersByElement.has(u) && (y = !0),
                        this.playersByQueriedElement.has(u) && (y = !0),
                        this.statesByElement.has(u) && (y = !0),
                        this._fetchNamespace(a).elementContainsData(u) || y
                    );
                }
                afterFlush(a) {
                    this._flushFns.push(a);
                }
                afterFlushAnimationsDone(a) {
                    this._whenQuietFns.push(a);
                }
                _getPreviousPlayers(a, u, y, B, Q) {
                    let me = [];
                    if (u) {
                        const ye = this.playersByQueriedElement.get(a);
                        ye && (me = ye);
                    } else {
                        const ye = this.playersByElement.get(a);
                        if (ye) {
                            const Ue = !Q || Q == Pr;
                            ye.forEach((ot) => {
                                ot.queued ||
                                    (!Ue && ot.triggerName != B) ||
                                    me.push(ot);
                            });
                        }
                    }
                    return (
                        (y || B) &&
                            (me = me.filter(
                                (ye) =>
                                    !(
                                        (y && y != ye.namespaceId) ||
                                        (B && B != ye.triggerName)
                                    )
                            )),
                        me
                    );
                }
                _beforeAnimationBuild(a, u, y) {
                    const Q = u.element,
                        me = u.isRemovalTransition ? void 0 : a,
                        ye = u.isRemovalTransition ? void 0 : u.triggerName;
                    for (const Ue of u.timelines) {
                        const ot = Ue.element,
                            Bt = ot !== Q,
                            Ht = gn(y, ot, []);
                        this._getPreviousPlayers(
                            ot,
                            Bt,
                            me,
                            ye,
                            u.toState
                        ).forEach((pn) => {
                            const qt = pn.getRealPlayer();
                            qt.beforeDestroy && qt.beforeDestroy(),
                                pn.destroy(),
                                Ht.push(pn);
                        });
                    }
                    se(Q, u.fromStyles);
                }
                _buildAnimation(a, u, y, B, Q, me) {
                    const ye = u.triggerName,
                        Ue = u.element,
                        ot = [],
                        Bt = new Set(),
                        Ht = new Set(),
                        _n = u.timelines.map((qt) => {
                            const dn = qt.element;
                            Bt.add(dn);
                            const nr = dn[Ir];
                            if (nr && nr.removedBeforeQueried)
                                return new S.ZN(qt.duration, qt.delay);
                            const _r = dn !== Ue,
                                Sr = (function tr(M) {
                                    const a = [];
                                    return zn(M, a), a;
                                })(
                                    (y.get(dn) || ui).map((p) =>
                                        p.getRealPlayer()
                                    )
                                ).filter(
                                    (p) => !!p.element && p.element === dn
                                ),
                                jr = Q.get(dn),
                                br = me.get(dn),
                                hi = Qt(
                                    0,
                                    this._normalizer,
                                    0,
                                    qt.keyframes,
                                    jr,
                                    br
                                ),
                                Jr = this._buildPlayer(qt, hi, Sr);
                            if ((qt.subTimeline && B && Ht.add(dn), _r)) {
                                const p = new j(a, ye, dn);
                                p.setRealPlayer(Jr), ot.push(p);
                            }
                            return Jr;
                        });
                    ot.forEach((qt) => {
                        gn(this.playersByQueriedElement, qt.element, []).push(
                            qt
                        ),
                            qt.onDone(() =>
                                (function b(M, a, u) {
                                    let y;
                                    if (M instanceof Map) {
                                        if (((y = M.get(a)), y)) {
                                            if (y.length) {
                                                const B = y.indexOf(u);
                                                y.splice(B, 1);
                                            }
                                            0 == y.length && M.delete(a);
                                        }
                                    } else if (((y = M[a]), y)) {
                                        if (y.length) {
                                            const B = y.indexOf(u);
                                            y.splice(B, 1);
                                        }
                                        0 == y.length && delete M[a];
                                    }
                                    return y;
                                })(this.playersByQueriedElement, qt.element, qt)
                            );
                    }),
                        Bt.forEach((qt) => sn(qt, ae));
                    const pn = xt(_n);
                    return (
                        pn.onDestroy(() => {
                            Bt.forEach((qt) => on(qt, ae)), Le(Ue, u.toStyles);
                        }),
                        Ht.forEach((qt) => {
                            gn(B, qt, []).push(pn);
                        }),
                        pn
                    );
                }
                _buildPlayer(a, u, y) {
                    return u.length > 0
                        ? this.driver.animate(
                              a.element,
                              u,
                              a.duration,
                              a.delay,
                              a.easing,
                              y
                          )
                        : new S.ZN(a.duration, a.delay);
                }
            }
            class j {
                constructor(a, u, y) {
                    (this.namespaceId = a),
                        (this.triggerName = u),
                        (this.element = y),
                        (this._player = new S.ZN()),
                        (this._containsRealPlayer = !1),
                        (this._queuedCallbacks = {}),
                        (this.destroyed = !1),
                        (this.markedForDestroy = !1),
                        (this.disabled = !1),
                        (this.queued = !0),
                        (this.totalTime = 0);
                }
                setRealPlayer(a) {
                    this._containsRealPlayer ||
                        ((this._player = a),
                        Object.keys(this._queuedCallbacks).forEach((u) => {
                            this._queuedCallbacks[u].forEach((y) =>
                                ln(a, u, void 0, y)
                            );
                        }),
                        (this._queuedCallbacks = {}),
                        (this._containsRealPlayer = !0),
                        this.overrideTotalTime(a.totalTime),
                        (this.queued = !1));
                }
                getRealPlayer() {
                    return this._player;
                }
                overrideTotalTime(a) {
                    this.totalTime = a;
                }
                syncPlayerEvents(a) {
                    const u = this._player;
                    u.triggerCallback &&
                        a.onStart(() => u.triggerCallback('start')),
                        a.onDone(() => this.finish()),
                        a.onDestroy(() => this.destroy());
                }
                _queueEvent(a, u) {
                    gn(this._queuedCallbacks, a, []).push(u);
                }
                onDone(a) {
                    this.queued && this._queueEvent('done', a),
                        this._player.onDone(a);
                }
                onStart(a) {
                    this.queued && this._queueEvent('start', a),
                        this._player.onStart(a);
                }
                onDestroy(a) {
                    this.queued && this._queueEvent('destroy', a),
                        this._player.onDestroy(a);
                }
                init() {
                    this._player.init();
                }
                hasStarted() {
                    return !this.queued && this._player.hasStarted();
                }
                play() {
                    !this.queued && this._player.play();
                }
                pause() {
                    !this.queued && this._player.pause();
                }
                restart() {
                    !this.queued && this._player.restart();
                }
                finish() {
                    this._player.finish();
                }
                destroy() {
                    (this.destroyed = !0), this._player.destroy();
                }
                reset() {
                    !this.queued && this._player.reset();
                }
                setPosition(a) {
                    this.queued || this._player.setPosition(a);
                }
                getPosition() {
                    return this.queued ? 0 : this._player.getPosition();
                }
                triggerCallback(a) {
                    const u = this._player;
                    u.triggerCallback && u.triggerCallback(a);
                }
            }
            function Ce(M) {
                return M && 1 === M.nodeType;
            }
            function ct(M, a) {
                const u = M.style.display;
                return (M.style.display = null != a ? a : 'none'), u;
            }
            function zt(M, a, u, y, B) {
                const Q = [];
                u.forEach((Ue) => Q.push(ct(Ue)));
                const me = [];
                y.forEach((Ue, ot) => {
                    const Bt = {};
                    Ue.forEach((Ht) => {
                        const _n = (Bt[Ht] = a.computeStyle(ot, Ht, B));
                        (!_n || 0 == _n.length) && ((ot[Ir] = Xi), me.push(ot));
                    }),
                        M.set(ot, Bt);
                });
                let ye = 0;
                return u.forEach((Ue) => ct(Ue, Q[ye++])), me;
            }
            function cn(M, a) {
                const u = new Map();
                if ((M.forEach((ye) => u.set(ye, [])), 0 == a.length)) return u;
                const B = new Set(a),
                    Q = new Map();
                function me(ye) {
                    if (!ye) return 1;
                    let Ue = Q.get(ye);
                    if (Ue) return Ue;
                    const ot = ye.parentNode;
                    return (
                        (Ue = u.has(ot) ? ot : B.has(ot) ? 1 : me(ot)),
                        Q.set(ye, Ue),
                        Ue
                    );
                }
                return (
                    a.forEach((ye) => {
                        const Ue = me(ye);
                        1 !== Ue && u.get(Ue).push(ye);
                    }),
                    u
                );
            }
            function sn(M, a) {
                var u;
                null === (u = M.classList) || void 0 === u || u.add(a);
            }
            function on(M, a) {
                var u;
                null === (u = M.classList) || void 0 === u || u.remove(a);
            }
            function An(M, a, u) {
                xt(u).onDone(() => M.processLeaveNode(a));
            }
            function zn(M, a) {
                for (let u = 0; u < M.length; u++) {
                    const y = M[u];
                    y instanceof S.ZE ? zn(y.players, a) : a.push(y);
                }
            }
            function A(M, a, u) {
                const y = u.get(M);
                if (!y) return !1;
                let B = a.get(M);
                return (
                    B ? y.forEach((Q) => B.add(Q)) : a.set(M, y),
                    u.delete(M),
                    !0
                );
            }
            class E {
                constructor(a, u, y) {
                    (this.bodyNode = a),
                        (this._driver = u),
                        (this._normalizer = y),
                        (this._triggerCache = {}),
                        (this.onRemovalComplete = (B, Q) => {}),
                        (this._transitionEngine = new C(a, u, y)),
                        (this._timelineEngine = new $i(a, u, y)),
                        (this._transitionEngine.onRemovalComplete = (B, Q) =>
                            this.onRemovalComplete(B, Q));
                }
                registerTrigger(a, u, y, B, Q) {
                    const me = a + '-' + B;
                    let ye = this._triggerCache[me];
                    if (!ye) {
                        const Ue = [],
                            Bt = Ge(this._driver, Q, Ue, []);
                        if (Ue.length)
                            throw (function ke(M, a) {
                                return new m.vHH(3404, O);
                            })();
                        (ye = (function yi(M, a, u) {
                            return new Xr(M, a, u);
                        })(B, Bt, this._normalizer)),
                            (this._triggerCache[me] = ye);
                    }
                    this._transitionEngine.registerTrigger(u, B, ye);
                }
                register(a, u) {
                    this._transitionEngine.register(a, u);
                }
                destroy(a, u) {
                    this._transitionEngine.destroy(a, u);
                }
                onInsert(a, u, y, B) {
                    this._transitionEngine.insertNode(a, u, y, B);
                }
                onRemove(a, u, y, B) {
                    this._transitionEngine.removeNode(a, u, B || !1, y);
                }
                disableAnimations(a, u) {
                    this._transitionEngine.markElementAsDisabled(a, u);
                }
                process(a, u, y, B) {
                    if ('@' == y.charAt(0)) {
                        const [Q, me] = Nt(y);
                        this._timelineEngine.command(Q, u, me, B);
                    } else this._transitionEngine.trigger(a, u, y, B);
                }
                listen(a, u, y, B, Q) {
                    if ('@' == y.charAt(0)) {
                        const [me, ye] = Nt(y);
                        return this._timelineEngine.listen(me, u, ye, Q);
                    }
                    return this._transitionEngine.listen(a, u, y, B, Q);
                }
                flush(a = -1) {
                    this._transitionEngine.flush(a);
                }
                get players() {
                    return this._transitionEngine.players.concat(
                        this._timelineEngine.players
                    );
                }
                whenRenderingDone() {
                    return this._transitionEngine.whenRenderingDone();
                }
            }
            let H = (() => {
                class M {
                    constructor(u, y, B) {
                        (this._element = u),
                            (this._startStyles = y),
                            (this._endStyles = B),
                            (this._state = 0);
                        let Q = M.initialStylesByElement.get(u);
                        Q || M.initialStylesByElement.set(u, (Q = {})),
                            (this._initialStyles = Q);
                    }
                    start() {
                        this._state < 1 &&
                            (this._startStyles &&
                                Le(
                                    this._element,
                                    this._startStyles,
                                    this._initialStyles
                                ),
                            (this._state = 1));
                    }
                    finish() {
                        this.start(),
                            this._state < 2 &&
                                (Le(this._element, this._initialStyles),
                                this._endStyles &&
                                    (Le(this._element, this._endStyles),
                                    (this._endStyles = null)),
                                (this._state = 1));
                    }
                    destroy() {
                        this.finish(),
                            this._state < 3 &&
                                (M.initialStylesByElement.delete(this._element),
                                this._startStyles &&
                                    (se(this._element, this._startStyles),
                                    (this._endStyles = null)),
                                this._endStyles &&
                                    (se(this._element, this._endStyles),
                                    (this._endStyles = null)),
                                Le(this._element, this._initialStyles),
                                (this._state = 3));
                    }
                }
                return (M.initialStylesByElement = new WeakMap()), M;
            })();
            function qe(M) {
                let a = null;
                const u = Object.keys(M);
                for (let y = 0; y < u.length; y++) {
                    const B = u[y];
                    jt(B) && ((a = a || {}), (a[B] = M[B]));
                }
                return a;
            }
            function jt(M) {
                return 'display' === M || 'position' === M;
            }
            class $n {
                constructor(a, u, y, B) {
                    (this.element = a),
                        (this.keyframes = u),
                        (this.options = y),
                        (this._specialStyles = B),
                        (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._onDestroyFns = []),
                        (this._initialized = !1),
                        (this._finished = !1),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this.time = 0),
                        (this.parentPlayer = null),
                        (this.currentSnapshot = {}),
                        (this._duration = y.duration),
                        (this._delay = y.delay || 0),
                        (this.time = this._duration + this._delay);
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((a) => a()),
                        (this._onDoneFns = []));
                }
                init() {
                    this._buildPlayer(), this._preparePlayerBeforeStart();
                }
                _buildPlayer() {
                    if (this._initialized) return;
                    this._initialized = !0;
                    const a = this.keyframes;
                    (this.domPlayer = this._triggerWebAnimation(
                        this.element,
                        a,
                        this.options
                    )),
                        (this._finalKeyframe = a.length ? a[a.length - 1] : {}),
                        this.domPlayer.addEventListener('finish', () =>
                            this._onFinish()
                        );
                }
                _preparePlayerBeforeStart() {
                    this._delay
                        ? this._resetDomPlayerState()
                        : this.domPlayer.pause();
                }
                _triggerWebAnimation(a, u, y) {
                    return a.animate(u, y);
                }
                onStart(a) {
                    this._onStartFns.push(a);
                }
                onDone(a) {
                    this._onDoneFns.push(a);
                }
                onDestroy(a) {
                    this._onDestroyFns.push(a);
                }
                play() {
                    this._buildPlayer(),
                        this.hasStarted() ||
                            (this._onStartFns.forEach((a) => a()),
                            (this._onStartFns = []),
                            (this._started = !0),
                            this._specialStyles && this._specialStyles.start()),
                        this.domPlayer.play();
                }
                pause() {
                    this.init(), this.domPlayer.pause();
                }
                finish() {
                    this.init(),
                        this._specialStyles && this._specialStyles.finish(),
                        this._onFinish(),
                        this.domPlayer.finish();
                }
                reset() {
                    this._resetDomPlayerState(),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._started = !1);
                }
                _resetDomPlayerState() {
                    this.domPlayer && this.domPlayer.cancel();
                }
                restart() {
                    this.reset(), this.play();
                }
                hasStarted() {
                    return this._started;
                }
                destroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this._resetDomPlayerState(),
                        this._onFinish(),
                        this._specialStyles && this._specialStyles.destroy(),
                        this._onDestroyFns.forEach((a) => a()),
                        (this._onDestroyFns = []));
                }
                setPosition(a) {
                    void 0 === this.domPlayer && this.init(),
                        (this.domPlayer.currentTime = a * this.time);
                }
                getPosition() {
                    return this.domPlayer.currentTime / this.time;
                }
                get totalTime() {
                    return this._delay + this._duration;
                }
                beforeDestroy() {
                    const a = {};
                    if (this.hasStarted()) {
                        const u = this._finalKeyframe;
                        Object.keys(u).forEach((y) => {
                            'offset' != y &&
                                (a[y] = this._finished
                                    ? u[y]
                                    : or(this.element, y));
                        });
                    }
                    this.currentSnapshot = a;
                }
                triggerCallback(a) {
                    const u = 'start' == a ? this._onStartFns : this._onDoneFns;
                    u.forEach((y) => y()), (u.length = 0);
                }
            }
            class Qr {
                validateStyleProperty(a) {
                    return ze(a);
                }
                matchesElement(a, u) {
                    return !1;
                }
                containsElement(a, u) {
                    return lt(a, u);
                }
                getParentElement(a) {
                    return rr(a);
                }
                query(a, u, y) {
                    return bt(a, u, y);
                }
                computeStyle(a, u, y) {
                    return window.getComputedStyle(a)[u];
                }
                animate(a, u, y, B, Q, me = []) {
                    const Ue = {
                        duration: y,
                        delay: B,
                        fill: 0 == B ? 'both' : 'forwards',
                    };
                    Q && (Ue.easing = Q);
                    const ot = {},
                        Bt = me.filter((_n) => _n instanceof $n);
                    (function fr(M, a) {
                        return 0 === M || 0 === a;
                    })(y, B) &&
                        Bt.forEach((_n) => {
                            let pn = _n.currentSnapshot;
                            Object.keys(pn).forEach((qt) => (ot[qt] = pn[qt]));
                        }),
                        (u = (function Qn(M, a, u) {
                            const y = Object.keys(u);
                            if (y.length && a.length) {
                                let Q = a[0],
                                    me = [];
                                if (
                                    (y.forEach((ye) => {
                                        Q.hasOwnProperty(ye) || me.push(ye),
                                            (Q[ye] = u[ye]);
                                    }),
                                    me.length)
                                )
                                    for (var B = 1; B < a.length; B++) {
                                        let ye = a[B];
                                        me.forEach(function (Ue) {
                                            ye[Ue] = or(M, Ue);
                                        });
                                    }
                            }
                            return a;
                        })(a, (u = u.map((_n) => un(_n, !1))), ot));
                    const Ht = (function g(M, a) {
                        let u = null,
                            y = null;
                        return (
                            Array.isArray(a) && a.length
                                ? ((u = qe(a[0])),
                                  a.length > 1 && (y = qe(a[a.length - 1])))
                                : a && (u = qe(a)),
                            u || y ? new H(M, u, y) : null
                        );
                    })(a, u);
                    return new $n(a, u, Ue, Ht);
                }
            }
            var Er = f(9808);
            let Ti = (() => {
                class M extends S._j {
                    constructor(u, y) {
                        super(),
                            (this._nextAnimationId = 0),
                            (this._renderer = u.createRenderer(y.body, {
                                id: '0',
                                encapsulation: m.ifc.None,
                                styles: [],
                                data: { animation: [] },
                            }));
                    }
                    build(u) {
                        const y = this._nextAnimationId.toString();
                        this._nextAnimationId++;
                        const B = Array.isArray(u) ? (0, S.vP)(u) : u;
                        return (
                            Tn(this._renderer, null, y, 'register', [B]),
                            new Rs(y, this._renderer)
                        );
                    }
                }
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)(m.LFG(m.FYo), m.LFG(Er.K0));
                    }),
                    (M.ɵprov = m.Yz7({ token: M, factory: M.ɵfac })),
                    M
                );
            })();
            class Rs extends S.LC {
                constructor(a, u) {
                    super(), (this._id = a), (this._renderer = u);
                }
                create(a, u) {
                    return new ht(this._id, a, u || {}, this._renderer);
                }
            }
            class ht {
                constructor(a, u, y, B) {
                    (this.id = a),
                        (this.element = u),
                        (this._renderer = B),
                        (this.parentPlayer = null),
                        (this._started = !1),
                        (this.totalTime = 0),
                        this._command('create', y);
                }
                _listen(a, u) {
                    return this._renderer.listen(
                        this.element,
                        `@@${this.id}:${a}`,
                        u
                    );
                }
                _command(a, ...u) {
                    return Tn(this._renderer, this.element, this.id, a, u);
                }
                onDone(a) {
                    this._listen('done', a);
                }
                onStart(a) {
                    this._listen('start', a);
                }
                onDestroy(a) {
                    this._listen('destroy', a);
                }
                init() {
                    this._command('init');
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this._command('play'), (this._started = !0);
                }
                pause() {
                    this._command('pause');
                }
                restart() {
                    this._command('restart');
                }
                finish() {
                    this._command('finish');
                }
                destroy() {
                    this._command('destroy');
                }
                reset() {
                    this._command('reset'), (this._started = !1);
                }
                setPosition(a) {
                    this._command('setPosition', a);
                }
                getPosition() {
                    var a, u;
                    return null !==
                        (u =
                            null ===
                                (a = this._renderer.engine.players[+this.id]) ||
                            void 0 === a
                                ? void 0
                                : a.getPosition()) && void 0 !== u
                        ? u
                        : 0;
                }
            }
            function Tn(M, a, u, y, B) {
                return M.setProperty(a, `@@${u}:${y}`, B);
            }
            const ar = '@.disabled';
            let Ys = (() => {
                class M {
                    constructor(u, y, B) {
                        (this.delegate = u),
                            (this.engine = y),
                            (this._zone = B),
                            (this._currentId = 0),
                            (this._microtaskId = 1),
                            (this._animationCallbacksBuffer = []),
                            (this._rendererCache = new Map()),
                            (this._cdRecurDepth = 0),
                            (this.promise = Promise.resolve(0)),
                            (y.onRemovalComplete = (Q, me) => {
                                const ye =
                                    null == me ? void 0 : me.parentNode(Q);
                                ye && me.removeChild(ye, Q);
                            });
                    }
                    createRenderer(u, y) {
                        const Q = this.delegate.createRenderer(u, y);
                        if (!(u && y && y.data && y.data.animation)) {
                            let Bt = this._rendererCache.get(Q);
                            return (
                                Bt ||
                                    ((Bt = new Pi('', Q, this.engine)),
                                    this._rendererCache.set(Q, Bt)),
                                Bt
                            );
                        }
                        const me = y.id,
                            ye = y.id + '-' + this._currentId;
                        this._currentId++, this.engine.register(ye, u);
                        const Ue = (Bt) => {
                            Array.isArray(Bt)
                                ? Bt.forEach(Ue)
                                : this.engine.registerTrigger(
                                      me,
                                      ye,
                                      u,
                                      Bt.name,
                                      Bt
                                  );
                        };
                        return (
                            y.data.animation.forEach(Ue),
                            new Kr(this, ye, Q, this.engine)
                        );
                    }
                    begin() {
                        this._cdRecurDepth++,
                            this.delegate.begin && this.delegate.begin();
                    }
                    _scheduleCountTask() {
                        this.promise.then(() => {
                            this._microtaskId++;
                        });
                    }
                    scheduleListenerCallback(u, y, B) {
                        u >= 0 && u < this._microtaskId
                            ? this._zone.run(() => y(B))
                            : (0 == this._animationCallbacksBuffer.length &&
                                  Promise.resolve(null).then(() => {
                                      this._zone.run(() => {
                                          this._animationCallbacksBuffer.forEach(
                                              (Q) => {
                                                  const [me, ye] = Q;
                                                  me(ye);
                                              }
                                          ),
                                              (this._animationCallbacksBuffer =
                                                  []);
                                      });
                                  }),
                              this._animationCallbacksBuffer.push([y, B]));
                    }
                    end() {
                        this._cdRecurDepth--,
                            0 == this._cdRecurDepth &&
                                this._zone.runOutsideAngular(() => {
                                    this._scheduleCountTask(),
                                        this.engine.flush(this._microtaskId);
                                }),
                            this.delegate.end && this.delegate.end();
                    }
                    whenRenderingDone() {
                        return this.engine.whenRenderingDone();
                    }
                }
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)(
                            m.LFG(m.FYo),
                            m.LFG(E),
                            m.LFG(m.R0b)
                        );
                    }),
                    (M.ɵprov = m.Yz7({ token: M, factory: M.ɵfac })),
                    M
                );
            })();
            class Pi {
                constructor(a, u, y) {
                    (this.namespaceId = a),
                        (this.delegate = u),
                        (this.engine = y),
                        (this.destroyNode = this.delegate.destroyNode
                            ? (B) => u.destroyNode(B)
                            : null);
                }
                get data() {
                    return this.delegate.data;
                }
                destroy() {
                    this.engine.destroy(this.namespaceId, this.delegate),
                        this.delegate.destroy();
                }
                createElement(a, u) {
                    return this.delegate.createElement(a, u);
                }
                createComment(a) {
                    return this.delegate.createComment(a);
                }
                createText(a) {
                    return this.delegate.createText(a);
                }
                appendChild(a, u) {
                    this.delegate.appendChild(a, u),
                        this.engine.onInsert(this.namespaceId, u, a, !1);
                }
                insertBefore(a, u, y, B = !0) {
                    this.delegate.insertBefore(a, u, y),
                        this.engine.onInsert(this.namespaceId, u, a, B);
                }
                removeChild(a, u, y) {
                    this.engine.onRemove(this.namespaceId, u, this.delegate, y);
                }
                selectRootElement(a, u) {
                    return this.delegate.selectRootElement(a, u);
                }
                parentNode(a) {
                    return this.delegate.parentNode(a);
                }
                nextSibling(a) {
                    return this.delegate.nextSibling(a);
                }
                setAttribute(a, u, y, B) {
                    this.delegate.setAttribute(a, u, y, B);
                }
                removeAttribute(a, u, y) {
                    this.delegate.removeAttribute(a, u, y);
                }
                addClass(a, u) {
                    this.delegate.addClass(a, u);
                }
                removeClass(a, u) {
                    this.delegate.removeClass(a, u);
                }
                setStyle(a, u, y, B) {
                    this.delegate.setStyle(a, u, y, B);
                }
                removeStyle(a, u, y) {
                    this.delegate.removeStyle(a, u, y);
                }
                setProperty(a, u, y) {
                    '@' == u.charAt(0) && u == ar
                        ? this.disableAnimations(a, !!y)
                        : this.delegate.setProperty(a, u, y);
                }
                setValue(a, u) {
                    this.delegate.setValue(a, u);
                }
                listen(a, u, y) {
                    return this.delegate.listen(a, u, y);
                }
                disableAnimations(a, u) {
                    this.engine.disableAnimations(a, u);
                }
            }
            class Kr extends Pi {
                constructor(a, u, y, B) {
                    super(u, y, B), (this.factory = a), (this.namespaceId = u);
                }
                setProperty(a, u, y) {
                    '@' == u.charAt(0)
                        ? '.' == u.charAt(1) && u == ar
                            ? this.disableAnimations(
                                  a,
                                  (y = void 0 === y || !!y)
                              )
                            : this.engine.process(
                                  this.namespaceId,
                                  a,
                                  u.substr(1),
                                  y
                              )
                        : this.delegate.setProperty(a, u, y);
                }
                listen(a, u, y) {
                    if ('@' == u.charAt(0)) {
                        const B = (function xs(M) {
                            switch (M) {
                                case 'body':
                                    return document.body;
                                case 'document':
                                    return document;
                                case 'window':
                                    return window;
                                default:
                                    return M;
                            }
                        })(a);
                        let Q = u.substr(1),
                            me = '';
                        return (
                            '@' != Q.charAt(0) &&
                                ([Q, me] = (function Fs(M) {
                                    const a = M.indexOf('.');
                                    return [M.substring(0, a), M.substr(a + 1)];
                                })(Q)),
                            this.engine.listen(
                                this.namespaceId,
                                B,
                                Q,
                                me,
                                (ye) => {
                                    this.factory.scheduleListenerCallback(
                                        ye._data || -1,
                                        y,
                                        ye
                                    );
                                }
                            )
                        );
                    }
                    return this.delegate.listen(a, u, y);
                }
            }
            let vo = (() => {
                class M extends E {
                    constructor(u, y, B) {
                        super(u.body, y, B);
                    }
                    ngOnDestroy() {
                        this.flush();
                    }
                }
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)(m.LFG(Er.K0), m.LFG(Wt), m.LFG(Gr));
                    }),
                    (M.ɵprov = m.Yz7({ token: M, factory: M.ɵfac })),
                    M
                );
            })();
            const Ri = new m.OlP('AnimationModuleType'),
                Lr = [
                    { provide: S._j, useClass: Ti },
                    {
                        provide: Gr,
                        useFactory: function Zs() {
                            return new Br();
                        },
                    },
                    { provide: E, useClass: vo },
                    {
                        provide: m.FYo,
                        useFactory: function Eo(M, a, u) {
                            return new Ys(M, a, u);
                        },
                        deps: [s.se, E, m.R0b],
                    },
                ],
                oi = [
                    { provide: Wt, useFactory: () => new Qr() },
                    { provide: Ri, useValue: 'BrowserAnimations' },
                    ...Lr,
                ],
                ds = [
                    { provide: Wt, useClass: Kt },
                    { provide: Ri, useValue: 'NoopAnimations' },
                    ...Lr,
                ];
            let xi = (() => {
                class M {
                    static withConfig(u) {
                        return {
                            ngModule: M,
                            providers: u.disableAnimations ? ds : oi,
                        };
                    }
                }
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)();
                    }),
                    (M.ɵmod = m.oAB({ type: M })),
                    (M.ɵinj = m.cJS({ providers: oi, imports: [s.b2] })),
                    M
                );
            })();
            var Qs = f(546),
                Gi = f(845),
                Ns = f(9783);
            function Ls(M, a) {
                1 & M && m.GkF(0);
            }
            function fs(M, a) {
                if (
                    (1 & M &&
                        (m.TgZ(0, 'div', 3),
                        m.YNc(1, Ls, 1, 0, 'ng-container', 4),
                        m.qZA()),
                    2 & M)
                ) {
                    const u = m.oxw();
                    m.xp6(1), m.Q6J('ngTemplateOutlet', u.leftTemplate);
                }
            }
            function hs(M, a) {
                1 & M && m.GkF(0);
            }
            function ks(M, a) {
                if (
                    (1 & M &&
                        (m.TgZ(0, 'div', 5),
                        m.YNc(1, hs, 1, 0, 'ng-container', 4),
                        m.qZA()),
                    2 & M)
                ) {
                    const u = m.oxw();
                    m.xp6(1), m.Q6J('ngTemplateOutlet', u.rightTemplate);
                }
            }
            const ps = ['*'];
            let gs = (() => {
                    class M {
                        constructor(u) {
                            this.el = u;
                        }
                        getBlockableElement() {
                            return this.el.nativeElement.children[0];
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((u) => {
                                switch (u.getType()) {
                                    case 'left':
                                        this.leftTemplate = u.template;
                                        break;
                                    case 'right':
                                        this.rightTemplate = u.template;
                                }
                            });
                        }
                    }
                    return (
                        (M.ɵfac = function (u) {
                            return new (u || M)(m.Y36(m.SBq));
                        }),
                        (M.ɵcmp = m.Xpm({
                            type: M,
                            selectors: [['p-toolbar']],
                            contentQueries: function (u, y, B) {
                                if ((1 & u && m.Suo(B, Ns.jx, 4), 2 & u)) {
                                    let Q;
                                    m.iGM((Q = m.CRH())) && (y.templates = Q);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                style: 'style',
                                styleClass: 'styleClass',
                            },
                            ngContentSelectors: ps,
                            decls: 4,
                            vars: 6,
                            consts: [
                                ['role', 'toolbar', 3, 'ngClass', 'ngStyle'],
                                ['class', 'p-toolbar-group-left', 4, 'ngIf'],
                                ['class', 'p-toolbar-group-right', 4, 'ngIf'],
                                [1, 'p-toolbar-group-left'],
                                [4, 'ngTemplateOutlet'],
                                [1, 'p-toolbar-group-right'],
                            ],
                            template: function (u, y) {
                                1 & u &&
                                    (m.F$t(),
                                    m.TgZ(0, 'div', 0),
                                    m.Hsn(1),
                                    m.YNc(2, fs, 2, 1, 'div', 1),
                                    m.YNc(3, ks, 2, 1, 'div', 2),
                                    m.qZA()),
                                    2 & u &&
                                        (m.Tol(y.styleClass),
                                        m.Q6J(
                                            'ngClass',
                                            'p-toolbar p-component'
                                        )('ngStyle', y.style),
                                        m.xp6(2),
                                        m.Q6J('ngIf', y.leftTemplate),
                                        m.xp6(1),
                                        m.Q6J('ngIf', y.rightTemplate));
                            },
                            directives: [Er.mk, Er.PC, Er.O5, Er.tP],
                            styles: [
                                '.p-toolbar{display:flex;align-items:center;justify-content:space-between;flex-wrap:wrap}.p-toolbar-group-left,.p-toolbar-group-right{display:flex;align-items:center}\n',
                            ],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        M
                    );
                })(),
                ms = (() => {
                    class M {}
                    return (
                        (M.ɵfac = function (u) {
                            return new (u || M)();
                        }),
                        (M.ɵmod = m.oAB({ type: M })),
                        (M.ɵinj = m.cJS({ imports: [[Er.ez]] })),
                        M
                    );
                })();
            var ts = f(8989);
            let Js = (() => {
                class M {}
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)();
                    }),
                    (M.ɵmod = m.oAB({ type: M })),
                    (M.ɵinj = m.cJS({
                        imports: [
                            [Er.ez, Qs.UserButtonModule, L.Bz, Gi.hJ, ms, ts.I],
                        ],
                    })),
                    M
                );
            })();
            var Bs = f(6530),
                qs = f(4004),
                _s = f(3856),
                zi = f(2266),
                Us = f(1874);
            const Vs = function () {
                return { 'background-color': '#3B82F6', color: '#ffffff' };
            };
            function Vr(M, a) {
                if (1 & M) {
                    const u = m.EpF();
                    m.ynx(0),
                        m.TgZ(1, 'div', 2)(2, 'p-avatar', 3),
                        m.NdJ('click', function (B) {
                            return m.CHM(u), m.MAs(4).toggle(B);
                        }),
                        m.qZA(),
                        m._UZ(3, 'p-menu', 4, 5),
                        m.qZA(),
                        m.BQk();
                }
                if (2 & M) {
                    const u = m.oxw();
                    m.xp6(2),
                        m.Akn(m.DdM(4, Vs)),
                        m.xp6(1),
                        m.Q6J('popup', !0)('model', u.menuItems);
                }
            }
            function Fi(M, a) {
                1 & M && m._UZ(0, 'p-button', 6);
            }
            let hr = (() => {
                class M {
                    constructor(u, y) {
                        (this.auth = u),
                            (this.userService = y),
                            (this.menuItems = [
                                {
                                    label: 'Sign Out',
                                    icon: 'pi pi-sign-out',
                                    command: () => this.signOut(),
                                },
                            ]);
                    }
                    ngOnInit() {
                        this.email$ = this.userService
                            .getUser()
                            .pipe(
                                (0, qs.U)((u) => (null == u ? void 0 : u.email))
                            );
                    }
                    signOut() {
                        this.auth.logout();
                    }
                }
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)(m.Y36(_s.e), m.Y36(Bs.K));
                    }),
                    (M.ɵcmp = m.Xpm({
                        type: M,
                        selectors: [['sol-user-button']],
                        decls: 4,
                        vars: 4,
                        consts: [
                            [4, 'ngIf', 'ngIfElse'],
                            ['login', ''],
                            [2, 'cursor', 'pointer'],
                            [
                                'size',
                                'large',
                                'icon',
                                'pi pi-user',
                                'styleClass',
                                'mr-2',
                                3,
                                'click',
                            ],
                            [3, 'popup', 'model'],
                            ['menu', ''],
                            [
                                'routerLink',
                                '/user/login',
                                'label',
                                'Sign In',
                                'styleClass',
                                'p-button-md',
                            ],
                        ],
                        template: function (u, y) {
                            if (
                                (1 & u &&
                                    (m.YNc(0, Vr, 5, 5, 'ng-container', 0),
                                    m.ALo(1, 'async'),
                                    m.YNc(
                                        2,
                                        Fi,
                                        1,
                                        0,
                                        'ng-template',
                                        null,
                                        1,
                                        m.W1O
                                    )),
                                2 & u)
                            ) {
                                const B = m.MAs(3);
                                m.Q6J('ngIf', m.lcZ(1, 2, y.email$))(
                                    'ngIfElse',
                                    B
                                );
                            }
                        },
                        directives: [Er.O5, zi.q, Us.v2, Gi.zx, L.rH],
                        pipes: [Er.Ov],
                        encapsulation: 2,
                        changeDetection: 0,
                    })),
                    M
                );
            })();
            function ys(M, a) {
                1 & M &&
                    (m.ynx(0),
                    m.TgZ(1, 'div', 8),
                    m._UZ(2, 'p-button', 9),
                    m.qZA(),
                    m.TgZ(3, 'div', 10),
                    m._UZ(4, 'p-button', 11),
                    m.qZA(),
                    m.BQk());
            }
            const Do = [
                {
                    path: '',
                    component: (() => {
                        class M {
                            constructor(u) {
                                (this.userService = u),
                                    (this.isLoggedIn$ =
                                        this.userService.isLoggedIn());
                            }
                        }
                        return (
                            (M.ɵfac = function (u) {
                                return new (u || M)(m.Y36(Bs.K));
                            }),
                            (M.ɵcmp = m.Xpm({
                                type: M,
                                selectors: [['ng-component']],
                                decls: 13,
                                vars: 3,
                                consts: [
                                    [1, 'toolbarz'],
                                    ['styleClass', 'toolbar'],
                                    [1, 'p-toolbar-group-left'],
                                    [
                                        'src',
                                        'assets/header/sol-logo.png',
                                        'alt',
                                        'sol-logo',
                                        'height',
                                        '50px',
                                        2,
                                        'margin-right',
                                        '10px',
                                    ],
                                    [
                                        'routerLink',
                                        '/',
                                        2,
                                        'margin',
                                        '0',
                                        'cursor',
                                        'pointer',
                                    ],
                                    [1, 'p-toolbar-group-right'],
                                    [4, 'ngIf'],
                                    [2, 'padding', '1rem'],
                                    [2, 'margin-right', '1rem'],
                                    [
                                        'routerLink',
                                        '/calendar/classes',
                                        'label',
                                        'Calendar Demo',
                                        'styleClass',
                                        'p-button-success p-button-md',
                                    ],
                                    [2, 'margin-right', '3rem'],
                                    [
                                        'routerLink',
                                        '/report',
                                        'label',
                                        'Report Demo',
                                        'styleClass',
                                        'p-button-help p-button-md',
                                    ],
                                ],
                                template: function (u, y) {
                                    1 & u &&
                                        (m.TgZ(0, 'header', 0)(
                                            1,
                                            'p-toolbar',
                                            1
                                        )(
                                            2,
                                            'div',
                                            2
                                        )(3, 'div'),
                                        m._UZ(4, 'img', 3),
                                        m.qZA(),
                                        m.TgZ(5, 'h2', 4),
                                        m._uU(
                                            6,
                                            ' Mountain SOL School Portal '
                                        ),
                                        m.qZA()(),
                                        m.TgZ(7, 'div', 5),
                                        m.YNc(8, ys, 5, 0, 'ng-container', 6),
                                        m.ALo(9, 'async'),
                                        m._UZ(10, 'sol-user-button'),
                                        m.qZA()()(),
                                        m.TgZ(11, 'div', 7),
                                        m._UZ(12, 'router-outlet'),
                                        m.qZA()),
                                        2 & u &&
                                            (m.xp6(8),
                                            m.Q6J(
                                                'ngIf',
                                                m.lcZ(9, 1, y.isLoggedIn$)
                                            ));
                                },
                                directives: [gs, L.rH, Er.O5, Gi.zx, hr, L.lC],
                                pipes: [Er.Ov],
                                styles: [
                                    '.toolbar[_ngcontent-%COMP%]{color:green}',
                                ],
                                changeDetection: 0,
                            })),
                            M
                        );
                    })(),
                    children: [
                        {
                            path: 'user',
                            loadChildren: () =>
                                Promise.resolve()
                                    .then(f.bind(f, 546))
                                    .then((M) => M.AuthLoginModule),
                        },
                        {
                            path: 'report',
                            loadChildren: () =>
                                Promise.all([f.e(592), f.e(503)])
                                    .then(f.bind(f, 9503))
                                    .then((M) => M.ReportComponentModule),
                        },
                        {
                            path: 'calendar',
                            loadChildren: () =>
                                Promise.all([f.e(592), f.e(655)])
                                    .then(f.bind(f, 3655))
                                    .then((M) => M.ClassesCalendarModule),
                        },
                        {
                            path: 'classes',
                            children: [
                                {
                                    path: 'management',
                                    loadChildren: () =>
                                        f
                                            .e(904)
                                            .then(f.bind(f, 904))
                                            .then(
                                                (M) => M.ClassManagementModule
                                            ),
                                },
                            ],
                        },
                    ],
                },
            ];
            let vs = (() => {
                class M {}
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)();
                    }),
                    (M.ɵmod = m.oAB({ type: M })),
                    (M.ɵinj = m.cJS({ imports: [[L.Bz.forRoot(Do)], L.Bz] })),
                    M
                );
            })();
            var oo = f(5620),
                Xs = f(6642),
                Es = f(2011),
                Ds = f(9565),
                Mr = f(520),
                Dr = f(2228);
            var Cs = f(97),
                ai = f(3724),
                fi = f(9287);
            const bs = [
                    { provide: Mr.TP, useClass: Qs.AuthInterceptor, multi: !0 },
                ],
                ao = {
                    provide: Dr.jQ,
                    useValue: 'https://mountain-sol-platform.web.app',
                };
            let Ai = (() => {
                class M {}
                return (
                    (M.ɵfac = function (u) {
                        return new (u || M)();
                    }),
                    (M.ɵmod = m.oAB({ type: M, bootstrap: [T] })),
                    (M.ɵinj = m.cJS({
                        providers: [bs, ao, Ns.ez],
                        imports: [
                            [
                                Es.hO.initializeApp({
                                    apiKey: 'AIzaSyBxv66X_Ye4MXI5lt8Sjc1xz88rdWJJ0ho',
                                    authDomain: 'mountain-sol-platform.web.app',
                                    projectId: 'mountain-sol-platform',
                                    storageBucket:
                                        'mountain-sol-platform.appspot.com',
                                    messagingSenderId: '319228048592',
                                    appId: '1:319228048592:web:2d418795ca948ba2665ad5',
                                    measurementId: 'G-QN03ENCDDC',
                                }),
                                s.b2,
                                xi,
                                vs,
                                Js,
                                oo.Aw.forRoot({}, {}),
                                Ds.FT.instrument({ maxAge: 25, autoPause: !0 }),
                                Xs.sQ.forRoot([]),
                                Dr.Qv,
                                Mr.JF,
                                Cs.$,
                                ai.O,
                                k.EV,
                                fi.Iq,
                            ],
                        ],
                    })),
                    M
                );
            })();
            (0, m.G48)(),
                s
                    .q6()
                    .bootstrapModule(Ai, {
                        defaultEncapsulation: m.ifc.ShadowDom,
                    })
                    .catch((M) => console.error(M));
        },
        546: (de, Y, f) => {
            f.r(Y),
                f.d(Y, {
                    AuthInterceptor: () => Ot,
                    AuthLoginModule: () => We,
                    AuthLoginRoutingModule: () => we,
                    UserButtonModule: () => hn,
                });
            var s = f(9808),
                m = f(3856),
                L = f(3385),
                k = f(5e3);
            let T = (() => {
                class gt {}
                return (
                    (gt.ɵfac = function (It) {
                        return new (It || gt)();
                    }),
                    (gt.ɵmod = k.oAB({ type: gt })),
                    (gt.ɵinj = k.cJS({
                        providers: [m.e],
                        imports: [[s.ez, L.ww]],
                    })),
                    gt
                );
            })();
            var S = f(3075),
                O = f(6642),
                N = f(5620);
            (0, N.PH)('[Go to Login Button] Visit Login Intent');
            const w = (0, N.PH)('[Login Service] Login Intent', (0, N.Ky)()),
                F = (0, N.PH)(
                    '[Login Service] Create Account Intent',
                    (0, N.Ky)()
                ),
                K = (0, N.PH)('[Login Effects] Login Success');
            var fe = f(3900),
                _e = f(4004),
                Re = f(9300),
                Oe = f(8505),
                pe = f(6115),
                J = f(9783);
            let Me = (() => {
                class gt {
                    constructor(It, mt, $t, nt) {
                        (this.actions$ = It),
                            (this.authService = mt),
                            (this.router = $t),
                            (this.messageService = nt),
                            (this.login$ = (0, O.GW)(() =>
                                this.actions$.pipe(
                                    (0, O.l4)(w),
                                    (0, fe.w)(({ email: At, password: He }) =>
                                        this.authService.login(At, He).pipe(
                                            (0, _e.U)(({ user: st }) => st),
                                            (0, Re.h)((st) => !!st),
                                            (0, _e.U)(() => K())
                                        )
                                    ),
                                    (0, Oe.b)(() =>
                                        this.router.navigate(['/'])
                                    ),
                                    (0, Oe.b)(() =>
                                        this.messageService.add({
                                            detail: 'Signed in!',
                                            summary: 'Success',
                                            severity: 'success',
                                        })
                                    )
                                )
                            )),
                            (this.createAccount$ = (0, O.GW)(() =>
                                this.actions$.pipe(
                                    (0, O.l4)(F),
                                    (0, fe.w)(({ email: At, password: He }) =>
                                        this.authService
                                            .emailSignup(At, He)
                                            .pipe(
                                                (0, _e.U)(({ user: st }) => st),
                                                (0, Re.h)((st) => !!st),
                                                (0, _e.U)(() => K())
                                            )
                                    ),
                                    (0, Oe.b)(() =>
                                        this.router.navigate(['/'])
                                    ),
                                    (0, Oe.b)(() =>
                                        this.messageService.add({
                                            detail: 'Created account!',
                                            summary: 'Success',
                                            severity: 'success',
                                        })
                                    )
                                )
                            ));
                    }
                }
                return (
                    (gt.ɵfac = function (It) {
                        return new (It || gt)(
                            k.LFG(O.eX),
                            k.LFG(m.e),
                            k.LFG(pe.F0),
                            k.LFG(J.ez)
                        );
                    }),
                    (gt.ɵprov = k.Yz7({
                        token: gt,
                        factory: gt.ɵfac,
                        providedIn: 'root',
                    })),
                    gt
                );
            })();
            var he = f(1135),
                De = f(1424),
                R = f(845);
            let te = (() => {
                class gt {
                    constructor(It, mt) {
                        (this.formBuilder = It),
                            (this.store = mt),
                            (this.isLoggingIn$ = new he.X(!1)),
                            (this.loginForm = this.formBuilder.group({
                                email: [],
                                password: [],
                            }));
                    }
                    signUpClick() {
                        var It, mt;
                        this.store.dispatch(
                            F({
                                email:
                                    null === (It = this.loginForm) ||
                                    void 0 === It
                                        ? void 0
                                        : It.value.email,
                                password:
                                    null === (mt = this.loginForm) ||
                                    void 0 === mt
                                        ? void 0
                                        : mt.value.password,
                            })
                        ),
                            this.isLoggingIn$.next(!0);
                    }
                }
                return (
                    (gt.ɵfac = function (It) {
                        return new (It || gt)(k.Y36(S.qu), k.Y36(N.yh));
                    }),
                    (gt.ɵcmp = k.Xpm({
                        type: gt,
                        selectors: [['ng-component']],
                        decls: 20,
                        vars: 4,
                        consts: [
                            [2, 'width', '400px', 'margin', 'auto'],
                            [1, 'p-fluid', 3, 'formGroup'],
                            [1, 'field'],
                            ['for', 'email'],
                            [1, 'p-inputgroup'],
                            [1, 'p-inputgroup-addon'],
                            [1, 'pi', 'pi-user'],
                            [
                                'id',
                                'email',
                                'type',
                                'email',
                                'pInputText',
                                '',
                                'formControlName',
                                'email',
                                'placeholder',
                                'somebody@email.com',
                            ],
                            [1, 'pi', 'pi-lock'],
                            [
                                'type',
                                'password',
                                'pInputText',
                                '',
                                'formControlName',
                                'password',
                            ],
                            ['label', 'Submit', 3, 'loading', 'click'],
                        ],
                        template: function (It, mt) {
                            if (
                                (1 & It &&
                                    (k.TgZ(0, 'div', 0)(1, 'h2'),
                                    k._uU(2, 'Create Account'),
                                    k.qZA(),
                                    k.TgZ(3, 'div', 1)(4, 'div', 2)(
                                        5,
                                        'label',
                                        3
                                    ),
                                    k._uU(6, 'Email'),
                                    k.qZA(),
                                    k.TgZ(7, 'div', 4)(8, 'span', 5),
                                    k._UZ(9, 'i', 6),
                                    k.qZA(),
                                    k._UZ(10, 'input', 7),
                                    k.qZA()(),
                                    k.TgZ(11, 'div', 2)(12, 'label', 3),
                                    k._uU(13, 'Password'),
                                    k.qZA(),
                                    k.TgZ(14, 'div', 4)(15, 'span', 5),
                                    k._UZ(16, 'i', 8),
                                    k.qZA(),
                                    k._UZ(17, 'input', 9),
                                    k.qZA()()(),
                                    k.TgZ(18, 'p-button', 10),
                                    k.NdJ('click', function () {
                                        return mt.signUpClick();
                                    }),
                                    k.ALo(19, 'async'),
                                    k.qZA()()),
                                2 & It)
                            ) {
                                let $t;
                                k.xp6(3),
                                    k.Q6J('formGroup', mt.loginForm),
                                    k.xp6(15),
                                    k.Q6J(
                                        'loading',
                                        null !==
                                            ($t = k.lcZ(
                                                19,
                                                2,
                                                mt.isLoggingIn$
                                            )) &&
                                            void 0 !== $t &&
                                            $t
                                    );
                            }
                        },
                        directives: [S.JL, S.sg, S.Fj, De.o, S.JJ, S.u, R.zx],
                        pipes: [s.Ov],
                        encapsulation: 2,
                        changeDetection: 0,
                    })),
                    gt
                );
            })();
            var G = f(97);
            function oe(gt, Pt) {
                1 & gt &&
                    (k.TgZ(0, 'div', 13),
                    k._uU(1, ' First time here? '),
                    k.TgZ(2, 'a', 14),
                    k._uU(3, 'Create an account.'),
                    k.qZA()());
            }
            const ne = [
                {
                    path: 'login',
                    component: (() => {
                        class gt {
                            constructor(It, mt) {
                                (this.formBuilder = It),
                                    (this.store = mt),
                                    (this.isLoggingIn$ = new he.X(!1)),
                                    (this.loginForm = this.formBuilder.group({
                                        email: [],
                                        password: [],
                                    }));
                            }
                            loginClick() {
                                var It, mt;
                                this.store.dispatch(
                                    w({
                                        email:
                                            null === (It = this.loginForm) ||
                                            void 0 === It
                                                ? void 0
                                                : It.value.email,
                                        password:
                                            null === (mt = this.loginForm) ||
                                            void 0 === mt
                                                ? void 0
                                                : mt.value.password,
                                    })
                                ),
                                    this.isLoggingIn$.next(!0);
                            }
                        }
                        return (
                            (gt.ɵfac = function (It) {
                                return new (It || gt)(k.Y36(S.qu), k.Y36(N.yh));
                            }),
                            (gt.ɵcmp = k.Xpm({
                                type: gt,
                                selectors: [['ng-component']],
                                decls: 22,
                                vars: 5,
                                consts: [
                                    [2, 'width', '400px', 'margin', 'auto'],
                                    ['severity', 'info', 3, 'enableService'],
                                    ['pTemplate', ''],
                                    [1, 'p-fluid', 3, 'formGroup'],
                                    [1, 'field'],
                                    ['for', 'email'],
                                    [1, 'p-inputgroup'],
                                    [1, 'p-inputgroup-addon'],
                                    [1, 'pi', 'pi-user'],
                                    [
                                        'id',
                                        'email',
                                        'type',
                                        'text',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'email',
                                        'placeholder',
                                        'somebody@email.com',
                                    ],
                                    [1, 'pi', 'pi-lock'],
                                    [
                                        'type',
                                        'password',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'password',
                                    ],
                                    ['label', 'Submit', 3, 'loading', 'click'],
                                    [1, 'ml-2'],
                                    ['routerLink', '/user/create'],
                                ],
                                template: function (It, mt) {
                                    if (
                                        (1 & It &&
                                            (k.TgZ(0, 'div', 0)(
                                                1,
                                                'p-messages',
                                                1
                                            ),
                                            k.YNc(
                                                2,
                                                oe,
                                                4,
                                                0,
                                                'ng-template',
                                                2
                                            ),
                                            k.qZA(),
                                            k.TgZ(3, 'h2'),
                                            k._uU(4, 'Sign In'),
                                            k.qZA(),
                                            k.TgZ(5, 'div', 3)(6, 'div', 4)(
                                                7,
                                                'label',
                                                5
                                            ),
                                            k._uU(8, 'Email'),
                                            k.qZA(),
                                            k.TgZ(9, 'div', 6)(10, 'span', 7),
                                            k._UZ(11, 'i', 8),
                                            k.qZA(),
                                            k._UZ(12, 'input', 9),
                                            k.qZA()(),
                                            k.TgZ(13, 'div', 4)(14, 'label', 5),
                                            k._uU(15, 'Password'),
                                            k.qZA(),
                                            k.TgZ(16, 'div', 6)(17, 'span', 7),
                                            k._UZ(18, 'i', 10),
                                            k.qZA(),
                                            k._UZ(19, 'input', 11),
                                            k.qZA()()(),
                                            k.TgZ(20, 'p-button', 12),
                                            k.NdJ('click', function () {
                                                return mt.loginClick();
                                            }),
                                            k.ALo(21, 'async'),
                                            k.qZA()()),
                                        2 & It)
                                    ) {
                                        let $t;
                                        k.xp6(1),
                                            k.Q6J('enableService', !1),
                                            k.xp6(4),
                                            k.Q6J('formGroup', mt.loginForm),
                                            k.xp6(15),
                                            k.Q6J(
                                                'loading',
                                                null !==
                                                    ($t = k.lcZ(
                                                        21,
                                                        3,
                                                        mt.isLoggingIn$
                                                    )) &&
                                                    void 0 !== $t &&
                                                    $t
                                            );
                                    }
                                },
                                directives: [
                                    G.V,
                                    J.jx,
                                    pe.yS,
                                    S.JL,
                                    S.sg,
                                    S.Fj,
                                    De.o,
                                    S.JJ,
                                    S.u,
                                    R.zx,
                                ],
                                pipes: [s.Ov],
                                encapsulation: 2,
                                changeDetection: 0,
                            })),
                            gt
                        );
                    })(),
                    children: [],
                },
                { path: 'create', component: te, children: [] },
            ];
            let we = (() => {
                class gt {}
                return (
                    (gt.ɵfac = function (It) {
                        return new (It || gt)();
                    }),
                    (gt.ɵmod = k.oAB({ type: gt })),
                    (gt.ɵinj = k.cJS({
                        imports: [[pe.Bz.forChild(ne)], pe.Bz],
                    })),
                    gt
                );
            })();
            var Fe = f(3724),
                je = f(7773);
            let We = (() => {
                class gt {}
                return (
                    (gt.ɵfac = function (It) {
                        return new (It || gt)();
                    }),
                    (gt.ɵmod = k.oAB({ type: gt })),
                    (gt.ɵinj = k.cJS({
                        imports: [
                            [
                                s.ez,
                                we,
                                S.UX,
                                R.hJ,
                                De.j,
                                T,
                                O.sQ.forFeature([Me]),
                                G.$,
                                Fe.O,
                                je.EV,
                            ],
                        ],
                    })),
                    gt
                );
            })();
            var ke = f(2266),
                pt = f(1874),
                Lt = f(8989);
            let hn = (() => {
                class gt {}
                return (
                    (gt.ɵfac = function (It) {
                        return new (It || gt)();
                    }),
                    (gt.ɵmod = k.oAB({ type: gt })),
                    (gt.ɵinj = k.cJS({
                        imports: [[s.ez, R.hJ, ke.F, pe.Bz, pt.$9, T, Lt.I]],
                    })),
                    gt
                );
            })();
            var yt = f(8996);
            let Ot = (() => {
                class gt {
                    constructor(It) {
                        this.afAuth = It;
                    }
                    intercept(It, mt) {
                        return this.afAuth.user.pipe(
                            (0, fe.w)(($t) =>
                                $t
                                    ? (0, yt.D)($t.getIdToken()).pipe(
                                          (0, _e.U)((nt) =>
                                              It.clone({
                                                  headers: It.headers.append(
                                                      'Authorization',
                                                      `Bearer ${nt}`
                                                  ),
                                              })
                                          ),
                                          (0, fe.w)((nt) => mt.handle(nt))
                                      )
                                    : mt.handle(It)
                            )
                        );
                    }
                }
                return (
                    (gt.ɵfac = function (It) {
                        return new (It || gt)(k.LFG(L.zQ));
                    }),
                    (gt.ɵprov = k.Yz7({ token: gt, factory: gt.ɵfac })),
                    gt
                );
            })();
        },
        8989: (de, Y, f) => {
            f.d(Y, { I: () => T });
            var s = f(9808),
                m = f(3385),
                L = f(6530),
                k = f(5e3);
            let T = (() => {
                class S {}
                return (
                    (S.ɵfac = function (N) {
                        return new (N || S)();
                    }),
                    (S.ɵmod = k.oAB({ type: S })),
                    (S.ɵinj = k.cJS({
                        providers: [L.K],
                        imports: [[s.ez, m.ww]],
                    })),
                    S
                );
            })();
        },
        6530: (de, Y, f) => {
            f.d(Y, { K: () => k });
            var s = f(4004),
                m = f(5e3),
                L = f(3385);
            let k = (() => {
                class T {
                    constructor(O) {
                        this.afAuth = O;
                    }
                    isLoggedIn() {
                        return this.afAuth.user.pipe((0, s.U)((O) => !!O));
                    }
                    getUser() {
                        return this.afAuth.user.pipe();
                    }
                }
                return (
                    (T.ɵfac = function (O) {
                        return new (O || T)(m.LFG(L.zQ));
                    }),
                    (T.ɵprov = m.Yz7({
                        token: T,
                        factory: T.ɵfac,
                        providedIn: 'root',
                    })),
                    T
                );
            })();
        },
        3856: (de, Y, f) => {
            f.d(Y, { e: () => O });
            var s = f(8996),
                m = f(8505),
                L = f(5698),
                k = f(5e3),
                T = f(3385),
                S = f(6115);
            let O = (() => {
                class N {
                    constructor(w, F) {
                        (this.afAuth = w), (this.router = F);
                    }
                    login(w, F) {
                        return (0, s.D)(
                            this.afAuth.signInWithEmailAndPassword(w, F)
                        );
                    }
                    emailSignup(w, F) {
                        return (0, s.D)(
                            this.afAuth.createUserWithEmailAndPassword(w, F)
                        );
                    }
                    logout() {
                        (0, s.D)(this.afAuth.signOut())
                            .pipe(
                                (0, m.b)(() => this.router.navigate(['/'])),
                                (0, L.q)(1)
                            )
                            .subscribe();
                    }
                }
                return (
                    (N.ɵfac = function (w) {
                        return new (w || N)(k.LFG(T.zQ), k.LFG(S.F0));
                    }),
                    (N.ɵprov = k.Yz7({ token: N, factory: N.ɵfac })),
                    N
                );
            })();
        },
        5867: (de, Y, f) => {
            f.d(Y, { C6: () => s.getApps, Mq: () => s.getApp });
            var s = f(9681);
            (0, s.registerVersion)('firebase', '9.8.2', 'app');
        },
        127: (de, Y, f) => {
            f.d(Y, { Z: () => s.Z });
            var s = f(3942);
            s.Z.registerVersion('firebase', '9.8.2', 'app-compat');
        },
        1135: (de, Y, f) => {
            f.d(Y, { X: () => m });
            var s = f(7579);
            class m extends s.x {
                constructor(k) {
                    super(), (this._value = k);
                }
                get value() {
                    return this.getValue();
                }
                _subscribe(k) {
                    const T = super._subscribe(k);
                    return !T.closed && k.next(this._value), T;
                }
                getValue() {
                    const { hasError: k, thrownError: T, _value: S } = this;
                    if (k) throw T;
                    return this._throwIfClosed(), S;
                }
                next(k) {
                    super.next((this._value = k));
                }
            }
        },
        8306: (de, Y, f) => {
            f.d(Y, { y: () => w });
            var s = f(930),
                m = f(727),
                L = f(8822),
                k = f(4671);
            var O = f(2416),
                N = f(576),
                U = f(2806);
            let w = (() => {
                class _e {
                    constructor(Oe) {
                        Oe && (this._subscribe = Oe);
                    }
                    lift(Oe) {
                        const pe = new _e();
                        return (pe.source = this), (pe.operator = Oe), pe;
                    }
                    subscribe(Oe, pe, J) {
                        const Me = (function fe(_e) {
                            return (
                                (_e && _e instanceof s.Lv) ||
                                ((function K(_e) {
                                    return (
                                        _e &&
                                        (0, N.m)(_e.next) &&
                                        (0, N.m)(_e.error) &&
                                        (0, N.m)(_e.complete)
                                    );
                                })(_e) &&
                                    (0, m.Nn)(_e))
                            );
                        })(Oe)
                            ? Oe
                            : new s.Hp(Oe, pe, J);
                        return (
                            (0, U.x)(() => {
                                const { operator: he, source: De } = this;
                                Me.add(
                                    he
                                        ? he.call(Me, De)
                                        : De
                                        ? this._subscribe(Me)
                                        : this._trySubscribe(Me)
                                );
                            }),
                            Me
                        );
                    }
                    _trySubscribe(Oe) {
                        try {
                            return this._subscribe(Oe);
                        } catch (pe) {
                            Oe.error(pe);
                        }
                    }
                    forEach(Oe, pe) {
                        return new (pe = F(pe))((J, Me) => {
                            let he;
                            he = this.subscribe(
                                (De) => {
                                    try {
                                        Oe(De);
                                    } catch (R) {
                                        Me(R), null == he || he.unsubscribe();
                                    }
                                },
                                Me,
                                J
                            );
                        });
                    }
                    _subscribe(Oe) {
                        var pe;
                        return null === (pe = this.source) || void 0 === pe
                            ? void 0
                            : pe.subscribe(Oe);
                    }
                    [L.L]() {
                        return this;
                    }
                    pipe(...Oe) {
                        return (function S(_e) {
                            return 0 === _e.length
                                ? k.y
                                : 1 === _e.length
                                ? _e[0]
                                : function (Oe) {
                                      return _e.reduce((pe, J) => J(pe), Oe);
                                  };
                        })(Oe)(this);
                    }
                    toPromise(Oe) {
                        return new (Oe = F(Oe))((pe, J) => {
                            let Me;
                            this.subscribe(
                                (he) => (Me = he),
                                (he) => J(he),
                                () => pe(Me)
                            );
                        });
                    }
                }
                return (_e.create = (Re) => new _e(Re)), _e;
            })();
            function F(_e) {
                var Re;
                return null !== (Re = null != _e ? _e : O.v.Promise) &&
                    void 0 !== Re
                    ? Re
                    : Promise;
            }
        },
        4707: (de, Y, f) => {
            f.d(Y, { t: () => L });
            var s = f(7579),
                m = f(6063);
            class L extends s.x {
                constructor(T = 1 / 0, S = 1 / 0, O = m.l) {
                    super(),
                        (this._bufferSize = T),
                        (this._windowTime = S),
                        (this._timestampProvider = O),
                        (this._buffer = []),
                        (this._infiniteTimeWindow = !0),
                        (this._infiniteTimeWindow = S === 1 / 0),
                        (this._bufferSize = Math.max(1, T)),
                        (this._windowTime = Math.max(1, S));
                }
                next(T) {
                    const {
                        isStopped: S,
                        _buffer: O,
                        _infiniteTimeWindow: N,
                        _timestampProvider: U,
                        _windowTime: w,
                    } = this;
                    S || (O.push(T), !N && O.push(U.now() + w)),
                        this._trimBuffer(),
                        super.next(T);
                }
                _subscribe(T) {
                    this._throwIfClosed(), this._trimBuffer();
                    const S = this._innerSubscribe(T),
                        { _infiniteTimeWindow: O, _buffer: N } = this,
                        U = N.slice();
                    for (let w = 0; w < U.length && !T.closed; w += O ? 1 : 2)
                        T.next(U[w]);
                    return this._checkFinalizedStatuses(T), S;
                }
                _trimBuffer() {
                    const {
                            _bufferSize: T,
                            _timestampProvider: S,
                            _buffer: O,
                            _infiniteTimeWindow: N,
                        } = this,
                        U = (N ? 1 : 2) * T;
                    if (
                        (T < 1 / 0 && U < O.length && O.splice(0, O.length - U),
                        !N)
                    ) {
                        const w = S.now();
                        let F = 0;
                        for (let K = 1; K < O.length && O[K] <= w; K += 2)
                            F = K;
                        F && O.splice(0, F + 1);
                    }
                }
            }
        },
        7579: (de, Y, f) => {
            f.d(Y, { x: () => O });
            var s = f(8306),
                m = f(727);
            const k = (0, f(3888).d)(
                (U) =>
                    function () {
                        U(this),
                            (this.name = 'ObjectUnsubscribedError'),
                            (this.message = 'object unsubscribed');
                    }
            );
            var T = f(8737),
                S = f(2806);
            let O = (() => {
                class U extends s.y {
                    constructor() {
                        super(),
                            (this.closed = !1),
                            (this.observers = []),
                            (this.isStopped = !1),
                            (this.hasError = !1),
                            (this.thrownError = null);
                    }
                    lift(F) {
                        const K = new N(this, this);
                        return (K.operator = F), K;
                    }
                    _throwIfClosed() {
                        if (this.closed) throw new k();
                    }
                    next(F) {
                        (0, S.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                const K = this.observers.slice();
                                for (const fe of K) fe.next(F);
                            }
                        });
                    }
                    error(F) {
                        (0, S.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                (this.hasError = this.isStopped = !0),
                                    (this.thrownError = F);
                                const { observers: K } = this;
                                for (; K.length; ) K.shift().error(F);
                            }
                        });
                    }
                    complete() {
                        (0, S.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                this.isStopped = !0;
                                const { observers: F } = this;
                                for (; F.length; ) F.shift().complete();
                            }
                        });
                    }
                    unsubscribe() {
                        (this.isStopped = this.closed = !0),
                            (this.observers = null);
                    }
                    get observed() {
                        var F;
                        return (
                            (null === (F = this.observers) || void 0 === F
                                ? void 0
                                : F.length) > 0
                        );
                    }
                    _trySubscribe(F) {
                        return this._throwIfClosed(), super._trySubscribe(F);
                    }
                    _subscribe(F) {
                        return (
                            this._throwIfClosed(),
                            this._checkFinalizedStatuses(F),
                            this._innerSubscribe(F)
                        );
                    }
                    _innerSubscribe(F) {
                        const {
                            hasError: K,
                            isStopped: fe,
                            observers: _e,
                        } = this;
                        return K || fe
                            ? m.Lc
                            : (_e.push(F), new m.w0(() => (0, T.P)(_e, F)));
                    }
                    _checkFinalizedStatuses(F) {
                        const {
                            hasError: K,
                            thrownError: fe,
                            isStopped: _e,
                        } = this;
                        K ? F.error(fe) : _e && F.complete();
                    }
                    asObservable() {
                        const F = new s.y();
                        return (F.source = this), F;
                    }
                }
                return (U.create = (w, F) => new N(w, F)), U;
            })();
            class N extends O {
                constructor(w, F) {
                    super(), (this.destination = w), (this.source = F);
                }
                next(w) {
                    var F, K;
                    null ===
                        (K =
                            null === (F = this.destination) || void 0 === F
                                ? void 0
                                : F.next) ||
                        void 0 === K ||
                        K.call(F, w);
                }
                error(w) {
                    var F, K;
                    null ===
                        (K =
                            null === (F = this.destination) || void 0 === F
                                ? void 0
                                : F.error) ||
                        void 0 === K ||
                        K.call(F, w);
                }
                complete() {
                    var w, F;
                    null ===
                        (F =
                            null === (w = this.destination) || void 0 === w
                                ? void 0
                                : w.complete) ||
                        void 0 === F ||
                        F.call(w);
                }
                _subscribe(w) {
                    var F, K;
                    return null !==
                        (K =
                            null === (F = this.source) || void 0 === F
                                ? void 0
                                : F.subscribe(w)) && void 0 !== K
                        ? K
                        : m.Lc;
                }
            }
        },
        930: (de, Y, f) => {
            f.d(Y, { Hp: () => fe, Lv: () => K });
            var s = f(576),
                m = f(727),
                L = f(2416),
                k = f(7849),
                T = f(5032);
            const S = U('C', void 0, void 0);
            function U(J, Me, he) {
                return { kind: J, value: Me, error: he };
            }
            var w = f(3410),
                F = f(2806);
            class K extends m.w0 {
                constructor(Me) {
                    super(),
                        (this.isStopped = !1),
                        Me
                            ? ((this.destination = Me),
                              (0, m.Nn)(Me) && Me.add(this))
                            : (this.destination = pe);
                }
                static create(Me, he, De) {
                    return new fe(Me, he, De);
                }
                next(Me) {
                    this.isStopped
                        ? Oe(
                              (function N(J) {
                                  return U('N', J, void 0);
                              })(Me),
                              this
                          )
                        : this._next(Me);
                }
                error(Me) {
                    this.isStopped
                        ? Oe(
                              (function O(J) {
                                  return U('E', void 0, J);
                              })(Me),
                              this
                          )
                        : ((this.isStopped = !0), this._error(Me));
                }
                complete() {
                    this.isStopped
                        ? Oe(S, this)
                        : ((this.isStopped = !0), this._complete());
                }
                unsubscribe() {
                    this.closed ||
                        ((this.isStopped = !0),
                        super.unsubscribe(),
                        (this.destination = null));
                }
                _next(Me) {
                    this.destination.next(Me);
                }
                _error(Me) {
                    try {
                        this.destination.error(Me);
                    } finally {
                        this.unsubscribe();
                    }
                }
                _complete() {
                    try {
                        this.destination.complete();
                    } finally {
                        this.unsubscribe();
                    }
                }
            }
            class fe extends K {
                constructor(Me, he, De) {
                    let R;
                    if ((super(), (0, s.m)(Me))) R = Me;
                    else if (Me) {
                        let te;
                        ({ next: R, error: he, complete: De } = Me),
                            this && L.v.useDeprecatedNextContext
                                ? ((te = Object.create(Me)),
                                  (te.unsubscribe = () => this.unsubscribe()))
                                : (te = Me),
                            (R = null == R ? void 0 : R.bind(te)),
                            (he = null == he ? void 0 : he.bind(te)),
                            (De = null == De ? void 0 : De.bind(te));
                    }
                    this.destination = {
                        next: R ? _e(R) : T.Z,
                        error: _e(null != he ? he : Re),
                        complete: De ? _e(De) : T.Z,
                    };
                }
            }
            function _e(J, Me) {
                return (...he) => {
                    try {
                        J(...he);
                    } catch (De) {
                        L.v.useDeprecatedSynchronousErrorHandling
                            ? (0, F.O)(De)
                            : (0, k.h)(De);
                    }
                };
            }
            function Re(J) {
                throw J;
            }
            function Oe(J, Me) {
                const { onStoppedNotification: he } = L.v;
                he && w.z.setTimeout(() => he(J, Me));
            }
            const pe = { closed: !0, next: T.Z, error: Re, complete: T.Z };
        },
        727: (de, Y, f) => {
            f.d(Y, { Lc: () => S, w0: () => T, Nn: () => O });
            var s = f(576);
            const L = (0, f(3888).d)(
                (U) =>
                    function (F) {
                        U(this),
                            (this.message = F
                                ? `${
                                      F.length
                                  } errors occurred during unsubscription:\n${F.map(
                                      (K, fe) => `${fe + 1}) ${K.toString()}`
                                  ).join('\n  ')}`
                                : ''),
                            (this.name = 'UnsubscriptionError'),
                            (this.errors = F);
                    }
            );
            var k = f(8737);
            class T {
                constructor(w) {
                    (this.initialTeardown = w),
                        (this.closed = !1),
                        (this._parentage = null),
                        (this._teardowns = null);
                }
                unsubscribe() {
                    let w;
                    if (!this.closed) {
                        this.closed = !0;
                        const { _parentage: F } = this;
                        if (F)
                            if (((this._parentage = null), Array.isArray(F)))
                                for (const _e of F) _e.remove(this);
                            else F.remove(this);
                        const { initialTeardown: K } = this;
                        if ((0, s.m)(K))
                            try {
                                K();
                            } catch (_e) {
                                w = _e instanceof L ? _e.errors : [_e];
                            }
                        const { _teardowns: fe } = this;
                        if (fe) {
                            this._teardowns = null;
                            for (const _e of fe)
                                try {
                                    N(_e);
                                } catch (Re) {
                                    (w = null != w ? w : []),
                                        Re instanceof L
                                            ? (w = [...w, ...Re.errors])
                                            : w.push(Re);
                                }
                        }
                        if (w) throw new L(w);
                    }
                }
                add(w) {
                    var F;
                    if (w && w !== this)
                        if (this.closed) N(w);
                        else {
                            if (w instanceof T) {
                                if (w.closed || w._hasParent(this)) return;
                                w._addParent(this);
                            }
                            (this._teardowns =
                                null !== (F = this._teardowns) && void 0 !== F
                                    ? F
                                    : []).push(w);
                        }
                }
                _hasParent(w) {
                    const { _parentage: F } = this;
                    return F === w || (Array.isArray(F) && F.includes(w));
                }
                _addParent(w) {
                    const { _parentage: F } = this;
                    this._parentage = Array.isArray(F)
                        ? (F.push(w), F)
                        : F
                        ? [F, w]
                        : w;
                }
                _removeParent(w) {
                    const { _parentage: F } = this;
                    F === w
                        ? (this._parentage = null)
                        : Array.isArray(F) && (0, k.P)(F, w);
                }
                remove(w) {
                    const { _teardowns: F } = this;
                    F && (0, k.P)(F, w),
                        w instanceof T && w._removeParent(this);
                }
            }
            T.EMPTY = (() => {
                const U = new T();
                return (U.closed = !0), U;
            })();
            const S = T.EMPTY;
            function O(U) {
                return (
                    U instanceof T ||
                    (U &&
                        'closed' in U &&
                        (0, s.m)(U.remove) &&
                        (0, s.m)(U.add) &&
                        (0, s.m)(U.unsubscribe))
                );
            }
            function N(U) {
                (0, s.m)(U) ? U() : U.unsubscribe();
            }
        },
        2416: (de, Y, f) => {
            f.d(Y, { v: () => s });
            const s = {
                onUnhandledError: null,
                onStoppedNotification: null,
                Promise: void 0,
                useDeprecatedSynchronousErrorHandling: !1,
                useDeprecatedNextContext: !1,
            };
        },
        7272: (de, Y, f) => {
            f.d(Y, { z: () => T });
            var s = f(8189),
                L = f(3269),
                k = f(8996);
            function T(...S) {
                return (function m() {
                    return (0, s.J)(1);
                })()((0, k.D)(S, (0, L.yG)(S)));
            }
        },
        515: (de, Y, f) => {
            f.d(Y, { E: () => m });
            const m = new (f(8306).y)((T) => T.complete());
        },
        4128: (de, Y, f) => {
            f.d(Y, { D: () => N });
            var s = f(8306),
                m = f(4742),
                L = f(8421),
                k = f(3269),
                T = f(5403),
                S = f(3268),
                O = f(1810);
            function N(...U) {
                const w = (0, k.jO)(U),
                    { args: F, keys: K } = (0, m.D)(U),
                    fe = new s.y((_e) => {
                        const { length: Re } = F;
                        if (!Re) return void _e.complete();
                        const Oe = new Array(Re);
                        let pe = Re,
                            J = Re;
                        for (let Me = 0; Me < Re; Me++) {
                            let he = !1;
                            (0, L.Xf)(F[Me]).subscribe(
                                new T.Q(
                                    _e,
                                    (De) => {
                                        he || ((he = !0), J--), (Oe[Me] = De);
                                    },
                                    () => pe--,
                                    void 0,
                                    () => {
                                        (!pe || !he) &&
                                            (J ||
                                                _e.next(
                                                    K ? (0, O.n)(K, Oe) : Oe
                                                ),
                                            _e.complete());
                                    }
                                )
                            );
                        }
                    });
                return w ? fe.pipe((0, S.Z)(w)) : fe;
            }
        },
        8996: (de, Y, f) => {
            f.d(Y, { D: () => R });
            var s = f(8421),
                m = f(5363),
                L = f(9468),
                S = f(8306),
                N = f(2202),
                U = f(576),
                w = f(9672);
            function K(te, G) {
                if (!te) throw new Error('Iterable cannot be null');
                return new S.y((oe) => {
                    (0, w.f)(oe, G, () => {
                        const re = te[Symbol.asyncIterator]();
                        (0, w.f)(
                            oe,
                            G,
                            () => {
                                re.next().then((ne) => {
                                    ne.done ? oe.complete() : oe.next(ne.value);
                                });
                            },
                            0,
                            !0
                        );
                    });
                });
            }
            var fe = f(3670),
                _e = f(8239),
                Re = f(1144),
                Oe = f(6495),
                pe = f(2206),
                J = f(4532),
                Me = f(3260);
            function R(te, G) {
                return G
                    ? (function De(te, G) {
                          if (null != te) {
                              if ((0, fe.c)(te))
                                  return (function k(te, G) {
                                      return (0, s.Xf)(te).pipe(
                                          (0, L.R)(G),
                                          (0, m.Q)(G)
                                      );
                                  })(te, G);
                              if ((0, Re.z)(te))
                                  return (function O(te, G) {
                                      return new S.y((oe) => {
                                          let re = 0;
                                          return G.schedule(function () {
                                              re === te.length
                                                  ? oe.complete()
                                                  : (oe.next(te[re++]),
                                                    oe.closed ||
                                                        this.schedule());
                                          });
                                      });
                                  })(te, G);
                              if ((0, _e.t)(te))
                                  return (function T(te, G) {
                                      return (0, s.Xf)(te).pipe(
                                          (0, L.R)(G),
                                          (0, m.Q)(G)
                                      );
                                  })(te, G);
                              if ((0, pe.D)(te)) return K(te, G);
                              if ((0, Oe.T)(te))
                                  return (function F(te, G) {
                                      return new S.y((oe) => {
                                          let re;
                                          return (
                                              (0, w.f)(oe, G, () => {
                                                  (re = te[N.h]()),
                                                      (0, w.f)(
                                                          oe,
                                                          G,
                                                          () => {
                                                              let ne, we;
                                                              try {
                                                                  ({
                                                                      value: ne,
                                                                      done: we,
                                                                  } =
                                                                      re.next());
                                                              } catch (Fe) {
                                                                  return void oe.error(
                                                                      Fe
                                                                  );
                                                              }
                                                              we
                                                                  ? oe.complete()
                                                                  : oe.next(ne);
                                                          },
                                                          0,
                                                          !0
                                                      );
                                              }),
                                              () =>
                                                  (0, U.m)(
                                                      null == re
                                                          ? void 0
                                                          : re.return
                                                  ) && re.return()
                                          );
                                      });
                                  })(te, G);
                              if ((0, Me.L)(te))
                                  return (function he(te, G) {
                                      return K((0, Me.Q)(te), G);
                                  })(te, G);
                          }
                          throw (0, J.z)(te);
                      })(te, G)
                    : (0, s.Xf)(te);
            }
        },
        8421: (de, Y, f) => {
            f.d(Y, { Xf: () => fe });
            var s = f(5987),
                m = f(1144),
                L = f(8239),
                k = f(8306),
                T = f(3670),
                S = f(2206),
                O = f(4532),
                N = f(6495),
                U = f(3260),
                w = f(576),
                F = f(7849),
                K = f(8822);
            function fe(De) {
                if (De instanceof k.y) return De;
                if (null != De) {
                    if ((0, T.c)(De))
                        return (function _e(De) {
                            return new k.y((R) => {
                                const te = De[K.L]();
                                if ((0, w.m)(te.subscribe))
                                    return te.subscribe(R);
                                throw new TypeError(
                                    'Provided object does not correctly implement Symbol.observable'
                                );
                            });
                        })(De);
                    if ((0, m.z)(De))
                        return (function Re(De) {
                            return new k.y((R) => {
                                for (
                                    let te = 0;
                                    te < De.length && !R.closed;
                                    te++
                                )
                                    R.next(De[te]);
                                R.complete();
                            });
                        })(De);
                    if ((0, L.t)(De))
                        return (function Oe(De) {
                            return new k.y((R) => {
                                De.then(
                                    (te) => {
                                        R.closed || (R.next(te), R.complete());
                                    },
                                    (te) => R.error(te)
                                ).then(null, F.h);
                            });
                        })(De);
                    if ((0, S.D)(De)) return J(De);
                    if ((0, N.T)(De))
                        return (function pe(De) {
                            return new k.y((R) => {
                                for (const te of De)
                                    if ((R.next(te), R.closed)) return;
                                R.complete();
                            });
                        })(De);
                    if ((0, U.L)(De))
                        return (function Me(De) {
                            return J((0, U.Q)(De));
                        })(De);
                }
                throw (0, O.z)(De);
            }
            function J(De) {
                return new k.y((R) => {
                    (function he(De, R) {
                        var te, G, oe, re;
                        return (0, s.mG)(this, void 0, void 0, function* () {
                            try {
                                for (
                                    te = (0, s.KL)(De);
                                    !(G = yield te.next()).done;

                                )
                                    if ((R.next(G.value), R.closed)) return;
                            } catch (ne) {
                                oe = { error: ne };
                            } finally {
                                try {
                                    G &&
                                        !G.done &&
                                        (re = te.return) &&
                                        (yield re.call(te));
                                } finally {
                                    if (oe) throw oe.error;
                                }
                            }
                            R.complete();
                        });
                    })(De, R).catch((te) => R.error(te));
                });
            }
        },
        6451: (de, Y, f) => {
            f.d(Y, { T: () => S });
            var s = f(8189),
                m = f(8421),
                L = f(515),
                k = f(3269),
                T = f(8996);
            function S(...O) {
                const N = (0, k.yG)(O),
                    U = (0, k._6)(O, 1 / 0),
                    w = O;
                return w.length
                    ? 1 === w.length
                        ? (0, m.Xf)(w[0])
                        : (0, s.J)(U)((0, T.D)(w, N))
                    : L.E;
            }
        },
        9646: (de, Y, f) => {
            f.d(Y, { of: () => L });
            var s = f(3269),
                m = f(8996);
            function L(...k) {
                const T = (0, s.yG)(k);
                return (0, m.D)(k, T);
            }
        },
        2843: (de, Y, f) => {
            f.d(Y, { _: () => L });
            var s = f(8306),
                m = f(576);
            function L(k, T) {
                const S = (0, m.m)(k) ? k : () => k,
                    O = (N) => N.error(S());
                return new s.y(T ? (N) => T.schedule(O, 0, N) : O);
            }
        },
        5403: (de, Y, f) => {
            f.d(Y, { Q: () => m });
            var s = f(930);
            class m extends s.Lv {
                constructor(k, T, S, O, N) {
                    super(k),
                        (this.onFinalize = N),
                        (this._next = T
                            ? function (U) {
                                  try {
                                      T(U);
                                  } catch (w) {
                                      k.error(w);
                                  }
                              }
                            : super._next),
                        (this._error = O
                            ? function (U) {
                                  try {
                                      O(U);
                                  } catch (w) {
                                      k.error(w);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._error),
                        (this._complete = S
                            ? function () {
                                  try {
                                      S();
                                  } catch (U) {
                                      k.error(U);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._complete);
                }
                unsubscribe() {
                    var k;
                    const { closed: T } = this;
                    super.unsubscribe(),
                        !T &&
                            (null === (k = this.onFinalize) ||
                                void 0 === k ||
                                k.call(this));
                }
            }
        },
        262: (de, Y, f) => {
            f.d(Y, { K: () => k });
            var s = f(8421),
                m = f(5403),
                L = f(4482);
            function k(T) {
                return (0, L.e)((S, O) => {
                    let w,
                        N = null,
                        U = !1;
                    (N = S.subscribe(
                        new m.Q(O, void 0, void 0, (F) => {
                            (w = (0, s.Xf)(T(F, k(T)(S)))),
                                N
                                    ? (N.unsubscribe(),
                                      (N = null),
                                      w.subscribe(O))
                                    : (U = !0);
                        })
                    )),
                        U && (N.unsubscribe(), (N = null), w.subscribe(O));
                });
            }
        },
        4351: (de, Y, f) => {
            f.d(Y, { b: () => L });
            var s = f(5577),
                m = f(576);
            function L(k, T) {
                return (0, m.m)(T) ? (0, s.z)(k, T, 1) : (0, s.z)(k, 1);
            }
        },
        8372: (de, Y, f) => {
            f.d(Y, { b: () => k });
            var s = f(4986),
                m = f(4482),
                L = f(5403);
            function k(T, S = s.z) {
                return (0, m.e)((O, N) => {
                    let U = null,
                        w = null,
                        F = null;
                    const K = () => {
                        if (U) {
                            U.unsubscribe(), (U = null);
                            const _e = w;
                            (w = null), N.next(_e);
                        }
                    };
                    function fe() {
                        const _e = F + T,
                            Re = S.now();
                        if (Re < _e)
                            return (
                                (U = this.schedule(void 0, _e - Re)),
                                void N.add(U)
                            );
                        K();
                    }
                    O.subscribe(
                        new L.Q(
                            N,
                            (_e) => {
                                (w = _e),
                                    (F = S.now()),
                                    U || ((U = S.schedule(fe, T)), N.add(U));
                            },
                            () => {
                                K(), N.complete();
                            },
                            void 0,
                            () => {
                                w = U = null;
                            }
                        )
                    );
                });
            }
        },
        6590: (de, Y, f) => {
            f.d(Y, { d: () => L });
            var s = f(4482),
                m = f(5403);
            function L(k) {
                return (0, s.e)((T, S) => {
                    let O = !1;
                    T.subscribe(
                        new m.Q(
                            S,
                            (N) => {
                                (O = !0), S.next(N);
                            },
                            () => {
                                O || S.next(k), S.complete();
                            }
                        )
                    );
                });
            }
        },
        1884: (de, Y, f) => {
            f.d(Y, { x: () => k });
            var s = f(4671),
                m = f(4482),
                L = f(5403);
            function k(S, O = s.y) {
                return (
                    (S = null != S ? S : T),
                    (0, m.e)((N, U) => {
                        let w,
                            F = !0;
                        N.subscribe(
                            new L.Q(U, (K) => {
                                const fe = O(K);
                                (F || !S(w, fe)) &&
                                    ((F = !1), (w = fe), U.next(K));
                            })
                        );
                    })
                );
            }
            function T(S, O) {
                return S === O;
            }
        },
        9300: (de, Y, f) => {
            f.d(Y, { h: () => L });
            var s = f(4482),
                m = f(5403);
            function L(k, T) {
                return (0, s.e)((S, O) => {
                    let N = 0;
                    S.subscribe(
                        new m.Q(O, (U) => k.call(T, U, N++) && O.next(U))
                    );
                });
            }
        },
        590: (de, Y, f) => {
            f.d(Y, { P: () => O });
            var s = f(6805),
                m = f(9300),
                L = f(5698),
                k = f(6590),
                T = f(8068),
                S = f(4671);
            function O(N, U) {
                const w = arguments.length >= 2;
                return (F) =>
                    F.pipe(
                        N ? (0, m.h)((K, fe) => N(K, fe, F)) : S.y,
                        (0, L.q)(1),
                        w ? (0, k.d)(U) : (0, T.T)(() => new s.K())
                    );
            }
        },
        8502: (de, Y, f) => {
            f.d(Y, { l: () => k });
            var s = f(4482),
                m = f(5403),
                L = f(5032);
            function k() {
                return (0, s.e)((T, S) => {
                    T.subscribe(new m.Q(S, L.Z));
                });
            }
        },
        4004: (de, Y, f) => {
            f.d(Y, { U: () => L });
            var s = f(4482),
                m = f(5403);
            function L(k, T) {
                return (0, s.e)((S, O) => {
                    let N = 0;
                    S.subscribe(
                        new m.Q(O, (U) => {
                            O.next(k.call(T, U, N++));
                        })
                    );
                });
            }
        },
        8189: (de, Y, f) => {
            f.d(Y, { J: () => L });
            var s = f(5577),
                m = f(4671);
            function L(k = 1 / 0) {
                return (0, s.z)(m.y, k);
            }
        },
        5577: (de, Y, f) => {
            f.d(Y, { z: () => N });
            var s = f(4004),
                m = f(8421),
                L = f(4482),
                k = f(9672),
                T = f(5403),
                O = f(576);
            function N(U, w, F = 1 / 0) {
                return (0, O.m)(w)
                    ? N(
                          (K, fe) =>
                              (0, s.U)((_e, Re) => w(K, _e, fe, Re))(
                                  (0, m.Xf)(U(K, fe))
                              ),
                          F
                      )
                    : ('number' == typeof w && (F = w),
                      (0, L.e)((K, fe) =>
                          (function S(U, w, F, K, fe, _e, Re, Oe) {
                              const pe = [];
                              let J = 0,
                                  Me = 0,
                                  he = !1;
                              const De = () => {
                                      he && !pe.length && !J && w.complete();
                                  },
                                  R = (G) => (J < K ? te(G) : pe.push(G)),
                                  te = (G) => {
                                      _e && w.next(G), J++;
                                      let oe = !1;
                                      (0, m.Xf)(F(G, Me++)).subscribe(
                                          new T.Q(
                                              w,
                                              (re) => {
                                                  null == fe || fe(re),
                                                      _e ? R(re) : w.next(re);
                                              },
                                              () => {
                                                  oe = !0;
                                              },
                                              void 0,
                                              () => {
                                                  if (oe)
                                                      try {
                                                          for (
                                                              J--;
                                                              pe.length &&
                                                              J < K;

                                                          ) {
                                                              const re =
                                                                  pe.shift();
                                                              Re
                                                                  ? (0, k.f)(
                                                                        w,
                                                                        Re,
                                                                        () =>
                                                                            te(
                                                                                re
                                                                            )
                                                                    )
                                                                  : te(re);
                                                          }
                                                          De();
                                                      } catch (re) {
                                                          w.error(re);
                                                      }
                                              }
                                          )
                                      );
                                  };
                              return (
                                  U.subscribe(
                                      new T.Q(w, R, () => {
                                          (he = !0), De();
                                      })
                                  ),
                                  () => {
                                      null == Oe || Oe();
                                  }
                              );
                          })(K, fe, U, F)
                      ));
            }
        },
        5363: (de, Y, f) => {
            f.d(Y, { Q: () => k });
            var s = f(9672),
                m = f(4482),
                L = f(5403);
            function k(T, S = 0) {
                return (0, m.e)((O, N) => {
                    O.subscribe(
                        new L.Q(
                            N,
                            (U) => (0, s.f)(N, T, () => N.next(U), S),
                            () => (0, s.f)(N, T, () => N.complete(), S),
                            (U) => (0, s.f)(N, T, () => N.error(U), S)
                        )
                    );
                });
            }
        },
        5026: (de, Y, f) => {
            f.d(Y, { R: () => k });
            var s = f(4482),
                m = f(5403);
            function L(T, S, O, N, U) {
                return (w, F) => {
                    let K = O,
                        fe = S,
                        _e = 0;
                    w.subscribe(
                        new m.Q(
                            F,
                            (Re) => {
                                const Oe = _e++;
                                (fe = K ? T(fe, Re, Oe) : ((K = !0), Re)),
                                    N && F.next(fe);
                            },
                            U &&
                                (() => {
                                    K && F.next(fe), F.complete();
                                })
                        )
                    );
                };
            }
            function k(T, S) {
                return (0, s.e)(L(T, S, arguments.length >= 2, !0));
            }
        },
        3099: (de, Y, f) => {
            f.d(Y, { B: () => S });
            var s = f(8996),
                m = f(5698),
                L = f(7579),
                k = f(930),
                T = f(4482);
            function S(N = {}) {
                const {
                    connector: U = () => new L.x(),
                    resetOnError: w = !0,
                    resetOnComplete: F = !0,
                    resetOnRefCountZero: K = !0,
                } = N;
                return (fe) => {
                    let _e = null,
                        Re = null,
                        Oe = null,
                        pe = 0,
                        J = !1,
                        Me = !1;
                    const he = () => {
                            null == Re || Re.unsubscribe(), (Re = null);
                        },
                        De = () => {
                            he(), (_e = Oe = null), (J = Me = !1);
                        },
                        R = () => {
                            const te = _e;
                            De(), null == te || te.unsubscribe();
                        };
                    return (0, T.e)((te, G) => {
                        pe++, !Me && !J && he();
                        const oe = (Oe = null != Oe ? Oe : U());
                        G.add(() => {
                            pe--, 0 === pe && !Me && !J && (Re = O(R, K));
                        }),
                            oe.subscribe(G),
                            _e ||
                                ((_e = new k.Hp({
                                    next: (re) => oe.next(re),
                                    error: (re) => {
                                        (Me = !0),
                                            he(),
                                            (Re = O(De, w, re)),
                                            oe.error(re);
                                    },
                                    complete: () => {
                                        (J = !0),
                                            he(),
                                            (Re = O(De, F)),
                                            oe.complete();
                                    },
                                })),
                                (0, s.D)(te).subscribe(_e));
                    })(fe);
                };
            }
            function O(N, U, ...w) {
                return !0 === U
                    ? (N(), null)
                    : !1 === U
                    ? null
                    : U(...w)
                          .pipe((0, m.q)(1))
                          .subscribe(() => N());
            }
        },
        4782: (de, Y, f) => {
            f.d(Y, { d: () => L });
            var s = f(4707),
                m = f(3099);
            function L(k, T, S) {
                var O, N;
                let U,
                    w = !1;
                return (
                    k && 'object' == typeof k
                        ? ((U =
                              null !== (O = k.bufferSize) && void 0 !== O
                                  ? O
                                  : 1 / 0),
                          (T =
                              null !== (N = k.windowTime) && void 0 !== N
                                  ? N
                                  : 1 / 0),
                          (w = !!k.refCount),
                          (S = k.scheduler))
                        : (U = null != k ? k : 1 / 0),
                    (0, m.B)({
                        connector: () => new s.t(U, T, S),
                        resetOnError: !0,
                        resetOnComplete: !1,
                        resetOnRefCountZero: w,
                    })
                );
            }
        },
        5684: (de, Y, f) => {
            f.d(Y, { T: () => m });
            var s = f(9300);
            function m(L) {
                return (0, s.h)((k, T) => L <= T);
            }
        },
        8675: (de, Y, f) => {
            f.d(Y, { O: () => k });
            var s = f(7272),
                m = f(3269),
                L = f(4482);
            function k(...T) {
                const S = (0, m.yG)(T);
                return (0, L.e)((O, N) => {
                    (S ? (0, s.z)(T, O, S) : (0, s.z)(T, O)).subscribe(N);
                });
            }
        },
        9468: (de, Y, f) => {
            f.d(Y, { R: () => m });
            var s = f(4482);
            function m(L, k = 0) {
                return (0, s.e)((T, S) => {
                    S.add(L.schedule(() => T.subscribe(S), k));
                });
            }
        },
        3900: (de, Y, f) => {
            f.d(Y, { w: () => k });
            var s = f(8421),
                m = f(4482),
                L = f(5403);
            function k(T, S) {
                return (0, m.e)((O, N) => {
                    let U = null,
                        w = 0,
                        F = !1;
                    const K = () => F && !U && N.complete();
                    O.subscribe(
                        new L.Q(
                            N,
                            (fe) => {
                                null == U || U.unsubscribe();
                                let _e = 0;
                                const Re = w++;
                                (0, s.Xf)(T(fe, Re)).subscribe(
                                    (U = new L.Q(
                                        N,
                                        (Oe) =>
                                            N.next(
                                                S ? S(fe, Oe, Re, _e++) : Oe
                                            ),
                                        () => {
                                            (U = null), K();
                                        }
                                    ))
                                );
                            },
                            () => {
                                (F = !0), K();
                            }
                        )
                    );
                });
            }
        },
        5698: (de, Y, f) => {
            f.d(Y, { q: () => k });
            var s = f(515),
                m = f(4482),
                L = f(5403);
            function k(T) {
                return T <= 0
                    ? () => s.E
                    : (0, m.e)((S, O) => {
                          let N = 0;
                          S.subscribe(
                              new L.Q(O, (U) => {
                                  ++N <= T &&
                                      (O.next(U), T <= N && O.complete());
                              })
                          );
                      });
            }
        },
        2722: (de, Y, f) => {
            f.d(Y, { R: () => T });
            var s = f(4482),
                m = f(5403),
                L = f(8421),
                k = f(5032);
            function T(S) {
                return (0, s.e)((O, N) => {
                    (0, L.Xf)(S).subscribe(new m.Q(N, () => N.complete(), k.Z)),
                        !N.closed && O.subscribe(N);
                });
            }
        },
        8505: (de, Y, f) => {
            f.d(Y, { b: () => T });
            var s = f(576),
                m = f(4482),
                L = f(5403),
                k = f(4671);
            function T(S, O, N) {
                const U =
                    (0, s.m)(S) || O || N
                        ? { next: S, error: O, complete: N }
                        : S;
                return U
                    ? (0, m.e)((w, F) => {
                          var K;
                          null === (K = U.subscribe) ||
                              void 0 === K ||
                              K.call(U);
                          let fe = !0;
                          w.subscribe(
                              new L.Q(
                                  F,
                                  (_e) => {
                                      var Re;
                                      null === (Re = U.next) ||
                                          void 0 === Re ||
                                          Re.call(U, _e),
                                          F.next(_e);
                                  },
                                  () => {
                                      var _e;
                                      (fe = !1),
                                          null === (_e = U.complete) ||
                                              void 0 === _e ||
                                              _e.call(U),
                                          F.complete();
                                  },
                                  (_e) => {
                                      var Re;
                                      (fe = !1),
                                          null === (Re = U.error) ||
                                              void 0 === Re ||
                                              Re.call(U, _e),
                                          F.error(_e);
                                  },
                                  () => {
                                      var _e, Re;
                                      fe &&
                                          (null === (_e = U.unsubscribe) ||
                                              void 0 === _e ||
                                              _e.call(U)),
                                          null === (Re = U.finalize) ||
                                              void 0 === Re ||
                                              Re.call(U);
                                  }
                              )
                          );
                      })
                    : k.y;
            }
        },
        8068: (de, Y, f) => {
            f.d(Y, { T: () => k });
            var s = f(6805),
                m = f(4482),
                L = f(5403);
            function k(S = T) {
                return (0, m.e)((O, N) => {
                    let U = !1;
                    O.subscribe(
                        new L.Q(
                            N,
                            (w) => {
                                (U = !0), N.next(w);
                            },
                            () => (U ? N.complete() : N.error(S()))
                        )
                    );
                });
            }
            function T() {
                return new s.K();
            }
        },
        7414: (de, Y, f) => {
            f.d(Y, { V: () => U });
            var s = f(4986),
                m = f(1165),
                L = f(4482),
                k = f(8421),
                T = f(3888),
                S = f(5403),
                O = f(9672);
            const N = (0, T.d)(
                (F) =>
                    function (fe = null) {
                        F(this),
                            (this.message = 'Timeout has occurred'),
                            (this.name = 'TimeoutError'),
                            (this.info = fe);
                    }
            );
            function U(F, K) {
                const {
                    first: fe,
                    each: _e,
                    with: Re = w,
                    scheduler: Oe = null != K ? K : s.z,
                    meta: pe = null,
                } = (0, m.q)(F)
                    ? { first: F }
                    : 'number' == typeof F
                    ? { each: F }
                    : F;
                if (null == fe && null == _e)
                    throw new TypeError('No timeout provided.');
                return (0, L.e)((J, Me) => {
                    let he,
                        De,
                        R = null,
                        te = 0;
                    const G = (oe) => {
                        De = (0, O.f)(
                            Me,
                            Oe,
                            () => {
                                try {
                                    he.unsubscribe(),
                                        (0, k.Xf)(
                                            Re({
                                                meta: pe,
                                                lastValue: R,
                                                seen: te,
                                            })
                                        ).subscribe(Me);
                                } catch (re) {
                                    Me.error(re);
                                }
                            },
                            oe
                        );
                    };
                    (he = J.subscribe(
                        new S.Q(
                            Me,
                            (oe) => {
                                null == De || De.unsubscribe(),
                                    te++,
                                    Me.next((R = oe)),
                                    _e > 0 && G(_e);
                            },
                            void 0,
                            void 0,
                            () => {
                                (null == De ? void 0 : De.closed) ||
                                    null == De ||
                                    De.unsubscribe(),
                                    (R = null);
                            }
                        )
                    )),
                        G(
                            null != fe
                                ? 'number' == typeof fe
                                    ? fe
                                    : +fe - Oe.now()
                                : _e
                        );
                });
            }
            function w(F) {
                throw new N(F);
            }
        },
        1365: (de, Y, f) => {
            f.d(Y, { M: () => O });
            var s = f(4482),
                m = f(5403),
                L = f(8421),
                k = f(4671),
                T = f(5032),
                S = f(3269);
            function O(...N) {
                const U = (0, S.jO)(N);
                return (0, s.e)((w, F) => {
                    const K = N.length,
                        fe = new Array(K);
                    let _e = N.map(() => !1),
                        Re = !1;
                    for (let Oe = 0; Oe < K; Oe++)
                        (0, L.Xf)(N[Oe]).subscribe(
                            new m.Q(
                                F,
                                (pe) => {
                                    (fe[Oe] = pe),
                                        !Re &&
                                            !_e[Oe] &&
                                            ((_e[Oe] = !0),
                                            (Re = _e.every(k.y)) &&
                                                (_e = null));
                                },
                                T.Z
                            )
                        );
                    w.subscribe(
                        new m.Q(F, (Oe) => {
                            if (Re) {
                                const pe = [Oe, ...fe];
                                F.next(U ? U(...pe) : pe);
                            }
                        })
                    );
                });
            }
        },
        4408: (de, Y, f) => {
            f.d(Y, { o: () => T });
            var s = f(727);
            class m extends s.w0 {
                constructor(O, N) {
                    super();
                }
                schedule(O, N = 0) {
                    return this;
                }
            }
            const L = {
                setInterval(...S) {
                    const { delegate: O } = L;
                    return (
                        (null == O ? void 0 : O.setInterval) || setInterval
                    )(...S);
                },
                clearInterval(S) {
                    const { delegate: O } = L;
                    return (
                        (null == O ? void 0 : O.clearInterval) || clearInterval
                    )(S);
                },
                delegate: void 0,
            };
            var k = f(8737);
            class T extends m {
                constructor(O, N) {
                    super(O, N),
                        (this.scheduler = O),
                        (this.work = N),
                        (this.pending = !1);
                }
                schedule(O, N = 0) {
                    if (this.closed) return this;
                    this.state = O;
                    const U = this.id,
                        w = this.scheduler;
                    return (
                        null != U && (this.id = this.recycleAsyncId(w, U, N)),
                        (this.pending = !0),
                        (this.delay = N),
                        (this.id =
                            this.id || this.requestAsyncId(w, this.id, N)),
                        this
                    );
                }
                requestAsyncId(O, N, U = 0) {
                    return L.setInterval(O.flush.bind(O, this), U);
                }
                recycleAsyncId(O, N, U = 0) {
                    if (null != U && this.delay === U && !1 === this.pending)
                        return N;
                    L.clearInterval(N);
                }
                execute(O, N) {
                    if (this.closed)
                        return new Error('executing a cancelled action');
                    this.pending = !1;
                    const U = this._execute(O, N);
                    if (U) return U;
                    !1 === this.pending &&
                        null != this.id &&
                        (this.id = this.recycleAsyncId(
                            this.scheduler,
                            this.id,
                            null
                        ));
                }
                _execute(O, N) {
                    let w,
                        U = !1;
                    try {
                        this.work(O);
                    } catch (F) {
                        (U = !0),
                            (w =
                                F ||
                                new Error(
                                    'Scheduled action threw falsy error'
                                ));
                    }
                    if (U) return this.unsubscribe(), w;
                }
                unsubscribe() {
                    if (!this.closed) {
                        const { id: O, scheduler: N } = this,
                            { actions: U } = N;
                        (this.work = this.state = this.scheduler = null),
                            (this.pending = !1),
                            (0, k.P)(U, this),
                            null != O &&
                                (this.id = this.recycleAsyncId(N, O, null)),
                            (this.delay = null),
                            super.unsubscribe();
                    }
                }
            }
        },
        7565: (de, Y, f) => {
            f.d(Y, { v: () => L });
            var s = f(6063);
            class m {
                constructor(T, S = m.now) {
                    (this.schedulerActionCtor = T), (this.now = S);
                }
                schedule(T, S = 0, O) {
                    return new this.schedulerActionCtor(this, T).schedule(O, S);
                }
            }
            m.now = s.l.now;
            class L extends m {
                constructor(T, S = m.now) {
                    super(T, S),
                        (this.actions = []),
                        (this._active = !1),
                        (this._scheduled = void 0);
                }
                flush(T) {
                    const { actions: S } = this;
                    if (this._active) return void S.push(T);
                    let O;
                    this._active = !0;
                    do {
                        if ((O = T.execute(T.state, T.delay))) break;
                    } while ((T = S.shift()));
                    if (((this._active = !1), O)) {
                        for (; (T = S.shift()); ) T.unsubscribe();
                        throw O;
                    }
                }
            }
        },
        4986: (de, Y, f) => {
            f.d(Y, { P: () => k, z: () => L });
            var s = f(4408);
            const L = new (f(7565).v)(s.o),
                k = L;
        },
        6063: (de, Y, f) => {
            f.d(Y, { l: () => s });
            const s = {
                now: () => (s.delegate || Date).now(),
                delegate: void 0,
            };
        },
        233: (de, Y, f) => {
            f.d(Y, { N: () => T });
            var s = f(4408),
                L = f(7565);
            const T = new (class k extends L.v {})(
                class m extends s.o {
                    constructor(N, U) {
                        super(N, U), (this.scheduler = N), (this.work = U);
                    }
                    schedule(N, U = 0) {
                        return U > 0
                            ? super.schedule(N, U)
                            : ((this.delay = U),
                              (this.state = N),
                              this.scheduler.flush(this),
                              this);
                    }
                    execute(N, U) {
                        return U > 0 || this.closed
                            ? super.execute(N, U)
                            : this._execute(N, U);
                    }
                    requestAsyncId(N, U, w = 0) {
                        return (null != w && w > 0) ||
                            (null == w && this.delay > 0)
                            ? super.requestAsyncId(N, U, w)
                            : N.flush(this);
                    }
                }
            );
        },
        3410: (de, Y, f) => {
            f.d(Y, { z: () => s });
            const s = {
                setTimeout(...m) {
                    const { delegate: L } = s;
                    return ((null == L ? void 0 : L.setTimeout) || setTimeout)(
                        ...m
                    );
                },
                clearTimeout(m) {
                    const { delegate: L } = s;
                    return (
                        (null == L ? void 0 : L.clearTimeout) || clearTimeout
                    )(m);
                },
                delegate: void 0,
            };
        },
        2202: (de, Y, f) => {
            f.d(Y, { h: () => m });
            const m = (function s() {
                return 'function' == typeof Symbol && Symbol.iterator
                    ? Symbol.iterator
                    : '@@iterator';
            })();
        },
        8822: (de, Y, f) => {
            f.d(Y, { L: () => s });
            const s =
                ('function' == typeof Symbol && Symbol.observable) ||
                '@@observable';
        },
        6805: (de, Y, f) => {
            f.d(Y, { K: () => m });
            const m = (0, f(3888).d)(
                (L) =>
                    function () {
                        L(this),
                            (this.name = 'EmptyError'),
                            (this.message = 'no elements in sequence');
                    }
            );
        },
        3269: (de, Y, f) => {
            f.d(Y, { _6: () => S, jO: () => k, yG: () => T });
            var s = f(576),
                m = f(3532);
            function L(O) {
                return O[O.length - 1];
            }
            function k(O) {
                return (0, s.m)(L(O)) ? O.pop() : void 0;
            }
            function T(O) {
                return (0, m.K)(L(O)) ? O.pop() : void 0;
            }
            function S(O, N) {
                return 'number' == typeof L(O) ? O.pop() : N;
            }
        },
        4742: (de, Y, f) => {
            f.d(Y, { D: () => T });
            const { isArray: s } = Array,
                { getPrototypeOf: m, prototype: L, keys: k } = Object;
            function T(O) {
                if (1 === O.length) {
                    const N = O[0];
                    if (s(N)) return { args: N, keys: null };
                    if (
                        (function S(O) {
                            return O && 'object' == typeof O && m(O) === L;
                        })(N)
                    ) {
                        const U = k(N);
                        return { args: U.map((w) => N[w]), keys: U };
                    }
                }
                return { args: O, keys: null };
            }
        },
        8737: (de, Y, f) => {
            function s(m, L) {
                if (m) {
                    const k = m.indexOf(L);
                    0 <= k && m.splice(k, 1);
                }
            }
            f.d(Y, { P: () => s });
        },
        3888: (de, Y, f) => {
            function s(m) {
                const k = m((T) => {
                    Error.call(T), (T.stack = new Error().stack);
                });
                return (
                    (k.prototype = Object.create(Error.prototype)),
                    (k.prototype.constructor = k),
                    k
                );
            }
            f.d(Y, { d: () => s });
        },
        1810: (de, Y, f) => {
            function s(m, L) {
                return m.reduce((k, T, S) => ((k[T] = L[S]), k), {});
            }
            f.d(Y, { n: () => s });
        },
        2806: (de, Y, f) => {
            f.d(Y, { O: () => k, x: () => L });
            var s = f(2416);
            let m = null;
            function L(T) {
                if (s.v.useDeprecatedSynchronousErrorHandling) {
                    const S = !m;
                    if ((S && (m = { errorThrown: !1, error: null }), T(), S)) {
                        const { errorThrown: O, error: N } = m;
                        if (((m = null), O)) throw N;
                    }
                } else T();
            }
            function k(T) {
                s.v.useDeprecatedSynchronousErrorHandling &&
                    m &&
                    ((m.errorThrown = !0), (m.error = T));
            }
        },
        9672: (de, Y, f) => {
            function s(m, L, k, T = 0, S = !1) {
                const O = L.schedule(function () {
                    k(), S ? m.add(this.schedule(null, T)) : this.unsubscribe();
                }, T);
                if ((m.add(O), !S)) return O;
            }
            f.d(Y, { f: () => s });
        },
        4671: (de, Y, f) => {
            function s(m) {
                return m;
            }
            f.d(Y, { y: () => s });
        },
        1144: (de, Y, f) => {
            f.d(Y, { z: () => s });
            const s = (m) =>
                m && 'number' == typeof m.length && 'function' != typeof m;
        },
        2206: (de, Y, f) => {
            f.d(Y, { D: () => m });
            var s = f(576);
            function m(L) {
                return (
                    Symbol.asyncIterator &&
                    (0, s.m)(null == L ? void 0 : L[Symbol.asyncIterator])
                );
            }
        },
        1165: (de, Y, f) => {
            function s(m) {
                return m instanceof Date && !isNaN(m);
            }
            f.d(Y, { q: () => s });
        },
        576: (de, Y, f) => {
            function s(m) {
                return 'function' == typeof m;
            }
            f.d(Y, { m: () => s });
        },
        3670: (de, Y, f) => {
            f.d(Y, { c: () => L });
            var s = f(8822),
                m = f(576);
            function L(k) {
                return (0, m.m)(k[s.L]);
            }
        },
        6495: (de, Y, f) => {
            f.d(Y, { T: () => L });
            var s = f(2202),
                m = f(576);
            function L(k) {
                return (0, m.m)(null == k ? void 0 : k[s.h]);
            }
        },
        8239: (de, Y, f) => {
            f.d(Y, { t: () => m });
            var s = f(576);
            function m(L) {
                return (0, s.m)(null == L ? void 0 : L.then);
            }
        },
        3260: (de, Y, f) => {
            f.d(Y, { L: () => k, Q: () => L });
            var s = f(5987),
                m = f(576);
            function L(T) {
                return (0, s.FC)(this, arguments, function* () {
                    const O = T.getReader();
                    try {
                        for (;;) {
                            const { value: N, done: U } = yield (0, s.qq)(
                                O.read()
                            );
                            if (U) return yield (0, s.qq)(void 0);
                            yield yield (0, s.qq)(N);
                        }
                    } finally {
                        O.releaseLock();
                    }
                });
            }
            function k(T) {
                return (0, m.m)(null == T ? void 0 : T.getReader);
            }
        },
        3532: (de, Y, f) => {
            f.d(Y, { K: () => m });
            var s = f(576);
            function m(L) {
                return L && (0, s.m)(L.schedule);
            }
        },
        4482: (de, Y, f) => {
            f.d(Y, { A: () => m, e: () => L });
            var s = f(576);
            function m(k) {
                return (0, s.m)(null == k ? void 0 : k.lift);
            }
            function L(k) {
                return (T) => {
                    if (m(T))
                        return T.lift(function (S) {
                            try {
                                return k(S, this);
                            } catch (O) {
                                this.error(O);
                            }
                        });
                    throw new TypeError(
                        'Unable to lift unknown Observable type'
                    );
                };
            }
        },
        3268: (de, Y, f) => {
            f.d(Y, { Z: () => k });
            var s = f(4004);
            const { isArray: m } = Array;
            function k(T) {
                return (0, s.U)((S) =>
                    (function L(T, S) {
                        return m(S) ? T(...S) : T(S);
                    })(T, S)
                );
            }
        },
        5032: (de, Y, f) => {
            function s() {}
            f.d(Y, { Z: () => s });
        },
        7849: (de, Y, f) => {
            f.d(Y, { h: () => L });
            var s = f(2416),
                m = f(3410);
            function L(k) {
                m.z.setTimeout(() => {
                    const { onUnhandledError: T } = s.v;
                    if (!T) throw k;
                    T(k);
                });
            }
        },
        4532: (de, Y, f) => {
            function s(m) {
                return new TypeError(
                    `You provided ${
                        null !== m && 'object' == typeof m
                            ? 'an invalid object'
                            : `'${m}'`
                    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
                );
            }
            f.d(Y, { z: () => s });
        },
        5987: (de, Y, f) => {
            function N(ne, we, Fe, je) {
                return new (Fe || (Fe = Promise))(function (ke, pt) {
                    function Lt(Ot) {
                        try {
                            yt(je.next(Ot));
                        } catch (gt) {
                            pt(gt);
                        }
                    }
                    function hn(Ot) {
                        try {
                            yt(je.throw(Ot));
                        } catch (gt) {
                            pt(gt);
                        }
                    }
                    function yt(Ot) {
                        Ot.done
                            ? ke(Ot.value)
                            : (function We(ke) {
                                  return ke instanceof Fe
                                      ? ke
                                      : new Fe(function (pt) {
                                            pt(ke);
                                        });
                              })(Ot.value).then(Lt, hn);
                    }
                    yt((je = je.apply(ne, we || [])).next());
                });
            }
            function pe(ne) {
                return this instanceof pe ? ((this.v = ne), this) : new pe(ne);
            }
            function J(ne, we, Fe) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var We,
                    je = Fe.apply(ne, we || []),
                    ke = [];
                return (
                    (We = {}),
                    pt('next'),
                    pt('throw'),
                    pt('return'),
                    (We[Symbol.asyncIterator] = function () {
                        return this;
                    }),
                    We
                );
                function pt(Pt) {
                    je[Pt] &&
                        (We[Pt] = function (It) {
                            return new Promise(function (mt, $t) {
                                ke.push([Pt, It, mt, $t]) > 1 || Lt(Pt, It);
                            });
                        });
                }
                function Lt(Pt, It) {
                    try {
                        !(function hn(Pt) {
                            Pt.value instanceof pe
                                ? Promise.resolve(Pt.value.v).then(yt, Ot)
                                : gt(ke[0][2], Pt);
                        })(je[Pt](It));
                    } catch (mt) {
                        gt(ke[0][3], mt);
                    }
                }
                function yt(Pt) {
                    Lt('next', Pt);
                }
                function Ot(Pt) {
                    Lt('throw', Pt);
                }
                function gt(Pt, It) {
                    Pt(It), ke.shift(), ke.length && Lt(ke[0][0], ke[0][1]);
                }
            }
            function he(ne) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var Fe,
                    we = ne[Symbol.asyncIterator];
                return we
                    ? we.call(ne)
                    : ((ne = (function K(ne) {
                          var we =
                                  'function' == typeof Symbol &&
                                  Symbol.iterator,
                              Fe = we && ne[we],
                              je = 0;
                          if (Fe) return Fe.call(ne);
                          if (ne && 'number' == typeof ne.length)
                              return {
                                  next: function () {
                                      return (
                                          ne &&
                                              je >= ne.length &&
                                              (ne = void 0),
                                          { value: ne && ne[je++], done: !ne }
                                      );
                                  },
                              };
                          throw new TypeError(
                              we
                                  ? 'Object is not iterable.'
                                  : 'Symbol.iterator is not defined.'
                          );
                      })(ne)),
                      (Fe = {}),
                      je('next'),
                      je('throw'),
                      je('return'),
                      (Fe[Symbol.asyncIterator] = function () {
                          return this;
                      }),
                      Fe);
                function je(ke) {
                    Fe[ke] =
                        ne[ke] &&
                        function (pt) {
                            return new Promise(function (Lt, hn) {
                                !(function We(ke, pt, Lt, hn) {
                                    Promise.resolve(hn).then(function (yt) {
                                        ke({ value: yt, done: Lt });
                                    }, pt);
                                })(Lt, hn, (pt = ne[ke](pt)).done, pt.value);
                            });
                        };
                }
            }
            f.d(Y, { FC: () => J, KL: () => he, mG: () => N, qq: () => pe });
        },
        1777: (de, Y, f) => {
            f.d(Y, {
                IO: () => Re,
                LC: () => m,
                SB: () => U,
                X$: () => k,
                ZE: () => Me,
                ZN: () => J,
                _j: () => s,
                eR: () => F,
                jt: () => T,
                k1: () => he,
                l3: () => L,
                oB: () => N,
                pV: () => fe,
                vP: () => O,
            });
            class s {}
            class m {}
            const L = '*';
            function k(De, R) {
                return { type: 7, name: De, definitions: R, options: {} };
            }
            function T(De, R = null) {
                return { type: 4, styles: R, timings: De };
            }
            function O(De, R = null) {
                return { type: 2, steps: De, options: R };
            }
            function N(De) {
                return { type: 6, styles: De, offset: null };
            }
            function U(De, R, te) {
                return { type: 0, name: De, styles: R, options: te };
            }
            function F(De, R, te = null) {
                return { type: 1, expr: De, animation: R, options: te };
            }
            function fe(De = null) {
                return { type: 9, options: De };
            }
            function Re(De, R, te = null) {
                return { type: 11, selector: De, animation: R, options: te };
            }
            function pe(De) {
                Promise.resolve(null).then(De);
            }
            class J {
                constructor(R = 0, te = 0) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._onDestroyFns = []),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._position = 0),
                        (this.parentPlayer = null),
                        (this.totalTime = R + te);
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((R) => R()),
                        (this._onDoneFns = []));
                }
                onStart(R) {
                    this._onStartFns.push(R);
                }
                onDone(R) {
                    this._onDoneFns.push(R);
                }
                onDestroy(R) {
                    this._onDestroyFns.push(R);
                }
                hasStarted() {
                    return this._started;
                }
                init() {}
                play() {
                    this.hasStarted() ||
                        (this._onStart(), this.triggerMicrotask()),
                        (this._started = !0);
                }
                triggerMicrotask() {
                    pe(() => this._onFinish());
                }
                _onStart() {
                    this._onStartFns.forEach((R) => R()),
                        (this._onStartFns = []);
                }
                pause() {}
                restart() {}
                finish() {
                    this._onFinish();
                }
                destroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this.hasStarted() || this._onStart(),
                        this.finish(),
                        this._onDestroyFns.forEach((R) => R()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this._started = !1;
                }
                setPosition(R) {
                    this._position = this.totalTime ? R * this.totalTime : 1;
                }
                getPosition() {
                    return this.totalTime ? this._position / this.totalTime : 1;
                }
                triggerCallback(R) {
                    const te =
                        'start' == R ? this._onStartFns : this._onDoneFns;
                    te.forEach((G) => G()), (te.length = 0);
                }
            }
            class Me {
                constructor(R) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._finished = !1),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._onDestroyFns = []),
                        (this.parentPlayer = null),
                        (this.totalTime = 0),
                        (this.players = R);
                    let te = 0,
                        G = 0,
                        oe = 0;
                    const re = this.players.length;
                    0 == re
                        ? pe(() => this._onFinish())
                        : this.players.forEach((ne) => {
                              ne.onDone(() => {
                                  ++te == re && this._onFinish();
                              }),
                                  ne.onDestroy(() => {
                                      ++G == re && this._onDestroy();
                                  }),
                                  ne.onStart(() => {
                                      ++oe == re && this._onStart();
                                  });
                          }),
                        (this.totalTime = this.players.reduce(
                            (ne, we) => Math.max(ne, we.totalTime),
                            0
                        ));
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((R) => R()),
                        (this._onDoneFns = []));
                }
                init() {
                    this.players.forEach((R) => R.init());
                }
                onStart(R) {
                    this._onStartFns.push(R);
                }
                _onStart() {
                    this.hasStarted() ||
                        ((this._started = !0),
                        this._onStartFns.forEach((R) => R()),
                        (this._onStartFns = []));
                }
                onDone(R) {
                    this._onDoneFns.push(R);
                }
                onDestroy(R) {
                    this._onDestroyFns.push(R);
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this.parentPlayer || this.init(),
                        this._onStart(),
                        this.players.forEach((R) => R.play());
                }
                pause() {
                    this.players.forEach((R) => R.pause());
                }
                restart() {
                    this.players.forEach((R) => R.restart());
                }
                finish() {
                    this._onFinish(), this.players.forEach((R) => R.finish());
                }
                destroy() {
                    this._onDestroy();
                }
                _onDestroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this._onFinish(),
                        this.players.forEach((R) => R.destroy()),
                        this._onDestroyFns.forEach((R) => R()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this.players.forEach((R) => R.reset()),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._started = !1);
                }
                setPosition(R) {
                    const te = R * this.totalTime;
                    this.players.forEach((G) => {
                        const oe = G.totalTime
                            ? Math.min(1, te / G.totalTime)
                            : 1;
                        G.setPosition(oe);
                    });
                }
                getPosition() {
                    const R = this.players.reduce(
                        (te, G) =>
                            null === te || G.totalTime > te.totalTime ? G : te,
                        null
                    );
                    return null != R ? R.getPosition() : 0;
                }
                beforeDestroy() {
                    this.players.forEach((R) => {
                        R.beforeDestroy && R.beforeDestroy();
                    });
                }
                triggerCallback(R) {
                    const te =
                        'start' == R ? this._onStartFns : this._onDoneFns;
                    te.forEach((G) => G()), (te.length = 0);
                }
            }
            const he = '!';
        },
        9287: (de, Y, f) => {
            f.d(Y, { Iq: () => O, TU: () => k });
            var s = f(9808),
                m = f(5e3);
            class L {
                constructor(U, w) {
                    this._document = w;
                    const F = (this._textarea =
                            this._document.createElement('textarea')),
                        K = F.style;
                    (K.position = 'fixed'),
                        (K.top = K.opacity = '0'),
                        (K.left = '-999em'),
                        F.setAttribute('aria-hidden', 'true'),
                        (F.value = U),
                        this._document.body.appendChild(F);
                }
                copy() {
                    const U = this._textarea;
                    let w = !1;
                    try {
                        if (U) {
                            const F = this._document.activeElement;
                            U.select(),
                                U.setSelectionRange(0, U.value.length),
                                (w = this._document.execCommand('copy')),
                                F && F.focus();
                        }
                    } catch (F) {}
                    return w;
                }
                destroy() {
                    const U = this._textarea;
                    U && (U.remove(), (this._textarea = void 0));
                }
            }
            let k = (() => {
                    class N {
                        constructor(w) {
                            this._document = w;
                        }
                        copy(w) {
                            const F = this.beginCopy(w),
                                K = F.copy();
                            return F.destroy(), K;
                        }
                        beginCopy(w) {
                            return new L(w, this._document);
                        }
                    }
                    return (
                        (N.ɵfac = function (w) {
                            return new (w || N)(m.LFG(s.K0));
                        }),
                        (N.ɵprov = m.Yz7({
                            token: N,
                            factory: N.ɵfac,
                            providedIn: 'root',
                        })),
                        N
                    );
                })(),
                O = (() => {
                    class N {}
                    return (
                        (N.ɵfac = function (w) {
                            return new (w || N)();
                        }),
                        (N.ɵmod = m.oAB({ type: N })),
                        (N.ɵinj = m.cJS({})),
                        N
                    );
                })();
        },
        9808: (de, Y, f) => {
            f.d(Y, {
                Do: () => De,
                EM: () => Xi,
                HT: () => T,
                JF: () => jn,
                K0: () => O,
                Mx: () => Ar,
                NF: () => Xn,
                O5: () => _t,
                Ov: () => $e,
                PC: () => Wr,
                PM: () => ii,
                S$: () => pe,
                V_: () => w,
                Ye: () => R,
                b0: () => he,
                bD: () => $i,
                ez: () => zr,
                lw: () => N,
                mk: () => Or,
                mr: () => Me,
                q: () => L,
                sg: () => xe,
                tP: () => Ui,
                w_: () => S,
            });
            var s = f(5e3);
            let m = null;
            function L() {
                return m;
            }
            function T(C) {
                m || (m = C);
            }
            class S {}
            const O = new s.OlP('DocumentToken');
            let N = (() => {
                class C {
                    historyGo(b) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (C.ɵfac = function (b) {
                        return new (b || C)();
                    }),
                    (C.ɵprov = s.Yz7({
                        token: C,
                        factory: function () {
                            return (function U() {
                                return (0, s.LFG)(F);
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    C
                );
            })();
            const w = new s.OlP('Location Initialized');
            let F = (() => {
                class C extends N {
                    constructor(b) {
                        super(), (this._doc = b), this._init();
                    }
                    _init() {
                        (this.location = window.location),
                            (this._history = window.history);
                    }
                    getBaseHrefFromDOM() {
                        return L().getBaseHref(this._doc);
                    }
                    onPopState(b) {
                        const z = L().getGlobalEventTarget(this._doc, 'window');
                        return (
                            z.addEventListener('popstate', b, !1),
                            () => z.removeEventListener('popstate', b)
                        );
                    }
                    onHashChange(b) {
                        const z = L().getGlobalEventTarget(this._doc, 'window');
                        return (
                            z.addEventListener('hashchange', b, !1),
                            () => z.removeEventListener('hashchange', b)
                        );
                    }
                    get href() {
                        return this.location.href;
                    }
                    get protocol() {
                        return this.location.protocol;
                    }
                    get hostname() {
                        return this.location.hostname;
                    }
                    get port() {
                        return this.location.port;
                    }
                    get pathname() {
                        return this.location.pathname;
                    }
                    get search() {
                        return this.location.search;
                    }
                    get hash() {
                        return this.location.hash;
                    }
                    set pathname(b) {
                        this.location.pathname = b;
                    }
                    pushState(b, z, Ce) {
                        K()
                            ? this._history.pushState(b, z, Ce)
                            : (this.location.hash = Ce);
                    }
                    replaceState(b, z, Ce) {
                        K()
                            ? this._history.replaceState(b, z, Ce)
                            : (this.location.hash = Ce);
                    }
                    forward() {
                        this._history.forward();
                    }
                    back() {
                        this._history.back();
                    }
                    historyGo(b = 0) {
                        this._history.go(b);
                    }
                    getState() {
                        return this._history.state;
                    }
                }
                return (
                    (C.ɵfac = function (b) {
                        return new (b || C)(s.LFG(O));
                    }),
                    (C.ɵprov = s.Yz7({
                        token: C,
                        factory: function () {
                            return (function fe() {
                                return new F((0, s.LFG)(O));
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    C
                );
            })();
            function K() {
                return !!window.history.pushState;
            }
            function _e(C, j) {
                if (0 == C.length) return j;
                if (0 == j.length) return C;
                let b = 0;
                return (
                    C.endsWith('/') && b++,
                    j.startsWith('/') && b++,
                    2 == b ? C + j.substring(1) : 1 == b ? C + j : C + '/' + j
                );
            }
            function Re(C) {
                const j = C.match(/#|\?|$/),
                    b = (j && j.index) || C.length;
                return C.slice(0, b - ('/' === C[b - 1] ? 1 : 0)) + C.slice(b);
            }
            function Oe(C) {
                return C && '?' !== C[0] ? '?' + C : C;
            }
            let pe = (() => {
                class C {
                    historyGo(b) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (C.ɵfac = function (b) {
                        return new (b || C)();
                    }),
                    (C.ɵprov = s.Yz7({
                        token: C,
                        factory: function () {
                            return (function J(C) {
                                const j = (0, s.LFG)(O).location;
                                return new he(
                                    (0, s.LFG)(N),
                                    (j && j.origin) || ''
                                );
                            })();
                        },
                        providedIn: 'root',
                    })),
                    C
                );
            })();
            const Me = new s.OlP('appBaseHref');
            let he = (() => {
                    class C extends pe {
                        constructor(b, z) {
                            if (
                                (super(),
                                (this._platformLocation = b),
                                (this._removeListenerFns = []),
                                null == z &&
                                    (z =
                                        this._platformLocation.getBaseHrefFromDOM()),
                                null == z)
                            )
                                throw new Error(
                                    'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                                );
                            this._baseHref = z;
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(b) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(b),
                                this._platformLocation.onHashChange(b)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        prepareExternalUrl(b) {
                            return _e(this._baseHref, b);
                        }
                        path(b = !1) {
                            const z =
                                    this._platformLocation.pathname +
                                    Oe(this._platformLocation.search),
                                Ce = this._platformLocation.hash;
                            return Ce && b ? `${z}${Ce}` : z;
                        }
                        pushState(b, z, Ce, Je) {
                            const ct = this.prepareExternalUrl(Ce + Oe(Je));
                            this._platformLocation.pushState(b, z, ct);
                        }
                        replaceState(b, z, Ce, Je) {
                            const ct = this.prepareExternalUrl(Ce + Oe(Je));
                            this._platformLocation.replaceState(b, z, ct);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(b = 0) {
                            var z, Ce;
                            null ===
                                (Ce = (z = this._platformLocation).historyGo) ||
                                void 0 === Ce ||
                                Ce.call(z, b);
                        }
                    }
                    return (
                        (C.ɵfac = function (b) {
                            return new (b || C)(s.LFG(N), s.LFG(Me, 8));
                        }),
                        (C.ɵprov = s.Yz7({ token: C, factory: C.ɵfac })),
                        C
                    );
                })(),
                De = (() => {
                    class C extends pe {
                        constructor(b, z) {
                            super(),
                                (this._platformLocation = b),
                                (this._baseHref = ''),
                                (this._removeListenerFns = []),
                                null != z && (this._baseHref = z);
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(b) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(b),
                                this._platformLocation.onHashChange(b)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        path(b = !1) {
                            let z = this._platformLocation.hash;
                            return (
                                null == z && (z = '#'),
                                z.length > 0 ? z.substring(1) : z
                            );
                        }
                        prepareExternalUrl(b) {
                            const z = _e(this._baseHref, b);
                            return z.length > 0 ? '#' + z : z;
                        }
                        pushState(b, z, Ce, Je) {
                            let ct = this.prepareExternalUrl(Ce + Oe(Je));
                            0 == ct.length &&
                                (ct = this._platformLocation.pathname),
                                this._platformLocation.pushState(b, z, ct);
                        }
                        replaceState(b, z, Ce, Je) {
                            let ct = this.prepareExternalUrl(Ce + Oe(Je));
                            0 == ct.length &&
                                (ct = this._platformLocation.pathname),
                                this._platformLocation.replaceState(b, z, ct);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(b = 0) {
                            var z, Ce;
                            null ===
                                (Ce = (z = this._platformLocation).historyGo) ||
                                void 0 === Ce ||
                                Ce.call(z, b);
                        }
                    }
                    return (
                        (C.ɵfac = function (b) {
                            return new (b || C)(s.LFG(N), s.LFG(Me, 8));
                        }),
                        (C.ɵprov = s.Yz7({ token: C, factory: C.ɵfac })),
                        C
                    );
                })(),
                R = (() => {
                    class C {
                        constructor(b, z) {
                            (this._subject = new s.vpe()),
                                (this._urlChangeListeners = []),
                                (this._platformStrategy = b);
                            const Ce = this._platformStrategy.getBaseHref();
                            (this._platformLocation = z),
                                (this._baseHref = Re(oe(Ce))),
                                this._platformStrategy.onPopState((Je) => {
                                    this._subject.emit({
                                        url: this.path(!0),
                                        pop: !0,
                                        state: Je.state,
                                        type: Je.type,
                                    });
                                });
                        }
                        path(b = !1) {
                            return this.normalize(
                                this._platformStrategy.path(b)
                            );
                        }
                        getState() {
                            return this._platformLocation.getState();
                        }
                        isCurrentPathEqualTo(b, z = '') {
                            return this.path() == this.normalize(b + Oe(z));
                        }
                        normalize(b) {
                            return C.stripTrailingSlash(
                                (function G(C, j) {
                                    return C && j.startsWith(C)
                                        ? j.substring(C.length)
                                        : j;
                                })(this._baseHref, oe(b))
                            );
                        }
                        prepareExternalUrl(b) {
                            return (
                                b && '/' !== b[0] && (b = '/' + b),
                                this._platformStrategy.prepareExternalUrl(b)
                            );
                        }
                        go(b, z = '', Ce = null) {
                            this._platformStrategy.pushState(Ce, '', b, z),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(b + Oe(z)),
                                    Ce
                                );
                        }
                        replaceState(b, z = '', Ce = null) {
                            this._platformStrategy.replaceState(Ce, '', b, z),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(b + Oe(z)),
                                    Ce
                                );
                        }
                        forward() {
                            this._platformStrategy.forward();
                        }
                        back() {
                            this._platformStrategy.back();
                        }
                        historyGo(b = 0) {
                            var z, Ce;
                            null ===
                                (Ce = (z = this._platformStrategy).historyGo) ||
                                void 0 === Ce ||
                                Ce.call(z, b);
                        }
                        onUrlChange(b) {
                            this._urlChangeListeners.push(b),
                                this._urlChangeSubscription ||
                                    (this._urlChangeSubscription =
                                        this.subscribe((z) => {
                                            this._notifyUrlChangeListeners(
                                                z.url,
                                                z.state
                                            );
                                        }));
                        }
                        _notifyUrlChangeListeners(b = '', z) {
                            this._urlChangeListeners.forEach((Ce) => Ce(b, z));
                        }
                        subscribe(b, z, Ce) {
                            return this._subject.subscribe({
                                next: b,
                                error: z,
                                complete: Ce,
                            });
                        }
                    }
                    return (
                        (C.normalizeQueryParams = Oe),
                        (C.joinWithSlash = _e),
                        (C.stripTrailingSlash = Re),
                        (C.ɵfac = function (b) {
                            return new (b || C)(s.LFG(pe), s.LFG(N));
                        }),
                        (C.ɵprov = s.Yz7({
                            token: C,
                            factory: function () {
                                return (function te() {
                                    return new R((0, s.LFG)(pe), (0, s.LFG)(N));
                                })();
                            },
                            providedIn: 'root',
                        })),
                        C
                    );
                })();
            function oe(C) {
                return C.replace(/\/index.html$/, '');
            }
            function Ar(C, j) {
                j = encodeURIComponent(j);
                for (const b of C.split(';')) {
                    const z = b.indexOf('='),
                        [Ce, Je] =
                            -1 == z ? [b, ''] : [b.slice(0, z), b.slice(z + 1)];
                    if (Ce.trim() === j) return decodeURIComponent(Je);
                }
                return null;
            }
            let Or = (() => {
                class C {
                    constructor(b, z, Ce, Je) {
                        (this._iterableDiffers = b),
                            (this._keyValueDiffers = z),
                            (this._ngEl = Ce),
                            (this._renderer = Je),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._initialClasses = []),
                            (this._rawClass = null);
                    }
                    set klass(b) {
                        this._removeClasses(this._initialClasses),
                            (this._initialClasses =
                                'string' == typeof b ? b.split(/\s+/) : []),
                            this._applyClasses(this._initialClasses),
                            this._applyClasses(this._rawClass);
                    }
                    set ngClass(b) {
                        this._removeClasses(this._rawClass),
                            this._applyClasses(this._initialClasses),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._rawClass =
                                'string' == typeof b ? b.split(/\s+/) : b),
                            this._rawClass &&
                                ((0, s.sIi)(this._rawClass)
                                    ? (this._iterableDiffer =
                                          this._iterableDiffers
                                              .find(this._rawClass)
                                              .create())
                                    : (this._keyValueDiffer =
                                          this._keyValueDiffers
                                              .find(this._rawClass)
                                              .create()));
                    }
                    ngDoCheck() {
                        if (this._iterableDiffer) {
                            const b = this._iterableDiffer.diff(this._rawClass);
                            b && this._applyIterableChanges(b);
                        } else if (this._keyValueDiffer) {
                            const b = this._keyValueDiffer.diff(this._rawClass);
                            b && this._applyKeyValueChanges(b);
                        }
                    }
                    _applyKeyValueChanges(b) {
                        b.forEachAddedItem((z) =>
                            this._toggleClass(z.key, z.currentValue)
                        ),
                            b.forEachChangedItem((z) =>
                                this._toggleClass(z.key, z.currentValue)
                            ),
                            b.forEachRemovedItem((z) => {
                                z.previousValue && this._toggleClass(z.key, !1);
                            });
                    }
                    _applyIterableChanges(b) {
                        b.forEachAddedItem((z) => {
                            if ('string' != typeof z.item)
                                throw new Error(
                                    `NgClass can only toggle CSS classes expressed as strings, got ${(0,
                                    s.AaK)(z.item)}`
                                );
                            this._toggleClass(z.item, !0);
                        }),
                            b.forEachRemovedItem((z) =>
                                this._toggleClass(z.item, !1)
                            );
                    }
                    _applyClasses(b) {
                        b &&
                            (Array.isArray(b) || b instanceof Set
                                ? b.forEach((z) => this._toggleClass(z, !0))
                                : Object.keys(b).forEach((z) =>
                                      this._toggleClass(z, !!b[z])
                                  ));
                    }
                    _removeClasses(b) {
                        b &&
                            (Array.isArray(b) || b instanceof Set
                                ? b.forEach((z) => this._toggleClass(z, !1))
                                : Object.keys(b).forEach((z) =>
                                      this._toggleClass(z, !1)
                                  ));
                    }
                    _toggleClass(b, z) {
                        (b = b.trim()) &&
                            b.split(/\s+/g).forEach((Ce) => {
                                z
                                    ? this._renderer.addClass(
                                          this._ngEl.nativeElement,
                                          Ce
                                      )
                                    : this._renderer.removeClass(
                                          this._ngEl.nativeElement,
                                          Ce
                                      );
                            });
                    }
                }
                return (
                    (C.ɵfac = function (b) {
                        return new (b || C)(
                            s.Y36(s.ZZ4),
                            s.Y36(s.aQg),
                            s.Y36(s.SBq),
                            s.Y36(s.Qsj)
                        );
                    }),
                    (C.ɵdir = s.lG2({
                        type: C,
                        selectors: [['', 'ngClass', '']],
                        inputs: {
                            klass: ['class', 'klass'],
                            ngClass: 'ngClass',
                        },
                    })),
                    C
                );
            })();
            class Qe {
                constructor(j, b, z, Ce) {
                    (this.$implicit = j),
                        (this.ngForOf = b),
                        (this.index = z),
                        (this.count = Ce);
                }
                get first() {
                    return 0 === this.index;
                }
                get last() {
                    return this.index === this.count - 1;
                }
                get even() {
                    return this.index % 2 == 0;
                }
                get odd() {
                    return !this.even;
                }
            }
            let xe = (() => {
                class C {
                    constructor(b, z, Ce) {
                        (this._viewContainer = b),
                            (this._template = z),
                            (this._differs = Ce),
                            (this._ngForOf = null),
                            (this._ngForOfDirty = !0),
                            (this._differ = null);
                    }
                    set ngForOf(b) {
                        (this._ngForOf = b), (this._ngForOfDirty = !0);
                    }
                    set ngForTrackBy(b) {
                        this._trackByFn = b;
                    }
                    get ngForTrackBy() {
                        return this._trackByFn;
                    }
                    set ngForTemplate(b) {
                        b && (this._template = b);
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const b = this._ngForOf;
                            !this._differ &&
                                b &&
                                (this._differ = this._differs
                                    .find(b)
                                    .create(this.ngForTrackBy));
                        }
                        if (this._differ) {
                            const b = this._differ.diff(this._ngForOf);
                            b && this._applyChanges(b);
                        }
                    }
                    _applyChanges(b) {
                        const z = this._viewContainer;
                        b.forEachOperation((Ce, Je, ct) => {
                            if (null == Ce.previousIndex)
                                z.createEmbeddedView(
                                    this._template,
                                    new Qe(Ce.item, this._ngForOf, -1, -1),
                                    null === ct ? void 0 : ct
                                );
                            else if (null == ct)
                                z.remove(null === Je ? void 0 : Je);
                            else if (null !== Je) {
                                const zt = z.get(Je);
                                z.move(zt, ct), Ge(zt, Ce);
                            }
                        });
                        for (let Ce = 0, Je = z.length; Ce < Je; Ce++) {
                            const zt = z.get(Ce).context;
                            (zt.index = Ce),
                                (zt.count = Je),
                                (zt.ngForOf = this._ngForOf);
                        }
                        b.forEachIdentityChange((Ce) => {
                            Ge(z.get(Ce.currentIndex), Ce);
                        });
                    }
                    static ngTemplateContextGuard(b, z) {
                        return !0;
                    }
                }
                return (
                    (C.ɵfac = function (b) {
                        return new (b || C)(
                            s.Y36(s.s_b),
                            s.Y36(s.Rgc),
                            s.Y36(s.ZZ4)
                        );
                    }),
                    (C.ɵdir = s.lG2({
                        type: C,
                        selectors: [['', 'ngFor', '', 'ngForOf', '']],
                        inputs: {
                            ngForOf: 'ngForOf',
                            ngForTrackBy: 'ngForTrackBy',
                            ngForTemplate: 'ngForTemplate',
                        },
                    })),
                    C
                );
            })();
            function Ge(C, j) {
                C.context.$implicit = j.item;
            }
            let _t = (() => {
                class C {
                    constructor(b, z) {
                        (this._viewContainer = b),
                            (this._context = new Gt()),
                            (this._thenTemplateRef = null),
                            (this._elseTemplateRef = null),
                            (this._thenViewRef = null),
                            (this._elseViewRef = null),
                            (this._thenTemplateRef = z);
                    }
                    set ngIf(b) {
                        (this._context.$implicit = this._context.ngIf = b),
                            this._updateView();
                    }
                    set ngIfThen(b) {
                        Ln('ngIfThen', b),
                            (this._thenTemplateRef = b),
                            (this._thenViewRef = null),
                            this._updateView();
                    }
                    set ngIfElse(b) {
                        Ln('ngIfElse', b),
                            (this._elseTemplateRef = b),
                            (this._elseViewRef = null),
                            this._updateView();
                    }
                    _updateView() {
                        this._context.$implicit
                            ? this._thenViewRef ||
                              (this._viewContainer.clear(),
                              (this._elseViewRef = null),
                              this._thenTemplateRef &&
                                  (this._thenViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._thenTemplateRef,
                                          this._context
                                      )))
                            : this._elseViewRef ||
                              (this._viewContainer.clear(),
                              (this._thenViewRef = null),
                              this._elseTemplateRef &&
                                  (this._elseViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._elseTemplateRef,
                                          this._context
                                      )));
                    }
                    static ngTemplateContextGuard(b, z) {
                        return !0;
                    }
                }
                return (
                    (C.ɵfac = function (b) {
                        return new (b || C)(s.Y36(s.s_b), s.Y36(s.Rgc));
                    }),
                    (C.ɵdir = s.lG2({
                        type: C,
                        selectors: [['', 'ngIf', '']],
                        inputs: {
                            ngIf: 'ngIf',
                            ngIfThen: 'ngIfThen',
                            ngIfElse: 'ngIfElse',
                        },
                    })),
                    C
                );
            })();
            class Gt {
                constructor() {
                    (this.$implicit = null), (this.ngIf = null);
                }
            }
            function Ln(C, j) {
                if (j && !j.createEmbeddedView)
                    throw new Error(
                        `${C} must be a TemplateRef, but received '${(0, s.AaK)(
                            j
                        )}'.`
                    );
            }
            let Wr = (() => {
                    class C {
                        constructor(b, z, Ce) {
                            (this._ngEl = b),
                                (this._differs = z),
                                (this._renderer = Ce),
                                (this._ngStyle = null),
                                (this._differ = null);
                        }
                        set ngStyle(b) {
                            (this._ngStyle = b),
                                !this._differ &&
                                    b &&
                                    (this._differ = this._differs
                                        .find(b)
                                        .create());
                        }
                        ngDoCheck() {
                            if (this._differ) {
                                const b = this._differ.diff(this._ngStyle);
                                b && this._applyChanges(b);
                            }
                        }
                        _setStyle(b, z) {
                            const [Ce, Je] = b.split('.');
                            null != (z = null != z && Je ? `${z}${Je}` : z)
                                ? this._renderer.setStyle(
                                      this._ngEl.nativeElement,
                                      Ce,
                                      z
                                  )
                                : this._renderer.removeStyle(
                                      this._ngEl.nativeElement,
                                      Ce
                                  );
                        }
                        _applyChanges(b) {
                            b.forEachRemovedItem((z) =>
                                this._setStyle(z.key, null)
                            ),
                                b.forEachAddedItem((z) =>
                                    this._setStyle(z.key, z.currentValue)
                                ),
                                b.forEachChangedItem((z) =>
                                    this._setStyle(z.key, z.currentValue)
                                );
                        }
                    }
                    return (
                        (C.ɵfac = function (b) {
                            return new (b || C)(
                                s.Y36(s.SBq),
                                s.Y36(s.aQg),
                                s.Y36(s.Qsj)
                            );
                        }),
                        (C.ɵdir = s.lG2({
                            type: C,
                            selectors: [['', 'ngStyle', '']],
                            inputs: { ngStyle: 'ngStyle' },
                        })),
                        C
                    );
                })(),
                Ui = (() => {
                    class C {
                        constructor(b) {
                            (this._viewContainerRef = b),
                                (this._viewRef = null),
                                (this.ngTemplateOutletContext = null),
                                (this.ngTemplateOutlet = null);
                        }
                        ngOnChanges(b) {
                            if (b.ngTemplateOutlet) {
                                const z = this._viewContainerRef;
                                this._viewRef &&
                                    z.remove(z.indexOf(this._viewRef)),
                                    (this._viewRef = this.ngTemplateOutlet
                                        ? z.createEmbeddedView(
                                              this.ngTemplateOutlet,
                                              this.ngTemplateOutletContext
                                          )
                                        : null);
                            } else
                                this._viewRef &&
                                    b.ngTemplateOutletContext &&
                                    this.ngTemplateOutletContext &&
                                    (this._viewRef.context =
                                        this.ngTemplateOutletContext);
                        }
                    }
                    return (
                        (C.ɵfac = function (b) {
                            return new (b || C)(s.Y36(s.s_b));
                        }),
                        (C.ɵdir = s.lG2({
                            type: C,
                            selectors: [['', 'ngTemplateOutlet', '']],
                            inputs: {
                                ngTemplateOutletContext:
                                    'ngTemplateOutletContext',
                                ngTemplateOutlet: 'ngTemplateOutlet',
                            },
                            features: [s.TTD],
                        })),
                        C
                    );
                })();
            class Qi {
                createSubscription(j, b) {
                    return j.subscribe({
                        next: b,
                        error: (z) => {
                            throw z;
                        },
                    });
                }
                dispose(j) {
                    j.unsubscribe();
                }
                onDestroy(j) {
                    j.unsubscribe();
                }
            }
            class Vi {
                createSubscription(j, b) {
                    return j.then(b, (z) => {
                        throw z;
                    });
                }
                dispose(j) {}
                onDestroy(j) {}
            }
            const Pe = new Vi(),
                Ie = new Qi();
            let $e = (() => {
                    class C {
                        constructor(b) {
                            (this._ref = b),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null),
                                (this._strategy = null);
                        }
                        ngOnDestroy() {
                            this._subscription && this._dispose();
                        }
                        transform(b) {
                            return this._obj
                                ? b !== this._obj
                                    ? (this._dispose(), this.transform(b))
                                    : this._latestValue
                                : (b && this._subscribe(b), this._latestValue);
                        }
                        _subscribe(b) {
                            (this._obj = b),
                                (this._strategy = this._selectStrategy(b)),
                                (this._subscription =
                                    this._strategy.createSubscription(b, (z) =>
                                        this._updateLatestValue(b, z)
                                    ));
                        }
                        _selectStrategy(b) {
                            if ((0, s.QGY)(b)) return Pe;
                            if ((0, s.F4k)(b)) return Ie;
                            throw (function xr(C, j) {
                                return new s.vHH(2100, '');
                            })();
                        }
                        _dispose() {
                            this._strategy.dispose(this._subscription),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null);
                        }
                        _updateLatestValue(b, z) {
                            b === this._obj &&
                                ((this._latestValue = z),
                                this._ref.markForCheck());
                        }
                    }
                    return (
                        (C.ɵfac = function (b) {
                            return new (b || C)(s.Y36(s.sBO, 16));
                        }),
                        (C.ɵpipe = s.Yjl({ name: 'async', type: C, pure: !1 })),
                        C
                    );
                })(),
                zr = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (b) {
                            return new (b || C)();
                        }),
                        (C.ɵmod = s.oAB({ type: C })),
                        (C.ɵinj = s.cJS({})),
                        C
                    );
                })();
            const $i = 'browser';
            function Xn(C) {
                return C === $i;
            }
            function ii(C) {
                return 'server' === C;
            }
            let Xi = (() => {
                class C {}
                return (
                    (C.ɵprov = (0, s.Yz7)({
                        token: C,
                        providedIn: 'root',
                        factory: () => new Ir((0, s.LFG)(O), window),
                    })),
                    C
                );
            })();
            class Ir {
                constructor(j, b) {
                    (this.document = j),
                        (this.window = b),
                        (this.offset = () => [0, 0]);
                }
                setOffset(j) {
                    this.offset = Array.isArray(j) ? () => j : j;
                }
                getScrollPosition() {
                    return this.supportsScrolling()
                        ? [this.window.pageXOffset, this.window.pageYOffset]
                        : [0, 0];
                }
                scrollToPosition(j) {
                    this.supportsScrolling() &&
                        this.window.scrollTo(j[0], j[1]);
                }
                scrollToAnchor(j) {
                    if (!this.supportsScrolling()) return;
                    const b = (function Pr(C, j) {
                        const b =
                            C.getElementById(j) || C.getElementsByName(j)[0];
                        if (b) return b;
                        if (
                            'function' == typeof C.createTreeWalker &&
                            C.body &&
                            (C.body.createShadowRoot || C.body.attachShadow)
                        ) {
                            const z = C.createTreeWalker(
                                C.body,
                                NodeFilter.SHOW_ELEMENT
                            );
                            let Ce = z.currentNode;
                            for (; Ce; ) {
                                const Je = Ce.shadowRoot;
                                if (Je) {
                                    const ct =
                                        Je.getElementById(j) ||
                                        Je.querySelector(`[name="${j}"]`);
                                    if (ct) return ct;
                                }
                                Ce = z.nextNode();
                            }
                        }
                        return null;
                    })(this.document, j);
                    b && (this.scrollToElement(b), b.focus());
                }
                setHistoryScrollRestoration(j) {
                    if (this.supportScrollRestoration()) {
                        const b = this.window.history;
                        b && b.scrollRestoration && (b.scrollRestoration = j);
                    }
                }
                scrollToElement(j) {
                    const b = j.getBoundingClientRect(),
                        z = b.left + this.window.pageXOffset,
                        Ce = b.top + this.window.pageYOffset,
                        Je = this.offset();
                    this.window.scrollTo(z - Je[0], Ce - Je[1]);
                }
                supportScrollRestoration() {
                    try {
                        if (!this.supportsScrolling()) return !1;
                        const j =
                            si(this.window.history) ||
                            si(Object.getPrototypeOf(this.window.history));
                        return !(!j || (!j.writable && !j.set));
                    } catch (j) {
                        return !1;
                    }
                }
                supportsScrolling() {
                    try {
                        return (
                            !!this.window &&
                            !!this.window.scrollTo &&
                            'pageXOffset' in this.window
                        );
                    } catch (j) {
                        return !1;
                    }
                }
            }
            function si(C) {
                return Object.getOwnPropertyDescriptor(C, 'scrollRestoration');
            }
            class jn {}
        },
        520: (de, Y, f) => {
            f.d(Y, { JF: () => Dn, TP: () => Lt, dt: () => re, eN: () => ke });
            var s = f(9808),
                m = f(5e3),
                L = f(9646),
                k = f(8306),
                T = f(4351),
                S = f(9300),
                O = f(4004);
            class N {}
            class U {}
            class w {
                constructor(ge) {
                    (this.normalizedNames = new Map()),
                        (this.lazyUpdate = null),
                        ge
                            ? (this.lazyInit =
                                  'string' == typeof ge
                                      ? () => {
                                            (this.headers = new Map()),
                                                ge.split('\n').forEach((Ae) => {
                                                    const ze = Ae.indexOf(':');
                                                    if (ze > 0) {
                                                        const Ze = Ae.slice(
                                                                0,
                                                                ze
                                                            ),
                                                            lt =
                                                                Ze.toLowerCase(),
                                                            bt = Ae.slice(
                                                                ze + 1
                                                            ).trim();
                                                        this.maybeSetNormalizedName(
                                                            Ze,
                                                            lt
                                                        ),
                                                            this.headers.has(lt)
                                                                ? this.headers
                                                                      .get(lt)
                                                                      .push(bt)
                                                                : this.headers.set(
                                                                      lt,
                                                                      [bt]
                                                                  );
                                                    }
                                                });
                                        }
                                      : () => {
                                            (this.headers = new Map()),
                                                Object.keys(ge).forEach(
                                                    (Ae) => {
                                                        let ze = ge[Ae];
                                                        const Ze =
                                                            Ae.toLowerCase();
                                                        'string' == typeof ze &&
                                                            (ze = [ze]),
                                                            ze.length > 0 &&
                                                                (this.headers.set(
                                                                    Ze,
                                                                    ze
                                                                ),
                                                                this.maybeSetNormalizedName(
                                                                    Ae,
                                                                    Ze
                                                                ));
                                                    }
                                                );
                                        })
                            : (this.headers = new Map());
                }
                has(ge) {
                    return this.init(), this.headers.has(ge.toLowerCase());
                }
                get(ge) {
                    this.init();
                    const Ae = this.headers.get(ge.toLowerCase());
                    return Ae && Ae.length > 0 ? Ae[0] : null;
                }
                keys() {
                    return (
                        this.init(), Array.from(this.normalizedNames.values())
                    );
                }
                getAll(ge) {
                    return (
                        this.init(), this.headers.get(ge.toLowerCase()) || null
                    );
                }
                append(ge, Ae) {
                    return this.clone({ name: ge, value: Ae, op: 'a' });
                }
                set(ge, Ae) {
                    return this.clone({ name: ge, value: Ae, op: 's' });
                }
                delete(ge, Ae) {
                    return this.clone({ name: ge, value: Ae, op: 'd' });
                }
                maybeSetNormalizedName(ge, Ae) {
                    this.normalizedNames.has(Ae) ||
                        this.normalizedNames.set(Ae, ge);
                }
                init() {
                    this.lazyInit &&
                        (this.lazyInit instanceof w
                            ? this.copyFrom(this.lazyInit)
                            : this.lazyInit(),
                        (this.lazyInit = null),
                        this.lazyUpdate &&
                            (this.lazyUpdate.forEach((ge) =>
                                this.applyUpdate(ge)
                            ),
                            (this.lazyUpdate = null)));
                }
                copyFrom(ge) {
                    ge.init(),
                        Array.from(ge.headers.keys()).forEach((Ae) => {
                            this.headers.set(Ae, ge.headers.get(Ae)),
                                this.normalizedNames.set(
                                    Ae,
                                    ge.normalizedNames.get(Ae)
                                );
                        });
                }
                clone(ge) {
                    const Ae = new w();
                    return (
                        (Ae.lazyInit =
                            this.lazyInit && this.lazyInit instanceof w
                                ? this.lazyInit
                                : this),
                        (Ae.lazyUpdate = (this.lazyUpdate || []).concat([ge])),
                        Ae
                    );
                }
                applyUpdate(ge) {
                    const Ae = ge.name.toLowerCase();
                    switch (ge.op) {
                        case 'a':
                        case 's':
                            let ze = ge.value;
                            if (
                                ('string' == typeof ze && (ze = [ze]),
                                0 === ze.length)
                            )
                                return;
                            this.maybeSetNormalizedName(ge.name, Ae);
                            const Ze =
                                ('a' === ge.op
                                    ? this.headers.get(Ae)
                                    : void 0) || [];
                            Ze.push(...ze), this.headers.set(Ae, Ze);
                            break;
                        case 'd':
                            const lt = ge.value;
                            if (lt) {
                                let bt = this.headers.get(Ae);
                                if (!bt) return;
                                (bt = bt.filter((mn) => -1 === lt.indexOf(mn))),
                                    0 === bt.length
                                        ? (this.headers.delete(Ae),
                                          this.normalizedNames.delete(Ae))
                                        : this.headers.set(Ae, bt);
                            } else
                                this.headers.delete(Ae),
                                    this.normalizedNames.delete(Ae);
                    }
                }
                forEach(ge) {
                    this.init(),
                        Array.from(this.normalizedNames.keys()).forEach((Ae) =>
                            ge(
                                this.normalizedNames.get(Ae),
                                this.headers.get(Ae)
                            )
                        );
                }
            }
            class F {
                encodeKey(ge) {
                    return Re(ge);
                }
                encodeValue(ge) {
                    return Re(ge);
                }
                decodeKey(ge) {
                    return decodeURIComponent(ge);
                }
                decodeValue(ge) {
                    return decodeURIComponent(ge);
                }
            }
            const fe = /%(\d[a-f0-9])/gi,
                _e = {
                    40: '@',
                    '3A': ':',
                    24: '$',
                    '2C': ',',
                    '3B': ';',
                    '2B': '+',
                    '3D': '=',
                    '3F': '?',
                    '2F': '/',
                };
            function Re(rt) {
                return encodeURIComponent(rt).replace(fe, (ge, Ae) => {
                    var ze;
                    return null !== (ze = _e[Ae]) && void 0 !== ze ? ze : ge;
                });
            }
            function Oe(rt) {
                return `${rt}`;
            }
            class pe {
                constructor(ge = {}) {
                    if (
                        ((this.updates = null),
                        (this.cloneFrom = null),
                        (this.encoder = ge.encoder || new F()),
                        ge.fromString)
                    ) {
                        if (ge.fromObject)
                            throw new Error(
                                'Cannot specify both fromString and fromObject.'
                            );
                        this.map = (function K(rt, ge) {
                            const Ae = new Map();
                            return (
                                rt.length > 0 &&
                                    rt
                                        .replace(/^\?/, '')
                                        .split('&')
                                        .forEach((Ze) => {
                                            const lt = Ze.indexOf('='),
                                                [bt, mn] =
                                                    -1 == lt
                                                        ? [ge.decodeKey(Ze), '']
                                                        : [
                                                              ge.decodeKey(
                                                                  Ze.slice(
                                                                      0,
                                                                      lt
                                                                  )
                                                              ),
                                                              ge.decodeValue(
                                                                  Ze.slice(
                                                                      lt + 1
                                                                  )
                                                              ),
                                                          ],
                                                Kt = Ae.get(bt) || [];
                                            Kt.push(mn), Ae.set(bt, Kt);
                                        }),
                                Ae
                            );
                        })(ge.fromString, this.encoder);
                    } else
                        ge.fromObject
                            ? ((this.map = new Map()),
                              Object.keys(ge.fromObject).forEach((Ae) => {
                                  const ze = ge.fromObject[Ae];
                                  this.map.set(
                                      Ae,
                                      Array.isArray(ze) ? ze : [ze]
                                  );
                              }))
                            : (this.map = null);
                }
                has(ge) {
                    return this.init(), this.map.has(ge);
                }
                get(ge) {
                    this.init();
                    const Ae = this.map.get(ge);
                    return Ae ? Ae[0] : null;
                }
                getAll(ge) {
                    return this.init(), this.map.get(ge) || null;
                }
                keys() {
                    return this.init(), Array.from(this.map.keys());
                }
                append(ge, Ae) {
                    return this.clone({ param: ge, value: Ae, op: 'a' });
                }
                appendAll(ge) {
                    const Ae = [];
                    return (
                        Object.keys(ge).forEach((ze) => {
                            const Ze = ge[ze];
                            Array.isArray(Ze)
                                ? Ze.forEach((lt) => {
                                      Ae.push({
                                          param: ze,
                                          value: lt,
                                          op: 'a',
                                      });
                                  })
                                : Ae.push({ param: ze, value: Ze, op: 'a' });
                        }),
                        this.clone(Ae)
                    );
                }
                set(ge, Ae) {
                    return this.clone({ param: ge, value: Ae, op: 's' });
                }
                delete(ge, Ae) {
                    return this.clone({ param: ge, value: Ae, op: 'd' });
                }
                toString() {
                    return (
                        this.init(),
                        this.keys()
                            .map((ge) => {
                                const Ae = this.encoder.encodeKey(ge);
                                return this.map
                                    .get(ge)
                                    .map(
                                        (ze) =>
                                            Ae +
                                            '=' +
                                            this.encoder.encodeValue(ze)
                                    )
                                    .join('&');
                            })
                            .filter((ge) => '' !== ge)
                            .join('&')
                    );
                }
                clone(ge) {
                    const Ae = new pe({ encoder: this.encoder });
                    return (
                        (Ae.cloneFrom = this.cloneFrom || this),
                        (Ae.updates = (this.updates || []).concat(ge)),
                        Ae
                    );
                }
                init() {
                    null === this.map && (this.map = new Map()),
                        null !== this.cloneFrom &&
                            (this.cloneFrom.init(),
                            this.cloneFrom
                                .keys()
                                .forEach((ge) =>
                                    this.map.set(ge, this.cloneFrom.map.get(ge))
                                ),
                            this.updates.forEach((ge) => {
                                switch (ge.op) {
                                    case 'a':
                                    case 's':
                                        const Ae =
                                            ('a' === ge.op
                                                ? this.map.get(ge.param)
                                                : void 0) || [];
                                        Ae.push(Oe(ge.value)),
                                            this.map.set(ge.param, Ae);
                                        break;
                                    case 'd':
                                        if (void 0 === ge.value) {
                                            this.map.delete(ge.param);
                                            break;
                                        }
                                        {
                                            let ze =
                                                this.map.get(ge.param) || [];
                                            const Ze = ze.indexOf(Oe(ge.value));
                                            -1 !== Ze && ze.splice(Ze, 1),
                                                ze.length > 0
                                                    ? this.map.set(ge.param, ze)
                                                    : this.map.delete(ge.param);
                                        }
                                }
                            }),
                            (this.cloneFrom = this.updates = null));
                }
            }
            class Me {
                constructor() {
                    this.map = new Map();
                }
                set(ge, Ae) {
                    return this.map.set(ge, Ae), this;
                }
                get(ge) {
                    return (
                        this.map.has(ge) || this.map.set(ge, ge.defaultValue()),
                        this.map.get(ge)
                    );
                }
                delete(ge) {
                    return this.map.delete(ge), this;
                }
                has(ge) {
                    return this.map.has(ge);
                }
                keys() {
                    return this.map.keys();
                }
            }
            function De(rt) {
                return (
                    'undefined' != typeof ArrayBuffer &&
                    rt instanceof ArrayBuffer
                );
            }
            function R(rt) {
                return 'undefined' != typeof Blob && rt instanceof Blob;
            }
            function te(rt) {
                return 'undefined' != typeof FormData && rt instanceof FormData;
            }
            class oe {
                constructor(ge, Ae, ze, Ze) {
                    let lt;
                    if (
                        ((this.url = Ae),
                        (this.body = null),
                        (this.reportProgress = !1),
                        (this.withCredentials = !1),
                        (this.responseType = 'json'),
                        (this.method = ge.toUpperCase()),
                        (function he(rt) {
                            switch (rt) {
                                case 'DELETE':
                                case 'GET':
                                case 'HEAD':
                                case 'OPTIONS':
                                case 'JSONP':
                                    return !1;
                                default:
                                    return !0;
                            }
                        })(this.method) || Ze
                            ? ((this.body = void 0 !== ze ? ze : null),
                              (lt = Ze))
                            : (lt = ze),
                        lt &&
                            ((this.reportProgress = !!lt.reportProgress),
                            (this.withCredentials = !!lt.withCredentials),
                            lt.responseType &&
                                (this.responseType = lt.responseType),
                            lt.headers && (this.headers = lt.headers),
                            lt.context && (this.context = lt.context),
                            lt.params && (this.params = lt.params)),
                        this.headers || (this.headers = new w()),
                        this.context || (this.context = new Me()),
                        this.params)
                    ) {
                        const bt = this.params.toString();
                        if (0 === bt.length) this.urlWithParams = Ae;
                        else {
                            const mn = Ae.indexOf('?');
                            this.urlWithParams =
                                Ae +
                                (-1 === mn
                                    ? '?'
                                    : mn < Ae.length - 1
                                    ? '&'
                                    : '') +
                                bt;
                        }
                    } else (this.params = new pe()), (this.urlWithParams = Ae);
                }
                serializeBody() {
                    return null === this.body
                        ? null
                        : De(this.body) ||
                          R(this.body) ||
                          te(this.body) ||
                          (function G(rt) {
                              return (
                                  'undefined' != typeof URLSearchParams &&
                                  rt instanceof URLSearchParams
                              );
                          })(this.body) ||
                          'string' == typeof this.body
                        ? this.body
                        : this.body instanceof pe
                        ? this.body.toString()
                        : 'object' == typeof this.body ||
                          'boolean' == typeof this.body ||
                          Array.isArray(this.body)
                        ? JSON.stringify(this.body)
                        : this.body.toString();
                }
                detectContentTypeHeader() {
                    return null === this.body || te(this.body)
                        ? null
                        : R(this.body)
                        ? this.body.type || null
                        : De(this.body)
                        ? null
                        : 'string' == typeof this.body
                        ? 'text/plain'
                        : this.body instanceof pe
                        ? 'application/x-www-form-urlencoded;charset=UTF-8'
                        : 'object' == typeof this.body ||
                          'number' == typeof this.body ||
                          'boolean' == typeof this.body
                        ? 'application/json'
                        : null;
                }
                clone(ge = {}) {
                    var Ae;
                    const ze = ge.method || this.method,
                        Ze = ge.url || this.url,
                        lt = ge.responseType || this.responseType,
                        bt = void 0 !== ge.body ? ge.body : this.body,
                        mn =
                            void 0 !== ge.withCredentials
                                ? ge.withCredentials
                                : this.withCredentials,
                        Kt =
                            void 0 !== ge.reportProgress
                                ? ge.reportProgress
                                : this.reportProgress;
                    let Wt = ge.headers || this.headers,
                        Gn = ge.params || this.params;
                    const yn =
                        null !== (Ae = ge.context) && void 0 !== Ae
                            ? Ae
                            : this.context;
                    return (
                        void 0 !== ge.setHeaders &&
                            (Wt = Object.keys(ge.setHeaders).reduce(
                                (Mn, q) => Mn.set(q, ge.setHeaders[q]),
                                Wt
                            )),
                        ge.setParams &&
                            (Gn = Object.keys(ge.setParams).reduce(
                                (Mn, q) => Mn.set(q, ge.setParams[q]),
                                Gn
                            )),
                        new oe(ze, Ze, bt, {
                            params: Gn,
                            headers: Wt,
                            context: yn,
                            reportProgress: Kt,
                            responseType: lt,
                            withCredentials: mn,
                        })
                    );
                }
            }
            var re = (() => (
                ((re = re || {})[(re.Sent = 0)] = 'Sent'),
                (re[(re.UploadProgress = 1)] = 'UploadProgress'),
                (re[(re.ResponseHeader = 2)] = 'ResponseHeader'),
                (re[(re.DownloadProgress = 3)] = 'DownloadProgress'),
                (re[(re.Response = 4)] = 'Response'),
                (re[(re.User = 5)] = 'User'),
                re
            ))();
            class ne {
                constructor(ge, Ae = 200, ze = 'OK') {
                    (this.headers = ge.headers || new w()),
                        (this.status = void 0 !== ge.status ? ge.status : Ae),
                        (this.statusText = ge.statusText || ze),
                        (this.url = ge.url || null),
                        (this.ok = this.status >= 200 && this.status < 300);
                }
            }
            class we extends ne {
                constructor(ge = {}) {
                    super(ge), (this.type = re.ResponseHeader);
                }
                clone(ge = {}) {
                    return new we({
                        headers: ge.headers || this.headers,
                        status: void 0 !== ge.status ? ge.status : this.status,
                        statusText: ge.statusText || this.statusText,
                        url: ge.url || this.url || void 0,
                    });
                }
            }
            class Fe extends ne {
                constructor(ge = {}) {
                    super(ge),
                        (this.type = re.Response),
                        (this.body = void 0 !== ge.body ? ge.body : null);
                }
                clone(ge = {}) {
                    return new Fe({
                        body: void 0 !== ge.body ? ge.body : this.body,
                        headers: ge.headers || this.headers,
                        status: void 0 !== ge.status ? ge.status : this.status,
                        statusText: ge.statusText || this.statusText,
                        url: ge.url || this.url || void 0,
                    });
                }
            }
            class je extends ne {
                constructor(ge) {
                    super(ge, 0, 'Unknown Error'),
                        (this.name = 'HttpErrorResponse'),
                        (this.ok = !1),
                        (this.message =
                            this.status >= 200 && this.status < 300
                                ? `Http failure during parsing for ${
                                      ge.url || '(unknown url)'
                                  }`
                                : `Http failure response for ${
                                      ge.url || '(unknown url)'
                                  }: ${ge.status} ${ge.statusText}`),
                        (this.error = ge.error || null);
                }
            }
            function We(rt, ge) {
                return {
                    body: ge,
                    headers: rt.headers,
                    context: rt.context,
                    observe: rt.observe,
                    params: rt.params,
                    reportProgress: rt.reportProgress,
                    responseType: rt.responseType,
                    withCredentials: rt.withCredentials,
                };
            }
            let ke = (() => {
                class rt {
                    constructor(Ae) {
                        this.handler = Ae;
                    }
                    request(Ae, ze, Ze = {}) {
                        let lt;
                        if (Ae instanceof oe) lt = Ae;
                        else {
                            let Kt, Wt;
                            (Kt =
                                Ze.headers instanceof w
                                    ? Ze.headers
                                    : new w(Ze.headers)),
                                Ze.params &&
                                    (Wt =
                                        Ze.params instanceof pe
                                            ? Ze.params
                                            : new pe({
                                                  fromObject: Ze.params,
                                              })),
                                (lt = new oe(
                                    Ae,
                                    ze,
                                    void 0 !== Ze.body ? Ze.body : null,
                                    {
                                        headers: Kt,
                                        context: Ze.context,
                                        params: Wt,
                                        reportProgress: Ze.reportProgress,
                                        responseType: Ze.responseType || 'json',
                                        withCredentials: Ze.withCredentials,
                                    }
                                ));
                        }
                        const bt = (0, L.of)(lt).pipe(
                            (0, T.b)((Kt) => this.handler.handle(Kt))
                        );
                        if (Ae instanceof oe || 'events' === Ze.observe)
                            return bt;
                        const mn = bt.pipe((0, S.h)((Kt) => Kt instanceof Fe));
                        switch (Ze.observe || 'body') {
                            case 'body':
                                switch (lt.responseType) {
                                    case 'arraybuffer':
                                        return mn.pipe(
                                            (0, O.U)((Kt) => {
                                                if (
                                                    null !== Kt.body &&
                                                    !(
                                                        Kt.body instanceof
                                                        ArrayBuffer
                                                    )
                                                )
                                                    throw new Error(
                                                        'Response is not an ArrayBuffer.'
                                                    );
                                                return Kt.body;
                                            })
                                        );
                                    case 'blob':
                                        return mn.pipe(
                                            (0, O.U)((Kt) => {
                                                if (
                                                    null !== Kt.body &&
                                                    !(Kt.body instanceof Blob)
                                                )
                                                    throw new Error(
                                                        'Response is not a Blob.'
                                                    );
                                                return Kt.body;
                                            })
                                        );
                                    case 'text':
                                        return mn.pipe(
                                            (0, O.U)((Kt) => {
                                                if (
                                                    null !== Kt.body &&
                                                    'string' != typeof Kt.body
                                                )
                                                    throw new Error(
                                                        'Response is not a string.'
                                                    );
                                                return Kt.body;
                                            })
                                        );
                                    default:
                                        return mn.pipe(
                                            (0, O.U)((Kt) => Kt.body)
                                        );
                                }
                            case 'response':
                                return mn;
                            default:
                                throw new Error(
                                    `Unreachable: unhandled observe type ${Ze.observe}}`
                                );
                        }
                    }
                    delete(Ae, ze = {}) {
                        return this.request('DELETE', Ae, ze);
                    }
                    get(Ae, ze = {}) {
                        return this.request('GET', Ae, ze);
                    }
                    head(Ae, ze = {}) {
                        return this.request('HEAD', Ae, ze);
                    }
                    jsonp(Ae, ze) {
                        return this.request('JSONP', Ae, {
                            params: new pe().append(ze, 'JSONP_CALLBACK'),
                            observe: 'body',
                            responseType: 'json',
                        });
                    }
                    options(Ae, ze = {}) {
                        return this.request('OPTIONS', Ae, ze);
                    }
                    patch(Ae, ze, Ze = {}) {
                        return this.request('PATCH', Ae, We(Ze, ze));
                    }
                    post(Ae, ze, Ze = {}) {
                        return this.request('POST', Ae, We(Ze, ze));
                    }
                    put(Ae, ze, Ze = {}) {
                        return this.request('PUT', Ae, We(Ze, ze));
                    }
                }
                return (
                    (rt.ɵfac = function (Ae) {
                        return new (Ae || rt)(m.LFG(N));
                    }),
                    (rt.ɵprov = m.Yz7({ token: rt, factory: rt.ɵfac })),
                    rt
                );
            })();
            class pt {
                constructor(ge, Ae) {
                    (this.next = ge), (this.interceptor = Ae);
                }
                handle(ge) {
                    return this.interceptor.intercept(ge, this.next);
                }
            }
            const Lt = new m.OlP('HTTP_INTERCEPTORS');
            let hn = (() => {
                class rt {
                    intercept(Ae, ze) {
                        return ze.handle(Ae);
                    }
                }
                return (
                    (rt.ɵfac = function (Ae) {
                        return new (Ae || rt)();
                    }),
                    (rt.ɵprov = m.Yz7({ token: rt, factory: rt.ɵfac })),
                    rt
                );
            })();
            const At = /^\)\]\}',?\n/;
            let st = (() => {
                class rt {
                    constructor(Ae) {
                        this.xhrFactory = Ae;
                    }
                    handle(Ae) {
                        if ('JSONP' === Ae.method)
                            throw new Error(
                                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.'
                            );
                        return new k.y((ze) => {
                            const Ze = this.xhrFactory.build();
                            if (
                                (Ze.open(Ae.method, Ae.urlWithParams),
                                Ae.withCredentials && (Ze.withCredentials = !0),
                                Ae.headers.forEach((q, ue) =>
                                    Ze.setRequestHeader(q, ue.join(','))
                                ),
                                Ae.headers.has('Accept') ||
                                    Ze.setRequestHeader(
                                        'Accept',
                                        'application/json, text/plain, */*'
                                    ),
                                !Ae.headers.has('Content-Type'))
                            ) {
                                const q = Ae.detectContentTypeHeader();
                                null !== q &&
                                    Ze.setRequestHeader('Content-Type', q);
                            }
                            if (Ae.responseType) {
                                const q = Ae.responseType.toLowerCase();
                                Ze.responseType = 'json' !== q ? q : 'text';
                            }
                            const lt = Ae.serializeBody();
                            let bt = null;
                            const mn = () => {
                                    if (null !== bt) return bt;
                                    const q = Ze.statusText || 'OK',
                                        ue = new w(Ze.getAllResponseHeaders()),
                                        Ee =
                                            (function He(rt) {
                                                return 'responseURL' in rt &&
                                                    rt.responseURL
                                                    ? rt.responseURL
                                                    : /^X-Request-URL:/m.test(
                                                          rt.getAllResponseHeaders()
                                                      )
                                                    ? rt.getResponseHeader(
                                                          'X-Request-URL'
                                                      )
                                                    : null;
                                            })(Ze) || Ae.url;
                                    return (
                                        (bt = new we({
                                            headers: ue,
                                            status: Ze.status,
                                            statusText: q,
                                            url: Ee,
                                        })),
                                        bt
                                    );
                                },
                                Kt = () => {
                                    let {
                                            headers: q,
                                            status: ue,
                                            statusText: Ee,
                                            url: Ke,
                                        } = mn(),
                                        ae = null;
                                    204 !== ue &&
                                        (ae =
                                            void 0 === Ze.response
                                                ? Ze.responseText
                                                : Ze.response),
                                        0 === ue && (ue = ae ? 200 : 0);
                                    let Z = ue >= 200 && ue < 300;
                                    if (
                                        'json' === Ae.responseType &&
                                        'string' == typeof ae
                                    ) {
                                        const be = ae;
                                        ae = ae.replace(At, '');
                                        try {
                                            ae =
                                                '' !== ae
                                                    ? JSON.parse(ae)
                                                    : null;
                                        } catch (Ne) {
                                            (ae = be),
                                                Z &&
                                                    ((Z = !1),
                                                    (ae = {
                                                        error: Ne,
                                                        text: ae,
                                                    }));
                                        }
                                    }
                                    Z
                                        ? (ze.next(
                                              new Fe({
                                                  body: ae,
                                                  headers: q,
                                                  status: ue,
                                                  statusText: Ee,
                                                  url: Ke || void 0,
                                              })
                                          ),
                                          ze.complete())
                                        : ze.error(
                                              new je({
                                                  error: ae,
                                                  headers: q,
                                                  status: ue,
                                                  statusText: Ee,
                                                  url: Ke || void 0,
                                              })
                                          );
                                },
                                Wt = (q) => {
                                    const { url: ue } = mn(),
                                        Ee = new je({
                                            error: q,
                                            status: Ze.status || 0,
                                            statusText:
                                                Ze.statusText ||
                                                'Unknown Error',
                                            url: ue || void 0,
                                        });
                                    ze.error(Ee);
                                };
                            let Gn = !1;
                            const yn = (q) => {
                                    Gn || (ze.next(mn()), (Gn = !0));
                                    let ue = {
                                        type: re.DownloadProgress,
                                        loaded: q.loaded,
                                    };
                                    q.lengthComputable && (ue.total = q.total),
                                        'text' === Ae.responseType &&
                                            !!Ze.responseText &&
                                            (ue.partialText = Ze.responseText),
                                        ze.next(ue);
                                },
                                Mn = (q) => {
                                    let ue = {
                                        type: re.UploadProgress,
                                        loaded: q.loaded,
                                    };
                                    q.lengthComputable && (ue.total = q.total),
                                        ze.next(ue);
                                };
                            return (
                                Ze.addEventListener('load', Kt),
                                Ze.addEventListener('error', Wt),
                                Ze.addEventListener('timeout', Wt),
                                Ze.addEventListener('abort', Wt),
                                Ae.reportProgress &&
                                    (Ze.addEventListener('progress', yn),
                                    null !== lt &&
                                        Ze.upload &&
                                        Ze.upload.addEventListener(
                                            'progress',
                                            Mn
                                        )),
                                Ze.send(lt),
                                ze.next({ type: re.Sent }),
                                () => {
                                    Ze.removeEventListener('error', Wt),
                                        Ze.removeEventListener('abort', Wt),
                                        Ze.removeEventListener('load', Kt),
                                        Ze.removeEventListener('timeout', Wt),
                                        Ae.reportProgress &&
                                            (Ze.removeEventListener(
                                                'progress',
                                                yn
                                            ),
                                            null !== lt &&
                                                Ze.upload &&
                                                Ze.upload.removeEventListener(
                                                    'progress',
                                                    Mn
                                                )),
                                        Ze.readyState !== Ze.DONE && Ze.abort();
                                }
                            );
                        });
                    }
                }
                return (
                    (rt.ɵfac = function (Ae) {
                        return new (Ae || rt)(m.LFG(s.JF));
                    }),
                    (rt.ɵprov = m.Yz7({ token: rt, factory: rt.ɵfac })),
                    rt
                );
            })();
            const xt = new m.OlP('XSRF_COOKIE_NAME'),
                Qt = new m.OlP('XSRF_HEADER_NAME');
            class ln {}
            let Bn = (() => {
                    class rt {
                        constructor(Ae, ze, Ze) {
                            (this.doc = Ae),
                                (this.platform = ze),
                                (this.cookieName = Ze),
                                (this.lastCookieString = ''),
                                (this.lastToken = null),
                                (this.parseCount = 0);
                        }
                        getToken() {
                            if ('server' === this.platform) return null;
                            const Ae = this.doc.cookie || '';
                            return (
                                Ae !== this.lastCookieString &&
                                    (this.parseCount++,
                                    (this.lastToken = (0, s.Mx)(
                                        Ae,
                                        this.cookieName
                                    )),
                                    (this.lastCookieString = Ae)),
                                this.lastToken
                            );
                        }
                    }
                    return (
                        (rt.ɵfac = function (Ae) {
                            return new (Ae || rt)(
                                m.LFG(s.K0),
                                m.LFG(m.Lbi),
                                m.LFG(xt)
                            );
                        }),
                        (rt.ɵprov = m.Yz7({ token: rt, factory: rt.ɵfac })),
                        rt
                    );
                })(),
                rn = (() => {
                    class rt {
                        constructor(Ae, ze) {
                            (this.tokenService = Ae), (this.headerName = ze);
                        }
                        intercept(Ae, ze) {
                            const Ze = Ae.url.toLowerCase();
                            if (
                                'GET' === Ae.method ||
                                'HEAD' === Ae.method ||
                                Ze.startsWith('http://') ||
                                Ze.startsWith('https://')
                            )
                                return ze.handle(Ae);
                            const lt = this.tokenService.getToken();
                            return (
                                null !== lt &&
                                    !Ae.headers.has(this.headerName) &&
                                    (Ae = Ae.clone({
                                        headers: Ae.headers.set(
                                            this.headerName,
                                            lt
                                        ),
                                    })),
                                ze.handle(Ae)
                            );
                        }
                    }
                    return (
                        (rt.ɵfac = function (Ae) {
                            return new (Ae || rt)(m.LFG(ln), m.LFG(Qt));
                        }),
                        (rt.ɵprov = m.Yz7({ token: rt, factory: rt.ɵfac })),
                        rt
                    );
                })(),
                gn = (() => {
                    class rt {
                        constructor(Ae, ze) {
                            (this.backend = Ae),
                                (this.injector = ze),
                                (this.chain = null);
                        }
                        handle(Ae) {
                            if (null === this.chain) {
                                const ze = this.injector.get(Lt, []);
                                this.chain = ze.reduceRight(
                                    (Ze, lt) => new pt(Ze, lt),
                                    this.backend
                                );
                            }
                            return this.chain.handle(Ae);
                        }
                    }
                    return (
                        (rt.ɵfac = function (Ae) {
                            return new (Ae || rt)(m.LFG(U), m.LFG(m.zs3));
                        }),
                        (rt.ɵprov = m.Yz7({ token: rt, factory: rt.ɵfac })),
                        rt
                    );
                })(),
                vn = (() => {
                    class rt {
                        static disable() {
                            return {
                                ngModule: rt,
                                providers: [{ provide: rn, useClass: hn }],
                            };
                        }
                        static withOptions(Ae = {}) {
                            return {
                                ngModule: rt,
                                providers: [
                                    Ae.cookieName
                                        ? {
                                              provide: xt,
                                              useValue: Ae.cookieName,
                                          }
                                        : [],
                                    Ae.headerName
                                        ? {
                                              provide: Qt,
                                              useValue: Ae.headerName,
                                          }
                                        : [],
                                ],
                            };
                        }
                    }
                    return (
                        (rt.ɵfac = function (Ae) {
                            return new (Ae || rt)();
                        }),
                        (rt.ɵmod = m.oAB({ type: rt })),
                        (rt.ɵinj = m.cJS({
                            providers: [
                                rn,
                                { provide: Lt, useExisting: rn, multi: !0 },
                                { provide: ln, useClass: Bn },
                                { provide: xt, useValue: 'XSRF-TOKEN' },
                                { provide: Qt, useValue: 'X-XSRF-TOKEN' },
                            ],
                        })),
                        rt
                    );
                })(),
                Dn = (() => {
                    class rt {}
                    return (
                        (rt.ɵfac = function (Ae) {
                            return new (Ae || rt)();
                        }),
                        (rt.ɵmod = m.oAB({ type: rt })),
                        (rt.ɵinj = m.cJS({
                            providers: [
                                ke,
                                { provide: N, useClass: gn },
                                st,
                                { provide: U, useExisting: st },
                            ],
                            imports: [
                                [
                                    vn.withOptions({
                                        cookieName: 'XSRF-TOKEN',
                                        headerName: 'X-XSRF-TOKEN',
                                    }),
                                ],
                            ],
                        })),
                        rt
                    );
                })();
        },
        5e3: (de, Y, f) => {
            f.d(Y, {
                $8M: () => wi,
                $Z: () => lh,
                AFp: () => kg,
                ALo: () => sg,
                AaK: () => N,
                Akn: () => os,
                AsE: () => ju,
                BQk: () => tl,
                CHM: () => es,
                CRH: () => gg,
                CZH: () => dc,
                CqO: () => dh,
                DdM: () => Gp,
                EJc: () => fC,
                EiD: () => ld,
                EpF: () => uh,
                F$t: () => mh,
                F4k: () => ch,
                FYo: () => Lp,
                FiY: () => na,
                G48: () => NC,
                Gf: () => hg,
                GfV: () => kp,
                GkF: () => Ru,
                Gpc: () => F,
                HTZ: () => Jp,
                Hh0: () => qp,
                Hsn: () => _h,
                JOm: () => ws,
                JVY: () => Mm,
                L6k: () => Sm,
                LAX: () => Pm,
                LFG: () => Zn,
                LSH: () => Pl,
                Lbi: () => uC,
                MAs: () => Jf,
                NdJ: () => Fu,
                OlP: () => Fr,
                Oqu: () => Vu,
                PXZ: () => IC,
                PiD: () => bl,
                Q6J: () => Su,
                QGY: () => xu,
                Qsj: () => gD,
                R0b: () => us,
                RDi: () => si,
                Rgc: () => wa,
                SBq: () => Ca,
                Sil: () => pC,
                Suo: () => pg,
                TTD: () => yi,
                TgZ: () => qa,
                Tol: () => Fh,
                Udp: () => ku,
                VKq: () => zp,
                VLi: () => TC,
                W1O: () => vg,
                WLB: () => Kp,
                X6Q: () => FC,
                XFs: () => Nt,
                Xpm: () => et,
                Y36: () => ma,
                YKP: () => jp,
                YNc: () => Qf,
                Yjl: () => X,
                Yz7: () => mt,
                ZZ4: () => Ac,
                _Bn: () => xp,
                _UZ: () => Pu,
                _Vd: () => ul,
                _c5: () => JC,
                _uU: () => jh,
                aQg: () => wc,
                c2e: () => cC,
                cJS: () => nt,
                cg1: () => Hu,
                dDg: () => $g,
                deG: () => kc,
                dqk: () => Wt,
                eBb: () => Om,
                eFA: () => zg,
                ekj: () => Bu,
                f3M: () => Co,
                g9A: () => Ug,
                h0i: () => Yo,
                hGG: () => qC,
                hij: () => rl,
                iGM: () => fg,
                ifc: () => Ze,
                ip1: () => Lg,
                kEZ: () => Yp,
                kL8: () => op,
                kYT: () => Fn,
                l5B: () => Zp,
                lG2: () => se,
                lcZ: () => og,
                mCW: () => sa,
                n5z: () => li,
                oAB: () => xn,
                oJD: () => ud,
                oxw: () => gh,
                pB0: () => Rm,
                q3G: () => $r,
                q4F: () => Bp,
                qLn: () => Ua,
                qOj: () => Du,
                qZA: () => Xa,
                qbA: () => Qp,
                qzn: () => Ao,
                rFY: () => Xp,
                sBO: () => LC,
                sIi: () => pa,
                s_b: () => fl,
                soG: () => hc,
                tBr: () => Fa,
                tb: () => Vg,
                tp0: () => ra,
                uIk: () => Tu,
                vHH: () => Re,
                vpe: () => Ps,
                wAp: () => fn,
                xp6: () => Hd,
                yhl: () => ed,
                ynx: () => el,
                z2F: () => vc,
                z3N: () => Gs,
                zSh: () => mu,
                zs3: () => Ms,
            });
            var s = f(7579),
                m = f(727),
                L = f(8306),
                k = f(6451),
                T = f(3099);
            function S(e) {
                for (let t in e) if (e[t] === S) return t;
                throw Error(
                    'Could not find renamed property on target object.'
                );
            }
            function O(e, t) {
                for (const n in t)
                    t.hasOwnProperty(n) &&
                        !e.hasOwnProperty(n) &&
                        (e[n] = t[n]);
            }
            function N(e) {
                if ('string' == typeof e) return e;
                if (Array.isArray(e)) return '[' + e.map(N).join(', ') + ']';
                if (null == e) return '' + e;
                if (e.overriddenName) return `${e.overriddenName}`;
                if (e.name) return `${e.name}`;
                const t = e.toString();
                if (null == t) return '' + t;
                const n = t.indexOf('\n');
                return -1 === n ? t : t.substring(0, n);
            }
            function U(e, t) {
                return null == e || '' === e
                    ? null === t
                        ? ''
                        : t
                    : null == t || '' === t
                    ? e
                    : e + ' ' + t;
            }
            const w = S({ __forward_ref__: S });
            function F(e) {
                return (
                    (e.__forward_ref__ = F),
                    (e.toString = function () {
                        return N(this());
                    }),
                    e
                );
            }
            function K(e) {
                return fe(e) ? e() : e;
            }
            function fe(e) {
                return (
                    'function' == typeof e &&
                    e.hasOwnProperty(w) &&
                    e.__forward_ref__ === F
                );
            }
            class Re extends Error {
                constructor(t, n) {
                    super(
                        (function Oe(e, t) {
                            return `NG0${Math.abs(e)}${t ? ': ' + t : ''}`;
                        })(t, n)
                    ),
                        (this.code = t);
                }
            }
            function pe(e) {
                return 'string' == typeof e ? e : null == e ? '' : String(e);
            }
            function J(e) {
                return 'function' == typeof e
                    ? e.name || e.toString()
                    : 'object' == typeof e &&
                      null != e &&
                      'function' == typeof e.type
                    ? e.type.name || e.type.toString()
                    : pe(e);
            }
            function R(e, t) {
                const n = t ? ` in ${t}` : '';
                throw new Re(-201, `No provider for ${J(e)} found${n}`);
            }
            function yt(e, t) {
                null == e &&
                    (function Ot(e, t, n, r) {
                        throw new Error(
                            `ASSERTION ERROR: ${e}` +
                                (null == r
                                    ? ''
                                    : ` [Expected=> ${n} ${r} ${t} <=Actual]`)
                        );
                    })(t, e, null, '!=');
            }
            function mt(e) {
                return {
                    token: e.token,
                    providedIn: e.providedIn || null,
                    factory: e.factory,
                    value: void 0,
                };
            }
            function nt(e) {
                return {
                    providers: e.providers || [],
                    imports: e.imports || [],
                };
            }
            function At(e) {
                return He(e, ln) || He(e, rn);
            }
            function He(e, t) {
                return e.hasOwnProperty(t) ? e[t] : null;
            }
            function Qt(e) {
                return e && (e.hasOwnProperty(Bn) || e.hasOwnProperty(gn))
                    ? e[Bn]
                    : null;
            }
            const ln = S({ ɵprov: S }),
                Bn = S({ ɵinj: S }),
                rn = S({ ngInjectableDef: S }),
                gn = S({ ngInjectorDef: S });
            var Nt = (() => (
                ((Nt = Nt || {})[(Nt.Default = 0)] = 'Default'),
                (Nt[(Nt.Host = 1)] = 'Host'),
                (Nt[(Nt.Self = 2)] = 'Self'),
                (Nt[(Nt.SkipSelf = 4)] = 'SkipSelf'),
                (Nt[(Nt.Optional = 8)] = 'Optional'),
                Nt
            ))();
            let Un;
            function Dn(e) {
                const t = Un;
                return (Un = e), t;
            }
            function rr(e, t, n) {
                const r = At(e);
                return r && 'root' == r.providedIn
                    ? void 0 === r.value
                        ? (r.value = r.factory())
                        : r.value
                    : n & Nt.Optional
                    ? null
                    : void 0 !== t
                    ? t
                    : void R(N(e), 'Injector');
            }
            function rt(e) {
                return { toString: e }.toString();
            }
            var ge = (() => (
                    ((ge = ge || {})[(ge.OnPush = 0)] = 'OnPush'),
                    (ge[(ge.Default = 1)] = 'Default'),
                    ge
                ))(),
                Ze = (() => {
                    return (
                        ((e = Ze || (Ze = {}))[(e.Emulated = 0)] = 'Emulated'),
                        (e[(e.None = 2)] = 'None'),
                        (e[(e.ShadowDom = 3)] = 'ShadowDom'),
                        Ze
                    );
                    var e;
                })();
            const lt = 'undefined' != typeof globalThis && globalThis,
                bt = 'undefined' != typeof window && window,
                mn =
                    'undefined' != typeof self &&
                    'undefined' != typeof WorkerGlobalScope &&
                    self instanceof WorkerGlobalScope &&
                    self,
                Wt = lt || ('undefined' != typeof global && global) || bt || mn,
                Mn = {},
                q = [],
                ue = S({ ɵcmp: S }),
                Ee = S({ ɵdir: S }),
                Ke = S({ ɵpipe: S }),
                ae = S({ ɵmod: S }),
                Z = S({ ɵfac: S }),
                be = S({ __NG_ELEMENT_ID__: S });
            let Ne = 0;
            function et(e) {
                return rt(() => {
                    const n = {},
                        r = {
                            type: e.type,
                            providersResolver: null,
                            decls: e.decls,
                            vars: e.vars,
                            factory: null,
                            template: e.template || null,
                            consts: e.consts || null,
                            ngContentSelectors: e.ngContentSelectors,
                            hostBindings: e.hostBindings || null,
                            hostVars: e.hostVars || 0,
                            hostAttrs: e.hostAttrs || null,
                            contentQueries: e.contentQueries || null,
                            declaredInputs: n,
                            inputs: null,
                            outputs: null,
                            exportAs: e.exportAs || null,
                            onPush: e.changeDetection === ge.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            selectors: e.selectors || q,
                            viewQuery: e.viewQuery || null,
                            features: e.features || null,
                            data: e.data || {},
                            encapsulation: e.encapsulation || Ze.Emulated,
                            id: 'c',
                            styles: e.styles || q,
                            _: null,
                            setInput: null,
                            schemas: e.schemas || null,
                            tView: null,
                        },
                        i = e.directives,
                        o = e.features,
                        l = e.pipes;
                    return (
                        (r.id += Ne++),
                        (r.inputs = Le(e.inputs, n)),
                        (r.outputs = Le(e.outputs)),
                        o && o.forEach((h) => h(r)),
                        (r.directiveDefs = i
                            ? () => ('function' == typeof i ? i() : i).map(St)
                            : null),
                        (r.pipeDefs = l
                            ? () => ('function' == typeof l ? l() : l).map(Rt)
                            : null),
                        r
                    );
                });
            }
            function St(e) {
                return (
                    Se(e) ||
                    (function Ye(e) {
                        return e[Ee] || null;
                    })(e)
                );
            }
            function Rt(e) {
                return (function kt(e) {
                    return e[Ke] || null;
                })(e);
            }
            const un = {};
            function xn(e) {
                return rt(() => {
                    const t = {
                        type: e.type,
                        bootstrap: e.bootstrap || q,
                        declarations: e.declarations || q,
                        imports: e.imports || q,
                        exports: e.exports || q,
                        transitiveCompileScopes: null,
                        schemas: e.schemas || null,
                        id: e.id || null,
                    };
                    return null != e.id && (un[e.id] = e.type), t;
                });
            }
            function Fn(e, t) {
                return rt(() => {
                    const n = Vt(e, !0);
                    (n.declarations = t.declarations || q),
                        (n.imports = t.imports || q),
                        (n.exports = t.exports || q);
                });
            }
            function Le(e, t) {
                if (null == e) return Mn;
                const n = {};
                for (const r in e)
                    if (e.hasOwnProperty(r)) {
                        let i = e[r],
                            o = i;
                        Array.isArray(i) && ((o = i[1]), (i = i[0])),
                            (n[i] = r),
                            t && (t[i] = o);
                    }
                return n;
            }
            const se = et;
            function X(e) {
                return {
                    type: e.type,
                    name: e.name,
                    factory: null,
                    pure: !1 !== e.pure,
                    onDestroy: e.type.prototype.ngOnDestroy || null,
                };
            }
            function Se(e) {
                return e[ue] || null;
            }
            function Vt(e, t) {
                const n = e[ae] || null;
                if (!n && !0 === t)
                    throw new Error(
                        `Type ${N(e)} does not have '\u0275mod' property.`
                    );
                return n;
            }
            function Vn(e) {
                return Array.isArray(e) && 'object' == typeof e[1];
            }
            function an(e) {
                return Array.isArray(e) && !0 === e[1];
            }
            function pr(e) {
                return 0 != (8 & e.flags);
            }
            function Cr(e) {
                return 2 == (2 & e.flags);
            }
            function wr(e) {
                return 1 == (1 & e.flags);
            }
            function gr(e) {
                return null !== e.template;
            }
            function Wr(e) {
                return 0 != (512 & e[2]);
            }
            function Zr(e, t) {
                return e.hasOwnProperty(Z) ? e[Z] : null;
            }
            class Hi {
                constructor(t, n, r) {
                    (this.previousValue = t),
                        (this.currentValue = n),
                        (this.firstChange = r);
                }
                isFirstChange() {
                    return this.firstChange;
                }
            }
            function yi() {
                return Xr;
            }
            function Xr(e) {
                return e.type.prototype.ngOnChanges && (e.setInput = cs), ei;
            }
            function ei() {
                const e = $i(this),
                    t = null == e ? void 0 : e.current;
                if (t) {
                    const n = e.previous;
                    if (n === Mn) e.previous = t;
                    else for (let r in t) n[r] = t[r];
                    (e.current = null), this.ngOnChanges(t);
                }
            }
            function cs(e, t, n, r) {
                const i =
                        $i(e) ||
                        (function ti(e, t) {
                            return (e[zr] = t);
                        })(e, { previous: Mn, current: null }),
                    o = i.current || (i.current = {}),
                    l = i.previous,
                    h = this.declaredInputs[n],
                    _ = l[h];
                (o[h] = new Hi(_ && _.currentValue, t, l === Mn)), (e[r] = t);
            }
            yi.ngInherit = !0;
            const zr = '__ngSimpleChanges__';
            function $i(e) {
                return e[zr] || null;
            }
            let Ir;
            function si(e) {
                Ir = e;
            }
            function Pr() {
                return void 0 !== Ir
                    ? Ir
                    : 'undefined' != typeof document
                    ? document
                    : void 0;
            }
            function jn(e) {
                return !!e.listen;
            }
            const C = { createRenderer: (e, t) => Pr() };
            function b(e) {
                for (; Array.isArray(e); ) e = e[0];
                return e;
            }
            function Je(e, t) {
                return b(t[e]);
            }
            function ct(e, t) {
                return b(t[e.index]);
            }
            function cn(e, t) {
                return e.data[t];
            }
            function sn(e, t) {
                return e[t];
            }
            function on(e, t) {
                const n = t[e];
                return Vn(n) ? n : n[0];
            }
            function An(e) {
                return 4 == (4 & e[2]);
            }
            function tr(e) {
                return 128 == (128 & e[2]);
            }
            function Hn(e, t) {
                return null == t ? null : e[t];
            }
            function A(e) {
                e[18] = 0;
            }
            function E(e, t) {
                e[5] += t;
                let n = e,
                    r = e[3];
                for (
                    ;
                    null !== r &&
                    ((1 === t && 1 === n[5]) || (-1 === t && 0 === n[5]));

                )
                    (r[5] += t), (n = r), (r = r[3]);
            }
            const g = { lFrame: Bs(null), bindingsEnabled: !0 };
            function Er() {
                return g.bindingsEnabled;
            }
            function ht() {
                return g.lFrame.lView;
            }
            function Tn() {
                return g.lFrame.tView;
            }
            function es(e) {
                return (g.lFrame.contextLView = e), e[8];
            }
            function ar() {
                let e = Ys();
                for (; null !== e && 64 === e.type; ) e = e.parent;
                return e;
            }
            function Ys() {
                return g.lFrame.currentTNode;
            }
            function Kr(e, t) {
                const n = g.lFrame;
                (n.currentTNode = e), (n.isParent = t);
            }
            function xs() {
                return g.lFrame.isParent;
            }
            function Fs() {
                g.lFrame.isParent = !1;
            }
            function Lr() {
                const e = g.lFrame;
                let t = e.bindingRootIndex;
                return (
                    -1 === t &&
                        (t = e.bindingRootIndex = e.tView.bindingStartIndex),
                    t
                );
            }
            function xi() {
                return g.lFrame.bindingIndex++;
            }
            function di(e) {
                const t = g.lFrame,
                    n = t.bindingIndex;
                return (t.bindingIndex = t.bindingIndex + e), n;
            }
            function Ns(e, t) {
                const n = g.lFrame;
                (n.bindingIndex = n.bindingRootIndex = e), fs(t);
            }
            function fs(e) {
                g.lFrame.currentDirectiveIndex = e;
            }
            function ks() {
                return g.lFrame.currentQueryIndex;
            }
            function ps(e) {
                g.lFrame.currentQueryIndex = e;
            }
            function gs(e) {
                const t = e[1];
                return 2 === t.type ? t.declTNode : 1 === t.type ? e[6] : null;
            }
            function ms(e, t, n) {
                if (n & Nt.SkipSelf) {
                    let i = t,
                        o = e;
                    for (
                        ;
                        !((i = i.parent),
                        null !== i ||
                            n & Nt.Host ||
                            ((i = gs(o)),
                            null === i || ((o = o[15]), 10 & i.type)));

                    );
                    if (null === i) return !1;
                    (t = i), (e = o);
                }
                const r = (g.lFrame = Js());
                return (r.currentTNode = t), (r.lView = e), !0;
            }
            function ts(e) {
                const t = Js(),
                    n = e[1];
                (g.lFrame = t),
                    (t.currentTNode = n.firstChild),
                    (t.lView = e),
                    (t.tView = n),
                    (t.contextLView = e),
                    (t.bindingIndex = n.bindingStartIndex),
                    (t.inI18n = !1);
            }
            function Js() {
                const e = g.lFrame,
                    t = null === e ? null : e.child;
                return null === t ? Bs(e) : t;
            }
            function Bs(e) {
                const t = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: e,
                    child: null,
                    inI18n: !1,
                };
                return null !== e && (e.child = t), t;
            }
            function qs() {
                const e = g.lFrame;
                return (
                    (g.lFrame = e.parent),
                    (e.currentTNode = null),
                    (e.lView = null),
                    e
                );
            }
            const _s = qs;
            function zi() {
                const e = qs();
                (e.isParent = !0),
                    (e.tView = null),
                    (e.selectedIndex = -1),
                    (e.contextLView = null),
                    (e.elementDepthCount = 0),
                    (e.currentDirectiveIndex = -1),
                    (e.currentNamespace = null),
                    (e.bindingRootIndex = -1),
                    (e.bindingIndex = -1),
                    (e.currentQueryIndex = 0);
            }
            function Vr() {
                return g.lFrame.selectedIndex;
            }
            function Fi(e) {
                g.lFrame.selectedIndex = e;
            }
            function hr() {
                const e = g.lFrame;
                return cn(e.tView, e.selectedIndex);
            }
            function Es(e, t) {
                for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) {
                    const o = e.data[n].type.prototype,
                        {
                            ngAfterContentInit: l,
                            ngAfterContentChecked: h,
                            ngAfterViewInit: _,
                            ngAfterViewChecked: x,
                            ngOnDestroy: V,
                        } = o;
                    l && (e.contentHooks || (e.contentHooks = [])).push(-n, l),
                        h &&
                            ((e.contentHooks || (e.contentHooks = [])).push(
                                n,
                                h
                            ),
                            (
                                e.contentCheckHooks ||
                                (e.contentCheckHooks = [])
                            ).push(n, h)),
                        _ && (e.viewHooks || (e.viewHooks = [])).push(-n, _),
                        x &&
                            ((e.viewHooks || (e.viewHooks = [])).push(n, x),
                            (e.viewCheckHooks || (e.viewCheckHooks = [])).push(
                                n,
                                x
                            )),
                        null != V &&
                            (e.destroyHooks || (e.destroyHooks = [])).push(
                                n,
                                V
                            );
                }
            }
            function Ds(e, t, n) {
                ns(e, t, 3, n);
            }
            function Mr(e, t, n, r) {
                (3 & e[2]) === n && ns(e, t, n, r);
            }
            function Dr(e, t) {
                let n = e[2];
                (3 & n) === t && ((n &= 2047), (n += 1), (e[2] = n));
            }
            function ns(e, t, n, r) {
                const o = null != r ? r : -1,
                    l = t.length - 1;
                let h = 0;
                for (let _ = void 0 !== r ? 65535 & e[18] : 0; _ < l; _++)
                    if ('number' == typeof t[_ + 1]) {
                        if (((h = t[_]), null != r && h >= r)) break;
                    } else
                        t[_] < 0 && (e[18] += 65536),
                            (h < o || -1 == o) &&
                                (Cs(e, n, t, _),
                                (e[18] = (4294901760 & e[18]) + _ + 2)),
                            _++;
            }
            function Cs(e, t, n, r) {
                const i = n[r] < 0,
                    o = n[r + 1],
                    h = e[i ? -n[r] : n[r]];
                if (i) {
                    if (e[2] >> 11 < e[18] >> 16 && (3 & e[2]) === t) {
                        e[2] += 2048;
                        try {
                            o.call(h);
                        } finally {
                        }
                    }
                } else
                    try {
                        o.call(h);
                    } finally {
                    }
            }
            class fi {
                constructor(t, n, r) {
                    (this.factory = t),
                        (this.resolving = !1),
                        (this.canSeeViewProviders = n),
                        (this.injectImpl = r);
                }
            }
            function Q(e, t, n) {
                const r = jn(e);
                let i = 0;
                for (; i < n.length; ) {
                    const o = n[i];
                    if ('number' == typeof o) {
                        if (0 !== o) break;
                        i++;
                        const l = n[i++],
                            h = n[i++],
                            _ = n[i++];
                        r
                            ? e.setAttribute(t, h, _, l)
                            : t.setAttributeNS(l, h, _);
                    } else {
                        const l = o,
                            h = n[++i];
                        ye(l)
                            ? r && e.setProperty(t, l, h)
                            : r
                            ? e.setAttribute(t, l, h)
                            : t.setAttribute(l, h),
                            i++;
                    }
                }
                return i;
            }
            function me(e) {
                return 3 === e || 4 === e || 6 === e;
            }
            function ye(e) {
                return 64 === e.charCodeAt(0);
            }
            function Ue(e, t) {
                if (null !== t && 0 !== t.length)
                    if (null === e || 0 === e.length) e = t.slice();
                    else {
                        let n = -1;
                        for (let r = 0; r < t.length; r++) {
                            const i = t[r];
                            'number' == typeof i
                                ? (n = i)
                                : 0 === n ||
                                  ot(
                                      e,
                                      n,
                                      i,
                                      null,
                                      -1 === n || 2 === n ? t[++r] : null
                                  );
                        }
                    }
                return e;
            }
            function ot(e, t, n, r, i) {
                let o = 0,
                    l = e.length;
                if (-1 === t) l = -1;
                else
                    for (; o < e.length; ) {
                        const h = e[o++];
                        if ('number' == typeof h) {
                            if (h === t) {
                                l = -1;
                                break;
                            }
                            if (h > t) {
                                l = o - 1;
                                break;
                            }
                        }
                    }
                for (; o < e.length; ) {
                    const h = e[o];
                    if ('number' == typeof h) break;
                    if (h === n) {
                        if (null === r)
                            return void (null !== i && (e[o + 1] = i));
                        if (r === e[o + 1]) return void (e[o + 2] = i);
                    }
                    o++, null !== r && o++, null !== i && o++;
                }
                -1 !== l && (e.splice(l, 0, t), (o = l + 1)),
                    e.splice(o++, 0, n),
                    null !== r && e.splice(o++, 0, r),
                    null !== i && e.splice(o++, 0, i);
            }
            function Bt(e) {
                return -1 !== e;
            }
            function Ht(e) {
                return 32767 & e;
            }
            function pn(e, t) {
                let n = (function _n(e) {
                        return e >> 16;
                    })(e),
                    r = t;
                for (; n > 0; ) (r = r[15]), n--;
                return r;
            }
            let qt = !0;
            function dn(e) {
                const t = qt;
                return (qt = e), t;
            }
            let jr = 0;
            function hi(e, t) {
                const n = p(e, t);
                if (-1 !== n) return n;
                const r = t[1];
                r.firstCreatePass &&
                    ((e.injectorIndex = t.length),
                    Jr(r.data, e),
                    Jr(t, null),
                    Jr(r.blueprint, null));
                const i = d(e, t),
                    o = e.injectorIndex;
                if (Bt(i)) {
                    const l = Ht(i),
                        h = pn(i, t),
                        _ = h[1].data;
                    for (let x = 0; x < 8; x++) t[o + x] = h[l + x] | _[l + x];
                }
                return (t[o + 8] = i), o;
            }
            function Jr(e, t) {
                e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
            }
            function p(e, t) {
                return -1 === e.injectorIndex ||
                    (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
                    null === t[e.injectorIndex + 8]
                    ? -1
                    : e.injectorIndex;
            }
            function d(e, t) {
                if (e.parent && -1 !== e.parent.injectorIndex)
                    return e.parent.injectorIndex;
                let n = 0,
                    r = null,
                    i = t;
                for (; null !== i; ) {
                    const o = i[1],
                        l = o.type;
                    if (
                        ((r = 2 === l ? o.declTNode : 1 === l ? i[6] : null),
                        null === r)
                    )
                        return -1;
                    if ((n++, (i = i[15]), -1 !== r.injectorIndex))
                        return r.injectorIndex | (n << 16);
                }
                return -1;
            }
            function c(e, t, n) {
                !(function br(e, t, n) {
                    let r;
                    'string' == typeof n
                        ? (r = n.charCodeAt(0) || 0)
                        : n.hasOwnProperty(be) && (r = n[be]),
                        null == r && (r = n[be] = jr++);
                    const i = 255 & r;
                    t.data[e + (i >> 5)] |= 1 << i;
                })(e, t, n);
            }
            function P(e, t, n) {
                if (n & Nt.Optional) return e;
                R(t, 'NodeInjector');
            }
            function $(e, t, n, r) {
                if (
                    (n & Nt.Optional && void 0 === r && (r = null),
                    0 == (n & (Nt.Self | Nt.Host)))
                ) {
                    const i = e[9],
                        o = Dn(void 0);
                    try {
                        return i
                            ? i.get(t, r, n & Nt.Optional)
                            : rr(t, r, n & Nt.Optional);
                    } finally {
                        Dn(o);
                    }
                }
                return P(r, t, n);
            }
            function ie(e, t, n, r = Nt.Default, i) {
                if (null !== e) {
                    const o = (function Yt(e) {
                        if ('string' == typeof e) return e.charCodeAt(0) || 0;
                        const t = e.hasOwnProperty(be) ? e[be] : void 0;
                        return 'number' == typeof t
                            ? t >= 0
                                ? 255 & t
                                : Xe
                            : t;
                    })(n);
                    if ('function' == typeof o) {
                        if (!ms(t, e, r))
                            return r & Nt.Host ? P(i, n, r) : $(t, n, r, i);
                        try {
                            const l = o(r);
                            if (null != l || r & Nt.Optional) return l;
                            R(n);
                        } finally {
                            _s();
                        }
                    } else if ('number' == typeof o) {
                        let l = null,
                            h = p(e, t),
                            _ = -1,
                            x = r & Nt.Host ? t[16][6] : null;
                        for (
                            (-1 === h || r & Nt.SkipSelf) &&
                            ((_ = -1 === h ? d(e, t) : t[h + 8]),
                            -1 !== _ && Tr(r, !1)
                                ? ((l = t[1]), (h = Ht(_)), (t = pn(_, t)))
                                : (h = -1));
                            -1 !== h;

                        ) {
                            const V = t[1];
                            if (en(o, h, V.data)) {
                                const ee = it(h, t, n, l, r, x);
                                if (ee !== ve) return ee;
                            }
                            (_ = t[h + 8]),
                                -1 !== _ &&
                                Tr(r, t[1].data[h + 8] === x) &&
                                en(o, h, t)
                                    ? ((l = V), (h = Ht(_)), (t = pn(_, t)))
                                    : (h = -1);
                        }
                    }
                }
                return $(t, n, r, i);
            }
            const ve = {};
            function Xe() {
                return new lr(ar(), ht());
            }
            function it(e, t, n, r, i, o) {
                const l = t[1],
                    h = l.data[e + 8],
                    V = Dt(
                        h,
                        l,
                        n,
                        null == r ? Cr(h) && qt : r != l && 0 != (3 & h.type),
                        i & Nt.Host && o === h
                    );
                return null !== V ? dt(t, l, V, h) : ve;
            }
            function Dt(e, t, n, r, i) {
                const o = e.providerIndexes,
                    l = t.data,
                    h = 1048575 & o,
                    _ = e.directiveStart,
                    V = o >> 20,
                    Te = i ? h + V : e.directiveEnd;
                for (let Ve = r ? h : h + V; Ve < Te; Ve++) {
                    const at = l[Ve];
                    if ((Ve < _ && n === at) || (Ve >= _ && at.type === n))
                        return Ve;
                }
                if (i) {
                    const Ve = l[_];
                    if (Ve && gr(Ve) && Ve.type === n) return _;
                }
                return null;
            }
            function dt(e, t, n, r) {
                let i = e[n];
                const o = t.data;
                if (
                    (function bs(e) {
                        return e instanceof fi;
                    })(i)
                ) {
                    const l = i;
                    l.resolving &&
                        (function Me(e, t) {
                            const n = t
                                ? `. Dependency path: ${t.join(' > ')} > ${e}`
                                : '';
                            throw new Re(
                                -200,
                                `Circular dependency in DI detected for ${e}${n}`
                            );
                        })(J(o[n]));
                    const h = dn(l.canSeeViewProviders);
                    l.resolving = !0;
                    const _ = l.injectImpl ? Dn(l.injectImpl) : null;
                    ms(e, r, Nt.Default);
                    try {
                        (i = e[n] = l.factory(void 0, o, e, r)),
                            t.firstCreatePass &&
                                n >= r.directiveStart &&
                                (function Xs(e, t, n) {
                                    const {
                                        ngOnChanges: r,
                                        ngOnInit: i,
                                        ngDoCheck: o,
                                    } = t.type.prototype;
                                    if (r) {
                                        const l = Xr(t);
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(e, l),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, l);
                                    }
                                    i &&
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(0 - e, i),
                                        o &&
                                            ((
                                                n.preOrderHooks ||
                                                (n.preOrderHooks = [])
                                            ).push(e, o),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, o));
                                })(n, o[n], t);
                    } finally {
                        null !== _ && Dn(_), dn(h), (l.resolving = !1), _s();
                    }
                }
                return i;
            }
            function en(e, t, n) {
                return !!(n[t + (e >> 5)] & (1 << e));
            }
            function Tr(e, t) {
                return !(e & Nt.Self || (e & Nt.Host && t));
            }
            class lr {
                constructor(t, n) {
                    (this._tNode = t), (this._lView = n);
                }
                get(t, n, r) {
                    return ie(this._tNode, this._lView, t, r, n);
                }
            }
            function li(e) {
                return rt(() => {
                    const t = e.prototype.constructor,
                        n = t[Z] || er(t),
                        r = Object.prototype;
                    let i = Object.getPrototypeOf(e.prototype).constructor;
                    for (; i && i !== r; ) {
                        const o = i[Z] || er(i);
                        if (o && o !== n) return o;
                        i = Object.getPrototypeOf(i);
                    }
                    return (o) => new o();
                });
            }
            function er(e) {
                return fe(e)
                    ? () => {
                          const t = er(K(e));
                          return t && t();
                      }
                    : Zr(e);
            }
            function wi(e) {
                return (function D(e, t) {
                    if ('class' === t) return e.classes;
                    if ('style' === t) return e.styles;
                    const n = e.attrs;
                    if (n) {
                        const r = n.length;
                        let i = 0;
                        for (; i < r; ) {
                            const o = n[i];
                            if (me(o)) break;
                            if (0 === o) i += 2;
                            else if ('number' == typeof o)
                                for (i++; i < r && 'string' == typeof n[i]; )
                                    i++;
                            else {
                                if (o === t) return n[i + 1];
                                i += 2;
                            }
                        }
                    }
                    return null;
                })(ar(), e);
            }
            const Rr = '__parameters__';
            function Yi(e, t, n) {
                return rt(() => {
                    const r = (function Ni(e) {
                        return function (...n) {
                            if (e) {
                                const r = e(...n);
                                for (const i in r) this[i] = r[i];
                            }
                        };
                    })(t);
                    function i(...o) {
                        if (this instanceof i) return r.apply(this, o), this;
                        const l = new i(...o);
                        return (h.annotation = l), h;
                        function h(_, x, V) {
                            const ee = _.hasOwnProperty(Rr)
                                ? _[Rr]
                                : Object.defineProperty(_, Rr, { value: [] })[
                                      Rr
                                  ];
                            for (; ee.length <= V; ) ee.push(null);
                            return (ee[V] = ee[V] || []).push(l), _;
                        }
                    }
                    return (
                        n && (i.prototype = Object.create(n.prototype)),
                        (i.prototype.ngMetadataName = e),
                        (i.annotationCls = i),
                        i
                    );
                });
            }
            class Fr {
                constructor(t, n) {
                    (this._desc = t),
                        (this.ngMetadataName = 'InjectionToken'),
                        (this.ɵprov = void 0),
                        'number' == typeof n
                            ? (this.__NG_ELEMENT_ID__ = n)
                            : void 0 !== n &&
                              (this.ɵprov = mt({
                                  token: this,
                                  providedIn: n.providedIn || 'root',
                                  factory: n.factory,
                              }));
                }
                toString() {
                    return `InjectionToken ${this._desc}`;
                }
            }
            const kc = new Fr('AnalyzeForEntryComponents');
            function vi(e, t) {
                void 0 === t && (t = e);
                for (let n = 0; n < e.length; n++) {
                    let r = e[n];
                    Array.isArray(r)
                        ? (t === e && (t = e.slice(0, n)), vi(r, t))
                        : t !== e && t.push(r);
                }
                return t;
            }
            function Mi(e, t) {
                e.forEach((n) => (Array.isArray(n) ? Mi(n, t) : t(n)));
            }
            function ea(e, t, n) {
                t >= e.length ? e.push(n) : e.splice(t, 0, n);
            }
            function eo(e, t) {
                return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
            }
            function js(e, t) {
                const n = [];
                for (let r = 0; r < e; r++) n.push(t);
                return n;
            }
            function pi(e, t, n) {
                let r = to(e, t);
                return (
                    r >= 0
                        ? (e[1 | r] = n)
                        : ((r = ~r),
                          (function $c(e, t, n, r) {
                              let i = e.length;
                              if (i == t) e.push(n, r);
                              else if (1 === i) e.push(r, e[0]), (e[0] = n);
                              else {
                                  for (i--, e.push(e[i - 1], e[i]); i > t; )
                                      (e[i] = e[i - 2]), i--;
                                  (e[t] = n), (e[t + 1] = r);
                              }
                          })(e, r, t, n)),
                    r
                );
            }
            function ta(e, t) {
                const n = to(e, t);
                if (n >= 0) return e[1 | n];
            }
            function to(e, t) {
                return (function Sa(e, t, n) {
                    let r = 0,
                        i = e.length >> n;
                    for (; i !== r; ) {
                        const o = r + ((i - r) >> 1),
                            l = e[o << n];
                        if (t === l) return o << n;
                        l > t ? (i = o) : (r = o + 1);
                    }
                    return ~(i << n);
                })(e, t, 1);
            }
            const W = {},
                le = '__NG_DI_FLAG__',
                Be = 'ngTempTokenPath',
                Tt = /\n/gm,
                En = '__source',
                bn = S({ provide: String, useValue: S });
            let kn;
            function wn(e) {
                const t = kn;
                return (kn = e), t;
            }
            function Si(e, t = Nt.Default) {
                if (void 0 === kn) throw new Re(203, '');
                return null === kn
                    ? rr(e, void 0, t)
                    : kn.get(e, t & Nt.Optional ? null : void 0, t);
            }
            function Zn(e, t = Nt.Default) {
                return (
                    (function vn() {
                        return Un;
                    })() || Si
                )(K(e), t);
            }
            const Co = Zn;
            function Ws(e) {
                const t = [];
                for (let n = 0; n < e.length; n++) {
                    const r = K(e[n]);
                    if (Array.isArray(r)) {
                        if (0 === r.length) throw new Re(900, '');
                        let i,
                            o = Nt.Default;
                        for (let l = 0; l < r.length; l++) {
                            const h = r[l],
                                _ = ro(h);
                            'number' == typeof _
                                ? -1 === _
                                    ? (i = h.token)
                                    : (o |= _)
                                : (i = h);
                        }
                        t.push(Zn(i, o));
                    } else t.push(Zn(r));
                }
                return t;
            }
            function Li(e, t) {
                return (e[le] = t), (e.prototype[le] = t), e;
            }
            function ro(e) {
                return e[le];
            }
            const Fa = Li(
                    Yi('Inject', (e) => ({ token: e })),
                    -1
                ),
                na = Li(Yi('Optional'), 8),
                bl = Li(Yi('Self'), 2),
                ra = Li(Yi('SkipSelf'), 4);
            let La, ka;
            function To(e) {
                var t;
                return (
                    (null ===
                        (t = (function Al() {
                            if (void 0 === La && ((La = null), Wt.trustedTypes))
                                try {
                                    La = Wt.trustedTypes.createPolicy(
                                        'angular',
                                        {
                                            createHTML: (e) => e,
                                            createScript: (e) => e,
                                            createScriptURL: (e) => e,
                                        }
                                    );
                                } catch (e) {}
                            return La;
                        })()) || void 0 === t
                        ? void 0
                        : t.createHTML(e)) || e
                );
            }
            function Jc(e) {
                var t;
                return (
                    (null ===
                        (t = (function wl() {
                            if (void 0 === ka && ((ka = null), Wt.trustedTypes))
                                try {
                                    ka = Wt.trustedTypes.createPolicy(
                                        'angular#unsafe-bypass',
                                        {
                                            createHTML: (e) => e,
                                            createScript: (e) => e,
                                            createScriptURL: (e) => e,
                                        }
                                    );
                                } catch (e) {}
                            return ka;
                        })()) || void 0 === t
                        ? void 0
                        : t.createHTML(e)) || e
                );
            }
            class fo {
                constructor(t) {
                    this.changingThisBreaksApplicationSecurity = t;
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
                }
            }
            class bm extends fo {
                getTypeName() {
                    return 'HTML';
                }
            }
            class Tm extends fo {
                getTypeName() {
                    return 'Style';
                }
            }
            class Am extends fo {
                getTypeName() {
                    return 'Script';
                }
            }
            class wm extends fo {
                getTypeName() {
                    return 'URL';
                }
            }
            class Im extends fo {
                getTypeName() {
                    return 'ResourceURL';
                }
            }
            function Gs(e) {
                return e instanceof fo
                    ? e.changingThisBreaksApplicationSecurity
                    : e;
            }
            function Ao(e, t) {
                const n = ed(e);
                if (null != n && n !== t) {
                    if ('ResourceURL' === n && 'URL' === t) return !0;
                    throw new Error(
                        `Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`
                    );
                }
                return n === t;
            }
            function ed(e) {
                return (e instanceof fo && e.getTypeName()) || null;
            }
            function Mm(e) {
                return new bm(e);
            }
            function Sm(e) {
                return new Tm(e);
            }
            function Om(e) {
                return new Am(e);
            }
            function Pm(e) {
                return new wm(e);
            }
            function Rm(e) {
                return new Im(e);
            }
            class xm {
                constructor(t) {
                    this.inertDocumentHelper = t;
                }
                getInertBodyElement(t) {
                    t = '<body><remove></remove>' + t;
                    try {
                        const n = new window.DOMParser().parseFromString(
                            To(t),
                            'text/html'
                        ).body;
                        return null === n
                            ? this.inertDocumentHelper.getInertBodyElement(t)
                            : (n.removeChild(n.firstChild), n);
                    } catch (n) {
                        return null;
                    }
                }
            }
            class Fm {
                constructor(t) {
                    if (
                        ((this.defaultDoc = t),
                        (this.inertDocument =
                            this.defaultDoc.implementation.createHTMLDocument(
                                'sanitization-inert'
                            )),
                        null == this.inertDocument.body)
                    ) {
                        const n = this.inertDocument.createElement('html');
                        this.inertDocument.appendChild(n);
                        const r = this.inertDocument.createElement('body');
                        n.appendChild(r);
                    }
                }
                getInertBodyElement(t) {
                    const n = this.inertDocument.createElement('template');
                    if ('content' in n) return (n.innerHTML = To(t)), n;
                    const r = this.inertDocument.createElement('body');
                    return (
                        (r.innerHTML = To(t)),
                        this.defaultDoc.documentMode &&
                            this.stripCustomNsAttrs(r),
                        r
                    );
                }
                stripCustomNsAttrs(t) {
                    const n = t.attributes;
                    for (let i = n.length - 1; 0 < i; i--) {
                        const l = n.item(i).name;
                        ('xmlns:ns1' === l || 0 === l.indexOf('ns1:')) &&
                            t.removeAttribute(l);
                    }
                    let r = t.firstChild;
                    for (; r; )
                        r.nodeType === Node.ELEMENT_NODE &&
                            this.stripCustomNsAttrs(r),
                            (r = r.nextSibling);
                }
            }
            const Lm =
                    /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
                km =
                    /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
            function sa(e) {
                return (e = String(e)).match(Lm) || e.match(km)
                    ? e
                    : 'unsafe:' + e;
            }
            function Ts(e) {
                const t = {};
                for (const n of e.split(',')) t[n] = !0;
                return t;
            }
            function oa(...e) {
                const t = {};
                for (const n of e)
                    for (const r in n) n.hasOwnProperty(r) && (t[r] = !0);
                return t;
            }
            const rd = Ts('area,br,col,hr,img,wbr'),
                id = Ts('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
                sd = Ts('rp,rt'),
                Il = oa(
                    rd,
                    oa(
                        id,
                        Ts(
                            'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'
                        )
                    ),
                    oa(
                        sd,
                        Ts(
                            'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'
                        )
                    ),
                    oa(sd, id)
                ),
                Ml = Ts(
                    'background,cite,href,itemtype,longdesc,poster,src,xlink:href'
                ),
                Sl = Ts('srcset'),
                od = oa(
                    Ml,
                    Sl,
                    Ts(
                        'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width'
                    ),
                    Ts(
                        'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'
                    )
                ),
                Bm = Ts('script,style,template');
            class Um {
                constructor() {
                    (this.sanitizedSomething = !1), (this.buf = []);
                }
                sanitizeChildren(t) {
                    let n = t.firstChild,
                        r = !0;
                    for (; n; )
                        if (
                            (n.nodeType === Node.ELEMENT_NODE
                                ? (r = this.startElement(n))
                                : n.nodeType === Node.TEXT_NODE
                                ? this.chars(n.nodeValue)
                                : (this.sanitizedSomething = !0),
                            r && n.firstChild)
                        )
                            n = n.firstChild;
                        else
                            for (; n; ) {
                                n.nodeType === Node.ELEMENT_NODE &&
                                    this.endElement(n);
                                let i = this.checkClobberedElement(
                                    n,
                                    n.nextSibling
                                );
                                if (i) {
                                    n = i;
                                    break;
                                }
                                n = this.checkClobberedElement(n, n.parentNode);
                            }
                    return this.buf.join('');
                }
                startElement(t) {
                    const n = t.nodeName.toLowerCase();
                    if (!Il.hasOwnProperty(n))
                        return (
                            (this.sanitizedSomething = !0),
                            !Bm.hasOwnProperty(n)
                        );
                    this.buf.push('<'), this.buf.push(n);
                    const r = t.attributes;
                    for (let i = 0; i < r.length; i++) {
                        const o = r.item(i),
                            l = o.name,
                            h = l.toLowerCase();
                        if (!od.hasOwnProperty(h)) {
                            this.sanitizedSomething = !0;
                            continue;
                        }
                        let _ = o.value;
                        Ml[h] && (_ = sa(_)),
                            Sl[h] &&
                                ((e = _),
                                (_ = (e = String(e))
                                    .split(',')
                                    .map((t) => sa(t.trim()))
                                    .join(', '))),
                            this.buf.push(' ', l, '="', ad(_), '"');
                    }
                    var e;
                    return this.buf.push('>'), !0;
                }
                endElement(t) {
                    const n = t.nodeName.toLowerCase();
                    Il.hasOwnProperty(n) &&
                        !rd.hasOwnProperty(n) &&
                        (this.buf.push('</'),
                        this.buf.push(n),
                        this.buf.push('>'));
                }
                chars(t) {
                    this.buf.push(ad(t));
                }
                checkClobberedElement(t, n) {
                    if (
                        n &&
                        (t.compareDocumentPosition(n) &
                            Node.DOCUMENT_POSITION_CONTAINED_BY) ===
                            Node.DOCUMENT_POSITION_CONTAINED_BY
                    )
                        throw new Error(
                            `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`
                        );
                    return n;
                }
            }
            const Vm = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                jm = /([^\#-~ |!])/g;
            function ad(e) {
                return e
                    .replace(/&/g, '&amp;')
                    .replace(Vm, function (t) {
                        return (
                            '&#' +
                            (1024 * (t.charCodeAt(0) - 55296) +
                                (t.charCodeAt(1) - 56320) +
                                65536) +
                            ';'
                        );
                    })
                    .replace(jm, function (t) {
                        return '&#' + t.charCodeAt(0) + ';';
                    })
                    .replace(/</g, '&lt;')
                    .replace(/>/g, '&gt;');
            }
            let Ba;
            function ld(e, t) {
                let n = null;
                try {
                    Ba =
                        Ba ||
                        (function td(e) {
                            const t = new Fm(e);
                            return (function Nm() {
                                try {
                                    return !!new window.DOMParser().parseFromString(
                                        To(''),
                                        'text/html'
                                    );
                                } catch (e) {
                                    return !1;
                                }
                            })()
                                ? new xm(t)
                                : t;
                        })(e);
                    let r = t ? String(t) : '';
                    n = Ba.getInertBodyElement(r);
                    let i = 5,
                        o = r;
                    do {
                        if (0 === i)
                            throw new Error(
                                'Failed to sanitize html because the input is unstable'
                            );
                        i--,
                            (r = o),
                            (o = n.innerHTML),
                            (n = Ba.getInertBodyElement(r));
                    } while (r !== o);
                    return To(new Um().sanitizeChildren(Ol(n) || n));
                } finally {
                    if (n) {
                        const r = Ol(n) || n;
                        for (; r.firstChild; ) r.removeChild(r.firstChild);
                    }
                }
            }
            function Ol(e) {
                return 'content' in e &&
                    (function Hm(e) {
                        return (
                            e.nodeType === Node.ELEMENT_NODE &&
                            'TEMPLATE' === e.nodeName
                        );
                    })(e)
                    ? e.content
                    : null;
            }
            var $r = (() => (
                (($r = $r || {})[($r.NONE = 0)] = 'NONE'),
                ($r[($r.HTML = 1)] = 'HTML'),
                ($r[($r.STYLE = 2)] = 'STYLE'),
                ($r[($r.SCRIPT = 3)] = 'SCRIPT'),
                ($r[($r.URL = 4)] = 'URL'),
                ($r[($r.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
                $r
            ))();
            function ud(e) {
                const t = aa();
                return t
                    ? Jc(t.sanitize($r.HTML, e) || '')
                    : Ao(e, 'HTML')
                    ? Jc(Gs(e))
                    : ld(Pr(), pe(e));
            }
            function Pl(e) {
                const t = aa();
                return t
                    ? t.sanitize($r.URL, e) || ''
                    : Ao(e, 'URL')
                    ? Gs(e)
                    : sa(pe(e));
            }
            function aa() {
                const e = ht();
                return e && e[12];
            }
            const fd = '__ngContext__';
            function gi(e, t) {
                e[fd] = t;
            }
            function xl(e) {
                const t = (function la(e) {
                    return e[fd] || null;
                })(e);
                return t ? (Array.isArray(t) ? t : t.lView) : null;
            }
            function Nl(e) {
                return e.ngOriginalError;
            }
            function i_(e, ...t) {
                e.error(...t);
            }
            class Ua {
                constructor() {
                    this._console = console;
                }
                handleError(t) {
                    const n = this._findOriginalError(t),
                        r = (function r_(e) {
                            return (e && e.ngErrorLogger) || i_;
                        })(t);
                    r(this._console, 'ERROR', t),
                        n && r(this._console, 'ORIGINAL ERROR', n);
                }
                _findOriginalError(t) {
                    let n = t && Nl(t);
                    for (; n && Nl(n); ) n = Nl(n);
                    return n || null;
                }
            }
            const p_ = (() =>
                (
                    ('undefined' != typeof requestAnimationFrame &&
                        requestAnimationFrame) ||
                    setTimeout
                ).bind(Wt))();
            function As(e) {
                return e instanceof Function ? e() : e;
            }
            var ws = (() => (
                ((ws = ws || {})[(ws.Important = 1)] = 'Important'),
                (ws[(ws.DashCase = 2)] = 'DashCase'),
                ws
            ))();
            function kl(e, t) {
                return undefined(e, t);
            }
            function ua(e) {
                const t = e[3];
                return an(t) ? t[3] : t;
            }
            function Bl(e) {
                return Dd(e[13]);
            }
            function Ul(e) {
                return Dd(e[4]);
            }
            function Dd(e) {
                for (; null !== e && !an(e); ) e = e[4];
                return e;
            }
            function Io(e, t, n, r, i) {
                if (null != r) {
                    let o,
                        l = !1;
                    an(r) ? (o = r) : Vn(r) && ((l = !0), (r = r[0]));
                    const h = b(r);
                    0 === e && null !== n
                        ? null == i
                            ? Id(t, n, h)
                            : ho(t, n, h, i || null, !0)
                        : 1 === e && null !== n
                        ? ho(t, n, h, i || null, !0)
                        : 2 === e
                        ? (function Fd(e, t, n) {
                              const r = Va(e, t);
                              r &&
                                  (function M_(e, t, n, r) {
                                      jn(e)
                                          ? e.removeChild(t, n, r)
                                          : t.removeChild(n);
                                  })(e, r, t, n);
                          })(t, h, l)
                        : 3 === e && t.destroyNode(h),
                        null != o &&
                            (function P_(e, t, n, r, i) {
                                const o = n[7];
                                o !== b(n) && Io(t, e, r, o, i);
                                for (let h = 10; h < n.length; h++) {
                                    const _ = n[h];
                                    ca(_[1], _, e, t, r, o);
                                }
                            })(t, e, o, n, i);
                }
            }
            function jl(e, t, n) {
                if (jn(e)) return e.createElement(t, n);
                {
                    const r =
                        null !== n
                            ? (function Xi(e) {
                                  const t = e.toLowerCase();
                                  return 'svg' === t
                                      ? 'http://www.w3.org/2000/svg'
                                      : 'math' === t
                                      ? 'http://www.w3.org/1998/MathML/'
                                      : null;
                              })(n)
                            : null;
                    return null === r
                        ? e.createElement(t)
                        : e.createElementNS(r, t);
                }
            }
            function bd(e, t) {
                const n = e[9],
                    r = n.indexOf(t),
                    i = t[3];
                1024 & t[2] && ((t[2] &= -1025), E(i, -1)), n.splice(r, 1);
            }
            function Hl(e, t) {
                if (e.length <= 10) return;
                const n = 10 + t,
                    r = e[n];
                if (r) {
                    const i = r[17];
                    null !== i && i !== e && bd(i, r),
                        t > 0 && (e[n - 1][4] = r[4]);
                    const o = eo(e, 10 + t);
                    !(function E_(e, t) {
                        ca(e, t, t[11], 2, null, null),
                            (t[0] = null),
                            (t[6] = null);
                    })(r[1], r);
                    const l = o[19];
                    null !== l && l.detachView(o[1]),
                        (r[3] = null),
                        (r[4] = null),
                        (r[2] &= -129);
                }
                return r;
            }
            function Td(e, t) {
                if (!(256 & t[2])) {
                    const n = t[11];
                    jn(n) && n.destroyNode && ca(e, t, n, 3, null, null),
                        (function b_(e) {
                            let t = e[13];
                            if (!t) return $l(e[1], e);
                            for (; t; ) {
                                let n = null;
                                if (Vn(t)) n = t[13];
                                else {
                                    const r = t[10];
                                    r && (n = r);
                                }
                                if (!n) {
                                    for (; t && !t[4] && t !== e; )
                                        Vn(t) && $l(t[1], t), (t = t[3]);
                                    null === t && (t = e),
                                        Vn(t) && $l(t[1], t),
                                        (n = t && t[4]);
                                }
                                t = n;
                            }
                        })(t);
                }
            }
            function $l(e, t) {
                if (!(256 & t[2])) {
                    (t[2] &= -129),
                        (t[2] |= 256),
                        (function I_(e, t) {
                            let n;
                            if (null != e && null != (n = e.destroyHooks))
                                for (let r = 0; r < n.length; r += 2) {
                                    const i = t[n[r]];
                                    if (!(i instanceof fi)) {
                                        const o = n[r + 1];
                                        if (Array.isArray(o))
                                            for (
                                                let l = 0;
                                                l < o.length;
                                                l += 2
                                            ) {
                                                const h = i[o[l]],
                                                    _ = o[l + 1];
                                                try {
                                                    _.call(h);
                                                } finally {
                                                }
                                            }
                                        else
                                            try {
                                                o.call(i);
                                            } finally {
                                            }
                                    }
                                }
                        })(e, t),
                        (function w_(e, t) {
                            const n = e.cleanup,
                                r = t[7];
                            let i = -1;
                            if (null !== n)
                                for (let o = 0; o < n.length - 1; o += 2)
                                    if ('string' == typeof n[o]) {
                                        const l = n[o + 1],
                                            h =
                                                'function' == typeof l
                                                    ? l(t)
                                                    : b(t[l]),
                                            _ = r[(i = n[o + 2])],
                                            x = n[o + 3];
                                        'boolean' == typeof x
                                            ? h.removeEventListener(n[o], _, x)
                                            : x >= 0
                                            ? r[(i = x)]()
                                            : r[(i = -x)].unsubscribe(),
                                            (o += 2);
                                    } else {
                                        const l = r[(i = n[o + 1])];
                                        n[o].call(l);
                                    }
                            if (null !== r) {
                                for (let o = i + 1; o < r.length; o++) r[o]();
                                t[7] = null;
                            }
                        })(e, t),
                        1 === t[1].type && jn(t[11]) && t[11].destroy();
                    const n = t[17];
                    if (null !== n && an(t[3])) {
                        n !== t[3] && bd(n, t);
                        const r = t[19];
                        null !== r && r.detachView(e);
                    }
                }
            }
            function Ad(e, t, n) {
                return (function wd(e, t, n) {
                    let r = t;
                    for (; null !== r && 40 & r.type; ) r = (t = r).parent;
                    if (null === r) return n[0];
                    if (2 & r.flags) {
                        const i = e.data[r.directiveStart].encapsulation;
                        if (i === Ze.None || i === Ze.Emulated) return null;
                    }
                    return ct(r, n);
                })(e, t.parent, n);
            }
            function ho(e, t, n, r, i) {
                jn(e) ? e.insertBefore(t, n, r, i) : t.insertBefore(n, r, i);
            }
            function Id(e, t, n) {
                jn(e) ? e.appendChild(t, n) : t.appendChild(n);
            }
            function Md(e, t, n, r, i) {
                null !== r ? ho(e, t, n, r, i) : Id(e, t, n);
            }
            function Va(e, t) {
                return jn(e) ? e.parentNode(t) : t.parentNode;
            }
            function Sd(e, t, n) {
                return Pd(e, t, n);
            }
            let Pd = function Od(e, t, n) {
                return 40 & e.type ? ct(e, n) : null;
            };
            function ja(e, t, n, r) {
                const i = Ad(e, r, t),
                    o = t[11],
                    h = Sd(r.parent || t[6], r, t);
                if (null != i)
                    if (Array.isArray(n))
                        for (let _ = 0; _ < n.length; _++)
                            Md(o, i, n[_], h, !1);
                    else Md(o, i, n, h, !1);
            }
            function Ha(e, t) {
                if (null !== t) {
                    const n = t.type;
                    if (3 & n) return ct(t, e);
                    if (4 & n) return Gl(-1, e[t.index]);
                    if (8 & n) {
                        const r = t.child;
                        if (null !== r) return Ha(e, r);
                        {
                            const i = e[t.index];
                            return an(i) ? Gl(-1, i) : b(i);
                        }
                    }
                    if (32 & n) return kl(t, e)() || b(e[t.index]);
                    {
                        const r = xd(e, t);
                        return null !== r
                            ? Array.isArray(r)
                                ? r[0]
                                : Ha(ua(e[16]), r)
                            : Ha(e, t.next);
                    }
                }
                return null;
            }
            function xd(e, t) {
                return null !== t ? e[16][6].projection[t.projection] : null;
            }
            function Gl(e, t) {
                const n = 10 + e + 1;
                if (n < t.length) {
                    const r = t[n],
                        i = r[1].firstChild;
                    if (null !== i) return Ha(r, i);
                }
                return t[7];
            }
            function zl(e, t, n, r, i, o, l) {
                for (; null != n; ) {
                    const h = r[n.index],
                        _ = n.type;
                    if (
                        (l && 0 === t && (h && gi(b(h), r), (n.flags |= 4)),
                        64 != (64 & n.flags))
                    )
                        if (8 & _)
                            zl(e, t, n.child, r, i, o, !1), Io(t, e, i, h, o);
                        else if (32 & _) {
                            const x = kl(n, r);
                            let V;
                            for (; (V = x()); ) Io(t, e, i, V, o);
                            Io(t, e, i, h, o);
                        } else
                            16 & _ ? Nd(e, t, r, n, i, o) : Io(t, e, i, h, o);
                    n = l ? n.projectionNext : n.next;
                }
            }
            function ca(e, t, n, r, i, o) {
                zl(n, r, e.firstChild, t, i, o, !1);
            }
            function Nd(e, t, n, r, i, o) {
                const l = n[16],
                    _ = l[6].projection[r.projection];
                if (Array.isArray(_))
                    for (let x = 0; x < _.length; x++) Io(t, e, i, _[x], o);
                else zl(e, t, _, l[3], i, o, !0);
            }
            function Ld(e, t, n) {
                jn(e) ? e.setAttribute(t, 'style', n) : (t.style.cssText = n);
            }
            function Kl(e, t, n) {
                jn(e)
                    ? '' === n
                        ? e.removeAttribute(t, 'class')
                        : e.setAttribute(t, 'class', n)
                    : (t.className = n);
            }
            function kd(e, t, n) {
                let r = e.length;
                for (;;) {
                    const i = e.indexOf(t, n);
                    if (-1 === i) return i;
                    if (0 === i || e.charCodeAt(i - 1) <= 32) {
                        const o = t.length;
                        if (i + o === r || e.charCodeAt(i + o) <= 32) return i;
                    }
                    n = i + 1;
                }
            }
            const Bd = 'ng-template';
            function x_(e, t, n) {
                let r = 0;
                for (; r < e.length; ) {
                    let i = e[r++];
                    if (n && 'class' === i) {
                        if (((i = e[r]), -1 !== kd(i.toLowerCase(), t, 0)))
                            return !0;
                    } else if (1 === i) {
                        for (
                            ;
                            r < e.length && 'string' == typeof (i = e[r++]);

                        )
                            if (i.toLowerCase() === t) return !0;
                        return !1;
                    }
                }
                return !1;
            }
            function Ud(e) {
                return 4 === e.type && e.value !== Bd;
            }
            function F_(e, t, n) {
                return t === (4 !== e.type || n ? e.value : Bd);
            }
            function N_(e, t, n) {
                let r = 4;
                const i = e.attrs || [],
                    o = (function B_(e) {
                        for (let t = 0; t < e.length; t++)
                            if (me(e[t])) return t;
                        return e.length;
                    })(i);
                let l = !1;
                for (let h = 0; h < t.length; h++) {
                    const _ = t[h];
                    if ('number' != typeof _) {
                        if (!l)
                            if (4 & r) {
                                if (
                                    ((r = 2 | (1 & r)),
                                    ('' !== _ && !F_(e, _, n)) ||
                                        ('' === _ && 1 === t.length))
                                ) {
                                    if (rs(r)) return !1;
                                    l = !0;
                                }
                            } else {
                                const x = 8 & r ? _ : t[++h];
                                if (8 & r && null !== e.attrs) {
                                    if (!x_(e.attrs, x, n)) {
                                        if (rs(r)) return !1;
                                        l = !0;
                                    }
                                    continue;
                                }
                                const ee = L_(8 & r ? 'class' : _, i, Ud(e), n);
                                if (-1 === ee) {
                                    if (rs(r)) return !1;
                                    l = !0;
                                    continue;
                                }
                                if ('' !== x) {
                                    let Te;
                                    Te = ee > o ? '' : i[ee + 1].toLowerCase();
                                    const Ve = 8 & r ? Te : null;
                                    if (
                                        (Ve && -1 !== kd(Ve, x, 0)) ||
                                        (2 & r && x !== Te)
                                    ) {
                                        if (rs(r)) return !1;
                                        l = !0;
                                    }
                                }
                            }
                    } else {
                        if (!l && !rs(r) && !rs(_)) return !1;
                        if (l && rs(_)) continue;
                        (l = !1), (r = _ | (1 & r));
                    }
                }
                return rs(r) || l;
            }
            function rs(e) {
                return 0 == (1 & e);
            }
            function L_(e, t, n, r) {
                if (null === t) return -1;
                let i = 0;
                if (r || !n) {
                    let o = !1;
                    for (; i < t.length; ) {
                        const l = t[i];
                        if (l === e) return i;
                        if (3 === l || 6 === l) o = !0;
                        else {
                            if (1 === l || 2 === l) {
                                let h = t[++i];
                                for (; 'string' == typeof h; ) h = t[++i];
                                continue;
                            }
                            if (4 === l) break;
                            if (0 === l) {
                                i += 4;
                                continue;
                            }
                        }
                        i += o ? 1 : 2;
                    }
                    return -1;
                }
                return (function U_(e, t) {
                    let n = e.indexOf(4);
                    if (n > -1)
                        for (n++; n < e.length; ) {
                            const r = e[n];
                            if ('number' == typeof r) return -1;
                            if (r === t) return n;
                            n++;
                        }
                    return -1;
                })(t, e);
            }
            function Vd(e, t, n = !1) {
                for (let r = 0; r < t.length; r++)
                    if (N_(e, t[r], n)) return !0;
                return !1;
            }
            function V_(e, t) {
                e: for (let n = 0; n < t.length; n++) {
                    const r = t[n];
                    if (e.length === r.length) {
                        for (let i = 0; i < e.length; i++)
                            if (e[i] !== r[i]) continue e;
                        return !0;
                    }
                }
                return !1;
            }
            function jd(e, t) {
                return e ? ':not(' + t.trim() + ')' : t;
            }
            function j_(e) {
                let t = e[0],
                    n = 1,
                    r = 2,
                    i = '',
                    o = !1;
                for (; n < e.length; ) {
                    let l = e[n];
                    if ('string' == typeof l)
                        if (2 & r) {
                            const h = e[++n];
                            i +=
                                '[' +
                                l +
                                (h.length > 0 ? '="' + h + '"' : '') +
                                ']';
                        } else 8 & r ? (i += '.' + l) : 4 & r && (i += ' ' + l);
                    else
                        '' !== i && !rs(l) && ((t += jd(o, i)), (i = '')),
                            (r = l),
                            (o = o || !rs(r));
                    n++;
                }
                return '' !== i && (t += jd(o, i)), t;
            }
            const In = {};
            function Hd(e) {
                $d(Tn(), ht(), Vr() + e, !1);
            }
            function $d(e, t, n, r) {
                if (!r)
                    if (3 == (3 & t[2])) {
                        const o = e.preOrderCheckHooks;
                        null !== o && Ds(t, o, n);
                    } else {
                        const o = e.preOrderHooks;
                        null !== o && Mr(t, o, 0, n);
                    }
                Fi(n);
            }
            function $a(e, t) {
                return (e << 17) | (t << 2);
            }
            function is(e) {
                return (e >> 17) & 32767;
            }
            function Yl(e) {
                return 2 | e;
            }
            function zs(e) {
                return (131068 & e) >> 2;
            }
            function Zl(e, t) {
                return (-131069 & e) | (t << 2);
            }
            function Ql(e) {
                return 1 | e;
            }
            function ef(e, t) {
                const n = e.contentQueries;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2) {
                        const i = n[r],
                            o = n[r + 1];
                        if (-1 !== o) {
                            const l = e.data[o];
                            ps(i), l.contentQueries(2, t[o], o);
                        }
                    }
            }
            function da(e, t, n, r, i, o, l, h, _, x) {
                const V = t.blueprint.slice();
                return (
                    (V[0] = i),
                    (V[2] = 140 | r),
                    A(V),
                    (V[3] = V[15] = e),
                    (V[8] = n),
                    (V[10] = l || (e && e[10])),
                    (V[11] = h || (e && e[11])),
                    (V[12] = _ || (e && e[12]) || null),
                    (V[9] = x || (e && e[9]) || null),
                    (V[6] = o),
                    (V[16] = 2 == t.type ? e[16] : V),
                    V
                );
            }
            function Mo(e, t, n, r, i) {
                let o = e.data[t];
                if (null === o)
                    (o = (function su(e, t, n, r, i) {
                        const o = Ys(),
                            l = xs(),
                            _ = (e.data[t] = (function sy(e, t, n, r, i, o) {
                                return {
                                    type: n,
                                    index: r,
                                    insertBeforeIndex: null,
                                    injectorIndex: t ? t.injectorIndex : -1,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    propertyBindings: null,
                                    flags: 0,
                                    providerIndexes: 0,
                                    value: i,
                                    attrs: o,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tViews: null,
                                    next: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: t,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0,
                                };
                            })(0, l ? o : o && o.parent, n, t, r, i));
                        return (
                            null === e.firstChild && (e.firstChild = _),
                            null !== o &&
                                (l
                                    ? null == o.child &&
                                      null !== _.parent &&
                                      (o.child = _)
                                    : null === o.next && (o.next = _)),
                            _
                        );
                    })(e, t, n, r, i)),
                        (function Qs() {
                            return g.lFrame.inI18n;
                        })() && (o.flags |= 64);
                else if (64 & o.type) {
                    (o.type = n), (o.value = r), (o.attrs = i);
                    const l = (function Pi() {
                        const e = g.lFrame,
                            t = e.currentTNode;
                        return e.isParent ? t : t.parent;
                    })();
                    o.injectorIndex = null === l ? -1 : l.injectorIndex;
                }
                return Kr(o, !0), o;
            }
            function So(e, t, n, r) {
                if (0 === n) return -1;
                const i = t.length;
                for (let o = 0; o < n; o++)
                    t.push(r), e.blueprint.push(r), e.data.push(null);
                return i;
            }
            function fa(e, t, n) {
                ts(t);
                try {
                    const r = e.viewQuery;
                    null !== r && pu(1, r, n);
                    const i = e.template;
                    null !== i && tf(e, t, i, 1, n),
                        e.firstCreatePass && (e.firstCreatePass = !1),
                        e.staticContentQueries && ef(e, t),
                        e.staticViewQueries && pu(2, e.viewQuery, n);
                    const o = e.components;
                    null !== o &&
                        (function ny(e, t) {
                            for (let n = 0; n < t.length; n++) by(e, t[n]);
                        })(t, o);
                } catch (r) {
                    throw (
                        (e.firstCreatePass &&
                            ((e.incompleteFirstPass = !0),
                            (e.firstCreatePass = !1)),
                        r)
                    );
                } finally {
                    (t[2] &= -5), zi();
                }
            }
            function Oo(e, t, n, r) {
                const i = t[2];
                if (256 != (256 & i)) {
                    ts(t);
                    try {
                        A(t),
                            (function ds(e) {
                                return (g.lFrame.bindingIndex = e);
                            })(e.bindingStartIndex),
                            null !== n && tf(e, t, n, 2, r);
                        const l = 3 == (3 & i);
                        if (l) {
                            const x = e.preOrderCheckHooks;
                            null !== x && Ds(t, x, null);
                        } else {
                            const x = e.preOrderHooks;
                            null !== x && Mr(t, x, 0, null), Dr(t, 0);
                        }
                        if (
                            ((function Dy(e) {
                                for (let t = Bl(e); null !== t; t = Ul(t)) {
                                    if (!t[2]) continue;
                                    const n = t[9];
                                    for (let r = 0; r < n.length; r++) {
                                        const i = n[r],
                                            o = i[3];
                                        0 == (1024 & i[2]) && E(o, 1),
                                            (i[2] |= 1024);
                                    }
                                }
                            })(t),
                            (function Ey(e) {
                                for (let t = Bl(e); null !== t; t = Ul(t))
                                    for (let n = 10; n < t.length; n++) {
                                        const r = t[n],
                                            i = r[1];
                                        tr(r) && Oo(i, r, i.template, r[8]);
                                    }
                            })(t),
                            null !== e.contentQueries && ef(e, t),
                            l)
                        ) {
                            const x = e.contentCheckHooks;
                            null !== x && Ds(t, x);
                        } else {
                            const x = e.contentHooks;
                            null !== x && Mr(t, x, 1), Dr(t, 1);
                        }
                        !(function ey(e, t) {
                            const n = e.hostBindingOpCodes;
                            if (null !== n)
                                try {
                                    for (let r = 0; r < n.length; r++) {
                                        const i = n[r];
                                        if (i < 0) Fi(~i);
                                        else {
                                            const o = i,
                                                l = n[++r],
                                                h = n[++r];
                                            Ns(l, o), h(2, t[o]);
                                        }
                                    }
                                } finally {
                                    Fi(-1);
                                }
                        })(e, t);
                        const h = e.components;
                        null !== h &&
                            (function ty(e, t) {
                                for (let n = 0; n < t.length; n++) Cy(e, t[n]);
                            })(t, h);
                        const _ = e.viewQuery;
                        if ((null !== _ && pu(2, _, r), l)) {
                            const x = e.viewCheckHooks;
                            null !== x && Ds(t, x);
                        } else {
                            const x = e.viewHooks;
                            null !== x && Mr(t, x, 2), Dr(t, 2);
                        }
                        !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
                            (t[2] &= -73),
                            1024 & t[2] && ((t[2] &= -1025), E(t[3], -1));
                    } finally {
                        zi();
                    }
                }
            }
            function ry(e, t, n, r) {
                const i = t[10],
                    l = An(t);
                try {
                    !l && i.begin && i.begin(),
                        l && fa(e, t, r),
                        Oo(e, t, n, r);
                } finally {
                    !l && i.end && i.end();
                }
            }
            function tf(e, t, n, r, i) {
                const o = Vr(),
                    l = 2 & r;
                try {
                    Fi(-1), l && t.length > 20 && $d(e, t, 20, !1), n(r, i);
                } finally {
                    Fi(o);
                }
            }
            function nf(e, t, n) {
                if (pr(t)) {
                    const i = t.directiveEnd;
                    for (let o = t.directiveStart; o < i; o++) {
                        const l = e.data[o];
                        l.contentQueries && l.contentQueries(1, n[o], o);
                    }
                }
            }
            function ou(e, t, n) {
                !Er() ||
                    ((function fy(e, t, n, r) {
                        const i = n.directiveStart,
                            o = n.directiveEnd;
                        e.firstCreatePass || hi(n, t), gi(r, t);
                        const l = n.initialInputs;
                        for (let h = i; h < o; h++) {
                            const _ = e.data[h],
                                x = gr(_);
                            x && _y(t, n, _);
                            const V = dt(t, e, h, n);
                            gi(V, t),
                                null !== l && yy(0, h - i, V, _, 0, l),
                                x && (on(n.index, t)[8] = V);
                        }
                    })(e, t, n, ct(n, t)),
                    128 == (128 & n.flags) &&
                        (function hy(e, t, n) {
                            const r = n.directiveStart,
                                i = n.directiveEnd,
                                l = n.index,
                                h = (function Ls() {
                                    return g.lFrame.currentDirectiveIndex;
                                })();
                            try {
                                Fi(l);
                                for (let _ = r; _ < i; _++) {
                                    const x = e.data[_],
                                        V = t[_];
                                    fs(_),
                                        (null !== x.hostBindings ||
                                            0 !== x.hostVars ||
                                            null !== x.hostAttrs) &&
                                            ff(x, V);
                                }
                            } finally {
                                Fi(-1), fs(h);
                            }
                        })(e, t, n));
            }
            function au(e, t, n = ct) {
                const r = t.localNames;
                if (null !== r) {
                    let i = t.index + 1;
                    for (let o = 0; o < r.length; o += 2) {
                        const l = r[o + 1],
                            h = -1 === l ? n(t, e) : e[l];
                        e[i++] = h;
                    }
                }
            }
            function rf(e) {
                const t = e.tView;
                return null === t || t.incompleteFirstPass
                    ? (e.tView = za(
                          1,
                          null,
                          e.template,
                          e.decls,
                          e.vars,
                          e.directiveDefs,
                          e.pipeDefs,
                          e.viewQuery,
                          e.schemas,
                          e.consts
                      ))
                    : t;
            }
            function za(e, t, n, r, i, o, l, h, _, x) {
                const V = 20 + r,
                    ee = V + i,
                    Te = (function iy(e, t) {
                        const n = [];
                        for (let r = 0; r < t; r++) n.push(r < e ? null : In);
                        return n;
                    })(V, ee),
                    Ve = 'function' == typeof x ? x() : x;
                return (Te[1] = {
                    type: e,
                    blueprint: Te,
                    template: n,
                    queries: null,
                    viewQuery: h,
                    declTNode: t,
                    data: Te.slice().fill(null, V),
                    bindingStartIndex: V,
                    expandoStartIndex: ee,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: 'function' == typeof o ? o() : o,
                    pipeRegistry: 'function' == typeof l ? l() : l,
                    firstChild: null,
                    schemas: _,
                    consts: Ve,
                    incompleteFirstPass: !1,
                });
            }
            function lf(e, t, n, r) {
                const i = yf(t);
                null === n
                    ? i.push(r)
                    : (i.push(n),
                      e.firstCreatePass && vf(e).push(r, i.length - 1));
            }
            function uf(e, t, n) {
                for (let r in e)
                    if (e.hasOwnProperty(r)) {
                        const i = e[r];
                        (n = null === n ? {} : n).hasOwnProperty(r)
                            ? n[r].push(t, i)
                            : (n[r] = [t, i]);
                    }
                return n;
            }
            function lu(e, t, n, r) {
                let i = !1;
                if (Er()) {
                    const o = (function py(e, t, n) {
                            const r = e.directiveRegistry;
                            let i = null;
                            if (r)
                                for (let o = 0; o < r.length; o++) {
                                    const l = r[o];
                                    Vd(n, l.selectors, !1) &&
                                        (i || (i = []),
                                        c(hi(n, t), e, l.type),
                                        gr(l)
                                            ? (hf(e, n), i.unshift(l))
                                            : i.push(l));
                                }
                            return i;
                        })(e, t, n),
                        l = null === r ? null : { '': -1 };
                    if (null !== o) {
                        (i = !0), pf(n, e.data.length, o.length);
                        for (let V = 0; V < o.length; V++) {
                            const ee = o[V];
                            ee.providersResolver && ee.providersResolver(ee);
                        }
                        let h = !1,
                            _ = !1,
                            x = So(e, t, o.length, null);
                        for (let V = 0; V < o.length; V++) {
                            const ee = o[V];
                            (n.mergedAttrs = Ue(n.mergedAttrs, ee.hostAttrs)),
                                gf(e, n, t, x, ee),
                                my(x, ee, l),
                                null !== ee.contentQueries && (n.flags |= 8),
                                (null !== ee.hostBindings ||
                                    null !== ee.hostAttrs ||
                                    0 !== ee.hostVars) &&
                                    (n.flags |= 128);
                            const Te = ee.type.prototype;
                            !h &&
                                (Te.ngOnChanges ||
                                    Te.ngOnInit ||
                                    Te.ngDoCheck) &&
                                ((
                                    e.preOrderHooks || (e.preOrderHooks = [])
                                ).push(n.index),
                                (h = !0)),
                                !_ &&
                                    (Te.ngOnChanges || Te.ngDoCheck) &&
                                    ((
                                        e.preOrderCheckHooks ||
                                        (e.preOrderCheckHooks = [])
                                    ).push(n.index),
                                    (_ = !0)),
                                x++;
                        }
                        !(function oy(e, t) {
                            const r = t.directiveEnd,
                                i = e.data,
                                o = t.attrs,
                                l = [];
                            let h = null,
                                _ = null;
                            for (let x = t.directiveStart; x < r; x++) {
                                const V = i[x],
                                    ee = V.inputs,
                                    Te = null === o || Ud(t) ? null : vy(ee, o);
                                l.push(Te),
                                    (h = uf(ee, x, h)),
                                    (_ = uf(V.outputs, x, _));
                            }
                            null !== h &&
                                (h.hasOwnProperty('class') && (t.flags |= 16),
                                h.hasOwnProperty('style') && (t.flags |= 32)),
                                (t.initialInputs = l),
                                (t.inputs = h),
                                (t.outputs = _);
                        })(e, n);
                    }
                    l &&
                        (function gy(e, t, n) {
                            if (t) {
                                const r = (e.localNames = []);
                                for (let i = 0; i < t.length; i += 2) {
                                    const o = n[t[i + 1]];
                                    if (null == o) throw new Re(-301, !1);
                                    r.push(t[i], o);
                                }
                            }
                        })(n, r, l);
                }
                return (n.mergedAttrs = Ue(n.mergedAttrs, n.attrs)), i;
            }
            function df(e, t, n, r, i, o) {
                const l = o.hostBindings;
                if (l) {
                    let h = e.hostBindingOpCodes;
                    null === h && (h = e.hostBindingOpCodes = []);
                    const _ = ~t.index;
                    (function dy(e) {
                        let t = e.length;
                        for (; t > 0; ) {
                            const n = e[--t];
                            if ('number' == typeof n && n < 0) return n;
                        }
                        return 0;
                    })(h) != _ && h.push(_),
                        h.push(r, i, l);
                }
            }
            function ff(e, t) {
                null !== e.hostBindings && e.hostBindings(1, t);
            }
            function hf(e, t) {
                (t.flags |= 2),
                    (e.components || (e.components = [])).push(t.index);
            }
            function my(e, t, n) {
                if (n) {
                    if (t.exportAs)
                        for (let r = 0; r < t.exportAs.length; r++)
                            n[t.exportAs[r]] = e;
                    gr(t) && (n[''] = e);
                }
            }
            function pf(e, t, n) {
                (e.flags |= 1),
                    (e.directiveStart = t),
                    (e.directiveEnd = t + n),
                    (e.providerIndexes = t);
            }
            function gf(e, t, n, r, i) {
                e.data[r] = i;
                const o = i.factory || (i.factory = Zr(i.type)),
                    l = new fi(o, gr(i), null);
                (e.blueprint[r] = l),
                    (n[r] = l),
                    df(e, t, 0, r, So(e, n, i.hostVars, In), i);
            }
            function _y(e, t, n) {
                const r = ct(t, e),
                    i = rf(n),
                    o = e[10],
                    l = Ka(
                        e,
                        da(
                            e,
                            i,
                            null,
                            n.onPush ? 64 : 16,
                            r,
                            t,
                            o,
                            o.createRenderer(r, n),
                            null,
                            null
                        )
                    );
                e[t.index] = l;
            }
            function Is(e, t, n, r, i, o) {
                const l = ct(e, t);
                !(function uu(e, t, n, r, i, o, l) {
                    if (null == o)
                        jn(e)
                            ? e.removeAttribute(t, i, n)
                            : t.removeAttribute(i);
                    else {
                        const h = null == l ? pe(o) : l(o, r || '', i);
                        jn(e)
                            ? e.setAttribute(t, i, h, n)
                            : n
                            ? t.setAttributeNS(n, i, h)
                            : t.setAttribute(i, h);
                    }
                })(t[11], l, o, e.value, n, r, i);
            }
            function yy(e, t, n, r, i, o) {
                const l = o[t];
                if (null !== l) {
                    const h = r.setInput;
                    for (let _ = 0; _ < l.length; ) {
                        const x = l[_++],
                            V = l[_++],
                            ee = l[_++];
                        null !== h ? r.setInput(n, ee, x, V) : (n[V] = ee);
                    }
                }
            }
            function vy(e, t) {
                let n = null,
                    r = 0;
                for (; r < t.length; ) {
                    const i = t[r];
                    if (0 !== i)
                        if (5 !== i) {
                            if ('number' == typeof i) break;
                            e.hasOwnProperty(i) &&
                                (null === n && (n = []),
                                n.push(i, e[i], t[r + 1])),
                                (r += 2);
                        } else r += 2;
                    else r += 4;
                }
                return n;
            }
            function mf(e, t, n, r) {
                return new Array(e, !0, !1, t, null, 0, r, n, null, null);
            }
            function Cy(e, t) {
                const n = on(t, e);
                if (tr(n)) {
                    const r = n[1];
                    80 & n[2] ? Oo(r, n, r.template, n[8]) : n[5] > 0 && cu(n);
                }
            }
            function cu(e) {
                for (let r = Bl(e); null !== r; r = Ul(r))
                    for (let i = 10; i < r.length; i++) {
                        const o = r[i];
                        if (1024 & o[2]) {
                            const l = o[1];
                            Oo(l, o, l.template, o[8]);
                        } else o[5] > 0 && cu(o);
                    }
                const n = e[1].components;
                if (null !== n)
                    for (let r = 0; r < n.length; r++) {
                        const i = on(n[r], e);
                        tr(i) && i[5] > 0 && cu(i);
                    }
            }
            function by(e, t) {
                const n = on(t, e),
                    r = n[1];
                (function Ty(e, t) {
                    for (let n = t.length; n < e.blueprint.length; n++)
                        t.push(e.blueprint[n]);
                })(r, n),
                    fa(r, n, n[8]);
            }
            function Ka(e, t) {
                return e[13] ? (e[14][4] = t) : (e[13] = t), (e[14] = t), t;
            }
            function du(e) {
                for (; e; ) {
                    e[2] |= 64;
                    const t = ua(e);
                    if (Wr(e) && !t) return e;
                    e = t;
                }
                return null;
            }
            function _f(e) {
                !(function fu(e) {
                    for (let t = 0; t < e.components.length; t++) {
                        const n = e.components[t],
                            r = xl(n),
                            i = r[1];
                        ry(i, r, i.template, n);
                    }
                })(e[8]);
            }
            function pu(e, t, n) {
                ps(0), t(e, n);
            }
            const wy = (() => Promise.resolve(null))();
            function yf(e) {
                return e[7] || (e[7] = []);
            }
            function vf(e) {
                return e.cleanup || (e.cleanup = []);
            }
            function Df(e, t) {
                const n = e[9],
                    r = n ? n.get(Ua, null) : null;
                r && r.handleError(t);
            }
            function Cf(e, t, n, r, i) {
                for (let o = 0; o < n.length; ) {
                    const l = n[o++],
                        h = n[o++],
                        _ = t[l],
                        x = e.data[l];
                    null !== x.setInput ? x.setInput(_, i, r, h) : (_[h] = i);
                }
            }
            function Ks(e, t, n) {
                const r = Je(t, e);
                !(function Cd(e, t, n) {
                    jn(e) ? e.setValue(t, n) : (t.textContent = n);
                })(e[11], r, n);
            }
            function Ya(e, t, n) {
                let r = n ? e.styles : null,
                    i = n ? e.classes : null,
                    o = 0;
                if (null !== t)
                    for (let l = 0; l < t.length; l++) {
                        const h = t[l];
                        'number' == typeof h
                            ? (o = h)
                            : 1 == o
                            ? (i = U(i, h))
                            : 2 == o && (r = U(r, h + ': ' + t[++l] + ';'));
                    }
                n ? (e.styles = r) : (e.stylesWithoutHost = r),
                    n ? (e.classes = i) : (e.classesWithoutHost = i);
            }
            const gu = new Fr('INJECTOR', -1);
            class bf {
                get(t, n = W) {
                    if (n === W) {
                        const r = new Error(
                            `NullInjectorError: No provider for ${N(t)}!`
                        );
                        throw ((r.name = 'NullInjectorError'), r);
                    }
                    return n;
                }
            }
            const mu = new Fr('Set Injector scope.'),
                ha = {},
                Sy = {};
            let _u;
            function Tf() {
                return void 0 === _u && (_u = new bf()), _u;
            }
            function Af(e, t = null, n = null, r) {
                const i = wf(e, t, n, r);
                return i._resolveInjectorDefTypes(), i;
            }
            function wf(e, t = null, n = null, r) {
                return new Oy(e, n, t || Tf(), r);
            }
            class Oy {
                constructor(t, n, r, i = null) {
                    (this.parent = r),
                        (this.records = new Map()),
                        (this.injectorDefTypes = new Set()),
                        (this.onDestroy = new Set()),
                        (this._destroyed = !1);
                    const o = [];
                    n && Mi(n, (h) => this.processProvider(h, t, n)),
                        Mi([t], (h) => this.processInjectorType(h, [], o)),
                        this.records.set(gu, Po(void 0, this));
                    const l = this.records.get(mu);
                    (this.scope = null != l ? l.value : null),
                        (this.source =
                            i || ('object' == typeof t ? null : N(t)));
                }
                get destroyed() {
                    return this._destroyed;
                }
                destroy() {
                    this.assertNotDestroyed(), (this._destroyed = !0);
                    try {
                        this.onDestroy.forEach((t) => t.ngOnDestroy());
                    } finally {
                        this.records.clear(),
                            this.onDestroy.clear(),
                            this.injectorDefTypes.clear();
                    }
                }
                get(t, n = W, r = Nt.Default) {
                    this.assertNotDestroyed();
                    const i = wn(this),
                        o = Dn(void 0);
                    try {
                        if (!(r & Nt.SkipSelf)) {
                            let h = this.records.get(t);
                            if (void 0 === h) {
                                const _ =
                                    (function By(e) {
                                        return (
                                            'function' == typeof e ||
                                            ('object' == typeof e &&
                                                e instanceof Fr)
                                        );
                                    })(t) && At(t);
                                (h =
                                    _ && this.injectableDefInScope(_)
                                        ? Po(yu(t), ha)
                                        : null),
                                    this.records.set(t, h);
                            }
                            if (null != h) return this.hydrate(t, h);
                        }
                        return (r & Nt.Self ? Tf() : this.parent).get(
                            t,
                            (n = r & Nt.Optional && n === W ? null : n)
                        );
                    } catch (l) {
                        if ('NullInjectorError' === l.name) {
                            if (((l[Be] = l[Be] || []).unshift(N(t)), i))
                                throw l;
                            return (function xa(e, t, n, r) {
                                const i = e[Be];
                                throw (
                                    (t[En] && i.unshift(t[En]),
                                    (e.message = (function fm(
                                        e,
                                        t,
                                        n,
                                        r = null
                                    ) {
                                        e =
                                            e &&
                                            '\n' === e.charAt(0) &&
                                            '\u0275' == e.charAt(1)
                                                ? e.substr(2)
                                                : e;
                                        let i = N(t);
                                        if (Array.isArray(t))
                                            i = t.map(N).join(' -> ');
                                        else if ('object' == typeof t) {
                                            let o = [];
                                            for (let l in t)
                                                if (t.hasOwnProperty(l)) {
                                                    let h = t[l];
                                                    o.push(
                                                        l +
                                                            ':' +
                                                            ('string' ==
                                                            typeof h
                                                                ? JSON.stringify(
                                                                      h
                                                                  )
                                                                : N(h))
                                                    );
                                                }
                                            i = `{${o.join(', ')}}`;
                                        }
                                        return `${n}${
                                            r ? '(' + r + ')' : ''
                                        }[${i}]: ${e.replace(Tt, '\n  ')}`;
                                    })('\n' + e.message, i, n, r)),
                                    (e.ngTokenPath = i),
                                    (e[Be] = null),
                                    e)
                                );
                            })(l, t, 'R3InjectorError', this.source);
                        }
                        throw l;
                    } finally {
                        Dn(o), wn(i);
                    }
                }
                _resolveInjectorDefTypes() {
                    this.injectorDefTypes.forEach((t) => this.get(t));
                }
                toString() {
                    const t = [];
                    return (
                        this.records.forEach((r, i) => t.push(N(i))),
                        `R3Injector[${t.join(', ')}]`
                    );
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new Re(205, !1);
                }
                processInjectorType(t, n, r) {
                    if (!(t = K(t))) return !1;
                    let i = Qt(t);
                    const o = (null == i && t.ngModule) || void 0,
                        l = void 0 === o ? t : o,
                        h = -1 !== r.indexOf(l);
                    if ((void 0 !== o && (i = Qt(o)), null == i)) return !1;
                    if (null != i.imports && !h) {
                        let V;
                        r.push(l);
                        try {
                            Mi(i.imports, (ee) => {
                                this.processInjectorType(ee, n, r) &&
                                    (void 0 === V && (V = []), V.push(ee));
                            });
                        } finally {
                        }
                        if (void 0 !== V)
                            for (let ee = 0; ee < V.length; ee++) {
                                const { ngModule: Te, providers: Ve } = V[ee];
                                Mi(Ve, (at) =>
                                    this.processProvider(at, Te, Ve || q)
                                );
                            }
                    }
                    this.injectorDefTypes.add(l);
                    const _ = Zr(l) || (() => new l());
                    this.records.set(l, Po(_, ha));
                    const x = i.providers;
                    if (null != x && !h) {
                        const V = t;
                        Mi(x, (ee) => this.processProvider(ee, V, x));
                    }
                    return void 0 !== o && void 0 !== t.providers;
                }
                processProvider(t, n, r) {
                    let i = Ro((t = K(t))) ? t : K(t && t.provide);
                    const o = (function Ry(e, t, n) {
                        return Mf(e) ? Po(void 0, e.useValue) : Po(If(e), ha);
                    })(t);
                    if (Ro(t) || !0 !== t.multi) this.records.get(i);
                    else {
                        let l = this.records.get(i);
                        l ||
                            ((l = Po(void 0, ha, !0)),
                            (l.factory = () => Ws(l.multi)),
                            this.records.set(i, l)),
                            (i = t),
                            l.multi.push(t);
                    }
                    this.records.set(i, o);
                }
                hydrate(t, n) {
                    return (
                        n.value === ha &&
                            ((n.value = Sy), (n.value = n.factory())),
                        'object' == typeof n.value &&
                            n.value &&
                            (function ky(e) {
                                return (
                                    null !== e &&
                                    'object' == typeof e &&
                                    'function' == typeof e.ngOnDestroy
                                );
                            })(n.value) &&
                            this.onDestroy.add(n.value),
                        n.value
                    );
                }
                injectableDefInScope(t) {
                    if (!t.providedIn) return !1;
                    const n = K(t.providedIn);
                    return 'string' == typeof n
                        ? 'any' === n || n === this.scope
                        : this.injectorDefTypes.has(n);
                }
            }
            function yu(e) {
                const t = At(e),
                    n = null !== t ? t.factory : Zr(e);
                if (null !== n) return n;
                if (e instanceof Fr) throw new Re(204, !1);
                if (e instanceof Function)
                    return (function Py(e) {
                        const t = e.length;
                        if (t > 0) throw (js(t, '?'), new Re(204, !1));
                        const n = (function st(e) {
                            const t = e && (e[ln] || e[rn]);
                            if (t) {
                                const n = (function xt(e) {
                                    if (e.hasOwnProperty('name')) return e.name;
                                    const t = ('' + e).match(
                                        /^function\s*([^\s(]+)/
                                    );
                                    return null === t ? '' : t[1];
                                })(e);
                                return (
                                    console.warn(
                                        `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`
                                    ),
                                    t
                                );
                            }
                            return null;
                        })(e);
                        return null !== n ? () => n.factory(e) : () => new e();
                    })(e);
                throw new Re(204, !1);
            }
            function If(e, t, n) {
                let r;
                if (Ro(e)) {
                    const i = K(e);
                    return Zr(i) || yu(i);
                }
                if (Mf(e)) r = () => K(e.useValue);
                else if (
                    (function Fy(e) {
                        return !(!e || !e.useFactory);
                    })(e)
                )
                    r = () => e.useFactory(...Ws(e.deps || []));
                else if (
                    (function xy(e) {
                        return !(!e || !e.useExisting);
                    })(e)
                )
                    r = () => Zn(K(e.useExisting));
                else {
                    const i = K(e && (e.useClass || e.provide));
                    if (
                        !(function Ly(e) {
                            return !!e.deps;
                        })(e)
                    )
                        return Zr(i) || yu(i);
                    r = () => new i(...Ws(e.deps));
                }
                return r;
            }
            function Po(e, t, n = !1) {
                return { factory: e, value: t, multi: n ? [] : void 0 };
            }
            function Mf(e) {
                return null !== e && 'object' == typeof e && bn in e;
            }
            function Ro(e) {
                return 'function' == typeof e;
            }
            let Ms = (() => {
                class e {
                    static create(n, r) {
                        var i;
                        if (Array.isArray(n)) return Af({ name: '' }, r, n, '');
                        {
                            const o =
                                null !== (i = n.name) && void 0 !== i ? i : '';
                            return Af({ name: o }, n.parent, n.providers, o);
                        }
                    }
                }
                return (
                    (e.THROW_IF_NOT_FOUND = W),
                    (e.NULL = new bf()),
                    (e.ɵprov = mt({
                        token: e,
                        providedIn: 'any',
                        factory: () => Zn(gu),
                    })),
                    (e.__NG_ELEMENT_ID__ = -1),
                    e
                );
            })();
            function zy(e, t) {
                Es(xl(e)[1], ar());
            }
            function Du(e) {
                let t = (function Vf(e) {
                        return Object.getPrototypeOf(e.prototype).constructor;
                    })(e.type),
                    n = !0;
                const r = [e];
                for (; t; ) {
                    let i;
                    if (gr(e)) i = t.ɵcmp || t.ɵdir;
                    else {
                        if (t.ɵcmp) throw new Re(903, '');
                        i = t.ɵdir;
                    }
                    if (i) {
                        if (n) {
                            r.push(i);
                            const l = e;
                            (l.inputs = Cu(e.inputs)),
                                (l.declaredInputs = Cu(e.declaredInputs)),
                                (l.outputs = Cu(e.outputs));
                            const h = i.hostBindings;
                            h && Qy(e, h);
                            const _ = i.viewQuery,
                                x = i.contentQueries;
                            if (
                                (_ && Yy(e, _),
                                x && Zy(e, x),
                                O(e.inputs, i.inputs),
                                O(e.declaredInputs, i.declaredInputs),
                                O(e.outputs, i.outputs),
                                gr(i) && i.data.animation)
                            ) {
                                const V = e.data;
                                V.animation = (V.animation || []).concat(
                                    i.data.animation
                                );
                            }
                        }
                        const o = i.features;
                        if (o)
                            for (let l = 0; l < o.length; l++) {
                                const h = o[l];
                                h && h.ngInherit && h(e), h === Du && (n = !1);
                            }
                    }
                    t = Object.getPrototypeOf(t);
                }
                !(function Ky(e) {
                    let t = 0,
                        n = null;
                    for (let r = e.length - 1; r >= 0; r--) {
                        const i = e[r];
                        (i.hostVars = t += i.hostVars),
                            (i.hostAttrs = Ue(
                                i.hostAttrs,
                                (n = Ue(n, i.hostAttrs))
                            ));
                    }
                })(r);
            }
            function Cu(e) {
                return e === Mn ? {} : e === q ? [] : e;
            }
            function Yy(e, t) {
                const n = e.viewQuery;
                e.viewQuery = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            function Zy(e, t) {
                const n = e.contentQueries;
                e.contentQueries = n
                    ? (r, i, o) => {
                          t(r, i, o), n(r, i, o);
                      }
                    : t;
            }
            function Qy(e, t) {
                const n = e.hostBindings;
                e.hostBindings = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            let Za = null;
            function xo() {
                if (!Za) {
                    const e = Wt.Symbol;
                    if (e && e.iterator) Za = e.iterator;
                    else {
                        const t = Object.getOwnPropertyNames(Map.prototype);
                        for (let n = 0; n < t.length; ++n) {
                            const r = t[n];
                            'entries' !== r &&
                                'size' !== r &&
                                Map.prototype[r] === Map.prototype.entries &&
                                (Za = r);
                        }
                    }
                }
                return Za;
            }
            function pa(e) {
                return (
                    !!bu(e) &&
                    (Array.isArray(e) || (!(e instanceof Map) && xo() in e))
                );
            }
            function bu(e) {
                return (
                    null !== e &&
                    ('function' == typeof e || 'object' == typeof e)
                );
            }
            function Ss(e, t, n) {
                return (e[t] = n);
            }
            function ga(e, t) {
                return e[t];
            }
            function mi(e, t, n) {
                return !Object.is(e[t], n) && ((e[t] = n), !0);
            }
            function po(e, t, n, r) {
                const i = mi(e, t, n);
                return mi(e, t + 1, r) || i;
            }
            function Qa(e, t, n, r, i) {
                const o = po(e, t, n, r);
                return mi(e, t + 2, i) || o;
            }
            function Zi(e, t, n, r, i, o) {
                const l = po(e, t, n, r);
                return po(e, t + 2, i, o) || l;
            }
            function Tu(e, t, n, r) {
                const i = ht();
                return mi(i, xi(), t) && (Tn(), Is(hr(), i, e, t, n, r)), Tu;
            }
            function Lo(e, t, n, r, i, o) {
                const h = po(
                    e,
                    (function oi() {
                        return g.lFrame.bindingIndex;
                    })(),
                    n,
                    i
                );
                return di(2), h ? t + pe(n) + r + pe(i) + o : In;
            }
            function Qf(e, t, n, r, i, o, l, h) {
                const _ = ht(),
                    x = Tn(),
                    V = e + 20,
                    ee = x.firstCreatePass
                        ? (function rv(e, t, n, r, i, o, l, h, _) {
                              const x = t.consts,
                                  V = Mo(t, e, 4, l || null, Hn(x, h));
                              lu(t, n, V, Hn(x, _)), Es(t, V);
                              const ee = (V.tViews = za(
                                  2,
                                  V,
                                  r,
                                  i,
                                  o,
                                  t.directiveRegistry,
                                  t.pipeRegistry,
                                  null,
                                  t.schemas,
                                  x
                              ));
                              return (
                                  null !== t.queries &&
                                      (t.queries.template(t, V),
                                      (ee.queries =
                                          t.queries.embeddedTView(V))),
                                  V
                              );
                          })(V, x, _, t, n, r, i, o, l)
                        : x.data[V];
                Kr(ee, !1);
                const Te = _[11].createComment('');
                ja(x, _, Te, ee),
                    gi(Te, _),
                    Ka(_, (_[V] = mf(Te, _, Te, ee))),
                    wr(ee) && ou(x, _, ee),
                    null != l && au(_, ee, h);
            }
            function Jf(e) {
                return sn(
                    (function Zs() {
                        return g.lFrame.contextLView;
                    })(),
                    20 + e
                );
            }
            function ma(e, t = Nt.Default) {
                const n = ht();
                return null === n ? Zn(e, t) : ie(ar(), n, K(e), t);
            }
            function lh() {
                throw new Error('invalid');
            }
            function Su(e, t, n) {
                const r = ht();
                return (
                    mi(r, xi(), t) &&
                        (function ki(e, t, n, r, i, o, l, h) {
                            const _ = ct(t, n);
                            let V,
                                x = t.inputs;
                            !h && null != x && (V = x[r])
                                ? (Cf(e, n, V, r, i),
                                  Cr(t) &&
                                      (function ly(e, t) {
                                          const n = on(t, e);
                                          16 & n[2] || (n[2] |= 64);
                                      })(n, t.index))
                                : 3 & t.type &&
                                  ((r = (function ay(e) {
                                      return 'class' === e
                                          ? 'className'
                                          : 'for' === e
                                          ? 'htmlFor'
                                          : 'formaction' === e
                                          ? 'formAction'
                                          : 'innerHtml' === e
                                          ? 'innerHTML'
                                          : 'readonly' === e
                                          ? 'readOnly'
                                          : 'tabindex' === e
                                          ? 'tabIndex'
                                          : e;
                                  })(r)),
                                  (i = null != l ? l(i, t.value || '', r) : i),
                                  jn(o)
                                      ? o.setProperty(_, r, i)
                                      : ye(r) ||
                                        (_.setProperty
                                            ? _.setProperty(r, i)
                                            : (_[r] = i)));
                        })(Tn(), hr(), r, e, t, r[11], n, !1),
                    Su
                );
            }
            function Ou(e, t, n, r, i) {
                const l = i ? 'class' : 'style';
                Cf(e, n, t.inputs[l], l, r);
            }
            function qa(e, t, n, r) {
                const i = ht(),
                    o = Tn(),
                    l = 20 + e,
                    h = i[11],
                    _ = (i[l] = jl(
                        h,
                        t,
                        (function oo() {
                            return g.lFrame.currentNamespace;
                        })()
                    )),
                    x = o.firstCreatePass
                        ? (function Tv(e, t, n, r, i, o, l) {
                              const h = t.consts,
                                  x = Mo(t, e, 2, i, Hn(h, o));
                              return (
                                  lu(t, n, x, Hn(h, l)),
                                  null !== x.attrs && Ya(x, x.attrs, !1),
                                  null !== x.mergedAttrs &&
                                      Ya(x, x.mergedAttrs, !0),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, x),
                                  x
                              );
                          })(l, o, i, 0, t, n, r)
                        : o.data[l];
                Kr(x, !0);
                const V = x.mergedAttrs;
                null !== V && Q(h, _, V);
                const ee = x.classes;
                null !== ee && Kl(h, _, ee);
                const Te = x.styles;
                return (
                    null !== Te && Ld(h, _, Te),
                    64 != (64 & x.flags) && ja(o, i, _, x),
                    0 ===
                        (function jt() {
                            return g.lFrame.elementDepthCount;
                        })() && gi(_, i),
                    (function $n() {
                        g.lFrame.elementDepthCount++;
                    })(),
                    wr(x) && (ou(o, i, x), nf(o, x, i)),
                    null !== r && au(i, x),
                    qa
                );
            }
            function Xa() {
                let e = ar();
                xs() ? Fs() : ((e = e.parent), Kr(e, !1));
                const t = e;
                !(function Qr() {
                    g.lFrame.elementDepthCount--;
                })();
                const n = Tn();
                return (
                    n.firstCreatePass &&
                        (Es(n, e), pr(e) && n.queries.elementEnd(e)),
                    null != t.classesWithoutHost &&
                        (function a(e) {
                            return 0 != (16 & e.flags);
                        })(t) &&
                        Ou(n, t, ht(), t.classesWithoutHost, !0),
                    null != t.stylesWithoutHost &&
                        (function u(e) {
                            return 0 != (32 & e.flags);
                        })(t) &&
                        Ou(n, t, ht(), t.stylesWithoutHost, !1),
                    Xa
                );
            }
            function Pu(e, t, n, r) {
                return qa(e, t, n, r), Xa(), Pu;
            }
            function el(e, t, n) {
                const r = ht(),
                    i = Tn(),
                    o = e + 20,
                    l = i.firstCreatePass
                        ? (function Av(e, t, n, r, i) {
                              const o = t.consts,
                                  l = Hn(o, r),
                                  h = Mo(t, e, 8, 'ng-container', l);
                              return (
                                  null !== l && Ya(h, l, !0),
                                  lu(t, n, h, Hn(o, i)),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, h),
                                  h
                              );
                          })(o, i, r, t, n)
                        : i.data[o];
                Kr(l, !0);
                const h = (r[o] = r[11].createComment(''));
                return (
                    ja(i, r, h, l),
                    gi(h, r),
                    wr(l) && (ou(i, r, l), nf(i, l, r)),
                    null != n && au(r, l),
                    el
                );
            }
            function tl() {
                let e = ar();
                const t = Tn();
                return (
                    xs() ? Fs() : ((e = e.parent), Kr(e, !1)),
                    t.firstCreatePass &&
                        (Es(t, e), pr(e) && t.queries.elementEnd(e)),
                    tl
                );
            }
            function Ru(e, t, n) {
                return el(e, t, n), tl(), Ru;
            }
            function uh() {
                return ht();
            }
            function xu(e) {
                return !!e && 'function' == typeof e.then;
            }
            function ch(e) {
                return !!e && 'function' == typeof e.subscribe;
            }
            const dh = ch;
            function Fu(e, t, n, r) {
                const i = ht(),
                    o = Tn(),
                    l = ar();
                return (
                    (function hh(e, t, n, r, i, o, l, h) {
                        const _ = wr(r),
                            V = e.firstCreatePass && vf(e),
                            ee = t[8],
                            Te = yf(t);
                        let Ve = !0;
                        if (3 & r.type || h) {
                            const Ft = ct(r, t),
                                Zt = h ? h(Ft) : Ft,
                                ft = Te.length,
                                nn = h ? (Wn) => h(b(Wn[r.index])) : r.index;
                            if (jn(n)) {
                                let Wn = null;
                                if (
                                    (!h &&
                                        _ &&
                                        (Wn = (function wv(e, t, n, r) {
                                            const i = e.cleanup;
                                            if (null != i)
                                                for (
                                                    let o = 0;
                                                    o < i.length - 1;
                                                    o += 2
                                                ) {
                                                    const l = i[o];
                                                    if (
                                                        l === n &&
                                                        i[o + 1] === r
                                                    ) {
                                                        const h = t[7],
                                                            _ = i[o + 2];
                                                        return h.length > _
                                                            ? h[_]
                                                            : null;
                                                    }
                                                    'string' == typeof l &&
                                                        (o += 2);
                                                }
                                            return null;
                                        })(e, t, i, r.index)),
                                    null !== Wn)
                                )
                                    ((
                                        Wn.__ngLastListenerFn__ || Wn
                                    ).__ngNextListenerFn__ = o),
                                        (Wn.__ngLastListenerFn__ = o),
                                        (Ve = !1);
                                else {
                                    o = Nu(r, t, ee, o, !1);
                                    const dr = n.listen(Zt, i, o);
                                    Te.push(o, dr),
                                        V && V.push(i, nn, ft, ft + 1);
                                }
                            } else
                                (o = Nu(r, t, ee, o, !0)),
                                    Zt.addEventListener(i, o, l),
                                    Te.push(o),
                                    V && V.push(i, nn, ft, l);
                        } else o = Nu(r, t, ee, o, !1);
                        const at = r.outputs;
                        let Mt;
                        if (Ve && null !== at && (Mt = at[i])) {
                            const Ft = Mt.length;
                            if (Ft)
                                for (let Zt = 0; Zt < Ft; Zt += 2) {
                                    const Bi =
                                            t[Mt[Zt]][Mt[Zt + 1]].subscribe(o),
                                        yo = Te.length;
                                    Te.push(o, Bi),
                                        V && V.push(i, r.index, yo, -(yo + 1));
                                }
                        }
                    })(o, i, i[11], l, e, t, !!n, r),
                    Fu
                );
            }
            function ph(e, t, n, r) {
                try {
                    return !1 !== n(r);
                } catch (i) {
                    return Df(e, i), !1;
                }
            }
            function Nu(e, t, n, r, i) {
                return function o(l) {
                    if (l === Function) return r;
                    const h = 2 & e.flags ? on(e.index, t) : t;
                    0 == (32 & t[2]) && du(h);
                    let _ = ph(t, 0, r, l),
                        x = o.__ngNextListenerFn__;
                    for (; x; )
                        (_ = ph(t, 0, x, l) && _), (x = x.__ngNextListenerFn__);
                    return (
                        i &&
                            !1 === _ &&
                            (l.preventDefault(), (l.returnValue = !1)),
                        _
                    );
                };
            }
            function gh(e = 1) {
                return (function Us(e) {
                    return (g.lFrame.contextLView = (function Vs(e, t) {
                        for (; e > 0; ) (t = t[15]), e--;
                        return t;
                    })(e, g.lFrame.contextLView))[8];
                })(e);
            }
            function Iv(e, t) {
                let n = null;
                const r = (function k_(e) {
                    const t = e.attrs;
                    if (null != t) {
                        const n = t.indexOf(5);
                        if (0 == (1 & n)) return t[n + 1];
                    }
                    return null;
                })(e);
                for (let i = 0; i < t.length; i++) {
                    const o = t[i];
                    if ('*' !== o) {
                        if (null === r ? Vd(e, o, !0) : V_(r, o)) return i;
                    } else n = i;
                }
                return n;
            }
            function mh(e) {
                const t = ht()[16][6];
                if (!t.projection) {
                    const r = (t.projection = js(e ? e.length : 1, null)),
                        i = r.slice();
                    let o = t.child;
                    for (; null !== o; ) {
                        const l = e ? Iv(o, e) : 0;
                        null !== l &&
                            (i[l] ? (i[l].projectionNext = o) : (r[l] = o),
                            (i[l] = o)),
                            (o = o.next);
                    }
                }
            }
            function _h(e, t = 0, n) {
                const r = ht(),
                    i = Tn(),
                    o = Mo(i, 20 + e, 16, null, n || null);
                null === o.projection && (o.projection = t),
                    Fs(),
                    64 != (64 & o.flags) &&
                        (function O_(e, t, n) {
                            Nd(
                                t[11],
                                0,
                                t,
                                n,
                                Ad(e, n, t),
                                Sd(n.parent || t[6], n, t)
                            );
                        })(i, r, o);
            }
            function Ih(e, t, n, r, i) {
                const o = e[n + 1],
                    l = null === t;
                let h = r ? is(o) : zs(o),
                    _ = !1;
                for (; 0 !== h && (!1 === _ || l); ) {
                    const V = e[h + 1];
                    Ov(e[h], t) && ((_ = !0), (e[h + 1] = r ? Ql(V) : Yl(V))),
                        (h = r ? is(V) : zs(V));
                }
                _ && (e[n + 1] = r ? Yl(o) : Ql(o));
            }
            function Ov(e, t) {
                return (
                    null === e ||
                    null == t ||
                    (Array.isArray(e) ? e[1] : e) === t ||
                    (!(!Array.isArray(e) || 'string' != typeof t) &&
                        to(e, t) >= 0)
                );
            }
            const qr = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
            function Mh(e) {
                return e.substring(qr.key, qr.keyEnd);
            }
            function Pv(e) {
                return e.substring(qr.value, qr.valueEnd);
            }
            function Sh(e, t) {
                const n = qr.textEnd;
                return n === t
                    ? -1
                    : ((t = qr.keyEnd =
                          (function Fv(e, t, n) {
                              for (; t < n && e.charCodeAt(t) > 32; ) t++;
                              return t;
                          })(e, (qr.key = t), n)),
                      Wo(e, t, n));
            }
            function Oh(e, t) {
                const n = qr.textEnd;
                let r = (qr.key = Wo(e, t, n));
                return n === r
                    ? -1
                    : ((r = qr.keyEnd =
                          (function Nv(e, t, n) {
                              let r;
                              for (
                                  ;
                                  t < n &&
                                  (45 === (r = e.charCodeAt(t)) ||
                                      95 === r ||
                                      ((-33 & r) >= 65 && (-33 & r) <= 90) ||
                                      (r >= 48 && r <= 57));

                              )
                                  t++;
                              return t;
                          })(e, r, n)),
                      (r = Rh(e, r, n)),
                      (r = qr.value = Wo(e, r, n)),
                      (r = qr.valueEnd =
                          (function Lv(e, t, n) {
                              let r = -1,
                                  i = -1,
                                  o = -1,
                                  l = t,
                                  h = l;
                              for (; l < n; ) {
                                  const _ = e.charCodeAt(l++);
                                  if (59 === _) return h;
                                  34 === _ || 39 === _
                                      ? (h = l = xh(e, _, l, n))
                                      : t === l - 4 &&
                                        85 === o &&
                                        82 === i &&
                                        76 === r &&
                                        40 === _
                                      ? (h = l = xh(e, 41, l, n))
                                      : _ > 32 && (h = l),
                                      (o = i),
                                      (i = r),
                                      (r = -33 & _);
                              }
                              return h;
                          })(e, r, n)),
                      Rh(e, r, n));
            }
            function Ph(e) {
                (qr.key = 0),
                    (qr.keyEnd = 0),
                    (qr.value = 0),
                    (qr.valueEnd = 0),
                    (qr.textEnd = e.length);
            }
            function Wo(e, t, n) {
                for (; t < n && e.charCodeAt(t) <= 32; ) t++;
                return t;
            }
            function Rh(e, t, n, r) {
                return (t = Wo(e, t, n)) < n && t++, t;
            }
            function xh(e, t, n, r) {
                let i = -1,
                    o = n;
                for (; o < r; ) {
                    const l = e.charCodeAt(o++);
                    if (l == t && 92 !== i) return o;
                    i = 92 == l && 92 === i ? 0 : l;
                }
                throw new Error();
            }
            function ku(e, t, n) {
                return as(e, t, n, !1), ku;
            }
            function Bu(e, t) {
                return as(e, t, null, !0), Bu;
            }
            function os(e) {
                ls(kh, kv, e, !1);
            }
            function kv(e, t) {
                for (
                    let n = (function xv(e) {
                        return Ph(e), Oh(e, Wo(e, 0, qr.textEnd));
                    })(t);
                    n >= 0;
                    n = Oh(t, n)
                )
                    kh(e, Mh(t), Pv(t));
            }
            function Fh(e) {
                ls(pi, Os, e, !0);
            }
            function Os(e, t) {
                for (
                    let n = (function Rv(e) {
                        return Ph(e), Sh(e, Wo(e, 0, qr.textEnd));
                    })(t);
                    n >= 0;
                    n = Sh(t, n)
                )
                    pi(e, Mh(t), !0);
            }
            function as(e, t, n, r) {
                const i = ht(),
                    o = Tn(),
                    l = di(2);
                o.firstUpdatePass && Lh(o, e, l, r),
                    t !== In &&
                        mi(i, l, t) &&
                        Bh(
                            o,
                            o.data[Vr()],
                            i,
                            i[11],
                            e,
                            (i[l + 1] = (function Wv(e, t) {
                                return (
                                    null == e ||
                                        ('string' == typeof t
                                            ? (e += t)
                                            : 'object' == typeof e &&
                                              (e = N(Gs(e)))),
                                    e
                                );
                            })(t, n)),
                            r,
                            l
                        );
            }
            function ls(e, t, n, r) {
                const i = Tn(),
                    o = di(2);
                i.firstUpdatePass && Lh(i, null, o, r);
                const l = ht();
                if (n !== In && mi(l, o, n)) {
                    const h = i.data[Vr()];
                    if (Vh(h, r) && !Nh(i, o)) {
                        let _ = r ? h.classesWithoutHost : h.stylesWithoutHost;
                        null !== _ && (n = U(_, n || '')), Ou(i, h, l, n, r);
                    } else
                        !(function $v(e, t, n, r, i, o, l, h) {
                            i === In && (i = q);
                            let _ = 0,
                                x = 0,
                                V = 0 < i.length ? i[0] : null,
                                ee = 0 < o.length ? o[0] : null;
                            for (; null !== V || null !== ee; ) {
                                const Te = _ < i.length ? i[_ + 1] : void 0,
                                    Ve = x < o.length ? o[x + 1] : void 0;
                                let Mt,
                                    at = null;
                                V === ee
                                    ? ((_ += 2),
                                      (x += 2),
                                      Te !== Ve && ((at = ee), (Mt = Ve)))
                                    : null === ee || (null !== V && V < ee)
                                    ? ((_ += 2), (at = V))
                                    : ((x += 2), (at = ee), (Mt = Ve)),
                                    null !== at && Bh(e, t, n, r, at, Mt, l, h),
                                    (V = _ < i.length ? i[_] : null),
                                    (ee = x < o.length ? o[x] : null);
                            }
                        })(
                            i,
                            h,
                            l,
                            l[11],
                            l[o + 1],
                            (l[o + 1] = (function Hv(e, t, n) {
                                if (null == n || '' === n) return q;
                                const r = [],
                                    i = Gs(n);
                                if (Array.isArray(i))
                                    for (let o = 0; o < i.length; o++)
                                        e(r, i[o], !0);
                                else if ('object' == typeof i)
                                    for (const o in i)
                                        i.hasOwnProperty(o) && e(r, o, i[o]);
                                else 'string' == typeof i && t(r, i);
                                return r;
                            })(e, t, n)),
                            r,
                            o
                        );
                }
            }
            function Nh(e, t) {
                return t >= e.expandoStartIndex;
            }
            function Lh(e, t, n, r) {
                const i = e.data;
                if (null === i[n + 1]) {
                    const o = i[Vr()],
                        l = Nh(e, n);
                    Vh(o, r) && null === t && !l && (t = !1),
                        (t = (function Bv(e, t, n, r) {
                            const i = (function hs(e) {
                                const t = g.lFrame.currentDirectiveIndex;
                                return -1 === t ? null : e[t];
                            })(e);
                            let o = r ? t.residualClasses : t.residualStyles;
                            if (null === i)
                                0 === (r ? t.classBindings : t.styleBindings) &&
                                    ((n = _a(
                                        (n = Uu(null, e, t, n, r)),
                                        t.attrs,
                                        r
                                    )),
                                    (o = null));
                            else {
                                const l = t.directiveStylingLast;
                                if (-1 === l || e[l] !== i)
                                    if (((n = Uu(i, e, t, n, r)), null === o)) {
                                        let _ = (function Uv(e, t, n) {
                                            const r = n
                                                ? t.classBindings
                                                : t.styleBindings;
                                            if (0 !== zs(r)) return e[is(r)];
                                        })(e, t, r);
                                        void 0 !== _ &&
                                            Array.isArray(_) &&
                                            ((_ = Uu(null, e, t, _[1], r)),
                                            (_ = _a(_, t.attrs, r)),
                                            (function Vv(e, t, n, r) {
                                                e[
                                                    is(
                                                        n
                                                            ? t.classBindings
                                                            : t.styleBindings
                                                    )
                                                ] = r;
                                            })(e, t, r, _));
                                    } else
                                        o = (function jv(e, t, n) {
                                            let r;
                                            const i = t.directiveEnd;
                                            for (
                                                let o =
                                                    1 + t.directiveStylingLast;
                                                o < i;
                                                o++
                                            )
                                                r = _a(r, e[o].hostAttrs, n);
                                            return _a(r, t.attrs, n);
                                        })(e, t, r);
                            }
                            return (
                                void 0 !== o &&
                                    (r
                                        ? (t.residualClasses = o)
                                        : (t.residualStyles = o)),
                                n
                            );
                        })(i, o, t, r)),
                        (function Mv(e, t, n, r, i, o) {
                            let l = o ? t.classBindings : t.styleBindings,
                                h = is(l),
                                _ = zs(l);
                            e[r] = n;
                            let V,
                                x = !1;
                            if (Array.isArray(n)) {
                                const ee = n;
                                (V = ee[1]),
                                    (null === V || to(ee, V) > 0) && (x = !0);
                            } else V = n;
                            if (i)
                                if (0 !== _) {
                                    const Te = is(e[h + 1]);
                                    (e[r + 1] = $a(Te, h)),
                                        0 !== Te &&
                                            (e[Te + 1] = Zl(e[Te + 1], r)),
                                        (e[h + 1] = (function W_(e, t) {
                                            return (131071 & e) | (t << 17);
                                        })(e[h + 1], r));
                                } else
                                    (e[r + 1] = $a(h, 0)),
                                        0 !== h && (e[h + 1] = Zl(e[h + 1], r)),
                                        (h = r);
                            else
                                (e[r + 1] = $a(_, 0)),
                                    0 === h
                                        ? (h = r)
                                        : (e[_ + 1] = Zl(e[_ + 1], r)),
                                    (_ = r);
                            x && (e[r + 1] = Yl(e[r + 1])),
                                Ih(e, V, r, !0),
                                Ih(e, V, r, !1),
                                (function Sv(e, t, n, r, i) {
                                    const o = i
                                        ? e.residualClasses
                                        : e.residualStyles;
                                    null != o &&
                                        'string' == typeof t &&
                                        to(o, t) >= 0 &&
                                        (n[r + 1] = Ql(n[r + 1]));
                                })(t, V, e, r, o),
                                (l = $a(h, _)),
                                o
                                    ? (t.classBindings = l)
                                    : (t.styleBindings = l);
                        })(i, o, t, n, l, r);
                }
            }
            function Uu(e, t, n, r, i) {
                let o = null;
                const l = n.directiveEnd;
                let h = n.directiveStylingLast;
                for (
                    -1 === h ? (h = n.directiveStart) : h++;
                    h < l && ((o = t[h]), (r = _a(r, o.hostAttrs, i)), o !== e);

                )
                    h++;
                return null !== e && (n.directiveStylingLast = h), r;
            }
            function _a(e, t, n) {
                const r = n ? 1 : 2;
                let i = -1;
                if (null !== t)
                    for (let o = 0; o < t.length; o++) {
                        const l = t[o];
                        'number' == typeof l
                            ? (i = l)
                            : i === r &&
                              (Array.isArray(e) ||
                                  (e = void 0 === e ? [] : ['', e]),
                              pi(e, l, !!n || t[++o]));
                    }
                return void 0 === e ? null : e;
            }
            function kh(e, t, n) {
                pi(e, t, Gs(n));
            }
            function Bh(e, t, n, r, i, o, l, h) {
                if (!(3 & t.type)) return;
                const _ = e.data,
                    x = _[h + 1];
                nl(
                    (function zd(e) {
                        return 1 == (1 & e);
                    })(x)
                        ? Uh(_, t, n, i, zs(x), l)
                        : void 0
                ) ||
                    (nl(o) ||
                        ((function Gd(e) {
                            return 2 == (2 & e);
                        })(x) &&
                            (o = Uh(_, null, n, i, h, l))),
                    (function R_(e, t, n, r, i) {
                        const o = jn(e);
                        if (t)
                            i
                                ? o
                                    ? e.addClass(n, r)
                                    : n.classList.add(r)
                                : o
                                ? e.removeClass(n, r)
                                : n.classList.remove(r);
                        else {
                            let l =
                                -1 === r.indexOf('-') ? void 0 : ws.DashCase;
                            if (null == i)
                                o
                                    ? e.removeStyle(n, r, l)
                                    : n.style.removeProperty(r);
                            else {
                                const h =
                                    'string' == typeof i &&
                                    i.endsWith('!important');
                                h &&
                                    ((i = i.slice(0, -10)),
                                    (l |= ws.Important)),
                                    o
                                        ? e.setStyle(n, r, i, l)
                                        : n.style.setProperty(
                                              r,
                                              i,
                                              h ? 'important' : ''
                                          );
                            }
                        }
                    })(r, l, Je(Vr(), n), i, o));
            }
            function Uh(e, t, n, r, i, o) {
                const l = null === t;
                let h;
                for (; i > 0; ) {
                    const _ = e[i],
                        x = Array.isArray(_),
                        V = x ? _[1] : _,
                        ee = null === V;
                    let Te = n[i + 1];
                    Te === In && (Te = ee ? q : void 0);
                    let Ve = ee ? ta(Te, r) : V === r ? Te : void 0;
                    if (
                        (x && !nl(Ve) && (Ve = ta(_, r)),
                        nl(Ve) && ((h = Ve), l))
                    )
                        return h;
                    const at = e[i + 1];
                    i = l ? is(at) : zs(at);
                }
                if (null !== t) {
                    let _ = o ? t.residualClasses : t.residualStyles;
                    null != _ && (h = ta(_, r));
                }
                return h;
            }
            function nl(e) {
                return void 0 !== e;
            }
            function Vh(e, t) {
                return 0 != (e.flags & (t ? 16 : 32));
            }
            function jh(e, t = '') {
                const n = ht(),
                    r = Tn(),
                    i = e + 20,
                    o = r.firstCreatePass ? Mo(r, i, 1, t, null) : r.data[i],
                    l = (n[i] = (function Vl(e, t) {
                        return jn(e) ? e.createText(t) : e.createTextNode(t);
                    })(n[11], t));
                ja(r, n, l, o), Kr(o, !1);
            }
            function Vu(e) {
                return rl('', e, ''), Vu;
            }
            function rl(e, t, n) {
                const r = ht(),
                    i = (function No(e, t, n, r) {
                        return mi(e, xi(), n) ? t + pe(n) + r : In;
                    })(r, e, t, n);
                return i !== In && Ks(r, Vr(), i), rl;
            }
            function ju(e, t, n, r, i) {
                const o = ht(),
                    l = Lo(o, e, t, n, r, i);
                return l !== In && Ks(o, Vr(), l), ju;
            }
            const go = void 0;
            var cE = [
                'en',
                [['a', 'p'], ['AM', 'PM'], go],
                [['AM', 'PM'], go, go],
                [
                    ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
                    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                    [
                        'Sunday',
                        'Monday',
                        'Tuesday',
                        'Wednesday',
                        'Thursday',
                        'Friday',
                        'Saturday',
                    ],
                    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                ],
                go,
                [
                    [
                        'J',
                        'F',
                        'M',
                        'A',
                        'M',
                        'J',
                        'J',
                        'A',
                        'S',
                        'O',
                        'N',
                        'D',
                    ],
                    [
                        'Jan',
                        'Feb',
                        'Mar',
                        'Apr',
                        'May',
                        'Jun',
                        'Jul',
                        'Aug',
                        'Sep',
                        'Oct',
                        'Nov',
                        'Dec',
                    ],
                    [
                        'January',
                        'February',
                        'March',
                        'April',
                        'May',
                        'June',
                        'July',
                        'August',
                        'September',
                        'October',
                        'November',
                        'December',
                    ],
                ],
                go,
                [
                    ['B', 'A'],
                    ['BC', 'AD'],
                    ['Before Christ', 'Anno Domini'],
                ],
                0,
                [6, 0],
                ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
                ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
                ['{1}, {0}', go, "{1} 'at' {0}", go],
                [
                    '.',
                    ',',
                    ';',
                    '%',
                    '+',
                    '-',
                    'E',
                    '\xd7',
                    '\u2030',
                    '\u221e',
                    'NaN',
                    ':',
                ],
                ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
                'USD',
                '$',
                'US Dollar',
                {},
                'ltr',
                function uE(e) {
                    const n = Math.floor(Math.abs(e)),
                        r = e.toString().replace(/^[^.]*\.?/, '').length;
                    return 1 === n && 0 === r ? 1 : 5;
                },
            ];
            let Go = {};
            function Hu(e) {
                const t = (function dE(e) {
                    return e.toLowerCase().replace(/_/g, '-');
                })(e);
                let n = ap(t);
                if (n) return n;
                const r = t.split('-')[0];
                if (((n = ap(r)), n)) return n;
                if ('en' === r) return cE;
                throw new Error(`Missing locale data for the locale "${e}".`);
            }
            function op(e) {
                return Hu(e)[fn.PluralCase];
            }
            function ap(e) {
                return (
                    e in Go ||
                        (Go[e] =
                            Wt.ng &&
                            Wt.ng.common &&
                            Wt.ng.common.locales &&
                            Wt.ng.common.locales[e]),
                    Go[e]
                );
            }
            var fn = (() => (
                ((fn = fn || {})[(fn.LocaleId = 0)] = 'LocaleId'),
                (fn[(fn.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
                (fn[(fn.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
                (fn[(fn.DaysFormat = 3)] = 'DaysFormat'),
                (fn[(fn.DaysStandalone = 4)] = 'DaysStandalone'),
                (fn[(fn.MonthsFormat = 5)] = 'MonthsFormat'),
                (fn[(fn.MonthsStandalone = 6)] = 'MonthsStandalone'),
                (fn[(fn.Eras = 7)] = 'Eras'),
                (fn[(fn.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
                (fn[(fn.WeekendRange = 9)] = 'WeekendRange'),
                (fn[(fn.DateFormat = 10)] = 'DateFormat'),
                (fn[(fn.TimeFormat = 11)] = 'TimeFormat'),
                (fn[(fn.DateTimeFormat = 12)] = 'DateTimeFormat'),
                (fn[(fn.NumberSymbols = 13)] = 'NumberSymbols'),
                (fn[(fn.NumberFormats = 14)] = 'NumberFormats'),
                (fn[(fn.CurrencyCode = 15)] = 'CurrencyCode'),
                (fn[(fn.CurrencySymbol = 16)] = 'CurrencySymbol'),
                (fn[(fn.CurrencyName = 17)] = 'CurrencyName'),
                (fn[(fn.Currencies = 18)] = 'Currencies'),
                (fn[(fn.Directionality = 19)] = 'Directionality'),
                (fn[(fn.PluralCase = 20)] = 'PluralCase'),
                (fn[(fn.ExtraData = 21)] = 'ExtraData'),
                fn
            ))();
            const il = 'en-US';
            let lp = il;
            function Gu(e, t, n, r, i) {
                if (((e = K(e)), Array.isArray(e)))
                    for (let o = 0; o < e.length; o++) Gu(e[o], t, n, r, i);
                else {
                    const o = Tn(),
                        l = ht();
                    let h = Ro(e) ? e : K(e.provide),
                        _ = If(e);
                    const x = ar(),
                        V = 1048575 & x.providerIndexes,
                        ee = x.directiveStart,
                        Te = x.providerIndexes >> 20;
                    if (Ro(e) || !e.multi) {
                        const Ve = new fi(_, i, ma),
                            at = Ku(h, t, i ? V : V + Te, ee);
                        -1 === at
                            ? (c(hi(x, l), o, h),
                              zu(o, e, t.length),
                              t.push(h),
                              x.directiveStart++,
                              x.directiveEnd++,
                              i && (x.providerIndexes += 1048576),
                              n.push(Ve),
                              l.push(Ve))
                            : ((n[at] = Ve), (l[at] = Ve));
                    } else {
                        const Ve = Ku(h, t, V + Te, ee),
                            at = Ku(h, t, V, V + Te),
                            Mt = Ve >= 0 && n[Ve],
                            Ft = at >= 0 && n[at];
                        if ((i && !Ft) || (!i && !Mt)) {
                            c(hi(x, l), o, h);
                            const Zt = (function uD(e, t, n, r, i) {
                                const o = new fi(e, n, ma);
                                return (
                                    (o.multi = []),
                                    (o.index = t),
                                    (o.componentProviders = 0),
                                    Rp(o, i, r && !n),
                                    o
                                );
                            })(i ? lD : aD, n.length, i, r, _);
                            !i && Ft && (n[at].providerFactory = Zt),
                                zu(o, e, t.length, 0),
                                t.push(h),
                                x.directiveStart++,
                                x.directiveEnd++,
                                i && (x.providerIndexes += 1048576),
                                n.push(Zt),
                                l.push(Zt);
                        } else
                            zu(
                                o,
                                e,
                                Ve > -1 ? Ve : at,
                                Rp(n[i ? at : Ve], _, !i && r)
                            );
                        !i && r && Ft && n[at].componentProviders++;
                    }
                }
            }
            function zu(e, t, n, r) {
                const i = Ro(t),
                    o = (function Ny(e) {
                        return !!e.useClass;
                    })(t);
                if (i || o) {
                    const _ = (o ? K(t.useClass) : t).prototype.ngOnDestroy;
                    if (_) {
                        const x = e.destroyHooks || (e.destroyHooks = []);
                        if (!i && t.multi) {
                            const V = x.indexOf(n);
                            -1 === V ? x.push(n, [r, _]) : x[V + 1].push(r, _);
                        } else x.push(n, _);
                    }
                }
            }
            function Rp(e, t, n) {
                return n && e.componentProviders++, e.multi.push(t) - 1;
            }
            function Ku(e, t, n, r) {
                for (let i = n; i < r; i++) if (t[i] === e) return i;
                return -1;
            }
            function aD(e, t, n, r) {
                return Yu(this.multi, []);
            }
            function lD(e, t, n, r) {
                const i = this.multi;
                let o;
                if (this.providerFactory) {
                    const l = this.providerFactory.componentProviders,
                        h = dt(n, n[1], this.providerFactory.index, r);
                    (o = h.slice(0, l)), Yu(i, o);
                    for (let _ = l; _ < h.length; _++) o.push(h[_]);
                } else (o = []), Yu(i, o);
                return o;
            }
            function Yu(e, t) {
                for (let n = 0; n < e.length; n++) t.push((0, e[n])());
                return t;
            }
            function xp(e, t = []) {
                return (n) => {
                    n.providersResolver = (r, i) =>
                        (function oD(e, t, n) {
                            const r = Tn();
                            if (r.firstCreatePass) {
                                const i = gr(e);
                                Gu(n, r.data, r.blueprint, i, !0),
                                    Gu(t, r.data, r.blueprint, i, !1);
                            }
                        })(r, i ? i(e) : e, t);
                };
            }
            class Fp {}
            class fD {
                resolveComponentFactory(t) {
                    throw (function dD(e) {
                        const t = Error(
                            `No component factory found for ${N(
                                e
                            )}. Did you add it to @NgModule.entryComponents?`
                        );
                        return (t.ngComponent = e), t;
                    })(t);
                }
            }
            let ul = (() => {
                class e {}
                return (e.NULL = new fD()), e;
            })();
            function hD() {
                return Ko(ar(), ht());
            }
            function Ko(e, t) {
                return new Ca(ct(e, t));
            }
            let Ca = (() => {
                class e {
                    constructor(n) {
                        this.nativeElement = n;
                    }
                }
                return (e.__NG_ELEMENT_ID__ = hD), e;
            })();
            function pD(e) {
                return e instanceof Ca ? e.nativeElement : e;
            }
            class Lp {}
            let gD = (() => {
                    class e {}
                    return (
                        (e.__NG_ELEMENT_ID__ = () =>
                            (function _D() {
                                const e = ht(),
                                    n = on(ar().index, e);
                                return (function mD(e) {
                                    return e[11];
                                })(Vn(n) ? n : e);
                            })()),
                        e
                    );
                })(),
                yD = (() => {
                    class e {}
                    return (
                        (e.ɵprov = mt({
                            token: e,
                            providedIn: 'root',
                            factory: () => null,
                        })),
                        e
                    );
                })();
            class kp {
                constructor(t) {
                    (this.full = t),
                        (this.major = t.split('.')[0]),
                        (this.minor = t.split('.')[1]),
                        (this.patch = t.split('.').slice(2).join('.'));
                }
            }
            const Bp = new kp('13.3.10'),
                Zu = {};
            function cl(e, t, n, r, i = !1) {
                for (; null !== n; ) {
                    const o = t[n.index];
                    if ((null !== o && r.push(b(o)), an(o)))
                        for (let h = 10; h < o.length; h++) {
                            const _ = o[h],
                                x = _[1].firstChild;
                            null !== x && cl(_[1], _, x, r);
                        }
                    const l = n.type;
                    if (8 & l) cl(e, t, n.child, r);
                    else if (32 & l) {
                        const h = kl(n, t);
                        let _;
                        for (; (_ = h()); ) r.push(_);
                    } else if (16 & l) {
                        const h = xd(t, n);
                        if (Array.isArray(h)) r.push(...h);
                        else {
                            const _ = ua(t[16]);
                            cl(_[1], _, h, r, !0);
                        }
                    }
                    n = i ? n.projectionNext : n.next;
                }
                return r;
            }
            class ba {
                constructor(t, n) {
                    (this._lView = t),
                        (this._cdRefInjectingView = n),
                        (this._appRef = null),
                        (this._attachedToViewContainer = !1);
                }
                get rootNodes() {
                    const t = this._lView,
                        n = t[1];
                    return cl(n, t, n.firstChild, []);
                }
                get context() {
                    return this._lView[8];
                }
                set context(t) {
                    this._lView[8] = t;
                }
                get destroyed() {
                    return 256 == (256 & this._lView[2]);
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const t = this._lView[3];
                        if (an(t)) {
                            const n = t[8],
                                r = n ? n.indexOf(this) : -1;
                            r > -1 && (Hl(t, r), eo(n, r));
                        }
                        this._attachedToViewContainer = !1;
                    }
                    Td(this._lView[1], this._lView);
                }
                onDestroy(t) {
                    lf(this._lView[1], this._lView, null, t);
                }
                markForCheck() {
                    du(this._cdRefInjectingView || this._lView);
                }
                detach() {
                    this._lView[2] &= -129;
                }
                reattach() {
                    this._lView[2] |= 128;
                }
                detectChanges() {
                    !(function hu(e, t, n) {
                        const r = t[10];
                        r.begin && r.begin();
                        try {
                            Oo(e, t, e.template, n);
                        } catch (i) {
                            throw (Df(t, i), i);
                        } finally {
                            r.end && r.end();
                        }
                    })(this._lView[1], this._lView, this.context);
                }
                checkNoChanges() {}
                attachToViewContainerRef() {
                    if (this._appRef) throw new Re(902, '');
                    this._attachedToViewContainer = !0;
                }
                detachFromAppRef() {
                    (this._appRef = null),
                        (function C_(e, t) {
                            ca(e, t, t[11], 2, null, null);
                        })(this._lView[1], this._lView);
                }
                attachToAppRef(t) {
                    if (this._attachedToViewContainer) throw new Re(902, '');
                    this._appRef = t;
                }
            }
            class vD extends ba {
                constructor(t) {
                    super(t), (this._view = t);
                }
                detectChanges() {
                    _f(this._view);
                }
                checkNoChanges() {}
                get context() {
                    return null;
                }
            }
            class Up extends ul {
                constructor(t) {
                    super(), (this.ngModule = t);
                }
                resolveComponentFactory(t) {
                    const n = Se(t);
                    return new Qu(n, this.ngModule);
                }
            }
            function Vp(e) {
                const t = [];
                for (let n in e)
                    e.hasOwnProperty(n) &&
                        t.push({ propName: e[n], templateName: n });
                return t;
            }
            class Qu extends Fp {
                constructor(t, n) {
                    super(),
                        (this.componentDef = t),
                        (this.ngModule = n),
                        (this.componentType = t.type),
                        (this.selector = (function H_(e) {
                            return e.map(j_).join(',');
                        })(t.selectors)),
                        (this.ngContentSelectors = t.ngContentSelectors
                            ? t.ngContentSelectors
                            : []),
                        (this.isBoundToModule = !!n);
                }
                get inputs() {
                    return Vp(this.componentDef.inputs);
                }
                get outputs() {
                    return Vp(this.componentDef.outputs);
                }
                create(t, n, r, i) {
                    const o = (i = i || this.ngModule)
                            ? (function DD(e, t) {
                                  return {
                                      get: (n, r, i) => {
                                          const o = e.get(n, Zu, i);
                                          return o !== Zu || r === Zu
                                              ? o
                                              : t.get(n, r, i);
                                      },
                                  };
                              })(t, i.injector)
                            : t,
                        l = o.get(Lp, C),
                        h = o.get(yD, null),
                        _ = l.createRenderer(null, this.componentDef),
                        x = this.componentDef.selectors[0][0] || 'div',
                        V = r
                            ? (function af(e, t, n) {
                                  if (jn(e))
                                      return e.selectRootElement(
                                          t,
                                          n === Ze.ShadowDom
                                      );
                                  let r =
                                      'string' == typeof t
                                          ? e.querySelector(t)
                                          : t;
                                  return (r.textContent = ''), r;
                              })(_, r, this.componentDef.encapsulation)
                            : jl(
                                  l.createRenderer(null, this.componentDef),
                                  x,
                                  (function ED(e) {
                                      const t = e.toLowerCase();
                                      return 'svg' === t
                                          ? 'svg'
                                          : 'math' === t
                                          ? 'math'
                                          : null;
                                  })(x)
                              ),
                        ee = this.componentDef.onPush ? 576 : 528,
                        Te = (function Uf(e, t) {
                            return {
                                components: [],
                                scheduler: e || p_,
                                clean: wy,
                                playerHandler: t || null,
                                flags: 0,
                            };
                        })(),
                        Ve = za(
                            0,
                            null,
                            null,
                            1,
                            0,
                            null,
                            null,
                            null,
                            null,
                            null
                        ),
                        at = da(null, Ve, Te, ee, null, null, l, _, h, o);
                    let Mt, Ft;
                    ts(at);
                    try {
                        const Zt = (function kf(e, t, n, r, i, o) {
                            const l = n[1];
                            n[20] = e;
                            const _ = Mo(l, 20, 2, '#host', null),
                                x = (_.mergedAttrs = t.hostAttrs);
                            null !== x &&
                                (Ya(_, x, !0),
                                null !== e &&
                                    (Q(i, e, x),
                                    null !== _.classes && Kl(i, e, _.classes),
                                    null !== _.styles && Ld(i, e, _.styles)));
                            const V = r.createRenderer(e, t),
                                ee = da(
                                    n,
                                    rf(t),
                                    null,
                                    t.onPush ? 64 : 16,
                                    n[20],
                                    _,
                                    r,
                                    V,
                                    o || null,
                                    null
                                );
                            return (
                                l.firstCreatePass &&
                                    (c(hi(_, n), l, t.type),
                                    hf(l, _),
                                    pf(_, n.length, 1)),
                                Ka(n, ee),
                                (n[20] = ee)
                            );
                        })(V, this.componentDef, at, l, _);
                        if (V)
                            if (r) Q(_, V, ['ng-version', Bp.full]);
                            else {
                                const { attrs: ft, classes: nn } = (function $_(
                                    e
                                ) {
                                    const t = [],
                                        n = [];
                                    let r = 1,
                                        i = 2;
                                    for (; r < e.length; ) {
                                        let o = e[r];
                                        if ('string' == typeof o)
                                            2 === i
                                                ? '' !== o && t.push(o, e[++r])
                                                : 8 === i && n.push(o);
                                        else {
                                            if (!rs(i)) break;
                                            i = o;
                                        }
                                        r++;
                                    }
                                    return { attrs: t, classes: n };
                                })(this.componentDef.selectors[0]);
                                ft && Q(_, V, ft),
                                    nn &&
                                        nn.length > 0 &&
                                        Kl(_, V, nn.join(' '));
                            }
                        if (((Ft = cn(Ve, 20)), void 0 !== n)) {
                            const ft = (Ft.projection = []);
                            for (
                                let nn = 0;
                                nn < this.ngContentSelectors.length;
                                nn++
                            ) {
                                const Wn = n[nn];
                                ft.push(null != Wn ? Array.from(Wn) : null);
                            }
                        }
                        (Mt = (function Bf(e, t, n, r, i) {
                            const o = n[1],
                                l = (function cy(e, t, n) {
                                    const r = ar();
                                    e.firstCreatePass &&
                                        (n.providersResolver &&
                                            n.providersResolver(n),
                                        gf(e, r, t, So(e, t, 1, null), n));
                                    const i = dt(t, e, r.directiveStart, r);
                                    gi(i, t);
                                    const o = ct(r, t);
                                    return o && gi(o, t), i;
                                })(o, n, t);
                            if (
                                (r.components.push(l),
                                (e[8] = l),
                                i && i.forEach((_) => _(l, t)),
                                t.contentQueries)
                            ) {
                                const _ = ar();
                                t.contentQueries(1, l, _.directiveStart);
                            }
                            const h = ar();
                            return (
                                !o.firstCreatePass ||
                                    (null === t.hostBindings &&
                                        null === t.hostAttrs) ||
                                    (Fi(h.index),
                                    df(
                                        n[1],
                                        h,
                                        0,
                                        h.directiveStart,
                                        h.directiveEnd,
                                        t
                                    ),
                                    ff(t, l)),
                                l
                            );
                        })(Zt, this.componentDef, at, Te, [zy])),
                            fa(Ve, at, null);
                    } finally {
                        zi();
                    }
                    return new bD(this.componentType, Mt, Ko(Ft, at), at, Ft);
                }
            }
            class bD extends class cD {} {
                constructor(t, n, r, i, o) {
                    super(),
                        (this.location = r),
                        (this._rootLView = i),
                        (this._tNode = o),
                        (this.instance = n),
                        (this.hostView = this.changeDetectorRef = new vD(i)),
                        (this.componentType = t);
                }
                get injector() {
                    return new lr(this._tNode, this._rootLView);
                }
                destroy() {
                    this.hostView.destroy();
                }
                onDestroy(t) {
                    this.hostView.onDestroy(t);
                }
            }
            class Yo {}
            class jp {}
            const Zo = new Map();
            class Wp extends Yo {
                constructor(t, n) {
                    super(),
                        (this._parent = n),
                        (this._bootstrapComponents = []),
                        (this.injector = this),
                        (this.destroyCbs = []),
                        (this.componentFactoryResolver = new Up(this));
                    const r = Vt(t);
                    (this._bootstrapComponents = As(r.bootstrap)),
                        (this._r3Injector = wf(
                            t,
                            n,
                            [
                                { provide: Yo, useValue: this },
                                {
                                    provide: ul,
                                    useValue: this.componentFactoryResolver,
                                },
                            ],
                            N(t)
                        )),
                        this._r3Injector._resolveInjectorDefTypes(),
                        (this.instance = this.get(t));
                }
                get(t, n = Ms.THROW_IF_NOT_FOUND, r = Nt.Default) {
                    return t === Ms || t === Yo || t === gu
                        ? this
                        : this._r3Injector.get(t, n, r);
                }
                destroy() {
                    const t = this._r3Injector;
                    !t.destroyed && t.destroy(),
                        this.destroyCbs.forEach((n) => n()),
                        (this.destroyCbs = null);
                }
                onDestroy(t) {
                    this.destroyCbs.push(t);
                }
            }
            class Ju extends jp {
                constructor(t) {
                    super(),
                        (this.moduleType = t),
                        null !== Vt(t) &&
                            (function AD(e) {
                                const t = new Set();
                                !(function n(r) {
                                    const i = Vt(r, !0),
                                        o = i.id;
                                    null !== o &&
                                        ((function Hp(e, t, n) {
                                            if (t && t !== n)
                                                throw new Error(
                                                    `Duplicate module registered for ${e} - ${N(
                                                        t
                                                    )} vs ${N(t.name)}`
                                                );
                                        })(o, Zo.get(o), r),
                                        Zo.set(o, r));
                                    const l = As(i.imports);
                                    for (const h of l)
                                        t.has(h) || (t.add(h), n(h));
                                })(e);
                            })(t);
                }
                create(t) {
                    return new Wp(this.moduleType, t);
                }
            }
            function Gp(e, t, n) {
                const r = Lr() + e,
                    i = ht();
                return i[r] === In ? Ss(i, r, n ? t.call(n) : t()) : ga(i, r);
            }
            function zp(e, t, n, r) {
                return eg(ht(), Lr(), e, t, n, r);
            }
            function Kp(e, t, n, r, i) {
                return (function tg(e, t, n, r, i, o, l) {
                    const h = t + n;
                    return po(e, h, i, o)
                        ? Ss(e, h + 2, l ? r.call(l, i, o) : r(i, o))
                        : Ta(e, h + 2);
                })(ht(), Lr(), e, t, n, r, i);
            }
            function Yp(e, t, n, r, i, o) {
                return (function ng(e, t, n, r, i, o, l, h) {
                    const _ = t + n;
                    return Qa(e, _, i, o, l)
                        ? Ss(e, _ + 3, h ? r.call(h, i, o, l) : r(i, o, l))
                        : Ta(e, _ + 3);
                })(ht(), Lr(), e, t, n, r, i, o);
            }
            function Zp(e, t, n, r, i, o, l) {
                return (function rg(e, t, n, r, i, o, l, h, _) {
                    const x = t + n;
                    return Zi(e, x, i, o, l, h)
                        ? Ss(
                              e,
                              x + 4,
                              _ ? r.call(_, i, o, l, h) : r(i, o, l, h)
                          )
                        : Ta(e, x + 4);
                })(ht(), Lr(), e, t, n, r, i, o, l);
            }
            function Qp(e, t, n, r, i, o, l, h) {
                const _ = Lr() + e,
                    x = ht(),
                    V = Zi(x, _, n, r, i, o);
                return mi(x, _ + 4, l) || V
                    ? Ss(
                          x,
                          _ + 5,
                          h ? t.call(h, n, r, i, o, l) : t(n, r, i, o, l)
                      )
                    : ga(x, _ + 5);
            }
            function Jp(e, t, n, r, i, o, l, h, _) {
                const x = Lr() + e,
                    V = ht(),
                    ee = Zi(V, x, n, r, i, o);
                return po(V, x + 4, l, h) || ee
                    ? Ss(
                          V,
                          x + 6,
                          _ ? t.call(_, n, r, i, o, l, h) : t(n, r, i, o, l, h)
                      )
                    : ga(V, x + 6);
            }
            function qp(e, t, n, r, i, o, l, h, _, x) {
                const V = Lr() + e,
                    ee = ht();
                let Te = Zi(ee, V, n, r, i, o);
                return Qa(ee, V + 4, l, h, _) || Te
                    ? Ss(
                          ee,
                          V + 7,
                          x
                              ? t.call(x, n, r, i, o, l, h, _)
                              : t(n, r, i, o, l, h, _)
                      )
                    : ga(ee, V + 7);
            }
            function Xp(e, t, n, r) {
                return (function ig(e, t, n, r, i, o) {
                    let l = t + n,
                        h = !1;
                    for (let _ = 0; _ < i.length; _++)
                        mi(e, l++, i[_]) && (h = !0);
                    return h ? Ss(e, l, r.apply(o, i)) : Ta(e, l);
                })(ht(), Lr(), e, t, n, r);
            }
            function Ta(e, t) {
                const n = e[t];
                return n === In ? void 0 : n;
            }
            function eg(e, t, n, r, i, o) {
                const l = t + n;
                return mi(e, l, i)
                    ? Ss(e, l + 1, o ? r.call(o, i) : r(i))
                    : Ta(e, l + 1);
            }
            function sg(e, t) {
                const n = Tn();
                let r;
                const i = e + 20;
                n.firstCreatePass
                    ? ((r = (function ID(e, t) {
                          if (t)
                              for (let n = t.length - 1; n >= 0; n--) {
                                  const r = t[n];
                                  if (e === r.name) return r;
                              }
                      })(t, n.pipeRegistry)),
                      (n.data[i] = r),
                      r.onDestroy &&
                          (n.destroyHooks || (n.destroyHooks = [])).push(
                              i,
                              r.onDestroy
                          ))
                    : (r = n.data[i]);
                const o = r.factory || (r.factory = Zr(r.type)),
                    l = Dn(ma);
                try {
                    const h = dn(!1),
                        _ = o();
                    return (
                        dn(h),
                        (function iv(e, t, n, r) {
                            n >= e.data.length &&
                                ((e.data[n] = null), (e.blueprint[n] = null)),
                                (t[n] = r);
                        })(n, ht(), i, _),
                        _
                    );
                } finally {
                    Dn(l);
                }
            }
            function og(e, t, n) {
                const r = e + 20,
                    i = ht(),
                    o = sn(i, r);
                return (function Aa(e, t) {
                    return e[1].data[t].pure;
                })(i, r)
                    ? eg(i, Lr(), t, o.transform, n, o)
                    : o.transform(n);
            }
            function qu(e) {
                return (t) => {
                    setTimeout(e, void 0, t);
                };
            }
            const Ps = class RD extends s.x {
                constructor(t = !1) {
                    super(), (this.__isAsync = t);
                }
                emit(t) {
                    super.next(t);
                }
                subscribe(t, n, r) {
                    var i, o, l;
                    let h = t,
                        _ = n || (() => null),
                        x = r;
                    if (t && 'object' == typeof t) {
                        const ee = t;
                        (h =
                            null === (i = ee.next) || void 0 === i
                                ? void 0
                                : i.bind(ee)),
                            (_ =
                                null === (o = ee.error) || void 0 === o
                                    ? void 0
                                    : o.bind(ee)),
                            (x =
                                null === (l = ee.complete) || void 0 === l
                                    ? void 0
                                    : l.bind(ee));
                    }
                    this.__isAsync &&
                        ((_ = qu(_)), h && (h = qu(h)), x && (x = qu(x)));
                    const V = super.subscribe({
                        next: h,
                        error: _,
                        complete: x,
                    });
                    return t instanceof m.w0 && t.add(V), V;
                }
            };
            function xD() {
                return this._results[xo()]();
            }
            class Xu {
                constructor(t = !1) {
                    (this._emitDistinctChangesOnly = t),
                        (this.dirty = !0),
                        (this._results = []),
                        (this._changesDetected = !1),
                        (this._changes = null),
                        (this.length = 0),
                        (this.first = void 0),
                        (this.last = void 0);
                    const n = xo(),
                        r = Xu.prototype;
                    r[n] || (r[n] = xD);
                }
                get changes() {
                    return this._changes || (this._changes = new Ps());
                }
                get(t) {
                    return this._results[t];
                }
                map(t) {
                    return this._results.map(t);
                }
                filter(t) {
                    return this._results.filter(t);
                }
                find(t) {
                    return this._results.find(t);
                }
                reduce(t, n) {
                    return this._results.reduce(t, n);
                }
                forEach(t) {
                    this._results.forEach(t);
                }
                some(t) {
                    return this._results.some(t);
                }
                toArray() {
                    return this._results.slice();
                }
                toString() {
                    return this._results.toString();
                }
                reset(t, n) {
                    const r = this;
                    r.dirty = !1;
                    const i = vi(t);
                    (this._changesDetected = !(function Xo(e, t, n) {
                        if (e.length !== t.length) return !1;
                        for (let r = 0; r < e.length; r++) {
                            let i = e[r],
                                o = t[r];
                            if ((n && ((i = n(i)), (o = n(o))), o !== i))
                                return !1;
                        }
                        return !0;
                    })(r._results, i, n)) &&
                        ((r._results = i),
                        (r.length = i.length),
                        (r.last = i[this.length - 1]),
                        (r.first = i[0]));
                }
                notifyOnChanges() {
                    this._changes &&
                        (this._changesDetected ||
                            !this._emitDistinctChangesOnly) &&
                        this._changes.emit(this);
                }
                setDirty() {
                    this.dirty = !0;
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe();
                }
            }
            Symbol;
            let wa = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = LD), e;
            })();
            const FD = wa,
                ND = class extends FD {
                    constructor(t, n, r) {
                        super(),
                            (this._declarationLView = t),
                            (this._declarationTContainer = n),
                            (this.elementRef = r);
                    }
                    createEmbeddedView(t) {
                        const n = this._declarationTContainer.tViews,
                            r = da(
                                this._declarationLView,
                                n,
                                t,
                                16,
                                null,
                                n.declTNode,
                                null,
                                null,
                                null,
                                null
                            );
                        r[17] =
                            this._declarationLView[
                                this._declarationTContainer.index
                            ];
                        const o = this._declarationLView[19];
                        return (
                            null !== o && (r[19] = o.createEmbeddedView(n)),
                            fa(n, r, t),
                            new ba(r)
                        );
                    }
                };
            function LD() {
                return dl(ar(), ht());
            }
            function dl(e, t) {
                return 4 & e.type ? new ND(t, e, Ko(e, t)) : null;
            }
            let fl = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = kD), e;
            })();
            function kD() {
                return ug(ar(), ht());
            }
            const BD = fl,
                ag = class extends BD {
                    constructor(t, n, r) {
                        super(),
                            (this._lContainer = t),
                            (this._hostTNode = n),
                            (this._hostLView = r);
                    }
                    get element() {
                        return Ko(this._hostTNode, this._hostLView);
                    }
                    get injector() {
                        return new lr(this._hostTNode, this._hostLView);
                    }
                    get parentInjector() {
                        const t = d(this._hostTNode, this._hostLView);
                        if (Bt(t)) {
                            const n = pn(t, this._hostLView),
                                r = Ht(t);
                            return new lr(n[1].data[r + 8], n);
                        }
                        return new lr(null, this._hostLView);
                    }
                    clear() {
                        for (; this.length > 0; ) this.remove(this.length - 1);
                    }
                    get(t) {
                        const n = lg(this._lContainer);
                        return (null !== n && n[t]) || null;
                    }
                    get length() {
                        return this._lContainer.length - 10;
                    }
                    createEmbeddedView(t, n, r) {
                        const i = t.createEmbeddedView(n || {});
                        return this.insert(i, r), i;
                    }
                    createComponent(t, n, r, i, o) {
                        const l =
                            t &&
                            !(function uo(e) {
                                return 'function' == typeof e;
                            })(t);
                        let h;
                        if (l) h = n;
                        else {
                            const ee = n || {};
                            (h = ee.index),
                                (r = ee.injector),
                                (i = ee.projectableNodes),
                                (o = ee.ngModuleRef);
                        }
                        const _ = l ? t : new Qu(Se(t)),
                            x = r || this.parentInjector;
                        if (!o && null == _.ngModule) {
                            const Te = (l ? x : this.parentInjector).get(
                                Yo,
                                null
                            );
                            Te && (o = Te);
                        }
                        const V = _.create(x, i, void 0, o);
                        return this.insert(V.hostView, h), V;
                    }
                    insert(t, n) {
                        const r = t._lView,
                            i = r[1];
                        if (
                            (function zn(e) {
                                return an(e[3]);
                            })(r)
                        ) {
                            const V = this.indexOf(t);
                            if (-1 !== V) this.detach(V);
                            else {
                                const ee = r[3],
                                    Te = new ag(ee, ee[6], ee[3]);
                                Te.detach(Te.indexOf(t));
                            }
                        }
                        const o = this._adjustIndex(n),
                            l = this._lContainer;
                        !(function T_(e, t, n, r) {
                            const i = 10 + r,
                                o = n.length;
                            r > 0 && (n[i - 1][4] = t),
                                r < o - 10
                                    ? ((t[4] = n[i]), ea(n, 10 + r, t))
                                    : (n.push(t), (t[4] = null)),
                                (t[3] = n);
                            const l = t[17];
                            null !== l &&
                                n !== l &&
                                (function A_(e, t) {
                                    const n = e[9];
                                    t[16] !== t[3][3][16] && (e[2] = !0),
                                        null === n ? (e[9] = [t]) : n.push(t);
                                })(l, t);
                            const h = t[19];
                            null !== h && h.insertView(e), (t[2] |= 128);
                        })(i, r, l, o);
                        const h = Gl(o, l),
                            _ = r[11],
                            x = Va(_, l[7]);
                        return (
                            null !== x &&
                                (function D_(e, t, n, r, i, o) {
                                    (r[0] = i),
                                        (r[6] = t),
                                        ca(e, r, n, 1, i, o);
                                })(i, l[6], _, r, x, h),
                            t.attachToViewContainerRef(),
                            ea(ec(l), o, t),
                            t
                        );
                    }
                    move(t, n) {
                        return this.insert(t, n);
                    }
                    indexOf(t) {
                        const n = lg(this._lContainer);
                        return null !== n ? n.indexOf(t) : -1;
                    }
                    remove(t) {
                        const n = this._adjustIndex(t, -1),
                            r = Hl(this._lContainer, n);
                        r && (eo(ec(this._lContainer), n), Td(r[1], r));
                    }
                    detach(t) {
                        const n = this._adjustIndex(t, -1),
                            r = Hl(this._lContainer, n);
                        return r && null != eo(ec(this._lContainer), n)
                            ? new ba(r)
                            : null;
                    }
                    _adjustIndex(t, n = 0) {
                        return null == t ? this.length + n : t;
                    }
                };
            function lg(e) {
                return e[8];
            }
            function ec(e) {
                return e[8] || (e[8] = []);
            }
            function ug(e, t) {
                let n;
                const r = t[e.index];
                if (an(r)) n = r;
                else {
                    let i;
                    if (8 & e.type) i = b(r);
                    else {
                        const o = t[11];
                        i = o.createComment('');
                        const l = ct(e, t);
                        ho(
                            o,
                            Va(o, l),
                            i,
                            (function S_(e, t) {
                                return jn(e) ? e.nextSibling(t) : t.nextSibling;
                            })(o, l),
                            !1
                        );
                    }
                    (t[e.index] = n = mf(r, t, i, e)), Ka(t, n);
                }
                return new ag(n, e, t);
            }
            class tc {
                constructor(t) {
                    (this.queryList = t), (this.matches = null);
                }
                clone() {
                    return new tc(this.queryList);
                }
                setDirty() {
                    this.queryList.setDirty();
                }
            }
            class nc {
                constructor(t = []) {
                    this.queries = t;
                }
                createEmbeddedView(t) {
                    const n = t.queries;
                    if (null !== n) {
                        const r =
                                null !== t.contentQueries
                                    ? t.contentQueries[0]
                                    : n.length,
                            i = [];
                        for (let o = 0; o < r; o++) {
                            const l = n.getByIndex(o);
                            i.push(
                                this.queries[l.indexInDeclarationView].clone()
                            );
                        }
                        return new nc(i);
                    }
                    return null;
                }
                insertView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                detachView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                dirtyQueriesWithMatches(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        null !== yg(t, n).matches && this.queries[n].setDirty();
                }
            }
            class cg {
                constructor(t, n, r = null) {
                    (this.predicate = t), (this.flags = n), (this.read = r);
                }
            }
            class rc {
                constructor(t = []) {
                    this.queries = t;
                }
                elementStart(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].elementStart(t, n);
                }
                elementEnd(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        this.queries[n].elementEnd(t);
                }
                embeddedTView(t) {
                    let n = null;
                    for (let r = 0; r < this.length; r++) {
                        const i = null !== n ? n.length : 0,
                            o = this.getByIndex(r).embeddedTView(t, i);
                        o &&
                            ((o.indexInDeclarationView = r),
                            null !== n ? n.push(o) : (n = [o]));
                    }
                    return null !== n ? new rc(n) : null;
                }
                template(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].template(t, n);
                }
                getByIndex(t) {
                    return this.queries[t];
                }
                get length() {
                    return this.queries.length;
                }
                track(t) {
                    this.queries.push(t);
                }
            }
            class ic {
                constructor(t, n = -1) {
                    (this.metadata = t),
                        (this.matches = null),
                        (this.indexInDeclarationView = -1),
                        (this.crossesNgTemplate = !1),
                        (this._appliesToNextNode = !0),
                        (this._declarationNodeIndex = n);
                }
                elementStart(t, n) {
                    this.isApplyingToNode(n) && this.matchTNode(t, n);
                }
                elementEnd(t) {
                    this._declarationNodeIndex === t.index &&
                        (this._appliesToNextNode = !1);
                }
                template(t, n) {
                    this.elementStart(t, n);
                }
                embeddedTView(t, n) {
                    return this.isApplyingToNode(t)
                        ? ((this.crossesNgTemplate = !0),
                          this.addMatch(-t.index, n),
                          new ic(this.metadata))
                        : null;
                }
                isApplyingToNode(t) {
                    if (
                        this._appliesToNextNode &&
                        1 != (1 & this.metadata.flags)
                    ) {
                        const n = this._declarationNodeIndex;
                        let r = t.parent;
                        for (; null !== r && 8 & r.type && r.index !== n; )
                            r = r.parent;
                        return n === (null !== r ? r.index : -1);
                    }
                    return this._appliesToNextNode;
                }
                matchTNode(t, n) {
                    const r = this.metadata.predicate;
                    if (Array.isArray(r))
                        for (let i = 0; i < r.length; i++) {
                            const o = r[i];
                            this.matchTNodeWithReadOption(t, n, jD(n, o)),
                                this.matchTNodeWithReadOption(
                                    t,
                                    n,
                                    Dt(n, t, o, !1, !1)
                                );
                        }
                    else
                        r === wa
                            ? 4 & n.type &&
                              this.matchTNodeWithReadOption(t, n, -1)
                            : this.matchTNodeWithReadOption(
                                  t,
                                  n,
                                  Dt(n, t, r, !1, !1)
                              );
                }
                matchTNodeWithReadOption(t, n, r) {
                    if (null !== r) {
                        const i = this.metadata.read;
                        if (null !== i)
                            if (
                                i === Ca ||
                                i === fl ||
                                (i === wa && 4 & n.type)
                            )
                                this.addMatch(n.index, -2);
                            else {
                                const o = Dt(n, t, i, !1, !1);
                                null !== o && this.addMatch(n.index, o);
                            }
                        else this.addMatch(n.index, r);
                    }
                }
                addMatch(t, n) {
                    null === this.matches
                        ? (this.matches = [t, n])
                        : this.matches.push(t, n);
                }
            }
            function jD(e, t) {
                const n = e.localNames;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2)
                        if (n[r] === t) return n[r + 1];
                return null;
            }
            function $D(e, t, n, r) {
                return -1 === n
                    ? (function HD(e, t) {
                          return 11 & e.type
                              ? Ko(e, t)
                              : 4 & e.type
                              ? dl(e, t)
                              : null;
                      })(t, e)
                    : -2 === n
                    ? (function WD(e, t, n) {
                          return n === Ca
                              ? Ko(t, e)
                              : n === wa
                              ? dl(t, e)
                              : n === fl
                              ? ug(t, e)
                              : void 0;
                      })(e, t, r)
                    : dt(e, e[1], n, t);
            }
            function dg(e, t, n, r) {
                const i = t[19].queries[r];
                if (null === i.matches) {
                    const o = e.data,
                        l = n.matches,
                        h = [];
                    for (let _ = 0; _ < l.length; _ += 2) {
                        const x = l[_];
                        h.push(
                            x < 0
                                ? null
                                : $D(t, o[x], l[_ + 1], n.metadata.read)
                        );
                    }
                    i.matches = h;
                }
                return i.matches;
            }
            function sc(e, t, n, r) {
                const i = e.queries.getByIndex(n),
                    o = i.matches;
                if (null !== o) {
                    const l = dg(e, t, i, n);
                    for (let h = 0; h < o.length; h += 2) {
                        const _ = o[h];
                        if (_ > 0) r.push(l[h / 2]);
                        else {
                            const x = o[h + 1],
                                V = t[-_];
                            for (let ee = 10; ee < V.length; ee++) {
                                const Te = V[ee];
                                Te[17] === Te[3] && sc(Te[1], Te, x, r);
                            }
                            if (null !== V[9]) {
                                const ee = V[9];
                                for (let Te = 0; Te < ee.length; Te++) {
                                    const Ve = ee[Te];
                                    sc(Ve[1], Ve, x, r);
                                }
                            }
                        }
                    }
                }
                return r;
            }
            function fg(e) {
                const t = ht(),
                    n = Tn(),
                    r = ks();
                ps(r + 1);
                const i = yg(n, r);
                if (e.dirty && An(t) === (2 == (2 & i.metadata.flags))) {
                    if (null === i.matches) e.reset([]);
                    else {
                        const o = i.crossesNgTemplate
                            ? sc(n, t, r, [])
                            : dg(n, t, i, r);
                        e.reset(o, pD), e.notifyOnChanges();
                    }
                    return !0;
                }
                return !1;
            }
            function hg(e, t, n) {
                const r = Tn();
                r.firstCreatePass &&
                    (_g(r, new cg(e, t, n), -1),
                    2 == (2 & t) && (r.staticViewQueries = !0)),
                    mg(r, ht(), t);
            }
            function pg(e, t, n, r) {
                const i = Tn();
                if (i.firstCreatePass) {
                    const o = ar();
                    _g(i, new cg(t, n, r), o.index),
                        (function zD(e, t) {
                            const n =
                                e.contentQueries || (e.contentQueries = []);
                            t !== (n.length ? n[n.length - 1] : -1) &&
                                n.push(e.queries.length - 1, t);
                        })(i, e),
                        2 == (2 & n) && (i.staticContentQueries = !0);
                }
                mg(i, ht(), n);
            }
            function gg() {
                return (function GD(e, t) {
                    return e[19].queries[t].queryList;
                })(ht(), ks());
            }
            function mg(e, t, n) {
                const r = new Xu(4 == (4 & n));
                lf(e, t, r, r.destroy),
                    null === t[19] && (t[19] = new nc()),
                    t[19].queries.push(new tc(r));
            }
            function _g(e, t, n) {
                null === e.queries && (e.queries = new rc()),
                    e.queries.track(new ic(t, n));
            }
            function yg(e, t) {
                return e.queries.getByIndex(t);
            }
            function vg(e, t) {
                return dl(e, t);
            }
            function gl(...e) {}
            const Lg = new Fr('Application Initializer');
            let dc = (() => {
                class e {
                    constructor(n) {
                        (this.appInits = n),
                            (this.resolve = gl),
                            (this.reject = gl),
                            (this.initialized = !1),
                            (this.done = !1),
                            (this.donePromise = new Promise((r, i) => {
                                (this.resolve = r), (this.reject = i);
                            }));
                    }
                    runInitializers() {
                        if (this.initialized) return;
                        const n = [],
                            r = () => {
                                (this.done = !0), this.resolve();
                            };
                        if (this.appInits)
                            for (let i = 0; i < this.appInits.length; i++) {
                                const o = this.appInits[i]();
                                if (xu(o)) n.push(o);
                                else if (dh(o)) {
                                    const l = new Promise((h, _) => {
                                        o.subscribe({ complete: h, error: _ });
                                    });
                                    n.push(l);
                                }
                            }
                        Promise.all(n)
                            .then(() => {
                                r();
                            })
                            .catch((i) => {
                                this.reject(i);
                            }),
                            0 === n.length && r(),
                            (this.initialized = !0);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Zn(Lg, 8));
                    }),
                    (e.ɵprov = mt({
                        token: e,
                        factory: e.ɵfac,
                        providedIn: 'root',
                    })),
                    e
                );
            })();
            const kg = new Fr('AppId', {
                providedIn: 'root',
                factory: function Bg() {
                    return `${fc()}${fc()}${fc()}`;
                },
            });
            function fc() {
                return String.fromCharCode(97 + Math.floor(25 * Math.random()));
            }
            const Ug = new Fr('Platform Initializer'),
                uC = new Fr('Platform ID', {
                    providedIn: 'platform',
                    factory: () => 'unknown',
                }),
                Vg = new Fr('appBootstrapListener');
            let cC = (() => {
                class e {
                    log(n) {
                        console.log(n);
                    }
                    warn(n) {
                        console.warn(n);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = mt({
                        token: e,
                        factory: e.ɵfac,
                        providedIn: 'platform',
                    })),
                    e
                );
            })();
            const hc = new Fr('LocaleId', {
                    providedIn: 'root',
                    factory: () =>
                        Co(hc, Nt.Optional | Nt.SkipSelf) ||
                        (function dC() {
                            return (
                                ('undefined' != typeof $localize &&
                                    $localize.locale) ||
                                il
                            );
                        })(),
                }),
                fC = new Fr('DefaultCurrencyCode', {
                    providedIn: 'root',
                    factory: () => 'USD',
                });
            class hC {
                constructor(t, n) {
                    (this.ngModuleFactory = t), (this.componentFactories = n);
                }
            }
            let pC = (() => {
                class e {
                    compileModuleSync(n) {
                        return new Ju(n);
                    }
                    compileModuleAsync(n) {
                        return Promise.resolve(this.compileModuleSync(n));
                    }
                    compileModuleAndAllComponentsSync(n) {
                        const r = this.compileModuleSync(n),
                            o = As(Vt(n).declarations).reduce((l, h) => {
                                const _ = Se(h);
                                return _ && l.push(new Qu(_)), l;
                            }, []);
                        return new hC(r, o);
                    }
                    compileModuleAndAllComponentsAsync(n) {
                        return Promise.resolve(
                            this.compileModuleAndAllComponentsSync(n)
                        );
                    }
                    clearCache() {}
                    clearCacheFor(n) {}
                    getModuleId(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = mt({
                        token: e,
                        factory: e.ɵfac,
                        providedIn: 'root',
                    })),
                    e
                );
            })();
            const mC = (() => Promise.resolve(0))();
            function pc(e) {
                'undefined' == typeof Zone
                    ? mC.then(() => {
                          e && e.apply(null, null);
                      })
                    : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
            }
            class us {
                constructor({
                    enableLongStackTrace: t = !1,
                    shouldCoalesceEventChangeDetection: n = !1,
                    shouldCoalesceRunChangeDetection: r = !1,
                }) {
                    if (
                        ((this.hasPendingMacrotasks = !1),
                        (this.hasPendingMicrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new Ps(!1)),
                        (this.onMicrotaskEmpty = new Ps(!1)),
                        (this.onStable = new Ps(!1)),
                        (this.onError = new Ps(!1)),
                        'undefined' == typeof Zone)
                    )
                        throw new Error(
                            'In this configuration Angular requires Zone.js'
                        );
                    Zone.assertZonePatched();
                    const i = this;
                    (i._nesting = 0),
                        (i._outer = i._inner = Zone.current),
                        Zone.TaskTrackingZoneSpec &&
                            (i._inner = i._inner.fork(
                                new Zone.TaskTrackingZoneSpec()
                            )),
                        t &&
                            Zone.longStackTraceZoneSpec &&
                            (i._inner = i._inner.fork(
                                Zone.longStackTraceZoneSpec
                            )),
                        (i.shouldCoalesceEventChangeDetection = !r && n),
                        (i.shouldCoalesceRunChangeDetection = r),
                        (i.lastRequestAnimationFrameId = -1),
                        (i.nativeRequestAnimationFrame = (function _C() {
                            let e = Wt.requestAnimationFrame,
                                t = Wt.cancelAnimationFrame;
                            if ('undefined' != typeof Zone && e && t) {
                                const n =
                                    e[Zone.__symbol__('OriginalDelegate')];
                                n && (e = n);
                                const r =
                                    t[Zone.__symbol__('OriginalDelegate')];
                                r && (t = r);
                            }
                            return {
                                nativeRequestAnimationFrame: e,
                                nativeCancelAnimationFrame: t,
                            };
                        })().nativeRequestAnimationFrame),
                        (function EC(e) {
                            const t = () => {
                                !(function vC(e) {
                                    e.isCheckStableRunning ||
                                        -1 !== e.lastRequestAnimationFrameId ||
                                        ((e.lastRequestAnimationFrameId =
                                            e.nativeRequestAnimationFrame.call(
                                                Wt,
                                                () => {
                                                    e.fakeTopEventTask ||
                                                        (e.fakeTopEventTask =
                                                            Zone.root.scheduleEventTask(
                                                                'fakeTopEventTask',
                                                                () => {
                                                                    (e.lastRequestAnimationFrameId =
                                                                        -1),
                                                                        mc(e),
                                                                        (e.isCheckStableRunning =
                                                                            !0),
                                                                        gc(e),
                                                                        (e.isCheckStableRunning =
                                                                            !1);
                                                                },
                                                                void 0,
                                                                () => {},
                                                                () => {}
                                                            )),
                                                        e.fakeTopEventTask.invoke();
                                                }
                                            )),
                                        mc(e));
                                })(e);
                            };
                            e._inner = e._inner.fork({
                                name: 'angular',
                                properties: { isAngularZone: !0 },
                                onInvokeTask: (n, r, i, o, l, h) => {
                                    try {
                                        return jg(e), n.invokeTask(i, o, l, h);
                                    } finally {
                                        ((e.shouldCoalesceEventChangeDetection &&
                                            'eventTask' === o.type) ||
                                            e.shouldCoalesceRunChangeDetection) &&
                                            t(),
                                            Hg(e);
                                    }
                                },
                                onInvoke: (n, r, i, o, l, h, _) => {
                                    try {
                                        return jg(e), n.invoke(i, o, l, h, _);
                                    } finally {
                                        e.shouldCoalesceRunChangeDetection &&
                                            t(),
                                            Hg(e);
                                    }
                                },
                                onHasTask: (n, r, i, o) => {
                                    n.hasTask(i, o),
                                        r === i &&
                                            ('microTask' == o.change
                                                ? ((e._hasPendingMicrotasks =
                                                      o.microTask),
                                                  mc(e),
                                                  gc(e))
                                                : 'macroTask' == o.change &&
                                                  (e.hasPendingMacrotasks =
                                                      o.macroTask));
                                },
                                onHandleError: (n, r, i, o) => (
                                    n.handleError(i, o),
                                    e.runOutsideAngular(() =>
                                        e.onError.emit(o)
                                    ),
                                    !1
                                ),
                            });
                        })(i);
                }
                static isInAngularZone() {
                    return (
                        'undefined' != typeof Zone &&
                        !0 === Zone.current.get('isAngularZone')
                    );
                }
                static assertInAngularZone() {
                    if (!us.isInAngularZone())
                        throw new Error(
                            'Expected to be in Angular Zone, but it is not!'
                        );
                }
                static assertNotInAngularZone() {
                    if (us.isInAngularZone())
                        throw new Error(
                            'Expected to not be in Angular Zone, but it is!'
                        );
                }
                run(t, n, r) {
                    return this._inner.run(t, n, r);
                }
                runTask(t, n, r, i) {
                    const o = this._inner,
                        l = o.scheduleEventTask(
                            'NgZoneEvent: ' + i,
                            t,
                            yC,
                            gl,
                            gl
                        );
                    try {
                        return o.runTask(l, n, r);
                    } finally {
                        o.cancelTask(l);
                    }
                }
                runGuarded(t, n, r) {
                    return this._inner.runGuarded(t, n, r);
                }
                runOutsideAngular(t) {
                    return this._outer.run(t);
                }
            }
            const yC = {};
            function gc(e) {
                if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
                    try {
                        e._nesting++, e.onMicrotaskEmpty.emit(null);
                    } finally {
                        if ((e._nesting--, !e.hasPendingMicrotasks))
                            try {
                                e.runOutsideAngular(() =>
                                    e.onStable.emit(null)
                                );
                            } finally {
                                e.isStable = !0;
                            }
                    }
            }
            function mc(e) {
                e.hasPendingMicrotasks = !!(
                    e._hasPendingMicrotasks ||
                    ((e.shouldCoalesceEventChangeDetection ||
                        e.shouldCoalesceRunChangeDetection) &&
                        -1 !== e.lastRequestAnimationFrameId)
                );
            }
            function jg(e) {
                e._nesting++,
                    e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
            }
            function Hg(e) {
                e._nesting--, gc(e);
            }
            class DC {
                constructor() {
                    (this.hasPendingMicrotasks = !1),
                        (this.hasPendingMacrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new Ps()),
                        (this.onMicrotaskEmpty = new Ps()),
                        (this.onStable = new Ps()),
                        (this.onError = new Ps());
                }
                run(t, n, r) {
                    return t.apply(n, r);
                }
                runGuarded(t, n, r) {
                    return t.apply(n, r);
                }
                runOutsideAngular(t) {
                    return t();
                }
                runTask(t, n, r, i) {
                    return t.apply(n, r);
                }
            }
            let $g = (() => {
                    class e {
                        constructor(n) {
                            (this._ngZone = n),
                                (this._pendingCount = 0),
                                (this._isZoneStable = !0),
                                (this._didWork = !1),
                                (this._callbacks = []),
                                (this.taskTrackingZone = null),
                                this._watchAngularEvents(),
                                n.run(() => {
                                    this.taskTrackingZone =
                                        'undefined' == typeof Zone
                                            ? null
                                            : Zone.current.get(
                                                  'TaskTrackingZone'
                                              );
                                });
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    (this._didWork = !0),
                                        (this._isZoneStable = !1);
                                },
                            }),
                                this._ngZone.runOutsideAngular(() => {
                                    this._ngZone.onStable.subscribe({
                                        next: () => {
                                            us.assertNotInAngularZone(),
                                                pc(() => {
                                                    (this._isZoneStable = !0),
                                                        this._runCallbacksIfReady();
                                                });
                                        },
                                    });
                                });
                        }
                        increasePendingRequestCount() {
                            return (
                                (this._pendingCount += 1),
                                (this._didWork = !0),
                                this._pendingCount
                            );
                        }
                        decreasePendingRequestCount() {
                            if (
                                ((this._pendingCount -= 1),
                                this._pendingCount < 0)
                            )
                                throw new Error(
                                    'pending async requests below zero'
                                );
                            return (
                                this._runCallbacksIfReady(), this._pendingCount
                            );
                        }
                        isStable() {
                            return (
                                this._isZoneStable &&
                                0 === this._pendingCount &&
                                !this._ngZone.hasPendingMacrotasks
                            );
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable())
                                pc(() => {
                                    for (; 0 !== this._callbacks.length; ) {
                                        let n = this._callbacks.pop();
                                        clearTimeout(n.timeoutId),
                                            n.doneCb(this._didWork);
                                    }
                                    this._didWork = !1;
                                });
                            else {
                                let n = this.getPendingTasks();
                                (this._callbacks = this._callbacks.filter(
                                    (r) =>
                                        !r.updateCb ||
                                        !r.updateCb(n) ||
                                        (clearTimeout(r.timeoutId), !1)
                                )),
                                    (this._didWork = !0);
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone
                                ? this.taskTrackingZone.macroTasks.map((n) => ({
                                      source: n.source,
                                      creationLocation: n.creationLocation,
                                      data: n.data,
                                  }))
                                : [];
                        }
                        addCallback(n, r, i) {
                            let o = -1;
                            r &&
                                r > 0 &&
                                (o = setTimeout(() => {
                                    (this._callbacks = this._callbacks.filter(
                                        (l) => l.timeoutId !== o
                                    )),
                                        n(
                                            this._didWork,
                                            this.getPendingTasks()
                                        );
                                }, r)),
                                this._callbacks.push({
                                    doneCb: n,
                                    timeoutId: o,
                                    updateCb: i,
                                });
                        }
                        whenStable(n, r, i) {
                            if (i && !this.taskTrackingZone)
                                throw new Error(
                                    'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                                );
                            this.addCallback(n, r, i),
                                this._runCallbacksIfReady();
                        }
                        getPendingRequestCount() {
                            return this._pendingCount;
                        }
                        findProviders(n, r, i) {
                            return [];
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)(Zn(us));
                        }),
                        (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                        e
                    );
                })(),
                CC = (() => {
                    class e {
                        constructor() {
                            (this._applications = new Map()),
                                _c.addToWindow(this);
                        }
                        registerApplication(n, r) {
                            this._applications.set(n, r);
                        }
                        unregisterApplication(n) {
                            this._applications.delete(n);
                        }
                        unregisterAllApplications() {
                            this._applications.clear();
                        }
                        getTestability(n) {
                            return this._applications.get(n) || null;
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values());
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys());
                        }
                        findTestabilityInTree(n, r = !0) {
                            return _c.findTestabilityInTree(this, n, r);
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)();
                        }),
                        (e.ɵprov = mt({
                            token: e,
                            factory: e.ɵfac,
                            providedIn: 'platform',
                        })),
                        e
                    );
                })();
            class bC {
                addToWindow(t) {}
                findTestabilityInTree(t, n, r) {
                    return null;
                }
            }
            function TC(e) {
                _c = e;
            }
            let _c = new bC(),
                mo = null;
            const Wg = new Fr('AllowMultipleToken'),
                Gg = new Fr('PlatformOnDestroy');
            class IC {
                constructor(t, n) {
                    (this.name = t), (this.token = n);
                }
            }
            function zg(e, t, n = []) {
                const r = `Platform: ${t}`,
                    i = new Fr(r);
                return (o = []) => {
                    let l = yc();
                    if (!l || l.injector.get(Wg, !1)) {
                        const h = [...n, ...o, { provide: i, useValue: !0 }];
                        e
                            ? e(h)
                            : (function MC(e) {
                                  if (mo && !mo.get(Wg, !1))
                                      throw new Re(400, '');
                                  mo = e;
                                  const t = e.get(Kg),
                                      n = e.get(Ug, null);
                                  n && n.forEach((r) => r());
                              })(
                                  (function OC(e = [], t) {
                                      return Ms.create({
                                          name: t,
                                          providers: [
                                              {
                                                  provide: mu,
                                                  useValue: 'platform',
                                              },
                                              {
                                                  provide: Gg,
                                                  useValue: () => (mo = null),
                                              },
                                              ...e,
                                          ],
                                      });
                                  })(h, r)
                              );
                    }
                    return (function SC(e) {
                        const t = yc();
                        if (!t) throw new Re(401, '');
                        return t;
                    })();
                };
            }
            function yc() {
                var e;
                return null !== (e = null == mo ? void 0 : mo.get(Kg)) &&
                    void 0 !== e
                    ? e
                    : null;
            }
            let Kg = (() => {
                class e {
                    constructor(n) {
                        (this._injector = n),
                            (this._modules = []),
                            (this._destroyListeners = []),
                            (this._destroyed = !1);
                    }
                    bootstrapModuleFactory(n, r) {
                        const h = (function PC(e, t) {
                                let n;
                                return (
                                    (n =
                                        'noop' === e
                                            ? new DC()
                                            : ('zone.js' === e ? void 0 : e) ||
                                              new us({
                                                  enableLongStackTrace: !1,
                                                  shouldCoalesceEventChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneEventCoalescing),
                                                  shouldCoalesceRunChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneRunCoalescing),
                                              })),
                                    n
                                );
                            })(r ? r.ngZone : void 0, {
                                ngZoneEventCoalescing:
                                    (r && r.ngZoneEventCoalescing) || !1,
                                ngZoneRunCoalescing:
                                    (r && r.ngZoneRunCoalescing) || !1,
                            }),
                            _ = [{ provide: us, useValue: h }];
                        return h.run(() => {
                            const x = Ms.create({
                                    providers: _,
                                    parent: this.injector,
                                    name: n.moduleType.name,
                                }),
                                V = n.create(x),
                                ee = V.injector.get(Ua, null);
                            if (!ee) throw new Re(402, '');
                            return (
                                h.runOutsideAngular(() => {
                                    const Te = h.onError.subscribe({
                                        next: (Ve) => {
                                            ee.handleError(Ve);
                                        },
                                    });
                                    V.onDestroy(() => {
                                        Ec(this._modules, V), Te.unsubscribe();
                                    });
                                }),
                                (function RC(e, t, n) {
                                    try {
                                        const r = n();
                                        return xu(r)
                                            ? r.catch((i) => {
                                                  throw (
                                                      (t.runOutsideAngular(() =>
                                                          e.handleError(i)
                                                      ),
                                                      i)
                                                  );
                                              })
                                            : r;
                                    } catch (r) {
                                        throw (
                                            (t.runOutsideAngular(() =>
                                                e.handleError(r)
                                            ),
                                            r)
                                        );
                                    }
                                })(ee, h, () => {
                                    const Te = V.injector.get(dc);
                                    return (
                                        Te.runInitializers(),
                                        Te.donePromise.then(
                                            () => (
                                                (function gE(e) {
                                                    yt(
                                                        e,
                                                        'Expected localeId to be defined'
                                                    ),
                                                        'string' == typeof e &&
                                                            (lp = e
                                                                .toLowerCase()
                                                                .replace(
                                                                    /_/g,
                                                                    '-'
                                                                ));
                                                })(
                                                    V.injector.get(hc, il) || il
                                                ),
                                                this._moduleDoBootstrap(V),
                                                V
                                            )
                                        )
                                    );
                                })
                            );
                        });
                    }
                    bootstrapModule(n, r = []) {
                        const i = Yg({}, r);
                        return (function AC(e, t, n) {
                            const r = new Ju(n);
                            return Promise.resolve(r);
                        })(0, 0, n).then((o) =>
                            this.bootstrapModuleFactory(o, i)
                        );
                    }
                    _moduleDoBootstrap(n) {
                        const r = n.injector.get(vc);
                        if (n._bootstrapComponents.length > 0)
                            n._bootstrapComponents.forEach((i) =>
                                r.bootstrap(i)
                            );
                        else {
                            if (!n.instance.ngDoBootstrap)
                                throw new Re(403, '');
                            n.instance.ngDoBootstrap(r);
                        }
                        this._modules.push(n);
                    }
                    onDestroy(n) {
                        this._destroyListeners.push(n);
                    }
                    get injector() {
                        return this._injector;
                    }
                    destroy() {
                        if (this._destroyed) throw new Re(404, '');
                        this._modules.slice().forEach((r) => r.destroy()),
                            this._destroyListeners.forEach((r) => r());
                        const n = this._injector.get(Gg, null);
                        null == n || n(), (this._destroyed = !0);
                    }
                    get destroyed() {
                        return this._destroyed;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Zn(Ms));
                    }),
                    (e.ɵprov = mt({
                        token: e,
                        factory: e.ɵfac,
                        providedIn: 'platform',
                    })),
                    e
                );
            })();
            function Yg(e, t) {
                return Array.isArray(t)
                    ? t.reduce(Yg, e)
                    : Object.assign(Object.assign({}, e), t);
            }
            let vc = (() => {
                class e {
                    constructor(n, r, i, o) {
                        (this._zone = n),
                            (this._injector = r),
                            (this._exceptionHandler = i),
                            (this._initStatus = o),
                            (this._bootstrapListeners = []),
                            (this._views = []),
                            (this._runningTick = !1),
                            (this._stable = !0),
                            (this.componentTypes = []),
                            (this.components = []),
                            (this._onMicrotaskEmptySubscription =
                                this._zone.onMicrotaskEmpty.subscribe({
                                    next: () => {
                                        this._zone.run(() => {
                                            this.tick();
                                        });
                                    },
                                }));
                        const l = new L.y((_) => {
                                (this._stable =
                                    this._zone.isStable &&
                                    !this._zone.hasPendingMacrotasks &&
                                    !this._zone.hasPendingMicrotasks),
                                    this._zone.runOutsideAngular(() => {
                                        _.next(this._stable), _.complete();
                                    });
                            }),
                            h = new L.y((_) => {
                                let x;
                                this._zone.runOutsideAngular(() => {
                                    x = this._zone.onStable.subscribe(() => {
                                        us.assertNotInAngularZone(),
                                            pc(() => {
                                                !this._stable &&
                                                    !this._zone
                                                        .hasPendingMacrotasks &&
                                                    !this._zone
                                                        .hasPendingMicrotasks &&
                                                    ((this._stable = !0),
                                                    _.next(!0));
                                            });
                                    });
                                });
                                const V = this._zone.onUnstable.subscribe(
                                    () => {
                                        us.assertInAngularZone(),
                                            this._stable &&
                                                ((this._stable = !1),
                                                this._zone.runOutsideAngular(
                                                    () => {
                                                        _.next(!1);
                                                    }
                                                ));
                                    }
                                );
                                return () => {
                                    x.unsubscribe(), V.unsubscribe();
                                };
                            });
                        this.isStable = (0, k.T)(l, h.pipe((0, T.B)()));
                    }
                    bootstrap(n, r) {
                        if (!this._initStatus.done) throw new Re(405, '');
                        let i;
                        (i =
                            n instanceof Fp
                                ? n
                                : this._injector
                                      .get(ul)
                                      .resolveComponentFactory(n)),
                            this.componentTypes.push(i.componentType);
                        const o = (function wC(e) {
                                return e.isBoundToModule;
                            })(i)
                                ? void 0
                                : this._injector.get(Yo),
                            h = i.create(Ms.NULL, [], r || i.selector, o),
                            _ = h.location.nativeElement,
                            x = h.injector.get($g, null),
                            V = x && h.injector.get(CC);
                        return (
                            x && V && V.registerApplication(_, x),
                            h.onDestroy(() => {
                                this.detachView(h.hostView),
                                    Ec(this.components, h),
                                    V && V.unregisterApplication(_);
                            }),
                            this._loadComponent(h),
                            h
                        );
                    }
                    tick() {
                        if (this._runningTick) throw new Re(101, '');
                        try {
                            this._runningTick = !0;
                            for (let n of this._views) n.detectChanges();
                        } catch (n) {
                            this._zone.runOutsideAngular(() =>
                                this._exceptionHandler.handleError(n)
                            );
                        } finally {
                            this._runningTick = !1;
                        }
                    }
                    attachView(n) {
                        const r = n;
                        this._views.push(r), r.attachToAppRef(this);
                    }
                    detachView(n) {
                        const r = n;
                        Ec(this._views, r), r.detachFromAppRef();
                    }
                    _loadComponent(n) {
                        this.attachView(n.hostView),
                            this.tick(),
                            this.components.push(n),
                            this._injector
                                .get(Vg, [])
                                .concat(this._bootstrapListeners)
                                .forEach((i) => i(n));
                    }
                    ngOnDestroy() {
                        this._views.slice().forEach((n) => n.destroy()),
                            this._onMicrotaskEmptySubscription.unsubscribe();
                    }
                    get viewCount() {
                        return this._views.length;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Zn(us), Zn(Ms), Zn(Ua), Zn(dc));
                    }),
                    (e.ɵprov = mt({
                        token: e,
                        factory: e.ɵfac,
                        providedIn: 'root',
                    })),
                    e
                );
            })();
            function Ec(e, t) {
                const n = e.indexOf(t);
                n > -1 && e.splice(n, 1);
            }
            let Qg = !0,
                Jg = !1;
            function FC() {
                return (Jg = !0), Qg;
            }
            function NC() {
                if (Jg)
                    throw new Error(
                        'Cannot enable prod mode after platform setup.'
                    );
                Qg = !1;
            }
            let LC = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = kC), e;
            })();
            function kC(e) {
                return (function BC(e, t, n) {
                    if (Cr(e) && !n) {
                        const r = on(e.index, t);
                        return new ba(r, r);
                    }
                    return 47 & e.type ? new ba(t[16], t) : null;
                })(ar(), ht(), 16 == (16 & e));
            }
            class tm {
                constructor() {}
                supports(t) {
                    return pa(t);
                }
                create(t) {
                    return new WC(t);
                }
            }
            const $C = (e, t) => t;
            class WC {
                constructor(t) {
                    (this.length = 0),
                        (this._linkedRecords = null),
                        (this._unlinkedRecords = null),
                        (this._previousItHead = null),
                        (this._itHead = null),
                        (this._itTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._movesHead = null),
                        (this._movesTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null),
                        (this._identityChangesHead = null),
                        (this._identityChangesTail = null),
                        (this._trackByFn = t || $C);
                }
                forEachItem(t) {
                    let n;
                    for (n = this._itHead; null !== n; n = n._next) t(n);
                }
                forEachOperation(t) {
                    let n = this._itHead,
                        r = this._removalsHead,
                        i = 0,
                        o = null;
                    for (; n || r; ) {
                        const l =
                                !r || (n && n.currentIndex < rm(r, i, o))
                                    ? n
                                    : r,
                            h = rm(l, i, o),
                            _ = l.currentIndex;
                        if (l === r) i--, (r = r._nextRemoved);
                        else if (((n = n._next), null == l.previousIndex)) i++;
                        else {
                            o || (o = []);
                            const x = h - i,
                                V = _ - i;
                            if (x != V) {
                                for (let Te = 0; Te < x; Te++) {
                                    const Ve =
                                            Te < o.length ? o[Te] : (o[Te] = 0),
                                        at = Ve + Te;
                                    V <= at && at < x && (o[Te] = Ve + 1);
                                }
                                o[l.previousIndex] = V - x;
                            }
                        }
                        h !== _ && t(l, h, _);
                    }
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousItHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachMovedItem(t) {
                    let n;
                    for (n = this._movesHead; null !== n; n = n._nextMoved)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                forEachIdentityChange(t) {
                    let n;
                    for (
                        n = this._identityChangesHead;
                        null !== n;
                        n = n._nextIdentityChange
                    )
                        t(n);
                }
                diff(t) {
                    if ((null == t && (t = []), !pa(t))) throw new Re(900, '');
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let i,
                        o,
                        l,
                        n = this._itHead,
                        r = !1;
                    if (Array.isArray(t)) {
                        this.length = t.length;
                        for (let h = 0; h < this.length; h++)
                            (o = t[h]),
                                (l = this._trackByFn(h, o)),
                                null !== n && Object.is(n.trackById, l)
                                    ? (r &&
                                          (n = this._verifyReinsertion(
                                              n,
                                              o,
                                              l,
                                              h
                                          )),
                                      Object.is(n.item, o) ||
                                          this._addIdentityChange(n, o))
                                    : ((n = this._mismatch(n, o, l, h)),
                                      (r = !0)),
                                (n = n._next);
                    } else
                        (i = 0),
                            (function nv(e, t) {
                                if (Array.isArray(e))
                                    for (let n = 0; n < e.length; n++) t(e[n]);
                                else {
                                    const n = e[xo()]();
                                    let r;
                                    for (; !(r = n.next()).done; ) t(r.value);
                                }
                            })(t, (h) => {
                                (l = this._trackByFn(i, h)),
                                    null !== n && Object.is(n.trackById, l)
                                        ? (r &&
                                              (n = this._verifyReinsertion(
                                                  n,
                                                  h,
                                                  l,
                                                  i
                                              )),
                                          Object.is(n.item, h) ||
                                              this._addIdentityChange(n, h))
                                        : ((n = this._mismatch(n, h, l, i)),
                                          (r = !0)),
                                    (n = n._next),
                                    i++;
                            }),
                            (this.length = i);
                    return (
                        this._truncate(n), (this.collection = t), this.isDirty
                    );
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._movesHead ||
                        null !== this._removalsHead ||
                        null !== this._identityChangesHead
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            t = this._previousItHead = this._itHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._additionsHead;
                            null !== t;
                            t = t._nextAdded
                        )
                            t.previousIndex = t.currentIndex;
                        for (
                            this._additionsHead = this._additionsTail = null,
                                t = this._movesHead;
                            null !== t;
                            t = t._nextMoved
                        )
                            t.previousIndex = t.currentIndex;
                        (this._movesHead = this._movesTail = null),
                            (this._removalsHead = this._removalsTail = null),
                            (this._identityChangesHead =
                                this._identityChangesTail =
                                    null);
                    }
                }
                _mismatch(t, n, r, i) {
                    let o;
                    return (
                        null === t
                            ? (o = this._itTail)
                            : ((o = t._prev), this._remove(t)),
                        null !==
                        (t =
                            null === this._unlinkedRecords
                                ? null
                                : this._unlinkedRecords.get(r, null))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._reinsertAfter(t, o, i))
                            : null !==
                              (t =
                                  null === this._linkedRecords
                                      ? null
                                      : this._linkedRecords.get(r, i))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._moveAfter(t, o, i))
                            : (t = this._addAfter(new GC(n, r), o, i)),
                        t
                    );
                }
                _verifyReinsertion(t, n, r, i) {
                    let o =
                        null === this._unlinkedRecords
                            ? null
                            : this._unlinkedRecords.get(r, null);
                    return (
                        null !== o
                            ? (t = this._reinsertAfter(o, t._prev, i))
                            : t.currentIndex != i &&
                              ((t.currentIndex = i), this._addToMoves(t, i)),
                        t
                    );
                }
                _truncate(t) {
                    for (; null !== t; ) {
                        const n = t._next;
                        this._addToRemovals(this._unlink(t)), (t = n);
                    }
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.clear(),
                        null !== this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        null !== this._movesTail &&
                            (this._movesTail._nextMoved = null),
                        null !== this._itTail && (this._itTail._next = null),
                        null !== this._removalsTail &&
                            (this._removalsTail._nextRemoved = null),
                        null !== this._identityChangesTail &&
                            (this._identityChangesTail._nextIdentityChange =
                                null);
                }
                _reinsertAfter(t, n, r) {
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.remove(t);
                    const i = t._prevRemoved,
                        o = t._nextRemoved;
                    return (
                        null === i
                            ? (this._removalsHead = o)
                            : (i._nextRemoved = o),
                        null === o
                            ? (this._removalsTail = i)
                            : (o._prevRemoved = i),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _moveAfter(t, n, r) {
                    return (
                        this._unlink(t),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _addAfter(t, n, r) {
                    return (
                        this._insertAfter(t, n, r),
                        (this._additionsTail =
                            null === this._additionsTail
                                ? (this._additionsHead = t)
                                : (this._additionsTail._nextAdded = t)),
                        t
                    );
                }
                _insertAfter(t, n, r) {
                    const i = null === n ? this._itHead : n._next;
                    return (
                        (t._next = i),
                        (t._prev = n),
                        null === i ? (this._itTail = t) : (i._prev = t),
                        null === n ? (this._itHead = t) : (n._next = t),
                        null === this._linkedRecords &&
                            (this._linkedRecords = new nm()),
                        this._linkedRecords.put(t),
                        (t.currentIndex = r),
                        t
                    );
                }
                _remove(t) {
                    return this._addToRemovals(this._unlink(t));
                }
                _unlink(t) {
                    null !== this._linkedRecords &&
                        this._linkedRecords.remove(t);
                    const n = t._prev,
                        r = t._next;
                    return (
                        null === n ? (this._itHead = r) : (n._next = r),
                        null === r ? (this._itTail = n) : (r._prev = n),
                        t
                    );
                }
                _addToMoves(t, n) {
                    return (
                        t.previousIndex === n ||
                            (this._movesTail =
                                null === this._movesTail
                                    ? (this._movesHead = t)
                                    : (this._movesTail._nextMoved = t)),
                        t
                    );
                }
                _addToRemovals(t) {
                    return (
                        null === this._unlinkedRecords &&
                            (this._unlinkedRecords = new nm()),
                        this._unlinkedRecords.put(t),
                        (t.currentIndex = null),
                        (t._nextRemoved = null),
                        null === this._removalsTail
                            ? ((this._removalsTail = this._removalsHead = t),
                              (t._prevRemoved = null))
                            : ((t._prevRemoved = this._removalsTail),
                              (this._removalsTail =
                                  this._removalsTail._nextRemoved =
                                      t)),
                        t
                    );
                }
                _addIdentityChange(t, n) {
                    return (
                        (t.item = n),
                        (this._identityChangesTail =
                            null === this._identityChangesTail
                                ? (this._identityChangesHead = t)
                                : (this._identityChangesTail._nextIdentityChange =
                                      t)),
                        t
                    );
                }
            }
            class GC {
                constructor(t, n) {
                    (this.item = t),
                        (this.trackById = n),
                        (this.currentIndex = null),
                        (this.previousIndex = null),
                        (this._nextPrevious = null),
                        (this._prev = null),
                        (this._next = null),
                        (this._prevDup = null),
                        (this._nextDup = null),
                        (this._prevRemoved = null),
                        (this._nextRemoved = null),
                        (this._nextAdded = null),
                        (this._nextMoved = null),
                        (this._nextIdentityChange = null);
                }
            }
            class zC {
                constructor() {
                    (this._head = null), (this._tail = null);
                }
                add(t) {
                    null === this._head
                        ? ((this._head = this._tail = t),
                          (t._nextDup = null),
                          (t._prevDup = null))
                        : ((this._tail._nextDup = t),
                          (t._prevDup = this._tail),
                          (t._nextDup = null),
                          (this._tail = t));
                }
                get(t, n) {
                    let r;
                    for (r = this._head; null !== r; r = r._nextDup)
                        if (
                            (null === n || n <= r.currentIndex) &&
                            Object.is(r.trackById, t)
                        )
                            return r;
                    return null;
                }
                remove(t) {
                    const n = t._prevDup,
                        r = t._nextDup;
                    return (
                        null === n ? (this._head = r) : (n._nextDup = r),
                        null === r ? (this._tail = n) : (r._prevDup = n),
                        null === this._head
                    );
                }
            }
            class nm {
                constructor() {
                    this.map = new Map();
                }
                put(t) {
                    const n = t.trackById;
                    let r = this.map.get(n);
                    r || ((r = new zC()), this.map.set(n, r)), r.add(t);
                }
                get(t, n) {
                    const i = this.map.get(t);
                    return i ? i.get(t, n) : null;
                }
                remove(t) {
                    const n = t.trackById;
                    return this.map.get(n).remove(t) && this.map.delete(n), t;
                }
                get isEmpty() {
                    return 0 === this.map.size;
                }
                clear() {
                    this.map.clear();
                }
            }
            function rm(e, t, n) {
                const r = e.previousIndex;
                if (null === r) return r;
                let i = 0;
                return n && r < n.length && (i = n[r]), r + t + i;
            }
            class im {
                constructor() {}
                supports(t) {
                    return t instanceof Map || bu(t);
                }
                create() {
                    return new KC();
                }
            }
            class KC {
                constructor() {
                    (this._records = new Map()),
                        (this._mapHead = null),
                        (this._appendAfter = null),
                        (this._previousMapHead = null),
                        (this._changesHead = null),
                        (this._changesTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null);
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._changesHead ||
                        null !== this._removalsHead
                    );
                }
                forEachItem(t) {
                    let n;
                    for (n = this._mapHead; null !== n; n = n._next) t(n);
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousMapHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachChangedItem(t) {
                    let n;
                    for (n = this._changesHead; null !== n; n = n._nextChanged)
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                diff(t) {
                    if (t) {
                        if (!(t instanceof Map || bu(t))) throw new Re(900, '');
                    } else t = new Map();
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let n = this._mapHead;
                    if (
                        ((this._appendAfter = null),
                        this._forEach(t, (r, i) => {
                            if (n && n.key === i)
                                this._maybeAddToChanges(n, r),
                                    (this._appendAfter = n),
                                    (n = n._next);
                            else {
                                const o = this._getOrCreateRecordForKey(i, r);
                                n = this._insertBeforeOrAppend(n, o);
                            }
                        }),
                        n)
                    ) {
                        n._prev && (n._prev._next = null),
                            (this._removalsHead = n);
                        for (let r = n; null !== r; r = r._nextRemoved)
                            r === this._mapHead && (this._mapHead = null),
                                this._records.delete(r.key),
                                (r._nextRemoved = r._next),
                                (r.previousValue = r.currentValue),
                                (r.currentValue = null),
                                (r._prev = null),
                                (r._next = null);
                    }
                    return (
                        this._changesTail &&
                            (this._changesTail._nextChanged = null),
                        this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        this.isDirty
                    );
                }
                _insertBeforeOrAppend(t, n) {
                    if (t) {
                        const r = t._prev;
                        return (
                            (n._next = t),
                            (n._prev = r),
                            (t._prev = n),
                            r && (r._next = n),
                            t === this._mapHead && (this._mapHead = n),
                            (this._appendAfter = t),
                            t
                        );
                    }
                    return (
                        this._appendAfter
                            ? ((this._appendAfter._next = n),
                              (n._prev = this._appendAfter))
                            : (this._mapHead = n),
                        (this._appendAfter = n),
                        null
                    );
                }
                _getOrCreateRecordForKey(t, n) {
                    if (this._records.has(t)) {
                        const i = this._records.get(t);
                        this._maybeAddToChanges(i, n);
                        const o = i._prev,
                            l = i._next;
                        return (
                            o && (o._next = l),
                            l && (l._prev = o),
                            (i._next = null),
                            (i._prev = null),
                            i
                        );
                    }
                    const r = new YC(t);
                    return (
                        this._records.set(t, r),
                        (r.currentValue = n),
                        this._addToAdditions(r),
                        r
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            this._previousMapHead = this._mapHead,
                                t = this._previousMapHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._changesHead;
                            null !== t;
                            t = t._nextChanged
                        )
                            t.previousValue = t.currentValue;
                        for (
                            t = this._additionsHead;
                            null != t;
                            t = t._nextAdded
                        )
                            t.previousValue = t.currentValue;
                        (this._changesHead = this._changesTail = null),
                            (this._additionsHead = this._additionsTail = null),
                            (this._removalsHead = null);
                    }
                }
                _maybeAddToChanges(t, n) {
                    Object.is(n, t.currentValue) ||
                        ((t.previousValue = t.currentValue),
                        (t.currentValue = n),
                        this._addToChanges(t));
                }
                _addToAdditions(t) {
                    null === this._additionsHead
                        ? (this._additionsHead = this._additionsTail = t)
                        : ((this._additionsTail._nextAdded = t),
                          (this._additionsTail = t));
                }
                _addToChanges(t) {
                    null === this._changesHead
                        ? (this._changesHead = this._changesTail = t)
                        : ((this._changesTail._nextChanged = t),
                          (this._changesTail = t));
                }
                _forEach(t, n) {
                    t instanceof Map
                        ? t.forEach(n)
                        : Object.keys(t).forEach((r) => n(t[r], r));
                }
            }
            class YC {
                constructor(t) {
                    (this.key = t),
                        (this.previousValue = null),
                        (this.currentValue = null),
                        (this._nextPrevious = null),
                        (this._next = null),
                        (this._prev = null),
                        (this._nextAdded = null),
                        (this._nextRemoved = null),
                        (this._nextChanged = null);
                }
            }
            function sm() {
                return new Ac([new tm()]);
            }
            let Ac = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (null != r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || sm()),
                            deps: [[e, new ra(), new na()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((i) => i.supports(n));
                        if (null != r) return r;
                        throw new Re(901, '');
                    }
                }
                return (
                    (e.ɵprov = mt({
                        token: e,
                        providedIn: 'root',
                        factory: sm,
                    })),
                    e
                );
            })();
            function om() {
                return new wc([new im()]);
            }
            let wc = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || om()),
                            deps: [[e, new ra(), new na()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((o) => o.supports(n));
                        if (r) return r;
                        throw new Re(901, '');
                    }
                }
                return (
                    (e.ɵprov = mt({
                        token: e,
                        providedIn: 'root',
                        factory: om,
                    })),
                    e
                );
            })();
            const JC = zg(null, 'core', []);
            let qC = (() => {
                class e {
                    constructor(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Zn(vc));
                    }),
                    (e.ɵmod = xn({ type: e })),
                    (e.ɵinj = nt({})),
                    e
                );
            })();
        },
        3075: (de, Y, f) => {
            f.d(Y, {
                Fj: () => _e,
                JJ: () => Nt,
                JL: () => Un,
                JU: () => N,
                On: () => Cr,
                UX: () => An,
                qu: () => zn,
                sg: () => On,
                u: () => Yr,
                u5: () => on,
            });
            var s = f(5e3),
                m = f(9808),
                L = f(8996),
                k = f(4128),
                T = f(4004);
            let S = (() => {
                    class A {
                        constructor(g, H) {
                            (this._renderer = g),
                                (this._elementRef = H),
                                (this.onChange = (qe) => {}),
                                (this.onTouched = () => {});
                        }
                        setProperty(g, H) {
                            this._renderer.setProperty(
                                this._elementRef.nativeElement,
                                g,
                                H
                            );
                        }
                        registerOnTouched(g) {
                            this.onTouched = g;
                        }
                        registerOnChange(g) {
                            this.onChange = g;
                        }
                        setDisabledState(g) {
                            this.setProperty('disabled', g);
                        }
                    }
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)(s.Y36(s.Qsj), s.Y36(s.SBq));
                        }),
                        (A.ɵdir = s.lG2({ type: A })),
                        A
                    );
                })(),
                O = (() => {
                    class A extends S {}
                    return (
                        (A.ɵfac = (function () {
                            let E;
                            return function (H) {
                                return (E || (E = s.n5z(A)))(H || A);
                            };
                        })()),
                        (A.ɵdir = s.lG2({ type: A, features: [s.qOj] })),
                        A
                    );
                })();
            const N = new s.OlP('NgValueAccessor'),
                F = {
                    provide: N,
                    useExisting: (0, s.Gpc)(() => _e),
                    multi: !0,
                },
                fe = new s.OlP('CompositionEventMode');
            let _e = (() => {
                class A extends S {
                    constructor(g, H, qe) {
                        super(g, H),
                            (this._compositionMode = qe),
                            (this._composing = !1),
                            null == this._compositionMode &&
                                (this._compositionMode = !(function K() {
                                    const A = (0, m.q)()
                                        ? (0, m.q)().getUserAgent()
                                        : '';
                                    return /android (\d+)/.test(
                                        A.toLowerCase()
                                    );
                                })());
                    }
                    writeValue(g) {
                        this.setProperty('value', null == g ? '' : g);
                    }
                    _handleInput(g) {
                        (!this._compositionMode ||
                            (this._compositionMode && !this._composing)) &&
                            this.onChange(g);
                    }
                    _compositionStart() {
                        this._composing = !0;
                    }
                    _compositionEnd(g) {
                        (this._composing = !1),
                            this._compositionMode && this.onChange(g);
                    }
                }
                return (
                    (A.ɵfac = function (g) {
                        return new (g || A)(
                            s.Y36(s.Qsj),
                            s.Y36(s.SBq),
                            s.Y36(fe, 8)
                        );
                    }),
                    (A.ɵdir = s.lG2({
                        type: A,
                        selectors: [
                            [
                                'input',
                                'formControlName',
                                '',
                                3,
                                'type',
                                'checkbox',
                            ],
                            ['textarea', 'formControlName', ''],
                            ['input', 'formControl', '', 3, 'type', 'checkbox'],
                            ['textarea', 'formControl', ''],
                            ['input', 'ngModel', '', 3, 'type', 'checkbox'],
                            ['textarea', 'ngModel', ''],
                            ['', 'ngDefaultControl', ''],
                        ],
                        hostBindings: function (g, H) {
                            1 & g &&
                                s.NdJ('input', function (jt) {
                                    return H._handleInput(jt.target.value);
                                })('blur', function () {
                                    return H.onTouched();
                                })('compositionstart', function () {
                                    return H._compositionStart();
                                })('compositionend', function (jt) {
                                    return H._compositionEnd(jt.target.value);
                                });
                        },
                        features: [s._Bn([F]), s.qOj],
                    })),
                    A
                );
            })();
            const pe = new s.OlP('NgValidators'),
                J = new s.OlP('NgAsyncValidators');
            function je(A) {
                return null != A;
            }
            function We(A) {
                const E = (0, s.QGY)(A) ? (0, L.D)(A) : A;
                return (0, s.CqO)(E), E;
            }
            function ke(A) {
                let E = {};
                return (
                    A.forEach((g) => {
                        E =
                            null != g
                                ? Object.assign(Object.assign({}, E), g)
                                : E;
                    }),
                    0 === Object.keys(E).length ? null : E
                );
            }
            function pt(A, E) {
                return E.map((g) => g(A));
            }
            function hn(A) {
                return A.map((E) =>
                    (function Lt(A) {
                        return !A.validate;
                    })(E)
                        ? E
                        : (g) => E.validate(g)
                );
            }
            function Ot(A) {
                return null != A
                    ? (function yt(A) {
                          if (!A) return null;
                          const E = A.filter(je);
                          return 0 == E.length
                              ? null
                              : function (g) {
                                    return ke(pt(g, E));
                                };
                      })(hn(A))
                    : null;
            }
            function Pt(A) {
                return null != A
                    ? (function gt(A) {
                          if (!A) return null;
                          const E = A.filter(je);
                          return 0 == E.length
                              ? null
                              : function (g) {
                                    const H = pt(g, E).map(We);
                                    return (0, k.D)(H).pipe((0, T.U)(ke));
                                };
                      })(hn(A))
                    : null;
            }
            function It(A, E) {
                return null === A ? [E] : Array.isArray(A) ? [...A, E] : [A, E];
            }
            function mt(A) {
                return A._rawValidators;
            }
            function $t(A) {
                return A._rawAsyncValidators;
            }
            function nt(A) {
                return A ? (Array.isArray(A) ? A : [A]) : [];
            }
            function At(A, E) {
                return Array.isArray(A) ? A.includes(E) : A === E;
            }
            function He(A, E) {
                const g = nt(E);
                return (
                    nt(A).forEach((qe) => {
                        At(g, qe) || g.push(qe);
                    }),
                    g
                );
            }
            function st(A, E) {
                return nt(E).filter((g) => !At(A, g));
            }
            class xt {
                constructor() {
                    (this._rawValidators = []),
                        (this._rawAsyncValidators = []),
                        (this._onDestroyCallbacks = []);
                }
                get value() {
                    return this.control ? this.control.value : null;
                }
                get valid() {
                    return this.control ? this.control.valid : null;
                }
                get invalid() {
                    return this.control ? this.control.invalid : null;
                }
                get pending() {
                    return this.control ? this.control.pending : null;
                }
                get disabled() {
                    return this.control ? this.control.disabled : null;
                }
                get enabled() {
                    return this.control ? this.control.enabled : null;
                }
                get errors() {
                    return this.control ? this.control.errors : null;
                }
                get pristine() {
                    return this.control ? this.control.pristine : null;
                }
                get dirty() {
                    return this.control ? this.control.dirty : null;
                }
                get touched() {
                    return this.control ? this.control.touched : null;
                }
                get status() {
                    return this.control ? this.control.status : null;
                }
                get untouched() {
                    return this.control ? this.control.untouched : null;
                }
                get statusChanges() {
                    return this.control ? this.control.statusChanges : null;
                }
                get valueChanges() {
                    return this.control ? this.control.valueChanges : null;
                }
                get path() {
                    return null;
                }
                _setValidators(E) {
                    (this._rawValidators = E || []),
                        (this._composedValidatorFn = Ot(this._rawValidators));
                }
                _setAsyncValidators(E) {
                    (this._rawAsyncValidators = E || []),
                        (this._composedAsyncValidatorFn = Pt(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn || null;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn || null;
                }
                _registerOnDestroy(E) {
                    this._onDestroyCallbacks.push(E);
                }
                _invokeOnDestroyCallbacks() {
                    this._onDestroyCallbacks.forEach((E) => E()),
                        (this._onDestroyCallbacks = []);
                }
                reset(E) {
                    this.control && this.control.reset(E);
                }
                hasError(E, g) {
                    return !!this.control && this.control.hasError(E, g);
                }
                getError(E, g) {
                    return this.control ? this.control.getError(E, g) : null;
                }
            }
            class Qt extends xt {
                constructor() {
                    super(...arguments),
                        (this._parent = null),
                        (this.name = null),
                        (this.valueAccessor = null);
                }
            }
            class ln extends xt {
                get formDirective() {
                    return null;
                }
                get path() {
                    return null;
                }
            }
            class Bn {
                constructor(E) {
                    this._cd = E;
                }
                is(E) {
                    var g, H, qe;
                    return 'submitted' === E
                        ? !!(null === (g = this._cd) || void 0 === g
                              ? void 0
                              : g.submitted)
                        : !!(null ===
                              (qe =
                                  null === (H = this._cd) || void 0 === H
                                      ? void 0
                                      : H.control) || void 0 === qe
                              ? void 0
                              : qe[E]);
                }
            }
            let Nt = (() => {
                    class A extends Bn {
                        constructor(g) {
                            super(g);
                        }
                    }
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)(s.Y36(Qt, 2));
                        }),
                        (A.ɵdir = s.lG2({
                            type: A,
                            selectors: [
                                ['', 'formControlName', ''],
                                ['', 'ngModel', ''],
                                ['', 'formControl', ''],
                            ],
                            hostVars: 14,
                            hostBindings: function (g, H) {
                                2 & g &&
                                    s.ekj('ng-untouched', H.is('untouched'))(
                                        'ng-touched',
                                        H.is('touched')
                                    )('ng-pristine', H.is('pristine'))(
                                        'ng-dirty',
                                        H.is('dirty')
                                    )('ng-valid', H.is('valid'))(
                                        'ng-invalid',
                                        H.is('invalid')
                                    )('ng-pending', H.is('pending'));
                            },
                            features: [s.qOj],
                        })),
                        A
                    );
                })(),
                Un = (() => {
                    class A extends Bn {
                        constructor(g) {
                            super(g);
                        }
                    }
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)(s.Y36(ln, 10));
                        }),
                        (A.ɵdir = s.lG2({
                            type: A,
                            selectors: [
                                ['', 'formGroupName', ''],
                                ['', 'formArrayName', ''],
                                ['', 'ngModelGroup', ''],
                                ['', 'formGroup', ''],
                                ['form', 3, 'ngNoForm', ''],
                                ['', 'ngForm', ''],
                            ],
                            hostVars: 16,
                            hostBindings: function (g, H) {
                                2 & g &&
                                    s.ekj('ng-untouched', H.is('untouched'))(
                                        'ng-touched',
                                        H.is('touched')
                                    )('ng-pristine', H.is('pristine'))(
                                        'ng-dirty',
                                        H.is('dirty')
                                    )('ng-valid', H.is('valid'))(
                                        'ng-invalid',
                                        H.is('invalid')
                                    )('ng-pending', H.is('pending'))(
                                        'ng-submitted',
                                        H.is('submitted')
                                    );
                            },
                            features: [s.qOj],
                        })),
                        A
                    );
                })();
            function Mn(A, E) {
                return [...E.path, A];
            }
            function q(A, E) {
                ae(A, E),
                    E.valueAccessor.writeValue(A.value),
                    (function be(A, E) {
                        E.valueAccessor.registerOnChange((g) => {
                            (A._pendingValue = g),
                                (A._pendingChange = !0),
                                (A._pendingDirty = !0),
                                'change' === A.updateOn && et(A, E);
                        });
                    })(A, E),
                    (function Ct(A, E) {
                        const g = (H, qe) => {
                            E.valueAccessor.writeValue(H),
                                qe && E.viewToModelUpdate(H);
                        };
                        A.registerOnChange(g),
                            E._registerOnDestroy(() => {
                                A._unregisterOnChange(g);
                            });
                    })(A, E),
                    (function Ne(A, E) {
                        E.valueAccessor.registerOnTouched(() => {
                            (A._pendingTouched = !0),
                                'blur' === A.updateOn &&
                                    A._pendingChange &&
                                    et(A, E),
                                'submit' !== A.updateOn && A.markAsTouched();
                        });
                    })(A, E),
                    (function Ke(A, E) {
                        if (E.valueAccessor.setDisabledState) {
                            const g = (H) => {
                                E.valueAccessor.setDisabledState(H);
                            };
                            A.registerOnDisabledChange(g),
                                E._registerOnDestroy(() => {
                                    A._unregisterOnDisabledChange(g);
                                });
                        }
                    })(A, E);
            }
            function ue(A, E, g = !0) {
                const H = () => {};
                E.valueAccessor &&
                    (E.valueAccessor.registerOnChange(H),
                    E.valueAccessor.registerOnTouched(H)),
                    Z(A, E),
                    A &&
                        (E._invokeOnDestroyCallbacks(),
                        A._registerOnCollectionChange(() => {}));
            }
            function Ee(A, E) {
                A.forEach((g) => {
                    g.registerOnValidatorChange &&
                        g.registerOnValidatorChange(E);
                });
            }
            function ae(A, E) {
                const g = mt(A);
                null !== E.validator
                    ? A.setValidators(It(g, E.validator))
                    : 'function' == typeof g && A.setValidators([g]);
                const H = $t(A);
                null !== E.asyncValidator
                    ? A.setAsyncValidators(It(H, E.asyncValidator))
                    : 'function' == typeof H && A.setAsyncValidators([H]);
                const qe = () => A.updateValueAndValidity();
                Ee(E._rawValidators, qe), Ee(E._rawAsyncValidators, qe);
            }
            function Z(A, E) {
                let g = !1;
                if (null !== A) {
                    if (null !== E.validator) {
                        const qe = mt(A);
                        if (Array.isArray(qe) && qe.length > 0) {
                            const jt = qe.filter(($n) => $n !== E.validator);
                            jt.length !== qe.length &&
                                ((g = !0), A.setValidators(jt));
                        }
                    }
                    if (null !== E.asyncValidator) {
                        const qe = $t(A);
                        if (Array.isArray(qe) && qe.length > 0) {
                            const jt = qe.filter(
                                ($n) => $n !== E.asyncValidator
                            );
                            jt.length !== qe.length &&
                                ((g = !0), A.setAsyncValidators(jt));
                        }
                    }
                }
                const H = () => {};
                return Ee(E._rawValidators, H), Ee(E._rawAsyncValidators, H), g;
            }
            function et(A, E) {
                A._pendingDirty && A.markAsDirty(),
                    A.setValue(A._pendingValue, { emitModelToViewChange: !1 }),
                    E.viewToModelUpdate(A._pendingValue),
                    (A._pendingChange = !1);
            }
            function se(A, E) {
                if (!A.hasOwnProperty('model')) return !1;
                const g = A.model;
                return !!g.isFirstChange() || !Object.is(E, g.currentValue);
            }
            function Ye(A, E) {
                if (!E) return null;
                let g, H, qe;
                return (
                    Array.isArray(E),
                    E.forEach((jt) => {
                        jt.constructor === _e
                            ? (g = jt)
                            : (function X(A) {
                                  return (
                                      Object.getPrototypeOf(A.constructor) === O
                                  );
                              })(jt)
                            ? (H = jt)
                            : (qe = jt);
                    }),
                    qe || H || g || null
                );
            }
            function kt(A, E) {
                const g = A.indexOf(E);
                g > -1 && A.splice(g, 1);
            }
            const ir = 'VALID',
                sr = 'INVALID',
                ur = 'PENDING',
                fr = 'DISABLED';
            function Yn(A) {
                return (Cn(A) ? A.validators : A) || null;
            }
            function or(A) {
                return Array.isArray(A) ? Ot(A) : A || null;
            }
            function wt(A, E) {
                return (Cn(E) ? E.asyncValidators : A) || null;
            }
            function Xt(A) {
                return Array.isArray(A) ? Pt(A) : A || null;
            }
            function Cn(A) {
                return null != A && !Array.isArray(A) && 'object' == typeof A;
            }
            const cr = (A) => A instanceof tn,
                yr = (A) => A instanceof Ar,
                Jn = (A) => A instanceof Or;
            function vr(A) {
                return cr(A) ? A.value : A.getRawValue();
            }
            function Pn(A, E) {
                const g = yr(A),
                    H = A.controls;
                if (!(g ? Object.keys(H) : H).length) throw new s.vHH(1e3, '');
                if (!H[E]) throw new s.vHH(1001, '');
            }
            function Nr(A, E) {
                yr(A),
                    A._forEachChild((H, qe) => {
                        if (void 0 === E[qe]) throw new s.vHH(1002, '');
                    });
            }
            class qn {
                constructor(E, g) {
                    (this._pendingDirty = !1),
                        (this._hasOwnPendingAsyncValidator = !1),
                        (this._pendingTouched = !1),
                        (this._onCollectionChange = () => {}),
                        (this._parent = null),
                        (this.pristine = !0),
                        (this.touched = !1),
                        (this._onDisabledChange = []),
                        (this._rawValidators = E),
                        (this._rawAsyncValidators = g),
                        (this._composedValidatorFn = or(this._rawValidators)),
                        (this._composedAsyncValidatorFn = Xt(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn;
                }
                set validator(E) {
                    this._rawValidators = this._composedValidatorFn = E;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn;
                }
                set asyncValidator(E) {
                    this._rawAsyncValidators = this._composedAsyncValidatorFn =
                        E;
                }
                get parent() {
                    return this._parent;
                }
                get valid() {
                    return this.status === ir;
                }
                get invalid() {
                    return this.status === sr;
                }
                get pending() {
                    return this.status == ur;
                }
                get disabled() {
                    return this.status === fr;
                }
                get enabled() {
                    return this.status !== fr;
                }
                get dirty() {
                    return !this.pristine;
                }
                get untouched() {
                    return !this.touched;
                }
                get updateOn() {
                    return this._updateOn
                        ? this._updateOn
                        : this.parent
                        ? this.parent.updateOn
                        : 'change';
                }
                setValidators(E) {
                    (this._rawValidators = E),
                        (this._composedValidatorFn = or(E));
                }
                setAsyncValidators(E) {
                    (this._rawAsyncValidators = E),
                        (this._composedAsyncValidatorFn = Xt(E));
                }
                addValidators(E) {
                    this.setValidators(He(E, this._rawValidators));
                }
                addAsyncValidators(E) {
                    this.setAsyncValidators(He(E, this._rawAsyncValidators));
                }
                removeValidators(E) {
                    this.setValidators(st(E, this._rawValidators));
                }
                removeAsyncValidators(E) {
                    this.setAsyncValidators(st(E, this._rawAsyncValidators));
                }
                hasValidator(E) {
                    return At(this._rawValidators, E);
                }
                hasAsyncValidator(E) {
                    return At(this._rawAsyncValidators, E);
                }
                clearValidators() {
                    this.validator = null;
                }
                clearAsyncValidators() {
                    this.asyncValidator = null;
                }
                markAsTouched(E = {}) {
                    (this.touched = !0),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.markAsTouched(E);
                }
                markAllAsTouched() {
                    this.markAsTouched({ onlySelf: !0 }),
                        this._forEachChild((E) => E.markAllAsTouched());
                }
                markAsUntouched(E = {}) {
                    (this.touched = !1),
                        (this._pendingTouched = !1),
                        this._forEachChild((g) => {
                            g.markAsUntouched({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updateTouched(E);
                }
                markAsDirty(E = {}) {
                    (this.pristine = !1),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.markAsDirty(E);
                }
                markAsPristine(E = {}) {
                    (this.pristine = !0),
                        (this._pendingDirty = !1),
                        this._forEachChild((g) => {
                            g.markAsPristine({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updatePristine(E);
                }
                markAsPending(E = {}) {
                    (this.status = ur),
                        !1 !== E.emitEvent &&
                            this.statusChanges.emit(this.status),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.markAsPending(E);
                }
                disable(E = {}) {
                    const g = this._parentMarkedDirty(E.onlySelf);
                    (this.status = fr),
                        (this.errors = null),
                        this._forEachChild((H) => {
                            H.disable(
                                Object.assign(Object.assign({}, E), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this._updateValue(),
                        !1 !== E.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, E), {
                                skipPristineCheck: g,
                            })
                        ),
                        this._onDisabledChange.forEach((H) => H(!0));
                }
                enable(E = {}) {
                    const g = this._parentMarkedDirty(E.onlySelf);
                    (this.status = ir),
                        this._forEachChild((H) => {
                            H.enable(
                                Object.assign(Object.assign({}, E), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: E.emitEvent,
                        }),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, E), {
                                skipPristineCheck: g,
                            })
                        ),
                        this._onDisabledChange.forEach((H) => H(!1));
                }
                _updateAncestors(E) {
                    this._parent &&
                        !E.onlySelf &&
                        (this._parent.updateValueAndValidity(E),
                        E.skipPristineCheck || this._parent._updatePristine(),
                        this._parent._updateTouched());
                }
                setParent(E) {
                    this._parent = E;
                }
                updateValueAndValidity(E = {}) {
                    this._setInitialStatus(),
                        this._updateValue(),
                        this.enabled &&
                            (this._cancelExistingSubscription(),
                            (this.errors = this._runValidator()),
                            (this.status = this._calculateStatus()),
                            (this.status === ir || this.status === ur) &&
                                this._runAsyncValidator(E.emitEvent)),
                        !1 !== E.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent.updateValueAndValidity(E);
                }
                _updateTreeValidity(E = { emitEvent: !0 }) {
                    this._forEachChild((g) => g._updateTreeValidity(E)),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: E.emitEvent,
                        });
                }
                _setInitialStatus() {
                    this.status = this._allControlsDisabled() ? fr : ir;
                }
                _runValidator() {
                    return this.validator ? this.validator(this) : null;
                }
                _runAsyncValidator(E) {
                    if (this.asyncValidator) {
                        (this.status = ur),
                            (this._hasOwnPendingAsyncValidator = !0);
                        const g = We(this.asyncValidator(this));
                        this._asyncValidationSubscription = g.subscribe((H) => {
                            (this._hasOwnPendingAsyncValidator = !1),
                                this.setErrors(H, { emitEvent: E });
                        });
                    }
                }
                _cancelExistingSubscription() {
                    this._asyncValidationSubscription &&
                        (this._asyncValidationSubscription.unsubscribe(),
                        (this._hasOwnPendingAsyncValidator = !1));
                }
                setErrors(E, g = {}) {
                    (this.errors = E),
                        this._updateControlsErrors(!1 !== g.emitEvent);
                }
                get(E) {
                    return (function Qn(A, E, g) {
                        if (
                            null == E ||
                            (Array.isArray(E) || (E = E.split(g)),
                            Array.isArray(E) && 0 === E.length)
                        )
                            return null;
                        let H = A;
                        return (
                            E.forEach((qe) => {
                                H = yr(H)
                                    ? H.controls.hasOwnProperty(qe)
                                        ? H.controls[qe]
                                        : null
                                    : (Jn(H) && H.at(qe)) || null;
                            }),
                            H
                        );
                    })(this, E, '.');
                }
                getError(E, g) {
                    const H = g ? this.get(g) : this;
                    return H && H.errors ? H.errors[E] : null;
                }
                hasError(E, g) {
                    return !!this.getError(E, g);
                }
                get root() {
                    let E = this;
                    for (; E._parent; ) E = E._parent;
                    return E;
                }
                _updateControlsErrors(E) {
                    (this.status = this._calculateStatus()),
                        E && this.statusChanges.emit(this.status),
                        this._parent && this._parent._updateControlsErrors(E);
                }
                _initObservables() {
                    (this.valueChanges = new s.vpe()),
                        (this.statusChanges = new s.vpe());
                }
                _calculateStatus() {
                    return this._allControlsDisabled()
                        ? fr
                        : this.errors
                        ? sr
                        : this._hasOwnPendingAsyncValidator ||
                          this._anyControlsHaveStatus(ur)
                        ? ur
                        : this._anyControlsHaveStatus(sr)
                        ? sr
                        : ir;
                }
                _anyControlsHaveStatus(E) {
                    return this._anyControls((g) => g.status === E);
                }
                _anyControlsDirty() {
                    return this._anyControls((E) => E.dirty);
                }
                _anyControlsTouched() {
                    return this._anyControls((E) => E.touched);
                }
                _updatePristine(E = {}) {
                    (this.pristine = !this._anyControlsDirty()),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updatePristine(E);
                }
                _updateTouched(E = {}) {
                    (this.touched = this._anyControlsTouched()),
                        this._parent &&
                            !E.onlySelf &&
                            this._parent._updateTouched(E);
                }
                _isBoxedValue(E) {
                    return (
                        'object' == typeof E &&
                        null !== E &&
                        2 === Object.keys(E).length &&
                        'value' in E &&
                        'disabled' in E
                    );
                }
                _registerOnCollectionChange(E) {
                    this._onCollectionChange = E;
                }
                _setUpdateStrategy(E) {
                    Cn(E) &&
                        null != E.updateOn &&
                        (this._updateOn = E.updateOn);
                }
                _parentMarkedDirty(E) {
                    return (
                        !E &&
                        !(!this._parent || !this._parent.dirty) &&
                        !this._parent._anyControlsDirty()
                    );
                }
            }
            class tn extends qn {
                constructor(E = null, g, H) {
                    super(Yn(g), wt(H, g)),
                        (this.defaultValue = null),
                        (this._onChange = []),
                        (this._pendingChange = !1),
                        this._applyFormState(E),
                        this._setUpdateStrategy(g),
                        this._initObservables(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        }),
                        Cn(g) &&
                            g.initialValueIsDefault &&
                            (this.defaultValue = this._isBoxedValue(E)
                                ? E.value
                                : E);
                }
                setValue(E, g = {}) {
                    (this.value = this._pendingValue = E),
                        this._onChange.length &&
                            !1 !== g.emitModelToViewChange &&
                            this._onChange.forEach((H) =>
                                H(this.value, !1 !== g.emitViewToModelChange)
                            ),
                        this.updateValueAndValidity(g);
                }
                patchValue(E, g = {}) {
                    this.setValue(E, g);
                }
                reset(E = this.defaultValue, g = {}) {
                    this._applyFormState(E),
                        this.markAsPristine(g),
                        this.markAsUntouched(g),
                        this.setValue(this.value, g),
                        (this._pendingChange = !1);
                }
                _updateValue() {}
                _anyControls(E) {
                    return !1;
                }
                _allControlsDisabled() {
                    return this.disabled;
                }
                registerOnChange(E) {
                    this._onChange.push(E);
                }
                _unregisterOnChange(E) {
                    kt(this._onChange, E);
                }
                registerOnDisabledChange(E) {
                    this._onDisabledChange.push(E);
                }
                _unregisterOnDisabledChange(E) {
                    kt(this._onDisabledChange, E);
                }
                _forEachChild(E) {}
                _syncPendingControls() {
                    return !(
                        'submit' !== this.updateOn ||
                        (this._pendingDirty && this.markAsDirty(),
                        this._pendingTouched && this.markAsTouched(),
                        !this._pendingChange) ||
                        (this.setValue(this._pendingValue, {
                            onlySelf: !0,
                            emitModelToViewChange: !1,
                        }),
                        0)
                    );
                }
                _applyFormState(E) {
                    this._isBoxedValue(E)
                        ? ((this.value = this._pendingValue = E.value),
                          E.disabled
                              ? this.disable({ onlySelf: !0, emitEvent: !1 })
                              : this.enable({ onlySelf: !0, emitEvent: !1 }))
                        : (this.value = this._pendingValue = E);
                }
            }
            class Ar extends qn {
                constructor(E, g, H) {
                    super(Yn(g), wt(H, g)),
                        (this.controls = E),
                        this._initObservables(),
                        this._setUpdateStrategy(g),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                registerControl(E, g) {
                    return this.controls[E]
                        ? this.controls[E]
                        : ((this.controls[E] = g),
                          g.setParent(this),
                          g._registerOnCollectionChange(
                              this._onCollectionChange
                          ),
                          g);
                }
                addControl(E, g, H = {}) {
                    this.registerControl(E, g),
                        this.updateValueAndValidity({ emitEvent: H.emitEvent }),
                        this._onCollectionChange();
                }
                removeControl(E, g = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        delete this.controls[E],
                        this.updateValueAndValidity({ emitEvent: g.emitEvent }),
                        this._onCollectionChange();
                }
                setControl(E, g, H = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        delete this.controls[E],
                        g && this.registerControl(E, g),
                        this.updateValueAndValidity({ emitEvent: H.emitEvent }),
                        this._onCollectionChange();
                }
                contains(E) {
                    return (
                        this.controls.hasOwnProperty(E) &&
                        this.controls[E].enabled
                    );
                }
                setValue(E, g = {}) {
                    Nr(this, E),
                        Object.keys(E).forEach((H) => {
                            Pn(this, H),
                                this.controls[H].setValue(E[H], {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g);
                }
                patchValue(E, g = {}) {
                    null != E &&
                        (Object.keys(E).forEach((H) => {
                            this.controls[H] &&
                                this.controls[H].patchValue(E[H], {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g));
                }
                reset(E = {}, g = {}) {
                    this._forEachChild((H, qe) => {
                        H.reset(E[qe], {
                            onlySelf: !0,
                            emitEvent: g.emitEvent,
                        });
                    }),
                        this._updatePristine(g),
                        this._updateTouched(g),
                        this.updateValueAndValidity(g);
                }
                getRawValue() {
                    return this._reduceChildren(
                        {},
                        (E, g, H) => ((E[H] = vr(g)), E)
                    );
                }
                _syncPendingControls() {
                    let E = this._reduceChildren(
                        !1,
                        (g, H) => !!H._syncPendingControls() || g
                    );
                    return (
                        E && this.updateValueAndValidity({ onlySelf: !0 }), E
                    );
                }
                _forEachChild(E) {
                    Object.keys(this.controls).forEach((g) => {
                        const H = this.controls[g];
                        H && E(H, g);
                    });
                }
                _setUpControls() {
                    this._forEachChild((E) => {
                        E.setParent(this),
                            E._registerOnCollectionChange(
                                this._onCollectionChange
                            );
                    });
                }
                _updateValue() {
                    this.value = this._reduceValue();
                }
                _anyControls(E) {
                    for (const g of Object.keys(this.controls)) {
                        const H = this.controls[g];
                        if (this.contains(g) && E(H)) return !0;
                    }
                    return !1;
                }
                _reduceValue() {
                    return this._reduceChildren(
                        {},
                        (E, g, H) => (
                            (g.enabled || this.disabled) && (E[H] = g.value), E
                        )
                    );
                }
                _reduceChildren(E, g) {
                    let H = E;
                    return (
                        this._forEachChild((qe, jt) => {
                            H = g(H, qe, jt);
                        }),
                        H
                    );
                }
                _allControlsDisabled() {
                    for (const E of Object.keys(this.controls))
                        if (this.controls[E].enabled) return !1;
                    return (
                        Object.keys(this.controls).length > 0 || this.disabled
                    );
                }
            }
            class Or extends qn {
                constructor(E, g, H) {
                    super(Yn(g), wt(H, g)),
                        (this.controls = E),
                        this._initObservables(),
                        this._setUpdateStrategy(g),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                at(E) {
                    return this.controls[E];
                }
                push(E, g = {}) {
                    this.controls.push(E),
                        this._registerControl(E),
                        this.updateValueAndValidity({ emitEvent: g.emitEvent }),
                        this._onCollectionChange();
                }
                insert(E, g, H = {}) {
                    this.controls.splice(E, 0, g),
                        this._registerControl(g),
                        this.updateValueAndValidity({ emitEvent: H.emitEvent });
                }
                removeAt(E, g = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        this.controls.splice(E, 1),
                        this.updateValueAndValidity({ emitEvent: g.emitEvent });
                }
                setControl(E, g, H = {}) {
                    this.controls[E] &&
                        this.controls[E]._registerOnCollectionChange(() => {}),
                        this.controls.splice(E, 1),
                        g &&
                            (this.controls.splice(E, 0, g),
                            this._registerControl(g)),
                        this.updateValueAndValidity({ emitEvent: H.emitEvent }),
                        this._onCollectionChange();
                }
                get length() {
                    return this.controls.length;
                }
                setValue(E, g = {}) {
                    Nr(this, E),
                        E.forEach((H, qe) => {
                            Pn(this, qe),
                                this.at(qe).setValue(H, {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g);
                }
                patchValue(E, g = {}) {
                    null != E &&
                        (E.forEach((H, qe) => {
                            this.at(qe) &&
                                this.at(qe).patchValue(H, {
                                    onlySelf: !0,
                                    emitEvent: g.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(g));
                }
                reset(E = [], g = {}) {
                    this._forEachChild((H, qe) => {
                        H.reset(E[qe], {
                            onlySelf: !0,
                            emitEvent: g.emitEvent,
                        });
                    }),
                        this._updatePristine(g),
                        this._updateTouched(g),
                        this.updateValueAndValidity(g);
                }
                getRawValue() {
                    return this.controls.map((E) => vr(E));
                }
                clear(E = {}) {
                    this.controls.length < 1 ||
                        (this._forEachChild((g) =>
                            g._registerOnCollectionChange(() => {})
                        ),
                        this.controls.splice(0),
                        this.updateValueAndValidity({
                            emitEvent: E.emitEvent,
                        }));
                }
                _syncPendingControls() {
                    let E = this.controls.reduce(
                        (g, H) => !!H._syncPendingControls() || g,
                        !1
                    );
                    return (
                        E && this.updateValueAndValidity({ onlySelf: !0 }), E
                    );
                }
                _forEachChild(E) {
                    this.controls.forEach((g, H) => {
                        E(g, H);
                    });
                }
                _updateValue() {
                    this.value = this.controls
                        .filter((E) => E.enabled || this.disabled)
                        .map((E) => E.value);
                }
                _anyControls(E) {
                    return this.controls.some((g) => g.enabled && E(g));
                }
                _setUpControls() {
                    this._forEachChild((E) => this._registerControl(E));
                }
                _allControlsDisabled() {
                    for (const E of this.controls) if (E.enabled) return !1;
                    return this.controls.length > 0 || this.disabled;
                }
                _registerControl(E) {
                    E.setParent(this),
                        E._registerOnCollectionChange(this._onCollectionChange);
                }
            }
            const an = { provide: Qt, useExisting: (0, s.Gpc)(() => Cr) },
                pr = (() => Promise.resolve(null))();
            let Cr = (() => {
                    class A extends Qt {
                        constructor(g, H, qe, jt, $n) {
                            super(),
                                (this._changeDetectorRef = $n),
                                (this.control = new tn()),
                                (this._registered = !1),
                                (this.update = new s.vpe()),
                                (this._parent = g),
                                this._setValidators(H),
                                this._setAsyncValidators(qe),
                                (this.valueAccessor = Ye(0, jt));
                        }
                        ngOnChanges(g) {
                            if (
                                (this._checkForErrors(),
                                !this._registered || 'name' in g)
                            ) {
                                if (
                                    this._registered &&
                                    (this._checkName(), this.formDirective)
                                ) {
                                    const H = g.name.previousValue;
                                    this.formDirective.removeControl({
                                        name: H,
                                        path: this._getPath(H),
                                    });
                                }
                                this._setUpControl();
                            }
                            'isDisabled' in g && this._updateDisabled(g),
                                se(g, this.viewModel) &&
                                    (this._updateValue(this.model),
                                    (this.viewModel = this.model));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        get path() {
                            return this._getPath(this.name);
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        viewToModelUpdate(g) {
                            (this.viewModel = g), this.update.emit(g);
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(),
                                this._isStandalone()
                                    ? this._setUpStandalone()
                                    : this.formDirective.addControl(this),
                                (this._registered = !0);
                        }
                        _setUpdateStrategy() {
                            this.options &&
                                null != this.options.updateOn &&
                                (this.control._updateOn =
                                    this.options.updateOn);
                        }
                        _isStandalone() {
                            return (
                                !this._parent ||
                                !(!this.options || !this.options.standalone)
                            );
                        }
                        _setUpStandalone() {
                            q(this.control, this),
                                this.control.updateValueAndValidity({
                                    emitEvent: !1,
                                });
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(),
                                this._checkName();
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options &&
                                this.options.name &&
                                (this.name = this.options.name),
                                this._isStandalone();
                        }
                        _updateValue(g) {
                            pr.then(() => {
                                var H;
                                this.control.setValue(g, {
                                    emitViewToModelChange: !1,
                                }),
                                    null === (H = this._changeDetectorRef) ||
                                        void 0 === H ||
                                        H.markForCheck();
                            });
                        }
                        _updateDisabled(g) {
                            const H = g.isDisabled.currentValue,
                                qe = '' === H || (H && 'false' !== H);
                            pr.then(() => {
                                var jt;
                                qe && !this.control.disabled
                                    ? this.control.disable()
                                    : !qe &&
                                      this.control.disabled &&
                                      this.control.enable(),
                                    null === (jt = this._changeDetectorRef) ||
                                        void 0 === jt ||
                                        jt.markForCheck();
                            });
                        }
                        _getPath(g) {
                            return this._parent ? Mn(g, this._parent) : [g];
                        }
                    }
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)(
                                s.Y36(ln, 9),
                                s.Y36(pe, 10),
                                s.Y36(J, 10),
                                s.Y36(N, 10),
                                s.Y36(s.sBO, 8)
                            );
                        }),
                        (A.ɵdir = s.lG2({
                            type: A,
                            selectors: [
                                [
                                    '',
                                    'ngModel',
                                    '',
                                    3,
                                    'formControlName',
                                    '',
                                    3,
                                    'formControl',
                                    '',
                                ],
                            ],
                            inputs: {
                                name: 'name',
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                                options: ['ngModelOptions', 'options'],
                            },
                            outputs: { update: 'ngModelChange' },
                            exportAs: ['ngModel'],
                            features: [s._Bn([an]), s.qOj, s.TTD],
                        })),
                        A
                    );
                })(),
                xr = (() => {
                    class A {}
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)();
                        }),
                        (A.ɵmod = s.oAB({ type: A })),
                        (A.ɵinj = s.cJS({})),
                        A
                    );
                })();
            const $e = new s.OlP('NgModelWithFormControlWarning'),
                Ut = { provide: ln, useExisting: (0, s.Gpc)(() => On) };
            let On = (() => {
                class A extends ln {
                    constructor(g, H) {
                        super(),
                            (this.validators = g),
                            (this.asyncValidators = H),
                            (this.submitted = !1),
                            (this._onCollectionChange = () =>
                                this._updateDomValue()),
                            (this.directives = []),
                            (this.form = null),
                            (this.ngSubmit = new s.vpe()),
                            this._setValidators(g),
                            this._setAsyncValidators(H);
                    }
                    ngOnChanges(g) {
                        this._checkFormPresent(),
                            g.hasOwnProperty('form') &&
                                (this._updateValidators(),
                                this._updateDomValue(),
                                this._updateRegistrations(),
                                (this._oldForm = this.form));
                    }
                    ngOnDestroy() {
                        this.form &&
                            (Z(this.form, this),
                            this.form._onCollectionChange ===
                                this._onCollectionChange &&
                                this.form._registerOnCollectionChange(
                                    () => {}
                                ));
                    }
                    get formDirective() {
                        return this;
                    }
                    get control() {
                        return this.form;
                    }
                    get path() {
                        return [];
                    }
                    addControl(g) {
                        const H = this.form.get(g.path);
                        return (
                            q(H, g),
                            H.updateValueAndValidity({ emitEvent: !1 }),
                            this.directives.push(g),
                            H
                        );
                    }
                    getControl(g) {
                        return this.form.get(g.path);
                    }
                    removeControl(g) {
                        ue(g.control || null, g, !1), kt(this.directives, g);
                    }
                    addFormGroup(g) {
                        this._setUpFormContainer(g);
                    }
                    removeFormGroup(g) {
                        this._cleanUpFormContainer(g);
                    }
                    getFormGroup(g) {
                        return this.form.get(g.path);
                    }
                    addFormArray(g) {
                        this._setUpFormContainer(g);
                    }
                    removeFormArray(g) {
                        this._cleanUpFormContainer(g);
                    }
                    getFormArray(g) {
                        return this.form.get(g.path);
                    }
                    updateModel(g, H) {
                        this.form.get(g.path).setValue(H);
                    }
                    onSubmit(g) {
                        return (
                            (this.submitted = !0),
                            (function Se(A, E) {
                                A._syncPendingControls(),
                                    E.forEach((g) => {
                                        const H = g.control;
                                        'submit' === H.updateOn &&
                                            H._pendingChange &&
                                            (g.viewToModelUpdate(
                                                H._pendingValue
                                            ),
                                            (H._pendingChange = !1));
                                    });
                            })(this.form, this.directives),
                            this.ngSubmit.emit(g),
                            !1
                        );
                    }
                    onReset() {
                        this.resetForm();
                    }
                    resetForm(g) {
                        this.form.reset(g), (this.submitted = !1);
                    }
                    _updateDomValue() {
                        this.directives.forEach((g) => {
                            const H = g.control,
                                qe = this.form.get(g.path);
                            H !== qe &&
                                (ue(H || null, g),
                                cr(qe) && (q(qe, g), (g.control = qe)));
                        }),
                            this.form._updateTreeValidity({ emitEvent: !1 });
                    }
                    _setUpFormContainer(g) {
                        const H = this.form.get(g.path);
                        (function St(A, E) {
                            ae(A, E);
                        })(H, g),
                            H.updateValueAndValidity({ emitEvent: !1 });
                    }
                    _cleanUpFormContainer(g) {
                        if (this.form) {
                            const H = this.form.get(g.path);
                            H &&
                                (function Rt(A, E) {
                                    return Z(A, E);
                                })(H, g) &&
                                H.updateValueAndValidity({ emitEvent: !1 });
                        }
                    }
                    _updateRegistrations() {
                        this.form._registerOnCollectionChange(
                            this._onCollectionChange
                        ),
                            this._oldForm &&
                                this._oldForm._registerOnCollectionChange(
                                    () => {}
                                );
                    }
                    _updateValidators() {
                        ae(this.form, this),
                            this._oldForm && Z(this._oldForm, this);
                    }
                    _checkFormPresent() {}
                }
                return (
                    (A.ɵfac = function (g) {
                        return new (g || A)(s.Y36(pe, 10), s.Y36(J, 10));
                    }),
                    (A.ɵdir = s.lG2({
                        type: A,
                        selectors: [['', 'formGroup', '']],
                        hostBindings: function (g, H) {
                            1 & g &&
                                s.NdJ('submit', function (jt) {
                                    return H.onSubmit(jt);
                                })('reset', function () {
                                    return H.onReset();
                                });
                        },
                        inputs: { form: ['formGroup', 'form'] },
                        outputs: { ngSubmit: 'ngSubmit' },
                        exportAs: ['ngForm'],
                        features: [s._Bn([Ut]), s.qOj, s.TTD],
                    })),
                    A
                );
            })();
            const Ji = { provide: Qt, useExisting: (0, s.Gpc)(() => Yr) };
            let Yr = (() => {
                    class A extends Qt {
                        constructor(g, H, qe, jt, $n) {
                            super(),
                                (this._ngModelWarningConfig = $n),
                                (this._added = !1),
                                (this.update = new s.vpe()),
                                (this._ngModelWarningSent = !1),
                                (this._parent = g),
                                this._setValidators(H),
                                this._setAsyncValidators(qe),
                                (this.valueAccessor = Ye(0, jt));
                        }
                        set isDisabled(g) {}
                        ngOnChanges(g) {
                            this._added || this._setUpControl(),
                                se(g, this.viewModel) &&
                                    ((this.viewModel = this.model),
                                    this.formDirective.updateModel(
                                        this,
                                        this.model
                                    ));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        viewToModelUpdate(g) {
                            (this.viewModel = g), this.update.emit(g);
                        }
                        get path() {
                            return Mn(
                                null == this.name
                                    ? this.name
                                    : this.name.toString(),
                                this._parent
                            );
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        _checkParentType() {}
                        _setUpControl() {
                            this._checkParentType(),
                                (this.control =
                                    this.formDirective.addControl(this)),
                                this.control.disabled &&
                                    this.valueAccessor.setDisabledState &&
                                    this.valueAccessor.setDisabledState(!0),
                                (this._added = !0);
                        }
                    }
                    return (
                        (A._ngModelWarningSentOnce = !1),
                        (A.ɵfac = function (g) {
                            return new (g || A)(
                                s.Y36(ln, 13),
                                s.Y36(pe, 10),
                                s.Y36(J, 10),
                                s.Y36(N, 10),
                                s.Y36($e, 8)
                            );
                        }),
                        (A.ɵdir = s.lG2({
                            type: A,
                            selectors: [['', 'formControlName', '']],
                            inputs: {
                                name: ['formControlName', 'name'],
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                            },
                            outputs: { update: 'ngModelChange' },
                            features: [s._Bn([Ji]), s.qOj, s.TTD],
                        })),
                        A
                    );
                })(),
                sn = (() => {
                    class A {}
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)();
                        }),
                        (A.ɵmod = s.oAB({ type: A })),
                        (A.ɵinj = s.cJS({ imports: [[xr]] })),
                        A
                    );
                })(),
                on = (() => {
                    class A {}
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)();
                        }),
                        (A.ɵmod = s.oAB({ type: A })),
                        (A.ɵinj = s.cJS({ imports: [sn] })),
                        A
                    );
                })(),
                An = (() => {
                    class A {
                        static withConfig(g) {
                            return {
                                ngModule: A,
                                providers: [
                                    {
                                        provide: $e,
                                        useValue:
                                            g.warnOnNgModelWithFormControl,
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)();
                        }),
                        (A.ɵmod = s.oAB({ type: A })),
                        (A.ɵinj = s.cJS({ imports: [sn] })),
                        A
                    );
                })(),
                zn = (() => {
                    class A {
                        group(g, H = null) {
                            const qe = this._reduceControls(g);
                            let Qr,
                                jt = null,
                                $n = null;
                            return (
                                null != H &&
                                    ((function tr(A) {
                                        return (
                                            void 0 !== A.asyncValidators ||
                                            void 0 !== A.validators ||
                                            void 0 !== A.updateOn
                                        );
                                    })(H)
                                        ? ((jt =
                                              null != H.validators
                                                  ? H.validators
                                                  : null),
                                          ($n =
                                              null != H.asyncValidators
                                                  ? H.asyncValidators
                                                  : null),
                                          (Qr =
                                              null != H.updateOn
                                                  ? H.updateOn
                                                  : void 0))
                                        : ((jt =
                                              null != H.validator
                                                  ? H.validator
                                                  : null),
                                          ($n =
                                              null != H.asyncValidator
                                                  ? H.asyncValidator
                                                  : null))),
                                new Ar(qe, {
                                    asyncValidators: $n,
                                    updateOn: Qr,
                                    validators: jt,
                                })
                            );
                        }
                        control(g, H, qe) {
                            return new tn(g, H, qe);
                        }
                        array(g, H, qe) {
                            const jt = g.map(($n) => this._createControl($n));
                            return new Or(jt, H, qe);
                        }
                        _reduceControls(g) {
                            const H = {};
                            return (
                                Object.keys(g).forEach((qe) => {
                                    H[qe] = this._createControl(g[qe]);
                                }),
                                H
                            );
                        }
                        _createControl(g) {
                            return cr(g) || yr(g) || Jn(g)
                                ? g
                                : Array.isArray(g)
                                ? this.control(
                                      g[0],
                                      g.length > 1 ? g[1] : null,
                                      g.length > 2 ? g[2] : null
                                  )
                                : this.control(g);
                        }
                    }
                    return (
                        (A.ɵfac = function (g) {
                            return new (g || A)();
                        }),
                        (A.ɵprov = s.Yz7({
                            token: A,
                            factory: A.ɵfac,
                            providedIn: An,
                        })),
                        A
                    );
                })();
        },
        2313: (de, Y, f) => {
            f.d(Y, { H7: () => Rt, b2: () => rn, q6: () => ln, se: () => We });
            var s = f(9808),
                m = f(5e3);
            class L extends s.w_ {
                constructor() {
                    super(...arguments), (this.supportsDOMEvents = !0);
                }
            }
            class k extends L {
                static makeCurrent() {
                    (0, s.HT)(new k());
                }
                onAndCancel(se, X, Se) {
                    return (
                        se.addEventListener(X, Se, !1),
                        () => {
                            se.removeEventListener(X, Se, !1);
                        }
                    );
                }
                dispatchEvent(se, X) {
                    se.dispatchEvent(X);
                }
                remove(se) {
                    se.parentNode && se.parentNode.removeChild(se);
                }
                createElement(se, X) {
                    return (X = X || this.getDefaultDocument()).createElement(
                        se
                    );
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument(
                        'fakeTitle'
                    );
                }
                getDefaultDocument() {
                    return document;
                }
                isElementNode(se) {
                    return se.nodeType === Node.ELEMENT_NODE;
                }
                isShadowRoot(se) {
                    return se instanceof DocumentFragment;
                }
                getGlobalEventTarget(se, X) {
                    return 'window' === X
                        ? window
                        : 'document' === X
                        ? se
                        : 'body' === X
                        ? se.body
                        : null;
                }
                getBaseHref(se) {
                    const X = (function S() {
                        return (
                            (T = T || document.querySelector('base')),
                            T ? T.getAttribute('href') : null
                        );
                    })();
                    return null == X
                        ? null
                        : (function N(Le) {
                              (O = O || document.createElement('a')),
                                  O.setAttribute('href', Le);
                              const se = O.pathname;
                              return '/' === se.charAt(0) ? se : `/${se}`;
                          })(X);
                }
                resetBaseElement() {
                    T = null;
                }
                getUserAgent() {
                    return window.navigator.userAgent;
                }
                getCookie(se) {
                    return (0, s.Mx)(document.cookie, se);
                }
            }
            let O,
                T = null;
            const U = new m.OlP('TRANSITION_ID'),
                F = [
                    {
                        provide: m.ip1,
                        useFactory: function w(Le, se, X) {
                            return () => {
                                X.get(m.CZH).donePromise.then(() => {
                                    const Se = (0, s.q)(),
                                        Ye = se.querySelectorAll(
                                            `style[ng-transition="${Le}"]`
                                        );
                                    for (let kt = 0; kt < Ye.length; kt++)
                                        Se.remove(Ye[kt]);
                                });
                            };
                        },
                        deps: [U, s.K0, m.zs3],
                        multi: !0,
                    },
                ];
            class K {
                static init() {
                    (0, m.VLi)(new K());
                }
                addToWindow(se) {
                    (m.dqk.getAngularTestability = (Se, Ye = !0) => {
                        const kt = se.findTestabilityInTree(Se, Ye);
                        if (null == kt)
                            throw new Error(
                                'Could not find testability for element.'
                            );
                        return kt;
                    }),
                        (m.dqk.getAllAngularTestabilities = () =>
                            se.getAllTestabilities()),
                        (m.dqk.getAllAngularRootElements = () =>
                            se.getAllRootElements()),
                        m.dqk.frameworkStabilizers ||
                            (m.dqk.frameworkStabilizers = []),
                        m.dqk.frameworkStabilizers.push((Se) => {
                            const Ye = m.dqk.getAllAngularTestabilities();
                            let kt = Ye.length,
                                Vt = !1;
                            const Sn = function (ir) {
                                (Vt = Vt || ir), kt--, 0 == kt && Se(Vt);
                            };
                            Ye.forEach(function (ir) {
                                ir.whenStable(Sn);
                            });
                        });
                }
                findTestabilityInTree(se, X, Se) {
                    if (null == X) return null;
                    const Ye = se.getTestability(X);
                    return null != Ye
                        ? Ye
                        : Se
                        ? (0, s.q)().isShadowRoot(X)
                            ? this.findTestabilityInTree(se, X.host, !0)
                            : this.findTestabilityInTree(
                                  se,
                                  X.parentElement,
                                  !0
                              )
                        : null;
                }
            }
            let fe = (() => {
                class Le {
                    build() {
                        return new XMLHttpRequest();
                    }
                }
                return (
                    (Le.ɵfac = function (X) {
                        return new (X || Le)();
                    }),
                    (Le.ɵprov = m.Yz7({ token: Le, factory: Le.ɵfac })),
                    Le
                );
            })();
            const _e = new m.OlP('EventManagerPlugins');
            let Re = (() => {
                class Le {
                    constructor(X, Se) {
                        (this._zone = Se),
                            (this._eventNameToPlugin = new Map()),
                            X.forEach((Ye) => (Ye.manager = this)),
                            (this._plugins = X.slice().reverse());
                    }
                    addEventListener(X, Se, Ye) {
                        return this._findPluginFor(Se).addEventListener(
                            X,
                            Se,
                            Ye
                        );
                    }
                    addGlobalEventListener(X, Se, Ye) {
                        return this._findPluginFor(Se).addGlobalEventListener(
                            X,
                            Se,
                            Ye
                        );
                    }
                    getZone() {
                        return this._zone;
                    }
                    _findPluginFor(X) {
                        const Se = this._eventNameToPlugin.get(X);
                        if (Se) return Se;
                        const Ye = this._plugins;
                        for (let kt = 0; kt < Ye.length; kt++) {
                            const Vt = Ye[kt];
                            if (Vt.supports(X))
                                return this._eventNameToPlugin.set(X, Vt), Vt;
                        }
                        throw new Error(
                            `No event manager plugin found for event ${X}`
                        );
                    }
                }
                return (
                    (Le.ɵfac = function (X) {
                        return new (X || Le)(m.LFG(_e), m.LFG(m.R0b));
                    }),
                    (Le.ɵprov = m.Yz7({ token: Le, factory: Le.ɵfac })),
                    Le
                );
            })();
            class Oe {
                constructor(se) {
                    this._doc = se;
                }
                addGlobalEventListener(se, X, Se) {
                    const Ye = (0, s.q)().getGlobalEventTarget(this._doc, se);
                    if (!Ye)
                        throw new Error(
                            `Unsupported event target ${Ye} for event ${X}`
                        );
                    return this.addEventListener(Ye, X, Se);
                }
            }
            let pe = (() => {
                    class Le {
                        constructor() {
                            this._stylesSet = new Set();
                        }
                        addStyles(X) {
                            const Se = new Set();
                            X.forEach((Ye) => {
                                this._stylesSet.has(Ye) ||
                                    (this._stylesSet.add(Ye), Se.add(Ye));
                            }),
                                this.onStylesAdded(Se);
                        }
                        onStylesAdded(X) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet);
                        }
                    }
                    return (
                        (Le.ɵfac = function (X) {
                            return new (X || Le)();
                        }),
                        (Le.ɵprov = m.Yz7({ token: Le, factory: Le.ɵfac })),
                        Le
                    );
                })(),
                J = (() => {
                    class Le extends pe {
                        constructor(X) {
                            super(),
                                (this._doc = X),
                                (this._hostNodes = new Map()),
                                this._hostNodes.set(X.head, []);
                        }
                        _addStylesToHost(X, Se, Ye) {
                            X.forEach((kt) => {
                                const Vt = this._doc.createElement('style');
                                (Vt.textContent = kt),
                                    Ye.push(Se.appendChild(Vt));
                            });
                        }
                        addHost(X) {
                            const Se = [];
                            this._addStylesToHost(this._stylesSet, X, Se),
                                this._hostNodes.set(X, Se);
                        }
                        removeHost(X) {
                            const Se = this._hostNodes.get(X);
                            Se && Se.forEach(Me), this._hostNodes.delete(X);
                        }
                        onStylesAdded(X) {
                            this._hostNodes.forEach((Se, Ye) => {
                                this._addStylesToHost(X, Ye, Se);
                            });
                        }
                        ngOnDestroy() {
                            this._hostNodes.forEach((X) => X.forEach(Me));
                        }
                    }
                    return (
                        (Le.ɵfac = function (X) {
                            return new (X || Le)(m.LFG(s.K0));
                        }),
                        (Le.ɵprov = m.Yz7({ token: Le, factory: Le.ɵfac })),
                        Le
                    );
                })();
            function Me(Le) {
                (0, s.q)().remove(Le);
            }
            const he = {
                    svg: 'http://www.w3.org/2000/svg',
                    xhtml: 'http://www.w3.org/1999/xhtml',
                    xlink: 'http://www.w3.org/1999/xlink',
                    xml: 'http://www.w3.org/XML/1998/namespace',
                    xmlns: 'http://www.w3.org/2000/xmlns/',
                    math: 'http://www.w3.org/1998/MathML/',
                },
                De = /%COMP%/g;
            function we(Le, se, X) {
                for (let Se = 0; Se < se.length; Se++) {
                    let Ye = se[Se];
                    Array.isArray(Ye)
                        ? we(Le, Ye, X)
                        : ((Ye = Ye.replace(De, Le)), X.push(Ye));
                }
                return X;
            }
            function Fe(Le) {
                return (se) => {
                    if ('__ngUnwrap__' === se) return Le;
                    !1 === Le(se) &&
                        (se.preventDefault(), (se.returnValue = !1));
                };
            }
            let We = (() => {
                class Le {
                    constructor(X, Se, Ye) {
                        (this.eventManager = X),
                            (this.sharedStylesHost = Se),
                            (this.appId = Ye),
                            (this.rendererByCompId = new Map()),
                            (this.defaultRenderer = new ke(X));
                    }
                    createRenderer(X, Se) {
                        if (!X || !Se) return this.defaultRenderer;
                        switch (Se.encapsulation) {
                            case m.ifc.Emulated: {
                                let Ye = this.rendererByCompId.get(Se.id);
                                return (
                                    Ye ||
                                        ((Ye = new hn(
                                            this.eventManager,
                                            this.sharedStylesHost,
                                            Se,
                                            this.appId
                                        )),
                                        this.rendererByCompId.set(Se.id, Ye)),
                                    Ye.applyToHost(X),
                                    Ye
                                );
                            }
                            case 1:
                            case m.ifc.ShadowDom:
                                return new yt(
                                    this.eventManager,
                                    this.sharedStylesHost,
                                    X,
                                    Se
                                );
                            default:
                                if (!this.rendererByCompId.has(Se.id)) {
                                    const Ye = we(Se.id, Se.styles, []);
                                    this.sharedStylesHost.addStyles(Ye),
                                        this.rendererByCompId.set(
                                            Se.id,
                                            this.defaultRenderer
                                        );
                                }
                                return this.defaultRenderer;
                        }
                    }
                    begin() {}
                    end() {}
                }
                return (
                    (Le.ɵfac = function (X) {
                        return new (X || Le)(m.LFG(Re), m.LFG(J), m.LFG(m.AFp));
                    }),
                    (Le.ɵprov = m.Yz7({ token: Le, factory: Le.ɵfac })),
                    Le
                );
            })();
            class ke {
                constructor(se) {
                    (this.eventManager = se),
                        (this.data = Object.create(null)),
                        (this.destroyNode = null);
                }
                destroy() {}
                createElement(se, X) {
                    return X
                        ? document.createElementNS(he[X] || X, se)
                        : document.createElement(se);
                }
                createComment(se) {
                    return document.createComment(se);
                }
                createText(se) {
                    return document.createTextNode(se);
                }
                appendChild(se, X) {
                    se.appendChild(X);
                }
                insertBefore(se, X, Se) {
                    se && se.insertBefore(X, Se);
                }
                removeChild(se, X) {
                    se && se.removeChild(X);
                }
                selectRootElement(se, X) {
                    let Se =
                        'string' == typeof se ? document.querySelector(se) : se;
                    if (!Se)
                        throw new Error(
                            `The selector "${se}" did not match any elements`
                        );
                    return X || (Se.textContent = ''), Se;
                }
                parentNode(se) {
                    return se.parentNode;
                }
                nextSibling(se) {
                    return se.nextSibling;
                }
                setAttribute(se, X, Se, Ye) {
                    if (Ye) {
                        X = Ye + ':' + X;
                        const kt = he[Ye];
                        kt
                            ? se.setAttributeNS(kt, X, Se)
                            : se.setAttribute(X, Se);
                    } else se.setAttribute(X, Se);
                }
                removeAttribute(se, X, Se) {
                    if (Se) {
                        const Ye = he[Se];
                        Ye
                            ? se.removeAttributeNS(Ye, X)
                            : se.removeAttribute(`${Se}:${X}`);
                    } else se.removeAttribute(X);
                }
                addClass(se, X) {
                    se.classList.add(X);
                }
                removeClass(se, X) {
                    se.classList.remove(X);
                }
                setStyle(se, X, Se, Ye) {
                    Ye & (m.JOm.DashCase | m.JOm.Important)
                        ? se.style.setProperty(
                              X,
                              Se,
                              Ye & m.JOm.Important ? 'important' : ''
                          )
                        : (se.style[X] = Se);
                }
                removeStyle(se, X, Se) {
                    Se & m.JOm.DashCase
                        ? se.style.removeProperty(X)
                        : (se.style[X] = '');
                }
                setProperty(se, X, Se) {
                    se[X] = Se;
                }
                setValue(se, X) {
                    se.nodeValue = X;
                }
                listen(se, X, Se) {
                    return 'string' == typeof se
                        ? this.eventManager.addGlobalEventListener(
                              se,
                              X,
                              Fe(Se)
                          )
                        : this.eventManager.addEventListener(se, X, Fe(Se));
                }
            }
            class hn extends ke {
                constructor(se, X, Se, Ye) {
                    super(se), (this.component = Se);
                    const kt = we(Ye + '-' + Se.id, Se.styles, []);
                    X.addStyles(kt),
                        (this.contentAttr = (function re(Le) {
                            return '_ngcontent-%COMP%'.replace(De, Le);
                        })(Ye + '-' + Se.id)),
                        (this.hostAttr = (function ne(Le) {
                            return '_nghost-%COMP%'.replace(De, Le);
                        })(Ye + '-' + Se.id));
                }
                applyToHost(se) {
                    super.setAttribute(se, this.hostAttr, '');
                }
                createElement(se, X) {
                    const Se = super.createElement(se, X);
                    return super.setAttribute(Se, this.contentAttr, ''), Se;
                }
            }
            class yt extends ke {
                constructor(se, X, Se, Ye) {
                    super(se),
                        (this.sharedStylesHost = X),
                        (this.hostEl = Se),
                        (this.shadowRoot = Se.attachShadow({ mode: 'open' })),
                        this.sharedStylesHost.addHost(this.shadowRoot);
                    const kt = we(Ye.id, Ye.styles, []);
                    for (let Vt = 0; Vt < kt.length; Vt++) {
                        const Sn = document.createElement('style');
                        (Sn.textContent = kt[Vt]),
                            this.shadowRoot.appendChild(Sn);
                    }
                }
                nodeOrShadowRoot(se) {
                    return se === this.hostEl ? this.shadowRoot : se;
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot);
                }
                appendChild(se, X) {
                    return super.appendChild(this.nodeOrShadowRoot(se), X);
                }
                insertBefore(se, X, Se) {
                    return super.insertBefore(this.nodeOrShadowRoot(se), X, Se);
                }
                removeChild(se, X) {
                    return super.removeChild(this.nodeOrShadowRoot(se), X);
                }
                parentNode(se) {
                    return this.nodeOrShadowRoot(
                        super.parentNode(this.nodeOrShadowRoot(se))
                    );
                }
            }
            let Ot = (() => {
                class Le extends Oe {
                    constructor(X) {
                        super(X);
                    }
                    supports(X) {
                        return !0;
                    }
                    addEventListener(X, Se, Ye) {
                        return (
                            X.addEventListener(Se, Ye, !1),
                            () => this.removeEventListener(X, Se, Ye)
                        );
                    }
                    removeEventListener(X, Se, Ye) {
                        return X.removeEventListener(Se, Ye);
                    }
                }
                return (
                    (Le.ɵfac = function (X) {
                        return new (X || Le)(m.LFG(s.K0));
                    }),
                    (Le.ɵprov = m.Yz7({ token: Le, factory: Le.ɵfac })),
                    Le
                );
            })();
            const gt = ['alt', 'control', 'meta', 'shift'],
                It = {
                    '\b': 'Backspace',
                    '\t': 'Tab',
                    '\x7f': 'Delete',
                    '\x1b': 'Escape',
                    Del: 'Delete',
                    Esc: 'Escape',
                    Left: 'ArrowLeft',
                    Right: 'ArrowRight',
                    Up: 'ArrowUp',
                    Down: 'ArrowDown',
                    Menu: 'ContextMenu',
                    Scroll: 'ScrollLock',
                    Win: 'OS',
                },
                mt = {
                    A: '1',
                    B: '2',
                    C: '3',
                    D: '4',
                    E: '5',
                    F: '6',
                    G: '7',
                    H: '8',
                    I: '9',
                    J: '*',
                    K: '+',
                    M: '-',
                    N: '.',
                    O: '/',
                    '`': '0',
                    '\x90': 'NumLock',
                },
                $t = {
                    alt: (Le) => Le.altKey,
                    control: (Le) => Le.ctrlKey,
                    meta: (Le) => Le.metaKey,
                    shift: (Le) => Le.shiftKey,
                };
            let nt = (() => {
                class Le extends Oe {
                    constructor(X) {
                        super(X);
                    }
                    supports(X) {
                        return null != Le.parseEventName(X);
                    }
                    addEventListener(X, Se, Ye) {
                        const kt = Le.parseEventName(Se),
                            Vt = Le.eventCallback(
                                kt.fullKey,
                                Ye,
                                this.manager.getZone()
                            );
                        return this.manager
                            .getZone()
                            .runOutsideAngular(() =>
                                (0, s.q)().onAndCancel(X, kt.domEventName, Vt)
                            );
                    }
                    static parseEventName(X) {
                        const Se = X.toLowerCase().split('.'),
                            Ye = Se.shift();
                        if (
                            0 === Se.length ||
                            ('keydown' !== Ye && 'keyup' !== Ye)
                        )
                            return null;
                        const kt = Le._normalizeKey(Se.pop());
                        let Vt = '';
                        if (
                            (gt.forEach((ir) => {
                                const sr = Se.indexOf(ir);
                                sr > -1 && (Se.splice(sr, 1), (Vt += ir + '.'));
                            }),
                            (Vt += kt),
                            0 != Se.length || 0 === kt.length)
                        )
                            return null;
                        const Sn = {};
                        return (Sn.domEventName = Ye), (Sn.fullKey = Vt), Sn;
                    }
                    static getEventFullKey(X) {
                        let Se = '',
                            Ye = (function At(Le) {
                                let se = Le.key;
                                if (null == se) {
                                    if (((se = Le.keyIdentifier), null == se))
                                        return 'Unidentified';
                                    se.startsWith('U+') &&
                                        ((se = String.fromCharCode(
                                            parseInt(se.substring(2), 16)
                                        )),
                                        3 === Le.location &&
                                            mt.hasOwnProperty(se) &&
                                            (se = mt[se]));
                                }
                                return It[se] || se;
                            })(X);
                        return (
                            (Ye = Ye.toLowerCase()),
                            ' ' === Ye
                                ? (Ye = 'space')
                                : '.' === Ye && (Ye = 'dot'),
                            gt.forEach((kt) => {
                                kt != Ye && $t[kt](X) && (Se += kt + '.');
                            }),
                            (Se += Ye),
                            Se
                        );
                    }
                    static eventCallback(X, Se, Ye) {
                        return (kt) => {
                            Le.getEventFullKey(kt) === X &&
                                Ye.runGuarded(() => Se(kt));
                        };
                    }
                    static _normalizeKey(X) {
                        return 'esc' === X ? 'escape' : X;
                    }
                }
                return (
                    (Le.ɵfac = function (X) {
                        return new (X || Le)(m.LFG(s.K0));
                    }),
                    (Le.ɵprov = m.Yz7({ token: Le, factory: Le.ɵfac })),
                    Le
                );
            })();
            const ln = (0, m.eFA)(m._c5, 'browser', [
                    { provide: m.Lbi, useValue: s.bD },
                    {
                        provide: m.g9A,
                        useValue: function He() {
                            k.makeCurrent(), K.init();
                        },
                        multi: !0,
                    },
                    {
                        provide: s.K0,
                        useFactory: function xt() {
                            return (0, m.RDi)(document), document;
                        },
                        deps: [],
                    },
                ]),
                Bn = [
                    { provide: m.zSh, useValue: 'root' },
                    {
                        provide: m.qLn,
                        useFactory: function st() {
                            return new m.qLn();
                        },
                        deps: [],
                    },
                    {
                        provide: _e,
                        useClass: Ot,
                        multi: !0,
                        deps: [s.K0, m.R0b, m.Lbi],
                    },
                    { provide: _e, useClass: nt, multi: !0, deps: [s.K0] },
                    { provide: We, useClass: We, deps: [Re, J, m.AFp] },
                    { provide: m.FYo, useExisting: We },
                    { provide: pe, useExisting: J },
                    { provide: J, useClass: J, deps: [s.K0] },
                    { provide: m.dDg, useClass: m.dDg, deps: [m.R0b] },
                    { provide: Re, useClass: Re, deps: [_e, m.R0b] },
                    { provide: s.JF, useClass: fe, deps: [] },
                ];
            let rn = (() => {
                class Le {
                    constructor(X) {
                        if (X)
                            throw new Error(
                                'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
                            );
                    }
                    static withServerTransition(X) {
                        return {
                            ngModule: Le,
                            providers: [
                                { provide: m.AFp, useValue: X.appId },
                                { provide: U, useExisting: m.AFp },
                                F,
                            ],
                        };
                    }
                }
                return (
                    (Le.ɵfac = function (X) {
                        return new (X || Le)(m.LFG(Le, 12));
                    }),
                    (Le.ɵmod = m.oAB({ type: Le })),
                    (Le.ɵinj = m.cJS({
                        providers: Bn,
                        imports: [s.ez, m.hGG],
                    })),
                    Le
                );
            })();
            'undefined' != typeof window && window;
            let Rt = (() => {
                    class Le {}
                    return (
                        (Le.ɵfac = function (X) {
                            return new (X || Le)();
                        }),
                        (Le.ɵprov = m.Yz7({
                            token: Le,
                            factory: function (X) {
                                let Se = null;
                                return (
                                    (Se = X ? new (X || Le)() : m.LFG(xn)), Se
                                );
                            },
                            providedIn: 'root',
                        })),
                        Le
                    );
                })(),
                xn = (() => {
                    class Le extends Rt {
                        constructor(X) {
                            super(), (this._doc = X);
                        }
                        sanitize(X, Se) {
                            if (null == Se) return null;
                            switch (X) {
                                case m.q3G.NONE:
                                    return Se;
                                case m.q3G.HTML:
                                    return (0, m.qzn)(Se, 'HTML')
                                        ? (0, m.z3N)(Se)
                                        : (0, m.EiD)(
                                              this._doc,
                                              String(Se)
                                          ).toString();
                                case m.q3G.STYLE:
                                    return (0, m.qzn)(Se, 'Style')
                                        ? (0, m.z3N)(Se)
                                        : Se;
                                case m.q3G.SCRIPT:
                                    if ((0, m.qzn)(Se, 'Script'))
                                        return (0, m.z3N)(Se);
                                    throw new Error(
                                        'unsafe value used in a script context'
                                    );
                                case m.q3G.URL:
                                    return (
                                        (0, m.yhl)(Se),
                                        (0, m.qzn)(Se, 'URL')
                                            ? (0, m.z3N)(Se)
                                            : (0, m.mCW)(String(Se))
                                    );
                                case m.q3G.RESOURCE_URL:
                                    if ((0, m.qzn)(Se, 'ResourceURL'))
                                        return (0, m.z3N)(Se);
                                    throw new Error(
                                        'unsafe value used in a resource URL context (see https://g.co/ng/security#xss)'
                                    );
                                default:
                                    throw new Error(
                                        `Unexpected SecurityContext ${X} (see https://g.co/ng/security#xss)`
                                    );
                            }
                        }
                        bypassSecurityTrustHtml(X) {
                            return (0, m.JVY)(X);
                        }
                        bypassSecurityTrustStyle(X) {
                            return (0, m.L6k)(X);
                        }
                        bypassSecurityTrustScript(X) {
                            return (0, m.eBb)(X);
                        }
                        bypassSecurityTrustUrl(X) {
                            return (0, m.LAX)(X);
                        }
                        bypassSecurityTrustResourceUrl(X) {
                            return (0, m.pB0)(X);
                        }
                    }
                    return (
                        (Le.ɵfac = function (X) {
                            return new (X || Le)(m.LFG(s.K0));
                        }),
                        (Le.ɵprov = m.Yz7({
                            token: Le,
                            factory: function (X) {
                                let Se = null;
                                return (
                                    (Se = X
                                        ? new X()
                                        : (function un(Le) {
                                              return new xn(Le.get(s.K0));
                                          })(m.LFG(m.zs3))),
                                    Se
                                );
                            },
                            providedIn: 'root',
                        })),
                        Le
                    );
                })();
        },
        6115: (de, Y, f) => {
            f.d(Y, {
                F0: () => Mr,
                rH: () => Cs,
                Od: () => bs,
                yS: () => ai,
                Bz: () => ot,
                lC: () => ci,
            });
            var s = f(5e3),
                m = f(8306),
                L = f(4742),
                k = f(8996),
                T = f(4671),
                S = f(3268),
                O = f(3269),
                N = f(1810),
                U = f(5403),
                w = f(9672);
            function fe(p, d, c) {
                p ? (0, w.f)(c, p, d) : d();
            }
            var _e = f(8421);
            function Re(p) {
                return new m.y((d) => {
                    (0, _e.Xf)(p()).subscribe(d);
                });
            }
            var Oe = f(727),
                pe = f(4482);
            function J() {
                return (0, pe.e)((p, d) => {
                    let c = null;
                    p._refCount++;
                    const D = new U.Q(d, void 0, void 0, void 0, () => {
                        if (!p || p._refCount <= 0 || 0 < --p._refCount)
                            return void (c = null);
                        const P = p._connection,
                            $ = c;
                        (c = null),
                            P && (!$ || P === $) && P.unsubscribe(),
                            d.unsubscribe();
                    });
                    p.subscribe(D), D.closed || (c = p.connect());
                });
            }
            class Me extends m.y {
                constructor(d, c) {
                    super(),
                        (this.source = d),
                        (this.subjectFactory = c),
                        (this._subject = null),
                        (this._refCount = 0),
                        (this._connection = null),
                        (0, pe.A)(d) && (this.lift = d.lift);
                }
                _subscribe(d) {
                    return this.getSubject().subscribe(d);
                }
                getSubject() {
                    const d = this._subject;
                    return (
                        (!d || d.isStopped) &&
                            (this._subject = this.subjectFactory()),
                        this._subject
                    );
                }
                _teardown() {
                    this._refCount = 0;
                    const { _connection: d } = this;
                    (this._subject = this._connection = null),
                        null == d || d.unsubscribe();
                }
                connect() {
                    let d = this._connection;
                    if (!d) {
                        d = this._connection = new Oe.w0();
                        const c = this.getSubject();
                        d.add(
                            this.source.subscribe(
                                new U.Q(
                                    c,
                                    void 0,
                                    () => {
                                        this._teardown(), c.complete();
                                    },
                                    (D) => {
                                        this._teardown(), c.error(D);
                                    },
                                    () => this._teardown()
                                )
                            )
                        ),
                            d.closed &&
                                ((this._connection = null), (d = Oe.w0.EMPTY));
                    }
                    return d;
                }
                refCount() {
                    return J()(this);
                }
            }
            var he = f(9646),
                De = f(1135),
                R = f(2843),
                te = f(6805),
                G = f(7272),
                oe = f(515),
                re = f(7579),
                ne = f(9300);
            function we(p) {
                return p <= 0
                    ? () => oe.E
                    : (0, pe.e)((d, c) => {
                          let D = [];
                          d.subscribe(
                              new U.Q(
                                  c,
                                  (P) => {
                                      D.push(P), p < D.length && D.shift();
                                  },
                                  () => {
                                      for (const P of D) c.next(P);
                                      c.complete();
                                  },
                                  void 0,
                                  () => {
                                      D = null;
                                  }
                              )
                          );
                      });
            }
            var Fe = f(8068),
                je = f(6590),
                pt = f(4004),
                Lt = f(3900),
                hn = f(5698),
                yt = f(8675),
                Ot = f(5026),
                gt = f(262),
                Pt = f(4351),
                It = f(590),
                mt = f(5577),
                $t = f(8505),
                nt = f(8189),
                At = f(9808);
            class He {
                constructor(d, c) {
                    (this.id = d), (this.url = c);
                }
            }
            class st extends He {
                constructor(d, c, D = 'imperative', P = null) {
                    super(d, c),
                        (this.navigationTrigger = D),
                        (this.restoredState = P);
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class xt extends He {
                constructor(d, c, D) {
                    super(d, c), (this.urlAfterRedirects = D);
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
                }
            }
            class Qt extends He {
                constructor(d, c, D) {
                    super(d, c), (this.reason = D);
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class ln extends He {
                constructor(d, c, D) {
                    super(d, c), (this.error = D);
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
                }
            }
            class Bn extends He {
                constructor(d, c, D, P) {
                    super(d, c), (this.urlAfterRedirects = D), (this.state = P);
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class rn extends He {
                constructor(d, c, D, P) {
                    super(d, c), (this.urlAfterRedirects = D), (this.state = P);
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class gn extends He {
                constructor(d, c, D, P, $) {
                    super(d, c),
                        (this.urlAfterRedirects = D),
                        (this.state = P),
                        (this.shouldActivate = $);
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
                }
            }
            class Nt extends He {
                constructor(d, c, D, P) {
                    super(d, c), (this.urlAfterRedirects = D), (this.state = P);
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Un extends He {
                constructor(d, c, D, P) {
                    super(d, c), (this.urlAfterRedirects = D), (this.state = P);
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class vn {
                constructor(d) {
                    this.route = d;
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`;
                }
            }
            class Dn {
                constructor(d) {
                    this.route = d;
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`;
                }
            }
            class rr {
                constructor(d) {
                    this.snapshot = d;
                }
                toString() {
                    return `ChildActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class Kn {
                constructor(d) {
                    this.snapshot = d;
                }
                toString() {
                    return `ChildActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class rt {
                constructor(d) {
                    this.snapshot = d;
                }
                toString() {
                    return `ActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class ge {
                constructor(d) {
                    this.snapshot = d;
                }
                toString() {
                    return `ActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class Ae {
                constructor(d, c, D) {
                    (this.routerEvent = d),
                        (this.position = c),
                        (this.anchor = D);
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${
                        this.position
                            ? `${this.position[0]}, ${this.position[1]}`
                            : null
                    }')`;
                }
            }
            const ze = 'primary';
            class Ze {
                constructor(d) {
                    this.params = d || {};
                }
                has(d) {
                    return Object.prototype.hasOwnProperty.call(this.params, d);
                }
                get(d) {
                    if (this.has(d)) {
                        const c = this.params[d];
                        return Array.isArray(c) ? c[0] : c;
                    }
                    return null;
                }
                getAll(d) {
                    if (this.has(d)) {
                        const c = this.params[d];
                        return Array.isArray(c) ? c : [c];
                    }
                    return [];
                }
                get keys() {
                    return Object.keys(this.params);
                }
            }
            function lt(p) {
                return new Ze(p);
            }
            const bt = 'ngNavigationCancelingError';
            function mn(p) {
                const d = Error('NavigationCancelingError: ' + p);
                return (d[bt] = !0), d;
            }
            function Wt(p, d, c) {
                const D = c.path.split('/');
                if (
                    D.length > p.length ||
                    ('full' === c.pathMatch &&
                        (d.hasChildren() || D.length < p.length))
                )
                    return null;
                const P = {};
                for (let $ = 0; $ < D.length; $++) {
                    const ie = D[$],
                        ve = p[$];
                    if (ie.startsWith(':')) P[ie.substring(1)] = ve;
                    else if (ie !== ve.path) return null;
                }
                return { consumed: p.slice(0, D.length), posParams: P };
            }
            function yn(p, d) {
                const c = p ? Object.keys(p) : void 0,
                    D = d ? Object.keys(d) : void 0;
                if (!c || !D || c.length != D.length) return !1;
                let P;
                for (let $ = 0; $ < c.length; $++)
                    if (((P = c[$]), !Mn(p[P], d[P]))) return !1;
                return !0;
            }
            function Mn(p, d) {
                if (Array.isArray(p) && Array.isArray(d)) {
                    if (p.length !== d.length) return !1;
                    const c = [...p].sort(),
                        D = [...d].sort();
                    return c.every((P, $) => D[$] === P);
                }
                return p === d;
            }
            function q(p) {
                return Array.prototype.concat.apply([], p);
            }
            function ue(p) {
                return p.length > 0 ? p[p.length - 1] : null;
            }
            function Ke(p, d) {
                for (const c in p) p.hasOwnProperty(c) && d(p[c], c);
            }
            function ae(p) {
                return (0, s.CqO)(p)
                    ? p
                    : (0, s.QGY)(p)
                    ? (0, k.D)(Promise.resolve(p))
                    : (0, he.of)(p);
            }
            const be = {
                    exact: function St(p, d, c) {
                        if (
                            !Ye(p.segments, d.segments) ||
                            !Fn(p.segments, d.segments, c) ||
                            p.numberOfChildren !== d.numberOfChildren
                        )
                            return !1;
                        for (const D in d.children)
                            if (
                                !p.children[D] ||
                                !St(p.children[D], d.children[D], c)
                            )
                                return !1;
                        return !0;
                    },
                    subset: un,
                },
                Ne = {
                    exact: function Ct(p, d) {
                        return yn(p, d);
                    },
                    subset: function Rt(p, d) {
                        return (
                            Object.keys(d).length <= Object.keys(p).length &&
                            Object.keys(d).every((c) => Mn(p[c], d[c]))
                        );
                    },
                    ignored: () => !0,
                };
            function et(p, d, c) {
                return (
                    be[c.paths](p.root, d.root, c.matrixParams) &&
                    Ne[c.queryParams](p.queryParams, d.queryParams) &&
                    !('exact' === c.fragment && p.fragment !== d.fragment)
                );
            }
            function un(p, d, c) {
                return xn(p, d, d.segments, c);
            }
            function xn(p, d, c, D) {
                if (p.segments.length > c.length) {
                    const P = p.segments.slice(0, c.length);
                    return !(!Ye(P, c) || d.hasChildren() || !Fn(P, c, D));
                }
                if (p.segments.length === c.length) {
                    if (!Ye(p.segments, c) || !Fn(p.segments, c, D)) return !1;
                    for (const P in d.children)
                        if (
                            !p.children[P] ||
                            !un(p.children[P], d.children[P], D)
                        )
                            return !1;
                    return !0;
                }
                {
                    const P = c.slice(0, p.segments.length),
                        $ = c.slice(p.segments.length);
                    return (
                        !!(
                            Ye(p.segments, P) &&
                            Fn(p.segments, P, D) &&
                            p.children[ze]
                        ) && xn(p.children[ze], d, $, D)
                    );
                }
            }
            function Fn(p, d, c) {
                return d.every((D, P) => Ne[c](p[P].parameters, D.parameters));
            }
            class Le {
                constructor(d, c, D) {
                    (this.root = d),
                        (this.queryParams = c),
                        (this.fragment = D);
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = lt(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return ir.serialize(this);
                }
            }
            class se {
                constructor(d, c) {
                    (this.segments = d),
                        (this.children = c),
                        (this.parent = null),
                        Ke(c, (D, P) => (D.parent = this));
                }
                hasChildren() {
                    return this.numberOfChildren > 0;
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length;
                }
                toString() {
                    return sr(this);
                }
            }
            class X {
                constructor(d, c) {
                    (this.path = d), (this.parameters = c);
                }
                get parameterMap() {
                    return (
                        this._parameterMap ||
                            (this._parameterMap = lt(this.parameters)),
                        this._parameterMap
                    );
                }
                toString() {
                    return Cn(this);
                }
            }
            function Ye(p, d) {
                return (
                    p.length === d.length &&
                    p.every((c, D) => c.path === d[D].path)
                );
            }
            class Vt {}
            class Sn {
                parse(d) {
                    const c = new Ar(d);
                    return new Le(
                        c.parseRootSegment(),
                        c.parseQueryParams(),
                        c.parseFragment()
                    );
                }
                serialize(d) {
                    const c = `/${ur(d.root, !0)}`,
                        D = (function yr(p) {
                            const d = Object.keys(p)
                                .map((c) => {
                                    const D = p[c];
                                    return Array.isArray(D)
                                        ? D.map(
                                              (P) => `${Qn(c)}=${Qn(P)}`
                                          ).join('&')
                                        : `${Qn(c)}=${Qn(D)}`;
                                })
                                .filter((c) => !!c);
                            return d.length ? `?${d.join('&')}` : '';
                        })(d.queryParams);
                    return `${c}${D}${
                        'string' == typeof d.fragment
                            ? `#${(function Yn(p) {
                                  return encodeURI(p);
                              })(d.fragment)}`
                            : ''
                    }`;
                }
            }
            const ir = new Sn();
            function sr(p) {
                return p.segments.map((d) => Cn(d)).join('/');
            }
            function ur(p, d) {
                if (!p.hasChildren()) return sr(p);
                if (d) {
                    const c = p.children[ze] ? ur(p.children[ze], !1) : '',
                        D = [];
                    return (
                        Ke(p.children, (P, $) => {
                            $ !== ze && D.push(`${$}:${ur(P, !1)}`);
                        }),
                        D.length > 0 ? `${c}(${D.join('//')})` : c
                    );
                }
                {
                    const c = (function kt(p, d) {
                        let c = [];
                        return (
                            Ke(p.children, (D, P) => {
                                P === ze && (c = c.concat(d(D, P)));
                            }),
                            Ke(p.children, (D, P) => {
                                P !== ze && (c = c.concat(d(D, P)));
                            }),
                            c
                        );
                    })(p, (D, P) =>
                        P === ze
                            ? [ur(p.children[ze], !1)]
                            : [`${P}:${ur(D, !1)}`]
                    );
                    return 1 === Object.keys(p.children).length &&
                        null != p.children[ze]
                        ? `${sr(p)}/${c[0]}`
                        : `${sr(p)}/(${c.join('//')})`;
                }
            }
            function fr(p) {
                return encodeURIComponent(p)
                    .replace(/%40/g, '@')
                    .replace(/%3A/gi, ':')
                    .replace(/%24/g, '$')
                    .replace(/%2C/gi, ',');
            }
            function Qn(p) {
                return fr(p).replace(/%3B/gi, ';');
            }
            function or(p) {
                return fr(p)
                    .replace(/\(/g, '%28')
                    .replace(/\)/g, '%29')
                    .replace(/%26/gi, '&');
            }
            function wt(p) {
                return decodeURIComponent(p);
            }
            function Xt(p) {
                return wt(p.replace(/\+/g, '%20'));
            }
            function Cn(p) {
                return `${or(p.path)}${(function cr(p) {
                    return Object.keys(p)
                        .map((d) => `;${or(d)}=${or(p[d])}`)
                        .join('');
                })(p.parameters)}`;
            }
            const Jn = /^[^\/()?;=#]+/;
            function vr(p) {
                const d = p.match(Jn);
                return d ? d[0] : '';
            }
            const Pn = /^[^=?&#]+/,
                qn = /^[^&#]+/;
            class Ar {
                constructor(d) {
                    (this.url = d), (this.remaining = d);
                }
                parseRootSegment() {
                    return (
                        this.consumeOptional('/'),
                        '' === this.remaining ||
                        this.peekStartsWith('?') ||
                        this.peekStartsWith('#')
                            ? new se([], {})
                            : new se([], this.parseChildren())
                    );
                }
                parseQueryParams() {
                    const d = {};
                    if (this.consumeOptional('?'))
                        do {
                            this.parseQueryParam(d);
                        } while (this.consumeOptional('&'));
                    return d;
                }
                parseFragment() {
                    return this.consumeOptional('#')
                        ? decodeURIComponent(this.remaining)
                        : null;
                }
                parseChildren() {
                    if ('' === this.remaining) return {};
                    this.consumeOptional('/');
                    const d = [];
                    for (
                        this.peekStartsWith('(') || d.push(this.parseSegment());
                        this.peekStartsWith('/') &&
                        !this.peekStartsWith('//') &&
                        !this.peekStartsWith('/(');

                    )
                        this.capture('/'), d.push(this.parseSegment());
                    let c = {};
                    this.peekStartsWith('/(') &&
                        (this.capture('/'), (c = this.parseParens(!0)));
                    let D = {};
                    return (
                        this.peekStartsWith('(') && (D = this.parseParens(!1)),
                        (d.length > 0 || Object.keys(c).length > 0) &&
                            (D[ze] = new se(d, c)),
                        D
                    );
                }
                parseSegment() {
                    const d = vr(this.remaining);
                    if ('' === d && this.peekStartsWith(';'))
                        throw new Error(
                            `Empty path url segment cannot have parameters: '${this.remaining}'.`
                        );
                    return (
                        this.capture(d), new X(wt(d), this.parseMatrixParams())
                    );
                }
                parseMatrixParams() {
                    const d = {};
                    for (; this.consumeOptional(';'); ) this.parseParam(d);
                    return d;
                }
                parseParam(d) {
                    const c = vr(this.remaining);
                    if (!c) return;
                    this.capture(c);
                    let D = '';
                    if (this.consumeOptional('=')) {
                        const P = vr(this.remaining);
                        P && ((D = P), this.capture(D));
                    }
                    d[wt(c)] = wt(D);
                }
                parseQueryParam(d) {
                    const c = (function Nr(p) {
                        const d = p.match(Pn);
                        return d ? d[0] : '';
                    })(this.remaining);
                    if (!c) return;
                    this.capture(c);
                    let D = '';
                    if (this.consumeOptional('=')) {
                        const ie = (function tn(p) {
                            const d = p.match(qn);
                            return d ? d[0] : '';
                        })(this.remaining);
                        ie && ((D = ie), this.capture(D));
                    }
                    const P = Xt(c),
                        $ = Xt(D);
                    if (d.hasOwnProperty(P)) {
                        let ie = d[P];
                        Array.isArray(ie) || ((ie = [ie]), (d[P] = ie)),
                            ie.push($);
                    } else d[P] = $;
                }
                parseParens(d) {
                    const c = {};
                    for (
                        this.capture('(');
                        !this.consumeOptional(')') && this.remaining.length > 0;

                    ) {
                        const D = vr(this.remaining),
                            P = this.remaining[D.length];
                        if ('/' !== P && ')' !== P && ';' !== P)
                            throw new Error(`Cannot parse url '${this.url}'`);
                        let $;
                        D.indexOf(':') > -1
                            ? (($ = D.substr(0, D.indexOf(':'))),
                              this.capture($),
                              this.capture(':'))
                            : d && ($ = ze);
                        const ie = this.parseChildren();
                        (c[$] =
                            1 === Object.keys(ie).length
                                ? ie[ze]
                                : new se([], ie)),
                            this.consumeOptional('//');
                    }
                    return c;
                }
                peekStartsWith(d) {
                    return this.remaining.startsWith(d);
                }
                consumeOptional(d) {
                    return (
                        !!this.peekStartsWith(d) &&
                        ((this.remaining = this.remaining.substring(d.length)),
                        !0)
                    );
                }
                capture(d) {
                    if (!this.consumeOptional(d))
                        throw new Error(`Expected "${d}".`);
                }
            }
            class Or {
                constructor(d) {
                    this._root = d;
                }
                get root() {
                    return this._root.value;
                }
                parent(d) {
                    const c = this.pathFromRoot(d);
                    return c.length > 1 ? c[c.length - 2] : null;
                }
                children(d) {
                    const c = ce(d, this._root);
                    return c ? c.children.map((D) => D.value) : [];
                }
                firstChild(d) {
                    const c = ce(d, this._root);
                    return c && c.children.length > 0
                        ? c.children[0].value
                        : null;
                }
                siblings(d) {
                    const c = Qe(d, this._root);
                    return c.length < 2
                        ? []
                        : c[c.length - 2].children
                              .map((P) => P.value)
                              .filter((P) => P !== d);
                }
                pathFromRoot(d) {
                    return Qe(d, this._root).map((c) => c.value);
                }
            }
            function ce(p, d) {
                if (p === d.value) return d;
                for (const c of d.children) {
                    const D = ce(p, c);
                    if (D) return D;
                }
                return null;
            }
            function Qe(p, d) {
                if (p === d.value) return [d];
                for (const c of d.children) {
                    const D = Qe(p, c);
                    if (D.length) return D.unshift(d), D;
                }
                return [];
            }
            class xe {
                constructor(d, c) {
                    (this.value = d), (this.children = c);
                }
                toString() {
                    return `TreeNode(${this.value})`;
                }
            }
            function Ge(p) {
                const d = {};
                return (
                    p && p.children.forEach((c) => (d[c.value.outlet] = c)), d
                );
            }
            class vt extends Or {
                constructor(d, c) {
                    super(d), (this.snapshot = c), Cr(this, d);
                }
                toString() {
                    return this.snapshot.toString();
                }
            }
            function _t(p, d) {
                const c = (function Gt(p, d) {
                        const ie = new an(
                            [],
                            {},
                            {},
                            '',
                            {},
                            ze,
                            d,
                            null,
                            p.root,
                            -1,
                            {}
                        );
                        return new pr('', new xe(ie, []));
                    })(p, d),
                    D = new De.X([new X('', {})]),
                    P = new De.X({}),
                    $ = new De.X({}),
                    ie = new De.X({}),
                    ve = new De.X(''),
                    Xe = new Ln(D, P, ie, ve, $, ze, d, c.root);
                return (Xe.snapshot = c.root), new vt(new xe(Xe, []), c);
            }
            class Ln {
                constructor(d, c, D, P, $, ie, ve, Xe) {
                    (this.url = d),
                        (this.params = c),
                        (this.queryParams = D),
                        (this.fragment = P),
                        (this.data = $),
                        (this.outlet = ie),
                        (this.component = ve),
                        (this._futureSnapshot = Xe);
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig;
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap ||
                            (this._paramMap = this.params.pipe(
                                (0, pt.U)((d) => lt(d))
                            )),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = this.queryParams.pipe(
                                (0, pt.U)((d) => lt(d))
                            )),
                        this._queryParamMap
                    );
                }
                toString() {
                    return this.snapshot
                        ? this.snapshot.toString()
                        : `Future(${this._futureSnapshot})`;
                }
            }
            function Nn(p, d = 'emptyOnly') {
                const c = p.pathFromRoot;
                let D = 0;
                if ('always' !== d)
                    for (D = c.length - 1; D >= 1; ) {
                        const P = c[D],
                            $ = c[D - 1];
                        if (P.routeConfig && '' === P.routeConfig.path) D--;
                        else {
                            if ($.component) break;
                            D--;
                        }
                    }
                return (function Vn(p) {
                    return p.reduce(
                        (d, c) => ({
                            params: Object.assign(
                                Object.assign({}, d.params),
                                c.params
                            ),
                            data: Object.assign(
                                Object.assign({}, d.data),
                                c.data
                            ),
                            resolve: Object.assign(
                                Object.assign({}, d.resolve),
                                c._resolvedData
                            ),
                        }),
                        { params: {}, data: {}, resolve: {} }
                    );
                })(c.slice(D));
            }
            class an {
                constructor(d, c, D, P, $, ie, ve, Xe, it, Dt, dt) {
                    (this.url = d),
                        (this.params = c),
                        (this.queryParams = D),
                        (this.fragment = P),
                        (this.data = $),
                        (this.outlet = ie),
                        (this.component = ve),
                        (this.routeConfig = Xe),
                        (this._urlSegment = it),
                        (this._lastPathIndex = Dt),
                        (this._resolve = dt);
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap || (this._paramMap = lt(this.params)),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = lt(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return `Route(url:'${this.url
                        .map((D) => D.toString())
                        .join('/')}', path:'${
                        this.routeConfig ? this.routeConfig.path : ''
                    }')`;
                }
            }
            class pr extends Or {
                constructor(d, c) {
                    super(c), (this.url = d), Cr(this, c);
                }
                toString() {
                    return wr(this._root);
                }
            }
            function Cr(p, d) {
                (d.value._routerState = p), d.children.forEach((c) => Cr(p, c));
            }
            function wr(p) {
                const d =
                    p.children.length > 0
                        ? ` { ${p.children.map(wr).join(', ')} } `
                        : '';
                return `${p.value}${d}`;
            }
            function gr(p) {
                if (p.snapshot) {
                    const d = p.snapshot,
                        c = p._futureSnapshot;
                    (p.snapshot = c),
                        yn(d.queryParams, c.queryParams) ||
                            p.queryParams.next(c.queryParams),
                        d.fragment !== c.fragment &&
                            p.fragment.next(c.fragment),
                        yn(d.params, c.params) || p.params.next(c.params),
                        (function Gn(p, d) {
                            if (p.length !== d.length) return !1;
                            for (let c = 0; c < p.length; ++c)
                                if (!yn(p[c], d[c])) return !1;
                            return !0;
                        })(d.url, c.url) || p.url.next(c.url),
                        yn(d.data, c.data) || p.data.next(c.data);
                } else
                    (p.snapshot = p._futureSnapshot),
                        p.data.next(p._futureSnapshot.data);
            }
            function Wr(p, d) {
                const c =
                    yn(p.params, d.params) &&
                    (function Se(p, d) {
                        return (
                            Ye(p, d) &&
                            p.every((c, D) => yn(c.parameters, d[D].parameters))
                        );
                    })(p.url, d.url);
                return (
                    c &&
                    !(!p.parent != !d.parent) &&
                    (!p.parent || Wr(p.parent, d.parent))
                );
            }
            function Ci(p, d, c) {
                if (c && p.shouldReuseRoute(d.value, c.value.snapshot)) {
                    const D = c.value;
                    D._futureSnapshot = d.value;
                    const P = (function xr(p, d, c) {
                        return d.children.map((D) => {
                            for (const P of c.children)
                                if (
                                    p.shouldReuseRoute(
                                        D.value,
                                        P.value.snapshot
                                    )
                                )
                                    return Ci(p, D, P);
                            return Ci(p, D);
                        });
                    })(p, d, c);
                    return new xe(D, P);
                }
                {
                    if (p.shouldAttach(d.value)) {
                        const $ = p.retrieve(d.value);
                        if (null !== $) {
                            const ie = $.route;
                            return (
                                (ie.value._futureSnapshot = d.value),
                                (ie.children = d.children.map((ve) =>
                                    Ci(p, ve)
                                )),
                                ie
                            );
                        }
                    }
                    const D = (function Qi(p) {
                            return new Ln(
                                new De.X(p.url),
                                new De.X(p.params),
                                new De.X(p.queryParams),
                                new De.X(p.fragment),
                                new De.X(p.data),
                                p.outlet,
                                p.component,
                                p
                            );
                        })(d.value),
                        P = d.children.map(($) => Ci(p, $));
                    return new xe(D, P);
                }
            }
            function Pe(p) {
                return (
                    'object' == typeof p &&
                    null != p &&
                    !p.outlets &&
                    !p.segmentPath
                );
            }
            function Ie(p) {
                return 'object' == typeof p && null != p && p.outlets;
            }
            function $e(p, d, c, D, P) {
                let $ = {};
                if (
                    (D &&
                        Ke(D, (ve, Xe) => {
                            $[Xe] = Array.isArray(ve)
                                ? ve.map((it) => `${it}`)
                                : `${ve}`;
                        }),
                    p === d)
                )
                    return new Le(c, $, P);
                const ie = ut(p, d, c);
                return new Le(ie, $, P);
            }
            function ut(p, d, c) {
                const D = {};
                return (
                    Ke(p.children, (P, $) => {
                        D[$] = P === d ? c : ut(P, d, c);
                    }),
                    new se(p.segments, D)
                );
            }
            class Et {
                constructor(d, c, D) {
                    if (
                        ((this.isAbsolute = d),
                        (this.numberOfDoubleDots = c),
                        (this.commands = D),
                        d && D.length > 0 && Pe(D[0]))
                    )
                        throw new Error(
                            'Root segment cannot have matrix parameters'
                        );
                    const P = D.find(Ie);
                    if (P && P !== ue(D))
                        throw new Error(
                            '{outlets:{}} has to be the last command'
                        );
                }
                toRoot() {
                    return (
                        this.isAbsolute &&
                        1 === this.commands.length &&
                        '/' == this.commands[0]
                    );
                }
            }
            class On {
                constructor(d, c, D) {
                    (this.segmentGroup = d),
                        (this.processChildren = c),
                        (this.index = D);
                }
            }
            function _i(p, d, c) {
                if (
                    (p || (p = new se([], {})),
                    0 === p.segments.length && p.hasChildren())
                )
                    return Br(p, d, c);
                const D = (function Ji(p, d, c) {
                        let D = 0,
                            P = d;
                        const $ = { match: !1, pathIndex: 0, commandIndex: 0 };
                        for (; P < p.segments.length; ) {
                            if (D >= c.length) return $;
                            const ie = p.segments[P],
                                ve = c[D];
                            if (Ie(ve)) break;
                            const Xe = `${ve}`,
                                it = D < c.length - 1 ? c[D + 1] : null;
                            if (P > 0 && void 0 === Xe) break;
                            if (
                                Xe &&
                                it &&
                                'object' == typeof it &&
                                void 0 === it.outlets
                            ) {
                                if (!ji(Xe, it, ie)) return $;
                                D += 2;
                            } else {
                                if (!ji(Xe, {}, ie)) return $;
                                D++;
                            }
                            P++;
                        }
                        return { match: !0, pathIndex: P, commandIndex: D };
                    })(p, d, c),
                    P = c.slice(D.commandIndex);
                if (D.match && D.pathIndex < p.segments.length) {
                    const $ = new se(p.segments.slice(0, D.pathIndex), {});
                    return (
                        ($.children[ze] = new se(
                            p.segments.slice(D.pathIndex),
                            p.children
                        )),
                        Br($, 0, P)
                    );
                }
                return D.match && 0 === P.length
                    ? new se(p.segments, {})
                    : D.match && !p.hasChildren()
                    ? Yr(p, d, c)
                    : D.match
                    ? Br(p, 0, P)
                    : Yr(p, d, c);
            }
            function Br(p, d, c) {
                if (0 === c.length) return new se(p.segments, {});
                {
                    const D = (function Gr(p) {
                            return Ie(p[0]) ? p[0].outlets : { [ze]: p };
                        })(c),
                        P = {};
                    return (
                        Ke(D, ($, ie) => {
                            'string' == typeof $ && ($ = [$]),
                                null !== $ &&
                                    (P[ie] = _i(p.children[ie], d, $));
                        }),
                        Ke(p.children, ($, ie) => {
                            void 0 === D[ie] && (P[ie] = $);
                        }),
                        new se(p.segments, P)
                    );
                }
            }
            function Yr(p, d, c) {
                const D = p.segments.slice(0, d);
                let P = 0;
                for (; P < c.length; ) {
                    const $ = c[P];
                    if (Ie($)) {
                        const Xe = qi($.outlets);
                        return new se(D, Xe);
                    }
                    if (0 === P && Pe(c[0])) {
                        D.push(new X(p.segments[d].path, ri(c[0]))), P++;
                        continue;
                    }
                    const ie = Ie($) ? $.outlets[ze] : `${$}`,
                        ve = P < c.length - 1 ? c[P + 1] : null;
                    ie && ve && Pe(ve)
                        ? (D.push(new X(ie, ri(ve))), (P += 2))
                        : (D.push(new X(ie, {})), P++);
                }
                return new se(D, {});
            }
            function qi(p) {
                const d = {};
                return (
                    Ke(p, (c, D) => {
                        'string' == typeof c && (c = [c]),
                            null !== c && (d[D] = Yr(new se([], {}), 0, c));
                    }),
                    d
                );
            }
            function ri(p) {
                const d = {};
                return Ke(p, (c, D) => (d[D] = `${c}`)), d;
            }
            function ji(p, d, c) {
                return p == c.path && yn(d, c.parameters);
            }
            class Hi {
                constructor(d, c, D, P) {
                    (this.routeReuseStrategy = d),
                        (this.futureState = c),
                        (this.currState = D),
                        (this.forwardEvent = P);
                }
                activate(d) {
                    const c = this.futureState._root,
                        D = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(c, D, d),
                        gr(this.futureState.root),
                        this.activateChildRoutes(c, D, d);
                }
                deactivateChildRoutes(d, c, D) {
                    const P = Ge(c);
                    d.children.forEach(($) => {
                        const ie = $.value.outlet;
                        this.deactivateRoutes($, P[ie], D), delete P[ie];
                    }),
                        Ke(P, ($, ie) => {
                            this.deactivateRouteAndItsChildren($, D);
                        });
                }
                deactivateRoutes(d, c, D) {
                    const P = d.value,
                        $ = c ? c.value : null;
                    if (P === $)
                        if (P.component) {
                            const ie = D.getContext(P.outlet);
                            ie && this.deactivateChildRoutes(d, c, ie.children);
                        } else this.deactivateChildRoutes(d, c, D);
                    else $ && this.deactivateRouteAndItsChildren(c, D);
                }
                deactivateRouteAndItsChildren(d, c) {
                    d.value.component &&
                    this.routeReuseStrategy.shouldDetach(d.value.snapshot)
                        ? this.detachAndStoreRouteSubtree(d, c)
                        : this.deactivateRouteAndOutlet(d, c);
                }
                detachAndStoreRouteSubtree(d, c) {
                    const D = c.getContext(d.value.outlet),
                        P = D && d.value.component ? D.children : c,
                        $ = Ge(d);
                    for (const ie of Object.keys($))
                        this.deactivateRouteAndItsChildren($[ie], P);
                    if (D && D.outlet) {
                        const ie = D.outlet.detach(),
                            ve = D.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(d.value.snapshot, {
                            componentRef: ie,
                            route: d,
                            contexts: ve,
                        });
                    }
                }
                deactivateRouteAndOutlet(d, c) {
                    const D = c.getContext(d.value.outlet),
                        P = D && d.value.component ? D.children : c,
                        $ = Ge(d);
                    for (const ie of Object.keys($))
                        this.deactivateRouteAndItsChildren($[ie], P);
                    D &&
                        D.outlet &&
                        (D.outlet.deactivate(),
                        D.children.onOutletDeactivated(),
                        (D.attachRef = null),
                        (D.resolver = null),
                        (D.route = null));
                }
                activateChildRoutes(d, c, D) {
                    const P = Ge(c);
                    d.children.forEach(($) => {
                        this.activateRoutes($, P[$.value.outlet], D),
                            this.forwardEvent(new ge($.value.snapshot));
                    }),
                        d.children.length &&
                            this.forwardEvent(new Kn(d.value.snapshot));
                }
                activateRoutes(d, c, D) {
                    const P = d.value,
                        $ = c ? c.value : null;
                    if ((gr(P), P === $))
                        if (P.component) {
                            const ie = D.getOrCreateContext(P.outlet);
                            this.activateChildRoutes(d, c, ie.children);
                        } else this.activateChildRoutes(d, c, D);
                    else if (P.component) {
                        const ie = D.getOrCreateContext(P.outlet);
                        if (this.routeReuseStrategy.shouldAttach(P.snapshot)) {
                            const ve = this.routeReuseStrategy.retrieve(
                                P.snapshot
                            );
                            this.routeReuseStrategy.store(P.snapshot, null),
                                ie.children.onOutletReAttached(ve.contexts),
                                (ie.attachRef = ve.componentRef),
                                (ie.route = ve.route.value),
                                ie.outlet &&
                                    ie.outlet.attach(
                                        ve.componentRef,
                                        ve.route.value
                                    ),
                                gr(ve.route.value),
                                this.activateChildRoutes(d, null, ie.children);
                        } else {
                            const ve = (function yi(p) {
                                    for (let d = p.parent; d; d = d.parent) {
                                        const c = d.routeConfig;
                                        if (c && c._loadedConfig)
                                            return c._loadedConfig;
                                        if (c && c.component) return null;
                                    }
                                    return null;
                                })(P.snapshot),
                                Xe = ve
                                    ? ve.module.componentFactoryResolver
                                    : null;
                            (ie.attachRef = null),
                                (ie.route = P),
                                (ie.resolver = Xe),
                                ie.outlet && ie.outlet.activateWith(P, Xe),
                                this.activateChildRoutes(d, null, ie.children);
                        }
                    } else this.activateChildRoutes(d, null, D);
                }
            }
            class Xr {
                constructor(d, c) {
                    (this.routes = d), (this.module = c);
                }
            }
            function ei(p) {
                return 'function' == typeof p;
            }
            function zr(p) {
                return p instanceof Le;
            }
            const Xn = Symbol('INITIAL_VALUE');
            function ii() {
                return (0, Lt.w)((p) =>
                    (function F(...p) {
                        const d = (0, O.yG)(p),
                            c = (0, O.jO)(p),
                            { args: D, keys: P } = (0, L.D)(p);
                        if (0 === D.length) return (0, k.D)([], d);
                        const $ = new m.y(
                            (function K(p, d, c = T.y) {
                                return (D) => {
                                    fe(
                                        d,
                                        () => {
                                            const { length: P } = p,
                                                $ = new Array(P);
                                            let ie = P,
                                                ve = P;
                                            for (let Xe = 0; Xe < P; Xe++)
                                                fe(
                                                    d,
                                                    () => {
                                                        const it = (0, k.D)(
                                                            p[Xe],
                                                            d
                                                        );
                                                        let Dt = !1;
                                                        it.subscribe(
                                                            new U.Q(
                                                                D,
                                                                (dt) => {
                                                                    ($[Xe] =
                                                                        dt),
                                                                        Dt ||
                                                                            ((Dt =
                                                                                !0),
                                                                            ve--),
                                                                        ve ||
                                                                            D.next(
                                                                                c(
                                                                                    $.slice()
                                                                                )
                                                                            );
                                                                },
                                                                () => {
                                                                    --ie ||
                                                                        D.complete();
                                                                }
                                                            )
                                                        );
                                                    },
                                                    D
                                                );
                                        },
                                        D
                                    );
                                };
                            })(D, d, P ? (ie) => (0, N.n)(P, ie) : T.y)
                        );
                        return c ? $.pipe((0, S.Z)(c)) : $;
                    })(p.map((d) => d.pipe((0, hn.q)(1), (0, yt.O)(Xn)))).pipe(
                        (0, Ot.R)((d, c) => {
                            let D = !1;
                            return c.reduce(
                                (P, $, ie) =>
                                    P !== Xn
                                        ? P
                                        : ($ === Xn && (D = !0),
                                          D ||
                                          (!1 !== $ &&
                                              ie !== c.length - 1 &&
                                              !zr($))
                                              ? P
                                              : $),
                                d
                            );
                        }, Xn),
                        (0, ne.h)((d) => d !== Xn),
                        (0, pt.U)((d) => (zr(d) ? d : !0 === d)),
                        (0, hn.q)(1)
                    )
                );
            }
            class Wi {
                constructor() {
                    (this.outlet = null),
                        (this.route = null),
                        (this.resolver = null),
                        (this.children = new ui()),
                        (this.attachRef = null);
                }
            }
            class ui {
                constructor() {
                    this.contexts = new Map();
                }
                onChildOutletCreated(d, c) {
                    const D = this.getOrCreateContext(d);
                    (D.outlet = c), this.contexts.set(d, D);
                }
                onChildOutletDestroyed(d) {
                    const c = this.getContext(d);
                    c && ((c.outlet = null), (c.attachRef = null));
                }
                onOutletDeactivated() {
                    const d = this.contexts;
                    return (this.contexts = new Map()), d;
                }
                onOutletReAttached(d) {
                    this.contexts = d;
                }
                getOrCreateContext(d) {
                    let c = this.getContext(d);
                    return c || ((c = new Wi()), this.contexts.set(d, c)), c;
                }
                getContext(d) {
                    return this.contexts.get(d) || null;
                }
            }
            let ci = (() => {
                class p {
                    constructor(c, D, P, $, ie) {
                        (this.parentContexts = c),
                            (this.location = D),
                            (this.resolver = P),
                            (this.changeDetector = ie),
                            (this.activated = null),
                            (this._activatedRoute = null),
                            (this.activateEvents = new s.vpe()),
                            (this.deactivateEvents = new s.vpe()),
                            (this.attachEvents = new s.vpe()),
                            (this.detachEvents = new s.vpe()),
                            (this.name = $ || ze),
                            c.onChildOutletCreated(this.name, this);
                    }
                    ngOnDestroy() {
                        this.parentContexts.onChildOutletDestroyed(this.name);
                    }
                    ngOnInit() {
                        if (!this.activated) {
                            const c = this.parentContexts.getContext(this.name);
                            c &&
                                c.route &&
                                (c.attachRef
                                    ? this.attach(c.attachRef, c.route)
                                    : this.activateWith(
                                          c.route,
                                          c.resolver || null
                                      ));
                        }
                    }
                    get isActivated() {
                        return !!this.activated;
                    }
                    get component() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this.activated.instance;
                    }
                    get activatedRoute() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this._activatedRoute;
                    }
                    get activatedRouteData() {
                        return this._activatedRoute
                            ? this._activatedRoute.snapshot.data
                            : {};
                    }
                    detach() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        this.location.detach();
                        const c = this.activated;
                        return (
                            (this.activated = null),
                            (this._activatedRoute = null),
                            this.detachEvents.emit(c.instance),
                            c
                        );
                    }
                    attach(c, D) {
                        (this.activated = c),
                            (this._activatedRoute = D),
                            this.location.insert(c.hostView),
                            this.attachEvents.emit(c.instance);
                    }
                    deactivate() {
                        if (this.activated) {
                            const c = this.component;
                            this.activated.destroy(),
                                (this.activated = null),
                                (this._activatedRoute = null),
                                this.deactivateEvents.emit(c);
                        }
                    }
                    activateWith(c, D) {
                        if (this.isActivated)
                            throw new Error(
                                'Cannot activate an already activated outlet'
                            );
                        this._activatedRoute = c;
                        const ie = (D =
                                D || this.resolver).resolveComponentFactory(
                                c._futureSnapshot.routeConfig.component
                            ),
                            ve = this.parentContexts.getOrCreateContext(
                                this.name
                            ).children,
                            Xe = new Xi(c, ve, this.location.injector);
                        (this.activated = this.location.createComponent(
                            ie,
                            this.location.length,
                            Xe
                        )),
                            this.changeDetector.markForCheck(),
                            this.activateEvents.emit(this.activated.instance);
                    }
                }
                return (
                    (p.ɵfac = function (c) {
                        return new (c || p)(
                            s.Y36(ui),
                            s.Y36(s.s_b),
                            s.Y36(s._Vd),
                            s.$8M('name'),
                            s.Y36(s.sBO)
                        );
                    }),
                    (p.ɵdir = s.lG2({
                        type: p,
                        selectors: [['router-outlet']],
                        outputs: {
                            activateEvents: 'activate',
                            deactivateEvents: 'deactivate',
                            attachEvents: 'attach',
                            detachEvents: 'detach',
                        },
                        exportAs: ['outlet'],
                    })),
                    p
                );
            })();
            class Xi {
                constructor(d, c, D) {
                    (this.route = d),
                        (this.childContexts = c),
                        (this.parent = D);
                }
                get(d, c) {
                    return d === Ln
                        ? this.route
                        : d === ui
                        ? this.childContexts
                        : this.parent.get(d, c);
                }
            }
            let Ir = (() => {
                class p {}
                return (
                    (p.ɵfac = function (c) {
                        return new (c || p)();
                    }),
                    (p.ɵcmp = s.Xpm({
                        type: p,
                        selectors: [['ng-component']],
                        decls: 1,
                        vars: 0,
                        template: function (c, D) {
                            1 & c && s._UZ(0, 'router-outlet');
                        },
                        directives: [ci],
                        encapsulation: 2,
                    })),
                    p
                );
            })();
            function si(p, d = '') {
                for (let c = 0; c < p.length; c++) {
                    const D = p[c];
                    Pr(D, Oi(d, D));
                }
            }
            function Pr(p, d) {
                p.children && si(p.children, d);
            }
            function Oi(p, d) {
                return d
                    ? p || d.path
                        ? p && !d.path
                            ? `${p}/`
                            : !p && d.path
                            ? d.path
                            : `${p}/${d.path}`
                        : ''
                    : p;
            }
            function jn(p) {
                const d = p.children && p.children.map(jn),
                    c = d
                        ? Object.assign(Object.assign({}, p), { children: d })
                        : Object.assign({}, p);
                return (
                    !c.component &&
                        (d || c.loadChildren) &&
                        c.outlet &&
                        c.outlet !== ze &&
                        (c.component = Ir),
                    c
                );
            }
            function C(p) {
                return p.outlet || ze;
            }
            function j(p, d) {
                const c = p.filter((D) => C(D) === d);
                return c.push(...p.filter((D) => C(D) !== d)), c;
            }
            const b = {
                matched: !1,
                consumedSegments: [],
                remainingSegments: [],
                parameters: {},
                positionalParamSegments: {},
            };
            function z(p, d, c) {
                var D;
                if ('' === d.path)
                    return 'full' === d.pathMatch &&
                        (p.hasChildren() || c.length > 0)
                        ? Object.assign({}, b)
                        : {
                              matched: !0,
                              consumedSegments: [],
                              remainingSegments: c,
                              parameters: {},
                              positionalParamSegments: {},
                          };
                const $ = (d.matcher || Wt)(c, p, d);
                if (!$) return Object.assign({}, b);
                const ie = {};
                Ke($.posParams, (Xe, it) => {
                    ie[it] = Xe.path;
                });
                const ve =
                    $.consumed.length > 0
                        ? Object.assign(
                              Object.assign({}, ie),
                              $.consumed[$.consumed.length - 1].parameters
                          )
                        : ie;
                return {
                    matched: !0,
                    consumedSegments: $.consumed,
                    remainingSegments: c.slice($.consumed.length),
                    parameters: ve,
                    positionalParamSegments:
                        null !== (D = $.posParams) && void 0 !== D ? D : {},
                };
            }
            function Ce(p, d, c, D, P = 'corrected') {
                if (
                    c.length > 0 &&
                    (function zt(p, d, c) {
                        return c.some((D) => sn(p, d, D) && C(D) !== ze);
                    })(p, c, D)
                ) {
                    const ie = new se(
                        d,
                        (function ct(p, d, c, D) {
                            const P = {};
                            (P[ze] = D),
                                (D._sourceSegment = p),
                                (D._segmentIndexShift = d.length);
                            for (const $ of c)
                                if ('' === $.path && C($) !== ze) {
                                    const ie = new se([], {});
                                    (ie._sourceSegment = p),
                                        (ie._segmentIndexShift = d.length),
                                        (P[C($)] = ie);
                                }
                            return P;
                        })(p, d, D, new se(c, p.children))
                    );
                    return (
                        (ie._sourceSegment = p),
                        (ie._segmentIndexShift = d.length),
                        { segmentGroup: ie, slicedSegments: [] }
                    );
                }
                if (
                    0 === c.length &&
                    (function cn(p, d, c) {
                        return c.some((D) => sn(p, d, D));
                    })(p, c, D)
                ) {
                    const ie = new se(
                        p.segments,
                        (function Je(p, d, c, D, P, $) {
                            const ie = {};
                            for (const ve of D)
                                if (sn(p, c, ve) && !P[C(ve)]) {
                                    const Xe = new se([], {});
                                    (Xe._sourceSegment = p),
                                        (Xe._segmentIndexShift =
                                            'legacy' === $
                                                ? p.segments.length
                                                : d.length),
                                        (ie[C(ve)] = Xe);
                                }
                            return Object.assign(Object.assign({}, P), ie);
                        })(p, d, c, D, p.children, P)
                    );
                    return (
                        (ie._sourceSegment = p),
                        (ie._segmentIndexShift = d.length),
                        { segmentGroup: ie, slicedSegments: c }
                    );
                }
                const $ = new se(p.segments, p.children);
                return (
                    ($._sourceSegment = p),
                    ($._segmentIndexShift = d.length),
                    { segmentGroup: $, slicedSegments: c }
                );
            }
            function sn(p, d, c) {
                return (
                    (!(p.hasChildren() || d.length > 0) ||
                        'full' !== c.pathMatch) &&
                    '' === c.path
                );
            }
            function on(p, d, c, D) {
                return (
                    !!(C(p) === D || (D !== ze && sn(d, c, p))) &&
                    ('**' === p.path || z(d, p, c).matched)
                );
            }
            function An(p, d, c) {
                return 0 === d.length && !p.children[c];
            }
            class tr {
                constructor(d) {
                    this.segmentGroup = d || null;
                }
            }
            class zn {
                constructor(d) {
                    this.urlTree = d;
                }
            }
            function Hn(p) {
                return (0, R._)(new tr(p));
            }
            function A(p) {
                return (0, R._)(new zn(p));
            }
            class qe {
                constructor(d, c, D, P, $) {
                    (this.configLoader = c),
                        (this.urlSerializer = D),
                        (this.urlTree = P),
                        (this.config = $),
                        (this.allowRedirects = !0),
                        (this.ngModule = d.get(s.h0i));
                }
                apply() {
                    const d = Ce(
                            this.urlTree.root,
                            [],
                            [],
                            this.config
                        ).segmentGroup,
                        c = new se(d.segments, d.children);
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        c,
                        ze
                    )
                        .pipe(
                            (0, pt.U)(($) =>
                                this.createUrlTree(
                                    $n($),
                                    this.urlTree.queryParams,
                                    this.urlTree.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, gt.K)(($) => {
                                if ($ instanceof zn)
                                    return (
                                        (this.allowRedirects = !1),
                                        this.match($.urlTree)
                                    );
                                throw $ instanceof tr
                                    ? this.noMatchError($)
                                    : $;
                            })
                        );
                }
                match(d) {
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        d.root,
                        ze
                    )
                        .pipe(
                            (0, pt.U)((P) =>
                                this.createUrlTree(
                                    $n(P),
                                    d.queryParams,
                                    d.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, gt.K)((P) => {
                                throw P instanceof tr
                                    ? this.noMatchError(P)
                                    : P;
                            })
                        );
                }
                noMatchError(d) {
                    return new Error(
                        `Cannot match any routes. URL Segment: '${d.segmentGroup}'`
                    );
                }
                createUrlTree(d, c, D) {
                    const P =
                        d.segments.length > 0 ? new se([], { [ze]: d }) : d;
                    return new Le(P, c, D);
                }
                expandSegmentGroup(d, c, D, P) {
                    return 0 === D.segments.length && D.hasChildren()
                        ? this.expandChildren(d, c, D).pipe(
                              (0, pt.U)(($) => new se([], $))
                          )
                        : this.expandSegment(d, D, c, D.segments, P, !0);
                }
                expandChildren(d, c, D) {
                    const P = [];
                    for (const $ of Object.keys(D.children))
                        'primary' === $ ? P.unshift($) : P.push($);
                    return (0, k.D)(P).pipe(
                        (0, Pt.b)(($) => {
                            const ie = D.children[$],
                                ve = j(c, $);
                            return this.expandSegmentGroup(d, ve, ie, $).pipe(
                                (0, pt.U)((Xe) => ({ segment: Xe, outlet: $ }))
                            );
                        }),
                        (0, Ot.R)(
                            ($, ie) => (($[ie.outlet] = ie.segment), $),
                            {}
                        ),
                        (function We(p, d) {
                            const c = arguments.length >= 2;
                            return (D) =>
                                D.pipe(
                                    p ? (0, ne.h)((P, $) => p(P, $, D)) : T.y,
                                    we(1),
                                    c
                                        ? (0, je.d)(d)
                                        : (0, Fe.T)(() => new te.K())
                                );
                        })()
                    );
                }
                expandSegment(d, c, D, P, $, ie) {
                    return (0, k.D)(D).pipe(
                        (0, Pt.b)((ve) =>
                            this.expandSegmentAgainstRoute(
                                d,
                                c,
                                D,
                                ve,
                                P,
                                $,
                                ie
                            ).pipe(
                                (0, gt.K)((it) => {
                                    if (it instanceof tr)
                                        return (0, he.of)(null);
                                    throw it;
                                })
                            )
                        ),
                        (0, It.P)((ve) => !!ve),
                        (0, gt.K)((ve, Xe) => {
                            if (ve instanceof te.K || 'EmptyError' === ve.name)
                                return An(c, P, $)
                                    ? (0, he.of)(new se([], {}))
                                    : Hn(c);
                            throw ve;
                        })
                    );
                }
                expandSegmentAgainstRoute(d, c, D, P, $, ie, ve) {
                    return on(P, c, $, ie)
                        ? void 0 === P.redirectTo
                            ? this.matchSegmentAgainstRoute(d, c, P, $, ie)
                            : ve && this.allowRedirects
                            ? this.expandSegmentAgainstRouteUsingRedirect(
                                  d,
                                  c,
                                  D,
                                  P,
                                  $,
                                  ie
                              )
                            : Hn(c)
                        : Hn(c);
                }
                expandSegmentAgainstRouteUsingRedirect(d, c, D, P, $, ie) {
                    return '**' === P.path
                        ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(
                              d,
                              D,
                              P,
                              ie
                          )
                        : this.expandRegularSegmentAgainstRouteUsingRedirect(
                              d,
                              c,
                              D,
                              P,
                              $,
                              ie
                          );
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(d, c, D, P) {
                    const $ = this.applyRedirectCommands([], D.redirectTo, {});
                    return D.redirectTo.startsWith('/')
                        ? A($)
                        : this.lineralizeSegments(D, $).pipe(
                              (0, mt.z)((ie) => {
                                  const ve = new se(ie, {});
                                  return this.expandSegment(
                                      d,
                                      ve,
                                      c,
                                      ie,
                                      P,
                                      !1
                                  );
                              })
                          );
                }
                expandRegularSegmentAgainstRouteUsingRedirect(
                    d,
                    c,
                    D,
                    P,
                    $,
                    ie
                ) {
                    const {
                        matched: ve,
                        consumedSegments: Xe,
                        remainingSegments: it,
                        positionalParamSegments: Dt,
                    } = z(c, P, $);
                    if (!ve) return Hn(c);
                    const dt = this.applyRedirectCommands(Xe, P.redirectTo, Dt);
                    return P.redirectTo.startsWith('/')
                        ? A(dt)
                        : this.lineralizeSegments(P, dt).pipe(
                              (0, mt.z)((Yt) =>
                                  this.expandSegment(
                                      d,
                                      c,
                                      D,
                                      Yt.concat(it),
                                      ie,
                                      !1
                                  )
                              )
                          );
                }
                matchSegmentAgainstRoute(d, c, D, P, $) {
                    if ('**' === D.path)
                        return D.loadChildren
                            ? (D._loadedConfig
                                  ? (0, he.of)(D._loadedConfig)
                                  : this.configLoader.load(d.injector, D)
                              ).pipe(
                                  (0, pt.U)(
                                      (dt) => (
                                          (D._loadedConfig = dt), new se(P, {})
                                      )
                                  )
                              )
                            : (0, he.of)(new se(P, {}));
                    const {
                        matched: ie,
                        consumedSegments: ve,
                        remainingSegments: Xe,
                    } = z(c, D, P);
                    return ie
                        ? this.getChildConfig(d, D, P).pipe(
                              (0, mt.z)((Dt) => {
                                  const dt = Dt.module,
                                      Yt = Dt.routes,
                                      { segmentGroup: en, slicedSegments: Tr } =
                                          Ce(c, ve, Xe, Yt),
                                      lr = new se(en.segments, en.children);
                                  if (0 === Tr.length && lr.hasChildren())
                                      return this.expandChildren(
                                          dt,
                                          Yt,
                                          lr
                                      ).pipe((0, pt.U)((Ii) => new se(ve, Ii)));
                                  if (0 === Yt.length && 0 === Tr.length)
                                      return (0, he.of)(new se(ve, {}));
                                  const li = C(D) === $;
                                  return this.expandSegment(
                                      dt,
                                      lr,
                                      Yt,
                                      Tr,
                                      li ? ze : $,
                                      !0
                                  ).pipe(
                                      (0, pt.U)(
                                          (wi) =>
                                              new se(
                                                  ve.concat(wi.segments),
                                                  wi.children
                                              )
                                      )
                                  );
                              })
                          )
                        : Hn(c);
                }
                getChildConfig(d, c, D) {
                    return c.children
                        ? (0, he.of)(new Xr(c.children, d))
                        : c.loadChildren
                        ? void 0 !== c._loadedConfig
                            ? (0, he.of)(c._loadedConfig)
                            : this.runCanLoadGuards(d.injector, c, D).pipe(
                                  (0, mt.z)((P) =>
                                      P
                                          ? this.configLoader
                                                .load(d.injector, c)
                                                .pipe(
                                                    (0, pt.U)(
                                                        ($) => (
                                                            (c._loadedConfig =
                                                                $),
                                                            $
                                                        )
                                                    )
                                                )
                                          : (function g(p) {
                                                return (0, R._)(
                                                    mn(
                                                        `Cannot load children because the guard of the route "path: '${p.path}'" returned false`
                                                    )
                                                );
                                            })(c)
                                  )
                              )
                        : (0, he.of)(new Xr([], d));
                }
                runCanLoadGuards(d, c, D) {
                    const P = c.canLoad;
                    if (!P || 0 === P.length) return (0, he.of)(!0);
                    const $ = P.map((ie) => {
                        const ve = d.get(ie);
                        let Xe;
                        if (
                            (function $i(p) {
                                return p && ei(p.canLoad);
                            })(ve)
                        )
                            Xe = ve.canLoad(c, D);
                        else {
                            if (!ei(ve))
                                throw new Error('Invalid CanLoad guard');
                            Xe = ve(c, D);
                        }
                        return ae(Xe);
                    });
                    return (0, he.of)($).pipe(
                        ii(),
                        (0, $t.b)((ie) => {
                            if (!zr(ie)) return;
                            const ve = mn(
                                `Redirecting to "${this.urlSerializer.serialize(
                                    ie
                                )}"`
                            );
                            throw ((ve.url = ie), ve);
                        }),
                        (0, pt.U)((ie) => !0 === ie)
                    );
                }
                lineralizeSegments(d, c) {
                    let D = [],
                        P = c.root;
                    for (;;) {
                        if (
                            ((D = D.concat(P.segments)),
                            0 === P.numberOfChildren)
                        )
                            return (0, he.of)(D);
                        if (P.numberOfChildren > 1 || !P.children[ze])
                            return (0, R._)(
                                new Error(
                                    `Only absolute redirects can have named outlets. redirectTo: '${d.redirectTo}'`
                                )
                            );
                        P = P.children[ze];
                    }
                }
                applyRedirectCommands(d, c, D) {
                    return this.applyRedirectCreatreUrlTree(
                        c,
                        this.urlSerializer.parse(c),
                        d,
                        D
                    );
                }
                applyRedirectCreatreUrlTree(d, c, D, P) {
                    const $ = this.createSegmentGroup(d, c.root, D, P);
                    return new Le(
                        $,
                        this.createQueryParams(
                            c.queryParams,
                            this.urlTree.queryParams
                        ),
                        c.fragment
                    );
                }
                createQueryParams(d, c) {
                    const D = {};
                    return (
                        Ke(d, (P, $) => {
                            if ('string' == typeof P && P.startsWith(':')) {
                                const ve = P.substring(1);
                                D[$] = c[ve];
                            } else D[$] = P;
                        }),
                        D
                    );
                }
                createSegmentGroup(d, c, D, P) {
                    const $ = this.createSegments(d, c.segments, D, P);
                    let ie = {};
                    return (
                        Ke(c.children, (ve, Xe) => {
                            ie[Xe] = this.createSegmentGroup(d, ve, D, P);
                        }),
                        new se($, ie)
                    );
                }
                createSegments(d, c, D, P) {
                    return c.map(($) =>
                        $.path.startsWith(':')
                            ? this.findPosParam(d, $, P)
                            : this.findOrReturn($, D)
                    );
                }
                findPosParam(d, c, D) {
                    const P = D[c.path.substring(1)];
                    if (!P)
                        throw new Error(
                            `Cannot redirect to '${d}'. Cannot find '${c.path}'.`
                        );
                    return P;
                }
                findOrReturn(d, c) {
                    let D = 0;
                    for (const P of c) {
                        if (P.path === d.path) return c.splice(D), P;
                        D++;
                    }
                    return d;
                }
            }
            function $n(p) {
                const d = {};
                for (const D of Object.keys(p.children)) {
                    const $ = $n(p.children[D]);
                    ($.segments.length > 0 || $.hasChildren()) && (d[D] = $);
                }
                return (function jt(p) {
                    if (1 === p.numberOfChildren && p.children[ze]) {
                        const d = p.children[ze];
                        return new se(
                            p.segments.concat(d.segments),
                            d.children
                        );
                    }
                    return p;
                })(new se(p.segments, d));
            }
            class Er {
                constructor(d) {
                    (this.path = d),
                        (this.route = this.path[this.path.length - 1]);
                }
            }
            class Ti {
                constructor(d, c) {
                    (this.component = d), (this.route = c);
                }
            }
            function Rs(p, d, c) {
                const D = p._root;
                return ar(D, d ? d._root : null, c, [D.value]);
            }
            function Tn(p, d, c) {
                const D = (function es(p) {
                    if (!p) return null;
                    for (let d = p.parent; d; d = d.parent) {
                        const c = d.routeConfig;
                        if (c && c._loadedConfig) return c._loadedConfig;
                    }
                    return null;
                })(d);
                return (D ? D.module.injector : c).get(p);
            }
            function ar(
                p,
                d,
                c,
                D,
                P = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
                const $ = Ge(d);
                return (
                    p.children.forEach((ie) => {
                        (function Ys(
                            p,
                            d,
                            c,
                            D,
                            P = {
                                canDeactivateChecks: [],
                                canActivateChecks: [],
                            }
                        ) {
                            const $ = p.value,
                                ie = d ? d.value : null,
                                ve = c ? c.getContext(p.value.outlet) : null;
                            if (ie && $.routeConfig === ie.routeConfig) {
                                const Xe = (function Pi(p, d, c) {
                                    if ('function' == typeof c) return c(p, d);
                                    switch (c) {
                                        case 'pathParamsChange':
                                            return !Ye(p.url, d.url);
                                        case 'pathParamsOrQueryParamsChange':
                                            return (
                                                !Ye(p.url, d.url) ||
                                                !yn(
                                                    p.queryParams,
                                                    d.queryParams
                                                )
                                            );
                                        case 'always':
                                            return !0;
                                        case 'paramsOrQueryParamsChange':
                                            return (
                                                !Wr(p, d) ||
                                                !yn(
                                                    p.queryParams,
                                                    d.queryParams
                                                )
                                            );
                                        default:
                                            return !Wr(p, d);
                                    }
                                })(ie, $, $.routeConfig.runGuardsAndResolvers);
                                Xe
                                    ? P.canActivateChecks.push(new Er(D))
                                    : (($.data = ie.data),
                                      ($._resolvedData = ie._resolvedData)),
                                    ar(
                                        p,
                                        d,
                                        $.component
                                            ? ve
                                                ? ve.children
                                                : null
                                            : c,
                                        D,
                                        P
                                    ),
                                    Xe &&
                                        ve &&
                                        ve.outlet &&
                                        ve.outlet.isActivated &&
                                        P.canDeactivateChecks.push(
                                            new Ti(ve.outlet.component, ie)
                                        );
                            } else
                                ie && Kr(d, ve, P),
                                    P.canActivateChecks.push(new Er(D)),
                                    ar(
                                        p,
                                        null,
                                        $.component
                                            ? ve
                                                ? ve.children
                                                : null
                                            : c,
                                        D,
                                        P
                                    );
                        })(ie, $[ie.value.outlet], c, D.concat([ie.value]), P),
                            delete $[ie.value.outlet];
                    }),
                    Ke($, (ie, ve) => Kr(ie, c.getContext(ve), P)),
                    P
                );
            }
            function Kr(p, d, c) {
                const D = Ge(p),
                    P = p.value;
                Ke(D, ($, ie) => {
                    Kr(
                        $,
                        P.component
                            ? d
                                ? d.children.getContext(ie)
                                : null
                            : d,
                        c
                    );
                }),
                    c.canDeactivateChecks.push(
                        new Ti(
                            P.component && d && d.outlet && d.outlet.isActivated
                                ? d.outlet.component
                                : null,
                            P
                        )
                    );
            }
            class ds {}
            function xi(p) {
                return new m.y((d) => d.error(p));
            }
            class Qs {
                constructor(d, c, D, P, $, ie) {
                    (this.rootComponentType = d),
                        (this.config = c),
                        (this.urlTree = D),
                        (this.url = P),
                        (this.paramsInheritanceStrategy = $),
                        (this.relativeLinkResolution = ie);
                }
                recognize() {
                    const d = Ce(
                            this.urlTree.root,
                            [],
                            [],
                            this.config.filter(
                                (ie) => void 0 === ie.redirectTo
                            ),
                            this.relativeLinkResolution
                        ).segmentGroup,
                        c = this.processSegmentGroup(this.config, d, ze);
                    if (null === c) return null;
                    const D = new an(
                            [],
                            Object.freeze({}),
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            {},
                            ze,
                            this.rootComponentType,
                            null,
                            this.urlTree.root,
                            -1,
                            {}
                        ),
                        P = new xe(D, c),
                        $ = new pr(this.url, P);
                    return this.inheritParamsAndData($._root), $;
                }
                inheritParamsAndData(d) {
                    const c = d.value,
                        D = Nn(c, this.paramsInheritanceStrategy);
                    (c.params = Object.freeze(D.params)),
                        (c.data = Object.freeze(D.data)),
                        d.children.forEach((P) => this.inheritParamsAndData(P));
                }
                processSegmentGroup(d, c, D) {
                    return 0 === c.segments.length && c.hasChildren()
                        ? this.processChildren(d, c)
                        : this.processSegment(d, c, c.segments, D);
                }
                processChildren(d, c) {
                    const D = [];
                    for (const $ of Object.keys(c.children)) {
                        const ie = c.children[$],
                            ve = j(d, $),
                            Xe = this.processSegmentGroup(ve, ie, $);
                        if (null === Xe) return null;
                        D.push(...Xe);
                    }
                    const P = fs(D);
                    return (
                        (function Gi(p) {
                            p.sort((d, c) =>
                                d.value.outlet === ze
                                    ? -1
                                    : c.value.outlet === ze
                                    ? 1
                                    : d.value.outlet.localeCompare(
                                          c.value.outlet
                                      )
                            );
                        })(P),
                        P
                    );
                }
                processSegment(d, c, D, P) {
                    for (const $ of d) {
                        const ie = this.processSegmentAgainstRoute($, c, D, P);
                        if (null !== ie) return ie;
                    }
                    return An(c, D, P) ? [] : null;
                }
                processSegmentAgainstRoute(d, c, D, P) {
                    if (d.redirectTo || !on(d, c, D, P)) return null;
                    let $,
                        ie = [],
                        ve = [];
                    if ('**' === d.path) {
                        const en = D.length > 0 ? ue(D).parameters : {};
                        $ = new an(
                            D,
                            en,
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            gs(d),
                            C(d),
                            d.component,
                            d,
                            ks(c),
                            ps(c) + D.length,
                            ms(d)
                        );
                    } else {
                        const en = z(c, d, D);
                        if (!en.matched) return null;
                        (ie = en.consumedSegments),
                            (ve = en.remainingSegments),
                            ($ = new an(
                                ie,
                                en.parameters,
                                Object.freeze(
                                    Object.assign({}, this.urlTree.queryParams)
                                ),
                                this.urlTree.fragment,
                                gs(d),
                                C(d),
                                d.component,
                                d,
                                ks(c),
                                ps(c) + ie.length,
                                ms(d)
                            ));
                    }
                    const Xe = (function Ns(p) {
                            return p.children
                                ? p.children
                                : p.loadChildren
                                ? p._loadedConfig.routes
                                : [];
                        })(d),
                        { segmentGroup: it, slicedSegments: Dt } = Ce(
                            c,
                            ie,
                            ve,
                            Xe.filter((en) => void 0 === en.redirectTo),
                            this.relativeLinkResolution
                        );
                    if (0 === Dt.length && it.hasChildren()) {
                        const en = this.processChildren(Xe, it);
                        return null === en ? null : [new xe($, en)];
                    }
                    if (0 === Xe.length && 0 === Dt.length)
                        return [new xe($, [])];
                    const dt = C(d) === P,
                        Yt = this.processSegment(Xe, it, Dt, dt ? ze : P);
                    return null === Yt ? null : [new xe($, Yt)];
                }
            }
            function Ls(p) {
                const d = p.value.routeConfig;
                return d && '' === d.path && void 0 === d.redirectTo;
            }
            function fs(p) {
                const d = [],
                    c = new Set();
                for (const D of p) {
                    if (!Ls(D)) {
                        d.push(D);
                        continue;
                    }
                    const P = d.find(
                        ($) => D.value.routeConfig === $.value.routeConfig
                    );
                    void 0 !== P
                        ? (P.children.push(...D.children), c.add(P))
                        : d.push(D);
                }
                for (const D of c) {
                    const P = fs(D.children);
                    d.push(new xe(D.value, P));
                }
                return d.filter((D) => !c.has(D));
            }
            function ks(p) {
                let d = p;
                for (; d._sourceSegment; ) d = d._sourceSegment;
                return d;
            }
            function ps(p) {
                let d = p,
                    c = d._segmentIndexShift ? d._segmentIndexShift : 0;
                for (; d._sourceSegment; )
                    (d = d._sourceSegment),
                        (c += d._segmentIndexShift ? d._segmentIndexShift : 0);
                return c - 1;
            }
            function gs(p) {
                return p.data || {};
            }
            function ms(p) {
                return p.resolve || {};
            }
            function _s(p) {
                return [...Object.keys(p), ...Object.getOwnPropertySymbols(p)];
            }
            function Us(p) {
                return (0, Lt.w)((d) => {
                    const c = p(d);
                    return c
                        ? (0, k.D)(c).pipe((0, pt.U)(() => d))
                        : (0, he.of)(d);
                });
            }
            class Fi extends class Vr {
                shouldDetach(d) {
                    return !1;
                }
                store(d, c) {}
                shouldAttach(d) {
                    return !1;
                }
                retrieve(d) {
                    return null;
                }
                shouldReuseRoute(d, c) {
                    return d.routeConfig === c.routeConfig;
                }
            } {}
            const hr = new s.OlP('ROUTES');
            class ys {
                constructor(d, c, D, P) {
                    (this.injector = d),
                        (this.compiler = c),
                        (this.onLoadStartListener = D),
                        (this.onLoadEndListener = P);
                }
                load(d, c) {
                    if (c._loader$) return c._loader$;
                    this.onLoadStartListener && this.onLoadStartListener(c);
                    const P = this.loadModuleFactory(c.loadChildren).pipe(
                        (0, pt.U)(($) => {
                            this.onLoadEndListener && this.onLoadEndListener(c);
                            const ie = $.create(d);
                            return new Xr(
                                q(
                                    ie.injector.get(
                                        hr,
                                        void 0,
                                        s.XFs.Self | s.XFs.Optional
                                    )
                                ).map(jn),
                                ie
                            );
                        }),
                        (0, gt.K)(($) => {
                            throw ((c._loader$ = void 0), $);
                        })
                    );
                    return (
                        (c._loader$ = new Me(P, () => new re.x()).pipe(J())),
                        c._loader$
                    );
                }
                loadModuleFactory(d) {
                    return ae(d()).pipe(
                        (0, mt.z)((c) =>
                            c instanceof s.YKP
                                ? (0, he.of)(c)
                                : (0, k.D)(this.compiler.compileModuleAsync(c))
                        )
                    );
                }
            }
            class Do {
                shouldProcessUrl(d) {
                    return !0;
                }
                extract(d) {
                    return d;
                }
                merge(d, c) {
                    return d;
                }
            }
            function vs(p) {
                throw p;
            }
            function oo(p, d, c) {
                return d.parse('/');
            }
            function Xs(p, d) {
                return (0, he.of)(null);
            }
            const Es = {
                    paths: 'exact',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'exact',
                },
                Ds = {
                    paths: 'subset',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'subset',
                };
            let Mr = (() => {
                class p {
                    constructor(c, D, P, $, ie, ve, Xe) {
                        (this.rootComponentType = c),
                            (this.urlSerializer = D),
                            (this.rootContexts = P),
                            (this.location = $),
                            (this.config = Xe),
                            (this.lastSuccessfulNavigation = null),
                            (this.currentNavigation = null),
                            (this.disposed = !1),
                            (this.navigationId = 0),
                            (this.currentPageId = 0),
                            (this.isNgZoneEnabled = !1),
                            (this.events = new re.x()),
                            (this.errorHandler = vs),
                            (this.malformedUriErrorHandler = oo),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1),
                            (this.hooks = {
                                beforePreactivation: Xs,
                                afterPreactivation: Xs,
                            }),
                            (this.urlHandlingStrategy = new Do()),
                            (this.routeReuseStrategy = new Fi()),
                            (this.onSameUrlNavigation = 'ignore'),
                            (this.paramsInheritanceStrategy = 'emptyOnly'),
                            (this.urlUpdateStrategy = 'deferred'),
                            (this.relativeLinkResolution = 'corrected'),
                            (this.canceledNavigationResolution = 'replace'),
                            (this.ngModule = ie.get(s.h0i)),
                            (this.console = ie.get(s.c2e));
                        const dt = ie.get(s.R0b);
                        (this.isNgZoneEnabled =
                            dt instanceof s.R0b && s.R0b.isInAngularZone()),
                            this.resetConfig(Xe),
                            (this.currentUrlTree = (function Z() {
                                return new Le(new se([], {}), {}, null);
                            })()),
                            (this.rawUrlTree = this.currentUrlTree),
                            (this.browserUrlTree = this.currentUrlTree),
                            (this.configLoader = new ys(
                                ie,
                                ve,
                                (Yt) => this.triggerEvent(new vn(Yt)),
                                (Yt) => this.triggerEvent(new Dn(Yt))
                            )),
                            (this.routerState = _t(
                                this.currentUrlTree,
                                this.rootComponentType
                            )),
                            (this.transitions = new De.X({
                                id: 0,
                                targetPageId: 0,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.currentUrlTree,
                                extractedUrl: this.urlHandlingStrategy.extract(
                                    this.currentUrlTree
                                ),
                                urlAfterRedirects:
                                    this.urlHandlingStrategy.extract(
                                        this.currentUrlTree
                                    ),
                                rawUrl: this.currentUrlTree,
                                extras: {},
                                resolve: null,
                                reject: null,
                                promise: Promise.resolve(!0),
                                source: 'imperative',
                                restoredState: null,
                                currentSnapshot: this.routerState.snapshot,
                                targetSnapshot: null,
                                currentRouterState: this.routerState,
                                targetRouterState: null,
                                guards: {
                                    canActivateChecks: [],
                                    canDeactivateChecks: [],
                                },
                                guardsResult: null,
                            })),
                            (this.navigations = this.setupNavigations(
                                this.transitions
                            )),
                            this.processNavigations();
                    }
                    get browserPageId() {
                        var c;
                        return null === (c = this.location.getState()) ||
                            void 0 === c
                            ? void 0
                            : c.ɵrouterPageId;
                    }
                    setupNavigations(c) {
                        const D = this.events;
                        return c.pipe(
                            (0, ne.h)((P) => 0 !== P.id),
                            (0, pt.U)((P) =>
                                Object.assign(Object.assign({}, P), {
                                    extractedUrl:
                                        this.urlHandlingStrategy.extract(
                                            P.rawUrl
                                        ),
                                })
                            ),
                            (0, Lt.w)((P) => {
                                let $ = !1,
                                    ie = !1;
                                return (0, he.of)(P).pipe(
                                    (0, $t.b)((ve) => {
                                        this.currentNavigation = {
                                            id: ve.id,
                                            initialUrl: ve.currentRawUrl,
                                            extractedUrl: ve.extractedUrl,
                                            trigger: ve.source,
                                            extras: ve.extras,
                                            previousNavigation: this
                                                .lastSuccessfulNavigation
                                                ? Object.assign(
                                                      Object.assign(
                                                          {},
                                                          this
                                                              .lastSuccessfulNavigation
                                                      ),
                                                      {
                                                          previousNavigation:
                                                              null,
                                                      }
                                                  )
                                                : null,
                                        };
                                    }),
                                    (0, Lt.w)((ve) => {
                                        const Xe =
                                                this.browserUrlTree.toString(),
                                            it =
                                                !this.navigated ||
                                                ve.extractedUrl.toString() !==
                                                    Xe ||
                                                Xe !==
                                                    this.currentUrlTree.toString();
                                        if (
                                            ('reload' ===
                                                this.onSameUrlNavigation ||
                                                it) &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                ve.rawUrl
                                            )
                                        )
                                            return (
                                                ns(ve.source) &&
                                                    (this.browserUrlTree =
                                                        ve.extractedUrl),
                                                (0, he.of)(ve).pipe(
                                                    (0, Lt.w)((dt) => {
                                                        const Yt =
                                                            this.transitions.getValue();
                                                        return (
                                                            D.next(
                                                                new st(
                                                                    dt.id,
                                                                    this.serializeUrl(
                                                                        dt.extractedUrl
                                                                    ),
                                                                    dt.source,
                                                                    dt.restoredState
                                                                )
                                                            ),
                                                            Yt !==
                                                            this.transitions.getValue()
                                                                ? oe.E
                                                                : Promise.resolve(
                                                                      dt
                                                                  )
                                                        );
                                                    }),
                                                    (function Qr(p, d, c, D) {
                                                        return (0, Lt.w)((P) =>
                                                            (function H(
                                                                p,
                                                                d,
                                                                c,
                                                                D,
                                                                P
                                                            ) {
                                                                return new qe(
                                                                    p,
                                                                    d,
                                                                    c,
                                                                    D,
                                                                    P
                                                                ).apply();
                                                            })(
                                                                p,
                                                                d,
                                                                c,
                                                                P.extractedUrl,
                                                                D
                                                            ).pipe(
                                                                (0, pt.U)(($) =>
                                                                    Object.assign(
                                                                        Object.assign(
                                                                            {},
                                                                            P
                                                                        ),
                                                                        {
                                                                            urlAfterRedirects:
                                                                                $,
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.ngModule.injector,
                                                        this.configLoader,
                                                        this.urlSerializer,
                                                        this.config
                                                    ),
                                                    (0, $t.b)((dt) => {
                                                        this.currentNavigation =
                                                            Object.assign(
                                                                Object.assign(
                                                                    {},
                                                                    this
                                                                        .currentNavigation
                                                                ),
                                                                {
                                                                    finalUrl:
                                                                        dt.urlAfterRedirects,
                                                                }
                                                            );
                                                    }),
                                                    (function ts(
                                                        p,
                                                        d,
                                                        c,
                                                        D,
                                                        P
                                                    ) {
                                                        return (0, mt.z)(($) =>
                                                            (function di(
                                                                p,
                                                                d,
                                                                c,
                                                                D,
                                                                P = 'emptyOnly',
                                                                $ = 'legacy'
                                                            ) {
                                                                try {
                                                                    const ie =
                                                                        new Qs(
                                                                            p,
                                                                            d,
                                                                            c,
                                                                            D,
                                                                            P,
                                                                            $
                                                                        ).recognize();
                                                                    return null ===
                                                                        ie
                                                                        ? xi(
                                                                              new ds()
                                                                          )
                                                                        : (0,
                                                                          he.of)(
                                                                              ie
                                                                          );
                                                                } catch (ie) {
                                                                    return xi(
                                                                        ie
                                                                    );
                                                                }
                                                            })(
                                                                p,
                                                                d,
                                                                $.urlAfterRedirects,
                                                                c(
                                                                    $.urlAfterRedirects
                                                                ),
                                                                D,
                                                                P
                                                            ).pipe(
                                                                (0, pt.U)(
                                                                    (ie) =>
                                                                        Object.assign(
                                                                            Object.assign(
                                                                                {},
                                                                                $
                                                                            ),
                                                                            {
                                                                                targetSnapshot:
                                                                                    ie,
                                                                            }
                                                                        )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.rootComponentType,
                                                        this.config,
                                                        (dt) =>
                                                            this.serializeUrl(
                                                                dt
                                                            ),
                                                        this
                                                            .paramsInheritanceStrategy,
                                                        this
                                                            .relativeLinkResolution
                                                    ),
                                                    (0, $t.b)((dt) => {
                                                        if (
                                                            'eager' ===
                                                            this
                                                                .urlUpdateStrategy
                                                        ) {
                                                            if (
                                                                !dt.extras
                                                                    .skipLocationChange
                                                            ) {
                                                                const en =
                                                                    this.urlHandlingStrategy.merge(
                                                                        dt.urlAfterRedirects,
                                                                        dt.rawUrl
                                                                    );
                                                                this.setBrowserUrl(
                                                                    en,
                                                                    dt
                                                                );
                                                            }
                                                            this.browserUrlTree =
                                                                dt.urlAfterRedirects;
                                                        }
                                                        const Yt = new Bn(
                                                            dt.id,
                                                            this.serializeUrl(
                                                                dt.extractedUrl
                                                            ),
                                                            this.serializeUrl(
                                                                dt.urlAfterRedirects
                                                            ),
                                                            dt.targetSnapshot
                                                        );
                                                        D.next(Yt);
                                                    })
                                                )
                                            );
                                        if (
                                            it &&
                                            this.rawUrlTree &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                this.rawUrlTree
                                            )
                                        ) {
                                            const {
                                                    id: Yt,
                                                    extractedUrl: en,
                                                    source: Tr,
                                                    restoredState: lr,
                                                    extras: li,
                                                } = ve,
                                                er = new st(
                                                    Yt,
                                                    this.serializeUrl(en),
                                                    Tr,
                                                    lr
                                                );
                                            D.next(er);
                                            const wi = _t(
                                                en,
                                                this.rootComponentType
                                            ).snapshot;
                                            return (0, he.of)(
                                                Object.assign(
                                                    Object.assign({}, ve),
                                                    {
                                                        targetSnapshot: wi,
                                                        urlAfterRedirects: en,
                                                        extras: Object.assign(
                                                            Object.assign(
                                                                {},
                                                                li
                                                            ),
                                                            {
                                                                skipLocationChange:
                                                                    !1,
                                                                replaceUrl: !1,
                                                            }
                                                        ),
                                                    }
                                                )
                                            );
                                        }
                                        return (
                                            (this.rawUrlTree = ve.rawUrl),
                                            ve.resolve(null),
                                            oe.E
                                        );
                                    }),
                                    Us((ve) => {
                                        const {
                                            targetSnapshot: Xe,
                                            id: it,
                                            extractedUrl: Dt,
                                            rawUrl: dt,
                                            extras: {
                                                skipLocationChange: Yt,
                                                replaceUrl: en,
                                            },
                                        } = ve;
                                        return this.hooks.beforePreactivation(
                                            Xe,
                                            {
                                                navigationId: it,
                                                appliedUrlTree: Dt,
                                                rawUrlTree: dt,
                                                skipLocationChange: !!Yt,
                                                replaceUrl: !!en,
                                            }
                                        );
                                    }),
                                    (0, $t.b)((ve) => {
                                        const Xe = new rn(
                                            ve.id,
                                            this.serializeUrl(ve.extractedUrl),
                                            this.serializeUrl(
                                                ve.urlAfterRedirects
                                            ),
                                            ve.targetSnapshot
                                        );
                                        this.triggerEvent(Xe);
                                    }),
                                    (0, pt.U)((ve) =>
                                        Object.assign(Object.assign({}, ve), {
                                            guards: Rs(
                                                ve.targetSnapshot,
                                                ve.currentSnapshot,
                                                this.rootContexts
                                            ),
                                        })
                                    ),
                                    (function xs(p, d) {
                                        return (0, mt.z)((c) => {
                                            const {
                                                targetSnapshot: D,
                                                currentSnapshot: P,
                                                guards: {
                                                    canActivateChecks: $,
                                                    canDeactivateChecks: ie,
                                                },
                                            } = c;
                                            return 0 === ie.length &&
                                                0 === $.length
                                                ? (0, he.of)(
                                                      Object.assign(
                                                          Object.assign({}, c),
                                                          { guardsResult: !0 }
                                                      )
                                                  )
                                                : (function Fs(p, d, c, D) {
                                                      return (0, k.D)(p).pipe(
                                                          (0, mt.z)((P) =>
                                                              (function oi(
                                                                  p,
                                                                  d,
                                                                  c,
                                                                  D,
                                                                  P
                                                              ) {
                                                                  const $ =
                                                                      d &&
                                                                      d.routeConfig
                                                                          ? d
                                                                                .routeConfig
                                                                                .canDeactivate
                                                                          : null;
                                                                  if (
                                                                      !$ ||
                                                                      0 ===
                                                                          $.length
                                                                  )
                                                                      return (0,
                                                                      he.of)(
                                                                          !0
                                                                      );
                                                                  const ie =
                                                                      $.map(
                                                                          (
                                                                              ve
                                                                          ) => {
                                                                              const Xe =
                                                                                  Tn(
                                                                                      ve,
                                                                                      d,
                                                                                      P
                                                                                  );
                                                                              let it;
                                                                              if (
                                                                                  (function bi(
                                                                                      p
                                                                                  ) {
                                                                                      return (
                                                                                          p &&
                                                                                          ei(
                                                                                              p.canDeactivate
                                                                                          )
                                                                                      );
                                                                                  })(
                                                                                      Xe
                                                                                  )
                                                                              )
                                                                                  it =
                                                                                      ae(
                                                                                          Xe.canDeactivate(
                                                                                              p,
                                                                                              d,
                                                                                              c,
                                                                                              D
                                                                                          )
                                                                                      );
                                                                              else {
                                                                                  if (
                                                                                      !ei(
                                                                                          Xe
                                                                                      )
                                                                                  )
                                                                                      throw new Error(
                                                                                          'Invalid CanDeactivate guard'
                                                                                      );
                                                                                  it =
                                                                                      ae(
                                                                                          Xe(
                                                                                              p,
                                                                                              d,
                                                                                              c,
                                                                                              D
                                                                                          )
                                                                                      );
                                                                              }
                                                                              return it.pipe(
                                                                                  (0,
                                                                                  It.P)()
                                                                              );
                                                                          }
                                                                      );
                                                                  return (0,
                                                                  he.of)(
                                                                      ie
                                                                  ).pipe(ii());
                                                              })(
                                                                  P.component,
                                                                  P.route,
                                                                  c,
                                                                  d,
                                                                  D
                                                              )
                                                          ),
                                                          (0, It.P)(
                                                              (P) => !0 !== P,
                                                              !0
                                                          )
                                                      );
                                                  })(ie, D, P, p).pipe(
                                                      (0, mt.z)((ve) =>
                                                          ve &&
                                                          (function cs(p) {
                                                              return (
                                                                  'boolean' ==
                                                                  typeof p
                                                              );
                                                          })(ve)
                                                              ? (function vo(
                                                                    p,
                                                                    d,
                                                                    c,
                                                                    D
                                                                ) {
                                                                    return (0,
                                                                    k.D)(
                                                                        d
                                                                    ).pipe(
                                                                        (0,
                                                                        Pt.b)(
                                                                            (
                                                                                P
                                                                            ) =>
                                                                                (0,
                                                                                G.z)(
                                                                                    (function Eo(
                                                                                        p,
                                                                                        d
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                p &&
                                                                                                d &&
                                                                                                d(
                                                                                                    new rr(
                                                                                                        p
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            he.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        P
                                                                                            .route
                                                                                            .parent,
                                                                                        D
                                                                                    ),
                                                                                    (function Zs(
                                                                                        p,
                                                                                        d
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                p &&
                                                                                                d &&
                                                                                                d(
                                                                                                    new rt(
                                                                                                        p
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            he.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        P.route,
                                                                                        D
                                                                                    ),
                                                                                    (function Lr(
                                                                                        p,
                                                                                        d,
                                                                                        c
                                                                                    ) {
                                                                                        const D =
                                                                                                d[
                                                                                                    d.length -
                                                                                                        1
                                                                                                ],
                                                                                            $ =
                                                                                                d
                                                                                                    .slice(
                                                                                                        0,
                                                                                                        d.length -
                                                                                                            1
                                                                                                    )
                                                                                                    .reverse()
                                                                                                    .map(
                                                                                                        (
                                                                                                            ie
                                                                                                        ) =>
                                                                                                            (function ht(
                                                                                                                p
                                                                                                            ) {
                                                                                                                const d =
                                                                                                                    p.routeConfig
                                                                                                                        ? p
                                                                                                                              .routeConfig
                                                                                                                              .canActivateChild
                                                                                                                        : null;
                                                                                                                return d &&
                                                                                                                    0 !==
                                                                                                                        d.length
                                                                                                                    ? {
                                                                                                                          node: p,
                                                                                                                          guards: d,
                                                                                                                      }
                                                                                                                    : null;
                                                                                                            })(
                                                                                                                ie
                                                                                                            )
                                                                                                    )
                                                                                                    .filter(
                                                                                                        (
                                                                                                            ie
                                                                                                        ) =>
                                                                                                            null !==
                                                                                                            ie
                                                                                                    )
                                                                                                    .map(
                                                                                                        (
                                                                                                            ie
                                                                                                        ) =>
                                                                                                            Re(
                                                                                                                () => {
                                                                                                                    const ve =
                                                                                                                        ie.guards.map(
                                                                                                                            (
                                                                                                                                Xe
                                                                                                                            ) => {
                                                                                                                                const it =
                                                                                                                                    Tn(
                                                                                                                                        Xe,
                                                                                                                                        ie.node,
                                                                                                                                        c
                                                                                                                                    );
                                                                                                                                let Dt;
                                                                                                                                if (
                                                                                                                                    (function Ur(
                                                                                                                                        p
                                                                                                                                    ) {
                                                                                                                                        return (
                                                                                                                                            p &&
                                                                                                                                            ei(
                                                                                                                                                p.canActivateChild
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                    })(
                                                                                                                                        it
                                                                                                                                    )
                                                                                                                                )
                                                                                                                                    Dt =
                                                                                                                                        ae(
                                                                                                                                            it.canActivateChild(
                                                                                                                                                D,
                                                                                                                                                p
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                else {
                                                                                                                                    if (
                                                                                                                                        !ei(
                                                                                                                                            it
                                                                                                                                        )
                                                                                                                                    )
                                                                                                                                        throw new Error(
                                                                                                                                            'Invalid CanActivateChild guard'
                                                                                                                                        );
                                                                                                                                    Dt =
                                                                                                                                        ae(
                                                                                                                                            it(
                                                                                                                                                D,
                                                                                                                                                p
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                }
                                                                                                                                return Dt.pipe(
                                                                                                                                    (0,
                                                                                                                                    It.P)()
                                                                                                                                );
                                                                                                                            }
                                                                                                                        );
                                                                                                                    return (0,
                                                                                                                    he.of)(
                                                                                                                        ve
                                                                                                                    ).pipe(
                                                                                                                        ii()
                                                                                                                    );
                                                                                                                }
                                                                                                            )
                                                                                                    );
                                                                                        return (0,
                                                                                        he.of)(
                                                                                            $
                                                                                        ).pipe(
                                                                                            ii()
                                                                                        );
                                                                                    })(
                                                                                        p,
                                                                                        P.path,
                                                                                        c
                                                                                    ),
                                                                                    (function Ri(
                                                                                        p,
                                                                                        d,
                                                                                        c
                                                                                    ) {
                                                                                        const D =
                                                                                            d.routeConfig
                                                                                                ? d
                                                                                                      .routeConfig
                                                                                                      .canActivate
                                                                                                : null;
                                                                                        if (
                                                                                            !D ||
                                                                                            0 ===
                                                                                                D.length
                                                                                        )
                                                                                            return (0,
                                                                                            he.of)(
                                                                                                !0
                                                                                            );
                                                                                        const P =
                                                                                            D.map(
                                                                                                (
                                                                                                    $
                                                                                                ) =>
                                                                                                    Re(
                                                                                                        () => {
                                                                                                            const ie =
                                                                                                                Tn(
                                                                                                                    $,
                                                                                                                    d,
                                                                                                                    c
                                                                                                                );
                                                                                                            let ve;
                                                                                                            if (
                                                                                                                (function ti(
                                                                                                                    p
                                                                                                                ) {
                                                                                                                    return (
                                                                                                                        p &&
                                                                                                                        ei(
                                                                                                                            p.canActivate
                                                                                                                        )
                                                                                                                    );
                                                                                                                })(
                                                                                                                    ie
                                                                                                                )
                                                                                                            )
                                                                                                                ve =
                                                                                                                    ae(
                                                                                                                        ie.canActivate(
                                                                                                                            d,
                                                                                                                            p
                                                                                                                        )
                                                                                                                    );
                                                                                                            else {
                                                                                                                if (
                                                                                                                    !ei(
                                                                                                                        ie
                                                                                                                    )
                                                                                                                )
                                                                                                                    throw new Error(
                                                                                                                        'Invalid CanActivate guard'
                                                                                                                    );
                                                                                                                ve =
                                                                                                                    ae(
                                                                                                                        ie(
                                                                                                                            d,
                                                                                                                            p
                                                                                                                        )
                                                                                                                    );
                                                                                                            }
                                                                                                            return ve.pipe(
                                                                                                                (0,
                                                                                                                It.P)()
                                                                                                            );
                                                                                                        }
                                                                                                    )
                                                                                            );
                                                                                        return (0,
                                                                                        he.of)(
                                                                                            P
                                                                                        ).pipe(
                                                                                            ii()
                                                                                        );
                                                                                    })(
                                                                                        p,
                                                                                        P.route,
                                                                                        c
                                                                                    )
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        It.P)(
                                                                            (
                                                                                P
                                                                            ) =>
                                                                                !0 !==
                                                                                P,
                                                                            !0
                                                                        )
                                                                    );
                                                                })(D, $, p, d)
                                                              : (0, he.of)(ve)
                                                      ),
                                                      (0, pt.U)((ve) =>
                                                          Object.assign(
                                                              Object.assign(
                                                                  {},
                                                                  c
                                                              ),
                                                              {
                                                                  guardsResult:
                                                                      ve,
                                                              }
                                                          )
                                                      )
                                                  );
                                        });
                                    })(this.ngModule.injector, (ve) =>
                                        this.triggerEvent(ve)
                                    ),
                                    (0, $t.b)((ve) => {
                                        if (zr(ve.guardsResult)) {
                                            const it = mn(
                                                `Redirecting to "${this.serializeUrl(
                                                    ve.guardsResult
                                                )}"`
                                            );
                                            throw (
                                                ((it.url = ve.guardsResult), it)
                                            );
                                        }
                                        const Xe = new gn(
                                            ve.id,
                                            this.serializeUrl(ve.extractedUrl),
                                            this.serializeUrl(
                                                ve.urlAfterRedirects
                                            ),
                                            ve.targetSnapshot,
                                            !!ve.guardsResult
                                        );
                                        this.triggerEvent(Xe);
                                    }),
                                    (0, ne.h)(
                                        (ve) =>
                                            !!ve.guardsResult ||
                                            (this.restoreHistory(ve),
                                            this.cancelNavigationTransition(
                                                ve,
                                                ''
                                            ),
                                            !1)
                                    ),
                                    Us((ve) => {
                                        if (ve.guards.canActivateChecks.length)
                                            return (0, he.of)(ve).pipe(
                                                (0, $t.b)((Xe) => {
                                                    const it = new Nt(
                                                        Xe.id,
                                                        this.serializeUrl(
                                                            Xe.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            Xe.urlAfterRedirects
                                                        ),
                                                        Xe.targetSnapshot
                                                    );
                                                    this.triggerEvent(it);
                                                }),
                                                (0, Lt.w)((Xe) => {
                                                    let it = !1;
                                                    return (0, he.of)(Xe).pipe(
                                                        (function Js(p, d) {
                                                            return (0, mt.z)(
                                                                (c) => {
                                                                    const {
                                                                        targetSnapshot:
                                                                            D,
                                                                        guards: {
                                                                            canActivateChecks:
                                                                                P,
                                                                        },
                                                                    } = c;
                                                                    if (
                                                                        !P.length
                                                                    )
                                                                        return (0,
                                                                        he.of)(
                                                                            c
                                                                        );
                                                                    let $ = 0;
                                                                    return (0,
                                                                    k.D)(
                                                                        P
                                                                    ).pipe(
                                                                        (0,
                                                                        Pt.b)(
                                                                            (
                                                                                ie
                                                                            ) =>
                                                                                (function Bs(
                                                                                    p,
                                                                                    d,
                                                                                    c,
                                                                                    D
                                                                                ) {
                                                                                    return (function qs(
                                                                                        p,
                                                                                        d,
                                                                                        c,
                                                                                        D
                                                                                    ) {
                                                                                        const P =
                                                                                            _s(
                                                                                                p
                                                                                            );
                                                                                        if (
                                                                                            0 ===
                                                                                            P.length
                                                                                        )
                                                                                            return (0,
                                                                                            he.of)(
                                                                                                {}
                                                                                            );
                                                                                        const $ =
                                                                                            {};
                                                                                        return (0,
                                                                                        k.D)(
                                                                                            P
                                                                                        ).pipe(
                                                                                            (0,
                                                                                            mt.z)(
                                                                                                (
                                                                                                    ie
                                                                                                ) =>
                                                                                                    (function zi(
                                                                                                        p,
                                                                                                        d,
                                                                                                        c,
                                                                                                        D
                                                                                                    ) {
                                                                                                        const P =
                                                                                                            Tn(
                                                                                                                p,
                                                                                                                d,
                                                                                                                D
                                                                                                            );
                                                                                                        return ae(
                                                                                                            P.resolve
                                                                                                                ? P.resolve(
                                                                                                                      d,
                                                                                                                      c
                                                                                                                  )
                                                                                                                : P(
                                                                                                                      d,
                                                                                                                      c
                                                                                                                  )
                                                                                                        );
                                                                                                    })(
                                                                                                        p[
                                                                                                            ie
                                                                                                        ],
                                                                                                        d,
                                                                                                        c,
                                                                                                        D
                                                                                                    ).pipe(
                                                                                                        (0,
                                                                                                        $t.b)(
                                                                                                            (
                                                                                                                ve
                                                                                                            ) => {
                                                                                                                $[
                                                                                                                    ie
                                                                                                                ] =
                                                                                                                    ve;
                                                                                                            }
                                                                                                        )
                                                                                                    )
                                                                                            ),
                                                                                            we(
                                                                                                1
                                                                                            ),
                                                                                            (0,
                                                                                            mt.z)(
                                                                                                () =>
                                                                                                    _s(
                                                                                                        $
                                                                                                    )
                                                                                                        .length ===
                                                                                                    P.length
                                                                                                        ? (0,
                                                                                                          he.of)(
                                                                                                              $
                                                                                                          )
                                                                                                        : oe.E
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        p._resolve,
                                                                                        p,
                                                                                        d,
                                                                                        D
                                                                                    ).pipe(
                                                                                        (0,
                                                                                        pt.U)(
                                                                                            (
                                                                                                $
                                                                                            ) => (
                                                                                                (p._resolvedData =
                                                                                                    $),
                                                                                                (p.data =
                                                                                                    Object.assign(
                                                                                                        Object.assign(
                                                                                                            {},
                                                                                                            p.data
                                                                                                        ),
                                                                                                        Nn(
                                                                                                            p,
                                                                                                            c
                                                                                                        )
                                                                                                            .resolve
                                                                                                    )),
                                                                                                null
                                                                                            )
                                                                                        )
                                                                                    );
                                                                                })(
                                                                                    ie.route,
                                                                                    D,
                                                                                    p,
                                                                                    d
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        $t.b)(
                                                                            () =>
                                                                                $++
                                                                        ),
                                                                        we(1),
                                                                        (0,
                                                                        mt.z)(
                                                                            (
                                                                                ie
                                                                            ) =>
                                                                                $ ===
                                                                                P.length
                                                                                    ? (0,
                                                                                      he.of)(
                                                                                          c
                                                                                      )
                                                                                    : oe.E
                                                                        )
                                                                    );
                                                                }
                                                            );
                                                        })(
                                                            this
                                                                .paramsInheritanceStrategy,
                                                            this.ngModule
                                                                .injector
                                                        ),
                                                        (0, $t.b)({
                                                            next: () =>
                                                                (it = !0),
                                                            complete: () => {
                                                                it ||
                                                                    (this.restoreHistory(
                                                                        Xe
                                                                    ),
                                                                    this.cancelNavigationTransition(
                                                                        Xe,
                                                                        "At least one route resolver didn't emit any value."
                                                                    ));
                                                            },
                                                        })
                                                    );
                                                }),
                                                (0, $t.b)((Xe) => {
                                                    const it = new Un(
                                                        Xe.id,
                                                        this.serializeUrl(
                                                            Xe.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            Xe.urlAfterRedirects
                                                        ),
                                                        Xe.targetSnapshot
                                                    );
                                                    this.triggerEvent(it);
                                                })
                                            );
                                    }),
                                    Us((ve) => {
                                        const {
                                            targetSnapshot: Xe,
                                            id: it,
                                            extractedUrl: Dt,
                                            rawUrl: dt,
                                            extras: {
                                                skipLocationChange: Yt,
                                                replaceUrl: en,
                                            },
                                        } = ve;
                                        return this.hooks.afterPreactivation(
                                            Xe,
                                            {
                                                navigationId: it,
                                                appliedUrlTree: Dt,
                                                rawUrlTree: dt,
                                                skipLocationChange: !!Yt,
                                                replaceUrl: !!en,
                                            }
                                        );
                                    }),
                                    (0, pt.U)((ve) => {
                                        const Xe = (function Ui(p, d, c) {
                                            const D = Ci(
                                                p,
                                                d._root,
                                                c ? c._root : void 0
                                            );
                                            return new vt(D, d);
                                        })(
                                            this.routeReuseStrategy,
                                            ve.targetSnapshot,
                                            ve.currentRouterState
                                        );
                                        return Object.assign(
                                            Object.assign({}, ve),
                                            { targetRouterState: Xe }
                                        );
                                    }),
                                    (0, $t.b)((ve) => {
                                        (this.currentUrlTree =
                                            ve.urlAfterRedirects),
                                            (this.rawUrlTree =
                                                this.urlHandlingStrategy.merge(
                                                    ve.urlAfterRedirects,
                                                    ve.rawUrl
                                                )),
                                            (this.routerState =
                                                ve.targetRouterState),
                                            'deferred' ===
                                                this.urlUpdateStrategy &&
                                                (ve.extras.skipLocationChange ||
                                                    this.setBrowserUrl(
                                                        this.rawUrlTree,
                                                        ve
                                                    ),
                                                (this.browserUrlTree =
                                                    ve.urlAfterRedirects));
                                    }),
                                    ((p, d, c) =>
                                        (0, pt.U)(
                                            (D) => (
                                                new Hi(
                                                    d,
                                                    D.targetRouterState,
                                                    D.currentRouterState,
                                                    c
                                                ).activate(p),
                                                D
                                            )
                                        ))(
                                        this.rootContexts,
                                        this.routeReuseStrategy,
                                        (ve) => this.triggerEvent(ve)
                                    ),
                                    (0, $t.b)({
                                        next() {
                                            $ = !0;
                                        },
                                        complete() {
                                            $ = !0;
                                        },
                                    }),
                                    (function ke(p) {
                                        return (0, pe.e)((d, c) => {
                                            try {
                                                d.subscribe(c);
                                            } finally {
                                                c.add(p);
                                            }
                                        });
                                    })(() => {
                                        var ve;
                                        $ ||
                                            ie ||
                                            this.cancelNavigationTransition(
                                                P,
                                                `Navigation ID ${P.id} is not equal to the current navigation id ${this.navigationId}`
                                            ),
                                            (null ===
                                                (ve = this.currentNavigation) ||
                                            void 0 === ve
                                                ? void 0
                                                : ve.id) === P.id &&
                                                (this.currentNavigation = null);
                                    }),
                                    (0, gt.K)((ve) => {
                                        if (
                                            ((ie = !0),
                                            (function Kt(p) {
                                                return p && p[bt];
                                            })(ve))
                                        ) {
                                            const Xe = zr(ve.url);
                                            Xe ||
                                                ((this.navigated = !0),
                                                this.restoreHistory(P, !0));
                                            const it = new Qt(
                                                P.id,
                                                this.serializeUrl(
                                                    P.extractedUrl
                                                ),
                                                ve.message
                                            );
                                            D.next(it),
                                                Xe
                                                    ? setTimeout(() => {
                                                          const Dt =
                                                                  this.urlHandlingStrategy.merge(
                                                                      ve.url,
                                                                      this
                                                                          .rawUrlTree
                                                                  ),
                                                              dt = {
                                                                  skipLocationChange:
                                                                      P.extras
                                                                          .skipLocationChange,
                                                                  replaceUrl:
                                                                      'eager' ===
                                                                          this
                                                                              .urlUpdateStrategy ||
                                                                      ns(
                                                                          P.source
                                                                      ),
                                                              };
                                                          this.scheduleNavigation(
                                                              Dt,
                                                              'imperative',
                                                              null,
                                                              dt,
                                                              {
                                                                  resolve:
                                                                      P.resolve,
                                                                  reject: P.reject,
                                                                  promise:
                                                                      P.promise,
                                                              }
                                                          );
                                                      }, 0)
                                                    : P.resolve(!1);
                                        } else {
                                            this.restoreHistory(P, !0);
                                            const Xe = new ln(
                                                P.id,
                                                this.serializeUrl(
                                                    P.extractedUrl
                                                ),
                                                ve
                                            );
                                            D.next(Xe);
                                            try {
                                                P.resolve(
                                                    this.errorHandler(ve)
                                                );
                                            } catch (it) {
                                                P.reject(it);
                                            }
                                        }
                                        return oe.E;
                                    })
                                );
                            })
                        );
                    }
                    resetRootComponentType(c) {
                        (this.rootComponentType = c),
                            (this.routerState.root.component =
                                this.rootComponentType);
                    }
                    setTransition(c) {
                        this.transitions.next(
                            Object.assign(
                                Object.assign({}, this.transitions.value),
                                c
                            )
                        );
                    }
                    initialNavigation() {
                        this.setUpLocationChangeListener(),
                            0 === this.navigationId &&
                                this.navigateByUrl(this.location.path(!0), {
                                    replaceUrl: !0,
                                });
                    }
                    setUpLocationChangeListener() {
                        this.locationSubscription ||
                            (this.locationSubscription =
                                this.location.subscribe((c) => {
                                    const D =
                                        'popstate' === c.type
                                            ? 'popstate'
                                            : 'hashchange';
                                    'popstate' === D &&
                                        setTimeout(() => {
                                            var P;
                                            const $ = { replaceUrl: !0 },
                                                ie = (
                                                    null === (P = c.state) ||
                                                    void 0 === P
                                                        ? void 0
                                                        : P.navigationId
                                                )
                                                    ? c.state
                                                    : null;
                                            if (ie) {
                                                const Xe = Object.assign(
                                                    {},
                                                    ie
                                                );
                                                delete Xe.navigationId,
                                                    delete Xe.ɵrouterPageId,
                                                    0 !==
                                                        Object.keys(Xe)
                                                            .length &&
                                                        ($.state = Xe);
                                            }
                                            const ve = this.parseUrl(c.url);
                                            this.scheduleNavigation(
                                                ve,
                                                D,
                                                ie,
                                                $
                                            );
                                        }, 0);
                                }));
                    }
                    get url() {
                        return this.serializeUrl(this.currentUrlTree);
                    }
                    getCurrentNavigation() {
                        return this.currentNavigation;
                    }
                    triggerEvent(c) {
                        this.events.next(c);
                    }
                    resetConfig(c) {
                        si(c),
                            (this.config = c.map(jn)),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1);
                    }
                    ngOnDestroy() {
                        this.dispose();
                    }
                    dispose() {
                        this.transitions.complete(),
                            this.locationSubscription &&
                                (this.locationSubscription.unsubscribe(),
                                (this.locationSubscription = void 0)),
                            (this.disposed = !0);
                    }
                    createUrlTree(c, D = {}) {
                        const {
                                relativeTo: P,
                                queryParams: $,
                                fragment: ie,
                                queryParamsHandling: ve,
                                preserveFragment: Xe,
                            } = D,
                            it = P || this.routerState.root,
                            Dt = Xe ? this.currentUrlTree.fragment : ie;
                        let dt = null;
                        switch (ve) {
                            case 'merge':
                                dt = Object.assign(
                                    Object.assign(
                                        {},
                                        this.currentUrlTree.queryParams
                                    ),
                                    $
                                );
                                break;
                            case 'preserve':
                                dt = this.currentUrlTree.queryParams;
                                break;
                            default:
                                dt = $ || null;
                        }
                        return (
                            null !== dt && (dt = this.removeEmptyProps(dt)),
                            (function Vi(p, d, c, D, P) {
                                if (0 === c.length)
                                    return $e(d.root, d.root, d.root, D, P);
                                const $ = (function Ut(p) {
                                    if (
                                        'string' == typeof p[0] &&
                                        1 === p.length &&
                                        '/' === p[0]
                                    )
                                        return new Et(!0, 0, p);
                                    let d = 0,
                                        c = !1;
                                    const D = p.reduce((P, $, ie) => {
                                        if ('object' == typeof $ && null != $) {
                                            if ($.outlets) {
                                                const ve = {};
                                                return (
                                                    Ke($.outlets, (Xe, it) => {
                                                        ve[it] =
                                                            'string' ==
                                                            typeof Xe
                                                                ? Xe.split('/')
                                                                : Xe;
                                                    }),
                                                    [...P, { outlets: ve }]
                                                );
                                            }
                                            if ($.segmentPath)
                                                return [...P, $.segmentPath];
                                        }
                                        return 'string' != typeof $
                                            ? [...P, $]
                                            : 0 === ie
                                            ? ($.split('/').forEach(
                                                  (ve, Xe) => {
                                                      (0 == Xe && '.' === ve) ||
                                                          (0 == Xe && '' === ve
                                                              ? (c = !0)
                                                              : '..' === ve
                                                              ? d++
                                                              : '' != ve &&
                                                                P.push(ve));
                                                  }
                                              ),
                                              P)
                                            : [...P, $];
                                    }, []);
                                    return new Et(c, d, D);
                                })(c);
                                if ($.toRoot())
                                    return $e(
                                        d.root,
                                        d.root,
                                        new se([], {}),
                                        D,
                                        P
                                    );
                                const ie = (function mr(p, d, c) {
                                        if (p.isAbsolute)
                                            return new On(d.root, !0, 0);
                                        if (-1 === c.snapshot._lastPathIndex) {
                                            const $ = c.snapshot._urlSegment;
                                            return new On($, $ === d.root, 0);
                                        }
                                        const D = Pe(p.commands[0]) ? 0 : 1;
                                        return (function Rn(p, d, c) {
                                            let D = p,
                                                P = d,
                                                $ = c;
                                            for (; $ > P; ) {
                                                if (
                                                    (($ -= P),
                                                    (D = D.parent),
                                                    !D)
                                                )
                                                    throw new Error(
                                                        "Invalid number of '../'"
                                                    );
                                                P = D.segments.length;
                                            }
                                            return new On(D, !1, P - $);
                                        })(
                                            c.snapshot._urlSegment,
                                            c.snapshot._lastPathIndex + D,
                                            p.numberOfDoubleDots
                                        );
                                    })($, d, p),
                                    ve = ie.processChildren
                                        ? Br(
                                              ie.segmentGroup,
                                              ie.index,
                                              $.commands
                                          )
                                        : _i(
                                              ie.segmentGroup,
                                              ie.index,
                                              $.commands
                                          );
                                return $e(d.root, ie.segmentGroup, ve, D, P);
                            })(
                                it,
                                this.currentUrlTree,
                                c,
                                dt,
                                null != Dt ? Dt : null
                            )
                        );
                    }
                    navigateByUrl(c, D = { skipLocationChange: !1 }) {
                        const P = zr(c) ? c : this.parseUrl(c),
                            $ = this.urlHandlingStrategy.merge(
                                P,
                                this.rawUrlTree
                            );
                        return this.scheduleNavigation(
                            $,
                            'imperative',
                            null,
                            D
                        );
                    }
                    navigate(c, D = { skipLocationChange: !1 }) {
                        return (
                            (function Dr(p) {
                                for (let d = 0; d < p.length; d++) {
                                    const c = p[d];
                                    if (null == c)
                                        throw new Error(
                                            `The requested path contains ${c} segment at index ${d}`
                                        );
                                }
                            })(c),
                            this.navigateByUrl(this.createUrlTree(c, D), D)
                        );
                    }
                    serializeUrl(c) {
                        return this.urlSerializer.serialize(c);
                    }
                    parseUrl(c) {
                        let D;
                        try {
                            D = this.urlSerializer.parse(c);
                        } catch (P) {
                            D = this.malformedUriErrorHandler(
                                P,
                                this.urlSerializer,
                                c
                            );
                        }
                        return D;
                    }
                    isActive(c, D) {
                        let P;
                        if (
                            ((P =
                                !0 === D
                                    ? Object.assign({}, Es)
                                    : !1 === D
                                    ? Object.assign({}, Ds)
                                    : D),
                            zr(c))
                        )
                            return et(this.currentUrlTree, c, P);
                        const $ = this.parseUrl(c);
                        return et(this.currentUrlTree, $, P);
                    }
                    removeEmptyProps(c) {
                        return Object.keys(c).reduce((D, P) => {
                            const $ = c[P];
                            return null != $ && (D[P] = $), D;
                        }, {});
                    }
                    processNavigations() {
                        this.navigations.subscribe(
                            (c) => {
                                (this.navigated = !0),
                                    (this.lastSuccessfulId = c.id),
                                    (this.currentPageId = c.targetPageId),
                                    this.events.next(
                                        new xt(
                                            c.id,
                                            this.serializeUrl(c.extractedUrl),
                                            this.serializeUrl(
                                                this.currentUrlTree
                                            )
                                        )
                                    ),
                                    (this.lastSuccessfulNavigation =
                                        this.currentNavigation),
                                    c.resolve(!0);
                            },
                            (c) => {
                                this.console.warn(
                                    `Unhandled Navigation Error: ${c}`
                                );
                            }
                        );
                    }
                    scheduleNavigation(c, D, P, $, ie) {
                        var ve, Xe;
                        if (this.disposed) return Promise.resolve(!1);
                        let it, Dt, dt;
                        ie
                            ? ((it = ie.resolve),
                              (Dt = ie.reject),
                              (dt = ie.promise))
                            : (dt = new Promise((Tr, lr) => {
                                  (it = Tr), (Dt = lr);
                              }));
                        const Yt = ++this.navigationId;
                        let en;
                        return (
                            'computed' === this.canceledNavigationResolution
                                ? (0 === this.currentPageId &&
                                      (P = this.location.getState()),
                                  (en =
                                      P && P.ɵrouterPageId
                                          ? P.ɵrouterPageId
                                          : $.replaceUrl || $.skipLocationChange
                                          ? null !==
                                                (ve = this.browserPageId) &&
                                            void 0 !== ve
                                              ? ve
                                              : 0
                                          : (null !==
                                                (Xe = this.browserPageId) &&
                                            void 0 !== Xe
                                                ? Xe
                                                : 0) + 1))
                                : (en = 0),
                            this.setTransition({
                                id: Yt,
                                targetPageId: en,
                                source: D,
                                restoredState: P,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.rawUrlTree,
                                rawUrl: c,
                                extras: $,
                                resolve: it,
                                reject: Dt,
                                promise: dt,
                                currentSnapshot: this.routerState.snapshot,
                                currentRouterState: this.routerState,
                            }),
                            dt.catch((Tr) => Promise.reject(Tr))
                        );
                    }
                    setBrowserUrl(c, D) {
                        const P = this.urlSerializer.serialize(c),
                            $ = Object.assign(
                                Object.assign({}, D.extras.state),
                                this.generateNgRouterState(D.id, D.targetPageId)
                            );
                        this.location.isCurrentPathEqualTo(P) ||
                        D.extras.replaceUrl
                            ? this.location.replaceState(P, '', $)
                            : this.location.go(P, '', $);
                    }
                    restoreHistory(c, D = !1) {
                        var P, $;
                        if ('computed' === this.canceledNavigationResolution) {
                            const ie = this.currentPageId - c.targetPageId;
                            ('popstate' !== c.source &&
                                'eager' !== this.urlUpdateStrategy &&
                                this.currentUrlTree !==
                                    (null === (P = this.currentNavigation) ||
                                    void 0 === P
                                        ? void 0
                                        : P.finalUrl)) ||
                            0 === ie
                                ? this.currentUrlTree ===
                                      (null === ($ = this.currentNavigation) ||
                                      void 0 === $
                                          ? void 0
                                          : $.finalUrl) &&
                                  0 === ie &&
                                  (this.resetState(c),
                                  (this.browserUrlTree = c.currentUrlTree),
                                  this.resetUrlToCurrentUrlTree())
                                : this.location.historyGo(ie);
                        } else
                            'replace' === this.canceledNavigationResolution &&
                                (D && this.resetState(c),
                                this.resetUrlToCurrentUrlTree());
                    }
                    resetState(c) {
                        (this.routerState = c.currentRouterState),
                            (this.currentUrlTree = c.currentUrlTree),
                            (this.rawUrlTree = this.urlHandlingStrategy.merge(
                                this.currentUrlTree,
                                c.rawUrl
                            ));
                    }
                    resetUrlToCurrentUrlTree() {
                        this.location.replaceState(
                            this.urlSerializer.serialize(this.rawUrlTree),
                            '',
                            this.generateNgRouterState(
                                this.lastSuccessfulId,
                                this.currentPageId
                            )
                        );
                    }
                    cancelNavigationTransition(c, D) {
                        const P = new Qt(
                            c.id,
                            this.serializeUrl(c.extractedUrl),
                            D
                        );
                        this.triggerEvent(P), c.resolve(!1);
                    }
                    generateNgRouterState(c, D) {
                        return 'computed' === this.canceledNavigationResolution
                            ? { navigationId: c, ɵrouterPageId: D }
                            : { navigationId: c };
                    }
                }
                return (
                    (p.ɵfac = function (c) {
                        s.$Z();
                    }),
                    (p.ɵprov = s.Yz7({ token: p, factory: p.ɵfac })),
                    p
                );
            })();
            function ns(p) {
                return 'imperative' !== p;
            }
            let Cs = (() => {
                    class p {
                        constructor(c, D, P, $, ie) {
                            (this.router = c),
                                (this.route = D),
                                (this.tabIndexAttribute = P),
                                (this.renderer = $),
                                (this.el = ie),
                                (this.commands = null),
                                (this.onChanges = new re.x()),
                                this.setTabIndexIfNotOnNativeEl('0');
                        }
                        setTabIndexIfNotOnNativeEl(c) {
                            if (null != this.tabIndexAttribute) return;
                            const D = this.renderer,
                                P = this.el.nativeElement;
                            null !== c
                                ? D.setAttribute(P, 'tabindex', c)
                                : D.removeAttribute(P, 'tabindex');
                        }
                        ngOnChanges(c) {
                            this.onChanges.next(this);
                        }
                        set routerLink(c) {
                            null != c
                                ? ((this.commands = Array.isArray(c) ? c : [c]),
                                  this.setTabIndexIfNotOnNativeEl('0'))
                                : ((this.commands = null),
                                  this.setTabIndexIfNotOnNativeEl(null));
                        }
                        onClick() {
                            if (null === this.urlTree) return !0;
                            const c = {
                                skipLocationChange: fi(this.skipLocationChange),
                                replaceUrl: fi(this.replaceUrl),
                                state: this.state,
                            };
                            return (
                                this.router.navigateByUrl(this.urlTree, c), !0
                            );
                        }
                        get urlTree() {
                            return null === this.commands
                                ? null
                                : this.router.createUrlTree(this.commands, {
                                      relativeTo:
                                          void 0 !== this.relativeTo
                                              ? this.relativeTo
                                              : this.route,
                                      queryParams: this.queryParams,
                                      fragment: this.fragment,
                                      queryParamsHandling:
                                          this.queryParamsHandling,
                                      preserveFragment: fi(
                                          this.preserveFragment
                                      ),
                                  });
                        }
                    }
                    return (
                        (p.ɵfac = function (c) {
                            return new (c || p)(
                                s.Y36(Mr),
                                s.Y36(Ln),
                                s.$8M('tabindex'),
                                s.Y36(s.Qsj),
                                s.Y36(s.SBq)
                            );
                        }),
                        (p.ɵdir = s.lG2({
                            type: p,
                            selectors: [
                                ['', 'routerLink', '', 5, 'a', 5, 'area'],
                            ],
                            hostBindings: function (c, D) {
                                1 & c &&
                                    s.NdJ('click', function () {
                                        return D.onClick();
                                    });
                            },
                            inputs: {
                                queryParams: 'queryParams',
                                fragment: 'fragment',
                                queryParamsHandling: 'queryParamsHandling',
                                preserveFragment: 'preserveFragment',
                                skipLocationChange: 'skipLocationChange',
                                replaceUrl: 'replaceUrl',
                                state: 'state',
                                relativeTo: 'relativeTo',
                                routerLink: 'routerLink',
                            },
                            features: [s.TTD],
                        })),
                        p
                    );
                })(),
                ai = (() => {
                    class p {
                        constructor(c, D, P) {
                            (this.router = c),
                                (this.route = D),
                                (this.locationStrategy = P),
                                (this.commands = null),
                                (this.href = null),
                                (this.onChanges = new re.x()),
                                (this.subscription = c.events.subscribe(($) => {
                                    $ instanceof xt &&
                                        this.updateTargetUrlAndHref();
                                }));
                        }
                        set routerLink(c) {
                            this.commands =
                                null != c ? (Array.isArray(c) ? c : [c]) : null;
                        }
                        ngOnChanges(c) {
                            this.updateTargetUrlAndHref(),
                                this.onChanges.next(this);
                        }
                        ngOnDestroy() {
                            this.subscription.unsubscribe();
                        }
                        onClick(c, D, P, $, ie) {
                            if (
                                0 !== c ||
                                D ||
                                P ||
                                $ ||
                                ie ||
                                ('string' == typeof this.target &&
                                    '_self' != this.target) ||
                                null === this.urlTree
                            )
                                return !0;
                            const ve = {
                                skipLocationChange: fi(this.skipLocationChange),
                                replaceUrl: fi(this.replaceUrl),
                                state: this.state,
                            };
                            return (
                                this.router.navigateByUrl(this.urlTree, ve), !1
                            );
                        }
                        updateTargetUrlAndHref() {
                            this.href =
                                null !== this.urlTree
                                    ? this.locationStrategy.prepareExternalUrl(
                                          this.router.serializeUrl(this.urlTree)
                                      )
                                    : null;
                        }
                        get urlTree() {
                            return null === this.commands
                                ? null
                                : this.router.createUrlTree(this.commands, {
                                      relativeTo:
                                          void 0 !== this.relativeTo
                                              ? this.relativeTo
                                              : this.route,
                                      queryParams: this.queryParams,
                                      fragment: this.fragment,
                                      queryParamsHandling:
                                          this.queryParamsHandling,
                                      preserveFragment: fi(
                                          this.preserveFragment
                                      ),
                                  });
                        }
                    }
                    return (
                        (p.ɵfac = function (c) {
                            return new (c || p)(
                                s.Y36(Mr),
                                s.Y36(Ln),
                                s.Y36(At.S$)
                            );
                        }),
                        (p.ɵdir = s.lG2({
                            type: p,
                            selectors: [
                                ['a', 'routerLink', ''],
                                ['area', 'routerLink', ''],
                            ],
                            hostVars: 2,
                            hostBindings: function (c, D) {
                                1 & c &&
                                    s.NdJ('click', function ($) {
                                        return D.onClick(
                                            $.button,
                                            $.ctrlKey,
                                            $.shiftKey,
                                            $.altKey,
                                            $.metaKey
                                        );
                                    }),
                                    2 & c &&
                                        s.uIk('target', D.target)(
                                            'href',
                                            D.href,
                                            s.LSH
                                        );
                            },
                            inputs: {
                                target: 'target',
                                queryParams: 'queryParams',
                                fragment: 'fragment',
                                queryParamsHandling: 'queryParamsHandling',
                                preserveFragment: 'preserveFragment',
                                skipLocationChange: 'skipLocationChange',
                                replaceUrl: 'replaceUrl',
                                state: 'state',
                                relativeTo: 'relativeTo',
                                routerLink: 'routerLink',
                            },
                            features: [s.TTD],
                        })),
                        p
                    );
                })();
            function fi(p) {
                return '' === p || !!p;
            }
            let bs = (() => {
                class p {
                    constructor(c, D, P, $, ie, ve) {
                        (this.router = c),
                            (this.element = D),
                            (this.renderer = P),
                            (this.cdr = $),
                            (this.link = ie),
                            (this.linkWithHref = ve),
                            (this.classes = []),
                            (this.isActive = !1),
                            (this.routerLinkActiveOptions = { exact: !1 }),
                            (this.isActiveChange = new s.vpe()),
                            (this.routerEventsSubscription = c.events.subscribe(
                                (Xe) => {
                                    Xe instanceof xt && this.update();
                                }
                            ));
                    }
                    ngAfterContentInit() {
                        (0, he.of)(
                            this.links.changes,
                            this.linksWithHrefs.changes,
                            (0, he.of)(null)
                        )
                            .pipe((0, nt.J)())
                            .subscribe((c) => {
                                this.update(),
                                    this.subscribeToEachLinkOnChanges();
                            });
                    }
                    subscribeToEachLinkOnChanges() {
                        var c;
                        null === (c = this.linkInputChangesSubscription) ||
                            void 0 === c ||
                            c.unsubscribe();
                        const D = [
                            ...this.links.toArray(),
                            ...this.linksWithHrefs.toArray(),
                            this.link,
                            this.linkWithHref,
                        ]
                            .filter((P) => !!P)
                            .map((P) => P.onChanges);
                        this.linkInputChangesSubscription = (0, k.D)(D)
                            .pipe((0, nt.J)())
                            .subscribe((P) => {
                                this.isActive !==
                                    this.isLinkActive(this.router)(P) &&
                                    this.update();
                            });
                    }
                    set routerLinkActive(c) {
                        const D = Array.isArray(c) ? c : c.split(' ');
                        this.classes = D.filter((P) => !!P);
                    }
                    ngOnChanges(c) {
                        this.update();
                    }
                    ngOnDestroy() {
                        var c;
                        this.routerEventsSubscription.unsubscribe(),
                            null === (c = this.linkInputChangesSubscription) ||
                                void 0 === c ||
                                c.unsubscribe();
                    }
                    update() {
                        !this.links ||
                            !this.linksWithHrefs ||
                            !this.router.navigated ||
                            Promise.resolve().then(() => {
                                const c = this.hasActiveLinks();
                                this.isActive !== c &&
                                    ((this.isActive = c),
                                    this.cdr.markForCheck(),
                                    this.classes.forEach((D) => {
                                        c
                                            ? this.renderer.addClass(
                                                  this.element.nativeElement,
                                                  D
                                              )
                                            : this.renderer.removeClass(
                                                  this.element.nativeElement,
                                                  D
                                              );
                                    }),
                                    this.isActiveChange.emit(c));
                            });
                    }
                    isLinkActive(c) {
                        const D = (function ao(p) {
                            return !!p.paths;
                        })(this.routerLinkActiveOptions)
                            ? this.routerLinkActiveOptions
                            : this.routerLinkActiveOptions.exact || !1;
                        return (P) => !!P.urlTree && c.isActive(P.urlTree, D);
                    }
                    hasActiveLinks() {
                        const c = this.isLinkActive(this.router);
                        return (
                            (this.link && c(this.link)) ||
                            (this.linkWithHref && c(this.linkWithHref)) ||
                            this.links.some(c) ||
                            this.linksWithHrefs.some(c)
                        );
                    }
                }
                return (
                    (p.ɵfac = function (c) {
                        return new (c || p)(
                            s.Y36(Mr),
                            s.Y36(s.SBq),
                            s.Y36(s.Qsj),
                            s.Y36(s.sBO),
                            s.Y36(Cs, 8),
                            s.Y36(ai, 8)
                        );
                    }),
                    (p.ɵdir = s.lG2({
                        type: p,
                        selectors: [['', 'routerLinkActive', '']],
                        contentQueries: function (c, D, P) {
                            if (
                                (1 & c && (s.Suo(P, Cs, 5), s.Suo(P, ai, 5)),
                                2 & c)
                            ) {
                                let $;
                                s.iGM(($ = s.CRH())) && (D.links = $),
                                    s.iGM(($ = s.CRH())) &&
                                        (D.linksWithHrefs = $);
                            }
                        },
                        inputs: {
                            routerLinkActiveOptions: 'routerLinkActiveOptions',
                            routerLinkActive: 'routerLinkActive',
                        },
                        outputs: { isActiveChange: 'isActiveChange' },
                        exportAs: ['routerLinkActive'],
                        features: [s.TTD],
                    })),
                    p
                );
            })();
            class Ai {}
            class a {
                preload(d, c) {
                    return (0, he.of)(null);
                }
            }
            let u = (() => {
                    class p {
                        constructor(c, D, P, $) {
                            (this.router = c),
                                (this.injector = P),
                                (this.preloadingStrategy = $),
                                (this.loader = new ys(
                                    P,
                                    D,
                                    (Xe) => c.triggerEvent(new vn(Xe)),
                                    (Xe) => c.triggerEvent(new Dn(Xe))
                                ));
                        }
                        setUpPreloading() {
                            this.subscription = this.router.events
                                .pipe(
                                    (0, ne.h)((c) => c instanceof xt),
                                    (0, Pt.b)(() => this.preload())
                                )
                                .subscribe(() => {});
                        }
                        preload() {
                            const c = this.injector.get(s.h0i);
                            return this.processRoutes(c, this.router.config);
                        }
                        ngOnDestroy() {
                            this.subscription &&
                                this.subscription.unsubscribe();
                        }
                        processRoutes(c, D) {
                            const P = [];
                            for (const $ of D)
                                if (
                                    $.loadChildren &&
                                    !$.canLoad &&
                                    $._loadedConfig
                                ) {
                                    const ie = $._loadedConfig;
                                    P.push(
                                        this.processRoutes(ie.module, ie.routes)
                                    );
                                } else
                                    $.loadChildren && !$.canLoad
                                        ? P.push(this.preloadConfig(c, $))
                                        : $.children &&
                                          P.push(
                                              this.processRoutes(c, $.children)
                                          );
                            return (0, k.D)(P).pipe(
                                (0, nt.J)(),
                                (0, pt.U)(($) => {})
                            );
                        }
                        preloadConfig(c, D) {
                            return this.preloadingStrategy.preload(D, () =>
                                (D._loadedConfig
                                    ? (0, he.of)(D._loadedConfig)
                                    : this.loader.load(c.injector, D)
                                ).pipe(
                                    (0, mt.z)(
                                        ($) => (
                                            (D._loadedConfig = $),
                                            this.processRoutes(
                                                $.module,
                                                $.routes
                                            )
                                        )
                                    )
                                )
                            );
                        }
                    }
                    return (
                        (p.ɵfac = function (c) {
                            return new (c || p)(
                                s.LFG(Mr),
                                s.LFG(s.Sil),
                                s.LFG(s.zs3),
                                s.LFG(Ai)
                            );
                        }),
                        (p.ɵprov = s.Yz7({ token: p, factory: p.ɵfac })),
                        p
                    );
                })(),
                y = (() => {
                    class p {
                        constructor(c, D, P = {}) {
                            (this.router = c),
                                (this.viewportScroller = D),
                                (this.options = P),
                                (this.lastId = 0),
                                (this.lastSource = 'imperative'),
                                (this.restoredId = 0),
                                (this.store = {}),
                                (P.scrollPositionRestoration =
                                    P.scrollPositionRestoration || 'disabled'),
                                (P.anchorScrolling =
                                    P.anchorScrolling || 'disabled');
                        }
                        init() {
                            'disabled' !==
                                this.options.scrollPositionRestoration &&
                                this.viewportScroller.setHistoryScrollRestoration(
                                    'manual'
                                ),
                                (this.routerEventsSubscription =
                                    this.createScrollEvents()),
                                (this.scrollEventsSubscription =
                                    this.consumeScrollEvents());
                        }
                        createScrollEvents() {
                            return this.router.events.subscribe((c) => {
                                c instanceof st
                                    ? ((this.store[this.lastId] =
                                          this.viewportScroller.getScrollPosition()),
                                      (this.lastSource = c.navigationTrigger),
                                      (this.restoredId = c.restoredState
                                          ? c.restoredState.navigationId
                                          : 0))
                                    : c instanceof xt &&
                                      ((this.lastId = c.id),
                                      this.scheduleScrollEvent(
                                          c,
                                          this.router.parseUrl(
                                              c.urlAfterRedirects
                                          ).fragment
                                      ));
                            });
                        }
                        consumeScrollEvents() {
                            return this.router.events.subscribe((c) => {
                                c instanceof Ae &&
                                    (c.position
                                        ? 'top' ===
                                          this.options.scrollPositionRestoration
                                            ? this.viewportScroller.scrollToPosition(
                                                  [0, 0]
                                              )
                                            : 'enabled' ===
                                                  this.options
                                                      .scrollPositionRestoration &&
                                              this.viewportScroller.scrollToPosition(
                                                  c.position
                                              )
                                        : c.anchor &&
                                          'enabled' ===
                                              this.options.anchorScrolling
                                        ? this.viewportScroller.scrollToAnchor(
                                              c.anchor
                                          )
                                        : 'disabled' !==
                                              this.options
                                                  .scrollPositionRestoration &&
                                          this.viewportScroller.scrollToPosition(
                                              [0, 0]
                                          ));
                            });
                        }
                        scheduleScrollEvent(c, D) {
                            this.router.triggerEvent(
                                new Ae(
                                    c,
                                    'popstate' === this.lastSource
                                        ? this.store[this.restoredId]
                                        : null,
                                    D
                                )
                            );
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription &&
                                this.routerEventsSubscription.unsubscribe(),
                                this.scrollEventsSubscription &&
                                    this.scrollEventsSubscription.unsubscribe();
                        }
                    }
                    return (
                        (p.ɵfac = function (c) {
                            s.$Z();
                        }),
                        (p.ɵprov = s.Yz7({ token: p, factory: p.ɵfac })),
                        p
                    );
                })();
            const Q = new s.OlP('ROUTER_CONFIGURATION'),
                me = new s.OlP('ROUTER_FORROOT_GUARD'),
                ye = [
                    At.Ye,
                    { provide: Vt, useClass: Sn },
                    {
                        provide: Mr,
                        useFactory: function qt(
                            p,
                            d,
                            c,
                            D,
                            P,
                            $,
                            ie = {},
                            ve,
                            Xe
                        ) {
                            const it = new Mr(null, p, d, c, D, P, q($));
                            return (
                                ve && (it.urlHandlingStrategy = ve),
                                Xe && (it.routeReuseStrategy = Xe),
                                (function dn(p, d) {
                                    p.errorHandler &&
                                        (d.errorHandler = p.errorHandler),
                                        p.malformedUriErrorHandler &&
                                            (d.malformedUriErrorHandler =
                                                p.malformedUriErrorHandler),
                                        p.onSameUrlNavigation &&
                                            (d.onSameUrlNavigation =
                                                p.onSameUrlNavigation),
                                        p.paramsInheritanceStrategy &&
                                            (d.paramsInheritanceStrategy =
                                                p.paramsInheritanceStrategy),
                                        p.relativeLinkResolution &&
                                            (d.relativeLinkResolution =
                                                p.relativeLinkResolution),
                                        p.urlUpdateStrategy &&
                                            (d.urlUpdateStrategy =
                                                p.urlUpdateStrategy),
                                        p.canceledNavigationResolution &&
                                            (d.canceledNavigationResolution =
                                                p.canceledNavigationResolution);
                                })(ie, it),
                                ie.enableTracing &&
                                    it.events.subscribe((Dt) => {
                                        var dt, Yt;
                                        null === (dt = console.group) ||
                                            void 0 === dt ||
                                            dt.call(
                                                console,
                                                `Router Event: ${Dt.constructor.name}`
                                            ),
                                            console.log(Dt.toString()),
                                            console.log(Dt),
                                            null === (Yt = console.groupEnd) ||
                                                void 0 === Yt ||
                                                Yt.call(console);
                                    }),
                                it
                            );
                        },
                        deps: [
                            Vt,
                            ui,
                            At.Ye,
                            s.zs3,
                            s.Sil,
                            hr,
                            Q,
                            [class Jo {}, new s.FiY()],
                            [class Vs {}, new s.FiY()],
                        ],
                    },
                    ui,
                    {
                        provide: Ln,
                        useFactory: function nr(p) {
                            return p.routerState.root;
                        },
                        deps: [Mr],
                    },
                    u,
                    a,
                    class M {
                        preload(d, c) {
                            return c().pipe((0, gt.K)(() => (0, he.of)(null)));
                        }
                    },
                    { provide: Q, useValue: { enableTracing: !1 } },
                ];
            function Ue() {
                return new s.PXZ('Router', Mr);
            }
            let ot = (() => {
                class p {
                    constructor(c, D) {}
                    static forRoot(c, D) {
                        return {
                            ngModule: p,
                            providers: [
                                ye,
                                pn(c),
                                {
                                    provide: me,
                                    useFactory: _n,
                                    deps: [[Mr, new s.FiY(), new s.tp0()]],
                                },
                                { provide: Q, useValue: D || {} },
                                {
                                    provide: At.S$,
                                    useFactory: Ht,
                                    deps: [
                                        At.lw,
                                        [new s.tBr(At.mr), new s.FiY()],
                                        Q,
                                    ],
                                },
                                {
                                    provide: y,
                                    useFactory: Bt,
                                    deps: [Mr, At.EM, Q],
                                },
                                {
                                    provide: Ai,
                                    useExisting:
                                        D && D.preloadingStrategy
                                            ? D.preloadingStrategy
                                            : a,
                                },
                                { provide: s.PXZ, multi: !0, useFactory: Ue },
                                [
                                    _r,
                                    {
                                        provide: s.ip1,
                                        multi: !0,
                                        useFactory: Sr,
                                        deps: [_r],
                                    },
                                    { provide: br, useFactory: jr, deps: [_r] },
                                    {
                                        provide: s.tb,
                                        multi: !0,
                                        useExisting: br,
                                    },
                                ],
                            ],
                        };
                    }
                    static forChild(c) {
                        return { ngModule: p, providers: [pn(c)] };
                    }
                }
                return (
                    (p.ɵfac = function (c) {
                        return new (c || p)(s.LFG(me, 8), s.LFG(Mr, 8));
                    }),
                    (p.ɵmod = s.oAB({ type: p })),
                    (p.ɵinj = s.cJS({})),
                    p
                );
            })();
            function Bt(p, d, c) {
                return (
                    c.scrollOffset && d.setOffset(c.scrollOffset),
                    new y(p, d, c)
                );
            }
            function Ht(p, d, c = {}) {
                return c.useHash ? new At.Do(p, d) : new At.b0(p, d);
            }
            function _n(p) {
                return 'guarded';
            }
            function pn(p) {
                return [
                    { provide: s.deG, multi: !0, useValue: p },
                    { provide: hr, multi: !0, useValue: p },
                ];
            }
            let _r = (() => {
                class p {
                    constructor(c) {
                        (this.injector = c),
                            (this.initNavigation = !1),
                            (this.destroyed = !1),
                            (this.resultOfPreactivationDone = new re.x());
                    }
                    appInitializer() {
                        return this.injector
                            .get(At.V_, Promise.resolve(null))
                            .then(() => {
                                if (this.destroyed) return Promise.resolve(!0);
                                let D = null;
                                const P = new Promise((ve) => (D = ve)),
                                    $ = this.injector.get(Mr),
                                    ie = this.injector.get(Q);
                                return (
                                    'disabled' === ie.initialNavigation
                                        ? ($.setUpLocationChangeListener(),
                                          D(!0))
                                        : 'enabled' === ie.initialNavigation ||
                                          'enabledBlocking' ===
                                              ie.initialNavigation
                                        ? (($.hooks.afterPreactivation = () =>
                                              this.initNavigation
                                                  ? (0, he.of)(null)
                                                  : ((this.initNavigation = !0),
                                                    D(!0),
                                                    this
                                                        .resultOfPreactivationDone)),
                                          $.initialNavigation())
                                        : D(!0),
                                    P
                                );
                            });
                    }
                    bootstrapListener(c) {
                        const D = this.injector.get(Q),
                            P = this.injector.get(u),
                            $ = this.injector.get(y),
                            ie = this.injector.get(Mr),
                            ve = this.injector.get(s.z2F);
                        c === ve.components[0] &&
                            (('enabledNonBlocking' === D.initialNavigation ||
                                void 0 === D.initialNavigation) &&
                                ie.initialNavigation(),
                            P.setUpPreloading(),
                            $.init(),
                            ie.resetRootComponentType(ve.componentTypes[0]),
                            this.resultOfPreactivationDone.next(null),
                            this.resultOfPreactivationDone.complete());
                    }
                    ngOnDestroy() {
                        this.destroyed = !0;
                    }
                }
                return (
                    (p.ɵfac = function (c) {
                        return new (c || p)(s.LFG(s.zs3));
                    }),
                    (p.ɵprov = s.Yz7({ token: p, factory: p.ɵfac })),
                    p
                );
            })();
            function Sr(p) {
                return p.appInitializer.bind(p);
            }
            function jr(p) {
                return p.bootstrapListener.bind(p);
            }
            const br = new s.OlP('Router Initializer');
        },
        3942: (de, Y, f) => {
            f.d(Y, { Z: () => Re });
            var s = f(2090),
                m = f(4859),
                L = f(9681),
                k = f(1877);
            class T {
                constructor(pe, J) {
                    (this._delegate = pe),
                        (this.firebase = J),
                        (0, L._addComponent)(
                            pe,
                            new m.wA('app-compat', () => this, 'PUBLIC')
                        ),
                        (this.container = pe.container);
                }
                get automaticDataCollectionEnabled() {
                    return this._delegate.automaticDataCollectionEnabled;
                }
                set automaticDataCollectionEnabled(pe) {
                    this._delegate.automaticDataCollectionEnabled = pe;
                }
                get name() {
                    return this._delegate.name;
                }
                get options() {
                    return this._delegate.options;
                }
                delete() {
                    return new Promise((pe) => {
                        this._delegate.checkDestroyed(), pe();
                    }).then(
                        () => (
                            this.firebase.INTERNAL.removeApp(this.name),
                            (0, L.deleteApp)(this._delegate)
                        )
                    );
                }
                _getService(pe, J = L._DEFAULT_ENTRY_NAME) {
                    var Me;
                    this._delegate.checkDestroyed();
                    const he = this._delegate.container.getProvider(pe);
                    return (
                        !he.isInitialized() &&
                            'EXPLICIT' ===
                                (null === (Me = he.getComponent()) ||
                                void 0 === Me
                                    ? void 0
                                    : Me.instantiationMode) &&
                            he.initialize(),
                        he.getImmediate({ identifier: J })
                    );
                }
                _removeServiceInstance(pe, J = L._DEFAULT_ENTRY_NAME) {
                    this._delegate.container.getProvider(pe).clearInstance(J);
                }
                _addComponent(pe) {
                    (0, L._addComponent)(this._delegate, pe);
                }
                _addOrOverwriteComponent(pe) {
                    (0, L._addOrOverwriteComponent)(this._delegate, pe);
                }
                toJSON() {
                    return {
                        name: this.name,
                        automaticDataCollectionEnabled:
                            this.automaticDataCollectionEnabled,
                        options: this.options,
                    };
                }
            }
            const O = new s.LL('app-compat', 'Firebase', {
                    'no-app':
                        "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                    'invalid-app-argument':
                        'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                }),
                w = (function U() {
                    const Oe = (function N(Oe) {
                        const pe = {},
                            J = {
                                __esModule: !0,
                                initializeApp: function De(oe, re = {}) {
                                    const ne = L.initializeApp(oe, re);
                                    if ((0, s.r3)(pe, ne.name))
                                        return pe[ne.name];
                                    const we = new Oe(ne, J);
                                    return (pe[ne.name] = we), we;
                                },
                                app: he,
                                registerVersion: L.registerVersion,
                                setLogLevel: L.setLogLevel,
                                onLog: L.onLog,
                                apps: null,
                                SDK_VERSION: L.SDK_VERSION,
                                INTERNAL: {
                                    registerComponent: function te(oe) {
                                        const re = oe.name,
                                            ne = re.replace('-compat', '');
                                        if (
                                            L._registerComponent(oe) &&
                                            'PUBLIC' === oe.type
                                        ) {
                                            const we = (Fe = he()) => {
                                                if ('function' != typeof Fe[ne])
                                                    throw O.create(
                                                        'invalid-app-argument',
                                                        { appName: re }
                                                    );
                                                return Fe[ne]();
                                            };
                                            void 0 !== oe.serviceProps &&
                                                (0, s.ZB)(we, oe.serviceProps),
                                                (J[ne] = we),
                                                (Oe.prototype[ne] = function (
                                                    ...Fe
                                                ) {
                                                    return this._getService
                                                        .bind(this, re)
                                                        .apply(
                                                            this,
                                                            oe.multipleInstances
                                                                ? Fe
                                                                : []
                                                        );
                                                });
                                        }
                                        return 'PUBLIC' === oe.type
                                            ? J[ne]
                                            : null;
                                    },
                                    removeApp: function Me(oe) {
                                        delete pe[oe];
                                    },
                                    useAsService: function G(oe, re) {
                                        return 'serverAuth' === re ? null : re;
                                    },
                                    modularAPIs: L,
                                },
                            };
                        function he(oe) {
                            if (
                                !(0, s.r3)(
                                    pe,
                                    (oe = oe || L._DEFAULT_ENTRY_NAME)
                                )
                            )
                                throw O.create('no-app', { appName: oe });
                            return pe[oe];
                        }
                        return (
                            (J.default = J),
                            Object.defineProperty(J, 'apps', {
                                get: function R() {
                                    return Object.keys(pe).map((oe) => pe[oe]);
                                },
                            }),
                            (he.App = Oe),
                            J
                        );
                    })(T);
                    return (
                        (Oe.INTERNAL = Object.assign(
                            Object.assign({}, Oe.INTERNAL),
                            {
                                createFirebaseNamespace: U,
                                extendNamespace: function pe(J) {
                                    (0, s.ZB)(Oe, J);
                                },
                                createSubscribe: s.ne,
                                ErrorFactory: s.LL,
                                deepExtend: s.ZB,
                            }
                        )),
                        Oe
                    );
                })(),
                F = new k.Yd('@firebase/app-compat');
            if ((0, s.jU)() && void 0 !== self.firebase) {
                F.warn(
                    '\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  '
                );
                const Oe = self.firebase.SDK_VERSION;
                Oe &&
                    Oe.indexOf('LITE') >= 0 &&
                    F.warn(
                        '\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    '
                    );
            }
            const Re = w;
            !(function _e(Oe) {
                (0, L.registerVersion)('@firebase/app-compat', '0.1.26', Oe);
            })();
        },
        9681: (de, Y, f) => {
            f.r(Y),
                f.d(Y, {
                    FirebaseError: () => k.ZR,
                    SDK_VERSION: () => ln,
                    _DEFAULT_ENTRY_NAME: () => yt,
                    _addComponent: () => It,
                    _addOrOverwriteComponent: () => mt,
                    _apps: () => gt,
                    _clearComponents: () => He,
                    _components: () => Pt,
                    _getProvider: () => nt,
                    _registerComponent: () => $t,
                    _removeServiceInstance: () => At,
                    deleteApp: () => Nt,
                    getApp: () => rn,
                    getApps: () => gn,
                    initializeApp: () => Bn,
                    onLog: () => Dn,
                    registerVersion: () => vn,
                    setLogLevel: () => rr,
                });
            var s = f(5861),
                m = f(4859),
                L = f(1877),
                k = f(2090),
                T = f(8766);
            class S {
                constructor(Z) {
                    this.container = Z;
                }
                getPlatformInfoString() {
                    return this.container
                        .getProviders()
                        .map((be) => {
                            if (
                                (function O(ae) {
                                    const Z = ae.getComponent();
                                    return (
                                        'VERSION' ===
                                        (null == Z ? void 0 : Z.type)
                                    );
                                })(be)
                            ) {
                                const Ne = be.getImmediate();
                                return `${Ne.library}/${Ne.version}`;
                            }
                            return null;
                        })
                        .filter((be) => be)
                        .join(' ');
                }
            }
            const N = '@firebase/app',
                U = '0.7.25',
                w = new L.Yd('@firebase/app'),
                yt = '[DEFAULT]',
                Ot = {
                    [N]: 'fire-core',
                    '@firebase/app-compat': 'fire-core-compat',
                    '@firebase/analytics': 'fire-analytics',
                    '@firebase/analytics-compat': 'fire-analytics-compat',
                    '@firebase/app-check': 'fire-app-check',
                    '@firebase/app-check-compat': 'fire-app-check-compat',
                    '@firebase/auth': 'fire-auth',
                    '@firebase/auth-compat': 'fire-auth-compat',
                    '@firebase/database': 'fire-rtdb',
                    '@firebase/database-compat': 'fire-rtdb-compat',
                    '@firebase/functions': 'fire-fn',
                    '@firebase/functions-compat': 'fire-fn-compat',
                    '@firebase/installations': 'fire-iid',
                    '@firebase/installations-compat': 'fire-iid-compat',
                    '@firebase/messaging': 'fire-fcm',
                    '@firebase/messaging-compat': 'fire-fcm-compat',
                    '@firebase/performance': 'fire-perf',
                    '@firebase/performance-compat': 'fire-perf-compat',
                    '@firebase/remote-config': 'fire-rc',
                    '@firebase/remote-config-compat': 'fire-rc-compat',
                    '@firebase/storage': 'fire-gcs',
                    '@firebase/storage-compat': 'fire-gcs-compat',
                    '@firebase/firestore': 'fire-fst',
                    '@firebase/firestore-compat': 'fire-fst-compat',
                    'fire-js': 'fire-js',
                    firebase: 'fire-js-all',
                },
                gt = new Map(),
                Pt = new Map();
            function It(ae, Z) {
                try {
                    ae.container.addComponent(Z);
                } catch (be) {
                    w.debug(
                        `Component ${Z.name} failed to register with FirebaseApp ${ae.name}`,
                        be
                    );
                }
            }
            function mt(ae, Z) {
                ae.container.addOrOverwriteComponent(Z);
            }
            function $t(ae) {
                const Z = ae.name;
                if (Pt.has(Z))
                    return (
                        w.debug(
                            `There were multiple attempts to register component ${Z}.`
                        ),
                        !1
                    );
                Pt.set(Z, ae);
                for (const be of gt.values()) It(be, ae);
                return !0;
            }
            function nt(ae, Z) {
                const be = ae.container
                    .getProvider('heartbeat')
                    .getImmediate({ optional: !0 });
                return be && be.triggerHeartbeat(), ae.container.getProvider(Z);
            }
            function At(ae, Z, be = yt) {
                nt(ae, Z).clearInstance(be);
            }
            function He() {
                Pt.clear();
            }
            const xt = new k.LL('app', 'Firebase', {
                'no-app':
                    "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                'bad-app-name': "Illegal App name: '{$appName}",
                'duplicate-app':
                    "Firebase App named '{$appName}' already exists with different options or config",
                'app-deleted':
                    "Firebase App named '{$appName}' already deleted",
                'invalid-app-argument':
                    'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                'invalid-log-argument':
                    'First argument to `onLog` must be null or a function.',
                'storage-open':
                    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                'storage-get':
                    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                'storage-set':
                    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                'storage-delete':
                    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',
            });
            class Qt {
                constructor(Z, be, Ne) {
                    (this._isDeleted = !1),
                        (this._options = Object.assign({}, Z)),
                        (this._config = Object.assign({}, be)),
                        (this._name = be.name),
                        (this._automaticDataCollectionEnabled =
                            be.automaticDataCollectionEnabled),
                        (this._container = Ne),
                        this.container.addComponent(
                            new m.wA('app', () => this, 'PUBLIC')
                        );
                }
                get automaticDataCollectionEnabled() {
                    return (
                        this.checkDestroyed(),
                        this._automaticDataCollectionEnabled
                    );
                }
                set automaticDataCollectionEnabled(Z) {
                    this.checkDestroyed(),
                        (this._automaticDataCollectionEnabled = Z);
                }
                get name() {
                    return this.checkDestroyed(), this._name;
                }
                get options() {
                    return this.checkDestroyed(), this._options;
                }
                get config() {
                    return this.checkDestroyed(), this._config;
                }
                get container() {
                    return this._container;
                }
                get isDeleted() {
                    return this._isDeleted;
                }
                set isDeleted(Z) {
                    this._isDeleted = Z;
                }
                checkDestroyed() {
                    if (this.isDeleted)
                        throw xt.create('app-deleted', { appName: this._name });
                }
            }
            const ln = '9.8.2';
            function Bn(ae, Z = {}) {
                'object' != typeof Z && (Z = { name: Z });
                const be = Object.assign(
                        { name: yt, automaticDataCollectionEnabled: !1 },
                        Z
                    ),
                    Ne = be.name;
                if ('string' != typeof Ne || !Ne)
                    throw xt.create('bad-app-name', { appName: String(Ne) });
                const et = gt.get(Ne);
                if (et) {
                    if ((0, k.vZ)(ae, et.options) && (0, k.vZ)(be, et.config))
                        return et;
                    throw xt.create('duplicate-app', { appName: Ne });
                }
                const Ct = new m.H0(Ne);
                for (const Rt of Pt.values()) Ct.addComponent(Rt);
                const St = new Qt(ae, be, Ct);
                return gt.set(Ne, St), St;
            }
            function rn(ae = yt) {
                const Z = gt.get(ae);
                if (!Z) throw xt.create('no-app', { appName: ae });
                return Z;
            }
            function gn() {
                return Array.from(gt.values());
            }
            function Nt(ae) {
                return Un.apply(this, arguments);
            }
            function Un() {
                return (Un = (0, s.Z)(function* (ae) {
                    const Z = ae.name;
                    gt.has(Z) &&
                        (gt.delete(Z),
                        yield Promise.all(
                            ae.container.getProviders().map((be) => be.delete())
                        ),
                        (ae.isDeleted = !0));
                })).apply(this, arguments);
            }
            function vn(ae, Z, be) {
                var Ne;
                let et = null !== (Ne = Ot[ae]) && void 0 !== Ne ? Ne : ae;
                be && (et += `-${be}`);
                const Ct = et.match(/\s|\//),
                    St = Z.match(/\s|\//);
                if (Ct || St) {
                    const Rt = [
                        `Unable to register library "${et}" with version "${Z}":`,
                    ];
                    return (
                        Ct &&
                            Rt.push(
                                `library name "${et}" contains illegal characters (whitespace or "/")`
                            ),
                        Ct && St && Rt.push('and'),
                        St &&
                            Rt.push(
                                `version name "${Z}" contains illegal characters (whitespace or "/")`
                            ),
                        void w.warn(Rt.join(' '))
                    );
                }
                $t(
                    new m.wA(
                        `${et}-version`,
                        () => ({ library: et, version: Z }),
                        'VERSION'
                    )
                );
            }
            function Dn(ae, Z) {
                if (null !== ae && 'function' != typeof ae)
                    throw xt.create('invalid-log-argument');
                (0, L.Am)(ae, Z);
            }
            function rr(ae) {
                (0, L.Ub)(ae);
            }
            const ge = 'firebase-heartbeat-store';
            let Ae = null;
            function ze() {
                return (
                    Ae ||
                        (Ae = (0, T.X3)('firebase-heartbeat-database', 1, {
                            upgrade: (ae, Z) => {
                                0 === Z && ae.createObjectStore(ge);
                            },
                        }).catch((ae) => {
                            throw xt.create('storage-open', {
                                originalErrorMessage: ae.message,
                            });
                        })),
                    Ae
                );
            }
            function lt() {
                return (lt = (0, s.Z)(function* (ae) {
                    try {
                        return (yield ze())
                            .transaction(ge)
                            .objectStore(ge)
                            .get(Kt(ae));
                    } catch (Z) {
                        throw xt.create('storage-get', {
                            originalErrorMessage: Z.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function bt(ae, Z) {
                return mn.apply(this, arguments);
            }
            function mn() {
                return (mn = (0, s.Z)(function* (ae, Z) {
                    try {
                        const Ne = (yield ze()).transaction(ge, 'readwrite');
                        return yield Ne.objectStore(ge).put(Z, Kt(ae)), Ne.done;
                    } catch (be) {
                        throw xt.create('storage-set', {
                            originalErrorMessage: be.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function Kt(ae) {
                return `${ae.name}!${ae.options.appId}`;
            }
            class yn {
                constructor(Z) {
                    (this.container = Z), (this._heartbeatsCache = null);
                    const be = this.container.getProvider('app').getImmediate();
                    (this._storage = new ue(be)),
                        (this._heartbeatsCachePromise = this._storage
                            .read()
                            .then((Ne) => ((this._heartbeatsCache = Ne), Ne)));
                }
                triggerHeartbeat() {
                    var Z = this;
                    return (0, s.Z)(function* () {
                        const Ne = Z.container
                                .getProvider('platform-logger')
                                .getImmediate()
                                .getPlatformInfoString(),
                            et = Mn();
                        if (
                            (null === Z._heartbeatsCache &&
                                (Z._heartbeatsCache =
                                    yield Z._heartbeatsCachePromise),
                            Z._heartbeatsCache.lastSentHeartbeatDate !== et &&
                                !Z._heartbeatsCache.heartbeats.some(
                                    (Ct) => Ct.date === et
                                ))
                        )
                            return (
                                Z._heartbeatsCache.heartbeats.push({
                                    date: et,
                                    agent: Ne,
                                }),
                                (Z._heartbeatsCache.heartbeats =
                                    Z._heartbeatsCache.heartbeats.filter(
                                        (Ct) => {
                                            const St = new Date(
                                                Ct.date
                                            ).valueOf();
                                            return Date.now() - St <= 2592e6;
                                        }
                                    )),
                                Z._storage.overwrite(Z._heartbeatsCache)
                            );
                    })();
                }
                getHeartbeatsHeader() {
                    var Z = this;
                    return (0, s.Z)(function* () {
                        if (
                            (null === Z._heartbeatsCache &&
                                (yield Z._heartbeatsCachePromise),
                            null === Z._heartbeatsCache ||
                                0 === Z._heartbeatsCache.heartbeats.length)
                        )
                            return '';
                        const be = Mn(),
                            { heartbeatsToSend: Ne, unsentEntries: et } =
                                (function q(ae, Z = 1024) {
                                    const be = [];
                                    let Ne = ae.slice();
                                    for (const et of ae) {
                                        const Ct = be.find(
                                            (St) => St.agent === et.agent
                                        );
                                        if (Ct) {
                                            if (
                                                (Ct.dates.push(et.date),
                                                Ee(be) > Z)
                                            ) {
                                                Ct.dates.pop();
                                                break;
                                            }
                                        } else if (
                                            (be.push({
                                                agent: et.agent,
                                                dates: [et.date],
                                            }),
                                            Ee(be) > Z)
                                        ) {
                                            be.pop();
                                            break;
                                        }
                                        Ne = Ne.slice(1);
                                    }
                                    return {
                                        heartbeatsToSend: be,
                                        unsentEntries: Ne,
                                    };
                                })(Z._heartbeatsCache.heartbeats),
                            Ct = (0, k.L)(
                                JSON.stringify({ version: 2, heartbeats: Ne })
                            );
                        return (
                            (Z._heartbeatsCache.lastSentHeartbeatDate = be),
                            et.length > 0
                                ? ((Z._heartbeatsCache.heartbeats = et),
                                  yield Z._storage.overwrite(
                                      Z._heartbeatsCache
                                  ))
                                : ((Z._heartbeatsCache.heartbeats = []),
                                  Z._storage.overwrite(Z._heartbeatsCache)),
                            Ct
                        );
                    })();
                }
            }
            function Mn() {
                return new Date().toISOString().substring(0, 10);
            }
            class ue {
                constructor(Z) {
                    (this.app = Z),
                        (this._canUseIndexedDBPromise =
                            this.runIndexedDBEnvironmentCheck());
                }
                runIndexedDBEnvironmentCheck() {
                    return (0, s.Z)(function* () {
                        return (
                            !!(0, k.hl)() &&
                            (0, k.eu)()
                                .then(() => !0)
                                .catch(() => !1)
                        );
                    })();
                }
                read() {
                    var Z = this;
                    return (0, s.Z)(function* () {
                        return (
                            ((yield Z._canUseIndexedDBPromise) &&
                                (yield (function Ze(ae) {
                                    return lt.apply(this, arguments);
                                })(Z.app))) || { heartbeats: [] }
                        );
                    })();
                }
                overwrite(Z) {
                    var be = this;
                    return (0, s.Z)(function* () {
                        var Ne;
                        if (yield be._canUseIndexedDBPromise) {
                            const Ct = yield be.read();
                            return bt(be.app, {
                                lastSentHeartbeatDate:
                                    null !== (Ne = Z.lastSentHeartbeatDate) &&
                                    void 0 !== Ne
                                        ? Ne
                                        : Ct.lastSentHeartbeatDate,
                                heartbeats: Z.heartbeats,
                            });
                        }
                    })();
                }
                add(Z) {
                    var be = this;
                    return (0, s.Z)(function* () {
                        var Ne;
                        if (yield be._canUseIndexedDBPromise) {
                            const Ct = yield be.read();
                            return bt(be.app, {
                                lastSentHeartbeatDate:
                                    null !== (Ne = Z.lastSentHeartbeatDate) &&
                                    void 0 !== Ne
                                        ? Ne
                                        : Ct.lastSentHeartbeatDate,
                                heartbeats: [...Ct.heartbeats, ...Z.heartbeats],
                            });
                        }
                    })();
                }
            }
            function Ee(ae) {
                return (0, k.L)(JSON.stringify({ version: 2, heartbeats: ae }))
                    .length;
            }
            !(function Ke(ae) {
                $t(new m.wA('platform-logger', (Z) => new S(Z), 'PRIVATE')),
                    $t(new m.wA('heartbeat', (Z) => new yn(Z), 'PRIVATE')),
                    vn(N, U, ae),
                    vn(N, U, 'esm2017'),
                    vn('fire-js', '');
            })('');
        },
        4859: (de, Y, f) => {
            f.d(Y, { H0: () => N, wA: () => L });
            var s = f(5861),
                m = f(2090);
            class L {
                constructor(w, F, K) {
                    (this.name = w),
                        (this.instanceFactory = F),
                        (this.type = K),
                        (this.multipleInstances = !1),
                        (this.serviceProps = {}),
                        (this.instantiationMode = 'LAZY'),
                        (this.onInstanceCreated = null);
                }
                setInstantiationMode(w) {
                    return (this.instantiationMode = w), this;
                }
                setMultipleInstances(w) {
                    return (this.multipleInstances = w), this;
                }
                setServiceProps(w) {
                    return (this.serviceProps = w), this;
                }
                setInstanceCreatedCallback(w) {
                    return (this.onInstanceCreated = w), this;
                }
            }
            const k = '[DEFAULT]';
            class T {
                constructor(w, F) {
                    (this.name = w),
                        (this.container = F),
                        (this.component = null),
                        (this.instances = new Map()),
                        (this.instancesDeferred = new Map()),
                        (this.instancesOptions = new Map()),
                        (this.onInitCallbacks = new Map());
                }
                get(w) {
                    const F = this.normalizeInstanceIdentifier(w);
                    if (!this.instancesDeferred.has(F)) {
                        const K = new m.BH();
                        if (
                            (this.instancesDeferred.set(F, K),
                            this.isInitialized(F) ||
                                this.shouldAutoInitialize())
                        )
                            try {
                                const fe = this.getOrInitializeService({
                                    instanceIdentifier: F,
                                });
                                fe && K.resolve(fe);
                            } catch (fe) {}
                    }
                    return this.instancesDeferred.get(F).promise;
                }
                getImmediate(w) {
                    var F;
                    const K = this.normalizeInstanceIdentifier(
                            null == w ? void 0 : w.identifier
                        ),
                        fe =
                            null !== (F = null == w ? void 0 : w.optional) &&
                            void 0 !== F &&
                            F;
                    if (
                        !this.isInitialized(K) &&
                        !this.shouldAutoInitialize()
                    ) {
                        if (fe) return null;
                        throw Error(`Service ${this.name} is not available`);
                    }
                    try {
                        return this.getOrInitializeService({
                            instanceIdentifier: K,
                        });
                    } catch (_e) {
                        if (fe) return null;
                        throw _e;
                    }
                }
                getComponent() {
                    return this.component;
                }
                setComponent(w) {
                    if (w.name !== this.name)
                        throw Error(
                            `Mismatching Component ${w.name} for Provider ${this.name}.`
                        );
                    if (this.component)
                        throw Error(
                            `Component for ${this.name} has already been provided`
                        );
                    if (((this.component = w), this.shouldAutoInitialize())) {
                        if (
                            (function O(U) {
                                return 'EAGER' === U.instantiationMode;
                            })(w)
                        )
                            try {
                                this.getOrInitializeService({
                                    instanceIdentifier: k,
                                });
                            } catch (F) {}
                        for (const [F, K] of this.instancesDeferred.entries()) {
                            const fe = this.normalizeInstanceIdentifier(F);
                            try {
                                const _e = this.getOrInitializeService({
                                    instanceIdentifier: fe,
                                });
                                K.resolve(_e);
                            } catch (_e) {}
                        }
                    }
                }
                clearInstance(w = k) {
                    this.instancesDeferred.delete(w),
                        this.instancesOptions.delete(w),
                        this.instances.delete(w);
                }
                delete() {
                    var w = this;
                    return (0, s.Z)(function* () {
                        const F = Array.from(w.instances.values());
                        yield Promise.all([
                            ...F.filter((K) => 'INTERNAL' in K).map((K) =>
                                K.INTERNAL.delete()
                            ),
                            ...F.filter((K) => '_delete' in K).map((K) =>
                                K._delete()
                            ),
                        ]);
                    })();
                }
                isComponentSet() {
                    return null != this.component;
                }
                isInitialized(w = k) {
                    return this.instances.has(w);
                }
                getOptions(w = k) {
                    return this.instancesOptions.get(w) || {};
                }
                initialize(w = {}) {
                    const { options: F = {} } = w,
                        K = this.normalizeInstanceIdentifier(
                            w.instanceIdentifier
                        );
                    if (this.isInitialized(K))
                        throw Error(
                            `${this.name}(${K}) has already been initialized`
                        );
                    if (!this.isComponentSet())
                        throw Error(
                            `Component ${this.name} has not been registered yet`
                        );
                    const fe = this.getOrInitializeService({
                        instanceIdentifier: K,
                        options: F,
                    });
                    for (const [_e, Re] of this.instancesDeferred.entries())
                        K === this.normalizeInstanceIdentifier(_e) &&
                            Re.resolve(fe);
                    return fe;
                }
                onInit(w, F) {
                    var K;
                    const fe = this.normalizeInstanceIdentifier(F),
                        _e =
                            null !== (K = this.onInitCallbacks.get(fe)) &&
                            void 0 !== K
                                ? K
                                : new Set();
                    _e.add(w), this.onInitCallbacks.set(fe, _e);
                    const Re = this.instances.get(fe);
                    return (
                        Re && w(Re, fe),
                        () => {
                            _e.delete(w);
                        }
                    );
                }
                invokeOnInitCallbacks(w, F) {
                    const K = this.onInitCallbacks.get(F);
                    if (K)
                        for (const fe of K)
                            try {
                                fe(w, F);
                            } catch (_e) {}
                }
                getOrInitializeService({
                    instanceIdentifier: w,
                    options: F = {},
                }) {
                    let K = this.instances.get(w);
                    if (
                        !K &&
                        this.component &&
                        ((K = this.component.instanceFactory(this.container, {
                            instanceIdentifier: ((U = w), U === k ? void 0 : U),
                            options: F,
                        })),
                        this.instances.set(w, K),
                        this.instancesOptions.set(w, F),
                        this.invokeOnInitCallbacks(K, w),
                        this.component.onInstanceCreated)
                    )
                        try {
                            this.component.onInstanceCreated(
                                this.container,
                                w,
                                K
                            );
                        } catch (fe) {}
                    var U;
                    return K || null;
                }
                normalizeInstanceIdentifier(w = k) {
                    return this.component
                        ? this.component.multipleInstances
                            ? w
                            : k
                        : w;
                }
                shouldAutoInitialize() {
                    return (
                        !!this.component &&
                        'EXPLICIT' !== this.component.instantiationMode
                    );
                }
            }
            class N {
                constructor(w) {
                    (this.name = w), (this.providers = new Map());
                }
                addComponent(w) {
                    const F = this.getProvider(w.name);
                    if (F.isComponentSet())
                        throw new Error(
                            `Component ${w.name} has already been registered with ${this.name}`
                        );
                    F.setComponent(w);
                }
                addOrOverwriteComponent(w) {
                    this.getProvider(w.name).isComponentSet() &&
                        this.providers.delete(w.name),
                        this.addComponent(w);
                }
                getProvider(w) {
                    if (this.providers.has(w)) return this.providers.get(w);
                    const F = new T(w, this);
                    return this.providers.set(w, F), F;
                }
                getProviders() {
                    return Array.from(this.providers.values());
                }
            }
        },
        1877: (de, Y, f) => {
            f.d(Y, { Am: () => U, Ub: () => N, Yd: () => O, in: () => m });
            const s = [];
            var m = (() => {
                return (
                    ((w = m || (m = {}))[(w.DEBUG = 0)] = 'DEBUG'),
                    (w[(w.VERBOSE = 1)] = 'VERBOSE'),
                    (w[(w.INFO = 2)] = 'INFO'),
                    (w[(w.WARN = 3)] = 'WARN'),
                    (w[(w.ERROR = 4)] = 'ERROR'),
                    (w[(w.SILENT = 5)] = 'SILENT'),
                    m
                );
                var w;
            })();
            const L = {
                    debug: m.DEBUG,
                    verbose: m.VERBOSE,
                    info: m.INFO,
                    warn: m.WARN,
                    error: m.ERROR,
                    silent: m.SILENT,
                },
                k = m.INFO,
                T = {
                    [m.DEBUG]: 'log',
                    [m.VERBOSE]: 'log',
                    [m.INFO]: 'info',
                    [m.WARN]: 'warn',
                    [m.ERROR]: 'error',
                },
                S = (w, F, ...K) => {
                    if (F < w.logLevel) return;
                    const fe = new Date().toISOString(),
                        _e = T[F];
                    if (!_e)
                        throw new Error(
                            `Attempted to log a message with an invalid logType (value: ${F})`
                        );
                    console[_e](`[${fe}]  ${w.name}:`, ...K);
                };
            class O {
                constructor(F) {
                    (this.name = F),
                        (this._logLevel = k),
                        (this._logHandler = S),
                        (this._userLogHandler = null),
                        s.push(this);
                }
                get logLevel() {
                    return this._logLevel;
                }
                set logLevel(F) {
                    if (!(F in m))
                        throw new TypeError(
                            `Invalid value "${F}" assigned to \`logLevel\``
                        );
                    this._logLevel = F;
                }
                setLogLevel(F) {
                    this._logLevel = 'string' == typeof F ? L[F] : F;
                }
                get logHandler() {
                    return this._logHandler;
                }
                set logHandler(F) {
                    if ('function' != typeof F)
                        throw new TypeError(
                            'Value assigned to `logHandler` must be a function'
                        );
                    this._logHandler = F;
                }
                get userLogHandler() {
                    return this._userLogHandler;
                }
                set userLogHandler(F) {
                    this._userLogHandler = F;
                }
                debug(...F) {
                    this._userLogHandler &&
                        this._userLogHandler(this, m.DEBUG, ...F),
                        this._logHandler(this, m.DEBUG, ...F);
                }
                log(...F) {
                    this._userLogHandler &&
                        this._userLogHandler(this, m.VERBOSE, ...F),
                        this._logHandler(this, m.VERBOSE, ...F);
                }
                info(...F) {
                    this._userLogHandler &&
                        this._userLogHandler(this, m.INFO, ...F),
                        this._logHandler(this, m.INFO, ...F);
                }
                warn(...F) {
                    this._userLogHandler &&
                        this._userLogHandler(this, m.WARN, ...F),
                        this._logHandler(this, m.WARN, ...F);
                }
                error(...F) {
                    this._userLogHandler &&
                        this._userLogHandler(this, m.ERROR, ...F),
                        this._logHandler(this, m.ERROR, ...F);
                }
            }
            function N(w) {
                s.forEach((F) => {
                    F.setLogLevel(w);
                });
            }
            function U(w, F) {
                for (const K of s) {
                    let fe = null;
                    F && F.level && (fe = L[F.level]),
                        (K.userLogHandler =
                            null === w
                                ? null
                                : (_e, Re, ...Oe) => {
                                      const pe = Oe.map((J) => {
                                          if (null == J) return null;
                                          if ('string' == typeof J) return J;
                                          if (
                                              'number' == typeof J ||
                                              'boolean' == typeof J
                                          )
                                              return J.toString();
                                          if (J instanceof Error)
                                              return J.message;
                                          try {
                                              return JSON.stringify(J);
                                          } catch (Me) {
                                              return null;
                                          }
                                      })
                                          .filter((J) => J)
                                          .join(' ');
                                      Re >= (null != fe ? fe : _e.logLevel) &&
                                          w({
                                              level: m[Re].toLowerCase(),
                                              message: pe,
                                              args: Oe,
                                              type: _e.name,
                                          });
                                  });
                }
            }
        },
        6642: (de, Y, f) => {
            f.d(Y, { eX: () => nt, sQ: () => Mn, GW: () => Fe, l4: () => At });
            var s = f(5620),
                m = f(6451),
                L = f(8306),
                k = f(7579),
                T = f(515),
                S = f(9646),
                O = f(2843),
                N = f(576);
            class w {
                constructor(be, Ne, et) {
                    (this.kind = be),
                        (this.value = Ne),
                        (this.error = et),
                        (this.hasValue = 'N' === be);
                }
                observe(be) {
                    return F(this, be);
                }
                do(be, Ne, et) {
                    const { kind: Ct, value: St, error: Rt } = this;
                    return 'N' === Ct
                        ? null == be
                            ? void 0
                            : be(St)
                        : 'E' === Ct
                        ? null == Ne
                            ? void 0
                            : Ne(Rt)
                        : null == et
                        ? void 0
                        : et();
                }
                accept(be, Ne, et) {
                    var Ct;
                    return (0, N.m)(
                        null === (Ct = be) || void 0 === Ct ? void 0 : Ct.next
                    )
                        ? this.observe(be)
                        : this.do(be, Ne, et);
                }
                toObservable() {
                    const { kind: be, value: Ne, error: et } = this,
                        Ct =
                            'N' === be
                                ? (0, S.of)(Ne)
                                : 'E' === be
                                ? (0, O._)(() => et)
                                : 'C' === be
                                ? T.E
                                : 0;
                    if (!Ct)
                        throw new TypeError(
                            `Unexpected notification kind ${be}`
                        );
                    return Ct;
                }
                static createNext(be) {
                    return new w('N', be);
                }
                static createError(be) {
                    return new w('E', void 0, be);
                }
                static createComplete() {
                    return w.completeNotification;
                }
            }
            function F(Z, be) {
                var Ne, et, Ct;
                const { kind: St, value: Rt, error: un } = Z;
                if ('string' != typeof St)
                    throw new TypeError('Invalid notification, missing "kind"');
                'N' === St
                    ? null === (Ne = be.next) ||
                      void 0 === Ne ||
                      Ne.call(be, Rt)
                    : 'E' === St
                    ? null === (et = be.error) ||
                      void 0 === et ||
                      et.call(be, un)
                    : null === (Ct = be.complete) ||
                      void 0 === Ct ||
                      Ct.call(be);
            }
            w.completeNotification = new w('C');
            var K = f(4482),
                fe = f(5403),
                Re = f(8421);
            function Oe(Z, be, Ne, et) {
                return (0, K.e)((Ct, St) => {
                    let Rt;
                    be && 'function' != typeof be
                        ? ({ duration: Ne, element: Rt, connector: et } = be)
                        : (Rt = be);
                    const un = new Map(),
                        xn = (X) => {
                            un.forEach(X), X(St);
                        },
                        Fn = (X) => xn((Se) => Se.error(X)),
                        Le = new pe(
                            St,
                            (X) => {
                                try {
                                    const Se = Z(X);
                                    let Ye = un.get(Se);
                                    if (!Ye) {
                                        un.set(
                                            Se,
                                            (Ye = et ? et() : new k.x())
                                        );
                                        const kt = (function se(X, Se) {
                                            const Ye = new L.y((kt) => {
                                                Le.activeGroups++;
                                                const Vt = Se.subscribe(kt);
                                                return () => {
                                                    Vt.unsubscribe(),
                                                        0 ==
                                                            --Le.activeGroups &&
                                                            Le.teardownAttempted &&
                                                            Le.unsubscribe();
                                                };
                                            });
                                            return (Ye.key = X), Ye;
                                        })(Se, Ye);
                                        if ((St.next(kt), Ne)) {
                                            const Vt = new fe.Q(
                                                Ye,
                                                () => {
                                                    Ye.complete(),
                                                        null == Vt ||
                                                            Vt.unsubscribe();
                                                },
                                                void 0,
                                                void 0,
                                                () => un.delete(Se)
                                            );
                                            Le.add(
                                                (0, Re.Xf)(Ne(kt)).subscribe(Vt)
                                            );
                                        }
                                    }
                                    Ye.next(Rt ? Rt(X) : X);
                                } catch (Se) {
                                    Fn(Se);
                                }
                            },
                            () => xn((X) => X.complete()),
                            Fn,
                            () => un.clear()
                        );
                    Ct.subscribe(Le);
                });
            }
            class pe extends fe.Q {
                constructor() {
                    super(...arguments),
                        (this.activeGroups = 0),
                        (this.teardownAttempted = !1);
                }
                unsubscribe() {
                    (this.teardownAttempted = !0),
                        0 === this.activeGroups && super.unsubscribe();
                }
            }
            var J = f(4004);
            function Me(Z, be) {
                return be
                    ? (Ne) =>
                          Ne.pipe(
                              Me((et, Ct) =>
                                  (0, Re.Xf)(Z(et, Ct)).pipe(
                                      (0, J.U)((St, Rt) => be(et, St, Ct, Rt))
                                  )
                              )
                          )
                    : (0, K.e)((Ne, et) => {
                          let Ct = 0,
                              St = null,
                              Rt = !1;
                          Ne.subscribe(
                              new fe.Q(
                                  et,
                                  (un) => {
                                      St ||
                                          ((St = new fe.Q(et, void 0, () => {
                                              (St = null), Rt && et.complete();
                                          })),
                                          (0, Re.Xf)(Z(un, Ct++)).subscribe(
                                              St
                                          ));
                                  },
                                  () => {
                                      (Rt = !0), !St && et.complete();
                                  }
                              )
                          );
                      });
            }
            var De = f(8502),
                R = f(262),
                te = f(9300),
                G = f(5577),
                oe = f(5698),
                re = f(5e3);
            const ne = { dispatch: !0, useEffectsErrorHandler: !0 },
                we = '__@ngrx/effects_create__';
            function Fe(Z, be) {
                const Ne = Z(),
                    et = Object.assign(Object.assign({}, ne), be);
                return Object.defineProperty(Ne, we, { value: et }), Ne;
            }
            function je(Z) {
                return Object.getOwnPropertyNames(Z)
                    .filter(
                        (et) =>
                            !(!Z[et] || !Z[et].hasOwnProperty(we)) &&
                            Z[et][we].hasOwnProperty('dispatch')
                    )
                    .map((et) =>
                        Object.assign({ propertyName: et }, Z[et][we])
                    );
            }
            function We(Z) {
                return Object.getPrototypeOf(Z);
            }
            const ke = '__@ngrx/effects__';
            function Lt(Z) {
                return (0, s.qC)(Ot, We)(Z);
            }
            function Ot(Z) {
                return (function hn(Z) {
                    return Z.constructor.hasOwnProperty(ke);
                })(Z)
                    ? Z.constructor[ke]
                    : [];
            }
            function It(Z, be, Ne) {
                const et = We(Z).constructor.name,
                    Ct = (function Pt(Z) {
                        return [Lt, je].reduce(
                            (Ne, et) => Ne.concat(et(Z)),
                            []
                        );
                    })(Z).map(
                        ({
                            propertyName: St,
                            dispatch: Rt,
                            useEffectsErrorHandler: un,
                        }) => {
                            const xn =
                                    'function' == typeof Z[St]
                                        ? Z[St]()
                                        : Z[St],
                                Fn = un ? Ne(xn, be) : xn;
                            return !1 === Rt
                                ? Fn.pipe((0, De.l)())
                                : Fn.pipe(
                                      (function _e() {
                                          return (0, K.e)((Z, be) => {
                                              Z.subscribe(
                                                  new fe.Q(
                                                      be,
                                                      (Ne) => {
                                                          be.next(
                                                              w.createNext(Ne)
                                                          );
                                                      },
                                                      () => {
                                                          be.next(
                                                              w.createComplete()
                                                          ),
                                                              be.complete();
                                                      },
                                                      (Ne) => {
                                                          be.next(
                                                              w.createError(Ne)
                                                          ),
                                                              be.complete();
                                                      }
                                                  )
                                              );
                                          });
                                      })()
                                  ).pipe(
                                      (0, J.U)((se) => ({
                                          effect: Z[St],
                                          notification: se,
                                          propertyName: St,
                                          sourceName: et,
                                          sourceInstance: Z,
                                      }))
                                  );
                        }
                    );
                return (0, m.T)(...Ct);
            }
            function $t(Z, be, Ne = 10) {
                return Z.pipe(
                    (0, R.K)(
                        (et) => (
                            be && be.handleError(et),
                            Ne <= 1 ? Z : $t(Z, be, Ne - 1)
                        )
                    )
                );
            }
            let nt = (() => {
                class Z extends L.y {
                    constructor(Ne) {
                        super(), Ne && (this.source = Ne);
                    }
                    lift(Ne) {
                        const et = new Z();
                        return (et.source = this), (et.operator = Ne), et;
                    }
                }
                return (
                    (Z.ɵfac = function (Ne) {
                        return new (Ne || Z)(re.LFG(s.Y$));
                    }),
                    (Z.ɵprov = re.Yz7({ token: Z, factory: Z.ɵfac })),
                    Z
                );
            })();
            function At(...Z) {
                return (0, te.h)((be) =>
                    Z.some((Ne) =>
                        'string' == typeof Ne
                            ? Ne === be.type
                            : Ne.type === be.type
                    )
                );
            }
            function Un(Z) {
                return vn(Z, 'ngrxOnInitEffects');
            }
            function vn(Z, be) {
                return Z && be in Z && 'function' == typeof Z[be];
            }
            const Dn = new re.OlP('@ngrx/effects Internal Root Guard'),
                rr = new re.OlP('@ngrx/effects User Provided Effects'),
                Kn = new re.OlP('@ngrx/effects Internal Root Effects'),
                rt = new re.OlP('@ngrx/effects Root Effects'),
                ge = new re.OlP('@ngrx/effects Internal Feature Effects'),
                Ae = new re.OlP('@ngrx/effects Feature Effects'),
                ze = new re.OlP('@ngrx/effects Effects Error Handler');
            let Ze = (() => {
                class Z extends k.x {
                    constructor(Ne, et) {
                        super(),
                            (this.errorHandler = Ne),
                            (this.effectsErrorHandler = et);
                    }
                    addEffects(Ne) {
                        this.next(Ne);
                    }
                    toActions() {
                        return this.pipe(
                            Oe(We),
                            (0, G.z)((Ne) => Ne.pipe(Oe(lt))),
                            (0, G.z)((Ne) => {
                                const et = Ne.pipe(
                                        Me((St) =>
                                            (function bt(Z, be) {
                                                return (Ne) => {
                                                    const et = It(Ne, Z, be);
                                                    return (function gn(Z) {
                                                        return vn(
                                                            Z,
                                                            'ngrxOnRunEffects'
                                                        );
                                                    })(Ne)
                                                        ? Ne.ngrxOnRunEffects(
                                                              et
                                                          )
                                                        : et;
                                                };
                                            })(
                                                this.errorHandler,
                                                this.effectsErrorHandler
                                            )(St)
                                        ),
                                        (0, J.U)(
                                            (St) => (
                                                (function He(Z, be) {
                                                    if (
                                                        'N' ===
                                                        Z.notification.kind
                                                    ) {
                                                        const Ne =
                                                            Z.notification
                                                                .value;
                                                        !(function st(Z) {
                                                            return (
                                                                'function' !=
                                                                    typeof Z &&
                                                                Z &&
                                                                Z.type &&
                                                                'string' ==
                                                                    typeof Z.type
                                                            );
                                                        })(Ne) &&
                                                            be.handleError(
                                                                new Error(
                                                                    `Effect ${(function xt({
                                                                        propertyName:
                                                                            Z,
                                                                        sourceInstance:
                                                                            be,
                                                                        sourceName:
                                                                            Ne,
                                                                    }) {
                                                                        const et =
                                                                            'function' ==
                                                                            typeof be[
                                                                                Z
                                                                            ];
                                                                        return `"${Ne}.${String(
                                                                            Z
                                                                        )}${
                                                                            et
                                                                                ? '()'
                                                                                : ''
                                                                        }"`;
                                                                    })(
                                                                        Z
                                                                    )} dispatched an invalid action: ${(function Qt(
                                                                        Z
                                                                    ) {
                                                                        try {
                                                                            return JSON.stringify(
                                                                                Z
                                                                            );
                                                                        } catch (be) {
                                                                            return Z;
                                                                        }
                                                                    })(Ne)}`
                                                                )
                                                            );
                                                    }
                                                })(St, this.errorHandler),
                                                St.notification
                                            )
                                        ),
                                        (0, te.h)(
                                            (St) =>
                                                'N' === St.kind &&
                                                null != St.value
                                        ),
                                        (function he() {
                                            return (0, K.e)((Z, be) => {
                                                Z.subscribe(
                                                    new fe.Q(be, (Ne) =>
                                                        F(Ne, be)
                                                    )
                                                );
                                            });
                                        })()
                                    ),
                                    Ct = Ne.pipe(
                                        (0, oe.q)(1),
                                        (0, te.h)(Un),
                                        (0, J.U)((St) => St.ngrxOnInitEffects())
                                    );
                                return (0, m.T)(et, Ct);
                            })
                        );
                    }
                }
                return (
                    (Z.ɵfac = function (Ne) {
                        return new (Ne || Z)(re.LFG(re.qLn), re.LFG(ze));
                    }),
                    (Z.ɵprov = re.Yz7({ token: Z, factory: Z.ɵfac })),
                    Z
                );
            })();
            function lt(Z) {
                return (function Bn(Z) {
                    return vn(Z, 'ngrxOnIdentifyEffects');
                })(Z)
                    ? Z.ngrxOnIdentifyEffects()
                    : '';
            }
            let mn = (() => {
                class Z {
                    constructor(Ne, et) {
                        (this.effectSources = Ne),
                            (this.store = et),
                            (this.effectsSubscription = null);
                    }
                    start() {
                        this.effectsSubscription ||
                            (this.effectsSubscription = this.effectSources
                                .toActions()
                                .subscribe(this.store));
                    }
                    ngOnDestroy() {
                        this.effectsSubscription &&
                            (this.effectsSubscription.unsubscribe(),
                            (this.effectsSubscription = null));
                    }
                }
                return (
                    (Z.ɵfac = function (Ne) {
                        return new (Ne || Z)(re.LFG(Ze), re.LFG(s.yh));
                    }),
                    (Z.ɵprov = re.Yz7({ token: Z, factory: Z.ɵfac })),
                    Z
                );
            })();
            const Kt = '@ngrx/effects/init';
            (0, s.PH)(Kt);
            let Gn = (() => {
                    class Z {
                        constructor(Ne, et, Ct, St, Rt, un, xn) {
                            (this.sources = Ne),
                                et.start(),
                                St.forEach((Fn) => Ne.addEffects(Fn)),
                                Ct.dispatch({ type: Kt });
                        }
                        addEffects(Ne) {
                            this.sources.addEffects(Ne);
                        }
                    }
                    return (
                        (Z.ɵfac = function (Ne) {
                            return new (Ne || Z)(
                                re.LFG(Ze),
                                re.LFG(mn),
                                re.LFG(s.yh),
                                re.LFG(rt),
                                re.LFG(s.cr, 8),
                                re.LFG(s.CK, 8),
                                re.LFG(Dn, 8)
                            );
                        }),
                        (Z.ɵmod = re.oAB({ type: Z })),
                        (Z.ɵinj = re.cJS({})),
                        Z
                    );
                })(),
                yn = (() => {
                    class Z {
                        constructor(Ne, et, Ct, St) {
                            et.forEach((Rt) =>
                                Rt.forEach((un) => Ne.addEffects(un))
                            );
                        }
                    }
                    return (
                        (Z.ɵfac = function (Ne) {
                            return new (Ne || Z)(
                                re.LFG(Gn),
                                re.LFG(Ae),
                                re.LFG(s.cr, 8),
                                re.LFG(s.CK, 8)
                            );
                        }),
                        (Z.ɵmod = re.oAB({ type: Z })),
                        (Z.ɵinj = re.cJS({})),
                        Z
                    );
                })(),
                Mn = (() => {
                    class Z {
                        static forFeature(Ne = []) {
                            return {
                                ngModule: yn,
                                providers: [
                                    Ne,
                                    { provide: ge, multi: !0, useValue: Ne },
                                    { provide: rr, multi: !0, useValue: [] },
                                    {
                                        provide: Ae,
                                        multi: !0,
                                        useFactory: q,
                                        deps: [re.zs3, ge, rr],
                                    },
                                ],
                            };
                        }
                        static forRoot(Ne = []) {
                            return {
                                ngModule: Gn,
                                providers: [
                                    { provide: ze, useValue: $t },
                                    mn,
                                    Ze,
                                    nt,
                                    Ne,
                                    { provide: Kn, useValue: [Ne] },
                                    {
                                        provide: Dn,
                                        useFactory: Ee,
                                        deps: [
                                            [mn, new re.FiY(), new re.tp0()],
                                            [Kn, new re.PiD()],
                                        ],
                                    },
                                    { provide: rr, multi: !0, useValue: [] },
                                    {
                                        provide: rt,
                                        useFactory: q,
                                        deps: [re.zs3, Kn, rr],
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (Z.ɵfac = function (Ne) {
                            return new (Ne || Z)();
                        }),
                        (Z.ɵmod = re.oAB({ type: Z })),
                        (Z.ɵinj = re.cJS({})),
                        Z
                    );
                })();
            function q(Z, be, Ne) {
                const et = [];
                for (const Ct of be) et.push(...Ct);
                for (const Ct of Ne) et.push(...Ct);
                return (function ue(Z, be) {
                    return be.map((Ne) => Z.get(Ne));
                })(Z, et);
            }
            function Ee(Z, be) {
                if ((1 !== be.length || 0 !== be[0].length) && Z)
                    throw new TypeError(
                        'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        9565: (
            __unused_webpack___webpack_module__,
            __webpack_exports__,
            __webpack_require__
        ) => {
            __webpack_require__.d(__webpack_exports__, {
                FT: () => StoreDevtoolsModule,
            });
            var _angular_core__WEBPACK_IMPORTED_MODULE_0__ =
                    __webpack_require__(5e3),
                _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ =
                    __webpack_require__(5620),
                rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(515),
                rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8306),
                rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9646),
                rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(6451),
                rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(233),
                rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(4707),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ =
                    __webpack_require__(3099),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ =
                    __webpack_require__(9300),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ =
                    __webpack_require__(4004),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ =
                    __webpack_require__(4351),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ =
                    __webpack_require__(7414),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ =
                    __webpack_require__(8372),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ =
                    __webpack_require__(262),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ =
                    __webpack_require__(5698),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ =
                    __webpack_require__(2722),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ =
                    __webpack_require__(3900),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ =
                    __webpack_require__(5684),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ =
                    __webpack_require__(5363),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ =
                    __webpack_require__(1365),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_21__ =
                    __webpack_require__(5026);
            class StoreDevtoolsConfig {
                constructor() {
                    this.maxAge = !1;
                }
            }
            const STORE_DEVTOOLS_CONFIG =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Options'
                    ),
                INITIAL_OPTIONS =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Initial Config'
                    );
            function noMonitor() {
                return null;
            }
            const DEFAULT_NAME = 'NgRx Store DevTools';
            function createConfig(de) {
                const Y = {
                        maxAge: !1,
                        monitor: noMonitor,
                        actionSanitizer: void 0,
                        stateSanitizer: void 0,
                        name: DEFAULT_NAME,
                        serialize: !1,
                        logOnly: !1,
                        autoPause: !1,
                        features: {
                            pause: !0,
                            lock: !0,
                            persist: !0,
                            export: !0,
                            import: 'custom',
                            jump: !0,
                            skip: !0,
                            reorder: !0,
                            dispatch: !0,
                            test: !0,
                        },
                    },
                    f = 'function' == typeof de ? de() : de,
                    L = Object.assign(
                        {},
                        Y,
                        {
                            features:
                                f.features ||
                                (!!f.logOnly && {
                                    pause: !0,
                                    export: !0,
                                    test: !0,
                                }) ||
                                Y.features,
                        },
                        f
                    );
                if (L.maxAge && L.maxAge < 2)
                    throw new Error(
                        `Devtools 'maxAge' cannot be less than 2, got ${L.maxAge}`
                    );
                return L;
            }
            const PERFORM_ACTION = 'PERFORM_ACTION',
                REFRESH = 'REFRESH',
                RESET = 'RESET',
                ROLLBACK = 'ROLLBACK',
                COMMIT = 'COMMIT',
                SWEEP = 'SWEEP',
                TOGGLE_ACTION = 'TOGGLE_ACTION',
                SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE',
                JUMP_TO_STATE = 'JUMP_TO_STATE',
                JUMP_TO_ACTION = 'JUMP_TO_ACTION',
                IMPORT_STATE = 'IMPORT_STATE',
                LOCK_CHANGES = 'LOCK_CHANGES',
                PAUSE_RECORDING = 'PAUSE_RECORDING';
            class PerformAction {
                constructor(Y, f) {
                    if (
                        ((this.action = Y),
                        (this.timestamp = f),
                        (this.type = PERFORM_ACTION),
                        void 0 === Y.type)
                    )
                        throw new Error(
                            'Actions may not have an undefined "type" property. Have you misspelled a constant?'
                        );
                }
            }
            class Refresh {
                constructor() {
                    this.type = REFRESH;
                }
            }
            class Reset {
                constructor(Y) {
                    (this.timestamp = Y), (this.type = RESET);
                }
            }
            class Rollback {
                constructor(Y) {
                    (this.timestamp = Y), (this.type = ROLLBACK);
                }
            }
            class Commit {
                constructor(Y) {
                    (this.timestamp = Y), (this.type = COMMIT);
                }
            }
            class Sweep {
                constructor() {
                    this.type = SWEEP;
                }
            }
            class ToggleAction {
                constructor(Y) {
                    (this.id = Y), (this.type = TOGGLE_ACTION);
                }
            }
            class SetActionsActive {
                constructor(Y, f, s = !0) {
                    (this.start = Y),
                        (this.end = f),
                        (this.active = s),
                        (this.type = SET_ACTIONS_ACTIVE);
                }
            }
            class JumpToState {
                constructor(Y) {
                    (this.index = Y), (this.type = JUMP_TO_STATE);
                }
            }
            class JumpToAction {
                constructor(Y) {
                    (this.actionId = Y), (this.type = JUMP_TO_ACTION);
                }
            }
            class ImportState {
                constructor(Y) {
                    (this.nextLiftedState = Y), (this.type = IMPORT_STATE);
                }
            }
            class LockChanges {
                constructor(Y) {
                    (this.status = Y), (this.type = LOCK_CHANGES);
                }
            }
            class PauseRecording {
                constructor(Y) {
                    (this.status = Y), (this.type = PAUSE_RECORDING);
                }
            }
            function difference(de, Y) {
                return de.filter((f) => Y.indexOf(f) < 0);
            }
            function unliftState(de) {
                const { computedStates: Y, currentStateIndex: f } = de;
                if (f >= Y.length) {
                    const { state: m } = Y[Y.length - 1];
                    return m;
                }
                const { state: s } = Y[f];
                return s;
            }
            function unliftAction(de) {
                return de.actionsById[de.nextActionId - 1];
            }
            function liftAction(de) {
                return new PerformAction(de, +Date.now());
            }
            function sanitizeActions(de, Y) {
                return Object.keys(Y).reduce((f, s) => {
                    const m = Number(s);
                    return (f[m] = sanitizeAction(de, Y[m], m)), f;
                }, {});
            }
            function sanitizeAction(de, Y, f) {
                return Object.assign(Object.assign({}, Y), {
                    action: de(Y.action, f),
                });
            }
            function sanitizeStates(de, Y) {
                return Y.map((f, s) => ({
                    state: sanitizeState(de, f.state, s),
                    error: f.error,
                }));
            }
            function sanitizeState(de, Y, f) {
                return de(Y, f);
            }
            function shouldFilterActions(de) {
                return (
                    de.predicate || de.actionsSafelist || de.actionsBlocklist
                );
            }
            function filterLiftedState(de, Y, f, s) {
                const m = [],
                    L = {},
                    k = [];
                return (
                    de.stagedActionIds.forEach((T, S) => {
                        const O = de.actionsById[T];
                        !O ||
                            (S &&
                                isActionFiltered(
                                    de.computedStates[S],
                                    O,
                                    Y,
                                    f,
                                    s
                                )) ||
                            ((L[T] = O),
                            m.push(T),
                            k.push(de.computedStates[S]));
                    }),
                    Object.assign(Object.assign({}, de), {
                        stagedActionIds: m,
                        actionsById: L,
                        computedStates: k,
                    })
                );
            }
            function isActionFiltered(de, Y, f, s, m) {
                const L = f && !f(de, Y.action),
                    k =
                        s &&
                        !Y.action.type.match(
                            s.map((S) => escapeRegExp(S)).join('|')
                        ),
                    T =
                        m &&
                        Y.action.type.match(
                            m.map((S) => escapeRegExp(S)).join('|')
                        );
                return L || k || T;
            }
            function escapeRegExp(de) {
                return de.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
            }
            const INIT_ACTION = {
                    type: _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg,
                },
                RECOMPUTE = '@ngrx/store-devtools/recompute',
                RECOMPUTE_ACTION = { type: RECOMPUTE };
            function computeNextEntry(de, Y, f, s, m) {
                if (s)
                    return {
                        state: f,
                        error: 'Interrupted by an error up the chain',
                    };
                let k,
                    L = f;
                try {
                    L = de(f, Y);
                } catch (T) {
                    (k = T.toString()), m.handleError(T);
                }
                return { state: L, error: k };
            }
            function recomputeStates(de, Y, f, s, m, L, k, T, S) {
                if (Y >= de.length && de.length === L.length) return de;
                const O = de.slice(0, Y),
                    N = L.length - (S ? 1 : 0);
                for (let U = Y; U < N; U++) {
                    const w = L[U],
                        F = m[w].action,
                        K = O[U - 1],
                        fe = K ? K.state : s,
                        _e = K ? K.error : void 0,
                        Oe =
                            k.indexOf(w) > -1
                                ? K
                                : computeNextEntry(f, F, fe, _e, T);
                    O.push(Oe);
                }
                return S && O.push(de[de.length - 1]), O;
            }
            function liftInitialState(de, Y) {
                return {
                    monitorState: Y(void 0, {}),
                    nextActionId: 1,
                    actionsById: { 0: liftAction(INIT_ACTION) },
                    stagedActionIds: [0],
                    skippedActionIds: [],
                    committedState: de,
                    currentStateIndex: 0,
                    computedStates: [],
                    isLocked: !1,
                    isPaused: !1,
                };
            }
            function liftReducerWith(de, Y, f, s, m = {}) {
                return (L) => (k, T) => {
                    let {
                        monitorState: S,
                        actionsById: O,
                        nextActionId: N,
                        stagedActionIds: U,
                        skippedActionIds: w,
                        committedState: F,
                        currentStateIndex: K,
                        computedStates: fe,
                        isLocked: _e,
                        isPaused: Re,
                    } = k || Y;
                    function Oe(Me) {
                        let he = Me,
                            De = U.slice(1, he + 1);
                        for (let R = 0; R < De.length; R++) {
                            if (fe[R + 1].error) {
                                (he = R), (De = U.slice(1, he + 1));
                                break;
                            }
                            delete O[De[R]];
                        }
                        (w = w.filter((R) => -1 === De.indexOf(R))),
                            (U = [0, ...U.slice(he + 1)]),
                            (F = fe[he].state),
                            (fe = fe.slice(he)),
                            (K = K > he ? K - he : 0);
                    }
                    function pe() {
                        (O = { 0: liftAction(INIT_ACTION) }),
                            (N = 1),
                            (U = [0]),
                            (w = []),
                            (F = fe[K].state),
                            (K = 0),
                            (fe = []);
                    }
                    k || (O = Object.create(O));
                    let J = 0;
                    switch (T.type) {
                        case LOCK_CHANGES:
                            (_e = T.status), (J = 1 / 0);
                            break;
                        case PAUSE_RECORDING:
                            (Re = T.status),
                                Re
                                    ? ((U = [...U, N]),
                                      (O[N] = new PerformAction(
                                          { type: '@ngrx/devtools/pause' },
                                          +Date.now()
                                      )),
                                      N++,
                                      (J = U.length - 1),
                                      (fe = fe.concat(fe[fe.length - 1])),
                                      K === U.length - 2 && K++,
                                      (J = 1 / 0))
                                    : pe();
                            break;
                        case RESET:
                            (O = { 0: liftAction(INIT_ACTION) }),
                                (N = 1),
                                (U = [0]),
                                (w = []),
                                (F = de),
                                (K = 0),
                                (fe = []);
                            break;
                        case COMMIT:
                            pe();
                            break;
                        case ROLLBACK:
                            (O = { 0: liftAction(INIT_ACTION) }),
                                (N = 1),
                                (U = [0]),
                                (w = []),
                                (K = 0),
                                (fe = []);
                            break;
                        case TOGGLE_ACTION: {
                            const { id: Me } = T;
                            (w =
                                -1 === w.indexOf(Me)
                                    ? [Me, ...w]
                                    : w.filter((De) => De !== Me)),
                                (J = U.indexOf(Me));
                            break;
                        }
                        case SET_ACTIONS_ACTIVE: {
                            const { start: Me, end: he, active: De } = T,
                                R = [];
                            for (let te = Me; te < he; te++) R.push(te);
                            (w = De ? difference(w, R) : [...w, ...R]),
                                (J = U.indexOf(Me));
                            break;
                        }
                        case JUMP_TO_STATE:
                            (K = T.index), (J = 1 / 0);
                            break;
                        case JUMP_TO_ACTION: {
                            const Me = U.indexOf(T.actionId);
                            -1 !== Me && (K = Me), (J = 1 / 0);
                            break;
                        }
                        case SWEEP:
                            (U = difference(U, w)),
                                (w = []),
                                (K = Math.min(K, U.length - 1));
                            break;
                        case PERFORM_ACTION: {
                            if (_e) return k || Y;
                            if (
                                Re ||
                                (k &&
                                    isActionFiltered(
                                        k.computedStates[K],
                                        T,
                                        m.predicate,
                                        m.actionsSafelist,
                                        m.actionsBlocklist
                                    ))
                            ) {
                                const he = fe[fe.length - 1];
                                (fe = [
                                    ...fe.slice(0, -1),
                                    computeNextEntry(
                                        L,
                                        T.action,
                                        he.state,
                                        he.error,
                                        f
                                    ),
                                ]),
                                    (J = 1 / 0);
                                break;
                            }
                            m.maxAge && U.length === m.maxAge && Oe(1),
                                K === U.length - 1 && K++;
                            const Me = N++;
                            (O[Me] = T), (U = [...U, Me]), (J = U.length - 1);
                            break;
                        }
                        case IMPORT_STATE:
                            ({
                                monitorState: S,
                                actionsById: O,
                                nextActionId: N,
                                stagedActionIds: U,
                                skippedActionIds: w,
                                committedState: F,
                                currentStateIndex: K,
                                computedStates: fe,
                                isLocked: _e,
                                isPaused: Re,
                            } = T.nextLiftedState);
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg:
                            (J = 0),
                                m.maxAge &&
                                    U.length > m.maxAge &&
                                    ((fe = recomputeStates(
                                        fe,
                                        J,
                                        L,
                                        F,
                                        O,
                                        U,
                                        w,
                                        f,
                                        Re
                                    )),
                                    Oe(U.length - m.maxAge),
                                    (J = 1 / 0));
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb:
                            if (fe.filter((he) => he.error).length > 0)
                                (J = 0),
                                    m.maxAge &&
                                        U.length > m.maxAge &&
                                        ((fe = recomputeStates(
                                            fe,
                                            J,
                                            L,
                                            F,
                                            O,
                                            U,
                                            w,
                                            f,
                                            Re
                                        )),
                                        Oe(U.length - m.maxAge),
                                        (J = 1 / 0));
                            else {
                                if (!Re && !_e) {
                                    K === U.length - 1 && K++;
                                    const he = N++;
                                    (O[he] = new PerformAction(T, +Date.now())),
                                        (U = [...U, he]),
                                        (J = U.length - 1),
                                        (fe = recomputeStates(
                                            fe,
                                            J,
                                            L,
                                            F,
                                            O,
                                            U,
                                            w,
                                            f,
                                            Re
                                        ));
                                }
                                (fe = fe.map((he) =>
                                    Object.assign(Object.assign({}, he), {
                                        state: L(he.state, RECOMPUTE_ACTION),
                                    })
                                )),
                                    (K = U.length - 1),
                                    m.maxAge &&
                                        U.length > m.maxAge &&
                                        Oe(U.length - m.maxAge),
                                    (J = 1 / 0);
                            }
                            break;
                        default:
                            J = 1 / 0;
                    }
                    return (
                        (fe = recomputeStates(fe, J, L, F, O, U, w, f, Re)),
                        (S = s(S, T)),
                        {
                            monitorState: S,
                            actionsById: O,
                            nextActionId: N,
                            stagedActionIds: U,
                            skippedActionIds: w,
                            committedState: F,
                            currentStateIndex: K,
                            computedStates: fe,
                            isLocked: _e,
                            isPaused: Re,
                        }
                    );
                };
            }
            let DevtoolsDispatcher = (() => {
                class de extends _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO {}
                return (
                    (de.ɵfac = (function () {
                        let Y;
                        return function (s) {
                            return (
                                Y ||
                                (Y =
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.n5z(
                                        de
                                    ))
                            )(s || de);
                        };
                    })()),
                    (de.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                        token: de,
                        factory: de.ɵfac,
                    })),
                    de
                );
            })();
            const ExtensionActionTypes = {
                    START: 'START',
                    DISPATCH: 'DISPATCH',
                    STOP: 'STOP',
                    ACTION: 'ACTION',
                },
                REDUX_DEVTOOLS_EXTENSION =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Redux Devtools Extension'
                    );
            let DevtoolsExtension = (() => {
                    class DevtoolsExtension {
                        constructor(de, Y, f) {
                            (this.config = Y),
                                (this.dispatcher = f),
                                (this.devtoolsExtension = de),
                                this.createActionStreams();
                        }
                        notify(de, Y) {
                            if (this.devtoolsExtension)
                                if (de.type === PERFORM_ACTION) {
                                    if (Y.isLocked || Y.isPaused) return;
                                    const f = unliftState(Y);
                                    if (
                                        shouldFilterActions(this.config) &&
                                        isActionFiltered(
                                            f,
                                            de,
                                            this.config.predicate,
                                            this.config.actionsSafelist,
                                            this.config.actionsBlocklist
                                        )
                                    )
                                        return;
                                    const s = this.config.stateSanitizer
                                            ? sanitizeState(
                                                  this.config.stateSanitizer,
                                                  f,
                                                  Y.currentStateIndex
                                              )
                                            : f,
                                        m = this.config.actionSanitizer
                                            ? sanitizeAction(
                                                  this.config.actionSanitizer,
                                                  de,
                                                  Y.nextActionId
                                              )
                                            : de;
                                    this.sendToReduxDevtools(() =>
                                        this.extensionConnection.send(m, s)
                                    );
                                } else {
                                    const f = Object.assign(
                                        Object.assign({}, Y),
                                        {
                                            stagedActionIds: Y.stagedActionIds,
                                            actionsById: this.config
                                                .actionSanitizer
                                                ? sanitizeActions(
                                                      this.config
                                                          .actionSanitizer,
                                                      Y.actionsById
                                                  )
                                                : Y.actionsById,
                                            computedStates: this.config
                                                .stateSanitizer
                                                ? sanitizeStates(
                                                      this.config
                                                          .stateSanitizer,
                                                      Y.computedStates
                                                  )
                                                : Y.computedStates,
                                        }
                                    );
                                    this.sendToReduxDevtools(() =>
                                        this.devtoolsExtension.send(
                                            null,
                                            f,
                                            this.getExtensionConfig(this.config)
                                        )
                                    );
                                }
                        }
                        createChangesObservable() {
                            return this.devtoolsExtension
                                ? new rxjs__WEBPACK_IMPORTED_MODULE_3__.y(
                                      (de) => {
                                          const Y =
                                              this.devtoolsExtension.connect(
                                                  this.getExtensionConfig(
                                                      this.config
                                                  )
                                              );
                                          return (
                                              (this.extensionConnection = Y),
                                              Y.init(),
                                              Y.subscribe((f) => de.next(f)),
                                              Y.unsubscribe
                                          );
                                      }
                                  )
                                : rxjs__WEBPACK_IMPORTED_MODULE_2__.E;
                        }
                        createActionStreams() {
                            const de = this.createChangesObservable().pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.B)()
                                ),
                                Y = de.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (T) =>
                                            T.type ===
                                            ExtensionActionTypes.START
                                    )
                                ),
                                f = de.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (T) =>
                                            T.type === ExtensionActionTypes.STOP
                                    )
                                ),
                                s = de.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (T) =>
                                            T.type ===
                                            ExtensionActionTypes.DISPATCH
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        (T) => this.unwrapAction(T.payload)
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.b)(
                                        (T) =>
                                            T.type === IMPORT_STATE
                                                ? this.dispatcher.pipe(
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                                          (S) =>
                                                              S.type ===
                                                              _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.V)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.b)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                                          () => T
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.K)(
                                                          () =>
                                                              (0,
                                                              rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                                  T
                                                              )
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.q)(
                                                          1
                                                      )
                                                  )
                                                : (0,
                                                  rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                      T
                                                  )
                                    )
                                ),
                                L = de
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                            (T) =>
                                                T.type ===
                                                ExtensionActionTypes.ACTION
                                        ),
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            (T) => this.unwrapAction(T.payload)
                                        )
                                    )
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                            f
                                        )
                                    ),
                                k = s.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                        f
                                    )
                                );
                            (this.start$ = Y.pipe(
                                (0,
                                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                    f
                                )
                            )),
                                (this.actions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => L
                                    )
                                )),
                                (this.liftedActions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => k
                                    )
                                ));
                        }
                        unwrapAction(action) {
                            return 'string' == typeof action
                                ? eval(`(${action})`)
                                : action;
                        }
                        getExtensionConfig(de) {
                            var Y;
                            const f = {
                                name: de.name,
                                features: de.features,
                                serialize: de.serialize,
                                autoPause:
                                    null !== (Y = de.autoPause) &&
                                    void 0 !== Y &&
                                    Y,
                            };
                            return (
                                !1 !== de.maxAge && (f.maxAge = de.maxAge), f
                            );
                        }
                        sendToReduxDevtools(de) {
                            try {
                                de();
                            } catch (Y) {
                                console.warn(
                                    '@ngrx/store-devtools: something went wrong inside the redux devtools',
                                    Y
                                );
                            }
                        }
                    }
                    return (
                        (DevtoolsExtension.ɵfac = function de(Y) {
                            return new (Y || DevtoolsExtension)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    REDUX_DEVTOOLS_EXTENSION
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                )
                            );
                        }),
                        (DevtoolsExtension.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: DevtoolsExtension,
                                factory: DevtoolsExtension.ɵfac,
                            })),
                        DevtoolsExtension
                    );
                })(),
                StoreDevtools = (() => {
                    class de {
                        constructor(f, s, m, L, k, T, S, O) {
                            const N = liftInitialState(S, O.monitor),
                                U = liftReducerWith(S, N, T, O.monitor, O),
                                w = (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                    (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                        s
                                            .asObservable()
                                            .pipe(
                                                (0,
                                                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.T)(
                                                    1
                                                )
                                            ),
                                        L.actions$
                                    ).pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            liftAction
                                        )
                                    ),
                                    f,
                                    L.liftedActions$
                                ).pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.Q)(
                                        rxjs__WEBPACK_IMPORTED_MODULE_18__.N
                                    )
                                ),
                                F = m.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        U
                                    )
                                ),
                                K = new rxjs__WEBPACK_IMPORTED_MODULE_19__.t(1),
                                fe = w
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.M)(
                                            F
                                        ),
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_21__.R)(
                                            ({ state: pe }, [J, Me]) => {
                                                let he = Me(pe, J);
                                                return (
                                                    J.type !== PERFORM_ACTION &&
                                                        shouldFilterActions(
                                                            O
                                                        ) &&
                                                        (he = filterLiftedState(
                                                            he,
                                                            O.predicate,
                                                            O.actionsSafelist,
                                                            O.actionsBlocklist
                                                        )),
                                                    L.notify(J, he),
                                                    { state: he, action: J }
                                                );
                                            },
                                            { state: N, action: null }
                                        )
                                    )
                                    .subscribe(({ state: pe, action: J }) => {
                                        K.next(pe),
                                            J.type === PERFORM_ACTION &&
                                                k.next(J.action);
                                    }),
                                _e = L.start$.subscribe(() => {
                                    this.refresh();
                                }),
                                Re = K.asObservable(),
                                Oe = Re.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        unliftState
                                    )
                                );
                            (this.extensionStartSubscription = _e),
                                (this.stateSubscription = fe),
                                (this.dispatcher = f),
                                (this.liftedState = Re),
                                (this.state = Oe);
                        }
                        dispatch(f) {
                            this.dispatcher.next(f);
                        }
                        next(f) {
                            this.dispatcher.next(f);
                        }
                        error(f) {}
                        complete() {}
                        performAction(f) {
                            this.dispatch(new PerformAction(f, +Date.now()));
                        }
                        refresh() {
                            this.dispatch(new Refresh());
                        }
                        reset() {
                            this.dispatch(new Reset(+Date.now()));
                        }
                        rollback() {
                            this.dispatch(new Rollback(+Date.now()));
                        }
                        commit() {
                            this.dispatch(new Commit(+Date.now()));
                        }
                        sweep() {
                            this.dispatch(new Sweep());
                        }
                        toggleAction(f) {
                            this.dispatch(new ToggleAction(f));
                        }
                        jumpToAction(f) {
                            this.dispatch(new JumpToAction(f));
                        }
                        jumpToState(f) {
                            this.dispatch(new JumpToState(f));
                        }
                        importState(f) {
                            this.dispatch(new ImportState(f));
                        }
                        lockChanges(f) {
                            this.dispatch(new LockChanges(f));
                        }
                        pauseRecording(f) {
                            this.dispatch(new PauseRecording(f));
                        }
                    }
                    return (
                        (de.ɵfac = function (f) {
                            return new (f || de)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.n$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsExtension
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.qLn
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y6
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                )
                            );
                        }),
                        (de.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: de,
                                factory: de.ɵfac,
                            })),
                        de
                    );
                })();
            const IS_EXTENSION_OR_MONITOR_PRESENT =
                new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                    '@ngrx/store-devtools Is Devtools Extension or Monitor Present'
                );
            function createIsExtensionOrMonitorPresent(de, Y) {
                return Boolean(de) || Y.monitor !== noMonitor;
            }
            function createReduxDevtoolsExtension() {
                const de = '__REDUX_DEVTOOLS_EXTENSION__';
                return 'object' == typeof window && void 0 !== window[de]
                    ? window[de]
                    : null;
            }
            function createStateObservable(de) {
                return de.state;
            }
            let StoreDevtoolsModule = (() => {
                class de {
                    static instrument(f = {}) {
                        return {
                            ngModule: de,
                            providers: [
                                DevtoolsExtension,
                                DevtoolsDispatcher,
                                StoreDevtools,
                                { provide: INITIAL_OPTIONS, useValue: f },
                                {
                                    provide: IS_EXTENSION_OR_MONITOR_PRESENT,
                                    deps: [
                                        REDUX_DEVTOOLS_EXTENSION,
                                        STORE_DEVTOOLS_CONFIG,
                                    ],
                                    useFactory:
                                        createIsExtensionOrMonitorPresent,
                                },
                                {
                                    provide: REDUX_DEVTOOLS_EXTENSION,
                                    useFactory: createReduxDevtoolsExtension,
                                },
                                {
                                    provide: STORE_DEVTOOLS_CONFIG,
                                    deps: [INITIAL_OPTIONS],
                                    useFactory: createConfig,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.FR,
                                    deps: [StoreDevtools],
                                    useFactory: createStateObservable,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.mK,
                                    useExisting: DevtoolsDispatcher,
                                },
                            ],
                        };
                    }
                }
                return (
                    (de.ɵfac = function (f) {
                        return new (f || de)();
                    }),
                    (de.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__.oAB({
                        type: de,
                    })),
                    (de.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__.cJS(
                        {}
                    )),
                    de
                );
            })();
        },
        5620: (de, Y, f) => {
            f.d(Y, {
                UO: () => Me,
                qg: () => J,
                Y6: () => te,
                mK: () => Qt,
                n$: () => xt,
                Y$: () => gn,
                FR: () => Un,
                yh: () => Kn,
                CK: () => cr,
                Aw: () => yr,
                cr: () => Cn,
                wb: () => ln,
                qC: () => At,
                PH: () => _e,
                Ky: () => Re,
            });
            var s = f(5e3),
                m = f(1135),
                L = f(8306),
                k = f(7579),
                T = f(233),
                S = f(4004),
                N = f(5363),
                U = f(1365),
                w = f(5026),
                F = f(1884);
            const K = {};
            function _e(ce, Qe) {
                if (((K[ce] = (K[ce] || 0) + 1), 'function' == typeof Qe))
                    return pe(ce, (...Ge) =>
                        Object.assign(Object.assign({}, Qe(...Ge)), {
                            type: ce,
                        })
                    );
                switch (Qe ? Qe._as : 'empty') {
                    case 'empty':
                        return pe(ce, () => ({ type: ce }));
                    case 'props':
                        return pe(ce, (Ge) =>
                            Object.assign(Object.assign({}, Ge), { type: ce })
                        );
                    default:
                        throw new Error('Unexpected config.');
                }
            }
            function Re() {
                return { _as: 'props', _p: void 0 };
            }
            function pe(ce, Qe) {
                return Object.defineProperty(Qe, 'type', {
                    value: ce,
                    writable: !1,
                });
            }
            const J = '@ngrx/store/init';
            let Me = (() => {
                class ce extends m.X {
                    constructor() {
                        super({ type: J });
                    }
                    next(xe) {
                        if ('function' == typeof xe)
                            throw new TypeError(
                                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction()."
                            );
                        if (void 0 === xe)
                            throw new TypeError('Actions must be objects');
                        if (void 0 === xe.type)
                            throw new TypeError(
                                'Actions must have a type property'
                            );
                        super.next(xe);
                    }
                    complete() {}
                    ngOnDestroy() {
                        super.complete();
                    }
                }
                return (
                    (ce.ɵfac = function (xe) {
                        return new (xe || ce)();
                    }),
                    (ce.ɵprov = s.Yz7({ token: ce, factory: ce.ɵfac })),
                    ce
                );
            })();
            const he = [Me],
                De = new s.OlP('@ngrx/store Internal Root Guard'),
                R = new s.OlP('@ngrx/store Internal Initial State'),
                te = new s.OlP('@ngrx/store Initial State'),
                G = new s.OlP('@ngrx/store Reducer Factory'),
                oe = new s.OlP('@ngrx/store Internal Reducer Factory Provider'),
                re = new s.OlP('@ngrx/store Initial Reducers'),
                ne = new s.OlP('@ngrx/store Internal Initial Reducers'),
                we = new s.OlP('@ngrx/store Store Features'),
                Fe = new s.OlP('@ngrx/store Internal Store Reducers'),
                je = new s.OlP('@ngrx/store Internal Feature Reducers'),
                We = new s.OlP('@ngrx/store Internal Feature Configs'),
                ke = new s.OlP('@ngrx/store Internal Store Features'),
                pt = new s.OlP('@ngrx/store Internal Feature Reducers Token'),
                Lt = new s.OlP('@ngrx/store Feature Reducers'),
                hn = new s.OlP('@ngrx/store User Provided Meta Reducers'),
                yt = new s.OlP('@ngrx/store Meta Reducers'),
                Ot = new s.OlP('@ngrx/store Internal Resolved Meta Reducers'),
                gt = new s.OlP('@ngrx/store User Runtime Checks Config'),
                Pt = new s.OlP(
                    '@ngrx/store Internal User Runtime Checks Config'
                ),
                It = new s.OlP('@ngrx/store Internal Runtime Checks'),
                mt = new s.OlP('@ngrx/store Check if Action types are unique');
            function $t(ce, Qe = {}) {
                const xe = Object.keys(ce),
                    Ge = {};
                for (let _t = 0; _t < xe.length; _t++) {
                    const Gt = xe[_t];
                    'function' == typeof ce[Gt] && (Ge[Gt] = ce[Gt]);
                }
                const vt = Object.keys(Ge);
                return function (Gt, Ln) {
                    Gt = void 0 === Gt ? Qe : Gt;
                    let Nn = !1;
                    const Vn = {};
                    for (let an = 0; an < vt.length; an++) {
                        const pr = vt[an],
                            wr = Gt[pr],
                            gr = (0, Ge[pr])(wr, Ln);
                        (Vn[pr] = gr), (Nn = Nn || gr !== wr);
                    }
                    return Nn ? Vn : Gt;
                };
            }
            function At(...ce) {
                return function (Qe) {
                    if (0 === ce.length) return Qe;
                    const xe = ce[ce.length - 1];
                    return ce
                        .slice(0, -1)
                        .reduceRight((vt, _t) => _t(vt), xe(Qe));
                };
            }
            function He(ce, Qe) {
                return (
                    Array.isArray(Qe) &&
                        Qe.length > 0 &&
                        (ce = At.apply(null, [...Qe, ce])),
                    (xe, Ge) => {
                        const vt = ce(xe);
                        return (_t, Gt) =>
                            vt((_t = void 0 === _t ? Ge : _t), Gt);
                    }
                );
            }
            class xt extends L.y {}
            class Qt extends Me {}
            const ln = '@ngrx/store/update-reducers';
            let Bn = (() => {
                class ce extends m.X {
                    constructor(xe, Ge, vt, _t) {
                        super(_t(vt, Ge)),
                            (this.dispatcher = xe),
                            (this.initialState = Ge),
                            (this.reducers = vt),
                            (this.reducerFactory = _t);
                    }
                    get currentReducers() {
                        return this.reducers;
                    }
                    addFeature(xe) {
                        this.addFeatures([xe]);
                    }
                    addFeatures(xe) {
                        const Ge = xe.reduce(
                            (
                                vt,
                                {
                                    reducers: _t,
                                    reducerFactory: Gt,
                                    metaReducers: Ln,
                                    initialState: Nn,
                                    key: Vn,
                                }
                            ) => {
                                const an =
                                    'function' == typeof _t
                                        ? (function st(ce) {
                                              const Qe =
                                                  Array.isArray(ce) &&
                                                  ce.length > 0
                                                      ? At(...ce)
                                                      : (xe) => xe;
                                              return (xe, Ge) => (
                                                  (xe = Qe(xe)),
                                                  (vt, _t) =>
                                                      xe(
                                                          (vt =
                                                              void 0 === vt
                                                                  ? Ge
                                                                  : vt),
                                                          _t
                                                      )
                                              );
                                          })(Ln)(_t, Nn)
                                        : He(Gt, Ln)(_t, Nn);
                                return (vt[Vn] = an), vt;
                            },
                            {}
                        );
                        this.addReducers(Ge);
                    }
                    removeFeature(xe) {
                        this.removeFeatures([xe]);
                    }
                    removeFeatures(xe) {
                        this.removeReducers(xe.map((Ge) => Ge.key));
                    }
                    addReducer(xe, Ge) {
                        this.addReducers({ [xe]: Ge });
                    }
                    addReducers(xe) {
                        (this.reducers = Object.assign(
                            Object.assign({}, this.reducers),
                            xe
                        )),
                            this.updateReducers(Object.keys(xe));
                    }
                    removeReducer(xe) {
                        this.removeReducers([xe]);
                    }
                    removeReducers(xe) {
                        xe.forEach((Ge) => {
                            this.reducers = (function nt(ce, Qe) {
                                return Object.keys(ce)
                                    .filter((xe) => xe !== Qe)
                                    .reduce(
                                        (xe, Ge) =>
                                            Object.assign(xe, { [Ge]: ce[Ge] }),
                                        {}
                                    );
                            })(this.reducers, Ge);
                        }),
                            this.updateReducers(xe);
                    }
                    updateReducers(xe) {
                        this.next(
                            this.reducerFactory(
                                this.reducers,
                                this.initialState
                            )
                        ),
                            this.dispatcher.next({ type: ln, features: xe });
                    }
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (ce.ɵfac = function (xe) {
                        return new (xe || ce)(
                            s.LFG(Qt),
                            s.LFG(te),
                            s.LFG(re),
                            s.LFG(G)
                        );
                    }),
                    (ce.ɵprov = s.Yz7({ token: ce, factory: ce.ɵfac })),
                    ce
                );
            })();
            const rn = [
                Bn,
                { provide: xt, useExisting: Bn },
                { provide: Qt, useExisting: Me },
            ];
            let gn = (() => {
                class ce extends k.x {
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (ce.ɵfac = (function () {
                        let Qe;
                        return function (Ge) {
                            return (Qe || (Qe = s.n5z(ce)))(Ge || ce);
                        };
                    })()),
                    (ce.ɵprov = s.Yz7({ token: ce, factory: ce.ɵfac })),
                    ce
                );
            })();
            const Nt = [gn];
            class Un extends L.y {}
            let vn = (() => {
                class ce extends m.X {
                    constructor(xe, Ge, vt, _t) {
                        super(_t);
                        const Vn = xe
                            .pipe((0, N.Q)(T.N))
                            .pipe((0, U.M)(Ge))
                            .pipe((0, w.R)(Dn, { state: _t }));
                        this.stateSubscription = Vn.subscribe(
                            ({ state: an, action: pr }) => {
                                this.next(an), vt.next(pr);
                            }
                        );
                    }
                    ngOnDestroy() {
                        this.stateSubscription.unsubscribe(), this.complete();
                    }
                }
                return (
                    (ce.INIT = J),
                    (ce.ɵfac = function (xe) {
                        return new (xe || ce)(
                            s.LFG(Me),
                            s.LFG(xt),
                            s.LFG(gn),
                            s.LFG(te)
                        );
                    }),
                    (ce.ɵprov = s.Yz7({ token: ce, factory: ce.ɵfac })),
                    ce
                );
            })();
            function Dn(ce = { state: void 0 }, [Qe, xe]) {
                const { state: Ge } = ce;
                return { state: xe(Ge, Qe), action: Qe };
            }
            const rr = [vn, { provide: Un, useExisting: vn }];
            let Kn = (() => {
                class ce extends L.y {
                    constructor(xe, Ge, vt) {
                        super(),
                            (this.actionsObserver = Ge),
                            (this.reducerManager = vt),
                            (this.source = xe);
                    }
                    select(xe, ...Ge) {
                        return ge.call(null, xe, ...Ge)(this);
                    }
                    lift(xe) {
                        const Ge = new ce(
                            this,
                            this.actionsObserver,
                            this.reducerManager
                        );
                        return (Ge.operator = xe), Ge;
                    }
                    dispatch(xe) {
                        this.actionsObserver.next(xe);
                    }
                    next(xe) {
                        this.actionsObserver.next(xe);
                    }
                    error(xe) {
                        this.actionsObserver.error(xe);
                    }
                    complete() {
                        this.actionsObserver.complete();
                    }
                    addReducer(xe, Ge) {
                        this.reducerManager.addReducer(xe, Ge);
                    }
                    removeReducer(xe) {
                        this.reducerManager.removeReducer(xe);
                    }
                }
                return (
                    (ce.ɵfac = function (xe) {
                        return new (xe || ce)(s.LFG(Un), s.LFG(Me), s.LFG(Bn));
                    }),
                    (ce.ɵprov = s.Yz7({ token: ce, factory: ce.ɵfac })),
                    ce
                );
            })();
            const rt = [Kn];
            function ge(ce, Qe, ...xe) {
                return function (vt) {
                    let _t;
                    if ('string' == typeof ce) {
                        const Gt = [Qe, ...xe].filter(Boolean);
                        _t = vt.pipe(
                            (function O(...ce) {
                                const Qe = ce.length;
                                if (0 === Qe)
                                    throw new Error(
                                        'list of properties cannot be empty.'
                                    );
                                return (0, S.U)((xe) => {
                                    let Ge = xe;
                                    for (let vt = 0; vt < Qe; vt++) {
                                        const _t =
                                            null == Ge ? void 0 : Ge[ce[vt]];
                                        if (void 0 === _t) return;
                                        Ge = _t;
                                    }
                                    return Ge;
                                });
                            })(ce, ...Gt)
                        );
                    } else {
                        if ('function' != typeof ce)
                            throw new TypeError(
                                `Unexpected type '${typeof ce}' in select operator, expected 'string' or 'function'`
                            );
                        _t = vt.pipe((0, S.U)((Gt) => ce(Gt, Qe)));
                    }
                    return _t.pipe((0, F.x)());
                };
            }
            const ze =
                'https://ngrx.io/guide/store/configuration/runtime-checks';
            function Ze(ce) {
                return void 0 === ce;
            }
            function lt(ce) {
                return null === ce;
            }
            function bt(ce) {
                return Array.isArray(ce);
            }
            function Gn(ce) {
                return 'object' == typeof ce && null !== ce;
            }
            function q(ce) {
                return 'function' == typeof ce;
            }
            function Se(ce) {
                Object.freeze(ce);
                const Qe = q(ce);
                return (
                    Object.getOwnPropertyNames(ce).forEach((xe) => {
                        if (
                            !xe.startsWith('\u0275') &&
                            (function Ee(ce, Qe) {
                                return Object.prototype.hasOwnProperty.call(
                                    ce,
                                    Qe
                                );
                            })(ce, xe) &&
                            (!Qe ||
                                ('caller' !== xe &&
                                    'callee' !== xe &&
                                    'arguments' !== xe))
                        ) {
                            const Ge = ce[xe];
                            (Gn(Ge) || q(Ge)) && !Object.isFrozen(Ge) && Se(Ge);
                        }
                    }),
                    ce
                );
            }
            function kt(ce, Qe = []) {
                return (Ze(ce) || lt(ce)) && 0 === Qe.length
                    ? { path: ['root'], value: ce }
                    : Object.keys(ce).reduce((Ge, vt) => {
                          if (Ge) return Ge;
                          const _t = ce[vt];
                          return (function ue(ce) {
                              return q(ce) && ce.hasOwnProperty('\u0275cmp');
                          })(_t)
                              ? Ge
                              : !(
                                    Ze(_t) ||
                                    lt(_t) ||
                                    (function Wt(ce) {
                                        return 'number' == typeof ce;
                                    })(_t) ||
                                    (function Kt(ce) {
                                        return 'boolean' == typeof ce;
                                    })(_t) ||
                                    (function mn(ce) {
                                        return 'string' == typeof ce;
                                    })(_t) ||
                                    bt(_t)
                                ) &&
                                    ((function Mn(ce) {
                                        if (
                                            !(function yn(ce) {
                                                return Gn(ce) && !bt(ce);
                                            })(ce)
                                        )
                                            return !1;
                                        const Qe = Object.getPrototypeOf(ce);
                                        return (
                                            Qe === Object.prototype ||
                                            null === Qe
                                        );
                                    })(_t)
                                        ? kt(_t, [...Qe, vt])
                                        : { path: [...Qe, vt], value: _t });
                      }, !1);
            }
            function Vt(ce, Qe) {
                if (!1 === ce) return;
                const xe = ce.path.join('.'),
                    Ge = new Error(
                        `Detected unserializable ${Qe} at "${xe}". ${ze}#strict${Qe}serializability`
                    );
                throw ((Ge.value = ce.value), (Ge.unserializablePath = xe), Ge);
            }
            function ir(ce) {
                return (0, s.X6Q)()
                    ? Object.assign(
                          {
                              strictStateSerializability: !1,
                              strictActionSerializability: !1,
                              strictStateImmutability: !0,
                              strictActionImmutability: !0,
                              strictActionWithinNgZone: !1,
                              strictActionTypeUniqueness: !1,
                          },
                          ce
                      )
                    : {
                          strictStateSerializability: !1,
                          strictActionSerializability: !1,
                          strictStateImmutability: !1,
                          strictActionImmutability: !1,
                          strictActionWithinNgZone: !1,
                          strictActionTypeUniqueness: !1,
                      };
            }
            function sr({
                strictActionSerializability: ce,
                strictStateSerializability: Qe,
            }) {
                return (xe) =>
                    ce || Qe
                        ? (function Ye(ce, Qe) {
                              return function (xe, Ge) {
                                  Qe.action(Ge) && Vt(kt(Ge), 'action');
                                  const vt = ce(xe, Ge);
                                  return Qe.state() && Vt(kt(vt), 'state'), vt;
                              };
                          })(xe, {
                              action: (Ge) => ce && !fr(Ge),
                              state: () => Qe,
                          })
                        : xe;
            }
            function ur({
                strictActionImmutability: ce,
                strictStateImmutability: Qe,
            }) {
                return (xe) =>
                    ce || Qe
                        ? (function X(ce, Qe) {
                              return function (xe, Ge) {
                                  const vt = Qe.action(Ge) ? Se(Ge) : Ge,
                                      _t = ce(xe, vt);
                                  return Qe.state() ? Se(_t) : _t;
                              };
                          })(xe, {
                              action: (Ge) => ce && !fr(Ge),
                              state: () => Qe,
                          })
                        : xe;
            }
            function fr(ce) {
                return ce.type.startsWith('@ngrx');
            }
            function Qn({ strictActionWithinNgZone: ce }) {
                return (Qe) =>
                    ce
                        ? (function Sn(ce, Qe) {
                              return function (xe, Ge) {
                                  if (Qe.action(Ge) && !s.R0b.isInAngularZone())
                                      throw new Error(
                                          `Action '${Ge.type}' running outside NgZone. ${ze}#strictactionwithinngzone`
                                      );
                                  return ce(xe, Ge);
                              };
                          })(Qe, { action: (xe) => ce && !fr(xe) })
                        : Qe;
            }
            function Yn(ce) {
                return [
                    { provide: Pt, useValue: ce },
                    { provide: gt, useFactory: wt, deps: [Pt] },
                    { provide: It, deps: [gt], useFactory: ir },
                    { provide: yt, multi: !0, deps: [It], useFactory: ur },
                    { provide: yt, multi: !0, deps: [It], useFactory: sr },
                    { provide: yt, multi: !0, deps: [It], useFactory: Qn },
                ];
            }
            function or() {
                return [{ provide: mt, multi: !0, deps: [It], useFactory: Xt }];
            }
            function wt(ce) {
                return ce;
            }
            function Xt(ce) {
                if (!ce.strictActionTypeUniqueness) return;
                const Qe = Object.entries(K)
                    .filter(([, xe]) => xe > 1)
                    .map(([xe]) => xe);
                if (Qe.length)
                    throw new Error(
                        `Action types are registered more than once, ${Qe.map(
                            (xe) => `"${xe}"`
                        ).join(', ')}. ${ze}#strictactiontypeuniqueness`
                    );
            }
            let Cn = (() => {
                    class ce {
                        constructor(xe, Ge, vt, _t, Gt, Ln) {}
                    }
                    return (
                        (ce.ɵfac = function (xe) {
                            return new (xe || ce)(
                                s.LFG(Me),
                                s.LFG(xt),
                                s.LFG(gn),
                                s.LFG(Kn),
                                s.LFG(De, 8),
                                s.LFG(mt, 8)
                            );
                        }),
                        (ce.ɵmod = s.oAB({ type: ce })),
                        (ce.ɵinj = s.cJS({})),
                        ce
                    );
                })(),
                cr = (() => {
                    class ce {
                        constructor(xe, Ge, vt, _t, Gt) {
                            (this.features = xe),
                                (this.featureReducers = Ge),
                                (this.reducerManager = vt);
                            const Ln = xe.map((Nn, Vn) => {
                                const pr = Ge.shift()[Vn];
                                return Object.assign(Object.assign({}, Nn), {
                                    reducers: pr,
                                    initialState: Nr(Nn.initialState),
                                });
                            });
                            vt.addFeatures(Ln);
                        }
                        ngOnDestroy() {
                            this.reducerManager.removeFeatures(this.features);
                        }
                    }
                    return (
                        (ce.ɵfac = function (xe) {
                            return new (xe || ce)(
                                s.LFG(ke),
                                s.LFG(Lt),
                                s.LFG(Bn),
                                s.LFG(Cn),
                                s.LFG(mt, 8)
                            );
                        }),
                        (ce.ɵmod = s.oAB({ type: ce })),
                        (ce.ɵinj = s.cJS({})),
                        ce
                    );
                })(),
                yr = (() => {
                    class ce {
                        static forRoot(xe, Ge = {}) {
                            return {
                                ngModule: Cn,
                                providers: [
                                    {
                                        provide: De,
                                        useFactory: tn,
                                        deps: [[Kn, new s.FiY(), new s.tp0()]],
                                    },
                                    { provide: R, useValue: Ge.initialState },
                                    { provide: te, useFactory: Nr, deps: [R] },
                                    { provide: ne, useValue: xe },
                                    {
                                        provide: Fe,
                                        useExisting:
                                            xe instanceof s.OlP ? xe : ne,
                                    },
                                    {
                                        provide: re,
                                        deps: [s.zs3, ne, [new s.tBr(Fe)]],
                                        useFactory: Jn,
                                    },
                                    {
                                        provide: hn,
                                        useValue: Ge.metaReducers
                                            ? Ge.metaReducers
                                            : [],
                                    },
                                    {
                                        provide: Ot,
                                        deps: [yt, hn],
                                        useFactory: qn,
                                    },
                                    {
                                        provide: oe,
                                        useValue: Ge.reducerFactory
                                            ? Ge.reducerFactory
                                            : $t,
                                    },
                                    {
                                        provide: G,
                                        deps: [oe, Ot],
                                        useFactory: He,
                                    },
                                    he,
                                    rn,
                                    Nt,
                                    rr,
                                    rt,
                                    Yn(Ge.runtimeChecks),
                                    or(),
                                ],
                            };
                        }
                        static forFeature(xe, Ge, vt = {}) {
                            return {
                                ngModule: cr,
                                providers: [
                                    {
                                        provide: We,
                                        multi: !0,
                                        useValue:
                                            xe instanceof Object ? {} : vt,
                                    },
                                    {
                                        provide: we,
                                        multi: !0,
                                        useValue: {
                                            key:
                                                xe instanceof Object
                                                    ? xe.name
                                                    : xe,
                                            reducerFactory:
                                                vt instanceof s.OlP ||
                                                !vt.reducerFactory
                                                    ? $t
                                                    : vt.reducerFactory,
                                            metaReducers:
                                                vt instanceof s.OlP ||
                                                !vt.metaReducers
                                                    ? []
                                                    : vt.metaReducers,
                                            initialState:
                                                vt instanceof s.OlP ||
                                                !vt.initialState
                                                    ? void 0
                                                    : vt.initialState,
                                        },
                                    },
                                    {
                                        provide: ke,
                                        deps: [s.zs3, We, we],
                                        useFactory: vr,
                                    },
                                    {
                                        provide: je,
                                        multi: !0,
                                        useValue:
                                            xe instanceof Object
                                                ? xe.reducer
                                                : Ge,
                                    },
                                    {
                                        provide: pt,
                                        multi: !0,
                                        useExisting:
                                            Ge instanceof s.OlP ? Ge : je,
                                    },
                                    {
                                        provide: Lt,
                                        multi: !0,
                                        deps: [s.zs3, je, [new s.tBr(pt)]],
                                        useFactory: Pn,
                                    },
                                    or(),
                                ],
                            };
                        }
                    }
                    return (
                        (ce.ɵfac = function (xe) {
                            return new (xe || ce)();
                        }),
                        (ce.ɵmod = s.oAB({ type: ce })),
                        (ce.ɵinj = s.cJS({})),
                        ce
                    );
                })();
            function Jn(ce, Qe) {
                return Qe instanceof s.OlP ? ce.get(Qe) : Qe;
            }
            function vr(ce, Qe, xe) {
                return xe.map((Ge, vt) => {
                    if (Qe[vt] instanceof s.OlP) {
                        const _t = ce.get(Qe[vt]);
                        return {
                            key: Ge.key,
                            reducerFactory: _t.reducerFactory
                                ? _t.reducerFactory
                                : $t,
                            metaReducers: _t.metaReducers
                                ? _t.metaReducers
                                : [],
                            initialState: _t.initialState,
                        };
                    }
                    return Ge;
                });
            }
            function Pn(ce, Qe) {
                return Qe.map((Ge) => (Ge instanceof s.OlP ? ce.get(Ge) : Ge));
            }
            function Nr(ce) {
                return 'function' == typeof ce ? ce() : ce;
            }
            function qn(ce, Qe) {
                return ce.concat(Qe);
            }
            function tn(ce) {
                if (ce)
                    throw new TypeError(
                        'StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        8766: (de, Y, f) => {
            f.d(Y, { Lj: () => De, X3: () => he });
            var s = f(5861);
            let L, k;
            const O = new WeakMap(),
                N = new WeakMap(),
                U = new WeakMap(),
                w = new WeakMap(),
                F = new WeakMap();
            let _e = {
                get(re, ne, we) {
                    if (re instanceof IDBTransaction) {
                        if ('done' === ne) return N.get(re);
                        if ('objectStoreNames' === ne)
                            return re.objectStoreNames || U.get(re);
                        if ('store' === ne)
                            return we.objectStoreNames[1]
                                ? void 0
                                : we.objectStore(we.objectStoreNames[0]);
                    }
                    return J(re[ne]);
                },
                set: (re, ne, we) => ((re[ne] = we), !0),
                has: (re, ne) =>
                    (re instanceof IDBTransaction &&
                        ('done' === ne || 'store' === ne)) ||
                    ne in re,
            };
            function pe(re) {
                return 'function' == typeof re
                    ? (function Oe(re) {
                          return re !== IDBDatabase.prototype.transaction ||
                              'objectStoreNames' in IDBTransaction.prototype
                              ? (function S() {
                                    return (
                                        k ||
                                        (k = [
                                            IDBCursor.prototype.advance,
                                            IDBCursor.prototype.continue,
                                            IDBCursor.prototype
                                                .continuePrimaryKey,
                                        ])
                                    );
                                })().includes(re)
                                  ? function (...ne) {
                                        return (
                                            re.apply(Me(this), ne),
                                            J(O.get(this))
                                        );
                                    }
                                  : function (...ne) {
                                        return J(re.apply(Me(this), ne));
                                    }
                              : function (ne, ...we) {
                                    const Fe = re.call(Me(this), ne, ...we);
                                    return (
                                        U.set(Fe, ne.sort ? ne.sort() : [ne]),
                                        J(Fe)
                                    );
                                };
                      })(re)
                    : (re instanceof IDBTransaction &&
                          (function fe(re) {
                              if (N.has(re)) return;
                              const ne = new Promise((we, Fe) => {
                                  const je = () => {
                                          re.removeEventListener(
                                              'complete',
                                              We
                                          ),
                                              re.removeEventListener(
                                                  'error',
                                                  ke
                                              ),
                                              re.removeEventListener(
                                                  'abort',
                                                  ke
                                              );
                                      },
                                      We = () => {
                                          we(), je();
                                      },
                                      ke = () => {
                                          Fe(
                                              re.error ||
                                                  new DOMException(
                                                      'AbortError',
                                                      'AbortError'
                                                  )
                                          ),
                                              je();
                                      };
                                  re.addEventListener('complete', We),
                                      re.addEventListener('error', ke),
                                      re.addEventListener('abort', ke);
                              });
                              N.set(re, ne);
                          })(re),
                      ((re, ne) => ne.some((we) => re instanceof we))(
                          re,
                          (function T() {
                              return (
                                  L ||
                                  (L = [
                                      IDBDatabase,
                                      IDBObjectStore,
                                      IDBIndex,
                                      IDBCursor,
                                      IDBTransaction,
                                  ])
                              );
                          })()
                      )
                          ? new Proxy(re, _e)
                          : re);
            }
            function J(re) {
                if (re instanceof IDBRequest)
                    return (function K(re) {
                        const ne = new Promise((we, Fe) => {
                            const je = () => {
                                    re.removeEventListener('success', We),
                                        re.removeEventListener('error', ke);
                                },
                                We = () => {
                                    we(J(re.result)), je();
                                },
                                ke = () => {
                                    Fe(re.error), je();
                                };
                            re.addEventListener('success', We),
                                re.addEventListener('error', ke);
                        });
                        return (
                            ne
                                .then((we) => {
                                    we instanceof IDBCursor && O.set(we, re);
                                })
                                .catch(() => {}),
                            F.set(ne, re),
                            ne
                        );
                    })(re);
                if (w.has(re)) return w.get(re);
                const ne = pe(re);
                return ne !== re && (w.set(re, ne), F.set(ne, re)), ne;
            }
            const Me = (re) => F.get(re);
            function he(
                re,
                ne,
                { blocked: we, upgrade: Fe, blocking: je, terminated: We } = {}
            ) {
                const ke = indexedDB.open(re, ne),
                    pt = J(ke);
                return (
                    Fe &&
                        ke.addEventListener('upgradeneeded', (Lt) => {
                            Fe(
                                J(ke.result),
                                Lt.oldVersion,
                                Lt.newVersion,
                                J(ke.transaction)
                            );
                        }),
                    we && ke.addEventListener('blocked', () => we()),
                    pt
                        .then((Lt) => {
                            We && Lt.addEventListener('close', () => We()),
                                je &&
                                    Lt.addEventListener('versionchange', () =>
                                        je()
                                    );
                        })
                        .catch(() => {}),
                    pt
                );
            }
            function De(re, { blocked: ne } = {}) {
                const we = indexedDB.deleteDatabase(re);
                return (
                    ne && we.addEventListener('blocked', () => ne()),
                    J(we).then(() => {})
                );
            }
            const R = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'],
                te = ['put', 'add', 'delete', 'clear'],
                G = new Map();
            function oe(re, ne) {
                if (
                    !(re instanceof IDBDatabase) ||
                    ne in re ||
                    'string' != typeof ne
                )
                    return;
                if (G.get(ne)) return G.get(ne);
                const we = ne.replace(/FromIndex$/, ''),
                    Fe = ne !== we,
                    je = te.includes(we);
                if (
                    !(we in (Fe ? IDBIndex : IDBObjectStore).prototype) ||
                    (!je && !R.includes(we))
                )
                    return;
                const We = (function () {
                    var ke = (0, s.Z)(function* (pt, ...Lt) {
                        const hn = this.transaction(
                            pt,
                            je ? 'readwrite' : 'readonly'
                        );
                        let yt = hn.store;
                        return (
                            Fe && (yt = yt.index(Lt.shift())),
                            (yield Promise.all([
                                yt[we](...Lt),
                                je && hn.done,
                            ]))[0]
                        );
                    });
                    return function (Lt) {
                        return ke.apply(this, arguments);
                    };
                })();
                return G.set(ne, We), We;
            }
            !(function Re(re) {
                _e = re(_e);
            })((re) =>
                cm(um({}, re), {
                    get: (ne, we, Fe) => oe(ne, we) || re.get(ne, we, Fe),
                    has: (ne, we) => !!oe(ne, we) || re.has(ne, we),
                })
            );
        },
        9783: (de, Y, f) => {
            f.d(Y, {
                $_: () => J,
                F0: () => _e,
                a6: () => S,
                b4: () => O,
                ez: () => fe,
                h4: () => pe,
                iZ: () => F,
                jx: () => Me,
                m8: () => he,
                pg: () => Oe,
                ws: () => N,
            });
            var s = f(5e3),
                m = f(7579),
                L = f(5921),
                k = f(9808);
            const T = ['*'];
            let S = (() => {
                    class R {}
                    return (
                        (R.STARTS_WITH = 'startsWith'),
                        (R.CONTAINS = 'contains'),
                        (R.NOT_CONTAINS = 'notContains'),
                        (R.ENDS_WITH = 'endsWith'),
                        (R.EQUALS = 'equals'),
                        (R.NOT_EQUALS = 'notEquals'),
                        (R.IN = 'in'),
                        (R.LESS_THAN = 'lt'),
                        (R.LESS_THAN_OR_EQUAL_TO = 'lte'),
                        (R.GREATER_THAN = 'gt'),
                        (R.GREATER_THAN_OR_EQUAL_TO = 'gte'),
                        (R.BETWEEN = 'between'),
                        (R.IS = 'is'),
                        (R.IS_NOT = 'isNot'),
                        (R.BEFORE = 'before'),
                        (R.AFTER = 'after'),
                        (R.DATE_IS = 'dateIs'),
                        (R.DATE_IS_NOT = 'dateIsNot'),
                        (R.DATE_BEFORE = 'dateBefore'),
                        (R.DATE_AFTER = 'dateAfter'),
                        R
                    );
                })(),
                O = (() => {
                    class R {
                        constructor() {
                            (this.ripple = !1),
                                (this.filterMatchModeOptions = {
                                    text: [
                                        S.STARTS_WITH,
                                        S.CONTAINS,
                                        S.NOT_CONTAINS,
                                        S.ENDS_WITH,
                                        S.EQUALS,
                                        S.NOT_EQUALS,
                                    ],
                                    numeric: [
                                        S.EQUALS,
                                        S.NOT_EQUALS,
                                        S.LESS_THAN,
                                        S.LESS_THAN_OR_EQUAL_TO,
                                        S.GREATER_THAN,
                                        S.GREATER_THAN_OR_EQUAL_TO,
                                    ],
                                    date: [
                                        S.DATE_IS,
                                        S.DATE_IS_NOT,
                                        S.DATE_BEFORE,
                                        S.DATE_AFTER,
                                    ],
                                }),
                                (this.translation = {
                                    startsWith: 'Starts with',
                                    contains: 'Contains',
                                    notContains: 'Not contains',
                                    endsWith: 'Ends with',
                                    equals: 'Equals',
                                    notEquals: 'Not equals',
                                    noFilter: 'No Filter',
                                    lt: 'Less than',
                                    lte: 'Less than or equal to',
                                    gt: 'Greater than',
                                    gte: 'Greater than or equal to',
                                    is: 'Is',
                                    isNot: 'Is not',
                                    before: 'Before',
                                    after: 'After',
                                    dateIs: 'Date is',
                                    dateIsNot: 'Date is not',
                                    dateBefore: 'Date is before',
                                    dateAfter: 'Date is after',
                                    clear: 'Clear',
                                    apply: 'Apply',
                                    matchAll: 'Match All',
                                    matchAny: 'Match Any',
                                    addRule: 'Add Rule',
                                    removeRule: 'Remove Rule',
                                    accept: 'Yes',
                                    reject: 'No',
                                    choose: 'Choose',
                                    upload: 'Upload',
                                    cancel: 'Cancel',
                                    dayNames: [
                                        'Sunday',
                                        'Monday',
                                        'Tuesday',
                                        'Wednesday',
                                        'Thursday',
                                        'Friday',
                                        'Saturday',
                                    ],
                                    dayNamesShort: [
                                        'Sun',
                                        'Mon',
                                        'Tue',
                                        'Wed',
                                        'Thu',
                                        'Fri',
                                        'Sat',
                                    ],
                                    dayNamesMin: [
                                        'Su',
                                        'Mo',
                                        'Tu',
                                        'We',
                                        'Th',
                                        'Fr',
                                        'Sa',
                                    ],
                                    monthNames: [
                                        'January',
                                        'February',
                                        'March',
                                        'April',
                                        'May',
                                        'June',
                                        'July',
                                        'August',
                                        'September',
                                        'October',
                                        'November',
                                        'December',
                                    ],
                                    monthNamesShort: [
                                        'Jan',
                                        'Feb',
                                        'Mar',
                                        'Apr',
                                        'May',
                                        'Jun',
                                        'Jul',
                                        'Aug',
                                        'Sep',
                                        'Oct',
                                        'Nov',
                                        'Dec',
                                    ],
                                    dateFormat: 'mm/dd/yy',
                                    today: 'Today',
                                    weekHeader: 'Wk',
                                    weak: 'Weak',
                                    medium: 'Medium',
                                    strong: 'Strong',
                                    passwordPrompt: 'Enter a password',
                                    emptyMessage: 'No results found',
                                    emptyFilterMessage: 'No results found',
                                }),
                                (this.zIndex = {
                                    modal: 1100,
                                    overlay: 1e3,
                                    menu: 1e3,
                                    tooltip: 1100,
                                }),
                                (this.translationSource = new m.x()),
                                (this.translationObserver =
                                    this.translationSource.asObservable());
                        }
                        getTranslation(G) {
                            return this.translation[G];
                        }
                        setTranslation(G) {
                            (this.translation = Object.assign(
                                Object.assign({}, this.translation),
                                G
                            )),
                                this.translationSource.next(this.translation);
                        }
                    }
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵprov = s.Yz7({
                            token: R,
                            factory: R.ɵfac,
                            providedIn: 'root',
                        })),
                        R
                    );
                })(),
                N = (() => {
                    class R {}
                    return (
                        (R.STARTS_WITH = 'startsWith'),
                        (R.CONTAINS = 'contains'),
                        (R.NOT_CONTAINS = 'notContains'),
                        (R.ENDS_WITH = 'endsWith'),
                        (R.EQUALS = 'equals'),
                        (R.NOT_EQUALS = 'notEquals'),
                        (R.NO_FILTER = 'noFilter'),
                        (R.LT = 'lt'),
                        (R.LTE = 'lte'),
                        (R.GT = 'gt'),
                        (R.GTE = 'gte'),
                        (R.IS = 'is'),
                        (R.IS_NOT = 'isNot'),
                        (R.BEFORE = 'before'),
                        (R.AFTER = 'after'),
                        (R.CLEAR = 'clear'),
                        (R.APPLY = 'apply'),
                        (R.MATCH_ALL = 'matchAll'),
                        (R.MATCH_ANY = 'matchAny'),
                        (R.ADD_RULE = 'addRule'),
                        (R.REMOVE_RULE = 'removeRule'),
                        (R.ACCEPT = 'accept'),
                        (R.REJECT = 'reject'),
                        (R.CHOOSE = 'choose'),
                        (R.UPLOAD = 'upload'),
                        (R.CANCEL = 'cancel'),
                        (R.DAY_NAMES = 'dayNames'),
                        (R.DAY_NAMES_SHORT = 'dayNamesShort'),
                        (R.DAY_NAMES_MIN = 'dayNamesMin'),
                        (R.MONTH_NAMES = 'monthNames'),
                        (R.MONTH_NAMES_SHORT = 'monthNamesShort'),
                        (R.TODAY = 'today'),
                        (R.WEEK_HEADER = 'weekHeader'),
                        (R.WEAK = 'weak'),
                        (R.MEDIUM = 'medium'),
                        (R.STRONG = 'strong'),
                        (R.PASSWORD_PROMPT = 'passwordPrompt'),
                        (R.EMPTY_MESSAGE = 'emptyMessage'),
                        (R.EMPTY_FILTER_MESSAGE = 'emptyFilterMessage'),
                        R
                    );
                })(),
                F = (() => {
                    class R {
                        constructor() {
                            this.filters = {
                                startsWith: (G, oe, re) => {
                                    if (null == oe || '' === oe.trim())
                                        return !0;
                                    if (null == G) return !1;
                                    let ne = L.gb
                                        .removeAccents(oe.toString())
                                        .toLocaleLowerCase(re);
                                    return (
                                        L.gb
                                            .removeAccents(G.toString())
                                            .toLocaleLowerCase(re)
                                            .slice(0, ne.length) === ne
                                    );
                                },
                                contains: (G, oe, re) => {
                                    if (
                                        null == oe ||
                                        ('string' == typeof oe &&
                                            '' === oe.trim())
                                    )
                                        return !0;
                                    if (null == G) return !1;
                                    let ne = L.gb
                                        .removeAccents(oe.toString())
                                        .toLocaleLowerCase(re);
                                    return (
                                        -1 !==
                                        L.gb
                                            .removeAccents(G.toString())
                                            .toLocaleLowerCase(re)
                                            .indexOf(ne)
                                    );
                                },
                                notContains: (G, oe, re) => {
                                    if (
                                        null == oe ||
                                        ('string' == typeof oe &&
                                            '' === oe.trim())
                                    )
                                        return !0;
                                    if (null == G) return !1;
                                    let ne = L.gb
                                        .removeAccents(oe.toString())
                                        .toLocaleLowerCase(re);
                                    return (
                                        -1 ===
                                        L.gb
                                            .removeAccents(G.toString())
                                            .toLocaleLowerCase(re)
                                            .indexOf(ne)
                                    );
                                },
                                endsWith: (G, oe, re) => {
                                    if (null == oe || '' === oe.trim())
                                        return !0;
                                    if (null == G) return !1;
                                    let ne = L.gb
                                            .removeAccents(oe.toString())
                                            .toLocaleLowerCase(re),
                                        we = L.gb
                                            .removeAccents(G.toString())
                                            .toLocaleLowerCase(re);
                                    return (
                                        -1 !==
                                        we.indexOf(ne, we.length - ne.length)
                                    );
                                },
                                equals: (G, oe, re) =>
                                    null == oe ||
                                    ('string' == typeof oe &&
                                        '' === oe.trim()) ||
                                    (null != G &&
                                        (G.getTime && oe.getTime
                                            ? G.getTime() === oe.getTime()
                                            : L.gb
                                                  .removeAccents(G.toString())
                                                  .toLocaleLowerCase(re) ==
                                              L.gb
                                                  .removeAccents(oe.toString())
                                                  .toLocaleLowerCase(re))),
                                notEquals: (G, oe, re) =>
                                    !(
                                        null == oe ||
                                        ('string' == typeof oe &&
                                            '' === oe.trim()) ||
                                        (null != G &&
                                            (G.getTime && oe.getTime
                                                ? G.getTime() === oe.getTime()
                                                : L.gb
                                                      .removeAccents(
                                                          G.toString()
                                                      )
                                                      .toLocaleLowerCase(re) ==
                                                  L.gb
                                                      .removeAccents(
                                                          oe.toString()
                                                      )
                                                      .toLocaleLowerCase(re)))
                                    ),
                                in: (G, oe) => {
                                    if (null == oe || 0 === oe.length)
                                        return !0;
                                    for (let re = 0; re < oe.length; re++)
                                        if (L.gb.equals(G, oe[re])) return !0;
                                    return !1;
                                },
                                between: (G, oe) =>
                                    null == oe ||
                                    null == oe[0] ||
                                    null == oe[1] ||
                                    (null != G &&
                                        (G.getTime
                                            ? oe[0].getTime() <= G.getTime() &&
                                              G.getTime() <= oe[1].getTime()
                                            : oe[0] <= G && G <= oe[1])),
                                lt: (G, oe, re) =>
                                    null == oe ||
                                    (null != G &&
                                        (G.getTime && oe.getTime
                                            ? G.getTime() < oe.getTime()
                                            : G < oe)),
                                lte: (G, oe, re) =>
                                    null == oe ||
                                    (null != G &&
                                        (G.getTime && oe.getTime
                                            ? G.getTime() <= oe.getTime()
                                            : G <= oe)),
                                gt: (G, oe, re) =>
                                    null == oe ||
                                    (null != G &&
                                        (G.getTime && oe.getTime
                                            ? G.getTime() > oe.getTime()
                                            : G > oe)),
                                gte: (G, oe, re) =>
                                    null == oe ||
                                    (null != G &&
                                        (G.getTime && oe.getTime
                                            ? G.getTime() >= oe.getTime()
                                            : G >= oe)),
                                is: (G, oe, re) =>
                                    this.filters.equals(G, oe, re),
                                isNot: (G, oe, re) =>
                                    this.filters.notEquals(G, oe, re),
                                before: (G, oe, re) =>
                                    this.filters.lt(G, oe, re),
                                after: (G, oe, re) =>
                                    this.filters.gt(G, oe, re),
                                dateIs: (G, oe) =>
                                    null == oe ||
                                    (null != G &&
                                        G.toDateString() === oe.toDateString()),
                                dateIsNot: (G, oe) =>
                                    null == oe ||
                                    (null != G &&
                                        G.toDateString() !== oe.toDateString()),
                                dateBefore: (G, oe) =>
                                    null == oe ||
                                    (null != G && G.getTime() < oe.getTime()),
                                dateAfter: (G, oe) =>
                                    null == oe ||
                                    (null != G && G.getTime() > oe.getTime()),
                            };
                        }
                        filter(G, oe, re, ne, we) {
                            let Fe = [];
                            if (G)
                                for (let je of G)
                                    for (let We of oe) {
                                        let ke = L.gb.resolveFieldData(je, We);
                                        if (this.filters[ne](ke, re, we)) {
                                            Fe.push(je);
                                            break;
                                        }
                                    }
                            return Fe;
                        }
                        register(G, oe) {
                            this.filters[G] = oe;
                        }
                    }
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵprov = s.Yz7({
                            token: R,
                            factory: R.ɵfac,
                            providedIn: 'root',
                        })),
                        R
                    );
                })(),
                fe = (() => {
                    class R {
                        constructor() {
                            (this.messageSource = new m.x()),
                                (this.clearSource = new m.x()),
                                (this.messageObserver =
                                    this.messageSource.asObservable()),
                                (this.clearObserver =
                                    this.clearSource.asObservable());
                        }
                        add(G) {
                            G && this.messageSource.next(G);
                        }
                        addAll(G) {
                            G && G.length && this.messageSource.next(G);
                        }
                        clear(G) {
                            this.clearSource.next(G || null);
                        }
                    }
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵprov = s.Yz7({ token: R, factory: R.ɵfac })),
                        R
                    );
                })(),
                _e = (() => {
                    class R {
                        constructor() {
                            (this.clickSource = new m.x()),
                                (this.clickObservable =
                                    this.clickSource.asObservable());
                        }
                        add(G) {
                            G && this.clickSource.next(G);
                        }
                    }
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵprov = s.Yz7({
                            token: R,
                            factory: R.ɵfac,
                            providedIn: 'root',
                        })),
                        R
                    );
                })(),
                Oe = (() => {
                    class R {}
                    return (R.AND = 'and'), (R.OR = 'or'), R;
                })(),
                pe = (() => {
                    class R {}
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵcmp = s.Xpm({
                            type: R,
                            selectors: [['p-header']],
                            ngContentSelectors: T,
                            decls: 1,
                            vars: 0,
                            template: function (G, oe) {
                                1 & G && (s.F$t(), s.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        R
                    );
                })(),
                J = (() => {
                    class R {}
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵcmp = s.Xpm({
                            type: R,
                            selectors: [['p-footer']],
                            ngContentSelectors: T,
                            decls: 1,
                            vars: 0,
                            template: function (G, oe) {
                                1 & G && (s.F$t(), s.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        R
                    );
                })(),
                Me = (() => {
                    class R {
                        constructor(G) {
                            this.template = G;
                        }
                        getType() {
                            return this.name;
                        }
                    }
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)(s.Y36(s.Rgc));
                        }),
                        (R.ɵdir = s.lG2({
                            type: R,
                            selectors: [['', 'pTemplate', '']],
                            inputs: {
                                type: 'type',
                                name: ['pTemplate', 'name'],
                            },
                        })),
                        R
                    );
                })(),
                he = (() => {
                    class R {}
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵmod = s.oAB({ type: R })),
                        (R.ɵinj = s.cJS({ imports: [[k.ez]] })),
                        R
                    );
                })();
        },
        2266: (de, Y, f) => {
            f.d(Y, { F: () => w, q: () => U });
            var s = f(5e3),
                m = f(9808);
            function L(F, K) {
                if (
                    (1 & F && (s.TgZ(0, 'span', 4), s._uU(1), s.qZA()), 2 & F)
                ) {
                    const fe = s.oxw();
                    s.xp6(1), s.Oqu(fe.label);
                }
            }
            function k(F, K) {
                if ((1 & F && s._UZ(0, 'span', 6), 2 & F)) {
                    const fe = s.oxw(2);
                    s.Tol(fe.icon), s.Q6J('ngClass', 'p-avatar-icon');
                }
            }
            function T(F, K) {
                if ((1 & F && s.YNc(0, k, 1, 3, 'span', 5), 2 & F)) {
                    const fe = s.oxw(),
                        _e = s.MAs(6);
                    s.Q6J('ngIf', fe.icon)('ngIfElse', _e);
                }
            }
            function S(F, K) {
                if ((1 & F && s._UZ(0, 'img', 8), 2 & F)) {
                    const fe = s.oxw(2);
                    s.Q6J('src', fe.image, s.LSH);
                }
            }
            function O(F, K) {
                if ((1 & F && s.YNc(0, S, 1, 1, 'img', 7), 2 & F)) {
                    const fe = s.oxw();
                    s.Q6J('ngIf', fe.image);
                }
            }
            const N = ['*'];
            let U = (() => {
                    class F {
                        constructor() {
                            (this.size = 'normal'), (this.shape = 'square');
                        }
                        containerClass() {
                            return {
                                'p-avatar p-component': !0,
                                'p-avatar-image': null != this.image,
                                'p-avatar-circle': 'circle' === this.shape,
                                'p-avatar-lg': 'large' === this.size,
                                'p-avatar-xl': 'xlarge' === this.size,
                            };
                        }
                    }
                    return (
                        (F.ɵfac = function (fe) {
                            return new (fe || F)();
                        }),
                        (F.ɵcmp = s.Xpm({
                            type: F,
                            selectors: [['p-avatar']],
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                label: 'label',
                                icon: 'icon',
                                image: 'image',
                                size: 'size',
                                shape: 'shape',
                                style: 'style',
                                styleClass: 'styleClass',
                            },
                            ngContentSelectors: N,
                            decls: 7,
                            vars: 6,
                            consts: [
                                [3, 'ngClass', 'ngStyle'],
                                [
                                    'class',
                                    'p-avatar-text',
                                    4,
                                    'ngIf',
                                    'ngIfElse',
                                ],
                                ['iconTemplate', ''],
                                ['imageTemplate', ''],
                                [1, 'p-avatar-text'],
                                [3, 'class', 'ngClass', 4, 'ngIf', 'ngIfElse'],
                                [3, 'ngClass'],
                                [3, 'src', 4, 'ngIf'],
                                [3, 'src'],
                            ],
                            template: function (fe, _e) {
                                if (
                                    (1 & fe &&
                                        (s.F$t(),
                                        s.TgZ(0, 'div', 0),
                                        s.Hsn(1),
                                        s.YNc(2, L, 2, 1, 'span', 1),
                                        s.YNc(
                                            3,
                                            T,
                                            1,
                                            2,
                                            'ng-template',
                                            null,
                                            2,
                                            s.W1O
                                        ),
                                        s.YNc(
                                            5,
                                            O,
                                            1,
                                            1,
                                            'ng-template',
                                            null,
                                            3,
                                            s.W1O
                                        ),
                                        s.qZA()),
                                    2 & fe)
                                ) {
                                    const Re = s.MAs(4);
                                    s.Tol(_e.styleClass),
                                        s.Q6J('ngClass', _e.containerClass())(
                                            'ngStyle',
                                            _e.style
                                        ),
                                        s.xp6(2),
                                        s.Q6J('ngIf', _e.label)('ngIfElse', Re);
                                }
                            },
                            directives: [m.mk, m.PC, m.O5],
                            styles: [
                                '.p-avatar{display:inline-flex;align-items:center;justify-content:center;width:2rem;height:2rem;font-size:1rem}.p-avatar.p-avatar-image{background-color:transparent}.p-avatar.p-avatar-circle{border-radius:50%;overflow:hidden}.p-avatar .p-avatar-icon{font-size:1rem}.p-avatar img{width:100%;height:100%}\n',
                            ],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        F
                    );
                })(),
                w = (() => {
                    class F {}
                    return (
                        (F.ɵfac = function (fe) {
                            return new (fe || F)();
                        }),
                        (F.ɵmod = s.oAB({ type: F })),
                        (F.ɵinj = s.cJS({ imports: [[m.ez]] })),
                        F
                    );
                })();
        },
        845: (de, Y, f) => {
            f.d(Y, { Hq: () => fe, hJ: () => Re, zx: () => _e });
            var s = f(5e3),
                m = f(5730),
                L = f(9808),
                k = f(5787),
                T = f(9783);
            function S(Oe, pe) {
                1 & Oe && s.GkF(0);
            }
            const O = function (Oe, pe, J, Me) {
                return {
                    'p-button-icon': !0,
                    'p-button-icon-left': Oe,
                    'p-button-icon-right': pe,
                    'p-button-icon-top': J,
                    'p-button-icon-bottom': Me,
                };
            };
            function N(Oe, pe) {
                if ((1 & Oe && s._UZ(0, 'span', 4), 2 & Oe)) {
                    const J = s.oxw();
                    s.Tol(
                        J.loading
                            ? 'p-button-loading-icon ' + J.loadingIcon
                            : J.icon
                    ),
                        s.Q6J(
                            'ngClass',
                            s.l5B(
                                4,
                                O,
                                'left' === J.iconPos && J.label,
                                'right' === J.iconPos && J.label,
                                'top' === J.iconPos && J.label,
                                'bottom' === J.iconPos && J.label
                            )
                        ),
                        s.uIk('aria-hidden', !0);
                }
            }
            function U(Oe, pe) {
                if (
                    (1 & Oe && (s.TgZ(0, 'span', 5), s._uU(1), s.qZA()), 2 & Oe)
                ) {
                    const J = s.oxw();
                    s.uIk('aria-hidden', J.icon && !J.label),
                        s.xp6(1),
                        s.Oqu(J.label || '\xa0');
                }
            }
            function w(Oe, pe) {
                if (
                    (1 & Oe && (s.TgZ(0, 'span', 4), s._uU(1), s.qZA()), 2 & Oe)
                ) {
                    const J = s.oxw();
                    s.Tol(J.badgeClass),
                        s.Q6J('ngClass', J.badgeStyleClass()),
                        s.xp6(1),
                        s.Oqu(J.badge);
                }
            }
            const F = function (Oe, pe, J, Me, he) {
                    return {
                        'p-button p-component': !0,
                        'p-button-icon-only': Oe,
                        'p-button-vertical': pe,
                        'p-disabled': J,
                        'p-button-loading': Me,
                        'p-button-loading-label-only': he,
                    };
                },
                K = ['*'];
            let fe = (() => {
                    class Oe {
                        constructor(J) {
                            (this.el = J),
                                (this.iconPos = 'left'),
                                (this.loadingIcon = 'pi pi-spinner pi-spin'),
                                (this._loading = !1);
                        }
                        ngAfterViewInit() {
                            (this._initialStyleClass =
                                this.el.nativeElement.className),
                                m.p.addMultipleClasses(
                                    this.el.nativeElement,
                                    this.getStyleClass()
                                ),
                                (this.icon || this.loading) &&
                                    this.createIconEl();
                            let J = document.createElement('span');
                            this.icon &&
                                !this.label &&
                                J.setAttribute('aria-hidden', 'true'),
                                (J.className = 'p-button-label'),
                                this.label
                                    ? J.appendChild(
                                          document.createTextNode(this.label)
                                      )
                                    : (J.innerHTML = '&nbsp;'),
                                this.el.nativeElement.appendChild(J),
                                (this.initialized = !0);
                        }
                        getStyleClass() {
                            let J = 'p-button p-component';
                            return (
                                this.icon &&
                                    !this.label &&
                                    (J += ' p-button-icon-only'),
                                this.loading &&
                                    ((J += ' p-disabled p-button-loading'),
                                    !this.icon &&
                                        this.label &&
                                        (J += ' p-button-loading-label-only')),
                                J
                            );
                        }
                        setStyleClass() {
                            let J = this.getStyleClass();
                            this.el.nativeElement.className =
                                J + ' ' + this._initialStyleClass;
                        }
                        createIconEl() {
                            let J = document.createElement('span');
                            (J.className = 'p-button-icon'),
                                J.setAttribute('aria-hidden', 'true');
                            let Me = this.label
                                ? 'p-button-icon-' + this.iconPos
                                : null;
                            Me && m.p.addClass(J, Me);
                            let he = this.getIconClass();
                            he && m.p.addMultipleClasses(J, he);
                            let De = m.p.findSingle(
                                this.el.nativeElement,
                                '.p-button-label'
                            );
                            De
                                ? this.el.nativeElement.insertBefore(J, De)
                                : this.el.nativeElement.appendChild(J);
                        }
                        getIconClass() {
                            return this.loading
                                ? 'p-button-loading-icon ' + this.loadingIcon
                                : this._icon;
                        }
                        setIconClass() {
                            let J = m.p.findSingle(
                                this.el.nativeElement,
                                '.p-button-icon'
                            );
                            J
                                ? (J.className = this.iconPos
                                      ? 'p-button-icon p-button-icon-' +
                                        this.iconPos +
                                        ' ' +
                                        this.getIconClass()
                                      : 'p-button-icon ' + this.getIconClass())
                                : this.createIconEl();
                        }
                        removeIconElement() {
                            let J = m.p.findSingle(
                                this.el.nativeElement,
                                '.p-button-icon'
                            );
                            this.el.nativeElement.removeChild(J);
                        }
                        get label() {
                            return this._label;
                        }
                        set label(J) {
                            (this._label = J),
                                this.initialized &&
                                    ((m.p.findSingle(
                                        this.el.nativeElement,
                                        '.p-button-label'
                                    ).textContent = this._label || '&nbsp;'),
                                    (this.loading || this.icon) &&
                                        this.setIconClass(),
                                    this.setStyleClass());
                        }
                        get icon() {
                            return this._icon;
                        }
                        set icon(J) {
                            (this._icon = J),
                                this.initialized &&
                                    (this.setIconClass(), this.setStyleClass());
                        }
                        get loading() {
                            return this._loading;
                        }
                        set loading(J) {
                            (this._loading = J),
                                this.initialized &&
                                    (this.loading || this.icon
                                        ? this.setIconClass()
                                        : this.removeIconElement(),
                                    this.setStyleClass());
                        }
                        ngOnDestroy() {
                            this.initialized = !1;
                        }
                    }
                    return (
                        (Oe.ɵfac = function (J) {
                            return new (J || Oe)(s.Y36(s.SBq));
                        }),
                        (Oe.ɵdir = s.lG2({
                            type: Oe,
                            selectors: [['', 'pButton', '']],
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                iconPos: 'iconPos',
                                loadingIcon: 'loadingIcon',
                                label: 'label',
                                icon: 'icon',
                                loading: 'loading',
                            },
                        })),
                        Oe
                    );
                })(),
                _e = (() => {
                    class Oe {
                        constructor() {
                            (this.type = 'button'),
                                (this.iconPos = 'left'),
                                (this.loading = !1),
                                (this.loadingIcon = 'pi pi-spinner pi-spin'),
                                (this.onClick = new s.vpe()),
                                (this.onFocus = new s.vpe()),
                                (this.onBlur = new s.vpe());
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((J) => {
                                J.getType(),
                                    (this.contentTemplate = J.template);
                            });
                        }
                        badgeStyleClass() {
                            return {
                                'p-badge p-component': !0,
                                'p-badge-no-gutter':
                                    this.badge &&
                                    1 === String(this.badge).length,
                            };
                        }
                    }
                    return (
                        (Oe.ɵfac = function (J) {
                            return new (J || Oe)();
                        }),
                        (Oe.ɵcmp = s.Xpm({
                            type: Oe,
                            selectors: [['p-button']],
                            contentQueries: function (J, Me, he) {
                                if ((1 & J && s.Suo(he, T.jx, 4), 2 & J)) {
                                    let De;
                                    s.iGM((De = s.CRH())) &&
                                        (Me.templates = De);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                type: 'type',
                                iconPos: 'iconPos',
                                icon: 'icon',
                                badge: 'badge',
                                label: 'label',
                                disabled: 'disabled',
                                loading: 'loading',
                                loadingIcon: 'loadingIcon',
                                style: 'style',
                                styleClass: 'styleClass',
                                badgeClass: 'badgeClass',
                            },
                            outputs: {
                                onClick: 'onClick',
                                onFocus: 'onFocus',
                                onBlur: 'onBlur',
                            },
                            ngContentSelectors: K,
                            decls: 6,
                            vars: 16,
                            consts: [
                                [
                                    'pRipple',
                                    '',
                                    3,
                                    'ngStyle',
                                    'disabled',
                                    'ngClass',
                                    'click',
                                    'focus',
                                    'blur',
                                ],
                                [4, 'ngTemplateOutlet'],
                                [3, 'ngClass', 'class', 4, 'ngIf'],
                                ['class', 'p-button-label', 4, 'ngIf'],
                                [3, 'ngClass'],
                                [1, 'p-button-label'],
                            ],
                            template: function (J, Me) {
                                1 & J &&
                                    (s.F$t(),
                                    s.TgZ(0, 'button', 0),
                                    s.NdJ('click', function (De) {
                                        return Me.onClick.emit(De);
                                    })('focus', function (De) {
                                        return Me.onFocus.emit(De);
                                    })('blur', function (De) {
                                        return Me.onBlur.emit(De);
                                    }),
                                    s.Hsn(1),
                                    s.YNc(2, S, 1, 0, 'ng-container', 1),
                                    s.YNc(3, N, 1, 9, 'span', 2),
                                    s.YNc(4, U, 2, 2, 'span', 3),
                                    s.YNc(5, w, 2, 4, 'span', 2),
                                    s.qZA()),
                                    2 & J &&
                                        (s.Tol(Me.styleClass),
                                        s.Q6J('ngStyle', Me.style)(
                                            'disabled',
                                            Me.disabled || Me.loading
                                        )(
                                            'ngClass',
                                            s.qbA(
                                                10,
                                                F,
                                                Me.icon && !Me.label,
                                                ('top' === Me.iconPos ||
                                                    'bottom' === Me.iconPos) &&
                                                    Me.label,
                                                Me.disabled || Me.loading,
                                                Me.loading,
                                                Me.loading &&
                                                    !Me.icon &&
                                                    Me.label
                                            )
                                        ),
                                        s.uIk('type', Me.type),
                                        s.xp6(2),
                                        s.Q6J(
                                            'ngTemplateOutlet',
                                            Me.contentTemplate
                                        ),
                                        s.xp6(1),
                                        s.Q6J(
                                            'ngIf',
                                            !Me.contentTemplate &&
                                                (Me.icon || Me.loading)
                                        ),
                                        s.xp6(1),
                                        s.Q6J('ngIf', !Me.contentTemplate),
                                        s.xp6(1),
                                        s.Q6J(
                                            'ngIf',
                                            !Me.contentTemplate && Me.badge
                                        ));
                            },
                            directives: [k.H, L.PC, L.mk, L.tP, L.O5],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        Oe
                    );
                })(),
                Re = (() => {
                    class Oe {}
                    return (
                        (Oe.ɵfac = function (J) {
                            return new (J || Oe)();
                        }),
                        (Oe.ɵmod = s.oAB({ type: Oe })),
                        (Oe.ɵinj = s.cJS({ imports: [[L.ez, k.T]] })),
                        Oe
                    );
                })();
        },
        5730: (de, Y, f) => {
            f.d(Y, { V: () => m, p: () => s });
            let s = (() => {
                class L {
                    static addClass(T, S) {
                        T.classList
                            ? T.classList.add(S)
                            : (T.className += ' ' + S);
                    }
                    static addMultipleClasses(T, S) {
                        if (T.classList) {
                            let O = S.trim().split(' ');
                            for (let N = 0; N < O.length; N++)
                                T.classList.add(O[N]);
                        } else {
                            let O = S.split(' ');
                            for (let N = 0; N < O.length; N++)
                                T.className += ' ' + O[N];
                        }
                    }
                    static removeClass(T, S) {
                        T.classList
                            ? T.classList.remove(S)
                            : (T.className = T.className.replace(
                                  new RegExp(
                                      '(^|\\b)' +
                                          S.split(' ').join('|') +
                                          '(\\b|$)',
                                      'gi'
                                  ),
                                  ' '
                              ));
                    }
                    static hasClass(T, S) {
                        return T.classList
                            ? T.classList.contains(S)
                            : new RegExp('(^| )' + S + '( |$)', 'gi').test(
                                  T.className
                              );
                    }
                    static siblings(T) {
                        return Array.prototype.filter.call(
                            T.parentNode.children,
                            function (S) {
                                return S !== T;
                            }
                        );
                    }
                    static find(T, S) {
                        return Array.from(T.querySelectorAll(S));
                    }
                    static findSingle(T, S) {
                        return T ? T.querySelector(S) : null;
                    }
                    static index(T) {
                        let S = T.parentNode.childNodes,
                            O = 0;
                        for (var N = 0; N < S.length; N++) {
                            if (S[N] == T) return O;
                            1 == S[N].nodeType && O++;
                        }
                        return -1;
                    }
                    static indexWithinGroup(T, S) {
                        let O = T.parentNode ? T.parentNode.childNodes : [],
                            N = 0;
                        for (var U = 0; U < O.length; U++) {
                            if (O[U] == T) return N;
                            O[U].attributes &&
                                O[U].attributes[S] &&
                                1 == O[U].nodeType &&
                                N++;
                        }
                        return -1;
                    }
                    static relativePosition(T, S) {
                        let O = T.offsetParent
                            ? { width: T.offsetWidth, height: T.offsetHeight }
                            : this.getHiddenElementDimensions(T);
                        const N = S.offsetHeight,
                            U = S.getBoundingClientRect(),
                            w = this.getViewport();
                        let F, K;
                        U.top + N + O.height > w.height
                            ? ((F = -1 * O.height),
                              (T.style.transformOrigin = 'bottom'),
                              U.top + F < 0 && (F = -1 * U.top))
                            : ((F = N), (T.style.transformOrigin = 'top')),
                            (K =
                                O.width > w.width
                                    ? -1 * U.left
                                    : U.left + O.width > w.width
                                    ? -1 * (U.left + O.width - w.width)
                                    : 0),
                            (T.style.top = F + 'px'),
                            (T.style.left = K + 'px');
                    }
                    static absolutePosition(T, S) {
                        let Oe,
                            pe,
                            O = T.offsetParent
                                ? {
                                      width: T.offsetWidth,
                                      height: T.offsetHeight,
                                  }
                                : this.getHiddenElementDimensions(T),
                            N = O.height,
                            U = O.width,
                            w = S.offsetHeight,
                            F = S.offsetWidth,
                            K = S.getBoundingClientRect(),
                            fe = this.getWindowScrollTop(),
                            _e = this.getWindowScrollLeft(),
                            Re = this.getViewport();
                        K.top + w + N > Re.height
                            ? ((Oe = K.top + fe - N),
                              (T.style.transformOrigin = 'bottom'),
                              Oe < 0 && (Oe = fe))
                            : ((Oe = w + K.top + fe),
                              (T.style.transformOrigin = 'top')),
                            (pe =
                                K.left + U > Re.width
                                    ? Math.max(0, K.left + _e + F - U)
                                    : K.left + _e),
                            (T.style.top = Oe + 'px'),
                            (T.style.left = pe + 'px');
                    }
                    static getParents(T, S = []) {
                        return null === T.parentNode
                            ? S
                            : this.getParents(
                                  T.parentNode,
                                  S.concat([T.parentNode])
                              );
                    }
                    static getScrollableParents(T) {
                        let S = [];
                        if (T) {
                            let O = this.getParents(T);
                            const N = /(auto|scroll)/,
                                U = (w) => {
                                    let F = window.getComputedStyle(w, null);
                                    return (
                                        N.test(
                                            F.getPropertyValue('overflow')
                                        ) ||
                                        N.test(
                                            F.getPropertyValue('overflowX')
                                        ) ||
                                        N.test(F.getPropertyValue('overflowY'))
                                    );
                                };
                            for (let w of O) {
                                let F =
                                    1 === w.nodeType &&
                                    w.dataset.scrollselectors;
                                if (F) {
                                    let K = F.split(',');
                                    for (let fe of K) {
                                        let _e = this.findSingle(w, fe);
                                        _e && U(_e) && S.push(_e);
                                    }
                                }
                                9 !== w.nodeType && U(w) && S.push(w);
                            }
                        }
                        return S;
                    }
                    static getHiddenElementOuterHeight(T) {
                        (T.style.visibility = 'hidden'),
                            (T.style.display = 'block');
                        let S = T.offsetHeight;
                        return (
                            (T.style.display = 'none'),
                            (T.style.visibility = 'visible'),
                            S
                        );
                    }
                    static getHiddenElementOuterWidth(T) {
                        (T.style.visibility = 'hidden'),
                            (T.style.display = 'block');
                        let S = T.offsetWidth;
                        return (
                            (T.style.display = 'none'),
                            (T.style.visibility = 'visible'),
                            S
                        );
                    }
                    static getHiddenElementDimensions(T) {
                        let S = {};
                        return (
                            (T.style.visibility = 'hidden'),
                            (T.style.display = 'block'),
                            (S.width = T.offsetWidth),
                            (S.height = T.offsetHeight),
                            (T.style.display = 'none'),
                            (T.style.visibility = 'visible'),
                            S
                        );
                    }
                    static scrollInView(T, S) {
                        let O =
                                getComputedStyle(T).getPropertyValue(
                                    'borderTopWidth'
                                ),
                            N = O ? parseFloat(O) : 0,
                            U =
                                getComputedStyle(T).getPropertyValue(
                                    'paddingTop'
                                ),
                            w = U ? parseFloat(U) : 0,
                            F = T.getBoundingClientRect(),
                            fe =
                                S.getBoundingClientRect().top +
                                document.body.scrollTop -
                                (F.top + document.body.scrollTop) -
                                N -
                                w,
                            _e = T.scrollTop,
                            Re = T.clientHeight,
                            Oe = this.getOuterHeight(S);
                        fe < 0
                            ? (T.scrollTop = _e + fe)
                            : fe + Oe > Re && (T.scrollTop = _e + fe - Re + Oe);
                    }
                    static fadeIn(T, S) {
                        T.style.opacity = 0;
                        let O = +new Date(),
                            N = 0,
                            U = function () {
                                (N =
                                    +T.style.opacity.replace(',', '.') +
                                    (new Date().getTime() - O) / S),
                                    (T.style.opacity = N),
                                    (O = +new Date()),
                                    +N < 1 &&
                                        ((window.requestAnimationFrame &&
                                            requestAnimationFrame(U)) ||
                                            setTimeout(U, 16));
                            };
                        U();
                    }
                    static fadeOut(T, S) {
                        var O = 1,
                            w = 50 / S;
                        let F = setInterval(() => {
                            (O -= w) <= 0 && ((O = 0), clearInterval(F)),
                                (T.style.opacity = O);
                        }, 50);
                    }
                    static getWindowScrollTop() {
                        let T = document.documentElement;
                        return (
                            (window.pageYOffset || T.scrollTop) -
                            (T.clientTop || 0)
                        );
                    }
                    static getWindowScrollLeft() {
                        let T = document.documentElement;
                        return (
                            (window.pageXOffset || T.scrollLeft) -
                            (T.clientLeft || 0)
                        );
                    }
                    static matches(T, S) {
                        var O = Element.prototype;
                        return (
                            O.matches ||
                            O.webkitMatchesSelector ||
                            O.mozMatchesSelector ||
                            O.msMatchesSelector ||
                            function (U) {
                                return (
                                    -1 !==
                                    [].indexOf.call(
                                        document.querySelectorAll(U),
                                        this
                                    )
                                );
                            }
                        ).call(T, S);
                    }
                    static getOuterWidth(T, S) {
                        let O = T.offsetWidth;
                        if (S) {
                            let N = getComputedStyle(T);
                            O +=
                                parseFloat(N.marginLeft) +
                                parseFloat(N.marginRight);
                        }
                        return O;
                    }
                    static getHorizontalPadding(T) {
                        let S = getComputedStyle(T);
                        return (
                            parseFloat(S.paddingLeft) +
                            parseFloat(S.paddingRight)
                        );
                    }
                    static getHorizontalMargin(T) {
                        let S = getComputedStyle(T);
                        return (
                            parseFloat(S.marginLeft) + parseFloat(S.marginRight)
                        );
                    }
                    static innerWidth(T) {
                        let S = T.offsetWidth,
                            O = getComputedStyle(T);
                        return (
                            (S +=
                                parseFloat(O.paddingLeft) +
                                parseFloat(O.paddingRight)),
                            S
                        );
                    }
                    static width(T) {
                        let S = T.offsetWidth,
                            O = getComputedStyle(T);
                        return (
                            (S -=
                                parseFloat(O.paddingLeft) +
                                parseFloat(O.paddingRight)),
                            S
                        );
                    }
                    static getInnerHeight(T) {
                        let S = T.offsetHeight,
                            O = getComputedStyle(T);
                        return (
                            (S +=
                                parseFloat(O.paddingTop) +
                                parseFloat(O.paddingBottom)),
                            S
                        );
                    }
                    static getOuterHeight(T, S) {
                        let O = T.offsetHeight;
                        if (S) {
                            let N = getComputedStyle(T);
                            O +=
                                parseFloat(N.marginTop) +
                                parseFloat(N.marginBottom);
                        }
                        return O;
                    }
                    static getHeight(T) {
                        let S = T.offsetHeight,
                            O = getComputedStyle(T);
                        return (
                            (S -=
                                parseFloat(O.paddingTop) +
                                parseFloat(O.paddingBottom) +
                                parseFloat(O.borderTopWidth) +
                                parseFloat(O.borderBottomWidth)),
                            S
                        );
                    }
                    static getWidth(T) {
                        let S = T.offsetWidth,
                            O = getComputedStyle(T);
                        return (
                            (S -=
                                parseFloat(O.paddingLeft) +
                                parseFloat(O.paddingRight) +
                                parseFloat(O.borderLeftWidth) +
                                parseFloat(O.borderRightWidth)),
                            S
                        );
                    }
                    static getViewport() {
                        let T = window,
                            S = document,
                            O = S.documentElement,
                            N = S.getElementsByTagName('body')[0];
                        return {
                            width:
                                T.innerWidth || O.clientWidth || N.clientWidth,
                            height:
                                T.innerHeight ||
                                O.clientHeight ||
                                N.clientHeight,
                        };
                    }
                    static getOffset(T) {
                        var S = T.getBoundingClientRect();
                        return {
                            top:
                                S.top +
                                (window.pageYOffset ||
                                    document.documentElement.scrollTop ||
                                    document.body.scrollTop ||
                                    0),
                            left:
                                S.left +
                                (window.pageXOffset ||
                                    document.documentElement.scrollLeft ||
                                    document.body.scrollLeft ||
                                    0),
                        };
                    }
                    static replaceElementWith(T, S) {
                        let O = T.parentNode;
                        if (!O) throw "Can't replace element";
                        return O.replaceChild(S, T);
                    }
                    static getUserAgent() {
                        return navigator.userAgent;
                    }
                    static isIE() {
                        var T = window.navigator.userAgent;
                        return (
                            T.indexOf('MSIE ') > 0 ||
                            (T.indexOf('Trident/') > 0
                                ? (T.indexOf('rv:'), !0)
                                : T.indexOf('Edge/') > 0)
                        );
                    }
                    static isIOS() {
                        return (
                            /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                            !window.MSStream
                        );
                    }
                    static isAndroid() {
                        return /(android)/i.test(navigator.userAgent);
                    }
                    static isTouchDevice() {
                        return (
                            'ontouchstart' in window ||
                            navigator.maxTouchPoints > 0
                        );
                    }
                    static appendChild(T, S) {
                        if (this.isElement(S)) S.appendChild(T);
                        else {
                            if (!S.el || !S.el.nativeElement)
                                throw 'Cannot append ' + S + ' to ' + T;
                            S.el.nativeElement.appendChild(T);
                        }
                    }
                    static removeChild(T, S) {
                        if (this.isElement(S)) S.removeChild(T);
                        else {
                            if (!S.el || !S.el.nativeElement)
                                throw 'Cannot remove ' + T + ' from ' + S;
                            S.el.nativeElement.removeChild(T);
                        }
                    }
                    static removeElement(T) {
                        'remove' in Element.prototype
                            ? T.remove()
                            : T.parentNode.removeChild(T);
                    }
                    static isElement(T) {
                        return 'object' == typeof HTMLElement
                            ? T instanceof HTMLElement
                            : T &&
                                  'object' == typeof T &&
                                  null !== T &&
                                  1 === T.nodeType &&
                                  'string' == typeof T.nodeName;
                    }
                    static calculateScrollbarWidth(T) {
                        if (T) {
                            let S = getComputedStyle(T);
                            return (
                                T.offsetWidth -
                                T.clientWidth -
                                parseFloat(S.borderLeftWidth) -
                                parseFloat(S.borderRightWidth)
                            );
                        }
                        {
                            if (null !== this.calculatedScrollbarWidth)
                                return this.calculatedScrollbarWidth;
                            let S = document.createElement('div');
                            (S.className = 'p-scrollbar-measure'),
                                document.body.appendChild(S);
                            let O = S.offsetWidth - S.clientWidth;
                            return (
                                document.body.removeChild(S),
                                (this.calculatedScrollbarWidth = O),
                                O
                            );
                        }
                    }
                    static calculateScrollbarHeight() {
                        if (null !== this.calculatedScrollbarHeight)
                            return this.calculatedScrollbarHeight;
                        let T = document.createElement('div');
                        (T.className = 'p-scrollbar-measure'),
                            document.body.appendChild(T);
                        let S = T.offsetHeight - T.clientHeight;
                        return (
                            document.body.removeChild(T),
                            (this.calculatedScrollbarWidth = S),
                            S
                        );
                    }
                    static invokeElementMethod(T, S, O) {
                        T[S].apply(T, O);
                    }
                    static clearSelection() {
                        if (window.getSelection)
                            window.getSelection().empty
                                ? window.getSelection().empty()
                                : window.getSelection().removeAllRanges &&
                                  window.getSelection().rangeCount > 0 &&
                                  window
                                      .getSelection()
                                      .getRangeAt(0)
                                      .getClientRects().length > 0 &&
                                  window.getSelection().removeAllRanges();
                        else if (document.selection && document.selection.empty)
                            try {
                                document.selection.empty();
                            } catch (T) {}
                    }
                    static getBrowser() {
                        if (!this.browser) {
                            let T = this.resolveUserAgent();
                            (this.browser = {}),
                                T.browser &&
                                    ((this.browser[T.browser] = !0),
                                    (this.browser.version = T.version)),
                                this.browser.chrome
                                    ? (this.browser.webkit = !0)
                                    : this.browser.webkit &&
                                      (this.browser.safari = !0);
                        }
                        return this.browser;
                    }
                    static resolveUserAgent() {
                        let T = navigator.userAgent.toLowerCase(),
                            S =
                                /(chrome)[ \/]([\w.]+)/.exec(T) ||
                                /(webkit)[ \/]([\w.]+)/.exec(T) ||
                                /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(T) ||
                                /(msie) ([\w.]+)/.exec(T) ||
                                (T.indexOf('compatible') < 0 &&
                                    /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(T)) ||
                                [];
                        return { browser: S[1] || '', version: S[2] || '0' };
                    }
                    static isInteger(T) {
                        return Number.isInteger
                            ? Number.isInteger(T)
                            : 'number' == typeof T &&
                                  isFinite(T) &&
                                  Math.floor(T) === T;
                    }
                    static isHidden(T) {
                        return null === T.offsetParent;
                    }
                    static getFocusableElements(T) {
                        let S = L.find(
                                T,
                                'button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]):not(.p-disabled)'
                            ),
                            O = [];
                        for (let N of S)
                            'none' != getComputedStyle(N).display &&
                                'hidden' != getComputedStyle(N).visibility &&
                                O.push(N);
                        return O;
                    }
                    static generateZIndex() {
                        return (
                            (this.zindex = this.zindex || 999), ++this.zindex
                        );
                    }
                }
                return (
                    (L.zindex = 1e3),
                    (L.calculatedScrollbarWidth = null),
                    (L.calculatedScrollbarHeight = null),
                    L
                );
            })();
            class m {
                constructor(k, T = () => {}) {
                    (this.element = k), (this.listener = T);
                }
                bindScrollListener() {
                    this.scrollableParents = s.getScrollableParents(
                        this.element
                    );
                    for (let k = 0; k < this.scrollableParents.length; k++)
                        this.scrollableParents[k].addEventListener(
                            'scroll',
                            this.listener
                        );
                }
                unbindScrollListener() {
                    if (this.scrollableParents)
                        for (let k = 0; k < this.scrollableParents.length; k++)
                            this.scrollableParents[k].removeEventListener(
                                'scroll',
                                this.listener
                            );
                }
                destroy() {
                    this.unbindScrollListener(),
                        (this.element = null),
                        (this.listener = null),
                        (this.scrollableParents = null);
                }
            }
        },
        1424: (de, Y, f) => {
            f.d(Y, { j: () => T, o: () => k });
            var s = f(5e3),
                m = f(9808),
                L = f(3075);
            let k = (() => {
                    class S {
                        constructor(N, U, w) {
                            (this.el = N), (this.ngModel = U), (this.cd = w);
                        }
                        ngAfterViewInit() {
                            this.updateFilledState(), this.cd.detectChanges();
                        }
                        ngDoCheck() {
                            this.updateFilledState();
                        }
                        onInput(N) {
                            this.updateFilledState();
                        }
                        updateFilledState() {
                            this.filled =
                                (this.el.nativeElement.value &&
                                    this.el.nativeElement.value.length) ||
                                (this.ngModel && this.ngModel.model);
                        }
                    }
                    return (
                        (S.ɵfac = function (N) {
                            return new (N || S)(
                                s.Y36(s.SBq),
                                s.Y36(L.On, 8),
                                s.Y36(s.sBO)
                            );
                        }),
                        (S.ɵdir = s.lG2({
                            type: S,
                            selectors: [['', 'pInputText', '']],
                            hostAttrs: [
                                1,
                                'p-inputtext',
                                'p-component',
                                'p-element',
                            ],
                            hostVars: 2,
                            hostBindings: function (N, U) {
                                1 & N &&
                                    s.NdJ('input', function (F) {
                                        return U.onInput(F);
                                    }),
                                    2 & N && s.ekj('p-filled', U.filled);
                            },
                        })),
                        S
                    );
                })(),
                T = (() => {
                    class S {}
                    return (
                        (S.ɵfac = function (N) {
                            return new (N || S)();
                        }),
                        (S.ɵmod = s.oAB({ type: S })),
                        (S.ɵinj = s.cJS({ imports: [[m.ez]] })),
                        S
                    );
                })();
        },
        1874: (de, Y, f) => {
            f.d(Y, { $9: () => $t, v2: () => mt });
            var s = f(5e3),
                m = f(1777),
                L = f(9808),
                k = f(5730),
                T = f(5921),
                S = f(6115),
                O = f(5787),
                N = f(4119),
                U = f(9783);
            const w = ['pMenuItemContent', ''];
            function F(nt, At) {
                if ((1 & nt && s._UZ(0, 'span', 6), 2 & nt)) {
                    const He = s.oxw(2);
                    s.Q6J('ngClass', He.item.icon);
                }
            }
            function K(nt, At) {
                if (
                    (1 & nt && (s.TgZ(0, 'span', 7), s._uU(1), s.qZA()), 2 & nt)
                ) {
                    const He = s.oxw(2);
                    s.xp6(1), s.Oqu(He.item.label);
                }
            }
            function fe(nt, At) {
                if ((1 & nt && s._UZ(0, 'span', 8), 2 & nt)) {
                    const He = s.oxw(2);
                    s.Q6J('innerHTML', He.item.label, s.oJD);
                }
            }
            const _e = function (nt) {
                return { 'p-disabled': nt };
            };
            function Re(nt, At) {
                if (1 & nt) {
                    const He = s.EpF();
                    s.TgZ(0, 'a', 2),
                        s.NdJ('keydown', function (xt) {
                            return s.CHM(He), s.oxw().onItemKeyDown(xt);
                        })('click', function (xt) {
                            s.CHM(He);
                            const Qt = s.oxw();
                            return Qt.menu.itemClick(xt, Qt.item);
                        }),
                        s.YNc(1, F, 1, 1, 'span', 3),
                        s.YNc(2, K, 2, 1, 'span', 4),
                        s.YNc(3, fe, 1, 1, 'ng-template', null, 5, s.W1O),
                        s.qZA();
                }
                if (2 & nt) {
                    const He = s.MAs(4),
                        st = s.oxw();
                    s.Q6J('ngClass', s.VKq(10, _e, st.item.disabled)),
                        s.uIk(
                            'href',
                            st.item.url || null,
                            s.LSH
                        )('tabindex', st.item.disabled ? null : '0')(
                            'data-automationid',
                            st.item.automationId
                        )('target', st.item.target)('title', st.item.title)(
                            'id',
                            st.item.id
                        ),
                        s.xp6(1),
                        s.Q6J('ngIf', st.item.icon),
                        s.xp6(1),
                        s.Q6J('ngIf', !1 !== st.item.escape)('ngIfElse', He);
                }
            }
            function Oe(nt, At) {
                if ((1 & nt && s._UZ(0, 'span', 6), 2 & nt)) {
                    const He = s.oxw(2);
                    s.Q6J('ngClass', He.item.icon);
                }
            }
            function pe(nt, At) {
                if (
                    (1 & nt && (s.TgZ(0, 'span', 7), s._uU(1), s.qZA()), 2 & nt)
                ) {
                    const He = s.oxw(2);
                    s.xp6(1), s.Oqu(He.item.label);
                }
            }
            function J(nt, At) {
                if ((1 & nt && s._UZ(0, 'span', 8), 2 & nt)) {
                    const He = s.oxw(2);
                    s.Q6J('innerHTML', He.item.label, s.oJD);
                }
            }
            const Me = function () {
                return { exact: !1 };
            };
            function he(nt, At) {
                if (1 & nt) {
                    const He = s.EpF();
                    s.TgZ(0, 'a', 9),
                        s.NdJ('keydown', function (xt) {
                            return s.CHM(He), s.oxw().onItemKeyDown(xt);
                        })('click', function (xt) {
                            s.CHM(He);
                            const Qt = s.oxw();
                            return Qt.menu.itemClick(xt, Qt.item);
                        }),
                        s.YNc(1, Oe, 1, 1, 'span', 3),
                        s.YNc(2, pe, 2, 1, 'span', 4),
                        s.YNc(3, J, 1, 1, 'ng-template', null, 10, s.W1O),
                        s.qZA();
                }
                if (2 & nt) {
                    const He = s.MAs(4),
                        st = s.oxw();
                    s.Q6J('routerLink', st.item.routerLink)(
                        'queryParams',
                        st.item.queryParams
                    )('routerLinkActive', 'p-menuitem-link-active')(
                        'routerLinkActiveOptions',
                        st.item.routerLinkActiveOptions || s.DdM(19, Me)
                    )('ngClass', s.VKq(20, _e, st.item.disabled))(
                        'fragment',
                        st.item.fragment
                    )('queryParamsHandling', st.item.queryParamsHandling)(
                        'preserveFragment',
                        st.item.preserveFragment
                    )('skipLocationChange', st.item.skipLocationChange)(
                        'replaceUrl',
                        st.item.replaceUrl
                    )('state', st.item.state),
                        s.uIk('data-automationid', st.item.automationId)(
                            'target',
                            st.item.target
                        )('id', st.item.id)(
                            'tabindex',
                            st.item.disabled ? null : '0'
                        )('title', st.item.title),
                        s.xp6(1),
                        s.Q6J('ngIf', st.item.icon),
                        s.xp6(1),
                        s.Q6J('ngIf', !1 !== st.item.escape)('ngIfElse', He);
                }
            }
            const De = ['container'],
                R = function (nt) {
                    return { 'p-hidden': nt };
                };
            function te(nt, At) {
                if ((1 & nt && s._UZ(0, 'li', 8), 2 & nt)) {
                    const He = s.oxw().$implicit;
                    s.Q6J('ngClass', s.VKq(1, R, !1 === He.visible));
                }
            }
            function G(nt, At) {
                if ((1 & nt && (s.TgZ(0, 'span'), s._uU(1), s.qZA()), 2 & nt)) {
                    const He = s.oxw(2).$implicit;
                    s.xp6(1), s.Oqu(He.label);
                }
            }
            function oe(nt, At) {
                if ((1 & nt && s._UZ(0, 'span', 12), 2 & nt)) {
                    const He = s.oxw(2).$implicit;
                    s.Q6J('innerHTML', He.label, s.oJD);
                }
            }
            function re(nt, At) {
                if (
                    (1 & nt &&
                        (s.TgZ(0, 'li', 9),
                        s.YNc(1, G, 2, 1, 'span', 10),
                        s.YNc(2, oe, 1, 1, 'ng-template', null, 11, s.W1O),
                        s.qZA()),
                    2 & nt)
                ) {
                    const He = s.MAs(3),
                        st = s.oxw().$implicit;
                    s.Q6J('ngClass', s.VKq(5, R, !1 === st.visible))(
                        'tooltipOptions',
                        st.tooltipOptions
                    ),
                        s.uIk('data-automationid', st.automationId),
                        s.xp6(1),
                        s.Q6J('ngIf', !1 !== st.escape)('ngIfElse', He);
                }
            }
            function ne(nt, At) {
                if ((1 & nt && s._UZ(0, 'li', 8), 2 & nt)) {
                    const He = s.oxw().$implicit,
                        st = s.oxw().$implicit;
                    s.Q6J(
                        'ngClass',
                        s.VKq(1, R, !1 === He.visible || !1 === st.visible)
                    );
                }
            }
            function we(nt, At) {
                if ((1 & nt && s._UZ(0, 'li', 14), 2 & nt)) {
                    const He = s.oxw().$implicit,
                        st = s.oxw().$implicit;
                    s.Tol(He.styleClass),
                        s.Q6J('pMenuItemContent', He)(
                            'ngClass',
                            s.VKq(6, R, !1 === He.visible || !1 === st.visible)
                        )('ngStyle', He.style)(
                            'tooltipOptions',
                            He.tooltipOptions
                        );
                }
            }
            function Fe(nt, At) {
                if (
                    (1 & nt &&
                        (s.YNc(0, ne, 1, 3, 'li', 6),
                        s.YNc(1, we, 1, 8, 'li', 13)),
                    2 & nt)
                ) {
                    const He = At.$implicit;
                    s.Q6J('ngIf', He.separator),
                        s.xp6(1),
                        s.Q6J('ngIf', !He.separator);
                }
            }
            function je(nt, At) {
                if (
                    (1 & nt &&
                        (s.YNc(0, te, 1, 3, 'li', 6),
                        s.YNc(1, re, 4, 7, 'li', 7),
                        s.YNc(2, Fe, 2, 2, 'ng-template', 5)),
                    2 & nt)
                ) {
                    const He = At.$implicit;
                    s.Q6J('ngIf', He.separator),
                        s.xp6(1),
                        s.Q6J('ngIf', !He.separator),
                        s.xp6(1),
                        s.Q6J('ngForOf', He.items);
                }
            }
            function We(nt, At) {
                if ((1 & nt && s.YNc(0, je, 3, 3, 'ng-template', 5), 2 & nt)) {
                    const He = s.oxw(2);
                    s.Q6J('ngForOf', He.model);
                }
            }
            function ke(nt, At) {
                if ((1 & nt && s._UZ(0, 'li', 8), 2 & nt)) {
                    const He = s.oxw().$implicit;
                    s.Q6J('ngClass', s.VKq(1, R, !1 === He.visible));
                }
            }
            function pt(nt, At) {
                if ((1 & nt && s._UZ(0, 'li', 14), 2 & nt)) {
                    const He = s.oxw().$implicit;
                    s.Tol(He.styleClass),
                        s.Q6J('pMenuItemContent', He)(
                            'ngClass',
                            s.VKq(6, R, !1 === He.visible)
                        )('ngStyle', He.style)(
                            'tooltipOptions',
                            He.tooltipOptions
                        );
                }
            }
            function Lt(nt, At) {
                if (
                    (1 & nt &&
                        (s.YNc(0, ke, 1, 3, 'li', 6),
                        s.YNc(1, pt, 1, 8, 'li', 13)),
                    2 & nt)
                ) {
                    const He = At.$implicit;
                    s.Q6J('ngIf', He.separator),
                        s.xp6(1),
                        s.Q6J('ngIf', !He.separator);
                }
            }
            function hn(nt, At) {
                if ((1 & nt && s.YNc(0, Lt, 2, 2, 'ng-template', 5), 2 & nt)) {
                    const He = s.oxw(2);
                    s.Q6J('ngForOf', He.model);
                }
            }
            const yt = function (nt) {
                    return { 'p-menu p-component': !0, 'p-menu-overlay': nt };
                },
                Ot = function (nt, At) {
                    return {
                        showTransitionParams: nt,
                        hideTransitionParams: At,
                    };
                },
                gt = function (nt) {
                    return { value: 'visible', params: nt };
                };
            function Pt(nt, At) {
                if (1 & nt) {
                    const He = s.EpF();
                    s.TgZ(0, 'div', 1, 2),
                        s.NdJ('click', function (xt) {
                            return s.CHM(He), s.oxw().onOverlayClick(xt);
                        })('@overlayAnimation.start', function (xt) {
                            return (
                                s.CHM(He), s.oxw().onOverlayAnimationStart(xt)
                            );
                        })('@overlayAnimation.done', function (xt) {
                            return s.CHM(He), s.oxw().onOverlayAnimationEnd(xt);
                        }),
                        s.TgZ(2, 'ul', 3),
                        s.YNc(3, We, 1, 1, null, 4),
                        s.YNc(4, hn, 1, 1, null, 4),
                        s.qZA()();
                }
                if (2 & nt) {
                    const He = s.oxw();
                    s.Tol(He.styleClass),
                        s.Q6J('ngClass', s.VKq(8, yt, He.popup))(
                            'ngStyle',
                            He.style
                        )(
                            '@overlayAnimation',
                            s.VKq(
                                13,
                                gt,
                                s.WLB(
                                    10,
                                    Ot,
                                    He.showTransitionOptions,
                                    He.hideTransitionOptions
                                )
                            )
                        )('@.disabled', !0 !== He.popup),
                        s.xp6(3),
                        s.Q6J('ngIf', He.hasSubMenu()),
                        s.xp6(1),
                        s.Q6J('ngIf', !He.hasSubMenu());
                }
            }
            let It = (() => {
                    class nt {
                        constructor(He) {
                            this.menu = He;
                        }
                        onItemKeyDown(He) {
                            let st = He.currentTarget.parentElement;
                            switch (He.code) {
                                case 'ArrowDown':
                                    var xt = this.findNextItem(st);
                                    xt && xt.children[0].focus(),
                                        He.preventDefault();
                                    break;
                                case 'ArrowUp':
                                    var Qt = this.findPrevItem(st);
                                    Qt && Qt.children[0].focus(),
                                        He.preventDefault();
                                    break;
                                case 'Space':
                                case 'Enter':
                                    st &&
                                        !k.p.hasClass(st, 'p-disabled') &&
                                        st.children[0].click(),
                                        He.preventDefault();
                            }
                        }
                        findNextItem(He) {
                            let st = He.nextElementSibling;
                            return st
                                ? k.p.hasClass(st, 'p-disabled') ||
                                  !k.p.hasClass(st, 'p-menuitem')
                                    ? this.findNextItem(st)
                                    : st
                                : null;
                        }
                        findPrevItem(He) {
                            let st = He.previousElementSibling;
                            return st
                                ? k.p.hasClass(st, 'p-disabled') ||
                                  !k.p.hasClass(st, 'p-menuitem')
                                    ? this.findPrevItem(st)
                                    : st
                                : null;
                        }
                    }
                    return (
                        (nt.ɵfac = function (He) {
                            return new (He || nt)(s.Y36((0, s.Gpc)(() => mt)));
                        }),
                        (nt.ɵcmp = s.Xpm({
                            type: nt,
                            selectors: [['', 'pMenuItemContent', '']],
                            hostAttrs: [1, 'p-element'],
                            inputs: { item: ['pMenuItemContent', 'item'] },
                            attrs: w,
                            decls: 2,
                            vars: 2,
                            consts: [
                                [
                                    'class',
                                    'p-menuitem-link',
                                    'role',
                                    'menuitem',
                                    3,
                                    'ngClass',
                                    'keydown',
                                    'click',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-menuitem-link',
                                    'role',
                                    'menuitem',
                                    'pRipple',
                                    '',
                                    3,
                                    'routerLink',
                                    'queryParams',
                                    'routerLinkActive',
                                    'routerLinkActiveOptions',
                                    'ngClass',
                                    'fragment',
                                    'queryParamsHandling',
                                    'preserveFragment',
                                    'skipLocationChange',
                                    'replaceUrl',
                                    'state',
                                    'keydown',
                                    'click',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'role',
                                    'menuitem',
                                    1,
                                    'p-menuitem-link',
                                    3,
                                    'ngClass',
                                    'keydown',
                                    'click',
                                ],
                                [
                                    'class',
                                    'p-menuitem-icon',
                                    3,
                                    'ngClass',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-menuitem-text',
                                    4,
                                    'ngIf',
                                    'ngIfElse',
                                ],
                                ['htmlLabel', ''],
                                [1, 'p-menuitem-icon', 3, 'ngClass'],
                                [1, 'p-menuitem-text'],
                                [1, 'p-menuitem-text', 3, 'innerHTML'],
                                [
                                    'role',
                                    'menuitem',
                                    'pRipple',
                                    '',
                                    1,
                                    'p-menuitem-link',
                                    3,
                                    'routerLink',
                                    'queryParams',
                                    'routerLinkActive',
                                    'routerLinkActiveOptions',
                                    'ngClass',
                                    'fragment',
                                    'queryParamsHandling',
                                    'preserveFragment',
                                    'skipLocationChange',
                                    'replaceUrl',
                                    'state',
                                    'keydown',
                                    'click',
                                ],
                                ['htmlRouteLabel', ''],
                            ],
                            template: function (He, st) {
                                1 & He &&
                                    (s.YNc(0, Re, 5, 12, 'a', 0),
                                    s.YNc(1, he, 5, 22, 'a', 1)),
                                    2 & He &&
                                        (s.Q6J('ngIf', !st.item.routerLink),
                                        s.xp6(1),
                                        s.Q6J('ngIf', st.item.routerLink));
                            },
                            directives: [L.O5, L.mk, S.yS, O.H, S.Od],
                            encapsulation: 2,
                        })),
                        nt
                    );
                })(),
                mt = (() => {
                    class nt {
                        constructor(He, st, xt, Qt, ln) {
                            (this.el = He),
                                (this.renderer = st),
                                (this.cd = xt),
                                (this.config = Qt),
                                (this.overlayService = ln),
                                (this.autoZIndex = !0),
                                (this.baseZIndex = 0),
                                (this.showTransitionOptions =
                                    '.12s cubic-bezier(0, 0, 0.2, 1)'),
                                (this.hideTransitionOptions = '.1s linear'),
                                (this.onShow = new s.vpe()),
                                (this.onHide = new s.vpe());
                        }
                        toggle(He) {
                            this.visible ? this.hide() : this.show(He),
                                (this.preventDocumentDefault = !0);
                        }
                        show(He) {
                            (this.target = He.currentTarget),
                                (this.relativeAlign = He.relativeAlign),
                                (this.visible = !0),
                                (this.preventDocumentDefault = !0),
                                this.cd.markForCheck();
                        }
                        onOverlayAnimationStart(He) {
                            switch (He.toState) {
                                case 'visible':
                                    this.popup &&
                                        ((this.container = He.element),
                                        this.moveOnTop(),
                                        this.onShow.emit({}),
                                        this.appendOverlay(),
                                        this.alignOverlay(),
                                        this.bindDocumentClickListener(),
                                        this.bindDocumentResizeListener(),
                                        this.bindScrollListener());
                                    break;
                                case 'void':
                                    this.onOverlayHide(), this.onHide.emit({});
                            }
                        }
                        onOverlayAnimationEnd(He) {
                            'void' === He.toState &&
                                this.autoZIndex &&
                                T.P9.clear(He.element);
                        }
                        alignOverlay() {
                            this.relativeAlign
                                ? k.p.relativePosition(
                                      this.container,
                                      this.target
                                  )
                                : k.p.absolutePosition(
                                      this.container,
                                      this.target
                                  );
                        }
                        appendOverlay() {
                            this.appendTo &&
                                ('body' === this.appendTo
                                    ? document.body.appendChild(this.container)
                                    : k.p.appendChild(
                                          this.container,
                                          this.appendTo
                                      ));
                        }
                        restoreOverlayAppend() {
                            this.container &&
                                this.appendTo &&
                                this.el.nativeElement.appendChild(
                                    this.container
                                );
                        }
                        moveOnTop() {
                            this.autoZIndex &&
                                T.P9.set(
                                    'menu',
                                    this.container,
                                    this.baseZIndex + this.config.zIndex.menu
                                );
                        }
                        hide() {
                            (this.visible = !1),
                                (this.relativeAlign = !1),
                                this.cd.markForCheck();
                        }
                        onWindowResize() {
                            this.hide();
                        }
                        itemClick(He, st) {
                            st.disabled
                                ? He.preventDefault()
                                : (!st.url &&
                                      !st.routerLink &&
                                      He.preventDefault(),
                                  st.command &&
                                      st.command({
                                          originalEvent: He,
                                          item: st,
                                      }),
                                  this.popup && this.hide());
                        }
                        onOverlayClick(He) {
                            this.popup &&
                                this.overlayService.add({
                                    originalEvent: He,
                                    target: this.el.nativeElement,
                                }),
                                (this.preventDocumentDefault = !0);
                        }
                        bindDocumentClickListener() {
                            this.documentClickListener ||
                                (this.documentClickListener =
                                    this.renderer.listen(
                                        this.el
                                            ? this.el.nativeElement
                                                  .ownerDocument
                                            : 'document',
                                        'click',
                                        () => {
                                            this.preventDocumentDefault ||
                                                this.hide(),
                                                (this.preventDocumentDefault =
                                                    !1);
                                        }
                                    ));
                        }
                        unbindDocumentClickListener() {
                            this.documentClickListener &&
                                (this.documentClickListener(),
                                (this.documentClickListener = null));
                        }
                        bindDocumentResizeListener() {
                            (this.documentResizeListener =
                                this.onWindowResize.bind(this)),
                                window.addEventListener(
                                    'resize',
                                    this.documentResizeListener
                                );
                        }
                        unbindDocumentResizeListener() {
                            this.documentResizeListener &&
                                (window.removeEventListener(
                                    'resize',
                                    this.documentResizeListener
                                ),
                                (this.documentResizeListener = null));
                        }
                        bindScrollListener() {
                            this.scrollHandler ||
                                (this.scrollHandler = new k.V(
                                    this.target,
                                    () => {
                                        this.visible && this.hide();
                                    }
                                )),
                                this.scrollHandler.bindScrollListener();
                        }
                        unbindScrollListener() {
                            this.scrollHandler &&
                                this.scrollHandler.unbindScrollListener();
                        }
                        onOverlayHide() {
                            this.unbindDocumentClickListener(),
                                this.unbindDocumentResizeListener(),
                                this.unbindScrollListener(),
                                (this.preventDocumentDefault = !1),
                                this.cd.destroyed || (this.target = null);
                        }
                        ngOnDestroy() {
                            this.popup &&
                                (this.scrollHandler &&
                                    (this.scrollHandler.destroy(),
                                    (this.scrollHandler = null)),
                                this.container &&
                                    this.autoZIndex &&
                                    T.P9.clear(this.container),
                                this.restoreOverlayAppend(),
                                this.onOverlayHide());
                        }
                        hasSubMenu() {
                            if (this.model)
                                for (var He of this.model)
                                    if (He.items) return !0;
                            return !1;
                        }
                    }
                    return (
                        (nt.ɵfac = function (He) {
                            return new (He || nt)(
                                s.Y36(s.SBq),
                                s.Y36(s.Qsj),
                                s.Y36(s.sBO),
                                s.Y36(U.b4),
                                s.Y36(U.F0)
                            );
                        }),
                        (nt.ɵcmp = s.Xpm({
                            type: nt,
                            selectors: [['p-menu']],
                            viewQuery: function (He, st) {
                                if ((1 & He && s.Gf(De, 5), 2 & He)) {
                                    let xt;
                                    s.iGM((xt = s.CRH())) &&
                                        (st.containerViewChild = xt.first);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                model: 'model',
                                popup: 'popup',
                                style: 'style',
                                styleClass: 'styleClass',
                                appendTo: 'appendTo',
                                autoZIndex: 'autoZIndex',
                                baseZIndex: 'baseZIndex',
                                showTransitionOptions: 'showTransitionOptions',
                                hideTransitionOptions: 'hideTransitionOptions',
                            },
                            outputs: { onShow: 'onShow', onHide: 'onHide' },
                            decls: 1,
                            vars: 1,
                            consts: [
                                [
                                    3,
                                    'ngClass',
                                    'class',
                                    'ngStyle',
                                    'click',
                                    4,
                                    'ngIf',
                                ],
                                [3, 'ngClass', 'ngStyle', 'click'],
                                ['container', ''],
                                ['role', 'menu', 1, 'p-menu-list', 'p-reset'],
                                [4, 'ngIf'],
                                ['ngFor', '', 3, 'ngForOf'],
                                [
                                    'class',
                                    'p-menu-separator',
                                    'role',
                                    'separator',
                                    3,
                                    'ngClass',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-submenu-header',
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    3,
                                    'ngClass',
                                    'tooltipOptions',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'role',
                                    'separator',
                                    1,
                                    'p-menu-separator',
                                    3,
                                    'ngClass',
                                ],
                                [
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    1,
                                    'p-submenu-header',
                                    3,
                                    'ngClass',
                                    'tooltipOptions',
                                ],
                                [4, 'ngIf', 'ngIfElse'],
                                ['htmlSubmenuLabel', ''],
                                [3, 'innerHTML'],
                                [
                                    'class',
                                    'p-menuitem',
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    3,
                                    'pMenuItemContent',
                                    'ngClass',
                                    'ngStyle',
                                    'class',
                                    'tooltipOptions',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    1,
                                    'p-menuitem',
                                    3,
                                    'pMenuItemContent',
                                    'ngClass',
                                    'ngStyle',
                                    'tooltipOptions',
                                ],
                            ],
                            template: function (He, st) {
                                1 & He && s.YNc(0, Pt, 5, 15, 'div', 0),
                                    2 & He &&
                                        s.Q6J('ngIf', !st.popup || st.visible);
                            },
                            directives: [It, L.O5, L.mk, L.PC, L.sg, N.u],
                            styles: [
                                '.p-menu-overlay{position:absolute;top:0;left:0}.p-menu ul{margin:0;padding:0;list-style:none}.p-menu .p-menuitem-link{cursor:pointer;display:flex;align-items:center;text-decoration:none;overflow:hidden;position:relative}.p-menu .p-menuitem-text{line-height:1}\n',
                            ],
                            encapsulation: 2,
                            data: {
                                animation: [
                                    (0, m.X$)('overlayAnimation', [
                                        (0, m.eR)(':enter', [
                                            (0, m.oB)({
                                                opacity: 0,
                                                transform: 'scaleY(0.8)',
                                            }),
                                            (0, m.jt)(
                                                '{{showTransitionParams}}'
                                            ),
                                        ]),
                                        (0, m.eR)(':leave', [
                                            (0, m.jt)(
                                                '{{hideTransitionParams}}',
                                                (0, m.oB)({ opacity: 0 })
                                            ),
                                        ]),
                                    ]),
                                ],
                            },
                            changeDetection: 0,
                        })),
                        nt
                    );
                })(),
                $t = (() => {
                    class nt {}
                    return (
                        (nt.ɵfac = function (He) {
                            return new (He || nt)();
                        }),
                        (nt.ɵmod = s.oAB({ type: nt })),
                        (nt.ɵinj = s.cJS({
                            imports: [[L.ez, S.Bz, O.T, N.z], S.Bz, N.z],
                        })),
                        nt
                    );
                })();
        },
        3724: (de, Y, f) => {
            f.d(Y, { O: () => w });
            var s = f(5e3),
                m = f(9808);
            let w = (() => {
                class F {}
                return (
                    (F.ɵfac = function (fe) {
                        return new (fe || F)();
                    }),
                    (F.ɵmod = s.oAB({ type: F })),
                    (F.ɵinj = s.cJS({ imports: [[m.ez]] })),
                    F
                );
            })();
        },
        97: (de, Y, f) => {
            f.d(Y, { $: () => De, V: () => he });
            var s = f(5e3),
                m = f(9808),
                L = f(1777),
                k = f(9783),
                T = f(5787);
            function S(R, te) {
                if ((1 & R && s._UZ(0, 'span', 11), 2 & R)) {
                    const G = s.oxw(2).$implicit;
                    s.Q6J('innerHTML', G.summary, s.oJD);
                }
            }
            function O(R, te) {
                if ((1 & R && s._UZ(0, 'span', 12), 2 & R)) {
                    const G = s.oxw(2).$implicit;
                    s.Q6J('innerHTML', G.detail, s.oJD);
                }
            }
            function N(R, te) {
                if (
                    (1 & R &&
                        (s.ynx(0),
                        s.YNc(1, S, 1, 1, 'span', 9),
                        s.YNc(2, O, 1, 1, 'span', 10),
                        s.BQk()),
                    2 & R)
                ) {
                    const G = s.oxw().$implicit;
                    s.xp6(1),
                        s.Q6J('ngIf', G.summary),
                        s.xp6(1),
                        s.Q6J('ngIf', G.detail);
                }
            }
            function U(R, te) {
                if (
                    (1 & R && (s.TgZ(0, 'span', 15), s._uU(1), s.qZA()), 2 & R)
                ) {
                    const G = s.oxw(2).$implicit;
                    s.xp6(1), s.Oqu(G.summary);
                }
            }
            function w(R, te) {
                if (
                    (1 & R && (s.TgZ(0, 'span', 16), s._uU(1), s.qZA()), 2 & R)
                ) {
                    const G = s.oxw(2).$implicit;
                    s.xp6(1), s.Oqu(G.detail);
                }
            }
            function F(R, te) {
                if (
                    (1 & R &&
                        (s.YNc(0, U, 2, 1, 'span', 13),
                        s.YNc(1, w, 2, 1, 'span', 14)),
                    2 & R)
                ) {
                    const G = s.oxw().$implicit;
                    s.Q6J('ngIf', G.summary), s.xp6(1), s.Q6J('ngIf', G.detail);
                }
            }
            function K(R, te) {
                if (1 & R) {
                    const G = s.EpF();
                    s.TgZ(0, 'button', 17),
                        s.NdJ('click', function () {
                            s.CHM(G);
                            const re = s.oxw().index;
                            return s.oxw(2).removeMessage(re);
                        }),
                        s._UZ(1, 'i', 18),
                        s.qZA();
                }
            }
            const fe = function (R, te) {
                    return {
                        showTransitionParams: R,
                        hideTransitionParams: te,
                    };
                },
                _e = function (R) {
                    return { value: 'visible', params: R };
                },
                Re = function (R, te, G, oe) {
                    return {
                        'pi-info-circle': R,
                        'pi-check': te,
                        'pi-exclamation-triangle': G,
                        'pi-times-circle': oe,
                    };
                };
            function Oe(R, te) {
                if (
                    (1 & R &&
                        (s.TgZ(0, 'div', 4)(1, 'div', 5),
                        s._UZ(2, 'span', 6),
                        s.YNc(3, N, 3, 2, 'ng-container', 1),
                        s.YNc(4, F, 2, 2, 'ng-template', null, 7, s.W1O),
                        s.YNc(6, K, 2, 0, 'button', 8),
                        s.qZA()()),
                    2 & R)
                ) {
                    const G = te.$implicit,
                        oe = s.MAs(5),
                        re = s.oxw(2);
                    s.Q6J('ngClass', 'p-message p-message-' + G.severity)(
                        '@messageAnimation',
                        s.VKq(
                            11,
                            _e,
                            s.WLB(
                                8,
                                fe,
                                re.showTransitionOptions,
                                re.hideTransitionOptions
                            )
                        )
                    ),
                        s.xp6(2),
                        s.Tol(
                            'p-message-icon pi' + (G.icon ? ' ' + G.icon : '')
                        ),
                        s.Q6J(
                            'ngClass',
                            s.l5B(
                                13,
                                Re,
                                'info' === G.severity,
                                'success' === G.severity,
                                'warn' === G.severity,
                                'error' === G.severity
                            )
                        ),
                        s.xp6(1),
                        s.Q6J('ngIf', !re.escape)('ngIfElse', oe),
                        s.xp6(3),
                        s.Q6J('ngIf', re.closable);
                }
            }
            function pe(R, te) {
                if (
                    (1 & R &&
                        (s.ynx(0), s.YNc(1, Oe, 7, 18, 'div', 3), s.BQk()),
                    2 & R)
                ) {
                    const G = s.oxw();
                    s.xp6(1), s.Q6J('ngForOf', G.value);
                }
            }
            function J(R, te) {
                1 & R && s.GkF(0);
            }
            function Me(R, te) {
                if (
                    (1 & R &&
                        (s.TgZ(0, 'div', 4)(1, 'div', 5),
                        s.YNc(2, J, 1, 0, 'ng-container', 19),
                        s.qZA()()),
                    2 & R)
                ) {
                    const G = s.oxw();
                    s.Q6J('ngClass', 'p-message p-message-' + G.severity),
                        s.xp6(2),
                        s.Q6J('ngTemplateOutlet', G.contentTemplate);
                }
            }
            let he = (() => {
                    class R {
                        constructor(G, oe, re) {
                            (this.messageService = G),
                                (this.el = oe),
                                (this.cd = re),
                                (this.closable = !0),
                                (this.enableService = !0),
                                (this.escape = !0),
                                (this.showTransitionOptions = '300ms ease-out'),
                                (this.hideTransitionOptions =
                                    '200ms cubic-bezier(0.86, 0, 0.07, 1)'),
                                (this.valueChange = new s.vpe());
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((G) => {
                                G.getType(),
                                    (this.contentTemplate = G.template);
                            }),
                                this.messageService &&
                                    this.enableService &&
                                    !this.contentTemplate &&
                                    ((this.messageSubscription =
                                        this.messageService.messageObserver.subscribe(
                                            (G) => {
                                                if (G) {
                                                    if (G instanceof Array) {
                                                        let oe = G.filter(
                                                            (re) =>
                                                                this.key ===
                                                                re.key
                                                        );
                                                        this.value = this.value
                                                            ? [
                                                                  ...this.value,
                                                                  ...oe,
                                                              ]
                                                            : [...oe];
                                                    } else
                                                        this.key === G.key &&
                                                            (this.value = this
                                                                .value
                                                                ? [
                                                                      ...this
                                                                          .value,
                                                                      G,
                                                                  ]
                                                                : [G]);
                                                    this.cd.markForCheck();
                                                }
                                            }
                                        )),
                                    (this.clearSubscription =
                                        this.messageService.clearObserver.subscribe(
                                            (G) => {
                                                G
                                                    ? this.key === G &&
                                                      (this.value = null)
                                                    : (this.value = null),
                                                    this.cd.markForCheck();
                                            }
                                        )));
                        }
                        hasMessages() {
                            let G = this.el.nativeElement.parentElement;
                            return (
                                !(!G || !G.offsetParent) &&
                                (null != this.contentTemplate ||
                                    (this.value && this.value.length > 0))
                            );
                        }
                        clear() {
                            (this.value = []),
                                this.valueChange.emit(this.value);
                        }
                        removeMessage(G) {
                            (this.value = this.value.filter(
                                (oe, re) => re !== G
                            )),
                                this.valueChange.emit(this.value);
                        }
                        get icon() {
                            const G =
                                this.severity ||
                                (this.hasMessages()
                                    ? this.value[0].severity
                                    : null);
                            if (this.hasMessages())
                                switch (G) {
                                    case 'success':
                                        return 'pi-check';
                                    case 'info':
                                    default:
                                        return 'pi-info-circle';
                                    case 'error':
                                        return 'pi-times';
                                    case 'warn':
                                        return 'pi-exclamation-triangle';
                                }
                            return null;
                        }
                        ngOnDestroy() {
                            this.messageSubscription &&
                                this.messageSubscription.unsubscribe(),
                                this.clearSubscription &&
                                    this.clearSubscription.unsubscribe();
                        }
                    }
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)(
                                s.Y36(k.ez, 8),
                                s.Y36(s.SBq),
                                s.Y36(s.sBO)
                            );
                        }),
                        (R.ɵcmp = s.Xpm({
                            type: R,
                            selectors: [['p-messages']],
                            contentQueries: function (G, oe, re) {
                                if ((1 & G && s.Suo(re, k.jx, 4), 2 & G)) {
                                    let ne;
                                    s.iGM((ne = s.CRH())) &&
                                        (oe.templates = ne);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                value: 'value',
                                closable: 'closable',
                                style: 'style',
                                styleClass: 'styleClass',
                                enableService: 'enableService',
                                key: 'key',
                                escape: 'escape',
                                severity: 'severity',
                                showTransitionOptions: 'showTransitionOptions',
                                hideTransitionOptions: 'hideTransitionOptions',
                            },
                            outputs: { valueChange: 'valueChange' },
                            decls: 4,
                            vars: 5,
                            consts: [
                                [
                                    'role',
                                    'alert',
                                    1,
                                    'p-messages',
                                    'p-component',
                                    3,
                                    'ngStyle',
                                ],
                                [4, 'ngIf', 'ngIfElse'],
                                ['staticMessage', ''],
                                [
                                    'role',
                                    'alert',
                                    3,
                                    'ngClass',
                                    4,
                                    'ngFor',
                                    'ngForOf',
                                ],
                                ['role', 'alert', 3, 'ngClass'],
                                [1, 'p-message-wrapper'],
                                [3, 'ngClass'],
                                ['escapeOut', ''],
                                [
                                    'class',
                                    'p-message-close p-link',
                                    'type',
                                    'button',
                                    'pRipple',
                                    '',
                                    3,
                                    'click',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-message-summary',
                                    3,
                                    'innerHTML',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-message-detail',
                                    3,
                                    'innerHTML',
                                    4,
                                    'ngIf',
                                ],
                                [1, 'p-message-summary', 3, 'innerHTML'],
                                [1, 'p-message-detail', 3, 'innerHTML'],
                                ['class', 'p-message-summary', 4, 'ngIf'],
                                ['class', 'p-message-detail', 4, 'ngIf'],
                                [1, 'p-message-summary'],
                                [1, 'p-message-detail'],
                                [
                                    'type',
                                    'button',
                                    'pRipple',
                                    '',
                                    1,
                                    'p-message-close',
                                    'p-link',
                                    3,
                                    'click',
                                ],
                                [1, 'p-message-close-icon', 'pi', 'pi-times'],
                                [4, 'ngTemplateOutlet'],
                            ],
                            template: function (G, oe) {
                                if (
                                    (1 & G &&
                                        (s.TgZ(0, 'div', 0),
                                        s.YNc(1, pe, 2, 1, 'ng-container', 1),
                                        s.YNc(
                                            2,
                                            Me,
                                            3,
                                            2,
                                            'ng-template',
                                            null,
                                            2,
                                            s.W1O
                                        ),
                                        s.qZA()),
                                    2 & G)
                                ) {
                                    const re = s.MAs(3);
                                    s.Tol(oe.styleClass),
                                        s.Q6J('ngStyle', oe.style),
                                        s.xp6(1),
                                        s.Q6J('ngIf', !oe.contentTemplate)(
                                            'ngIfElse',
                                            re
                                        );
                                }
                            },
                            directives: [m.PC, m.O5, m.sg, m.mk, T.H, m.tP],
                            styles: [
                                '.p-message-wrapper{display:flex;align-items:center}.p-message-close{display:flex;align-items:center;justify-content:center}.p-message-close.p-link{margin-left:auto;overflow:hidden;position:relative}\n',
                            ],
                            encapsulation: 2,
                            data: {
                                animation: [
                                    (0, L.X$)('messageAnimation', [
                                        (0, L.eR)(':enter', [
                                            (0, L.oB)({
                                                opacity: 0,
                                                transform: 'translateY(-25%)',
                                            }),
                                            (0, L.jt)(
                                                '{{showTransitionParams}}'
                                            ),
                                        ]),
                                        (0, L.eR)(':leave', [
                                            (0, L.jt)(
                                                '{{hideTransitionParams}}',
                                                (0, L.oB)({
                                                    height: 0,
                                                    marginTop: 0,
                                                    marginBottom: 0,
                                                    marginLeft: 0,
                                                    marginRight: 0,
                                                    overflow: 'hidden',
                                                    opacity: 0,
                                                })
                                            ),
                                        ]),
                                    ]),
                                ],
                            },
                            changeDetection: 0,
                        })),
                        R
                    );
                })(),
                De = (() => {
                    class R {}
                    return (
                        (R.ɵfac = function (G) {
                            return new (G || R)();
                        }),
                        (R.ɵmod = s.oAB({ type: R })),
                        (R.ɵinj = s.cJS({ imports: [[m.ez, T.T]] })),
                        R
                    );
                })();
        },
        5787: (de, Y, f) => {
            f.d(Y, { H: () => T, T: () => S });
            var s = f(5e3),
                m = f(9808),
                L = f(5730),
                k = f(9783);
            let T = (() => {
                    class O {
                        constructor(U, w, F) {
                            (this.el = U), (this.zone = w), (this.config = F);
                        }
                        ngAfterViewInit() {
                            this.config &&
                                this.config.ripple &&
                                this.zone.runOutsideAngular(() => {
                                    this.create(),
                                        (this.mouseDownListener =
                                            this.onMouseDown.bind(this)),
                                        this.el.nativeElement.addEventListener(
                                            'mousedown',
                                            this.mouseDownListener
                                        );
                                });
                        }
                        onMouseDown(U) {
                            let w = this.getInk();
                            if (
                                !w ||
                                'none' === getComputedStyle(w, null).display
                            )
                                return;
                            if (
                                (L.p.removeClass(w, 'p-ink-active'),
                                !L.p.getHeight(w) && !L.p.getWidth(w))
                            ) {
                                let _e = Math.max(
                                    L.p.getOuterWidth(this.el.nativeElement),
                                    L.p.getOuterHeight(this.el.nativeElement)
                                );
                                (w.style.height = _e + 'px'),
                                    (w.style.width = _e + 'px');
                            }
                            let F = L.p.getOffset(this.el.nativeElement),
                                K =
                                    U.pageX -
                                    F.left +
                                    document.body.scrollTop -
                                    L.p.getWidth(w) / 2,
                                fe =
                                    U.pageY -
                                    F.top +
                                    document.body.scrollLeft -
                                    L.p.getHeight(w) / 2;
                            (w.style.top = fe + 'px'),
                                (w.style.left = K + 'px'),
                                L.p.addClass(w, 'p-ink-active');
                        }
                        getInk() {
                            for (
                                let U = 0;
                                U < this.el.nativeElement.children.length;
                                U++
                            )
                                if (
                                    -1 !==
                                    this.el.nativeElement.children[
                                        U
                                    ].className.indexOf('p-ink')
                                )
                                    return this.el.nativeElement.children[U];
                            return null;
                        }
                        resetInk() {
                            let U = this.getInk();
                            U && L.p.removeClass(U, 'p-ink-active');
                        }
                        onAnimationEnd(U) {
                            L.p.removeClass(U.currentTarget, 'p-ink-active');
                        }
                        create() {
                            let U = document.createElement('span');
                            (U.className = 'p-ink'),
                                this.el.nativeElement.appendChild(U),
                                (this.animationListener =
                                    this.onAnimationEnd.bind(this)),
                                U.addEventListener(
                                    'animationend',
                                    this.animationListener
                                );
                        }
                        remove() {
                            let U = this.getInk();
                            U &&
                                (this.el.nativeElement.removeEventListener(
                                    'mousedown',
                                    this.mouseDownListener
                                ),
                                U.removeEventListener(
                                    'animationend',
                                    this.animationListener
                                ),
                                L.p.removeElement(U));
                        }
                        ngOnDestroy() {
                            this.config && this.config.ripple && this.remove();
                        }
                    }
                    return (
                        (O.ɵfac = function (U) {
                            return new (U || O)(
                                s.Y36(s.SBq),
                                s.Y36(s.R0b),
                                s.Y36(k.b4, 8)
                            );
                        }),
                        (O.ɵdir = s.lG2({
                            type: O,
                            selectors: [['', 'pRipple', '']],
                            hostAttrs: [1, 'p-ripple', 'p-element'],
                        })),
                        O
                    );
                })(),
                S = (() => {
                    class O {}
                    return (
                        (O.ɵfac = function (U) {
                            return new (U || O)();
                        }),
                        (O.ɵmod = s.oAB({ type: O })),
                        (O.ɵinj = s.cJS({ imports: [[m.ez]] })),
                        O
                    );
                })();
        },
        7773: (de, Y, f) => {
            f.d(Y, { EV: () => Me, FN: () => J });
            var s = f(5e3),
                m = f(9808),
                L = f(9783),
                k = f(5921),
                T = f(5787),
                S = f(1777);
            const O = ['container'],
                N = function (he, De, R, te) {
                    return {
                        'pi-info-circle': he,
                        'pi-exclamation-triangle': De,
                        'pi-times-circle': R,
                        'pi-check': te,
                    };
                };
            function U(he, De) {
                if (
                    (1 & he &&
                        (s.ynx(0),
                        s._UZ(1, 'span', 6),
                        s.TgZ(2, 'div', 7)(3, 'div', 8),
                        s._uU(4),
                        s.qZA(),
                        s.TgZ(5, 'div', 9),
                        s._uU(6),
                        s.qZA()(),
                        s.BQk()),
                    2 & he)
                ) {
                    const R = s.oxw();
                    s.xp6(1),
                        s.Tol(
                            'p-toast-message-icon pi' +
                                (R.message.icon ? ' ' + R.message.icon : '')
                        ),
                        s.Q6J(
                            'ngClass',
                            s.l5B(
                                5,
                                N,
                                'info' == R.message.severity,
                                'warn' == R.message.severity,
                                'error' == R.message.severity,
                                'success' == R.message.severity
                            )
                        ),
                        s.xp6(3),
                        s.Oqu(R.message.summary),
                        s.xp6(2),
                        s.Oqu(R.message.detail);
                }
            }
            function w(he, De) {
                1 & he && s.GkF(0);
            }
            function F(he, De) {
                if (1 & he) {
                    const R = s.EpF();
                    s.TgZ(0, 'button', 10),
                        s.NdJ('click', function (G) {
                            return s.CHM(R), s.oxw().onCloseIconClick(G);
                        })('keydown.enter', function (G) {
                            return s.CHM(R), s.oxw().onCloseIconClick(G);
                        }),
                        s._UZ(1, 'span', 11),
                        s.qZA();
                }
            }
            const K = function (he) {
                    return [he, 'p-toast-message'];
                },
                fe = function (he, De, R, te) {
                    return {
                        showTransformParams: he,
                        hideTransformParams: De,
                        showTransitionParams: R,
                        hideTransitionParams: te,
                    };
                },
                _e = function (he) {
                    return { value: 'visible', params: he };
                },
                Re = function (he) {
                    return { $implicit: he };
                };
            function Oe(he, De) {
                if (1 & he) {
                    const R = s.EpF();
                    s.TgZ(0, 'p-toastItem', 3),
                        s.NdJ('onClose', function (G) {
                            return s.CHM(R), s.oxw().onMessageClose(G);
                        })('@toastAnimation.start', function (G) {
                            return s.CHM(R), s.oxw().onAnimationStart(G);
                        })('@toastAnimation.done', function (G) {
                            return s.CHM(R), s.oxw().onAnimationEnd(G);
                        }),
                        s.qZA();
                }
                if (2 & he) {
                    const R = De.$implicit,
                        te = De.index,
                        G = s.oxw();
                    s.Q6J('message', R)('index', te)('template', G.template)(
                        '@toastAnimation',
                        void 0
                    )('showTransformOptions', G.showTransformOptions)(
                        'hideTransformOptions',
                        G.hideTransformOptions
                    )('showTransitionOptions', G.showTransitionOptions)(
                        'hideTransitionOptions',
                        G.hideTransitionOptions
                    );
                }
            }
            let pe = (() => {
                    class he {
                        constructor(R) {
                            (this.zone = R), (this.onClose = new s.vpe());
                        }
                        ngAfterViewInit() {
                            this.initTimeout();
                        }
                        initTimeout() {
                            this.message.sticky ||
                                this.zone.runOutsideAngular(() => {
                                    this.timeout = setTimeout(() => {
                                        this.onClose.emit({
                                            index: this.index,
                                            message: this.message,
                                        });
                                    }, this.message.life || 3e3);
                                });
                        }
                        clearTimeout() {
                            this.timeout &&
                                (clearTimeout(this.timeout),
                                (this.timeout = null));
                        }
                        onMouseEnter() {
                            this.clearTimeout();
                        }
                        onMouseLeave() {
                            this.initTimeout();
                        }
                        onCloseIconClick(R) {
                            this.clearTimeout(),
                                this.onClose.emit({
                                    index: this.index,
                                    message: this.message,
                                }),
                                R.preventDefault();
                        }
                        ngOnDestroy() {
                            this.clearTimeout();
                        }
                    }
                    return (
                        (he.ɵfac = function (R) {
                            return new (R || he)(s.Y36(s.R0b));
                        }),
                        (he.ɵcmp = s.Xpm({
                            type: he,
                            selectors: [['p-toastItem']],
                            viewQuery: function (R, te) {
                                if ((1 & R && s.Gf(O, 5), 2 & R)) {
                                    let G;
                                    s.iGM((G = s.CRH())) &&
                                        (te.containerViewChild = G.first);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                message: 'message',
                                index: 'index',
                                template: 'template',
                                showTransformOptions: 'showTransformOptions',
                                hideTransformOptions: 'hideTransformOptions',
                                showTransitionOptions: 'showTransitionOptions',
                                hideTransitionOptions: 'hideTransitionOptions',
                            },
                            outputs: { onClose: 'onClose' },
                            decls: 6,
                            vars: 21,
                            consts: [
                                [3, 'ngClass', 'mouseenter', 'mouseleave'],
                                ['container', ''],
                                [
                                    'role',
                                    'alert',
                                    'aria-live',
                                    'assertive',
                                    'aria-atomic',
                                    'true',
                                    1,
                                    'p-toast-message-content',
                                    3,
                                    'ngClass',
                                ],
                                [4, 'ngIf'],
                                [
                                    4,
                                    'ngTemplateOutlet',
                                    'ngTemplateOutletContext',
                                ],
                                [
                                    'type',
                                    'button',
                                    'class',
                                    'p-toast-icon-close p-link',
                                    'pRipple',
                                    '',
                                    3,
                                    'click',
                                    'keydown.enter',
                                    4,
                                    'ngIf',
                                ],
                                [3, 'ngClass'],
                                [1, 'p-toast-message-text'],
                                [1, 'p-toast-summary'],
                                [1, 'p-toast-detail'],
                                [
                                    'type',
                                    'button',
                                    'pRipple',
                                    '',
                                    1,
                                    'p-toast-icon-close',
                                    'p-link',
                                    3,
                                    'click',
                                    'keydown.enter',
                                ],
                                [
                                    1,
                                    'p-toast-icon-close-icon',
                                    'pi',
                                    'pi-times',
                                ],
                            ],
                            template: function (R, te) {
                                1 & R &&
                                    (s.TgZ(0, 'div', 0, 1),
                                    s.NdJ('mouseenter', function () {
                                        return te.onMouseEnter();
                                    })('mouseleave', function () {
                                        return te.onMouseLeave();
                                    }),
                                    s.TgZ(2, 'div', 2),
                                    s.YNc(3, U, 7, 10, 'ng-container', 3),
                                    s.YNc(4, w, 1, 0, 'ng-container', 4),
                                    s.YNc(5, F, 2, 0, 'button', 5),
                                    s.qZA()()),
                                    2 & R &&
                                        (s.Tol(te.message.styleClass),
                                        s.Q6J(
                                            'ngClass',
                                            s.VKq(
                                                10,
                                                K,
                                                'p-toast-message-' +
                                                    te.message.severity
                                            )
                                        )(
                                            '@messageState',
                                            s.VKq(
                                                17,
                                                _e,
                                                s.l5B(
                                                    12,
                                                    fe,
                                                    te.showTransformOptions,
                                                    te.hideTransformOptions,
                                                    te.showTransitionOptions,
                                                    te.hideTransitionOptions
                                                )
                                            )
                                        ),
                                        s.uIk('id', te.message.id),
                                        s.xp6(2),
                                        s.Q6J(
                                            'ngClass',
                                            te.message.contentStyleClass
                                        ),
                                        s.xp6(1),
                                        s.Q6J('ngIf', !te.template),
                                        s.xp6(1),
                                        s.Q6J('ngTemplateOutlet', te.template)(
                                            'ngTemplateOutletContext',
                                            s.VKq(19, Re, te.message)
                                        ),
                                        s.xp6(1),
                                        s.Q6J(
                                            'ngIf',
                                            !1 !== te.message.closable
                                        ));
                            },
                            directives: [m.mk, m.O5, m.tP, T.H],
                            encapsulation: 2,
                            data: {
                                animation: [
                                    (0, S.X$)('messageState', [
                                        (0, S.SB)(
                                            'visible',
                                            (0, S.oB)({
                                                transform: 'translateY(0)',
                                                opacity: 1,
                                            })
                                        ),
                                        (0, S.eR)('void => *', [
                                            (0, S.oB)({
                                                transform:
                                                    '{{showTransformParams}}',
                                                opacity: 0,
                                            }),
                                            (0, S.jt)(
                                                '{{showTransitionParams}}'
                                            ),
                                        ]),
                                        (0, S.eR)('* => void', [
                                            (0, S.jt)(
                                                '{{hideTransitionParams}}',
                                                (0, S.oB)({
                                                    height: 0,
                                                    opacity: 0,
                                                    transform:
                                                        '{{hideTransformParams}}',
                                                })
                                            ),
                                        ]),
                                    ]),
                                ],
                            },
                            changeDetection: 0,
                        })),
                        he
                    );
                })(),
                J = (() => {
                    class he {
                        constructor(R, te, G) {
                            (this.messageService = R),
                                (this.cd = te),
                                (this.config = G),
                                (this.autoZIndex = !0),
                                (this.baseZIndex = 0),
                                (this.position = 'top-right'),
                                (this.preventOpenDuplicates = !1),
                                (this.preventDuplicates = !1),
                                (this.showTransformOptions =
                                    'translateY(100%)'),
                                (this.hideTransformOptions =
                                    'translateY(-100%)'),
                                (this.showTransitionOptions = '300ms ease-out'),
                                (this.hideTransitionOptions = '250ms ease-in'),
                                (this.onClose = new s.vpe()),
                                (this.id = (0, k.Th)());
                        }
                        ngOnInit() {
                            (this.messageSubscription =
                                this.messageService.messageObserver.subscribe(
                                    (R) => {
                                        if (R)
                                            if (R instanceof Array) {
                                                const te = R.filter((G) =>
                                                    this.canAdd(G)
                                                );
                                                this.add(te);
                                            } else
                                                this.canAdd(R) && this.add([R]);
                                    }
                                )),
                                (this.clearSubscription =
                                    this.messageService.clearObserver.subscribe(
                                        (R) => {
                                            R
                                                ? this.key === R &&
                                                  (this.messages = null)
                                                : (this.messages = null),
                                                this.cd.markForCheck();
                                        }
                                    ));
                        }
                        ngAfterViewInit() {
                            this.breakpoints && this.createStyle();
                        }
                        add(R) {
                            (this.messages = this.messages
                                ? [...this.messages, ...R]
                                : [...R]),
                                this.preventDuplicates &&
                                    (this.messagesArchieve = this
                                        .messagesArchieve
                                        ? [...this.messagesArchieve, ...R]
                                        : [...R]),
                                this.cd.markForCheck();
                        }
                        canAdd(R) {
                            let te = this.key === R.key;
                            return (
                                te &&
                                    this.preventOpenDuplicates &&
                                    (te = !this.containsMessage(
                                        this.messages,
                                        R
                                    )),
                                te &&
                                    this.preventDuplicates &&
                                    (te = !this.containsMessage(
                                        this.messagesArchieve,
                                        R
                                    )),
                                te
                            );
                        }
                        containsMessage(R, te) {
                            return (
                                !!R &&
                                null !=
                                    R.find(
                                        (G) =>
                                            G.summary === te.summary &&
                                            G.detail == te.detail &&
                                            G.severity === te.severity
                                    )
                            );
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((R) => {
                                R.getType(), (this.template = R.template);
                            });
                        }
                        onMessageClose(R) {
                            this.messages.splice(R.index, 1),
                                this.onClose.emit({ message: R.message }),
                                this.cd.detectChanges();
                        }
                        onAnimationStart(R) {
                            'void' === R.fromState &&
                                (this.containerViewChild.nativeElement.setAttribute(
                                    this.id,
                                    ''
                                ),
                                this.autoZIndex &&
                                    k.P9.set(
                                        'modal',
                                        this.containerViewChild.nativeElement,
                                        this.baseZIndex ||
                                            this.config.zIndex.modal
                                    ));
                        }
                        onAnimationEnd(R) {
                            'void' === R.toState &&
                                this.autoZIndex &&
                                k.P9.clear(
                                    this.containerViewChild.nativeElement
                                );
                        }
                        createStyle() {
                            if (!this.styleElement) {
                                (this.styleElement =
                                    document.createElement('style')),
                                    (this.styleElement.type = 'text/css'),
                                    document.head.appendChild(
                                        this.styleElement
                                    );
                                let R = '';
                                for (let te in this.breakpoints) {
                                    let G = '';
                                    for (let oe in this.breakpoints[te])
                                        G +=
                                            oe +
                                            ':' +
                                            this.breakpoints[te][oe] +
                                            ' !important;';
                                    R += `\n                    @media screen and (max-width: ${te}) {\n                        .p-toast[${this.id}] {\n                           ${G}\n                        }\n                    }\n                `;
                                }
                                this.styleElement.innerHTML = R;
                            }
                        }
                        destroyStyle() {
                            this.styleElement &&
                                (document.head.removeChild(this.styleElement),
                                (this.styleElement = null));
                        }
                        ngOnDestroy() {
                            this.messageSubscription &&
                                this.messageSubscription.unsubscribe(),
                                this.containerViewChild &&
                                    this.autoZIndex &&
                                    k.P9.clear(
                                        this.containerViewChild.nativeElement
                                    ),
                                this.clearSubscription &&
                                    this.clearSubscription.unsubscribe(),
                                this.destroyStyle();
                        }
                    }
                    return (
                        (he.ɵfac = function (R) {
                            return new (R || he)(
                                s.Y36(L.ez),
                                s.Y36(s.sBO),
                                s.Y36(L.b4)
                            );
                        }),
                        (he.ɵcmp = s.Xpm({
                            type: he,
                            selectors: [['p-toast']],
                            contentQueries: function (R, te, G) {
                                if ((1 & R && s.Suo(G, L.jx, 4), 2 & R)) {
                                    let oe;
                                    s.iGM((oe = s.CRH())) &&
                                        (te.templates = oe);
                                }
                            },
                            viewQuery: function (R, te) {
                                if ((1 & R && s.Gf(O, 5), 2 & R)) {
                                    let G;
                                    s.iGM((G = s.CRH())) &&
                                        (te.containerViewChild = G.first);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                key: 'key',
                                autoZIndex: 'autoZIndex',
                                baseZIndex: 'baseZIndex',
                                style: 'style',
                                styleClass: 'styleClass',
                                position: 'position',
                                preventOpenDuplicates: 'preventOpenDuplicates',
                                preventDuplicates: 'preventDuplicates',
                                showTransformOptions: 'showTransformOptions',
                                hideTransformOptions: 'hideTransformOptions',
                                showTransitionOptions: 'showTransitionOptions',
                                hideTransitionOptions: 'hideTransitionOptions',
                                breakpoints: 'breakpoints',
                            },
                            outputs: { onClose: 'onClose' },
                            decls: 3,
                            vars: 5,
                            consts: [
                                [3, 'ngClass', 'ngStyle'],
                                ['container', ''],
                                [
                                    3,
                                    'message',
                                    'index',
                                    'template',
                                    'showTransformOptions',
                                    'hideTransformOptions',
                                    'showTransitionOptions',
                                    'hideTransitionOptions',
                                    'onClose',
                                    4,
                                    'ngFor',
                                    'ngForOf',
                                ],
                                [
                                    3,
                                    'message',
                                    'index',
                                    'template',
                                    'showTransformOptions',
                                    'hideTransformOptions',
                                    'showTransitionOptions',
                                    'hideTransitionOptions',
                                    'onClose',
                                ],
                            ],
                            template: function (R, te) {
                                1 & R &&
                                    (s.TgZ(0, 'div', 0, 1),
                                    s.YNc(2, Oe, 1, 8, 'p-toastItem', 2),
                                    s.qZA()),
                                    2 & R &&
                                        (s.Tol(te.styleClass),
                                        s.Q6J(
                                            'ngClass',
                                            'p-toast p-component p-toast-' +
                                                te.position
                                        )('ngStyle', te.style),
                                        s.xp6(2),
                                        s.Q6J('ngForOf', te.messages));
                            },
                            directives: [pe, m.mk, m.PC, m.sg],
                            styles: [
                                '.p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{display:flex;align-items:flex-start}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{top:20px;right:20px}.p-toast-top-left{top:20px;left:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{top:20px;left:50%;transform:translate(-50%)}.p-toast-bottom-center{bottom:20px;left:50%;transform:translate(-50%)}.p-toast-center{left:50%;top:50%;min-width:20vw;transform:translate(-50%,-50%)}.p-toast-icon-close{display:flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\n',
                            ],
                            encapsulation: 2,
                            data: {
                                animation: [
                                    (0, S.X$)('toastAnimation', [
                                        (0, S.eR)(':enter, :leave', [
                                            (0, S.IO)('@*', (0, S.pV)()),
                                        ]),
                                    ]),
                                ],
                            },
                            changeDetection: 0,
                        })),
                        he
                    );
                })(),
                Me = (() => {
                    class he {}
                    return (
                        (he.ɵfac = function (R) {
                            return new (R || he)();
                        }),
                        (he.ɵmod = s.oAB({ type: he })),
                        (he.ɵinj = s.cJS({ imports: [[m.ez, T.T], L.m8] })),
                        he
                    );
                })();
        },
        4119: (de, Y, f) => {
            f.d(Y, { u: () => S, z: () => O });
            var s = f(5e3),
                m = f(9808),
                L = f(5730),
                k = f(5921),
                T = f(9783);
            let S = (() => {
                    class N {
                        constructor(w, F, K) {
                            (this.el = w),
                                (this.zone = F),
                                (this.config = K),
                                (this.escape = !0),
                                (this._tooltipOptions = {
                                    tooltipPosition: 'right',
                                    tooltipEvent: 'hover',
                                    appendTo: 'body',
                                    tooltipZIndex: 'auto',
                                    escape: !1,
                                    positionTop: 0,
                                    positionLeft: 0,
                                });
                        }
                        get disabled() {
                            return this._disabled;
                        }
                        set disabled(w) {
                            (this._disabled = w), this.deactivate();
                        }
                        ngAfterViewInit() {
                            this.zone.runOutsideAngular(() => {
                                'hover' === this.getOption('tooltipEvent')
                                    ? ((this.mouseEnterListener =
                                          this.onMouseEnter.bind(this)),
                                      (this.mouseLeaveListener =
                                          this.onMouseLeave.bind(this)),
                                      (this.clickListener =
                                          this.onClick.bind(this)),
                                      this.el.nativeElement.addEventListener(
                                          'mouseenter',
                                          this.mouseEnterListener
                                      ),
                                      this.el.nativeElement.addEventListener(
                                          'mouseleave',
                                          this.mouseLeaveListener
                                      ),
                                      this.el.nativeElement.addEventListener(
                                          'click',
                                          this.clickListener
                                      ))
                                    : 'focus' ===
                                          this.getOption('tooltipEvent') &&
                                      ((this.focusListener =
                                          this.onFocus.bind(this)),
                                      (this.blurListener =
                                          this.onBlur.bind(this)),
                                      this.el.nativeElement.addEventListener(
                                          'focus',
                                          this.focusListener
                                      ),
                                      this.el.nativeElement.addEventListener(
                                          'blur',
                                          this.blurListener
                                      ));
                            });
                        }
                        ngOnChanges(w) {
                            w.tooltipPosition &&
                                this.setOption({
                                    tooltipPosition:
                                        w.tooltipPosition.currentValue,
                                }),
                                w.tooltipEvent &&
                                    this.setOption({
                                        tooltipEvent:
                                            w.tooltipEvent.currentValue,
                                    }),
                                w.appendTo &&
                                    this.setOption({
                                        appendTo: w.appendTo.currentValue,
                                    }),
                                w.positionStyle &&
                                    this.setOption({
                                        positionStyle:
                                            w.positionStyle.currentValue,
                                    }),
                                w.tooltipStyleClass &&
                                    this.setOption({
                                        tooltipStyleClass:
                                            w.tooltipStyleClass.currentValue,
                                    }),
                                w.tooltipZIndex &&
                                    this.setOption({
                                        tooltipZIndex:
                                            w.tooltipZIndex.currentValue,
                                    }),
                                w.escape &&
                                    this.setOption({
                                        escape: w.escape.currentValue,
                                    }),
                                w.showDelay &&
                                    this.setOption({
                                        showDelay: w.showDelay.currentValue,
                                    }),
                                w.hideDelay &&
                                    this.setOption({
                                        hideDelay: w.hideDelay.currentValue,
                                    }),
                                w.life &&
                                    this.setOption({
                                        life: w.life.currentValue,
                                    }),
                                w.positionTop &&
                                    this.setOption({
                                        positionTop: w.positionTop.currentValue,
                                    }),
                                w.positionLeft &&
                                    this.setOption({
                                        positionLeft:
                                            w.positionLeft.currentValue,
                                    }),
                                w.disabled &&
                                    this.setOption({
                                        disabled: w.disabled.currentValue,
                                    }),
                                w.text &&
                                    (this.setOption({
                                        tooltipLabel: w.text.currentValue,
                                    }),
                                    this.active &&
                                        (w.text.currentValue
                                            ? this.container &&
                                              this.container.offsetParent
                                                ? (this.updateText(),
                                                  this.align())
                                                : this.show()
                                            : this.hide())),
                                w.tooltipOptions &&
                                    ((this._tooltipOptions = Object.assign(
                                        Object.assign({}, this._tooltipOptions),
                                        w.tooltipOptions.currentValue
                                    )),
                                    this.deactivate(),
                                    this.active &&
                                        (this.getOption('tooltipLabel')
                                            ? this.container &&
                                              this.container.offsetParent
                                                ? (this.updateText(),
                                                  this.align())
                                                : this.show()
                                            : this.hide()));
                        }
                        onMouseEnter(w) {
                            !this.container &&
                                !this.showTimeout &&
                                this.activate();
                        }
                        onMouseLeave(w) {
                            this.deactivate();
                        }
                        onFocus(w) {
                            this.activate();
                        }
                        onBlur(w) {
                            this.deactivate();
                        }
                        onClick(w) {
                            this.deactivate();
                        }
                        activate() {
                            if (
                                ((this.active = !0),
                                this.clearHideTimeout(),
                                this.getOption('showDelay')
                                    ? (this.showTimeout = setTimeout(() => {
                                          this.show();
                                      }, this.getOption('showDelay')))
                                    : this.show(),
                                this.getOption('life'))
                            ) {
                                let w = this.getOption('showDelay')
                                    ? this.getOption('life') +
                                      this.getOption('showDelay')
                                    : this.getOption('life');
                                this.hideTimeout = setTimeout(() => {
                                    this.hide();
                                }, w);
                            }
                        }
                        deactivate() {
                            (this.active = !1),
                                this.clearShowTimeout(),
                                this.getOption('hideDelay')
                                    ? (this.clearHideTimeout(),
                                      (this.hideTimeout = setTimeout(() => {
                                          this.hide();
                                      }, this.getOption('hideDelay'))))
                                    : this.hide();
                        }
                        create() {
                            this.container &&
                                (this.clearHideTimeout(), this.remove()),
                                (this.container =
                                    document.createElement('div'));
                            let w = document.createElement('div');
                            (w.className = 'p-tooltip-arrow'),
                                this.container.appendChild(w),
                                (this.tooltipText =
                                    document.createElement('div')),
                                (this.tooltipText.className = 'p-tooltip-text'),
                                this.updateText(),
                                this.getOption('positionStyle') &&
                                    (this.container.style.position =
                                        this.getOption('positionStyle')),
                                this.container.appendChild(this.tooltipText),
                                'body' === this.getOption('appendTo')
                                    ? document.body.appendChild(this.container)
                                    : 'target' === this.getOption('appendTo')
                                    ? L.p.appendChild(
                                          this.container,
                                          this.el.nativeElement
                                      )
                                    : L.p.appendChild(
                                          this.container,
                                          this.getOption('appendTo')
                                      ),
                                (this.container.style.display = 'inline-block');
                        }
                        show() {
                            !this.getOption('tooltipLabel') ||
                                this.getOption('disabled') ||
                                (this.create(),
                                this.align(),
                                L.p.fadeIn(this.container, 250),
                                'auto' === this.getOption('tooltipZIndex')
                                    ? k.P9.set(
                                          'tooltip',
                                          this.container,
                                          this.config.zIndex.tooltip
                                      )
                                    : (this.container.style.zIndex =
                                          this.getOption('tooltipZIndex')),
                                this.bindDocumentResizeListener(),
                                this.bindScrollListener());
                        }
                        hide() {
                            'auto' === this.getOption('tooltipZIndex') &&
                                k.P9.clear(this.container),
                                this.remove();
                        }
                        updateText() {
                            this.getOption('escape')
                                ? ((this.tooltipText.innerHTML = ''),
                                  this.tooltipText.appendChild(
                                      document.createTextNode(
                                          this.getOption('tooltipLabel')
                                      )
                                  ))
                                : (this.tooltipText.innerHTML =
                                      this.getOption('tooltipLabel'));
                        }
                        align() {
                            switch (this.getOption('tooltipPosition')) {
                                case 'top':
                                    this.alignTop(),
                                        this.isOutOfBounds() &&
                                            (this.alignBottom(),
                                            this.isOutOfBounds() &&
                                                (this.alignRight(),
                                                this.isOutOfBounds() &&
                                                    this.alignLeft()));
                                    break;
                                case 'bottom':
                                    this.alignBottom(),
                                        this.isOutOfBounds() &&
                                            (this.alignTop(),
                                            this.isOutOfBounds() &&
                                                (this.alignRight(),
                                                this.isOutOfBounds() &&
                                                    this.alignLeft()));
                                    break;
                                case 'left':
                                    this.alignLeft(),
                                        this.isOutOfBounds() &&
                                            (this.alignRight(),
                                            this.isOutOfBounds() &&
                                                (this.alignTop(),
                                                this.isOutOfBounds() &&
                                                    this.alignBottom()));
                                    break;
                                case 'right':
                                    this.alignRight(),
                                        this.isOutOfBounds() &&
                                            (this.alignLeft(),
                                            this.isOutOfBounds() &&
                                                (this.alignTop(),
                                                this.isOutOfBounds() &&
                                                    this.alignBottom()));
                            }
                        }
                        getHostOffset() {
                            if (
                                'body' === this.getOption('appendTo') ||
                                'target' === this.getOption('appendTo')
                            ) {
                                let w =
                                    this.el.nativeElement.getBoundingClientRect();
                                return {
                                    left: w.left + L.p.getWindowScrollLeft(),
                                    top: w.top + L.p.getWindowScrollTop(),
                                };
                            }
                            return { left: 0, top: 0 };
                        }
                        alignRight() {
                            this.preAlign('right');
                            let w = this.getHostOffset(),
                                F =
                                    w.left +
                                    L.p.getOuterWidth(this.el.nativeElement),
                                K =
                                    w.top +
                                    (L.p.getOuterHeight(this.el.nativeElement) -
                                        L.p.getOuterHeight(this.container)) /
                                        2;
                            (this.container.style.left =
                                F + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    K + this.getOption('positionTop') + 'px');
                        }
                        alignLeft() {
                            this.preAlign('left');
                            let w = this.getHostOffset(),
                                F = w.left - L.p.getOuterWidth(this.container),
                                K =
                                    w.top +
                                    (L.p.getOuterHeight(this.el.nativeElement) -
                                        L.p.getOuterHeight(this.container)) /
                                        2;
                            (this.container.style.left =
                                F + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    K + this.getOption('positionTop') + 'px');
                        }
                        alignTop() {
                            this.preAlign('top');
                            let w = this.getHostOffset(),
                                F =
                                    w.left +
                                    (L.p.getOuterWidth(this.el.nativeElement) -
                                        L.p.getOuterWidth(this.container)) /
                                        2,
                                K = w.top - L.p.getOuterHeight(this.container);
                            (this.container.style.left =
                                F + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    K + this.getOption('positionTop') + 'px');
                        }
                        alignBottom() {
                            this.preAlign('bottom');
                            let w = this.getHostOffset(),
                                F =
                                    w.left +
                                    (L.p.getOuterWidth(this.el.nativeElement) -
                                        L.p.getOuterWidth(this.container)) /
                                        2,
                                K =
                                    w.top +
                                    L.p.getOuterHeight(this.el.nativeElement);
                            (this.container.style.left =
                                F + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    K + this.getOption('positionTop') + 'px');
                        }
                        setOption(w) {
                            this._tooltipOptions = Object.assign(
                                Object.assign({}, this._tooltipOptions),
                                w
                            );
                        }
                        getOption(w) {
                            return this._tooltipOptions[w];
                        }
                        preAlign(w) {
                            (this.container.style.left = '-999px'),
                                (this.container.style.top = '-999px');
                            let F = 'p-tooltip p-component p-tooltip-' + w;
                            this.container.className = this.getOption(
                                'tooltipStyleClass'
                            )
                                ? F + ' ' + this.getOption('tooltipStyleClass')
                                : F;
                        }
                        isOutOfBounds() {
                            let w = this.container.getBoundingClientRect(),
                                F = w.top,
                                K = w.left,
                                fe = L.p.getOuterWidth(this.container),
                                _e = L.p.getOuterHeight(this.container),
                                Re = L.p.getViewport();
                            return (
                                K + fe > Re.width ||
                                K < 0 ||
                                F < 0 ||
                                F + _e > Re.height
                            );
                        }
                        onWindowResize(w) {
                            this.hide();
                        }
                        bindDocumentResizeListener() {
                            this.zone.runOutsideAngular(() => {
                                (this.resizeListener =
                                    this.onWindowResize.bind(this)),
                                    window.addEventListener(
                                        'resize',
                                        this.resizeListener
                                    );
                            });
                        }
                        unbindDocumentResizeListener() {
                            this.resizeListener &&
                                (window.removeEventListener(
                                    'resize',
                                    this.resizeListener
                                ),
                                (this.resizeListener = null));
                        }
                        bindScrollListener() {
                            this.scrollHandler ||
                                (this.scrollHandler = new L.V(
                                    this.el.nativeElement,
                                    () => {
                                        this.container && this.hide();
                                    }
                                )),
                                this.scrollHandler.bindScrollListener();
                        }
                        unbindScrollListener() {
                            this.scrollHandler &&
                                this.scrollHandler.unbindScrollListener();
                        }
                        unbindEvents() {
                            'hover' === this.getOption('tooltipEvent')
                                ? (this.el.nativeElement.removeEventListener(
                                      'mouseenter',
                                      this.mouseEnterListener
                                  ),
                                  this.el.nativeElement.removeEventListener(
                                      'mouseleave',
                                      this.mouseLeaveListener
                                  ),
                                  this.el.nativeElement.removeEventListener(
                                      'click',
                                      this.clickListener
                                  ))
                                : 'focus' === this.getOption('tooltipEvent') &&
                                  (this.el.nativeElement.removeEventListener(
                                      'focus',
                                      this.focusListener
                                  ),
                                  this.el.nativeElement.removeEventListener(
                                      'blur',
                                      this.blurListener
                                  )),
                                this.unbindDocumentResizeListener();
                        }
                        remove() {
                            this.container &&
                                this.container.parentElement &&
                                ('body' === this.getOption('appendTo')
                                    ? document.body.removeChild(this.container)
                                    : 'target' === this.getOption('appendTo')
                                    ? this.el.nativeElement.removeChild(
                                          this.container
                                      )
                                    : L.p.removeChild(
                                          this.container,
                                          this.getOption('appendTo')
                                      )),
                                this.unbindDocumentResizeListener(),
                                this.unbindScrollListener(),
                                this.clearTimeouts(),
                                (this.container = null),
                                (this.scrollHandler = null);
                        }
                        clearShowTimeout() {
                            this.showTimeout &&
                                (clearTimeout(this.showTimeout),
                                (this.showTimeout = null));
                        }
                        clearHideTimeout() {
                            this.hideTimeout &&
                                (clearTimeout(this.hideTimeout),
                                (this.hideTimeout = null));
                        }
                        clearTimeouts() {
                            this.clearShowTimeout(), this.clearHideTimeout();
                        }
                        ngOnDestroy() {
                            this.unbindEvents(),
                                this.container && k.P9.clear(this.container),
                                this.remove(),
                                this.scrollHandler &&
                                    (this.scrollHandler.destroy(),
                                    (this.scrollHandler = null));
                        }
                    }
                    return (
                        (N.ɵfac = function (w) {
                            return new (w || N)(
                                s.Y36(s.SBq),
                                s.Y36(s.R0b),
                                s.Y36(T.b4)
                            );
                        }),
                        (N.ɵdir = s.lG2({
                            type: N,
                            selectors: [['', 'pTooltip', '']],
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                tooltipPosition: 'tooltipPosition',
                                tooltipEvent: 'tooltipEvent',
                                appendTo: 'appendTo',
                                positionStyle: 'positionStyle',
                                tooltipStyleClass: 'tooltipStyleClass',
                                tooltipZIndex: 'tooltipZIndex',
                                escape: 'escape',
                                showDelay: 'showDelay',
                                hideDelay: 'hideDelay',
                                life: 'life',
                                positionTop: 'positionTop',
                                positionLeft: 'positionLeft',
                                text: ['pTooltip', 'text'],
                                disabled: ['tooltipDisabled', 'disabled'],
                                tooltipOptions: 'tooltipOptions',
                            },
                            features: [s.TTD],
                        })),
                        N
                    );
                })(),
                O = (() => {
                    class N {}
                    return (
                        (N.ɵfac = function (w) {
                            return new (w || N)();
                        }),
                        (N.ɵmod = s.oAB({ type: N })),
                        (N.ɵinj = s.cJS({ imports: [[m.ez]] })),
                        N
                    );
                })();
        },
        5921: (de, Y, f) => {
            f.d(Y, { P9: () => T, Th: () => L, gb: () => s });
            class s {
                static equals(O, N, U) {
                    return U
                        ? this.resolveFieldData(O, U) ===
                              this.resolveFieldData(N, U)
                        : this.equalsByValue(O, N);
                }
                static equalsByValue(O, N) {
                    if (O === N) return !0;
                    if (
                        O &&
                        N &&
                        'object' == typeof O &&
                        'object' == typeof N
                    ) {
                        var F,
                            K,
                            fe,
                            U = Array.isArray(O),
                            w = Array.isArray(N);
                        if (U && w) {
                            if ((K = O.length) != N.length) return !1;
                            for (F = K; 0 != F--; )
                                if (!this.equalsByValue(O[F], N[F])) return !1;
                            return !0;
                        }
                        if (U != w) return !1;
                        var _e = O instanceof Date,
                            Re = N instanceof Date;
                        if (_e != Re) return !1;
                        if (_e && Re) return O.getTime() == N.getTime();
                        var Oe = O instanceof RegExp,
                            pe = N instanceof RegExp;
                        if (Oe != pe) return !1;
                        if (Oe && pe) return O.toString() == N.toString();
                        var J = Object.keys(O);
                        if ((K = J.length) !== Object.keys(N).length) return !1;
                        for (F = K; 0 != F--; )
                            if (!Object.prototype.hasOwnProperty.call(N, J[F]))
                                return !1;
                        for (F = K; 0 != F--; )
                            if (!this.equalsByValue(O[(fe = J[F])], N[fe]))
                                return !1;
                        return !0;
                    }
                    return O != O && N != N;
                }
                static resolveFieldData(O, N) {
                    if (O && N) {
                        if (this.isFunction(N)) return N(O);
                        if (-1 == N.indexOf('.')) return O[N];
                        {
                            let U = N.split('.'),
                                w = O;
                            for (let F = 0, K = U.length; F < K; ++F) {
                                if (null == w) return null;
                                w = w[U[F]];
                            }
                            return w;
                        }
                    }
                    return null;
                }
                static isFunction(O) {
                    return !!(O && O.constructor && O.call && O.apply);
                }
                static reorderArray(O, N, U) {
                    O &&
                        N !== U &&
                        (U >= O.length && ((U %= O.length), (N %= O.length)),
                        O.splice(U, 0, O.splice(N, 1)[0]));
                }
                static insertIntoOrderedArray(O, N, U, w) {
                    if (U.length > 0) {
                        let F = !1;
                        for (let K = 0; K < U.length; K++)
                            if (this.findIndexInList(U[K], w) > N) {
                                U.splice(K, 0, O), (F = !0);
                                break;
                            }
                        F || U.push(O);
                    } else U.push(O);
                }
                static findIndexInList(O, N) {
                    let U = -1;
                    if (N)
                        for (let w = 0; w < N.length; w++)
                            if (N[w] == O) {
                                U = w;
                                break;
                            }
                    return U;
                }
                static contains(O, N) {
                    if (null != O && N && N.length)
                        for (let U of N) if (this.equals(O, U)) return !0;
                    return !1;
                }
                static removeAccents(O) {
                    return (
                        O &&
                            O.search(/[\xC0-\xFF]/g) > -1 &&
                            (O = O.replace(/[\xC0-\xC5]/g, 'A')
                                .replace(/[\xC6]/g, 'AE')
                                .replace(/[\xC7]/g, 'C')
                                .replace(/[\xC8-\xCB]/g, 'E')
                                .replace(/[\xCC-\xCF]/g, 'I')
                                .replace(/[\xD0]/g, 'D')
                                .replace(/[\xD1]/g, 'N')
                                .replace(/[\xD2-\xD6\xD8]/g, 'O')
                                .replace(/[\xD9-\xDC]/g, 'U')
                                .replace(/[\xDD]/g, 'Y')
                                .replace(/[\xDE]/g, 'P')
                                .replace(/[\xE0-\xE5]/g, 'a')
                                .replace(/[\xE6]/g, 'ae')
                                .replace(/[\xE7]/g, 'c')
                                .replace(/[\xE8-\xEB]/g, 'e')
                                .replace(/[\xEC-\xEF]/g, 'i')
                                .replace(/[\xF1]/g, 'n')
                                .replace(/[\xF2-\xF6\xF8]/g, 'o')
                                .replace(/[\xF9-\xFC]/g, 'u')
                                .replace(/[\xFE]/g, 'p')
                                .replace(/[\xFD\xFF]/g, 'y')),
                        O
                    );
                }
            }
            var m = 0;
            function L() {
                return 'pr_id_' + ++m;
            }
            var T = (function k() {
                let S = [];
                const w = (F) => (F && parseInt(F.style.zIndex, 10)) || 0;
                return {
                    get: w,
                    set: (F, K, fe) => {
                        K &&
                            (K.style.zIndex = String(
                                ((F, K) => {
                                    let fe =
                                            S.length > 0
                                                ? S[S.length - 1]
                                                : { key: F, value: K },
                                        _e =
                                            fe.value +
                                            (fe.key === F ? 0 : K) +
                                            1;
                                    return S.push({ key: F, value: _e }), _e;
                                })(F, fe)
                            ));
                    },
                    clear: (F) => {
                        F &&
                            (((F) => {
                                S = S.filter((K) => K.value !== F);
                            })(w(F)),
                            (F.style.zIndex = ''));
                    },
                    getCurrent: () =>
                        S.length > 0 ? S[S.length - 1].value : 0,
                };
            })();
        },
        5861: (de, Y, f) => {
            function s(L, k, T, S, O, N, U) {
                try {
                    var w = L[N](U),
                        F = w.value;
                } catch (K) {
                    return void T(K);
                }
                w.done ? k(F) : Promise.resolve(F).then(S, O);
            }
            function m(L) {
                return function () {
                    var k = this,
                        T = arguments;
                    return new Promise(function (S, O) {
                        var N = L.apply(k, T);
                        function U(F) {
                            s(N, S, O, U, w, 'next', F);
                        }
                        function w(F) {
                            s(N, S, O, U, w, 'throw', F);
                        }
                        U(void 0);
                    });
                };
            }
            f.d(Y, { Z: () => m });
        },
    },
    (de) => {
        de((de.s = 7499));
    },
]);
