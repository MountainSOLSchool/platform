(self.webpackChunkportal = self.webpackChunkportal || []).push([
    [179],
    {
        440: (pe, z, _) => {
            'use strict';
            _.d(z, { nm: () => xe });
            var f = _(6351);
            _(5e3), _(5867);
            var F = _(5861),
                oe = _(9681),
                q = _(4859),
                Pe = _(2090),
                Be = _(1877);
            const qe = new Map(),
                re = { activated: !1, tokenObservers: [] },
                Se = { initialized: !1, enabled: !1 };
            function Ee(_e) {
                return qe.get(_e) || re;
            }
            function Oe(_e, ge) {
                qe.set(_e, ge);
            }
            function Ne() {
                return Se;
            }
            class un {
                constructor(ge, Ie, We, Xe, ft) {
                    if (
                        ((this.operation = ge),
                        (this.retryPolicy = Ie),
                        (this.getWaitDuration = We),
                        (this.lowerBound = Xe),
                        (this.upperBound = ft),
                        (this.pending = null),
                        (this.nextErrorWaitInterval = Xe),
                        Xe > ft)
                    )
                        throw new Error(
                            'Proactive refresh lower bound greater than upper bound!'
                        );
                }
                start() {
                    (this.nextErrorWaitInterval = this.lowerBound),
                        this.process(!0).catch(() => {});
                }
                stop() {
                    this.pending &&
                        (this.pending.reject('cancelled'),
                        (this.pending = null));
                }
                isRunning() {
                    return !!this.pending;
                }
                process(ge) {
                    var Ie = this;
                    return (0, F.Z)(function* () {
                        Ie.stop();
                        try {
                            (Ie.pending = new Pe.BH()),
                                yield (function Ft(_e) {
                                    return new Promise((ge) => {
                                        setTimeout(ge, _e);
                                    });
                                })(Ie.getNextRun(ge)),
                                Ie.pending.resolve(),
                                yield Ie.pending.promise,
                                (Ie.pending = new Pe.BH()),
                                yield Ie.operation(),
                                Ie.pending.resolve(),
                                yield Ie.pending.promise,
                                Ie.process(!0).catch(() => {});
                        } catch (We) {
                            Ie.retryPolicy(We)
                                ? Ie.process(!1).catch(() => {})
                                : Ie.stop();
                        }
                    })();
                }
                getNextRun(ge) {
                    if (ge)
                        return (
                            (this.nextErrorWaitInterval = this.lowerBound),
                            this.getWaitDuration()
                        );
                    {
                        const Ie = this.nextErrorWaitInterval;
                        return (
                            (this.nextErrorWaitInterval *= 2),
                            this.nextErrorWaitInterval > this.upperBound &&
                                (this.nextErrorWaitInterval = this.upperBound),
                            Ie
                        );
                    }
                }
            }
            const ct = new Pe.LL('appCheck', 'AppCheck', {
                'already-initialized':
                    'You have already called initializeAppCheck() for FirebaseApp {$appName} with different options. To avoid this error, call initializeAppCheck() with the same options as when it was originally called. This will return the already initialized instance.',
                'use-before-activation':
                    'App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. Call initializeAppCheck() before instantiating other Firebase services.',
                'fetch-network-error':
                    'Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                'fetch-parse-error':
                    'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                'fetch-status-error':
                    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                'storage-open':
                    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                'storage-get':
                    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                'storage-set':
                    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                'recaptcha-error': 'ReCAPTCHA error.',
                throttled:
                    'Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}',
            });
            function mn(_e) {
                if (!Ee(_e).activated)
                    throw ct.create('use-before-activation', {
                        appName: _e.name,
                    });
            }
            function Gn(_e, ge) {
                return Wn.apply(this, arguments);
            }
            function Wn() {
                return (Wn = (0, F.Z)(function* ({ url: _e, body: ge }, Ie) {
                    const We = { 'Content-Type': 'application/json' },
                        Xe = Ie.getImmediate({ optional: !0 });
                    Xe &&
                        (We['X-Firebase-Client'] = Xe.getPlatformInfoString());
                    const ft = {
                        method: 'POST',
                        body: JSON.stringify(ge),
                        headers: We,
                    };
                    let wn, ar;
                    try {
                        wn = yield fetch(_e, ft);
                    } catch (wi) {
                        throw ct.create('fetch-network-error', {
                            originalErrorMessage: wi.message,
                        });
                    }
                    if (200 !== wn.status)
                        throw ct.create('fetch-status-error', {
                            httpStatus: wn.status,
                        });
                    try {
                        ar = yield wn.json();
                    } catch (wi) {
                        throw ct.create('fetch-parse-error', {
                            originalErrorMessage: wi.message,
                        });
                    }
                    const sn = ar.ttl.match(/^([\d.]+)(s)$/);
                    if (!sn || !sn[2] || isNaN(Number(sn[1])))
                        throw ct.create('fetch-parse-error', {
                            originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration format: ${ar.ttl}`,
                        });
                    const Gr = 1e3 * Number(sn[1]),
                        xr = Date.now();
                    return {
                        token: ar.attestationToken,
                        expireTimeMillis: xr + Gr,
                        issuedAtTimeMillis: xr,
                    };
                })).apply(this, arguments);
            }
            function Ut(_e, ge) {
                const { projectId: Ie, appId: We, apiKey: Xe } = _e.options;
                return {
                    url: `https://content-firebaseappcheck.googleapis.com/v1beta/projects/${Ie}/apps/${We}:exchangeDebugToken?key=${Xe}`,
                    body: { debug_token: ge },
                };
            }
            const xn = 'firebase-app-check-store';
            let rn = null;
            function yr() {
                return (
                    rn ||
                    ((rn = new Promise((_e, ge) => {
                        try {
                            const Ie = indexedDB.open(
                                'firebase-app-check-database',
                                1
                            );
                            (Ie.onsuccess = (We) => {
                                _e(We.target.result);
                            }),
                                (Ie.onerror = (We) => {
                                    var Xe;
                                    ge(
                                        ct.create('storage-open', {
                                            originalErrorMessage:
                                                null ===
                                                    (Xe = We.target.error) ||
                                                void 0 === Xe
                                                    ? void 0
                                                    : Xe.message,
                                        })
                                    );
                                }),
                                (Ie.onupgradeneeded = (We) => {
                                    0 === We.oldVersion &&
                                        We.target.result.createObjectStore(xn, {
                                            keyPath: 'compositeKey',
                                        });
                                });
                        } catch (Ie) {
                            ge(
                                ct.create('storage-open', {
                                    originalErrorMessage: Ie.message,
                                })
                            );
                        }
                    })),
                    rn)
                );
            }
            function Pt() {
                return (Pt = (0, F.Z)(function* (_e, ge) {
                    const We = (yield yr()).transaction(xn, 'readwrite'),
                        ft = We.objectStore(xn).put({
                            compositeKey: _e,
                            value: ge,
                        });
                    return new Promise((wn, ar) => {
                        (ft.onsuccess = (sn) => {
                            wn();
                        }),
                            (We.onerror = (sn) => {
                                var Gr;
                                ar(
                                    ct.create('storage-set', {
                                        originalErrorMessage:
                                            null === (Gr = sn.target.error) ||
                                            void 0 === Gr
                                                ? void 0
                                                : Gr.message,
                                    })
                                );
                            });
                    });
                })).apply(this, arguments);
            }
            const Zn = new Be.Yd('@firebase/app-check');
            function Hn(_e, ge) {
                return (0, Pe.hl)()
                    ? (function _t(_e, ge) {
                          return (function fn(_e, ge) {
                              return Pt.apply(this, arguments);
                          })(
                              (function Ar(_e) {
                                  return `${_e.options.appId}-${_e.name}`;
                              })(_e),
                              ge
                          );
                      })(_e, ge).catch((Ie) => {
                          Zn.warn(
                              `Failed to write token to IndexedDB. Error: ${Ie}`
                          );
                      })
                    : Promise.resolve();
            }
            function de() {
                return Ne().enabled;
            }
            function le() {
                return $e.apply(this, arguments);
            }
            function $e() {
                return ($e = (0, F.Z)(function* () {
                    const _e = Ne();
                    if (_e.enabled && _e.token) return _e.token.promise;
                    throw Error(
                        "\n            Can't get debug token in production mode.\n        "
                    );
                })).apply(this, arguments);
            }
            const lt = { error: 'UNKNOWN_ERROR' };
            function ye(_e) {
                return Pe.US.encodeString(JSON.stringify(_e), !1);
            }
            function Le(_e) {
                return Ue.apply(this, arguments);
            }
            function Ue() {
                return (Ue = (0, F.Z)(function* (_e, ge = !1) {
                    const Ie = _e.app;
                    mn(Ie);
                    const We = Ee(Ie);
                    let ft,
                        Xe = We.token;
                    if (!Xe) {
                        const sn = yield We.cachedTokenPromise;
                        sn && vn(sn) && (Xe = sn);
                    }
                    if (!ge && Xe && vn(Xe)) return { token: Xe.token };
                    let ar,
                        wn = !1;
                    if (de()) {
                        We.exchangeTokenPromise ||
                            ((We.exchangeTokenPromise = Gn(
                                Ut(Ie, yield le()),
                                _e.platformLoggerProvider
                            ).then(
                                (Gr) => ((We.exchangeTokenPromise = void 0), Gr)
                            )),
                            (wn = !0));
                        const sn = yield We.exchangeTokenPromise;
                        return (
                            yield Hn(Ie, sn),
                            Oe(
                                Ie,
                                Object.assign(Object.assign({}, We), {
                                    token: sn,
                                })
                            ),
                            { token: sn.token }
                        );
                    }
                    try {
                        We.exchangeTokenPromise ||
                            ((We.exchangeTokenPromise = We.provider
                                .getToken()
                                .then(
                                    (sn) => (
                                        (We.exchangeTokenPromise = void 0), sn
                                    )
                                )),
                            (wn = !0)),
                            (Xe = yield We.exchangeTokenPromise);
                    } catch (sn) {
                        'appCheck/throttled' === sn.code
                            ? Zn.warn(sn.message)
                            : Zn.error(sn),
                            (ft = sn);
                    }
                    return (
                        Xe
                            ? ((ar = { token: Xe.token }),
                              Oe(
                                  Ie,
                                  Object.assign(Object.assign({}, We), {
                                      token: Xe,
                                  })
                              ),
                              yield Hn(Ie, Xe))
                            : (ar = bt(ft)),
                        wn && qt(Ie, ar),
                        ar
                    );
                })).apply(this, arguments);
            }
            function Dt(_e, ge) {
                const Ie = Ee(_e),
                    We = Ie.tokenObservers.filter((Xe) => Xe.next !== ge);
                0 === We.length &&
                    Ie.tokenRefresher &&
                    Ie.tokenRefresher.isRunning() &&
                    Ie.tokenRefresher.stop(),
                    Oe(
                        _e,
                        Object.assign(Object.assign({}, Ie), {
                            tokenObservers: We,
                        })
                    );
            }
            function rt(_e) {
                const { app: ge } = _e,
                    Ie = Ee(ge);
                let We = Ie.tokenRefresher;
                We ||
                    ((We = (function Kt(_e) {
                        const { app: ge } = _e;
                        return new un(
                            (0, F.Z)(function* () {
                                let We;
                                if (
                                    ((We = Ee(ge).token
                                        ? yield Le(_e, !0)
                                        : yield Le(_e)),
                                    We.error)
                                )
                                    throw We.error;
                            }),
                            () => !0,
                            () => {
                                const Ie = Ee(ge);
                                if (Ie.token) {
                                    let We =
                                        Ie.token.issuedAtTimeMillis +
                                        0.5 *
                                            (Ie.token.expireTimeMillis -
                                                Ie.token.issuedAtTimeMillis) +
                                        3e5;
                                    return (
                                        (We = Math.min(
                                            We,
                                            Ie.token.expireTimeMillis - 3e5
                                        )),
                                        Math.max(0, We - Date.now())
                                    );
                                }
                                return 0;
                            },
                            3e4,
                            96e4
                        );
                    })(_e)),
                    Oe(
                        ge,
                        Object.assign(Object.assign({}, Ie), {
                            tokenRefresher: We,
                        })
                    )),
                    !We.isRunning() &&
                        Ie.isTokenAutoRefreshEnabled &&
                        We.start();
            }
            function qt(_e, ge) {
                const Ie = Ee(_e).tokenObservers;
                for (const We of Ie)
                    try {
                        'EXTERNAL' === We.type && null != ge.error
                            ? We.error(ge.error)
                            : We.next(ge);
                    } catch (Xe) {}
            }
            function vn(_e) {
                return _e.expireTimeMillis - Date.now() > 0;
            }
            function bt(_e) {
                return { token: ye(lt), error: _e };
            }
            class zn {
                constructor(ge, Ie) {
                    (this.app = ge), (this.platformLoggerProvider = Ie);
                }
                _delete() {
                    const { tokenObservers: ge } = Ee(this.app);
                    for (const Ie of ge) Dt(this.app, Ie.next);
                    return Promise.resolve();
                }
            }
            const an = 'app-check-internal';
            !(function Mn() {
                (0, oe._registerComponent)(
                    new q.wA(
                        'app-check',
                        (_e) =>
                            (function or(_e, ge) {
                                return new zn(_e, ge);
                            })(
                                _e.getProvider('app').getImmediate(),
                                _e.getProvider('platform-logger')
                            ),
                        'PUBLIC'
                    )
                        .setInstantiationMode('EXPLICIT')
                        .setInstanceCreatedCallback((_e, ge, Ie) => {
                            _e.getProvider(an).initialize();
                        })
                ),
                    (0, oe._registerComponent)(
                        new q.wA(
                            an,
                            (_e) =>
                                (function $t(_e) {
                                    return {
                                        getToken: (ge) => Le(_e, ge),
                                        addTokenListener: (ge) =>
                                            (function Qe(_e, ge, Ie, We) {
                                                const { app: Xe } = _e,
                                                    ft = Ee(Xe),
                                                    wn = {
                                                        next: Ie,
                                                        error: We,
                                                        type: ge,
                                                    };
                                                if (
                                                    (Oe(
                                                        Xe,
                                                        Object.assign(
                                                            Object.assign(
                                                                {},
                                                                ft
                                                            ),
                                                            {
                                                                tokenObservers:
                                                                    [
                                                                        ...ft.tokenObservers,
                                                                        wn,
                                                                    ],
                                                            }
                                                        )
                                                    ),
                                                    ft.token && vn(ft.token))
                                                ) {
                                                    const ar = ft.token;
                                                    Promise.resolve()
                                                        .then(() => {
                                                            Ie({
                                                                token: ar.token,
                                                            }),
                                                                rt(_e);
                                                        })
                                                        .catch(() => {});
                                                }
                                                ft.cachedTokenPromise.then(() =>
                                                    rt(_e)
                                                );
                                            })(_e, 'INTERNAL', ge),
                                        removeTokenListener: (ge) =>
                                            Dt(_e.app, ge),
                                    };
                                })(_e.getProvider('app-check').getImmediate()),
                            'PUBLIC'
                        ).setInstantiationMode('EXPLICIT')
                    ),
                    (0, oe.registerVersion)('@firebase/app-check', '0.5.3');
            })();
            class xe {
                constructor() {
                    return (0, f.vb)('app-check');
                }
            }
            'undefined' != typeof window && window;
        },
        3385: (pe, z, _) => {
            'use strict';
            _.d(z, { zQ: () => Ee, ww: () => Oe });
            var f = _(5e3),
                P = _(7579),
                j = _(9646),
                w = _(8306),
                H = _(8996),
                te = _(6451),
                X = _(3900),
                ne = _(576);
            function K(Ne, De) {
                return (0, ne.m)(De)
                    ? (0, X.w)(() => Ne, De)
                    : (0, X.w)(() => Ne);
            }
            var $ = _(5363),
                U = _(4004),
                ie = _(4782),
                Ae = _(590),
                be = _(9468),
                Re = _(9300),
                je = _(6351),
                ae = _(2011),
                Q = _(9808),
                me = _(440),
                I = _(127);
            const oe = new f.OlP('angularfire2.auth.use-emulator'),
                q = new f.OlP('angularfire2.auth.settings'),
                Pe = new f.OlP('angularfire2.auth.tenant-id'),
                Be = new f.OlP('angularfire2.auth.langugage-code'),
                qe = new f.OlP('angularfire2.auth.use-device-language'),
                re = new f.OlP('angularfire.auth.persistence');
            let Ee = (() => {
                    class Ne {
                        constructor(
                            ut,
                            Bt,
                            gn,
                            ot,
                            st,
                            un,
                            Ft,
                            Ht,
                            ct,
                            Rn,
                            mn,
                            Zt
                        ) {
                            const jn = new P.x(),
                                nn = (0, j.of)(void 0).pipe(
                                    (0, $.Q)(st.outsideAngular),
                                    (0, X.w)(() =>
                                        ot.runOutsideAngular(() =>
                                            Promise.all([
                                                _.e(592),
                                                _.e(999),
                                            ]).then(_.bind(_, 8999))
                                        )
                                    ),
                                    (0, U.U)(() => (0, ae.on)(ut, ot, Bt)),
                                    (0, U.U)((Gn) =>
                                        ((Ne, De, ut, Bt, gn, ot, st, un) =>
                                            (0, ae.cc)(
                                                `${Ne.name}.auth`,
                                                'AngularFireAuth',
                                                Ne.name,
                                                () => {
                                                    const Ft =
                                                        De.runOutsideAngular(
                                                            () => Ne.auth()
                                                        );
                                                    if (
                                                        (ut &&
                                                            Ft.useEmulator(
                                                                ...ut
                                                            ),
                                                        Bt &&
                                                            (Ft.tenantId = Bt),
                                                        (Ft.languageCode = gn),
                                                        ot &&
                                                            Ft.useDeviceLanguage(),
                                                        st)
                                                    )
                                                        for (const [
                                                            Ht,
                                                            ct,
                                                        ] of Object.entries(st))
                                                            Ft.settings[Ht] =
                                                                ct;
                                                    return (
                                                        un &&
                                                            Ft.setPersistence(
                                                                un
                                                            ),
                                                        Ft
                                                    );
                                                },
                                                [ut, Bt, gn, ot, st, un]
                                            ))(Gn, ot, un, Ht, ct, Rn, Ft, mn)
                                    ),
                                    (0, ie.d)({ bufferSize: 1, refCount: !1 })
                                );
                            if ((0, Q.PM)(gn))
                                this.authState =
                                    this.user =
                                    this.idToken =
                                    this.idTokenResult =
                                    this.credential =
                                        (0, j.of)(null);
                            else {
                                nn.pipe((0, Ae.P)()).subscribe();
                                const Wn = nn.pipe(
                                        (0, X.w)((Ut) =>
                                            Ut.getRedirectResult().then(
                                                (Fn) => Fn,
                                                () => null
                                            )
                                        ),
                                        je.iC,
                                        (0, ie.d)({
                                            bufferSize: 1,
                                            refCount: !1,
                                        })
                                    ),
                                    Qn = nn.pipe(
                                        (0, X.w)(
                                            (Ut) =>
                                                new w.y((Fn) => ({
                                                    unsubscribe:
                                                        ot.runOutsideAngular(
                                                            () =>
                                                                Ut.onAuthStateChanged(
                                                                    (yt) =>
                                                                        Fn.next(
                                                                            yt
                                                                        ),
                                                                    (yt) =>
                                                                        Fn.error(
                                                                            yt
                                                                        ),
                                                                    () =>
                                                                        Fn.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    ),
                                    cr = nn.pipe(
                                        (0, X.w)(
                                            (Ut) =>
                                                new w.y((Fn) => ({
                                                    unsubscribe:
                                                        ot.runOutsideAngular(
                                                            () =>
                                                                Ut.onIdTokenChanged(
                                                                    (yt) =>
                                                                        Fn.next(
                                                                            yt
                                                                        ),
                                                                    (yt) =>
                                                                        Fn.error(
                                                                            yt
                                                                        ),
                                                                    () =>
                                                                        Fn.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    );
                                (this.authState = Wn.pipe(
                                    K(Qn),
                                    (0, be.R)(st.outsideAngular),
                                    (0, $.Q)(st.insideAngular)
                                )),
                                    (this.user = Wn.pipe(
                                        K(cr),
                                        (0, be.R)(st.outsideAngular),
                                        (0, $.Q)(st.insideAngular)
                                    )),
                                    (this.idToken = this.user.pipe(
                                        (0, X.w)((Ut) =>
                                            Ut
                                                ? (0, H.D)(Ut.getIdToken())
                                                : (0, j.of)(null)
                                        )
                                    )),
                                    (this.idTokenResult = this.user.pipe(
                                        (0, X.w)((Ut) =>
                                            Ut
                                                ? (0, H.D)(
                                                      Ut.getIdTokenResult()
                                                  )
                                                : (0, j.of)(null)
                                        )
                                    )),
                                    (this.credential = (0, te.T)(
                                        Wn,
                                        jn,
                                        this.authState.pipe(
                                            (0, Re.h)((Ut) => !Ut)
                                        )
                                    ).pipe(
                                        (0, U.U)((Ut) =>
                                            (null == Ut ? void 0 : Ut.user)
                                                ? Ut
                                                : null
                                        ),
                                        (0, be.R)(st.outsideAngular),
                                        (0, $.Q)(st.insideAngular)
                                    ));
                            }
                            return (0, ae.pX)(this, nn, ot, {
                                spy: {
                                    apply: (Gn, Wn, Qn) => {
                                        (Gn.startsWith('signIn') ||
                                            Gn.startsWith('createUser')) &&
                                            Qn.then((cr) => jn.next(cr));
                                    },
                                },
                            });
                        }
                    }
                    return (
                        (Ne.ɵfac = function (ut) {
                            return new (ut || Ne)(
                                f.LFG(ae.Dh),
                                f.LFG(ae.xv, 8),
                                f.LFG(f.Lbi),
                                f.LFG(f.R0b),
                                f.LFG(je.HU),
                                f.LFG(oe, 8),
                                f.LFG(q, 8),
                                f.LFG(Pe, 8),
                                f.LFG(Be, 8),
                                f.LFG(qe, 8),
                                f.LFG(re, 8),
                                f.LFG(me.nm, 8)
                            );
                        }),
                        (Ne.ɵprov = f.Yz7({
                            token: Ne,
                            factory: Ne.ɵfac,
                            providedIn: 'any',
                        })),
                        Ne
                    );
                })(),
                Oe = (() => {
                    class Ne {
                        constructor() {
                            I.Z.registerVersion(
                                'angularfire',
                                je.q4.full,
                                'auth-compat'
                            );
                        }
                    }
                    return (
                        (Ne.ɵfac = function (ut) {
                            return new (ut || Ne)();
                        }),
                        (Ne.ɵmod = f.oAB({ type: Ne })),
                        (Ne.ɵinj = f.cJS({ providers: [Ee] })),
                        Ne
                    );
                })();
        },
        2228: (pe, z, _) => {
            'use strict';
            _.d(z, { l4: () => je, Qv: () => ae, jQ: () => Ae, Wq: () => Re });
            var f = _(5e3),
                P = _(9646),
                j = _(8996),
                w = _(5363),
                H = _(3900),
                te = _(4004),
                X = _(4782),
                ne = _(6351),
                K = _(2011),
                $ = _(440),
                U = _(127);
            const Ae = new f.OlP('angularfire2.functions.origin'),
                be = new f.OlP('angularfire2.functions.region'),
                Re = new f.OlP('angularfire2.functions.use-emulator');
            let je = (() => {
                    class Q {
                        constructor(I, F, oe, q, Pe, Be, qe, re) {
                            const Se = qe,
                                Ee = (0, P.of)(void 0).pipe(
                                    (0, w.Q)(q.outsideAngular),
                                    (0, H.w)(() =>
                                        _.e(568).then(_.bind(_, 7568))
                                    ),
                                    (0, te.U)(() => (0, K.on)(I, oe, F)),
                                    (0, te.U)((Oe) =>
                                        (0, K.cc)(
                                            `${Oe.name}.functions.${Pe || Be}`,
                                            'AngularFireFunctions',
                                            Oe.name,
                                            () => {
                                                let Ne;
                                                if (Pe && Be)
                                                    throw new Error(
                                                        "REGION and ORIGIN can't be used at the same time."
                                                    );
                                                return (
                                                    (Ne = Oe.functions(
                                                        Pe || Be || void 0
                                                    )),
                                                    Se && Ne.useEmulator(...Se),
                                                    Ne
                                                );
                                            },
                                            [Pe, Be, Se]
                                        )
                                    ),
                                    (0, X.d)({ bufferSize: 1, refCount: !1 })
                                );
                            return (
                                (this.httpsCallable = (Oe, Ne) => (De) =>
                                    (0, j.D)(Ee).pipe(
                                        (0, w.Q)(q.insideAngular),
                                        (0, H.w)((ut) =>
                                            ut.httpsCallable(Oe, Ne)(De)
                                        ),
                                        (0, te.U)((ut) => ut.data)
                                    )),
                                (0, K.pX)(this, Ee, oe)
                            );
                        }
                    }
                    return (
                        (Q.ɵfac = function (I) {
                            return new (I || Q)(
                                f.LFG(K.Dh),
                                f.LFG(K.xv, 8),
                                f.LFG(f.R0b),
                                f.LFG(ne.HU),
                                f.LFG(be, 8),
                                f.LFG(Ae, 8),
                                f.LFG(Re, 8),
                                f.LFG($.nm, 8)
                            );
                        }),
                        (Q.ɵprov = f.Yz7({
                            token: Q,
                            factory: Q.ɵfac,
                            providedIn: 'any',
                        })),
                        Q
                    );
                })(),
                ae = (() => {
                    class Q {
                        constructor() {
                            U.Z.registerVersion(
                                'angularfire',
                                ne.q4.full,
                                'fn-compat'
                            );
                        }
                    }
                    return (
                        (Q.ɵfac = function (I) {
                            return new (I || Q)();
                        }),
                        (Q.ɵmod = f.oAB({ type: Q })),
                        (Q.ɵinj = f.cJS({ providers: [je] })),
                        Q
                    );
                })();
        },
        2011: (pe, z, _) => {
            'use strict';
            _.d(z, {
                hO: () => Ae,
                xv: () => K,
                Dh: () => ne,
                GT: () => te,
                cc: () => be,
                on: () => $,
                pX: () => H,
            });
            var f = _(5e3),
                P = _(127),
                j = _(6351);
            pe = _.hmd(pe);
            const w = ['ngOnDestroy'],
                H = (Q, me, I, F = {}) =>
                    new Proxy(Q, {
                        get: (oe, q) =>
                            I.runOutsideAngular(() => {
                                var Pe;
                                if (Q[q])
                                    return (
                                        (null ===
                                            (Pe = null == F ? void 0 : F.spy) ||
                                        void 0 === Pe
                                            ? void 0
                                            : Pe.get) && F.spy.get(q, Q[q]),
                                        Q[q]
                                    );
                                if (w.indexOf(q) > -1) return () => {};
                                const Be = me.toPromise().then((qe) => {
                                    const re = qe && qe[q];
                                    return 'function' == typeof re
                                        ? re.bind(qe)
                                        : re && re.then
                                        ? re.then((Se) => I.run(() => Se))
                                        : I.run(() => re);
                                });
                                return new Proxy(() => {}, {
                                    get: (qe, re) => Be[re],
                                    apply: (qe, re, Se) =>
                                        Be.then((Ee) => {
                                            var Oe;
                                            const Ne = Ee && Ee(...Se);
                                            return (
                                                (null ===
                                                    (Oe =
                                                        null == F
                                                            ? void 0
                                                            : F.spy) ||
                                                void 0 === Oe
                                                    ? void 0
                                                    : Oe.apply) &&
                                                    F.spy.apply(q, Se, Ne),
                                                Ne
                                            );
                                        }),
                                });
                            }),
                    }),
                te = (Q, me) => {
                    me.forEach((I) => {
                        Object.getOwnPropertyNames(I.prototype || I).forEach(
                            (F) => {
                                Object.defineProperty(
                                    Q.prototype,
                                    F,
                                    Object.getOwnPropertyDescriptor(
                                        I.prototype || I,
                                        F
                                    )
                                );
                            }
                        );
                    });
                };
            class X {
                constructor(me) {
                    return me;
                }
            }
            const ne = new f.OlP('angularfire2.app.options'),
                K = new f.OlP('angularfire2.app.name');
            function $(Q, me, I) {
                const oe = ('object' == typeof I && I) || {};
                oe.name = oe.name || ('string' == typeof I && I) || '[DEFAULT]';
                const Pe =
                    P.Z.apps.filter((Be) => Be && Be.name === oe.name)[0] ||
                    me.runOutsideAngular(() => P.Z.initializeApp(Q, oe));
                try {
                    JSON.stringify(Q) !== JSON.stringify(Pe.options) &&
                        U(
                            'error',
                            `${
                                Pe.name
                            } Firebase App already initialized with different options${
                                pe.hot
                                    ? ', you may need to reload as Firebase is not HMR aware.'
                                    : '.'
                            }`
                        );
                } catch (Be) {}
                return new X(Pe);
            }
            const U = (Q, ...me) => {
                    (0, f.X6Q)() &&
                        'undefined' != typeof console &&
                        console[Q](...me);
                },
                ie = {
                    provide: X,
                    useFactory: $,
                    deps: [ne, f.R0b, [new f.FiY(), K]],
                };
            let Ae = (() => {
                class Q {
                    constructor(I) {
                        P.Z.registerVersion('angularfire', j.q4.full, 'core'),
                            P.Z.registerVersion(
                                'angularfire',
                                j.q4.full,
                                'app-compat'
                            ),
                            P.Z.registerVersion(
                                'angular',
                                f.q4F.full,
                                I.toString()
                            );
                    }
                    static initializeApp(I, F) {
                        return {
                            ngModule: Q,
                            providers: [
                                { provide: ne, useValue: I },
                                { provide: K, useValue: F },
                            ],
                        };
                    }
                }
                return (
                    (Q.ɵfac = function (I) {
                        return new (I || Q)(f.LFG(f.Lbi));
                    }),
                    (Q.ɵmod = f.oAB({ type: Q })),
                    (Q.ɵinj = f.cJS({ providers: [ie] })),
                    Q
                );
            })();
            function be(Q, me, I, F, oe) {
                const [, q, Pe] =
                    globalThis.ɵAngularfireInstanceCache.find(
                        (Be) => Be[0] === Q
                    ) || [];
                if (q)
                    return (
                        (function Re(Q, me) {
                            try {
                                return Q.toString() === me.toString();
                            } catch (I) {
                                return Q === me;
                            }
                        })(oe, Pe) ||
                            (ae(
                                'error',
                                `${me} was already initialized on the ${I} Firebase App with different settings.${
                                    je
                                        ? ' You may need to reload as Firebase is not HMR aware.'
                                        : ''
                                }`
                            ),
                            ae('warn', { is: oe, was: Pe })),
                        q
                    );
                {
                    const Be = F();
                    return (
                        globalThis.ɵAngularfireInstanceCache.push([Q, Be, oe]),
                        Be
                    );
                }
            }
            const je = !!pe.hot,
                ae = (Q, ...me) => {
                    (0, f.X6Q)() &&
                        'undefined' != typeof console &&
                        console[Q](...me);
                };
            globalThis.ɵAngularfireInstanceCache ||
                (globalThis.ɵAngularfireInstanceCache = []);
        },
        6351: (pe, z, _) => {
            'use strict';
            _.d(z, {
                q4: () => vl,
                iC: () => la,
                HU: () => Ha,
                vb: () => aa,
                JM: () => El,
            });
            var f = _(5e3),
                P = _(5867),
                j = _(5861),
                w = _(9681),
                H = _(2090),
                te = _(4859),
                X = _(1877),
                ne = _(2940);
            const K = '@firebase/installations',
                $ = '0.5.5',
                ie = `w:${$}`,
                Ae = 'FIS_v2',
                me = new H.LL('installations', 'Installations', {
                    'missing-app-config-values':
                        'Missing App configuration value: "{$valueName}"',
                    'not-registered':
                        'Firebase Installation is not registered.',
                    'installation-not-found':
                        'Firebase Installation not found.',
                    'request-failed':
                        '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
                    'app-offline':
                        'Could not process request. Application offline.',
                    'delete-pending-registration':
                        "Can't delete installation while there is a pending registration request.",
                });
            function I(E) {
                return E instanceof H.ZR && E.code.includes('request-failed');
            }
            function F({ projectId: E }) {
                return `https://firebaseinstallations.googleapis.com/v1/projects/${E}/installations`;
            }
            function oe(E) {
                return {
                    token: E.token,
                    requestStatus: 2,
                    expiresIn: Ee(E.expiresIn),
                    creationTime: Date.now(),
                };
            }
            function q(E, S) {
                return Pe.apply(this, arguments);
            }
            function Pe() {
                return (Pe = (0, j.Z)(function* (E, S) {
                    const ee = (yield S.json()).error;
                    return me.create('request-failed', {
                        requestName: E,
                        serverCode: ee.code,
                        serverMessage: ee.message,
                        serverStatus: ee.status,
                    });
                })).apply(this, arguments);
            }
            function Be({ apiKey: E }) {
                return new Headers({
                    'Content-Type': 'application/json',
                    Accept: 'application/json',
                    'x-goog-api-key': E,
                });
            }
            function qe(E, { refreshToken: S }) {
                const B = Be(E);
                return (
                    B.append(
                        'Authorization',
                        (function Oe(E) {
                            return `${Ae} ${E}`;
                        })(S)
                    ),
                    B
                );
            }
            function re(E) {
                return Se.apply(this, arguments);
            }
            function Se() {
                return (Se = (0, j.Z)(function* (E) {
                    const S = yield E();
                    return S.status >= 500 && S.status < 600 ? E() : S;
                })).apply(this, arguments);
            }
            function Ee(E) {
                return Number(E.replace('s', '000'));
            }
            function Ne(E, S) {
                return De.apply(this, arguments);
            }
            function De() {
                return (De = (0, j.Z)(function* (E, { fid: S }) {
                    const B = F(E),
                        d = {
                            method: 'POST',
                            headers: Be(E),
                            body: JSON.stringify({
                                fid: S,
                                authVersion: Ae,
                                appId: E.appId,
                                sdkVersion: ie,
                            }),
                        },
                        s = yield re(() => fetch(B, d));
                    if (s.ok) {
                        const o = yield s.json();
                        return {
                            fid: o.fid || S,
                            registrationStatus: 2,
                            refreshToken: o.refreshToken,
                            authToken: oe(o.authToken),
                        };
                    }
                    throw yield q('Create Installation', s);
                })).apply(this, arguments);
            }
            function ut(E) {
                return new Promise((S) => {
                    setTimeout(S, E);
                });
            }
            const gn = /^[cdef][\w-]{21}$/;
            function st() {
                try {
                    const E = new Uint8Array(17);
                    (self.crypto || self.msCrypto).getRandomValues(E),
                        (E[0] = 112 + (E[0] % 16));
                    const B = (function un(E) {
                        return (function Bt(E) {
                            return btoa(String.fromCharCode(...E))
                                .replace(/\+/g, '-')
                                .replace(/\//g, '_');
                        })(E).substr(0, 22);
                    })(E);
                    return gn.test(B) ? B : '';
                } catch (E) {
                    return '';
                }
            }
            function Ft(E) {
                return `${E.appName}!${E.appId}`;
            }
            const Ht = new Map();
            function ct(E, S) {
                const B = Ft(E);
                Zt(B, S),
                    (function jn(E, S) {
                        const B = (function Gn() {
                            return (
                                !nn &&
                                    'BroadcastChannel' in self &&
                                    ((nn = new BroadcastChannel(
                                        '[Firebase] FID Change'
                                    )),
                                    (nn.onmessage = (E) => {
                                        Zt(E.data.key, E.data.fid);
                                    })),
                                nn
                            );
                        })();
                        B && B.postMessage({ key: E, fid: S }),
                            (function Wn() {
                                0 === Ht.size &&
                                    nn &&
                                    (nn.close(), (nn = null));
                            })();
                    })(B, S);
            }
            function Zt(E, S) {
                const B = Ht.get(E);
                if (B) for (const ee of B) ee(S);
            }
            let nn = null;
            const Ut = 'firebase-installations-store';
            let Fn = null;
            function yt() {
                return (
                    Fn ||
                        (Fn = (0, ne.openDb)(
                            'firebase-installations-database',
                            1,
                            (E) => {
                                0 === E.oldVersion && E.createObjectStore(Ut);
                            }
                        )),
                    Fn
                );
            }
            function xn(E, S) {
                return In.apply(this, arguments);
            }
            function In() {
                return (In = (0, j.Z)(function* (E, S) {
                    const B = Ft(E),
                        Ce = (yield yt()).transaction(Ut, 'readwrite'),
                        d = Ce.objectStore(Ut),
                        s = yield d.get(B);
                    return (
                        yield d.put(S, B),
                        yield Ce.complete,
                        (!s || s.fid !== S.fid) && ct(E, S.fid),
                        S
                    );
                })).apply(this, arguments);
            }
            function rn(E) {
                return yr.apply(this, arguments);
            }
            function yr() {
                return (yr = (0, j.Z)(function* (E) {
                    const S = Ft(E),
                        ee = (yield yt()).transaction(Ut, 'readwrite');
                    yield ee.objectStore(Ut).delete(S), yield ee.complete;
                })).apply(this, arguments);
            }
            function At(E, S) {
                return _t.apply(this, arguments);
            }
            function _t() {
                return (_t = (0, j.Z)(function* (E, S) {
                    const B = Ft(E),
                        Ce = (yield yt()).transaction(Ut, 'readwrite'),
                        d = Ce.objectStore(Ut),
                        s = yield d.get(B),
                        o = S(s);
                    return (
                        void 0 === o ? yield d.delete(B) : yield d.put(o, B),
                        yield Ce.complete,
                        o && (!s || s.fid !== o.fid) && ct(E, o.fid),
                        o
                    );
                })).apply(this, arguments);
            }
            function It(E) {
                return et.apply(this, arguments);
            }
            function et() {
                return (et = (0, j.Z)(function* (E) {
                    let S;
                    const B = yield At(E, (ee) => {
                        const Ce = fn(ee),
                            d = Pt(E, Ce);
                        return (S = d.registrationPromise), d.installationEntry;
                    });
                    return '' === B.fid
                        ? { installationEntry: yield S }
                        : { installationEntry: B, registrationPromise: S };
                })).apply(this, arguments);
            }
            function fn(E) {
                return qn(E || { fid: st(), registrationStatus: 0 });
            }
            function Pt(E, S) {
                if (0 === S.registrationStatus) {
                    if (!navigator.onLine)
                        return {
                            installationEntry: S,
                            registrationPromise: Promise.reject(
                                me.create('app-offline')
                            ),
                        };
                    const B = {
                            fid: S.fid,
                            registrationStatus: 1,
                            registrationTime: Date.now(),
                        },
                        ee = (function pt(E, S) {
                            return gt.apply(this, arguments);
                        })(E, B);
                    return { installationEntry: B, registrationPromise: ee };
                }
                return 1 === S.registrationStatus
                    ? { installationEntry: S, registrationPromise: Ar(E) }
                    : { installationEntry: S };
            }
            function gt() {
                return (gt = (0, j.Z)(function* (E, S) {
                    try {
                        return xn(E, yield Ne(E, S));
                    } catch (B) {
                        throw (
                            (I(B) && 409 === B.customData.serverCode
                                ? yield rn(E)
                                : yield xn(E, {
                                      fid: S.fid,
                                      registrationStatus: 0,
                                  }),
                            B)
                        );
                    }
                })).apply(this, arguments);
            }
            function Ar(E) {
                return Zn.apply(this, arguments);
            }
            function Zn() {
                return (Zn = (0, j.Z)(function* (E) {
                    let S = yield jt(E);
                    for (; 1 === S.registrationStatus; )
                        yield ut(100), (S = yield jt(E));
                    if (0 === S.registrationStatus) {
                        const {
                            installationEntry: B,
                            registrationPromise: ee,
                        } = yield It(E);
                        return ee || B;
                    }
                    return S;
                })).apply(this, arguments);
            }
            function jt(E) {
                return At(E, (S) => {
                    if (!S) throw me.create('installation-not-found');
                    return qn(S);
                });
            }
            function qn(E) {
                return (function Hn(E) {
                    return (
                        1 === E.registrationStatus &&
                        E.registrationTime + 1e4 < Date.now()
                    );
                })(E)
                    ? { fid: E.fid, registrationStatus: 0 }
                    : E;
            }
            function wr(E, S) {
                return se.apply(this, arguments);
            }
            function se() {
                return (se = (0, j.Z)(function* (
                    { appConfig: E, platformLoggerProvider: S },
                    B
                ) {
                    const ee = de(E, B),
                        Ce = qe(E, B),
                        d = S.getImmediate({ optional: !0 });
                    d &&
                        Ce.append(
                            'x-firebase-client',
                            d.getPlatformInfoString()
                        );
                    const o = {
                            method: 'POST',
                            headers: Ce,
                            body: JSON.stringify({
                                installation: { sdkVersion: ie },
                            }),
                        },
                        u = yield re(() => fetch(ee, o));
                    if (u.ok) return oe(yield u.json());
                    throw yield q('Generate Auth Token', u);
                })).apply(this, arguments);
            }
            function de(E, { fid: S }) {
                return `${F(E)}/${S}/authTokens:generate`;
            }
            function le(E) {
                return $e.apply(this, arguments);
            }
            function $e() {
                return ($e = (0, j.Z)(function* (E, S = !1) {
                    let B;
                    const ee = yield At(E.appConfig, (d) => {
                        if (!Qe(d)) throw me.create('not-registered');
                        const s = d.authToken;
                        if (!S && Dt(s)) return d;
                        if (1 === s.requestStatus) return (B = Te(E, S)), d;
                        {
                            if (!navigator.onLine)
                                throw me.create('app-offline');
                            const o = Kt(d);
                            return (B = Le(E, o)), o;
                        }
                    });
                    return B ? yield B : ee.authToken;
                })).apply(this, arguments);
            }
            function Te(E, S) {
                return lt.apply(this, arguments);
            }
            function lt() {
                return (lt = (0, j.Z)(function* (E, S) {
                    let B = yield ye(E.appConfig);
                    for (; 1 === B.authToken.requestStatus; )
                        yield ut(100), (B = yield ye(E.appConfig));
                    const ee = B.authToken;
                    return 0 === ee.requestStatus ? le(E, S) : ee;
                })).apply(this, arguments);
            }
            function ye(E) {
                return At(E, (S) => {
                    if (!Qe(S)) throw me.create('not-registered');
                    return (function qt(E) {
                        return (
                            1 === E.requestStatus &&
                            E.requestTime + 1e4 < Date.now()
                        );
                    })(S.authToken)
                        ? Object.assign(Object.assign({}, S), {
                              authToken: { requestStatus: 0 },
                          })
                        : S;
                });
            }
            function Le(E, S) {
                return Ue.apply(this, arguments);
            }
            function Ue() {
                return (Ue = (0, j.Z)(function* (E, S) {
                    try {
                        const B = yield wr(E, S),
                            ee = Object.assign(Object.assign({}, S), {
                                authToken: B,
                            });
                        return yield xn(E.appConfig, ee), B;
                    } catch (B) {
                        if (
                            !I(B) ||
                            (401 !== B.customData.serverCode &&
                                404 !== B.customData.serverCode)
                        ) {
                            const ee = Object.assign(Object.assign({}, S), {
                                authToken: { requestStatus: 0 },
                            });
                            yield xn(E.appConfig, ee);
                        } else yield rn(E.appConfig);
                        throw B;
                    }
                })).apply(this, arguments);
            }
            function Qe(E) {
                return void 0 !== E && 2 === E.registrationStatus;
            }
            function Dt(E) {
                return (
                    2 === E.requestStatus &&
                    !(function rt(E) {
                        const S = Date.now();
                        return (
                            S < E.creationTime ||
                            E.creationTime + E.expiresIn < S + 36e5
                        );
                    })(E)
                );
            }
            function Kt(E) {
                const S = { requestStatus: 1, requestTime: Date.now() };
                return Object.assign(Object.assign({}, E), { authToken: S });
            }
            function bt() {
                return (bt = (0, j.Z)(function* (E) {
                    const S = E,
                        { installationEntry: B, registrationPromise: ee } =
                            yield It(S.appConfig);
                    return (
                        ee
                            ? ee.catch(console.error)
                            : le(S).catch(console.error),
                        B.fid
                    );
                })).apply(this, arguments);
            }
            function or() {
                return (or = (0, j.Z)(function* (E, S = !1) {
                    const B = E;
                    return yield $t(B.appConfig), (yield le(B, S)).token;
                })).apply(this, arguments);
            }
            function $t(E) {
                return tn.apply(this, arguments);
            }
            function tn() {
                return (tn = (0, j.Z)(function* (E) {
                    const { registrationPromise: S } = yield It(E);
                    S && (yield S);
                })).apply(this, arguments);
            }
            function Rr(E) {
                return me.create('missing-app-config-values', { valueName: E });
            }
            const Xn = 'installations',
                Yt = (E) => {
                    const S = E.getProvider('app').getImmediate(),
                        B = (function nr(E) {
                            if (!E || !E.options) throw Rr('App Configuration');
                            if (!E.name) throw Rr('App Name');
                            const S = ['projectId', 'apiKey', 'appId'];
                            for (const B of S) if (!E.options[B]) throw Rr(B);
                            return {
                                appName: E.name,
                                projectId: E.options.projectId,
                                apiKey: E.options.apiKey,
                                appId: E.options.appId,
                            };
                        })(S);
                    return {
                        app: S,
                        appConfig: B,
                        platformLoggerProvider: (0, w._getProvider)(
                            S,
                            'platform-logger'
                        ),
                        _delete: () => Promise.resolve(),
                    };
                },
                hn = (E) => {
                    const S = E.getProvider('app').getImmediate(),
                        B = (0, w._getProvider)(S, Xn).getImmediate();
                    return {
                        getId: () =>
                            (function vn(E) {
                                return bt.apply(this, arguments);
                            })(B),
                        getToken: (Ce) =>
                            (function zn(E) {
                                return or.apply(this, arguments);
                            })(B, Ce),
                    };
                };
            (function Vn() {
                (0, w._registerComponent)(new te.wA(Xn, Yt, 'PUBLIC')),
                    (0, w._registerComponent)(
                        new te.wA('installations-internal', hn, 'PRIVATE')
                    );
            })(),
                (0, w.registerVersion)(K, $),
                (0, w.registerVersion)(K, $, 'esm2017');
            const er = '@firebase/remote-config',
                En = new H.LL('remoteconfig', 'Remote Config', {
                    'registration-window':
                        'Undefined window object. This SDK only supports usage in a browser environment.',
                    'registration-project-id':
                        'Undefined project identifier. Check Firebase app initialization.',
                    'registration-api-key':
                        'Undefined API key. Check Firebase app initialization.',
                    'registration-app-id':
                        'Undefined app identifier. Check Firebase app initialization.',
                    'storage-open':
                        'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                    'storage-get':
                        'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                    'storage-set':
                        'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                    'storage-delete':
                        'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',
                    'fetch-client-network':
                        'Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                    'fetch-timeout':
                        'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'fetch-client-parse':
                        'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                    'fetch-status':
                        'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                    'indexed-db-unavailable':
                        'Indexed DB is not supported by current browser',
                });
            class mi {
                constructor(S, B, ee, Ce) {
                    (this.client = S),
                        (this.storage = B),
                        (this.storageCache = ee),
                        (this.logger = Ce);
                }
                isCachedDataFresh(S, B) {
                    if (!B)
                        return (
                            this.logger.debug(
                                'Config fetch cache check. Cache unpopulated.'
                            ),
                            !1
                        );
                    const ee = Date.now() - B,
                        Ce = ee <= S;
                    return (
                        this.logger.debug(
                            `Config fetch cache check. Cache age millis: ${ee}. Cache max age millis (minimumFetchIntervalMillis setting): ${S}. Is cache hit: ${Ce}.`
                        ),
                        Ce
                    );
                }
                fetch(S) {
                    var B = this;
                    return (0, j.Z)(function* () {
                        const [ee, Ce] = yield Promise.all([
                            B.storage.getLastSuccessfulFetchTimestampMillis(),
                            B.storage.getLastSuccessfulFetchResponse(),
                        ]);
                        if (Ce && B.isCachedDataFresh(S.cacheMaxAgeMillis, ee))
                            return Ce;
                        S.eTag = Ce && Ce.eTag;
                        const d = yield B.client.fetch(S),
                            s = [
                                B.storageCache.setLastSuccessfulFetchTimestampMillis(
                                    Date.now()
                                ),
                            ];
                        return (
                            200 === d.status &&
                                s.push(
                                    B.storage.setLastSuccessfulFetchResponse(d)
                                ),
                            yield Promise.all(s),
                            d
                        );
                    })();
                }
            }
            function Hi(E = navigator) {
                return (E.languages && E.languages[0]) || E.language;
            }
            class Er {
                constructor(S, B, ee, Ce, d, s) {
                    (this.firebaseInstallations = S),
                        (this.sdkVersion = B),
                        (this.namespace = ee),
                        (this.projectId = Ce),
                        (this.apiKey = d),
                        (this.appId = s);
                }
                fetch(S) {
                    var B = this;
                    return (0, j.Z)(function* () {
                        const [ee, Ce] = yield Promise.all([
                                B.firebaseInstallations.getId(),
                                B.firebaseInstallations.getToken(),
                            ]),
                            s = `${
                                window.FIREBASE_REMOTE_CONFIG_URL_BASE ||
                                'https://firebaseremoteconfig.googleapis.com'
                            }/v1/projects/${B.projectId}/namespaces/${
                                B.namespace
                            }:fetch?key=${B.apiKey}`,
                            o = {
                                'Content-Type': 'application/json',
                                'Content-Encoding': 'gzip',
                                'If-None-Match': S.eTag || '*',
                            },
                            u = {
                                sdk_version: B.sdkVersion,
                                app_instance_id: ee,
                                app_instance_id_token: Ce,
                                app_id: B.appId,
                                language_code: Hi(),
                            },
                            v = {
                                method: 'POST',
                                headers: o,
                                body: JSON.stringify(u),
                            },
                            R = fetch(s, v),
                            G = new Promise((Mt, ht) => {
                                S.signal.addEventListener(() => {
                                    const mt = new Error(
                                        'The operation was aborted.'
                                    );
                                    (mt.name = 'AbortError'), ht(mt);
                                });
                            });
                        let Y;
                        try {
                            yield Promise.race([R, G]), (Y = yield R);
                        } catch (Mt) {
                            let ht = 'fetch-client-network';
                            throw (
                                ('AbortError' === Mt.name &&
                                    (ht = 'fetch-timeout'),
                                En.create(ht, {
                                    originalErrorMessage: Mt.message,
                                }))
                            );
                        }
                        let ue = Y.status;
                        const Ve = Y.headers.get('ETag') || void 0;
                        let it, Et;
                        if (200 === Y.status) {
                            let Mt;
                            try {
                                Mt = yield Y.json();
                            } catch (ht) {
                                throw En.create('fetch-client-parse', {
                                    originalErrorMessage: ht.message,
                                });
                            }
                            (it = Mt.entries), (Et = Mt.state);
                        }
                        if (
                            ('INSTANCE_STATE_UNSPECIFIED' === Et
                                ? (ue = 500)
                                : 'NO_CHANGE' === Et
                                ? (ue = 304)
                                : ('NO_TEMPLATE' === Et ||
                                      'EMPTY_CONFIG' === Et) &&
                                  (it = {}),
                            304 !== ue && 200 !== ue)
                        )
                            throw En.create('fetch-status', { httpStatus: ue });
                        return { status: ue, eTag: Ve, config: it };
                    })();
                }
            }
            class _e {
                constructor(S, B) {
                    (this.client = S), (this.storage = B);
                }
                fetch(S) {
                    var B = this;
                    return (0, j.Z)(function* () {
                        const ee = (yield B.storage.getThrottleMetadata()) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        };
                        return B.attemptFetch(S, ee);
                    })();
                }
                attemptFetch(
                    S,
                    { throttleEndTimeMillis: B, backoffCount: ee }
                ) {
                    var Ce = this;
                    return (0, j.Z)(function* () {
                        yield (function $i(E, S) {
                            return new Promise((B, ee) => {
                                const Ce = Math.max(S - Date.now(), 0),
                                    d = setTimeout(B, Ce);
                                E.addEventListener(() => {
                                    clearTimeout(d),
                                        ee(
                                            En.create('fetch-throttle', {
                                                throttleEndTimeMillis: S,
                                            })
                                        );
                                });
                            });
                        })(S.signal, B);
                        try {
                            const d = yield Ce.client.fetch(S);
                            return yield Ce.storage.deleteThrottleMetadata(), d;
                        } catch (d) {
                            if (
                                !(function yi(E) {
                                    if (!(E instanceof H.ZR && E.customData))
                                        return !1;
                                    const S = Number(E.customData.httpStatus);
                                    return (
                                        429 === S ||
                                        500 === S ||
                                        503 === S ||
                                        504 === S
                                    );
                                })(d)
                            )
                                throw d;
                            const s = {
                                throttleEndTimeMillis:
                                    Date.now() + (0, H.$s)(ee),
                                backoffCount: ee + 1,
                            };
                            return (
                                yield Ce.storage.setThrottleMetadata(s),
                                Ce.attemptFetch(S, s)
                            );
                        }
                    })();
                }
            }
            class We {
                constructor(S, B, ee, Ce, d) {
                    (this.app = S),
                        (this._client = B),
                        (this._storageCache = ee),
                        (this._storage = Ce),
                        (this._logger = d),
                        (this._isInitializationComplete = !1),
                        (this.settings = {
                            fetchTimeoutMillis: 6e4,
                            minimumFetchIntervalMillis: 432e5,
                        }),
                        (this.defaultConfig = {});
                }
                get fetchTimeMillis() {
                    return (
                        this._storageCache.getLastSuccessfulFetchTimestampMillis() ||
                        -1
                    );
                }
                get lastFetchStatus() {
                    return (
                        this._storageCache.getLastFetchStatus() ||
                        'no-fetch-yet'
                    );
                }
            }
            function Xe(E, S) {
                const B = E.target.error || void 0;
                return En.create(S, { originalErrorMessage: B && B.message });
            }
            const ft = 'app_namespace_store';
            class Gr {
                constructor(
                    S,
                    B,
                    ee,
                    Ce = (function sn() {
                        return new Promise((E, S) => {
                            try {
                                const B = indexedDB.open(
                                    'firebase_remote_config',
                                    1
                                );
                                (B.onerror = (ee) => {
                                    S(Xe(ee, 'storage-open'));
                                }),
                                    (B.onsuccess = (ee) => {
                                        E(ee.target.result);
                                    }),
                                    (B.onupgradeneeded = (ee) => {
                                        0 === ee.oldVersion &&
                                            ee.target.result.createObjectStore(
                                                ft,
                                                { keyPath: 'compositeKey' }
                                            );
                                    });
                            } catch (B) {
                                S(
                                    En.create('storage-open', {
                                        originalErrorMessage: B,
                                    })
                                );
                            }
                        });
                    })()
                ) {
                    (this.appId = S),
                        (this.appName = B),
                        (this.namespace = ee),
                        (this.openDbPromise = Ce);
                }
                getLastFetchStatus() {
                    return this.get('last_fetch_status');
                }
                setLastFetchStatus(S) {
                    return this.set('last_fetch_status', S);
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.get('last_successful_fetch_timestamp_millis');
                }
                setLastSuccessfulFetchTimestampMillis(S) {
                    return this.set(
                        'last_successful_fetch_timestamp_millis',
                        S
                    );
                }
                getLastSuccessfulFetchResponse() {
                    return this.get('last_successful_fetch_response');
                }
                setLastSuccessfulFetchResponse(S) {
                    return this.set('last_successful_fetch_response', S);
                }
                getActiveConfig() {
                    return this.get('active_config');
                }
                setActiveConfig(S) {
                    return this.set('active_config', S);
                }
                getActiveConfigEtag() {
                    return this.get('active_config_etag');
                }
                setActiveConfigEtag(S) {
                    return this.set('active_config_etag', S);
                }
                getThrottleMetadata() {
                    return this.get('throttle_metadata');
                }
                setThrottleMetadata(S) {
                    return this.set('throttle_metadata', S);
                }
                deleteThrottleMetadata() {
                    return this.delete('throttle_metadata');
                }
                get(S) {
                    var B = this;
                    return (0, j.Z)(function* () {
                        const ee = yield B.openDbPromise;
                        return new Promise((Ce, d) => {
                            const o = ee
                                    .transaction([ft], 'readonly')
                                    .objectStore(ft),
                                u = B.createCompositeKey(S);
                            try {
                                const v = o.get(u);
                                (v.onerror = (R) => {
                                    d(Xe(R, 'storage-get'));
                                }),
                                    (v.onsuccess = (R) => {
                                        const G = R.target.result;
                                        Ce(G ? G.value : void 0);
                                    });
                            } catch (v) {
                                d(
                                    En.create('storage-get', {
                                        originalErrorMessage: v && v.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                set(S, B) {
                    var ee = this;
                    return (0, j.Z)(function* () {
                        const Ce = yield ee.openDbPromise;
                        return new Promise((d, s) => {
                            const u = Ce.transaction(
                                    [ft],
                                    'readwrite'
                                ).objectStore(ft),
                                v = ee.createCompositeKey(S);
                            try {
                                const R = u.put({ compositeKey: v, value: B });
                                (R.onerror = (G) => {
                                    s(Xe(G, 'storage-set'));
                                }),
                                    (R.onsuccess = () => {
                                        d();
                                    });
                            } catch (R) {
                                s(
                                    En.create('storage-set', {
                                        originalErrorMessage: R && R.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                delete(S) {
                    var B = this;
                    return (0, j.Z)(function* () {
                        const ee = yield B.openDbPromise;
                        return new Promise((Ce, d) => {
                            const o = ee
                                    .transaction([ft], 'readwrite')
                                    .objectStore(ft),
                                u = B.createCompositeKey(S);
                            try {
                                const v = o.delete(u);
                                (v.onerror = (R) => {
                                    d(Xe(R, 'storage-delete'));
                                }),
                                    (v.onsuccess = () => {
                                        Ce();
                                    });
                            } catch (v) {
                                d(
                                    En.create('storage-delete', {
                                        originalErrorMessage: v && v.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                createCompositeKey(S) {
                    return [this.appId, this.appName, this.namespace, S].join();
                }
            }
            class xr {
                constructor(S) {
                    this.storage = S;
                }
                getLastFetchStatus() {
                    return this.lastFetchStatus;
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.lastSuccessfulFetchTimestampMillis;
                }
                getActiveConfig() {
                    return this.activeConfig;
                }
                loadFromStorage() {
                    var S = this;
                    return (0, j.Z)(function* () {
                        const B = S.storage.getLastFetchStatus(),
                            ee =
                                S.storage.getLastSuccessfulFetchTimestampMillis(),
                            Ce = S.storage.getActiveConfig(),
                            d = yield B;
                        d && (S.lastFetchStatus = d);
                        const s = yield ee;
                        s && (S.lastSuccessfulFetchTimestampMillis = s);
                        const o = yield Ce;
                        o && (S.activeConfig = o);
                    })();
                }
                setLastFetchStatus(S) {
                    return (
                        (this.lastFetchStatus = S),
                        this.storage.setLastFetchStatus(S)
                    );
                }
                setLastSuccessfulFetchTimestampMillis(S) {
                    return (
                        (this.lastSuccessfulFetchTimestampMillis = S),
                        this.storage.setLastSuccessfulFetchTimestampMillis(S)
                    );
                }
                setActiveConfig(S) {
                    return (
                        (this.activeConfig = S), this.storage.setActiveConfig(S)
                    );
                }
            }
            function oi() {
                return ai.apply(this, arguments);
            }
            function ai() {
                return (ai = (0, j.Z)(function* () {
                    if (!(0, H.hl)()) return !1;
                    try {
                        return yield (0, H.eu)();
                    } catch (E) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            !(function wi() {
                (0, w._registerComponent)(
                    new te.wA(
                        'remote-config',
                        function E(S, { instanceIdentifier: B }) {
                            const ee = S.getProvider('app').getImmediate(),
                                Ce = S.getProvider(
                                    'installations-internal'
                                ).getImmediate();
                            if ('undefined' == typeof window)
                                throw En.create('registration-window');
                            if (!(0, H.hl)())
                                throw En.create('indexed-db-unavailable');
                            const {
                                projectId: d,
                                apiKey: s,
                                appId: o,
                            } = ee.options;
                            if (!d) throw En.create('registration-project-id');
                            if (!s) throw En.create('registration-api-key');
                            if (!o) throw En.create('registration-app-id');
                            const u = new Gr(o, ee.name, (B = B || 'firebase')),
                                v = new xr(u),
                                R = new X.Yd(er);
                            R.logLevel = X.in.ERROR;
                            const G = new Er(Ce, w.SDK_VERSION, B, d, s, o),
                                Y = new _e(G, u),
                                ue = new mi(Y, u, v, R),
                                Ve = new We(ee, ue, v, u, R);
                            return (
                                (function ve(E) {
                                    const S = (0, H.m9)(E);
                                    S._initializePromise ||
                                        (S._initializePromise = S._storageCache
                                            .loadFromStorage()
                                            .then(() => {
                                                S._isInitializationComplete =
                                                    !0;
                                            }));
                                })(Ve),
                                Ve
                            );
                        },
                        'PUBLIC'
                    ).setMultipleInstances(!0)
                ),
                    (0, w.registerVersion)(er, '0.3.4'),
                    (0, w.registerVersion)(er, '0.3.4', 'esm2017');
            })();
            const es = '/firebase-messaging-sw.js',
                Jr = '/firebase-cloud-messaging-push-scope',
                xi =
                    'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4',
                gr = 'google.c.a.c_id',
                cs = 'google.c.a.c_l',
                li = 'google.c.a.ts',
                Gi = 'google.c.a.e';
            var _i = (() => {
                return (
                    ((E = _i || (_i = {})).PUSH_RECEIVED = 'push-received'),
                    (E.NOTIFICATION_CLICKED = 'notification-clicked'),
                    _i
                );
                var E;
            })();
            function $n(E) {
                const S = new Uint8Array(E);
                return btoa(String.fromCharCode(...S))
                    .replace(/=/g, '')
                    .replace(/\+/g, '-')
                    .replace(/\//g, '_');
            }
            function ui(E) {
                const B = (E + '='.repeat((4 - (E.length % 4)) % 4))
                        .replace(/\-/g, '+')
                        .replace(/_/g, '/'),
                    ee = atob(B),
                    Ce = new Uint8Array(ee.length);
                for (let d = 0; d < ee.length; ++d) Ce[d] = ee.charCodeAt(d);
                return Ce;
            }
            const rr = 'fcm_token_details_db',
                Si = 'fcm_token_object_Store';
            function Wi(E) {
                return zi.apply(this, arguments);
            }
            function zi() {
                return (
                    (zi = (0, j.Z)(function* (E) {
                        if (
                            'databases' in indexedDB &&
                            !(yield indexedDB.databases())
                                .map((d) => d.name)
                                .includes(rr)
                        )
                            return null;
                        let S = null;
                        return (
                            (yield (0, ne.openDb)(
                                rr,
                                5,
                                (function () {
                                    var ee = (0, j.Z)(function* (Ce) {
                                        var d;
                                        if (
                                            Ce.oldVersion < 2 ||
                                            !Ce.objectStoreNames.contains(Si)
                                        )
                                            return;
                                        const s =
                                                Ce.transaction.objectStore(Si),
                                            o = yield s
                                                .index('fcmSenderId')
                                                .get(E);
                                        if ((yield s.clear(), o))
                                            if (2 === Ce.oldVersion) {
                                                const u = o;
                                                if (
                                                    !u.auth ||
                                                    !u.p256dh ||
                                                    !u.endpoint
                                                )
                                                    return;
                                                S = {
                                                    token: u.fcmToken,
                                                    createTime:
                                                        null !==
                                                            (d =
                                                                u.createTime) &&
                                                        void 0 !== d
                                                            ? d
                                                            : Date.now(),
                                                    subscriptionOptions: {
                                                        auth: u.auth,
                                                        p256dh: u.p256dh,
                                                        endpoint: u.endpoint,
                                                        swScope: u.swScope,
                                                        vapidKey:
                                                            'string' ==
                                                            typeof u.vapidKey
                                                                ? u.vapidKey
                                                                : $n(
                                                                      u.vapidKey
                                                                  ),
                                                    },
                                                };
                                            } else if (3 === Ce.oldVersion) {
                                                const u = o;
                                                S = {
                                                    token: u.fcmToken,
                                                    createTime: u.createTime,
                                                    subscriptionOptions: {
                                                        auth: $n(u.auth),
                                                        p256dh: $n(u.p256dh),
                                                        endpoint: u.endpoint,
                                                        swScope: u.swScope,
                                                        vapidKey: $n(
                                                            u.vapidKey
                                                        ),
                                                    },
                                                };
                                            } else if (4 === Ce.oldVersion) {
                                                const u = o;
                                                S = {
                                                    token: u.fcmToken,
                                                    createTime: u.createTime,
                                                    subscriptionOptions: {
                                                        auth: $n(u.auth),
                                                        p256dh: $n(u.p256dh),
                                                        endpoint: u.endpoint,
                                                        swScope: u.swScope,
                                                        vapidKey: $n(
                                                            u.vapidKey
                                                        ),
                                                    },
                                                };
                                            }
                                    });
                                    return function (Ce) {
                                        return ee.apply(this, arguments);
                                    };
                                })()
                            )).close(),
                            yield (0, ne.deleteDb)(rr),
                            yield (0, ne.deleteDb)('fcm_vapid_details_db'),
                            yield (0, ne.deleteDb)('undefined'),
                            vi(S) ? S : null
                        );
                    })),
                    zi.apply(this, arguments)
                );
            }
            function vi(E) {
                if (!E || !E.subscriptionOptions) return !1;
                const { subscriptionOptions: S } = E;
                return (
                    'number' == typeof E.createTime &&
                    E.createTime > 0 &&
                    'string' == typeof E.token &&
                    E.token.length > 0 &&
                    'string' == typeof S.auth &&
                    S.auth.length > 0 &&
                    'string' == typeof S.p256dh &&
                    S.p256dh.length > 0 &&
                    'string' == typeof S.endpoint &&
                    S.endpoint.length > 0 &&
                    'string' == typeof S.swScope &&
                    S.swScope.length > 0 &&
                    'string' == typeof S.vapidKey &&
                    S.vapidKey.length > 0
                );
            }
            const Xr = 'firebase-messaging-store';
            let Ii = null;
            function Qt() {
                return (
                    Ii ||
                        (Ii = (0, ne.openDb)(
                            'firebase-messaging-database',
                            1,
                            (E) => {
                                0 === E.oldVersion && E.createObjectStore(Xr);
                            }
                        )),
                    Ii
                );
            }
            function T(E) {
                return L.apply(this, arguments);
            }
            function L() {
                return (L = (0, j.Z)(function* (E) {
                    const S = ze(E),
                        ee = yield (yield Qt())
                            .transaction(Xr)
                            .objectStore(Xr)
                            .get(S);
                    if (ee) return ee;
                    {
                        const Ce = yield Wi(E.appConfig.senderId);
                        if (Ce) return yield A(E, Ce), Ce;
                    }
                })).apply(this, arguments);
            }
            function A(E, S) {
                return V.apply(this, arguments);
            }
            function V() {
                return (V = (0, j.Z)(function* (E, S) {
                    const B = ze(E),
                        Ce = (yield Qt()).transaction(Xr, 'readwrite');
                    return (
                        yield Ce.objectStore(Xr).put(S, B), yield Ce.complete, S
                    );
                })).apply(this, arguments);
            }
            function fe(E) {
                return ke.apply(this, arguments);
            }
            function ke() {
                return (ke = (0, j.Z)(function* (E) {
                    const S = ze(E),
                        ee = (yield Qt()).transaction(Xr, 'readwrite');
                    yield ee.objectStore(Xr).delete(S), yield ee.complete;
                })).apply(this, arguments);
            }
            function ze({ appConfig: E }) {
                return E.appId;
            }
            const xt = new H.LL('messaging', 'Messaging', {
                'missing-app-config-values':
                    'Missing App configuration value: "{$valueName}"',
                'only-available-in-window':
                    'This method is available in a Window context.',
                'only-available-in-sw':
                    'This method is available in a service worker context.',
                'permission-default':
                    'The notification permission was not granted and dismissed instead.',
                'permission-blocked':
                    'The notification permission was not granted and blocked instead.',
                'unsupported-browser':
                    "This browser doesn't support the API's required to use the Firebase SDK.",
                'indexed-db-unsupported':
                    "This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)",
                'failed-service-worker-registration':
                    'We are unable to register the default service worker. {$browserErrorMessage}',
                'token-subscribe-failed':
                    'A problem occurred while subscribing the user to FCM: {$errorInfo}',
                'token-subscribe-no-token':
                    'FCM returned no token when subscribing the user to push.',
                'token-unsubscribe-failed':
                    'A problem occurred while unsubscribing the user from FCM: {$errorInfo}',
                'token-update-failed':
                    'A problem occurred while updating the user from FCM: {$errorInfo}',
                'token-update-no-token':
                    'FCM returned no token when updating the user to push.',
                'use-sw-after-get-token':
                    'The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.',
                'invalid-sw-registration':
                    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',
                'invalid-bg-handler':
                    'The input to setBackgroundMessageHandler() must be a function.',
                'invalid-vapid-key': 'The public VAPID key must be a string.',
                'use-vapid-key-after-get-token':
                    'The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.',
            });
            function dn(E, S) {
                return Gt.apply(this, arguments);
            }
            function Gt() {
                return (Gt = (0, j.Z)(function* (E, S) {
                    const B = yield Vr(E),
                        ee = ci(S),
                        Ce = {
                            method: 'POST',
                            headers: B,
                            body: JSON.stringify(ee),
                        };
                    let d;
                    try {
                        d = yield (yield fetch(ei(E.appConfig), Ce)).json();
                    } catch (s) {
                        throw xt.create('token-subscribe-failed', {
                            errorInfo: s,
                        });
                    }
                    if (d.error)
                        throw xt.create('token-subscribe-failed', {
                            errorInfo: d.error.message,
                        });
                    if (!d.token) throw xt.create('token-subscribe-no-token');
                    return d.token;
                })).apply(this, arguments);
            }
            function en(E, S) {
                return tr.apply(this, arguments);
            }
            function tr() {
                return (tr = (0, j.Z)(function* (E, S) {
                    const B = yield Vr(E),
                        ee = ci(S.subscriptionOptions),
                        Ce = {
                            method: 'PATCH',
                            headers: B,
                            body: JSON.stringify(ee),
                        };
                    let d;
                    try {
                        d = yield (yield fetch(
                            `${ei(E.appConfig)}/${S.token}`,
                            Ce
                        )).json();
                    } catch (s) {
                        throw xt.create('token-update-failed', {
                            errorInfo: s,
                        });
                    }
                    if (d.error)
                        throw xt.create('token-update-failed', {
                            errorInfo: d.error.message,
                        });
                    if (!d.token) throw xt.create('token-update-no-token');
                    return d.token;
                })).apply(this, arguments);
            }
            function Tn(E, S) {
                return Nn.apply(this, arguments);
            }
            function Nn() {
                return (Nn = (0, j.Z)(function* (E, S) {
                    const ee = { method: 'DELETE', headers: yield Vr(E) };
                    try {
                        const d = yield (yield fetch(
                            `${ei(E.appConfig)}/${S}`,
                            ee
                        )).json();
                        if (d.error)
                            throw xt.create('token-unsubscribe-failed', {
                                errorInfo: d.error.message,
                            });
                    } catch (Ce) {
                        throw xt.create('token-unsubscribe-failed', {
                            errorInfo: Ce,
                        });
                    }
                })).apply(this, arguments);
            }
            function ei({ projectId: E }) {
                return `https://fcmregistrations.googleapis.com/v1/projects/${E}/registrations`;
            }
            function Vr(E) {
                return Ot.apply(this, arguments);
            }
            function Ot() {
                return (Ot = (0, j.Z)(function* ({
                    appConfig: E,
                    installations: S,
                }) {
                    const B = yield S.getToken();
                    return new Headers({
                        'Content-Type': 'application/json',
                        Accept: 'application/json',
                        'x-goog-api-key': E.apiKey,
                        'x-goog-firebase-installations-auth': `FIS ${B}`,
                    });
                })).apply(this, arguments);
            }
            function ci({ p256dh: E, auth: S, endpoint: B, vapidKey: ee }) {
                const Ce = { web: { endpoint: B, auth: S, p256dh: E } };
                return ee !== xi && (Ce.web.applicationPubKey = ee), Ce;
            }
            const Yi = 6048e5;
            function Ei(E) {
                return Li.apply(this, arguments);
            }
            function Li() {
                return (Li = (0, j.Z)(function* (E) {
                    const S = yield Yn(E.swRegistration, E.vapidKey),
                        B = {
                            vapidKey: E.vapidKey,
                            swScope: E.swRegistration.scope,
                            endpoint: S.endpoint,
                            auth: $n(S.getKey('auth')),
                            p256dh: $n(S.getKey('p256dh')),
                        },
                        ee = yield T(E.firebaseDependencies);
                    if (ee) {
                        if (Mi(ee.subscriptionOptions, B))
                            return Date.now() >= ee.createTime + Yi
                                ? jo(E, {
                                      token: ee.token,
                                      createTime: Date.now(),
                                      subscriptionOptions: B,
                                  })
                                : ee.token;
                        try {
                            yield Tn(E.firebaseDependencies, ee.token);
                        } catch (Ce) {
                            console.warn(Ce);
                        }
                        return Xt(E.firebaseDependencies, B);
                    }
                    return Xt(E.firebaseDependencies, B);
                })).apply(this, arguments);
            }
            function ns(E) {
                return Qi.apply(this, arguments);
            }
            function Qi() {
                return (Qi = (0, j.Z)(function* (E) {
                    const S = yield T(E.firebaseDependencies);
                    S &&
                        (yield Tn(E.firebaseDependencies, S.token),
                        yield fe(E.firebaseDependencies));
                    const B =
                        yield E.swRegistration.pushManager.getSubscription();
                    return !B || B.unsubscribe();
                })).apply(this, arguments);
            }
            function jo(E, S) {
                return Ke.apply(this, arguments);
            }
            function Ke() {
                return (Ke = (0, j.Z)(function* (E, S) {
                    try {
                        const B = yield en(E.firebaseDependencies, S),
                            ee = Object.assign(Object.assign({}, S), {
                                token: B,
                                createTime: Date.now(),
                            });
                        return yield A(E.firebaseDependencies, ee), B;
                    } catch (B) {
                        throw (yield ns(E), B);
                    }
                })).apply(this, arguments);
            }
            function Xt(E, S) {
                return Zs.apply(this, arguments);
            }
            function Zs() {
                return (Zs = (0, j.Z)(function* (E, S) {
                    const ee = {
                        token: yield dn(E, S),
                        createTime: Date.now(),
                        subscriptionOptions: S,
                    };
                    return yield A(E, ee), ee.token;
                })).apply(this, arguments);
            }
            function Yn(E, S) {
                return fs.apply(this, arguments);
            }
            function fs() {
                return (fs = (0, j.Z)(function* (E, S) {
                    return (
                        (yield E.pushManager.getSubscription()) ||
                        E.pushManager.subscribe({
                            userVisibleOnly: !0,
                            applicationServerKey: ui(S),
                        })
                    );
                })).apply(this, arguments);
            }
            function Mi(E, S) {
                return (
                    S.vapidKey === E.vapidKey &&
                    S.endpoint === E.endpoint &&
                    S.auth === E.auth &&
                    S.p256dh === E.p256dh
                );
            }
            function Dr(E) {
                const S = {
                    from: E.from,
                    collapseKey: E.collapse_key,
                    messageId: E.fcmMessageId,
                };
                return (
                    (function hs(E, S) {
                        if (!S.notification) return;
                        E.notification = {};
                        const B = S.notification.title;
                        B && (E.notification.title = B);
                        const ee = S.notification.body;
                        ee && (E.notification.body = ee);
                        const Ce = S.notification.image;
                        Ce && (E.notification.image = Ce);
                    })(S, E),
                    (function ws(E, S) {
                        !S.data || (E.data = S.data);
                    })(S, E),
                    (function So(E, S) {
                        if (!S.fcmOptions) return;
                        E.fcmOptions = {};
                        const B = S.fcmOptions.link;
                        B && (E.fcmOptions.link = B);
                        const ee = S.fcmOptions.analytics_label;
                        ee && (E.fcmOptions.analyticsLabel = ee);
                    })(S, E),
                    S
                );
            }
            function Ts(E) {
                return 'object' == typeof E && !!E && gr in E;
            }
            function ps(E, S) {
                const B = [];
                for (let ee = 0; ee < E.length; ee++)
                    B.push(E.charAt(ee)), ee < S.length && B.push(S.charAt(ee));
                return B.join('');
            }
            function mr(E) {
                return xt.create('missing-app-config-values', { valueName: E });
            }
            ps(
                'hts/frbslgigp.ogepscmv/ieo/eaylg',
                'tp:/ieaeogn-agolai.o/1frlglgc/o'
            ),
                ps('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');
            class Di {
                constructor(S, B, ee) {
                    (this.deliveryMetricsExportedToBigQueryEnabled = !1),
                        (this.onBackgroundMessageHandler = null),
                        (this.onMessageHandler = null),
                        (this.logEvents = []),
                        (this.isLogServiceStarted = !1);
                    const Ce = (function gs(E) {
                        if (!E || !E.options)
                            throw mr('App Configuration Object');
                        if (!E.name) throw mr('App Name');
                        const S = [
                                'projectId',
                                'apiKey',
                                'appId',
                                'messagingSenderId',
                            ],
                            { options: B } = E;
                        for (const ee of S) if (!B[ee]) throw mr(ee);
                        return {
                            appName: E.name,
                            projectId: B.projectId,
                            apiKey: B.apiKey,
                            appId: B.appId,
                            senderId: B.messagingSenderId,
                        };
                    })(S);
                    this.firebaseDependencies = {
                        app: S,
                        appConfig: Ce,
                        installations: B,
                        analyticsProvider: ee,
                    };
                }
                _delete() {
                    return Promise.resolve();
                }
            }
            function Ss(E) {
                return di.apply(this, arguments);
            }
            function di() {
                return (di = (0, j.Z)(function* (E) {
                    try {
                        (E.swRegistration =
                            yield navigator.serviceWorker.register(es, {
                                scope: Jr,
                            })),
                            E.swRegistration.update().catch(() => {});
                    } catch (S) {
                        throw xt.create('failed-service-worker-registration', {
                            browserErrorMessage: S.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function Ci(E, S) {
                return C.apply(this, arguments);
            }
            function C() {
                return (C = (0, j.Z)(function* (E, S) {
                    if (
                        (!S && !E.swRegistration && (yield Ss(E)),
                        S || !E.swRegistration)
                    ) {
                        if (!(S instanceof ServiceWorkerRegistration))
                            throw xt.create('invalid-sw-registration');
                        E.swRegistration = S;
                    }
                })).apply(this, arguments);
            }
            function D(E, S) {
                return m.apply(this, arguments);
            }
            function m() {
                return (m = (0, j.Z)(function* (E, S) {
                    S ? (E.vapidKey = S) : E.vapidKey || (E.vapidKey = xi);
                })).apply(this, arguments);
            }
            function Fe() {
                return (Fe = (0, j.Z)(function* (E, S) {
                    if (!navigator) throw xt.create('only-available-in-window');
                    if (
                        ('default' === Notification.permission &&
                            (yield Notification.requestPermission()),
                        'granted' !== Notification.permission)
                    )
                        throw xt.create('permission-blocked');
                    return (
                        yield D(E, null == S ? void 0 : S.vapidKey),
                        yield Ci(
                            E,
                            null == S ? void 0 : S.serviceWorkerRegistration
                        ),
                        Ei(E)
                    );
                })).apply(this, arguments);
            }
            function at(E, S, B) {
                return yn.apply(this, arguments);
            }
            function yn() {
                return (yn = (0, j.Z)(function* (E, S, B) {
                    const ee = Cn(S);
                    (yield E.firebaseDependencies.analyticsProvider.get()).logEvent(
                        ee,
                        {
                            message_id: B[gr],
                            message_name: B[cs],
                            message_time: B[li],
                            message_device_time: Math.floor(Date.now() / 1e3),
                        }
                    );
                })).apply(this, arguments);
            }
            function Cn(E) {
                switch (E) {
                    case _i.NOTIFICATION_CLICKED:
                        return 'notification_open';
                    case _i.PUSH_RECEIVED:
                        return 'notification_foreground';
                    default:
                        throw new Error();
                }
            }
            function Ur() {
                return (Ur = (0, j.Z)(function* (E, S) {
                    const B = S.data;
                    if (!B.isFirebaseMessaging) return;
                    E.onMessageHandler &&
                        B.messageType === _i.PUSH_RECEIVED &&
                        ('function' == typeof E.onMessageHandler
                            ? E.onMessageHandler(Dr(B))
                            : E.onMessageHandler.next(Dr(B)));
                    const ee = B.data;
                    Ts(ee) &&
                        '1' === ee[Gi] &&
                        (yield at(E, B.messageType, ee));
                })).apply(this, arguments);
            }
            const hi = '@firebase/messaging',
                qs = (E) => {
                    const S = new Di(
                        E.getProvider('app').getImmediate(),
                        E.getProvider('installations-internal').getImmediate(),
                        E.getProvider('analytics-internal')
                    );
                    return (
                        navigator.serviceWorker.addEventListener(
                            'message',
                            (B) =>
                                (function fi(E, S) {
                                    return Ur.apply(this, arguments);
                                })(S, B)
                        ),
                        S
                    );
                },
                Js = (E) => {
                    const S = E.getProvider('messaging').getImmediate();
                    return {
                        getToken: (ee) =>
                            (function N(E, S) {
                                return Fe.apply(this, arguments);
                            })(S, ee),
                    };
                };
            function Is() {
                return Zi.apply(this, arguments);
            }
            function Zi() {
                return (Zi = (0, j.Z)(function* () {
                    return (
                        'undefined' != typeof window &&
                        (0, H.hl)() &&
                        (yield (0, H.eu)()) &&
                        (0, H.zI)() &&
                        'serviceWorker' in navigator &&
                        'PushManager' in window &&
                        'Notification' in window &&
                        'fetch' in window &&
                        ServiceWorkerRegistration.prototype.hasOwnProperty(
                            'showNotification'
                        ) &&
                        PushSubscription.prototype.hasOwnProperty('getKey')
                    );
                })).apply(this, arguments);
            }
            !(function _o() {
                (0, w._registerComponent)(new te.wA('messaging', qs, 'PUBLIC')),
                    (0, w._registerComponent)(
                        new te.wA('messaging-internal', Js, 'PRIVATE')
                    ),
                    (0, w.registerVersion)(hi, '0.9.7'),
                    (0, w.registerVersion)(hi, '0.9.7', 'esm2017');
            })();
            const Ms = 'analytics',
                Io = 'firebase_id',
                Nr =
                    'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig',
                Xs = 'https://www.googletagmanager.com/gtag/js',
                lr = new X.Yd('@firebase/analytics');
            function Ps(E) {
                return Promise.all(E.map((S) => S.catch((B) => B)));
            }
            function bi(E, S) {
                const B = document.createElement('script');
                (B.src = `${Xs}?l=${E}&id=${S}`),
                    (B.async = !0),
                    document.head.appendChild(B);
            }
            function $o(E, S, B, ee, Ce, d) {
                return vo.apply(this, arguments);
            }
            function vo() {
                return (vo = (0, j.Z)(function* (E, S, B, ee, Ce, d) {
                    const s = ee[Ce];
                    try {
                        if (s) yield S[s];
                        else {
                            const u = (yield Ps(B)).find(
                                (v) => v.measurementId === Ce
                            );
                            u && (yield S[u.appId]);
                        }
                    } catch (o) {
                        lr.error(o);
                    }
                    E('config', Ce, d);
                })).apply(this, arguments);
            }
            function ms(E, S, B, ee, Ce) {
                return ys.apply(this, arguments);
            }
            function ys() {
                return (ys = (0, j.Z)(function* (E, S, B, ee, Ce) {
                    try {
                        let d = [];
                        if (Ce && Ce.send_to) {
                            let s = Ce.send_to;
                            Array.isArray(s) || (s = [s]);
                            const o = yield Ps(B);
                            for (const u of s) {
                                const v = o.find((G) => G.measurementId === u),
                                    R = v && S[v.appId];
                                if (!R) {
                                    d = [];
                                    break;
                                }
                                d.push(R);
                            }
                        }
                        0 === d.length && (d = Object.values(S)),
                            yield Promise.all(d),
                            E('event', ee, Ce || {});
                    } catch (d) {
                        lr.error(d);
                    }
                })).apply(this, arguments);
            }
            function Mo() {
                const E = window.document.getElementsByTagName('script');
                for (const S of Object.values(E))
                    if (S.src && S.src.includes(Xs)) return S;
                return null;
            }
            const fr = new H.LL('analytics', 'Analytics', {
                    'already-exists':
                        'A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.',
                    'already-initialized':
                        'initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.',
                    'already-initialized-settings':
                        'Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.',
                    'interop-component-reg-failed':
                        'Firebase Analytics Interop Component failed to instantiate: {$reason}',
                    'invalid-analytics-context':
                        'Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'indexeddb-unavailable':
                        'IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'config-fetch-failed':
                        'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',
                    'no-api-key':
                        'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
                    'no-app-id':
                        'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
                }),
                bo = new (class eo {
                    constructor(S = {}, B = 1e3) {
                        (this.throttleMetadata = S), (this.intervalMillis = B);
                    }
                    getThrottleMetadata(S) {
                        return this.throttleMetadata[S];
                    }
                    setThrottleMetadata(S, B) {
                        this.throttleMetadata[S] = B;
                    }
                    deleteThrottleMetadata(S) {
                        delete this.throttleMetadata[S];
                    }
                })();
            function Oo(E) {
                return new Headers({
                    Accept: 'application/json',
                    'x-goog-api-key': E,
                });
            }
            function ss(E) {
                return to.apply(this, arguments);
            }
            function to() {
                return (to = (0, j.Z)(function* (E) {
                    var S;
                    const { appId: B, apiKey: ee } = E,
                        Ce = { method: 'GET', headers: Oo(ee) },
                        d = Nr.replace('{app-id}', B),
                        s = yield fetch(d, Ce);
                    if (200 !== s.status && 304 !== s.status) {
                        let o = '';
                        try {
                            const u = yield s.json();
                            (null === (S = u.error) || void 0 === S
                                ? void 0
                                : S.message) && (o = u.error.message);
                        } catch (u) {}
                        throw fr.create('config-fetch-failed', {
                            httpStatus: s.status,
                            responseMessage: o,
                        });
                    }
                    return s.json();
                })).apply(this, arguments);
            }
            function _s(E) {
                return Fs.apply(this, arguments);
            }
            function Fs() {
                return (Fs = (0, j.Z)(function* (E, S = bo, B) {
                    const {
                        appId: ee,
                        apiKey: Ce,
                        measurementId: d,
                    } = E.options;
                    if (!ee) throw fr.create('no-app-id');
                    if (!Ce) {
                        if (d) return { measurementId: d, appId: ee };
                        throw fr.create('no-api-key');
                    }
                    const s = S.getThrottleMetadata(ee) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        },
                        o = new Go();
                    return (
                        setTimeout(
                            (0, j.Z)(function* () {
                                o.abort();
                            }),
                            void 0 !== B ? B : 6e4
                        ),
                        no({ appId: ee, apiKey: Ce, measurementId: d }, s, o, S)
                    );
                })).apply(this, arguments);
            }
            function no(E, S, B) {
                return Po.apply(this, arguments);
            }
            function Po() {
                return (Po = (0, j.Z)(function* (
                    E,
                    { throttleEndTimeMillis: S, backoffCount: B },
                    ee,
                    Ce = bo
                ) {
                    const { appId: d, measurementId: s } = E;
                    try {
                        yield xs(ee, S);
                    } catch (o) {
                        if (s)
                            return (
                                lr.warn(
                                    `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${s} provided in the "measurementId" field in the local Firebase config. [${o.message}]`
                                ),
                                { appId: d, measurementId: s }
                            );
                        throw o;
                    }
                    try {
                        const o = yield ss(E);
                        return Ce.deleteThrottleMetadata(d), o;
                    } catch (o) {
                        if (!ro(o)) {
                            if ((Ce.deleteThrottleMetadata(d), s))
                                return (
                                    lr.warn(
                                        `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${s} provided in the "measurementId" field in the local Firebase config. [${o.message}]`
                                    ),
                                    { appId: d, measurementId: s }
                                );
                            throw o;
                        }
                        const u =
                                503 === Number(o.customData.httpStatus)
                                    ? (0, H.$s)(B, Ce.intervalMillis, 30)
                                    : (0, H.$s)(B, Ce.intervalMillis),
                            v = {
                                throttleEndTimeMillis: Date.now() + u,
                                backoffCount: B + 1,
                            };
                        return (
                            Ce.setThrottleMetadata(d, v),
                            lr.debug(
                                `Calling attemptFetch again in ${u} millis`
                            ),
                            no(E, v, ee, Ce)
                        );
                    }
                })).apply(this, arguments);
            }
            function xs(E, S) {
                return new Promise((B, ee) => {
                    const Ce = Math.max(S - Date.now(), 0),
                        d = setTimeout(B, Ce);
                    E.addEventListener(() => {
                        clearTimeout(d),
                            ee(
                                fr.create('fetch-throttle', {
                                    throttleEndTimeMillis: S,
                                })
                            );
                    });
                });
            }
            function ro(E) {
                if (!(E instanceof H.ZR && E.customData)) return !1;
                const S = Number(E.customData.httpStatus);
                return 429 === S || 500 === S || 503 === S || 504 === S;
            }
            class Go {
                constructor() {
                    this.listeners = [];
                }
                addEventListener(S) {
                    this.listeners.push(S);
                }
                abort() {
                    this.listeners.forEach((S) => S());
                }
            }
            function vs() {
                return os.apply(this, arguments);
            }
            function os() {
                return (os = (0, j.Z)(function* () {
                    if (!(0, H.hl)())
                        return (
                            lr.warn(
                                fr.create('indexeddb-unavailable', {
                                    errorInfo:
                                        'IndexedDB is not available in this environment.',
                                }).message
                            ),
                            !1
                        );
                    try {
                        yield (0, H.eu)();
                    } catch (E) {
                        return (
                            lr.warn(
                                fr.create('indexeddb-unavailable', {
                                    errorInfo: E,
                                }).message
                            ),
                            !1
                        );
                    }
                    return !0;
                })).apply(this, arguments);
            }
            function g() {
                return (g = (0, j.Z)(function* (E, S, B, ee, Ce, d, s) {
                    var o;
                    const u = _s(E);
                    u
                        .then((ue) => {
                            (B[ue.measurementId] = ue.appId),
                                E.options.measurementId &&
                                    ue.measurementId !==
                                        E.options.measurementId &&
                                    lr.warn(
                                        `The measurement ID in the local Firebase config (${E.options.measurementId}) does not match the measurement ID fetched from the server (${ue.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                                    );
                        })
                        .catch((ue) => lr.error(ue)),
                        S.push(u);
                    const v = vs().then((ue) => {
                            if (ue) return ee.getId();
                        }),
                        [R, G] = yield Promise.all([u, v]);
                    Mo() || bi(d, R.measurementId), Ce('js', new Date());
                    const Y =
                        null !== (o = null == s ? void 0 : s.config) &&
                        void 0 !== o
                            ? o
                            : {};
                    return (
                        (Y.origin = 'firebase'),
                        (Y.update = !0),
                        null != G && (Y[Io] = G),
                        Ce('config', R.measurementId, Y),
                        R.measurementId
                    );
                })).apply(this, arguments);
            }
            class h {
                constructor(S) {
                    this.app = S;
                }
                _delete() {
                    return delete c[this.app.options.appId], Promise.resolve();
                }
            }
            let c = {},
                b = [];
            const M = {};
            let ce,
                He,
                k = 'dataLayer',
                Ct = !1;
            function Ln(E, S, B) {
                !(function Tt() {
                    const E = [];
                    if (
                        ((0, H.ru)() &&
                            E.push('This is a browser extension environment.'),
                        (0, H.zI)() || E.push('Cookies are not available.'),
                        E.length > 0)
                    ) {
                        const S = E.map((ee, Ce) => `(${Ce + 1}) ${ee}`).join(
                                ' '
                            ),
                            B = fr.create('invalid-analytics-context', {
                                errorInfo: S,
                            });
                        lr.warn(B.message);
                    }
                })();
                const ee = E.options.appId;
                if (!ee) throw fr.create('no-app-id');
                if (!E.options.apiKey) {
                    if (!E.options.measurementId) throw fr.create('no-api-key');
                    lr.warn(
                        `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${E.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
                    );
                }
                if (null != c[ee])
                    throw fr.create('already-exists', { id: ee });
                if (!Ct) {
                    !(function Oi(E) {
                        let S = [];
                        Array.isArray(window[E])
                            ? (S = window[E])
                            : (window[E] = S);
                    })(k);
                    const { wrappedGtag: d, gtagCore: s } = (function Eo(
                        E,
                        S,
                        B,
                        ee,
                        Ce
                    ) {
                        let d = function (...s) {
                            window[ee].push(arguments);
                        };
                        return (
                            window[Ce] &&
                                'function' == typeof window[Ce] &&
                                (d = window[Ce]),
                            (window[Ce] = (function Rs(E, S, B, ee) {
                                function d() {
                                    return (d = (0, j.Z)(function* (s, o, u) {
                                        try {
                                            'event' === s
                                                ? yield ms(E, S, B, o, u)
                                                : 'config' === s
                                                ? yield $o(E, S, B, ee, o, u)
                                                : E('set', o);
                                        } catch (v) {
                                            lr.error(v);
                                        }
                                    })).apply(this, arguments);
                                }
                                return function Ce(s, o, u) {
                                    return d.apply(this, arguments);
                                };
                            })(d, E, S, B)),
                            { gtagCore: d, wrappedGtag: window[Ce] }
                        );
                    })(c, b, M, k, 'gtag');
                    (He = d), (ce = s), (Ct = !0);
                }
                return (
                    (c[ee] = (function Ro(E, S, B, ee, Ce, d, s) {
                        return g.apply(this, arguments);
                    })(E, b, M, S, ce, k, B)),
                    new h(E)
                );
            }
            function Ji() {
                return (Ji = (0, j.Z)(function* (E, S, B, ee, Ce) {
                    if (Ce && Ce.global) E('event', B, ee);
                    else {
                        const d = yield S;
                        E(
                            'event',
                            B,
                            Object.assign(Object.assign({}, ee), { send_to: d })
                        );
                    }
                })).apply(this, arguments);
            }
            function Ls() {
                return sa.apply(this, arguments);
            }
            function sa() {
                return (sa = (0, j.Z)(function* () {
                    if ((0, H.ru)() || !(0, H.zI)() || !(0, H.hl)()) return !1;
                    try {
                        return yield (0, H.eu)();
                    } catch (E) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            const ja = '@firebase/analytics';
            !(function Lr() {
                (0, w._registerComponent)(
                    new te.wA(
                        Ms,
                        (S, { options: B }) =>
                            Ln(
                                S.getProvider('app').getImmediate(),
                                S.getProvider(
                                    'installations-internal'
                                ).getImmediate(),
                                B
                            ),
                        'PUBLIC'
                    )
                ),
                    (0, w._registerComponent)(
                        new te.wA(
                            'analytics-internal',
                            function E(S) {
                                try {
                                    const B = S.getProvider(Ms).getImmediate();
                                    return {
                                        logEvent: (ee, Ce, d) =>
                                            (function Ua(E, S, B, ee) {
                                                (E = (0, H.m9)(E)),
                                                    (function kn(
                                                        E,
                                                        S,
                                                        B,
                                                        ee,
                                                        Ce
                                                    ) {
                                                        return Ji.apply(
                                                            this,
                                                            arguments
                                                        );
                                                    })(
                                                        He,
                                                        c[E.app.options.appId],
                                                        S,
                                                        B,
                                                        ee
                                                    ).catch((Ce) =>
                                                        lr.error(Ce)
                                                    );
                                            })(B, ee, Ce, d),
                                    };
                                } catch (B) {
                                    throw fr.create(
                                        'interop-component-reg-failed',
                                        { reason: B }
                                    );
                                }
                            },
                            'PRIVATE'
                        )
                    ),
                    (0, w.registerVersion)(ja, '0.7.5'),
                    (0, w.registerVersion)(ja, '0.7.5', 'esm2017');
            })();
            var ks = _(233),
                oa = _(4986),
                vr = _(8505),
                xo = _(9468),
                Bs = _(5363);
            const vl = new f.GfV('7.2.0'),
                Qr = '__angularfire_symbol__analyticsIsSupported',
                Ko = '__angularfire_symbol__remoteConfigIsSupported',
                io = '__angularfire_symbol__messagingIsSupported';
            function El(E, S, B) {
                if (S) {
                    if (1 === S.length) return S[0];
                    const d = S.filter((s) => s.app === B);
                    if (1 === d.length) return d[0];
                }
                return B.container
                    .getProvider(E)
                    .getImmediate({ optional: !0 });
            }
            globalThis[Qr] ||
                (globalThis[Qr] = Ls().then(
                    (E) =>
                        (globalThis.__angularfire_symbol__analyticsIsSupportedValue =
                            E)
                )),
                globalThis[io] ||
                    (globalThis[io] = Is().then(
                        (E) =>
                            (globalThis.__angularfire_symbol__messagingIsSupportedValue =
                                E)
                    )),
                globalThis[Ko] ||
                    (globalThis[Ko] = oi().then(
                        (E) =>
                            (globalThis.__angularfire_symbol__remoteConfigIsSupportedValue =
                                E)
                    ));
            const aa = (E, S) => {
                const B = S ? [S] : (0, P.C6)(),
                    ee = [];
                return (
                    B.forEach((Ce) => {
                        Ce.container.getProvider(E).instances.forEach((s) => {
                            ee.includes(s) || ee.push(s);
                        });
                    }),
                    ee
                );
            };
            function kr() {}
            class so {
                constructor(S, B = ks.N) {
                    (this.zone = S), (this.delegate = B);
                }
                now() {
                    return this.delegate.now();
                }
                schedule(S, B, ee) {
                    const Ce = this.zone;
                    return this.delegate.schedule(
                        function (s) {
                            Ce.runGuarded(() => {
                                S.apply(this, [s]);
                            });
                        },
                        B,
                        ee
                    );
                }
            }
            class Ds {
                constructor(S) {
                    (this.zone = S), (this.task = null);
                }
                call(S, B) {
                    const ee = this.unscheduleTask.bind(this);
                    return (
                        (this.task = this.zone.run(() =>
                            Zone.current.scheduleMacroTask(
                                'firebaseZoneBlock',
                                kr,
                                {},
                                kr,
                                kr
                            )
                        )),
                        B.pipe((0, vr.b)({ next: ee, complete: ee, error: ee }))
                            .subscribe(S)
                            .add(ee)
                    );
                }
                unscheduleTask() {
                    setTimeout(() => {
                        null != this.task &&
                            'scheduled' === this.task.state &&
                            (this.task.invoke(), (this.task = null));
                    }, 10);
                }
            }
            let Ha = (() => {
                class E {
                    constructor(B) {
                        (this.ngZone = B),
                            (this.outsideAngular = B.runOutsideAngular(
                                () => new so(Zone.current)
                            )),
                            (this.insideAngular = B.run(
                                () => new so(Zone.current, oa.z)
                            )),
                            globalThis.ɵAngularFireScheduler ||
                                (globalThis.ɵAngularFireScheduler = this);
                    }
                }
                return (
                    (E.ɵfac = function (B) {
                        return new (B || E)(f.LFG(f.R0b));
                    }),
                    (E.ɵprov = f.Yz7({
                        token: E,
                        factory: E.ɵfac,
                        providedIn: 'root',
                    })),
                    E
                );
            })();
            function Cs() {
                const E = globalThis.ɵAngularFireScheduler;
                if (!E)
                    throw new Error(
                        "Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported)."
                    );
                return E;
            }
            function la(E) {
                return (
                    Cs(),
                    (function ua(E) {
                        return function (B) {
                            return (B = B.lift(new Ds(E.ngZone))).pipe(
                                (0, xo.R)(E.outsideAngular),
                                (0, Bs.Q)(E.insideAngular)
                            );
                        };
                    })(Cs())(E)
                );
            }
        },
        2090: (pe, z, _) => {
            'use strict';
            _.d(z, {
                BH: () => Ae,
                LL: () => De,
                ZR: () => Ne,
                zI: () => Se,
                US: () => te,
                tV: () => K,
                $s: () => jt,
                r3: () => Rn,
                ne: () => Fn,
                vZ: () => nn,
                ZB: () => U,
                pd: () => cr,
                m9: () => wr,
                z$: () => Re,
                jU: () => Q,
                ru: () => me,
                xb: () => Zt,
                w1: () => oe,
                hl: () => qe,
                uI: () => je,
                UG: () => ae,
                b$: () => I,
                xO: () => Wn,
                zd: () => Qn,
                eu: () => re,
            });
            const te = {
                    byteToCharMap_: null,
                    charToByteMap_: null,
                    byteToCharMapWebSafe_: null,
                    charToByteMapWebSafe_: null,
                    ENCODED_VALS_BASE:
                        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
                    get ENCODED_VALS() {
                        return this.ENCODED_VALS_BASE + '+/=';
                    },
                    get ENCODED_VALS_WEBSAFE() {
                        return this.ENCODED_VALS_BASE + '-_.';
                    },
                    HAS_NATIVE_SUPPORT: 'function' == typeof atob,
                    encodeByteArray(se, de) {
                        if (!Array.isArray(se))
                            throw Error(
                                'encodeByteArray takes an array as a parameter'
                            );
                        this.init_();
                        const le = de
                                ? this.byteToCharMapWebSafe_
                                : this.byteToCharMap_,
                            $e = [];
                        for (let Te = 0; Te < se.length; Te += 3) {
                            const lt = se[Te],
                                ye = Te + 1 < se.length,
                                Le = ye ? se[Te + 1] : 0,
                                Ue = Te + 2 < se.length,
                                Qe = Ue ? se[Te + 2] : 0;
                            let Kt = ((15 & Le) << 2) | (Qe >> 6),
                                qt = 63 & Qe;
                            Ue || ((qt = 64), ye || (Kt = 64)),
                                $e.push(
                                    le[lt >> 2],
                                    le[((3 & lt) << 4) | (Le >> 4)],
                                    le[Kt],
                                    le[qt]
                                );
                        }
                        return $e.join('');
                    },
                    encodeString(se, de) {
                        return this.HAS_NATIVE_SUPPORT && !de
                            ? btoa(se)
                            : this.encodeByteArray(
                                  (function (se) {
                                      const de = [];
                                      let le = 0;
                                      for (let $e = 0; $e < se.length; $e++) {
                                          let Te = se.charCodeAt($e);
                                          Te < 128
                                              ? (de[le++] = Te)
                                              : Te < 2048
                                              ? ((de[le++] = (Te >> 6) | 192),
                                                (de[le++] = (63 & Te) | 128))
                                              : 55296 == (64512 & Te) &&
                                                $e + 1 < se.length &&
                                                56320 ==
                                                    (64512 &
                                                        se.charCodeAt($e + 1))
                                              ? ((Te =
                                                    65536 +
                                                    ((1023 & Te) << 10) +
                                                    (1023 &
                                                        se.charCodeAt(++$e))),
                                                (de[le++] = (Te >> 18) | 240),
                                                (de[le++] =
                                                    ((Te >> 12) & 63) | 128),
                                                (de[le++] =
                                                    ((Te >> 6) & 63) | 128),
                                                (de[le++] = (63 & Te) | 128))
                                              : ((de[le++] = (Te >> 12) | 224),
                                                (de[le++] =
                                                    ((Te >> 6) & 63) | 128),
                                                (de[le++] = (63 & Te) | 128));
                                      }
                                      return de;
                                  })(se),
                                  de
                              );
                    },
                    decodeString(se, de) {
                        return this.HAS_NATIVE_SUPPORT && !de
                            ? atob(se)
                            : (function (se) {
                                  const de = [];
                                  let le = 0,
                                      $e = 0;
                                  for (; le < se.length; ) {
                                      const Te = se[le++];
                                      if (Te < 128)
                                          de[$e++] = String.fromCharCode(Te);
                                      else if (Te > 191 && Te < 224) {
                                          const lt = se[le++];
                                          de[$e++] = String.fromCharCode(
                                              ((31 & Te) << 6) | (63 & lt)
                                          );
                                      } else if (Te > 239 && Te < 365) {
                                          const Ue =
                                              (((7 & Te) << 18) |
                                                  ((63 & se[le++]) << 12) |
                                                  ((63 & se[le++]) << 6) |
                                                  (63 & se[le++])) -
                                              65536;
                                          (de[$e++] = String.fromCharCode(
                                              55296 + (Ue >> 10)
                                          )),
                                              (de[$e++] = String.fromCharCode(
                                                  56320 + (1023 & Ue)
                                              ));
                                      } else {
                                          const lt = se[le++],
                                              ye = se[le++];
                                          de[$e++] = String.fromCharCode(
                                              ((15 & Te) << 12) |
                                                  ((63 & lt) << 6) |
                                                  (63 & ye)
                                          );
                                      }
                                  }
                                  return de.join('');
                              })(this.decodeStringToByteArray(se, de));
                    },
                    decodeStringToByteArray(se, de) {
                        this.init_();
                        const le = de
                                ? this.charToByteMapWebSafe_
                                : this.charToByteMap_,
                            $e = [];
                        for (let Te = 0; Te < se.length; ) {
                            const lt = le[se.charAt(Te++)],
                                Le = Te < se.length ? le[se.charAt(Te)] : 0;
                            ++Te;
                            const Qe = Te < se.length ? le[se.charAt(Te)] : 64;
                            ++Te;
                            const rt = Te < se.length ? le[se.charAt(Te)] : 64;
                            if (
                                (++Te,
                                null == lt ||
                                    null == Le ||
                                    null == Qe ||
                                    null == rt)
                            )
                                throw Error();
                            $e.push((lt << 2) | (Le >> 4)),
                                64 !== Qe &&
                                    ($e.push(((Le << 4) & 240) | (Qe >> 2)),
                                    64 !== rt &&
                                        $e.push(((Qe << 6) & 192) | rt));
                        }
                        return $e;
                    },
                    init_() {
                        if (!this.byteToCharMap_) {
                            (this.byteToCharMap_ = {}),
                                (this.charToByteMap_ = {}),
                                (this.byteToCharMapWebSafe_ = {}),
                                (this.charToByteMapWebSafe_ = {});
                            for (
                                let se = 0;
                                se < this.ENCODED_VALS.length;
                                se++
                            )
                                (this.byteToCharMap_[se] =
                                    this.ENCODED_VALS.charAt(se)),
                                    (this.charToByteMap_[
                                        this.byteToCharMap_[se]
                                    ] = se),
                                    (this.byteToCharMapWebSafe_[se] =
                                        this.ENCODED_VALS_WEBSAFE.charAt(se)),
                                    (this.charToByteMapWebSafe_[
                                        this.byteToCharMapWebSafe_[se]
                                    ] = se),
                                    se >= this.ENCODED_VALS_BASE.length &&
                                        ((this.charToByteMap_[
                                            this.ENCODED_VALS_WEBSAFE.charAt(se)
                                        ] = se),
                                        (this.charToByteMapWebSafe_[
                                            this.ENCODED_VALS.charAt(se)
                                        ] = se));
                        }
                    },
                },
                K = function (se) {
                    try {
                        return te.decodeString(se, !0);
                    } catch (de) {
                        console.error('base64Decode failed: ', de);
                    }
                    return null;
                };
            function U(se, de) {
                if (!(de instanceof Object)) return de;
                switch (de.constructor) {
                    case Date:
                        return new Date(de.getTime());
                    case Object:
                        void 0 === se && (se = {});
                        break;
                    case Array:
                        se = [];
                        break;
                    default:
                        return de;
                }
                for (const le in de)
                    !de.hasOwnProperty(le) ||
                        !ie(le) ||
                        (se[le] = U(se[le], de[le]));
                return se;
            }
            function ie(se) {
                return '__proto__' !== se;
            }
            class Ae {
                constructor() {
                    (this.reject = () => {}),
                        (this.resolve = () => {}),
                        (this.promise = new Promise((de, le) => {
                            (this.resolve = de), (this.reject = le);
                        }));
                }
                wrapCallback(de) {
                    return (le, $e) => {
                        le ? this.reject(le) : this.resolve($e),
                            'function' == typeof de &&
                                (this.promise.catch(() => {}),
                                1 === de.length ? de(le) : de(le, $e));
                    };
                }
            }
            function Re() {
                return 'undefined' != typeof navigator &&
                    'string' == typeof navigator.userAgent
                    ? navigator.userAgent
                    : '';
            }
            function je() {
                return (
                    'undefined' != typeof window &&
                    !!(window.cordova || window.phonegap || window.PhoneGap) &&
                    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(
                        Re()
                    )
                );
            }
            function ae() {
                try {
                    return (
                        '[object process]' ===
                        Object.prototype.toString.call(global.process)
                    );
                } catch (se) {
                    return !1;
                }
            }
            function Q() {
                return 'object' == typeof self && self.self === self;
            }
            function me() {
                const se =
                    'object' == typeof chrome
                        ? chrome.runtime
                        : 'object' == typeof browser
                        ? browser.runtime
                        : void 0;
                return 'object' == typeof se && void 0 !== se.id;
            }
            function I() {
                return (
                    'object' == typeof navigator &&
                    'ReactNative' === navigator.product
                );
            }
            function oe() {
                const se = Re();
                return se.indexOf('MSIE ') >= 0 || se.indexOf('Trident/') >= 0;
            }
            function qe() {
                return 'object' == typeof indexedDB;
            }
            function re() {
                return new Promise((se, de) => {
                    try {
                        let le = !0;
                        const $e =
                                'validate-browser-context-for-indexeddb-analytics-module',
                            Te = self.indexedDB.open($e);
                        (Te.onsuccess = () => {
                            Te.result.close(),
                                le || self.indexedDB.deleteDatabase($e),
                                se(!0);
                        }),
                            (Te.onupgradeneeded = () => {
                                le = !1;
                            }),
                            (Te.onerror = () => {
                                var lt;
                                de(
                                    (null === (lt = Te.error) || void 0 === lt
                                        ? void 0
                                        : lt.message) || ''
                                );
                            });
                    } catch (le) {
                        de(le);
                    }
                });
            }
            function Se() {
                return !(
                    'undefined' == typeof navigator || !navigator.cookieEnabled
                );
            }
            class Ne extends Error {
                constructor(de, le, $e) {
                    super(le),
                        (this.code = de),
                        (this.customData = $e),
                        (this.name = 'FirebaseError'),
                        Object.setPrototypeOf(this, Ne.prototype),
                        Error.captureStackTrace &&
                            Error.captureStackTrace(this, De.prototype.create);
                }
            }
            class De {
                constructor(de, le, $e) {
                    (this.service = de),
                        (this.serviceName = le),
                        (this.errors = $e);
                }
                create(de, ...le) {
                    const $e = le[0] || {},
                        Te = `${this.service}/${de}`,
                        lt = this.errors[de],
                        ye = lt
                            ? (function ut(se, de) {
                                  return se.replace(Bt, (le, $e) => {
                                      const Te = de[$e];
                                      return null != Te
                                          ? String(Te)
                                          : `<${$e}?>`;
                                  });
                              })(lt, $e)
                            : 'Error';
                    return new Ne(
                        Te,
                        `${this.serviceName}: ${ye} (${Te}).`,
                        $e
                    );
                }
            }
            const Bt = /\{\$([^}]+)}/g;
            function Rn(se, de) {
                return Object.prototype.hasOwnProperty.call(se, de);
            }
            function Zt(se) {
                for (const de in se)
                    if (Object.prototype.hasOwnProperty.call(se, de)) return !1;
                return !0;
            }
            function nn(se, de) {
                if (se === de) return !0;
                const le = Object.keys(se),
                    $e = Object.keys(de);
                for (const Te of le) {
                    if (!$e.includes(Te)) return !1;
                    const lt = se[Te],
                        ye = de[Te];
                    if (Gn(lt) && Gn(ye)) {
                        if (!nn(lt, ye)) return !1;
                    } else if (lt !== ye) return !1;
                }
                for (const Te of $e) if (!le.includes(Te)) return !1;
                return !0;
            }
            function Gn(se) {
                return null !== se && 'object' == typeof se;
            }
            function Wn(se) {
                const de = [];
                for (const [le, $e] of Object.entries(se))
                    Array.isArray($e)
                        ? $e.forEach((Te) => {
                              de.push(
                                  encodeURIComponent(le) +
                                      '=' +
                                      encodeURIComponent(Te)
                              );
                          })
                        : de.push(
                              encodeURIComponent(le) +
                                  '=' +
                                  encodeURIComponent($e)
                          );
                return de.length ? '&' + de.join('&') : '';
            }
            function Qn(se) {
                const de = {};
                return (
                    se
                        .replace(/^\?/, '')
                        .split('&')
                        .forEach(($e) => {
                            if ($e) {
                                const [Te, lt] = $e.split('=');
                                de[decodeURIComponent(Te)] =
                                    decodeURIComponent(lt);
                            }
                        }),
                    de
                );
            }
            function cr(se) {
                const de = se.indexOf('?');
                if (!de) return '';
                const le = se.indexOf('#', de);
                return se.substring(de, le > 0 ? le : void 0);
            }
            function Fn(se, de) {
                const le = new yt(se, de);
                return le.subscribe.bind(le);
            }
            class yt {
                constructor(de, le) {
                    (this.observers = []),
                        (this.unsubscribes = []),
                        (this.observerCount = 0),
                        (this.task = Promise.resolve()),
                        (this.finalized = !1),
                        (this.onNoObservers = le),
                        this.task
                            .then(() => {
                                de(this);
                            })
                            .catch(($e) => {
                                this.error($e);
                            });
                }
                next(de) {
                    this.forEachObserver((le) => {
                        le.next(de);
                    });
                }
                error(de) {
                    this.forEachObserver((le) => {
                        le.error(de);
                    }),
                        this.close(de);
                }
                complete() {
                    this.forEachObserver((de) => {
                        de.complete();
                    }),
                        this.close();
                }
                subscribe(de, le, $e) {
                    let Te;
                    if (void 0 === de && void 0 === le && void 0 === $e)
                        throw new Error('Missing Observer.');
                    (Te = (function In(se, de) {
                        if ('object' != typeof se || null === se) return !1;
                        for (const le of de)
                            if (le in se && 'function' == typeof se[le])
                                return !0;
                        return !1;
                    })(de, ['next', 'error', 'complete'])
                        ? de
                        : { next: de, error: le, complete: $e }),
                        void 0 === Te.next && (Te.next = rn),
                        void 0 === Te.error && (Te.error = rn),
                        void 0 === Te.complete && (Te.complete = rn);
                    const lt = this.unsubscribeOne.bind(
                        this,
                        this.observers.length
                    );
                    return (
                        this.finalized &&
                            this.task.then(() => {
                                try {
                                    this.finalError
                                        ? Te.error(this.finalError)
                                        : Te.complete();
                                } catch (ye) {}
                            }),
                        this.observers.push(Te),
                        lt
                    );
                }
                unsubscribeOne(de) {
                    void 0 === this.observers ||
                        void 0 === this.observers[de] ||
                        (delete this.observers[de],
                        (this.observerCount -= 1),
                        0 === this.observerCount &&
                            void 0 !== this.onNoObservers &&
                            this.onNoObservers(this));
                }
                forEachObserver(de) {
                    if (!this.finalized)
                        for (let le = 0; le < this.observers.length; le++)
                            this.sendOne(le, de);
                }
                sendOne(de, le) {
                    this.task.then(() => {
                        if (
                            void 0 !== this.observers &&
                            void 0 !== this.observers[de]
                        )
                            try {
                                le(this.observers[de]);
                            } catch ($e) {
                                'undefined' != typeof console &&
                                    console.error &&
                                    console.error($e);
                            }
                    });
                }
                close(de) {
                    this.finalized ||
                        ((this.finalized = !0),
                        void 0 !== de && (this.finalError = de),
                        this.task.then(() => {
                            (this.observers = void 0),
                                (this.onNoObservers = void 0);
                        }));
                }
            }
            function rn() {}
            function jt(se, de = 1e3, le = 2) {
                const $e = de * Math.pow(le, se),
                    Te = Math.round(0.5 * $e * (Math.random() - 0.5) * 2);
                return Math.min(144e5, $e + Te);
            }
            function wr(se) {
                return se && se._delegate ? se._delegate : se;
            }
        },
        8409: (pe, z, _) => {
            'use strict';
            var f = _(9808),
                P = _(5e3);
            class j extends f.w_ {
                constructor() {
                    super(...arguments), (this.supportsDOMEvents = !0);
                }
            }
            class w extends j {
                static makeCurrent() {
                    (0, f.HT)(new w());
                }
                onAndCancel(s, o, u) {
                    return (
                        s.addEventListener(o, u, !1),
                        () => {
                            s.removeEventListener(o, u, !1);
                        }
                    );
                }
                dispatchEvent(s, o) {
                    s.dispatchEvent(o);
                }
                remove(s) {
                    s.parentNode && s.parentNode.removeChild(s);
                }
                createElement(s, o) {
                    return (o = o || this.getDefaultDocument()).createElement(
                        s
                    );
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument(
                        'fakeTitle'
                    );
                }
                getDefaultDocument() {
                    return document;
                }
                isElementNode(s) {
                    return s.nodeType === Node.ELEMENT_NODE;
                }
                isShadowRoot(s) {
                    return s instanceof DocumentFragment;
                }
                getGlobalEventTarget(s, o) {
                    return 'window' === o
                        ? window
                        : 'document' === o
                        ? s
                        : 'body' === o
                        ? s.body
                        : null;
                }
                getBaseHref(s) {
                    const o = (function te() {
                        return (
                            (H = H || document.querySelector('base')),
                            H ? H.getAttribute('href') : null
                        );
                    })();
                    return null == o
                        ? null
                        : (function ne(d) {
                              (X = X || document.createElement('a')),
                                  X.setAttribute('href', d);
                              const s = X.pathname;
                              return '/' === s.charAt(0) ? s : `/${s}`;
                          })(o);
                }
                resetBaseElement() {
                    H = null;
                }
                getUserAgent() {
                    return window.navigator.userAgent;
                }
                getCookie(s) {
                    return (0, f.Mx)(document.cookie, s);
                }
            }
            let X,
                H = null;
            const K = new P.OlP('TRANSITION_ID'),
                U = [
                    {
                        provide: P.ip1,
                        useFactory: function $(d, s, o) {
                            return () => {
                                o.get(P.CZH).donePromise.then(() => {
                                    const u = (0, f.q)(),
                                        v = s.querySelectorAll(
                                            `style[ng-transition="${d}"]`
                                        );
                                    for (let R = 0; R < v.length; R++)
                                        u.remove(v[R]);
                                });
                            };
                        },
                        deps: [K, f.K0, P.zs3],
                        multi: !0,
                    },
                ];
            class ie {
                static init() {
                    (0, P.VLi)(new ie());
                }
                addToWindow(s) {
                    (P.dqk.getAngularTestability = (u, v = !0) => {
                        const R = s.findTestabilityInTree(u, v);
                        if (null == R)
                            throw new Error(
                                'Could not find testability for element.'
                            );
                        return R;
                    }),
                        (P.dqk.getAllAngularTestabilities = () =>
                            s.getAllTestabilities()),
                        (P.dqk.getAllAngularRootElements = () =>
                            s.getAllRootElements()),
                        P.dqk.frameworkStabilizers ||
                            (P.dqk.frameworkStabilizers = []),
                        P.dqk.frameworkStabilizers.push((u) => {
                            const v = P.dqk.getAllAngularTestabilities();
                            let R = v.length,
                                G = !1;
                            const Y = function (ue) {
                                (G = G || ue), R--, 0 == R && u(G);
                            };
                            v.forEach(function (ue) {
                                ue.whenStable(Y);
                            });
                        });
                }
                findTestabilityInTree(s, o, u) {
                    if (null == o) return null;
                    const v = s.getTestability(o);
                    return null != v
                        ? v
                        : u
                        ? (0, f.q)().isShadowRoot(o)
                            ? this.findTestabilityInTree(s, o.host, !0)
                            : this.findTestabilityInTree(s, o.parentElement, !0)
                        : null;
                }
            }
            let Ae = (() => {
                class d {
                    build() {
                        return new XMLHttpRequest();
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)();
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            const be = new P.OlP('EventManagerPlugins');
            let Re = (() => {
                class d {
                    constructor(o, u) {
                        (this._zone = u),
                            (this._eventNameToPlugin = new Map()),
                            o.forEach((v) => (v.manager = this)),
                            (this._plugins = o.slice().reverse());
                    }
                    addEventListener(o, u, v) {
                        return this._findPluginFor(u).addEventListener(o, u, v);
                    }
                    addGlobalEventListener(o, u, v) {
                        return this._findPluginFor(u).addGlobalEventListener(
                            o,
                            u,
                            v
                        );
                    }
                    getZone() {
                        return this._zone;
                    }
                    _findPluginFor(o) {
                        const u = this._eventNameToPlugin.get(o);
                        if (u) return u;
                        const v = this._plugins;
                        for (let R = 0; R < v.length; R++) {
                            const G = v[R];
                            if (G.supports(o))
                                return this._eventNameToPlugin.set(o, G), G;
                        }
                        throw new Error(
                            `No event manager plugin found for event ${o}`
                        );
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(be), P.LFG(P.R0b));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            class je {
                constructor(s) {
                    this._doc = s;
                }
                addGlobalEventListener(s, o, u) {
                    const v = (0, f.q)().getGlobalEventTarget(this._doc, s);
                    if (!v)
                        throw new Error(
                            `Unsupported event target ${v} for event ${o}`
                        );
                    return this.addEventListener(v, o, u);
                }
            }
            let ae = (() => {
                    class d {
                        constructor() {
                            this._stylesSet = new Set();
                        }
                        addStyles(o) {
                            const u = new Set();
                            o.forEach((v) => {
                                this._stylesSet.has(v) ||
                                    (this._stylesSet.add(v), u.add(v));
                            }),
                                this.onStylesAdded(u);
                        }
                        onStylesAdded(o) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet);
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)();
                        }),
                        (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                        d
                    );
                })(),
                Q = (() => {
                    class d extends ae {
                        constructor(o) {
                            super(),
                                (this._doc = o),
                                (this._hostNodes = new Map()),
                                this._hostNodes.set(o.head, []);
                        }
                        _addStylesToHost(o, u, v) {
                            o.forEach((R) => {
                                const G = this._doc.createElement('style');
                                (G.textContent = R), v.push(u.appendChild(G));
                            });
                        }
                        addHost(o) {
                            const u = [];
                            this._addStylesToHost(this._stylesSet, o, u),
                                this._hostNodes.set(o, u);
                        }
                        removeHost(o) {
                            const u = this._hostNodes.get(o);
                            u && u.forEach(me), this._hostNodes.delete(o);
                        }
                        onStylesAdded(o) {
                            this._hostNodes.forEach((u, v) => {
                                this._addStylesToHost(o, v, u);
                            });
                        }
                        ngOnDestroy() {
                            this._hostNodes.forEach((o) => o.forEach(me));
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)(P.LFG(f.K0));
                        }),
                        (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                        d
                    );
                })();
            function me(d) {
                (0, f.q)().remove(d);
            }
            const I = {
                    svg: 'http://www.w3.org/2000/svg',
                    xhtml: 'http://www.w3.org/1999/xhtml',
                    xlink: 'http://www.w3.org/1999/xlink',
                    xml: 'http://www.w3.org/XML/1998/namespace',
                    xmlns: 'http://www.w3.org/2000/xmlns/',
                    math: 'http://www.w3.org/1998/MathML/',
                },
                F = /%COMP%/g,
                q = '%COMP%',
                Pe = `_nghost-${q}`,
                Be = `_ngcontent-${q}`;
            function Se(d, s, o) {
                for (let u = 0; u < s.length; u++) {
                    let v = s[u];
                    Array.isArray(v)
                        ? Se(d, v, o)
                        : ((v = v.replace(F, d)), o.push(v));
                }
                return o;
            }
            function Ee(d) {
                return (s) => {
                    if ('__ngUnwrap__' === s) return d;
                    !1 === d(s) && (s.preventDefault(), (s.returnValue = !1));
                };
            }
            let Ne = (() => {
                class d {
                    constructor(o, u, v) {
                        (this.eventManager = o),
                            (this.sharedStylesHost = u),
                            (this.appId = v),
                            (this.rendererByCompId = new Map()),
                            (this.defaultRenderer = new De(o));
                    }
                    createRenderer(o, u) {
                        if (!o || !u) return this.defaultRenderer;
                        switch (u.encapsulation) {
                            case P.ifc.Emulated: {
                                let v = this.rendererByCompId.get(u.id);
                                return (
                                    v ||
                                        ((v = new gn(
                                            this.eventManager,
                                            this.sharedStylesHost,
                                            u,
                                            this.appId
                                        )),
                                        this.rendererByCompId.set(u.id, v)),
                                    v.applyToHost(o),
                                    v
                                );
                            }
                            case 1:
                            case P.ifc.ShadowDom:
                                return new ot(
                                    this.eventManager,
                                    this.sharedStylesHost,
                                    o,
                                    u
                                );
                            default:
                                if (!this.rendererByCompId.has(u.id)) {
                                    const v = Se(u.id, u.styles, []);
                                    this.sharedStylesHost.addStyles(v),
                                        this.rendererByCompId.set(
                                            u.id,
                                            this.defaultRenderer
                                        );
                                }
                                return this.defaultRenderer;
                        }
                    }
                    begin() {}
                    end() {}
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(Re), P.LFG(Q), P.LFG(P.AFp));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            class De {
                constructor(s) {
                    (this.eventManager = s),
                        (this.data = Object.create(null)),
                        (this.destroyNode = null);
                }
                destroy() {}
                createElement(s, o) {
                    return o
                        ? document.createElementNS(I[o] || o, s)
                        : document.createElement(s);
                }
                createComment(s) {
                    return document.createComment(s);
                }
                createText(s) {
                    return document.createTextNode(s);
                }
                appendChild(s, o) {
                    s.appendChild(o);
                }
                insertBefore(s, o, u) {
                    s && s.insertBefore(o, u);
                }
                removeChild(s, o) {
                    s && s.removeChild(o);
                }
                selectRootElement(s, o) {
                    let u =
                        'string' == typeof s ? document.querySelector(s) : s;
                    if (!u)
                        throw new Error(
                            `The selector "${s}" did not match any elements`
                        );
                    return o || (u.textContent = ''), u;
                }
                parentNode(s) {
                    return s.parentNode;
                }
                nextSibling(s) {
                    return s.nextSibling;
                }
                setAttribute(s, o, u, v) {
                    if (v) {
                        o = v + ':' + o;
                        const R = I[v];
                        R ? s.setAttributeNS(R, o, u) : s.setAttribute(o, u);
                    } else s.setAttribute(o, u);
                }
                removeAttribute(s, o, u) {
                    if (u) {
                        const v = I[u];
                        v
                            ? s.removeAttributeNS(v, o)
                            : s.removeAttribute(`${u}:${o}`);
                    } else s.removeAttribute(o);
                }
                addClass(s, o) {
                    s.classList.add(o);
                }
                removeClass(s, o) {
                    s.classList.remove(o);
                }
                setStyle(s, o, u, v) {
                    v & (P.JOm.DashCase | P.JOm.Important)
                        ? s.style.setProperty(
                              o,
                              u,
                              v & P.JOm.Important ? 'important' : ''
                          )
                        : (s.style[o] = u);
                }
                removeStyle(s, o, u) {
                    u & P.JOm.DashCase
                        ? s.style.removeProperty(o)
                        : (s.style[o] = '');
                }
                setProperty(s, o, u) {
                    s[o] = u;
                }
                setValue(s, o) {
                    s.nodeValue = o;
                }
                listen(s, o, u) {
                    return 'string' == typeof s
                        ? this.eventManager.addGlobalEventListener(s, o, Ee(u))
                        : this.eventManager.addEventListener(s, o, Ee(u));
                }
            }
            class gn extends De {
                constructor(s, o, u, v) {
                    super(s), (this.component = u);
                    const R = Se(v + '-' + u.id, u.styles, []);
                    o.addStyles(R),
                        (this.contentAttr = (function qe(d) {
                            return Be.replace(F, d);
                        })(v + '-' + u.id)),
                        (this.hostAttr = (function re(d) {
                            return Pe.replace(F, d);
                        })(v + '-' + u.id));
                }
                applyToHost(s) {
                    super.setAttribute(s, this.hostAttr, '');
                }
                createElement(s, o) {
                    const u = super.createElement(s, o);
                    return super.setAttribute(u, this.contentAttr, ''), u;
                }
            }
            class ot extends De {
                constructor(s, o, u, v) {
                    super(s),
                        (this.sharedStylesHost = o),
                        (this.hostEl = u),
                        (this.shadowRoot = u.attachShadow({ mode: 'open' })),
                        this.sharedStylesHost.addHost(this.shadowRoot);
                    const R = Se(v.id, v.styles, []);
                    for (let G = 0; G < R.length; G++) {
                        const Y = document.createElement('style');
                        (Y.textContent = R[G]), this.shadowRoot.appendChild(Y);
                    }
                }
                nodeOrShadowRoot(s) {
                    return s === this.hostEl ? this.shadowRoot : s;
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot);
                }
                appendChild(s, o) {
                    return super.appendChild(this.nodeOrShadowRoot(s), o);
                }
                insertBefore(s, o, u) {
                    return super.insertBefore(this.nodeOrShadowRoot(s), o, u);
                }
                removeChild(s, o) {
                    return super.removeChild(this.nodeOrShadowRoot(s), o);
                }
                parentNode(s) {
                    return this.nodeOrShadowRoot(
                        super.parentNode(this.nodeOrShadowRoot(s))
                    );
                }
            }
            let st = (() => {
                class d extends je {
                    constructor(o) {
                        super(o);
                    }
                    supports(o) {
                        return !0;
                    }
                    addEventListener(o, u, v) {
                        return (
                            o.addEventListener(u, v, !1),
                            () => this.removeEventListener(o, u, v)
                        );
                    }
                    removeEventListener(o, u, v) {
                        return o.removeEventListener(u, v);
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(f.K0));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            const un = ['alt', 'control', 'meta', 'shift'],
                Ht = {
                    '\b': 'Backspace',
                    '\t': 'Tab',
                    '\x7f': 'Delete',
                    '\x1b': 'Escape',
                    Del: 'Delete',
                    Esc: 'Escape',
                    Left: 'ArrowLeft',
                    Right: 'ArrowRight',
                    Up: 'ArrowUp',
                    Down: 'ArrowDown',
                    Menu: 'ContextMenu',
                    Scroll: 'ScrollLock',
                    Win: 'OS',
                },
                ct = {
                    A: '1',
                    B: '2',
                    C: '3',
                    D: '4',
                    E: '5',
                    F: '6',
                    G: '7',
                    H: '8',
                    I: '9',
                    J: '*',
                    K: '+',
                    M: '-',
                    N: '.',
                    O: '/',
                    '`': '0',
                    '\x90': 'NumLock',
                },
                Rn = {
                    alt: (d) => d.altKey,
                    control: (d) => d.ctrlKey,
                    meta: (d) => d.metaKey,
                    shift: (d) => d.shiftKey,
                };
            let mn = (() => {
                class d extends je {
                    constructor(o) {
                        super(o);
                    }
                    supports(o) {
                        return null != d.parseEventName(o);
                    }
                    addEventListener(o, u, v) {
                        const R = d.parseEventName(u),
                            G = d.eventCallback(
                                R.fullKey,
                                v,
                                this.manager.getZone()
                            );
                        return this.manager
                            .getZone()
                            .runOutsideAngular(() =>
                                (0, f.q)().onAndCancel(o, R.domEventName, G)
                            );
                    }
                    static parseEventName(o) {
                        const u = o.toLowerCase().split('.'),
                            v = u.shift();
                        if (
                            0 === u.length ||
                            ('keydown' !== v && 'keyup' !== v)
                        )
                            return null;
                        const R = d._normalizeKey(u.pop());
                        let G = '';
                        if (
                            (un.forEach((ue) => {
                                const Ve = u.indexOf(ue);
                                Ve > -1 && (u.splice(Ve, 1), (G += ue + '.'));
                            }),
                            (G += R),
                            0 != u.length || 0 === R.length)
                        )
                            return null;
                        const Y = {};
                        return (Y.domEventName = v), (Y.fullKey = G), Y;
                    }
                    static getEventFullKey(o) {
                        let u = '',
                            v = (function Zt(d) {
                                let s = d.key;
                                if (null == s) {
                                    if (((s = d.keyIdentifier), null == s))
                                        return 'Unidentified';
                                    s.startsWith('U+') &&
                                        ((s = String.fromCharCode(
                                            parseInt(s.substring(2), 16)
                                        )),
                                        3 === d.location &&
                                            ct.hasOwnProperty(s) &&
                                            (s = ct[s]));
                                }
                                return Ht[s] || s;
                            })(o);
                        return (
                            (v = v.toLowerCase()),
                            ' ' === v
                                ? (v = 'space')
                                : '.' === v && (v = 'dot'),
                            un.forEach((R) => {
                                R != v && Rn[R](o) && (u += R + '.');
                            }),
                            (u += v),
                            u
                        );
                    }
                    static eventCallback(o, u, v) {
                        return (R) => {
                            d.getEventFullKey(R) === o &&
                                v.runGuarded(() => u(R));
                        };
                    }
                    static _normalizeKey(o) {
                        return 'esc' === o ? 'escape' : o;
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(f.K0));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            const Qn = (0, P.eFA)(P._c5, 'browser', [
                    { provide: P.Lbi, useValue: f.bD },
                    {
                        provide: P.g9A,
                        useValue: function jn() {
                            w.makeCurrent(), ie.init();
                        },
                        multi: !0,
                    },
                    {
                        provide: f.K0,
                        useFactory: function Gn() {
                            return (0, P.RDi)(document), document;
                        },
                        deps: [],
                    },
                ]),
                cr = [
                    { provide: P.zSh, useValue: 'root' },
                    {
                        provide: P.qLn,
                        useFactory: function nn() {
                            return new P.qLn();
                        },
                        deps: [],
                    },
                    {
                        provide: be,
                        useClass: st,
                        multi: !0,
                        deps: [f.K0, P.R0b, P.Lbi],
                    },
                    { provide: be, useClass: mn, multi: !0, deps: [f.K0] },
                    { provide: Ne, useClass: Ne, deps: [Re, Q, P.AFp] },
                    { provide: P.FYo, useExisting: Ne },
                    { provide: ae, useExisting: Q },
                    { provide: Q, useClass: Q, deps: [f.K0] },
                    { provide: P.dDg, useClass: P.dDg, deps: [P.R0b] },
                    { provide: Re, useClass: Re, deps: [be, P.R0b] },
                    { provide: f.JF, useClass: Ae, deps: [] },
                ];
            let Ut = (() => {
                class d {
                    constructor(o) {
                        if (o)
                            throw new Error(
                                'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
                            );
                    }
                    static withServerTransition(o) {
                        return {
                            ngModule: d,
                            providers: [
                                { provide: P.AFp, useValue: o.appId },
                                { provide: K, useExisting: P.AFp },
                                U,
                            ],
                        };
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(d, 12));
                    }),
                    (d.ɵmod = P.oAB({ type: d })),
                    (d.ɵinj = P.cJS({ providers: cr, imports: [f.ez, P.hGG] })),
                    d
                );
            })();
            'undefined' != typeof window && window;
            var bt = _(6115);
            let zn = (() => {
                class d {}
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)();
                    }),
                    (d.ɵcmp = P.Xpm({
                        type: d,
                        selectors: [['sol-root']],
                        decls: 1,
                        vars: 0,
                        template: function (o, u) {
                            1 & o && P._UZ(0, 'router-outlet');
                        },
                        directives: [bt.lC],
                        styles: [''],
                        changeDetection: 0,
                    })),
                    d
                );
            })();
            class or {}
            const tn = '*';
            function Wr(d, s = null) {
                return { type: 2, steps: d, options: s };
            }
            function hr(d) {
                return { type: 6, styles: d, offset: null };
            }
            function Vn(d) {
                Promise.resolve(null).then(d);
            }
            class er {
                constructor(s = 0, o = 0) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._onDestroyFns = []),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._position = 0),
                        (this.parentPlayer = null),
                        (this.totalTime = s + o);
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((s) => s()),
                        (this._onDoneFns = []));
                }
                onStart(s) {
                    this._onStartFns.push(s);
                }
                onDone(s) {
                    this._onDoneFns.push(s);
                }
                onDestroy(s) {
                    this._onDestroyFns.push(s);
                }
                hasStarted() {
                    return this._started;
                }
                init() {}
                play() {
                    this.hasStarted() ||
                        (this._onStart(), this.triggerMicrotask()),
                        (this._started = !0);
                }
                triggerMicrotask() {
                    Vn(() => this._onFinish());
                }
                _onStart() {
                    this._onStartFns.forEach((s) => s()),
                        (this._onStartFns = []);
                }
                pause() {}
                restart() {}
                finish() {
                    this._onFinish();
                }
                destroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this.hasStarted() || this._onStart(),
                        this.finish(),
                        this._onDestroyFns.forEach((s) => s()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this._started = !1;
                }
                setPosition(s) {
                    this._position = this.totalTime ? s * this.totalTime : 1;
                }
                getPosition() {
                    return this.totalTime ? this._position / this.totalTime : 1;
                }
                triggerCallback(s) {
                    const o = 'start' == s ? this._onStartFns : this._onDoneFns;
                    o.forEach((u) => u()), (o.length = 0);
                }
            }
            class cn {
                constructor(s) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._finished = !1),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._onDestroyFns = []),
                        (this.parentPlayer = null),
                        (this.totalTime = 0),
                        (this.players = s);
                    let o = 0,
                        u = 0,
                        v = 0;
                    const R = this.players.length;
                    0 == R
                        ? Vn(() => this._onFinish())
                        : this.players.forEach((G) => {
                              G.onDone(() => {
                                  ++o == R && this._onFinish();
                              }),
                                  G.onDestroy(() => {
                                      ++u == R && this._onDestroy();
                                  }),
                                  G.onStart(() => {
                                      ++v == R && this._onStart();
                                  });
                          }),
                        (this.totalTime = this.players.reduce(
                            (G, Y) => Math.max(G, Y.totalTime),
                            0
                        ));
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((s) => s()),
                        (this._onDoneFns = []));
                }
                init() {
                    this.players.forEach((s) => s.init());
                }
                onStart(s) {
                    this._onStartFns.push(s);
                }
                _onStart() {
                    this.hasStarted() ||
                        ((this._started = !0),
                        this._onStartFns.forEach((s) => s()),
                        (this._onStartFns = []));
                }
                onDone(s) {
                    this._onDoneFns.push(s);
                }
                onDestroy(s) {
                    this._onDestroyFns.push(s);
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this.parentPlayer || this.init(),
                        this._onStart(),
                        this.players.forEach((s) => s.play());
                }
                pause() {
                    this.players.forEach((s) => s.pause());
                }
                restart() {
                    this.players.forEach((s) => s.restart());
                }
                finish() {
                    this._onFinish(), this.players.forEach((s) => s.finish());
                }
                destroy() {
                    this._onDestroy();
                }
                _onDestroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this._onFinish(),
                        this.players.forEach((s) => s.destroy()),
                        this._onDestroyFns.forEach((s) => s()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this.players.forEach((s) => s.reset()),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._started = !1);
                }
                setPosition(s) {
                    const o = s * this.totalTime;
                    this.players.forEach((u) => {
                        const v = u.totalTime
                            ? Math.min(1, o / u.totalTime)
                            : 1;
                        u.setPosition(v);
                    });
                }
                getPosition() {
                    const s = this.players.reduce(
                        (o, u) =>
                            null === o || u.totalTime > o.totalTime ? u : o,
                        null
                    );
                    return null != s ? s.getPosition() : 0;
                }
                beforeDestroy() {
                    this.players.forEach((s) => {
                        s.beforeDestroy && s.beforeDestroy();
                    });
                }
                triggerCallback(s) {
                    const o = 'start' == s ? this._onStartFns : this._onDoneFns;
                    o.forEach((u) => u()), (o.length = 0);
                }
            }
            function An() {
                return (
                    'undefined' != typeof window && void 0 !== window.document
                );
            }
            function Tr() {
                return (
                    'undefined' != typeof process &&
                    '[object process]' === {}.toString.call(process)
                );
            }
            function En(d) {
                switch (d.length) {
                    case 0:
                        return new er();
                    case 1:
                        return d[0];
                    default:
                        return new cn(d);
                }
            }
            function Nt(d, s, o, u, v = {}, R = {}) {
                const G = [],
                    Y = [];
                let ue = -1,
                    Ve = null;
                if (
                    (u.forEach((it) => {
                        const Et = it.offset,
                            Mt = Et == ue,
                            ht = (Mt && Ve) || {};
                        Object.keys(it).forEach((mt) => {
                            let Vt = mt,
                                _n = it[mt];
                            if ('offset' !== mt)
                                switch (
                                    ((Vt = s.normalizePropertyName(Vt, G)), _n)
                                ) {
                                    case '!':
                                        _n = v[mt];
                                        break;
                                    case tn:
                                        _n = R[mt];
                                        break;
                                    default:
                                        _n = s.normalizeStyleValue(
                                            mt,
                                            Vt,
                                            _n,
                                            G
                                        );
                                }
                            ht[Vt] = _n;
                        }),
                            Mt || Y.push(ht),
                            (Ve = ht),
                            (ue = Et);
                    }),
                    G.length)
                ) {
                    const it = '\n - ';
                    throw new Error(
                        `Unable to animate due to the following errors:${it}${G.join(
                            it
                        )}`
                    );
                }
                return Y;
            }
            function Sr(d, s, o, u) {
                switch (s) {
                    case 'start':
                        d.onStart(() => u(o && dr(o, 'start', d)));
                        break;
                    case 'done':
                        d.onDone(() => u(o && dr(o, 'done', d)));
                        break;
                    case 'destroy':
                        d.onDestroy(() => u(o && dr(o, 'destroy', d)));
                }
            }
            function dr(d, s, o) {
                const u = o.totalTime,
                    R = Ir(
                        d.element,
                        d.triggerName,
                        d.fromState,
                        d.toState,
                        s || d.phaseName,
                        null == u ? d.totalTime : u,
                        !!o.disabled
                    ),
                    G = d._data;
                return null != G && (R._data = G), R;
            }
            function Ir(d, s, o, u, v = '', R = 0, G) {
                return {
                    element: d,
                    triggerName: s,
                    fromState: o,
                    toState: u,
                    phaseName: v,
                    totalTime: R,
                    disabled: !!G,
                };
            }
            function an(d, s, o) {
                let u;
                return (
                    d instanceof Map
                        ? ((u = d.get(s)), u || d.set(s, (u = o)))
                        : ((u = d[s]), u || (u = d[s] = o)),
                    u
                );
            }
            function Mn(d) {
                const s = d.indexOf(':');
                return [d.substring(1, s), d.substr(s + 1)];
            }
            let Fr = (d, s) => !1,
                J = (d, s, o) => [];
            (Tr() || 'undefined' != typeof Element) &&
                ((Fr = An()
                    ? (d, s) => {
                          for (; s && s !== document.documentElement; ) {
                              if (s === d) return !0;
                              s = s.parentNode || s.host;
                          }
                          return !1;
                      }
                    : (d, s) => d.contains(s)),
                (J = (d, s, o) => {
                    if (o) return Array.from(d.querySelectorAll(s));
                    const u = d.querySelector(s);
                    return u ? [u] : [];
                }));
            let Me = null,
                Je = !1;
            function Ze(d) {
                Me ||
                    ((Me =
                        (function Rt() {
                            return 'undefined' != typeof document
                                ? document.body
                                : null;
                        })() || {}),
                    (Je = !!Me.style && 'WebkitAppearance' in Me.style));
                let s = !0;
                return (
                    Me.style &&
                        !(function ve(d) {
                            return 'ebkit' == d.substring(1, 6);
                        })(d) &&
                        ((s = d in Me.style),
                        !s &&
                            Je &&
                            (s =
                                'Webkit' +
                                    d.charAt(0).toUpperCase() +
                                    d.substr(1) in
                                Me.style)),
                    s
                );
            }
            const pn = Fr,
                Dn = J;
            let Jt = (() => {
                    class d {
                        validateStyleProperty(o) {
                            return Ze(o);
                        }
                        matchesElement(o, u) {
                            return !1;
                        }
                        containsElement(o, u) {
                            return pn(o, u);
                        }
                        query(o, u, v) {
                            return Dn(o, u, v);
                        }
                        computeStyle(o, u, v) {
                            return v || '';
                        }
                        animate(o, u, v, R, G, Y = [], ue) {
                            return new er(v, R);
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)();
                        }),
                        (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                        d
                    );
                })(),
                pr = (() => {
                    class d {}
                    return (d.NOOP = new Jt()), d;
                })();
            const $i = 'ng-enter',
                yi = 'ng-leave',
                _e = 'ng-trigger',
                ge = '.ng-trigger',
                Ie = 'ng-animating',
                We = '.ng-animating';
            function Xe(d) {
                if ('number' == typeof d) return d;
                const s = d.match(/^(-?[\.\d]+)(m?s)/);
                return !s || s.length < 2 ? 0 : ft(parseFloat(s[1]), s[2]);
            }
            function ft(d, s) {
                return 's' === s ? 1e3 * d : d;
            }
            function wn(d, s, o) {
                return d.hasOwnProperty('duration')
                    ? d
                    : (function ar(d, s, o) {
                          let v,
                              R = 0,
                              G = '';
                          if ('string' == typeof d) {
                              const Y = d.match(
                                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                              );
                              if (null === Y)
                                  return (
                                      s.push(
                                          `The provided timing value "${d}" is invalid.`
                                      ),
                                      { duration: 0, delay: 0, easing: '' }
                                  );
                              v = ft(parseFloat(Y[1]), Y[2]);
                              const ue = Y[3];
                              null != ue && (R = ft(parseFloat(ue), Y[4]));
                              const Ve = Y[5];
                              Ve && (G = Ve);
                          } else v = d;
                          if (!o) {
                              let Y = !1,
                                  ue = s.length;
                              v < 0 &&
                                  (s.push(
                                      'Duration values below 0 are not allowed for this animation step.'
                                  ),
                                  (Y = !0)),
                                  R < 0 &&
                                      (s.push(
                                          'Delay values below 0 are not allowed for this animation step.'
                                      ),
                                      (Y = !0)),
                                  Y &&
                                      s.splice(
                                          ue,
                                          0,
                                          `The provided timing value "${d}" is invalid.`
                                      );
                          }
                          return { duration: v, delay: R, easing: G };
                      })(d, s, o);
            }
            function sn(d, s = {}) {
                return (
                    Object.keys(d).forEach((o) => {
                        s[o] = d[o];
                    }),
                    s
                );
            }
            function xr(d, s, o = {}) {
                if (s) for (let u in d) o[u] = d[u];
                else sn(d, o);
                return o;
            }
            function wi(d, s, o) {
                return o ? s + ':' + o + ';' : '';
            }
            function Ti(d) {
                let s = '';
                for (let o = 0; o < d.style.length; o++) {
                    const u = d.style.item(o);
                    s += wi(0, u, d.style.getPropertyValue(u));
                }
                for (const o in d.style)
                    d.style.hasOwnProperty(o) &&
                        !o.startsWith('_') &&
                        (s += wi(0, Gi(o), d.style[o]));
                d.setAttribute('style', s);
            }
            function Mr(d, s, o) {
                d.style &&
                    (Object.keys(s).forEach((u) => {
                        const v = li(u);
                        o && !o.hasOwnProperty(u) && (o[u] = d.style[v]),
                            (d.style[v] = s[u]);
                    }),
                    Tr() && Ti(d));
            }
            function oi(d, s) {
                d.style &&
                    (Object.keys(s).forEach((o) => {
                        const u = li(o);
                        d.style[u] = '';
                    }),
                    Tr() && Ti(d));
            }
            function ai(d) {
                return Array.isArray(d) ? (1 == d.length ? d[0] : Wr(d)) : d;
            }
            const Jr = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
            function xi(d) {
                let s = [];
                if ('string' == typeof d) {
                    let o;
                    for (; (o = Jr.exec(d)); ) s.push(o[1]);
                    Jr.lastIndex = 0;
                }
                return s;
            }
            function zr(d, s, o) {
                const u = d.toString(),
                    v = u.replace(Jr, (R, G) => {
                        let Y = s[G];
                        return (
                            s.hasOwnProperty(G) ||
                                (o.push(
                                    `Please provide a value for the animation param ${G}`
                                ),
                                (Y = '')),
                            Y.toString()
                        );
                    });
                return v == u ? d : v;
            }
            function gr(d) {
                const s = [];
                let o = d.next();
                for (; !o.done; ) s.push(o.value), (o = d.next());
                return s;
            }
            const cs = /-+([a-z0-9])/g;
            function li(d) {
                return d.replace(cs, (...s) => s[1].toUpperCase());
            }
            function Gi(d) {
                return d.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
            }
            function $n(d, s, o) {
                switch (s.type) {
                    case 7:
                        return d.visitTrigger(s, o);
                    case 0:
                        return d.visitState(s, o);
                    case 1:
                        return d.visitTransition(s, o);
                    case 2:
                        return d.visitSequence(s, o);
                    case 3:
                        return d.visitGroup(s, o);
                    case 4:
                        return d.visitAnimate(s, o);
                    case 5:
                        return d.visitKeyframes(s, o);
                    case 6:
                        return d.visitStyle(s, o);
                    case 8:
                        return d.visitReference(s, o);
                    case 9:
                        return d.visitAnimateChild(s, o);
                    case 10:
                        return d.visitAnimateRef(s, o);
                    case 11:
                        return d.visitQuery(s, o);
                    case 12:
                        return d.visitStagger(s, o);
                    default:
                        throw new Error(
                            `Unable to resolve animation metadata node #${s.type}`
                        );
                }
            }
            function ts(d, s) {
                const o = [];
                return (
                    'string' == typeof d
                        ? d.split(/\s*,\s*/).forEach((u) =>
                              (function Si(d, s, o) {
                                  if (':' == d[0]) {
                                      const ue = (function Wi(d, s) {
                                          switch (d) {
                                              case ':enter':
                                                  return 'void => *';
                                              case ':leave':
                                                  return '* => void';
                                              case ':increment':
                                                  return (o, u) =>
                                                      parseFloat(u) >
                                                      parseFloat(o);
                                              case ':decrement':
                                                  return (o, u) =>
                                                      parseFloat(u) <
                                                      parseFloat(o);
                                              default:
                                                  return (
                                                      s.push(
                                                          `The transition alias value "${d}" is not supported`
                                                      ),
                                                      '* => *'
                                                  );
                                          }
                                      })(d, o);
                                      if ('function' == typeof ue)
                                          return void s.push(ue);
                                      d = ue;
                                  }
                                  const u = d.match(
                                      /^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/
                                  );
                                  if (null == u || u.length < 4)
                                      return (
                                          o.push(
                                              `The provided transition expression "${d}" is not supported`
                                          ),
                                          s
                                      );
                                  const v = u[1],
                                      R = u[2],
                                      G = u[3];
                                  s.push(Ni(v, G));
                                  '<' == R[0] &&
                                      !('*' == v && '*' == G) &&
                                      s.push(Ni(G, v));
                              })(u, o, s)
                          )
                        : o.push(d),
                    o
                );
            }
            const zi = new Set(['true', '1']),
                vi = new Set(['false', '0']);
            function Ni(d, s) {
                const o = zi.has(d) || vi.has(d),
                    u = zi.has(s) || vi.has(s);
                return (v, R) => {
                    let G = '*' == d || d == v,
                        Y = '*' == s || s == R;
                    return (
                        !G &&
                            o &&
                            'boolean' == typeof v &&
                            (G = v ? zi.has(d) : vi.has(d)),
                        !Y &&
                            u &&
                            'boolean' == typeof R &&
                            (Y = R ? zi.has(s) : vi.has(s)),
                        G && Y
                    );
                };
            }
            const Xr = new RegExp('s*:selfs*,?', 'g');
            function Ii(d, s, o) {
                return new T(d).build(s, o);
            }
            class T {
                constructor(s) {
                    this._driver = s;
                }
                build(s, o) {
                    const u = new V(o);
                    return (
                        this._resetContextStyleTimingState(u),
                        $n(this, ai(s), u)
                    );
                }
                _resetContextStyleTimingState(s) {
                    (s.currentQuerySelector = ''),
                        (s.collectedStyles = {}),
                        (s.collectedStyles[''] = {}),
                        (s.currentTime = 0);
                }
                visitTrigger(s, o) {
                    let u = (o.queryCount = 0),
                        v = (o.depCount = 0);
                    const R = [],
                        G = [];
                    return (
                        '@' == s.name.charAt(0) &&
                            o.errors.push(
                                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
                            ),
                        s.definitions.forEach((Y) => {
                            if (
                                (this._resetContextStyleTimingState(o),
                                0 == Y.type)
                            ) {
                                const ue = Y,
                                    Ve = ue.name;
                                Ve.toString()
                                    .split(/\s*,\s*/)
                                    .forEach((it) => {
                                        (ue.name = it),
                                            R.push(this.visitState(ue, o));
                                    }),
                                    (ue.name = Ve);
                            } else if (1 == Y.type) {
                                const ue = this.visitTransition(Y, o);
                                (u += ue.queryCount),
                                    (v += ue.depCount),
                                    G.push(ue);
                            } else
                                o.errors.push(
                                    'only state() and transition() definitions can sit inside of a trigger()'
                                );
                        }),
                        {
                            type: 7,
                            name: s.name,
                            states: R,
                            transitions: G,
                            queryCount: u,
                            depCount: v,
                            options: null,
                        }
                    );
                }
                visitState(s, o) {
                    const u = this.visitStyle(s.styles, o),
                        v = (s.options && s.options.params) || null;
                    if (u.containsDynamicStyles) {
                        const R = new Set(),
                            G = v || {};
                        if (
                            (u.styles.forEach((Y) => {
                                if (ke(Y)) {
                                    const ue = Y;
                                    Object.keys(ue).forEach((Ve) => {
                                        xi(ue[Ve]).forEach((it) => {
                                            G.hasOwnProperty(it) || R.add(it);
                                        });
                                    });
                                }
                            }),
                            R.size)
                        ) {
                            const Y = gr(R.values());
                            o.errors.push(
                                `state("${
                                    s.name
                                }", ...) must define default values for all the following style substitutions: ${Y.join(
                                    ', '
                                )}`
                            );
                        }
                    }
                    return {
                        type: 0,
                        name: s.name,
                        style: u,
                        options: v ? { params: v } : null,
                    };
                }
                visitTransition(s, o) {
                    (o.queryCount = 0), (o.depCount = 0);
                    const u = $n(this, ai(s.animation), o);
                    return {
                        type: 1,
                        matchers: ts(s.expr, o.errors),
                        animation: u,
                        queryCount: o.queryCount,
                        depCount: o.depCount,
                        options: vt(s.options),
                    };
                }
                visitSequence(s, o) {
                    return {
                        type: 2,
                        steps: s.steps.map((u) => $n(this, u, o)),
                        options: vt(s.options),
                    };
                }
                visitGroup(s, o) {
                    const u = o.currentTime;
                    let v = 0;
                    const R = s.steps.map((G) => {
                        o.currentTime = u;
                        const Y = $n(this, G, o);
                        return (v = Math.max(v, o.currentTime)), Y;
                    });
                    return (
                        (o.currentTime = v),
                        { type: 3, steps: R, options: vt(s.options) }
                    );
                }
                visitAnimate(s, o) {
                    const u = (function ze(d, s) {
                        let o = null;
                        if (d.hasOwnProperty('duration')) o = d;
                        else if ('number' == typeof d)
                            return xt(wn(d, s).duration, 0, '');
                        const u = d;
                        if (
                            u
                                .split(/\s+/)
                                .some(
                                    (R) =>
                                        '{' == R.charAt(0) && '{' == R.charAt(1)
                                )
                        ) {
                            const R = xt(0, 0, '');
                            return (R.dynamic = !0), (R.strValue = u), R;
                        }
                        return (
                            (o = o || wn(u, s)),
                            xt(o.duration, o.delay, o.easing)
                        );
                    })(s.timings, o.errors);
                    o.currentAnimateTimings = u;
                    let v,
                        R = s.styles ? s.styles : hr({});
                    if (5 == R.type) v = this.visitKeyframes(R, o);
                    else {
                        let G = s.styles,
                            Y = !1;
                        if (!G) {
                            Y = !0;
                            const Ve = {};
                            u.easing && (Ve.easing = u.easing), (G = hr(Ve));
                        }
                        o.currentTime += u.duration + u.delay;
                        const ue = this.visitStyle(G, o);
                        (ue.isEmptyStep = Y), (v = ue);
                    }
                    return (
                        (o.currentAnimateTimings = null),
                        { type: 4, timings: u, style: v, options: null }
                    );
                }
                visitStyle(s, o) {
                    const u = this._makeStyleAst(s, o);
                    return this._validateStyleAst(u, o), u;
                }
                _makeStyleAst(s, o) {
                    const u = [];
                    Array.isArray(s.styles)
                        ? s.styles.forEach((G) => {
                              'string' == typeof G
                                  ? G == tn
                                      ? u.push(G)
                                      : o.errors.push(
                                            `The provided style string value ${G} is not allowed.`
                                        )
                                  : u.push(G);
                          })
                        : u.push(s.styles);
                    let v = !1,
                        R = null;
                    return (
                        u.forEach((G) => {
                            if (ke(G)) {
                                const Y = G,
                                    ue = Y.easing;
                                if ((ue && ((R = ue), delete Y.easing), !v))
                                    for (let Ve in Y)
                                        if (
                                            Y[Ve].toString().indexOf('{{') >= 0
                                        ) {
                                            v = !0;
                                            break;
                                        }
                            }
                        }),
                        {
                            type: 6,
                            styles: u,
                            easing: R,
                            offset: s.offset,
                            containsDynamicStyles: v,
                            options: null,
                        }
                    );
                }
                _validateStyleAst(s, o) {
                    const u = o.currentAnimateTimings;
                    let v = o.currentTime,
                        R = o.currentTime;
                    u && R > 0 && (R -= u.duration + u.delay),
                        s.styles.forEach((G) => {
                            'string' != typeof G &&
                                Object.keys(G).forEach((Y) => {
                                    if (!this._driver.validateStyleProperty(Y))
                                        return void o.errors.push(
                                            `The provided animation property "${Y}" is not a supported CSS property for animations`
                                        );
                                    const ue =
                                            o.collectedStyles[
                                                o.currentQuerySelector
                                            ],
                                        Ve = ue[Y];
                                    let it = !0;
                                    Ve &&
                                        (R != v &&
                                            R >= Ve.startTime &&
                                            v <= Ve.endTime &&
                                            (o.errors.push(
                                                `The CSS property "${Y}" that exists between the times of "${Ve.startTime}ms" and "${Ve.endTime}ms" is also being animated in a parallel animation between the times of "${R}ms" and "${v}ms"`
                                            ),
                                            (it = !1)),
                                        (R = Ve.startTime)),
                                        it &&
                                            (ue[Y] = {
                                                startTime: R,
                                                endTime: v,
                                            }),
                                        o.options &&
                                            (function es(d, s, o) {
                                                const u = s.params || {},
                                                    v = xi(d);
                                                v.length &&
                                                    v.forEach((R) => {
                                                        u.hasOwnProperty(R) ||
                                                            o.push(
                                                                `Unable to resolve the local animation param ${R} in the given list of values`
                                                            );
                                                    });
                                            })(G[Y], o.options, o.errors);
                                });
                        });
                }
                visitKeyframes(s, o) {
                    const u = { type: 5, styles: [], options: null };
                    if (!o.currentAnimateTimings)
                        return (
                            o.errors.push(
                                'keyframes() must be placed inside of a call to animate()'
                            ),
                            u
                        );
                    let R = 0;
                    const G = [];
                    let Y = !1,
                        ue = !1,
                        Ve = 0;
                    const it = s.steps.map((Sn) => {
                        const ur = this._makeStyleAst(Sn, o);
                        let ri =
                                null != ur.offset
                                    ? ur.offset
                                    : (function fe(d) {
                                          if ('string' == typeof d) return null;
                                          let s = null;
                                          if (Array.isArray(d))
                                              d.forEach((o) => {
                                                  if (
                                                      ke(o) &&
                                                      o.hasOwnProperty('offset')
                                                  ) {
                                                      const u = o;
                                                      (s = parseFloat(
                                                          u.offset
                                                      )),
                                                          delete u.offset;
                                                  }
                                              });
                                          else if (
                                              ke(d) &&
                                              d.hasOwnProperty('offset')
                                          ) {
                                              const o = d;
                                              (s = parseFloat(o.offset)),
                                                  delete o.offset;
                                          }
                                          return s;
                                      })(ur.styles),
                            Hr = 0;
                        return (
                            null != ri && (R++, (Hr = ur.offset = ri)),
                            (ue = ue || Hr < 0 || Hr > 1),
                            (Y = Y || Hr < Ve),
                            (Ve = Hr),
                            G.push(Hr),
                            ur
                        );
                    });
                    ue &&
                        o.errors.push(
                            'Please ensure that all keyframe offsets are between 0 and 1'
                        ),
                        Y &&
                            o.errors.push(
                                'Please ensure that all keyframe offsets are in order'
                            );
                    const Et = s.steps.length;
                    let Mt = 0;
                    R > 0 && R < Et
                        ? o.errors.push(
                              'Not all style() steps within the declared keyframes() contain offsets'
                          )
                        : 0 == R && (Mt = 1 / (Et - 1));
                    const ht = Et - 1,
                        mt = o.currentTime,
                        Vt = o.currentAnimateTimings,
                        _n = Vt.duration;
                    return (
                        it.forEach((Sn, ur) => {
                            const ri =
                                    Mt > 0 ? (ur == ht ? 1 : Mt * ur) : G[ur],
                                Hr = ri * _n;
                            (o.currentTime = mt + Vt.delay + Hr),
                                (Vt.duration = Hr),
                                this._validateStyleAst(Sn, o),
                                (Sn.offset = ri),
                                u.styles.push(Sn);
                        }),
                        u
                    );
                }
                visitReference(s, o) {
                    return {
                        type: 8,
                        animation: $n(this, ai(s.animation), o),
                        options: vt(s.options),
                    };
                }
                visitAnimateChild(s, o) {
                    return o.depCount++, { type: 9, options: vt(s.options) };
                }
                visitAnimateRef(s, o) {
                    return {
                        type: 10,
                        animation: this.visitReference(s.animation, o),
                        options: vt(s.options),
                    };
                }
                visitQuery(s, o) {
                    const u = o.currentQuerySelector,
                        v = s.options || {};
                    o.queryCount++, (o.currentQuery = s);
                    const [R, G] = (function L(d) {
                        const s = !!d
                            .split(/\s*,\s*/)
                            .find((o) => ':self' == o);
                        return (
                            s && (d = d.replace(Xr, '')),
                            (d = d
                                .replace(/@\*/g, ge)
                                .replace(/@\w+/g, (o) => ge + '-' + o.substr(1))
                                .replace(/:animating/g, We)),
                            [d, s]
                        );
                    })(s.selector);
                    (o.currentQuerySelector = u.length ? u + ' ' + R : R),
                        an(o.collectedStyles, o.currentQuerySelector, {});
                    const Y = $n(this, ai(s.animation), o);
                    return (
                        (o.currentQuery = null),
                        (o.currentQuerySelector = u),
                        {
                            type: 11,
                            selector: R,
                            limit: v.limit || 0,
                            optional: !!v.optional,
                            includeSelf: G,
                            animation: Y,
                            originalSelector: s.selector,
                            options: vt(s.options),
                        }
                    );
                }
                visitStagger(s, o) {
                    o.currentQuery ||
                        o.errors.push(
                            'stagger() can only be used inside of query()'
                        );
                    const u =
                        'full' === s.timings
                            ? { duration: 0, delay: 0, easing: 'full' }
                            : wn(s.timings, o.errors, !0);
                    return {
                        type: 12,
                        animation: $n(this, ai(s.animation), o),
                        timings: u,
                        options: null,
                    };
                }
            }
            class V {
                constructor(s) {
                    (this.errors = s),
                        (this.queryCount = 0),
                        (this.depCount = 0),
                        (this.currentTransition = null),
                        (this.currentQuery = null),
                        (this.currentQuerySelector = null),
                        (this.currentAnimateTimings = null),
                        (this.currentTime = 0),
                        (this.collectedStyles = {}),
                        (this.options = null);
                }
            }
            function ke(d) {
                return !Array.isArray(d) && 'object' == typeof d;
            }
            function vt(d) {
                return (
                    d
                        ? (d = sn(d)).params &&
                          (d.params = (function A(d) {
                              return d ? sn(d) : null;
                          })(d.params))
                        : (d = {}),
                    d
                );
            }
            function xt(d, s, o) {
                return { duration: d, delay: s, easing: o };
            }
            function dn(d, s, o, u, v, R, G = null, Y = !1) {
                return {
                    type: 1,
                    element: d,
                    keyframes: s,
                    preStyleProps: o,
                    postStyleProps: u,
                    duration: v,
                    delay: R,
                    totalTime: v + R,
                    easing: G,
                    subTimeline: Y,
                };
            }
            class Gt {
                constructor() {
                    this._map = new Map();
                }
                get(s) {
                    return this._map.get(s) || [];
                }
                append(s, o) {
                    let u = this._map.get(s);
                    u || this._map.set(s, (u = [])), u.push(...o);
                }
                has(s) {
                    return this._map.has(s);
                }
                clear() {
                    this._map.clear();
                }
            }
            const Tn = new RegExp(':enter', 'g'),
                ei = new RegExp(':leave', 'g');
            function Vr(d, s, o, u, v, R = {}, G = {}, Y, ue, Ve = []) {
                return new Ot().buildKeyframes(d, s, o, u, v, R, G, Y, ue, Ve);
            }
            class Ot {
                buildKeyframes(s, o, u, v, R, G, Y, ue, Ve, it = []) {
                    Ve = Ve || new Gt();
                    const Et = new Yi(s, o, Ve, v, R, it, []);
                    (Et.options = ue),
                        Et.currentTimeline.setStyles([G], null, Et.errors, ue),
                        $n(this, u, Et);
                    const Mt = Et.timelines.filter((ht) =>
                        ht.containsAnimation()
                    );
                    if (Object.keys(Y).length) {
                        let ht;
                        for (let mt = Mt.length - 1; mt >= 0; mt--) {
                            const Vt = Mt[mt];
                            if (Vt.element === o) {
                                ht = Vt;
                                break;
                            }
                        }
                        ht &&
                            !ht.allowOnlyTimelineStyles() &&
                            ht.setStyles([Y], null, Et.errors, ue);
                    }
                    return Mt.length
                        ? Mt.map((ht) => ht.buildKeyframes())
                        : [dn(o, [], [], [], 0, 0, '', !1)];
                }
                visitTrigger(s, o) {}
                visitState(s, o) {}
                visitTransition(s, o) {}
                visitAnimateChild(s, o) {
                    const u = o.subInstructions.get(o.element);
                    if (u) {
                        const v = o.createSubContext(s.options),
                            R = o.currentTimeline.currentTime,
                            G = this._visitSubInstructions(u, v, v.options);
                        R != G && o.transformIntoNewTimeline(G);
                    }
                    o.previousNode = s;
                }
                visitAnimateRef(s, o) {
                    const u = o.createSubContext(s.options);
                    u.transformIntoNewTimeline(),
                        this.visitReference(s.animation, u),
                        o.transformIntoNewTimeline(
                            u.currentTimeline.currentTime
                        ),
                        (o.previousNode = s);
                }
                _visitSubInstructions(s, o, u) {
                    let R = o.currentTimeline.currentTime;
                    const G = null != u.duration ? Xe(u.duration) : null,
                        Y = null != u.delay ? Xe(u.delay) : null;
                    return (
                        0 !== G &&
                            s.forEach((ue) => {
                                const Ve = o.appendInstructionToTimeline(
                                    ue,
                                    G,
                                    Y
                                );
                                R = Math.max(R, Ve.duration + Ve.delay);
                            }),
                        R
                    );
                }
                visitReference(s, o) {
                    o.updateOptions(s.options, !0),
                        $n(this, s.animation, o),
                        (o.previousNode = s);
                }
                visitSequence(s, o) {
                    const u = o.subContextCount;
                    let v = o;
                    const R = s.options;
                    if (
                        R &&
                        (R.params || R.delay) &&
                        ((v = o.createSubContext(R)),
                        v.transformIntoNewTimeline(),
                        null != R.delay)
                    ) {
                        6 == v.previousNode.type &&
                            (v.currentTimeline.snapshotCurrentStyles(),
                            (v.previousNode = ci));
                        const G = Xe(R.delay);
                        v.delayNextStep(G);
                    }
                    s.steps.length &&
                        (s.steps.forEach((G) => $n(this, G, v)),
                        v.currentTimeline.applyStylesToKeyframe(),
                        v.subContextCount > u && v.transformIntoNewTimeline()),
                        (o.previousNode = s);
                }
                visitGroup(s, o) {
                    const u = [];
                    let v = o.currentTimeline.currentTime;
                    const R =
                        s.options && s.options.delay ? Xe(s.options.delay) : 0;
                    s.steps.forEach((G) => {
                        const Y = o.createSubContext(s.options);
                        R && Y.delayNextStep(R),
                            $n(this, G, Y),
                            (v = Math.max(v, Y.currentTimeline.currentTime)),
                            u.push(Y.currentTimeline);
                    }),
                        u.forEach((G) =>
                            o.currentTimeline.mergeTimelineCollectedStyles(G)
                        ),
                        o.transformIntoNewTimeline(v),
                        (o.previousNode = s);
                }
                _visitTiming(s, o) {
                    if (s.dynamic) {
                        const u = s.strValue;
                        return wn(
                            o.params ? zr(u, o.params, o.errors) : u,
                            o.errors
                        );
                    }
                    return {
                        duration: s.duration,
                        delay: s.delay,
                        easing: s.easing,
                    };
                }
                visitAnimate(s, o) {
                    const u = (o.currentAnimateTimings = this._visitTiming(
                            s.timings,
                            o
                        )),
                        v = o.currentTimeline;
                    u.delay &&
                        (o.incrementTime(u.delay), v.snapshotCurrentStyles());
                    const R = s.style;
                    5 == R.type
                        ? this.visitKeyframes(R, o)
                        : (o.incrementTime(u.duration),
                          this.visitStyle(R, o),
                          v.applyStylesToKeyframe()),
                        (o.currentAnimateTimings = null),
                        (o.previousNode = s);
                }
                visitStyle(s, o) {
                    const u = o.currentTimeline,
                        v = o.currentAnimateTimings;
                    !v &&
                        u.getCurrentStyleProperties().length &&
                        u.forwardFrame();
                    const R = (v && v.easing) || s.easing;
                    s.isEmptyStep
                        ? u.applyEmptyStep(R)
                        : u.setStyles(s.styles, R, o.errors, o.options),
                        (o.previousNode = s);
                }
                visitKeyframes(s, o) {
                    const u = o.currentAnimateTimings,
                        v = o.currentTimeline.duration,
                        R = u.duration,
                        Y = o.createSubContext().currentTimeline;
                    (Y.easing = u.easing),
                        s.styles.forEach((ue) => {
                            Y.forwardTime((ue.offset || 0) * R),
                                Y.setStyles(
                                    ue.styles,
                                    ue.easing,
                                    o.errors,
                                    o.options
                                ),
                                Y.applyStylesToKeyframe();
                        }),
                        o.currentTimeline.mergeTimelineCollectedStyles(Y),
                        o.transformIntoNewTimeline(v + R),
                        (o.previousNode = s);
                }
                visitQuery(s, o) {
                    const u = o.currentTimeline.currentTime,
                        v = s.options || {},
                        R = v.delay ? Xe(v.delay) : 0;
                    R &&
                        (6 === o.previousNode.type ||
                            (0 == u &&
                                o.currentTimeline.getCurrentStyleProperties()
                                    .length)) &&
                        (o.currentTimeline.snapshotCurrentStyles(),
                        (o.previousNode = ci));
                    let G = u;
                    const Y = o.invokeQuery(
                        s.selector,
                        s.originalSelector,
                        s.limit,
                        s.includeSelf,
                        !!v.optional,
                        o.errors
                    );
                    o.currentQueryTotal = Y.length;
                    let ue = null;
                    Y.forEach((Ve, it) => {
                        o.currentQueryIndex = it;
                        const Et = o.createSubContext(s.options, Ve);
                        R && Et.delayNextStep(R),
                            Ve === o.element && (ue = Et.currentTimeline),
                            $n(this, s.animation, Et),
                            Et.currentTimeline.applyStylesToKeyframe(),
                            (G = Math.max(G, Et.currentTimeline.currentTime));
                    }),
                        (o.currentQueryIndex = 0),
                        (o.currentQueryTotal = 0),
                        o.transformIntoNewTimeline(G),
                        ue &&
                            (o.currentTimeline.mergeTimelineCollectedStyles(ue),
                            o.currentTimeline.snapshotCurrentStyles()),
                        (o.previousNode = s);
                }
                visitStagger(s, o) {
                    const u = o.parentContext,
                        v = o.currentTimeline,
                        R = s.timings,
                        G = Math.abs(R.duration),
                        Y = G * (o.currentQueryTotal - 1);
                    let ue = G * o.currentQueryIndex;
                    switch (R.duration < 0 ? 'reverse' : R.easing) {
                        case 'reverse':
                            ue = Y - ue;
                            break;
                        case 'full':
                            ue = u.currentStaggerTime;
                    }
                    const it = o.currentTimeline;
                    ue && it.delayNextStep(ue);
                    const Et = it.currentTime;
                    $n(this, s.animation, o),
                        (o.previousNode = s),
                        (u.currentStaggerTime =
                            v.currentTime -
                            Et +
                            (v.startTime - u.currentTimeline.startTime));
                }
            }
            const ci = {};
            class Yi {
                constructor(s, o, u, v, R, G, Y, ue) {
                    (this._driver = s),
                        (this.element = o),
                        (this.subInstructions = u),
                        (this._enterClassName = v),
                        (this._leaveClassName = R),
                        (this.errors = G),
                        (this.timelines = Y),
                        (this.parentContext = null),
                        (this.currentAnimateTimings = null),
                        (this.previousNode = ci),
                        (this.subContextCount = 0),
                        (this.options = {}),
                        (this.currentQueryIndex = 0),
                        (this.currentQueryTotal = 0),
                        (this.currentStaggerTime = 0),
                        (this.currentTimeline =
                            ue || new Ei(this._driver, o, 0)),
                        Y.push(this.currentTimeline);
                }
                get params() {
                    return this.options.params;
                }
                updateOptions(s, o) {
                    if (!s) return;
                    const u = s;
                    let v = this.options;
                    null != u.duration && (v.duration = Xe(u.duration)),
                        null != u.delay && (v.delay = Xe(u.delay));
                    const R = u.params;
                    if (R) {
                        let G = v.params;
                        G || (G = this.options.params = {}),
                            Object.keys(R).forEach((Y) => {
                                (!o || !G.hasOwnProperty(Y)) &&
                                    (G[Y] = zr(R[Y], G, this.errors));
                            });
                    }
                }
                _copyOptions() {
                    const s = {};
                    if (this.options) {
                        const o = this.options.params;
                        if (o) {
                            const u = (s.params = {});
                            Object.keys(o).forEach((v) => {
                                u[v] = o[v];
                            });
                        }
                    }
                    return s;
                }
                createSubContext(s = null, o, u) {
                    const v = o || this.element,
                        R = new Yi(
                            this._driver,
                            v,
                            this.subInstructions,
                            this._enterClassName,
                            this._leaveClassName,
                            this.errors,
                            this.timelines,
                            this.currentTimeline.fork(v, u || 0)
                        );
                    return (
                        (R.previousNode = this.previousNode),
                        (R.currentAnimateTimings = this.currentAnimateTimings),
                        (R.options = this._copyOptions()),
                        R.updateOptions(s),
                        (R.currentQueryIndex = this.currentQueryIndex),
                        (R.currentQueryTotal = this.currentQueryTotal),
                        (R.parentContext = this),
                        this.subContextCount++,
                        R
                    );
                }
                transformIntoNewTimeline(s) {
                    return (
                        (this.previousNode = ci),
                        (this.currentTimeline = this.currentTimeline.fork(
                            this.element,
                            s
                        )),
                        this.timelines.push(this.currentTimeline),
                        this.currentTimeline
                    );
                }
                appendInstructionToTimeline(s, o, u) {
                    const v = {
                            duration: null != o ? o : s.duration,
                            delay:
                                this.currentTimeline.currentTime +
                                (null != u ? u : 0) +
                                s.delay,
                            easing: '',
                        },
                        R = new Li(
                            this._driver,
                            s.element,
                            s.keyframes,
                            s.preStyleProps,
                            s.postStyleProps,
                            v,
                            s.stretchStartingKeyframe
                        );
                    return this.timelines.push(R), v;
                }
                incrementTime(s) {
                    this.currentTimeline.forwardTime(
                        this.currentTimeline.duration + s
                    );
                }
                delayNextStep(s) {
                    s > 0 && this.currentTimeline.delayNextStep(s);
                }
                invokeQuery(s, o, u, v, R, G) {
                    let Y = [];
                    if ((v && Y.push(this.element), s.length > 0)) {
                        s = (s = s.replace(
                            Tn,
                            '.' + this._enterClassName
                        )).replace(ei, '.' + this._leaveClassName);
                        let Ve = this._driver.query(this.element, s, 1 != u);
                        0 !== u &&
                            (Ve =
                                u < 0
                                    ? Ve.slice(Ve.length + u, Ve.length)
                                    : Ve.slice(0, u)),
                            Y.push(...Ve);
                    }
                    return (
                        !R &&
                            0 == Y.length &&
                            G.push(
                                `\`query("${o}")\` returned zero elements. (Use \`query("${o}", { optional: true })\` if you wish to allow this.)`
                            ),
                        Y
                    );
                }
            }
            class Ei {
                constructor(s, o, u, v) {
                    (this._driver = s),
                        (this.element = o),
                        (this.startTime = u),
                        (this._elementTimelineStylesLookup = v),
                        (this.duration = 0),
                        (this._previousKeyframe = {}),
                        (this._currentKeyframe = {}),
                        (this._keyframes = new Map()),
                        (this._styleSummary = {}),
                        (this._pendingStyles = {}),
                        (this._backFill = {}),
                        (this._currentEmptyStepKeyframe = null),
                        this._elementTimelineStylesLookup ||
                            (this._elementTimelineStylesLookup = new Map()),
                        (this._localTimelineStyles = Object.create(
                            this._backFill,
                            {}
                        )),
                        (this._globalTimelineStyles =
                            this._elementTimelineStylesLookup.get(o)),
                        this._globalTimelineStyles ||
                            ((this._globalTimelineStyles =
                                this._localTimelineStyles),
                            this._elementTimelineStylesLookup.set(
                                o,
                                this._localTimelineStyles
                            )),
                        this._loadKeyframe();
                }
                containsAnimation() {
                    switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.getCurrentStyleProperties().length > 0;
                        default:
                            return !0;
                    }
                }
                getCurrentStyleProperties() {
                    return Object.keys(this._currentKeyframe);
                }
                get currentTime() {
                    return this.startTime + this.duration;
                }
                delayNextStep(s) {
                    const o =
                        1 == this._keyframes.size &&
                        Object.keys(this._pendingStyles).length;
                    this.duration || o
                        ? (this.forwardTime(this.currentTime + s),
                          o && this.snapshotCurrentStyles())
                        : (this.startTime += s);
                }
                fork(s, o) {
                    return (
                        this.applyStylesToKeyframe(),
                        new Ei(
                            this._driver,
                            s,
                            o || this.currentTime,
                            this._elementTimelineStylesLookup
                        )
                    );
                }
                _loadKeyframe() {
                    this._currentKeyframe &&
                        (this._previousKeyframe = this._currentKeyframe),
                        (this._currentKeyframe = this._keyframes.get(
                            this.duration
                        )),
                        this._currentKeyframe ||
                            ((this._currentKeyframe = Object.create(
                                this._backFill,
                                {}
                            )),
                            this._keyframes.set(
                                this.duration,
                                this._currentKeyframe
                            ));
                }
                forwardFrame() {
                    (this.duration += 1), this._loadKeyframe();
                }
                forwardTime(s) {
                    this.applyStylesToKeyframe(),
                        (this.duration = s),
                        this._loadKeyframe();
                }
                _updateStyle(s, o) {
                    (this._localTimelineStyles[s] = o),
                        (this._globalTimelineStyles[s] = o),
                        (this._styleSummary[s] = {
                            time: this.currentTime,
                            value: o,
                        });
                }
                allowOnlyTimelineStyles() {
                    return (
                        this._currentEmptyStepKeyframe !== this._currentKeyframe
                    );
                }
                applyEmptyStep(s) {
                    s && (this._previousKeyframe.easing = s),
                        Object.keys(this._globalTimelineStyles).forEach((o) => {
                            (this._backFill[o] =
                                this._globalTimelineStyles[o] || tn),
                                (this._currentKeyframe[o] = tn);
                        }),
                        (this._currentEmptyStepKeyframe =
                            this._currentKeyframe);
                }
                setStyles(s, o, u, v) {
                    o && (this._previousKeyframe.easing = o);
                    const R = (v && v.params) || {},
                        G = (function Qi(d, s) {
                            const o = {};
                            let u;
                            return (
                                d.forEach((v) => {
                                    '*' === v
                                        ? ((u = u || Object.keys(s)),
                                          u.forEach((R) => {
                                              o[R] = tn;
                                          }))
                                        : xr(v, !1, o);
                                }),
                                o
                            );
                        })(s, this._globalTimelineStyles);
                    Object.keys(G).forEach((Y) => {
                        const ue = zr(G[Y], R, u);
                        (this._pendingStyles[Y] = ue),
                            this._localTimelineStyles.hasOwnProperty(Y) ||
                                (this._backFill[Y] =
                                    this._globalTimelineStyles.hasOwnProperty(Y)
                                        ? this._globalTimelineStyles[Y]
                                        : tn),
                            this._updateStyle(Y, ue);
                    });
                }
                applyStylesToKeyframe() {
                    const s = this._pendingStyles,
                        o = Object.keys(s);
                    0 != o.length &&
                        ((this._pendingStyles = {}),
                        o.forEach((u) => {
                            this._currentKeyframe[u] = s[u];
                        }),
                        Object.keys(this._localTimelineStyles).forEach((u) => {
                            this._currentKeyframe.hasOwnProperty(u) ||
                                (this._currentKeyframe[u] =
                                    this._localTimelineStyles[u]);
                        }));
                }
                snapshotCurrentStyles() {
                    Object.keys(this._localTimelineStyles).forEach((s) => {
                        const o = this._localTimelineStyles[s];
                        (this._pendingStyles[s] = o), this._updateStyle(s, o);
                    });
                }
                getFinalKeyframe() {
                    return this._keyframes.get(this.duration);
                }
                get properties() {
                    const s = [];
                    for (let o in this._currentKeyframe) s.push(o);
                    return s;
                }
                mergeTimelineCollectedStyles(s) {
                    Object.keys(s._styleSummary).forEach((o) => {
                        const u = this._styleSummary[o],
                            v = s._styleSummary[o];
                        (!u || v.time > u.time) &&
                            this._updateStyle(o, v.value);
                    });
                }
                buildKeyframes() {
                    this.applyStylesToKeyframe();
                    const s = new Set(),
                        o = new Set(),
                        u = 1 === this._keyframes.size && 0 === this.duration;
                    let v = [];
                    this._keyframes.forEach((Y, ue) => {
                        const Ve = xr(Y, !0);
                        Object.keys(Ve).forEach((it) => {
                            const Et = Ve[it];
                            '!' == Et ? s.add(it) : Et == tn && o.add(it);
                        }),
                            u || (Ve.offset = ue / this.duration),
                            v.push(Ve);
                    });
                    const R = s.size ? gr(s.values()) : [],
                        G = o.size ? gr(o.values()) : [];
                    if (u) {
                        const Y = v[0],
                            ue = sn(Y);
                        (Y.offset = 0), (ue.offset = 1), (v = [Y, ue]);
                    }
                    return dn(
                        this.element,
                        v,
                        R,
                        G,
                        this.duration,
                        this.startTime,
                        this.easing,
                        !1
                    );
                }
            }
            class Li extends Ei {
                constructor(s, o, u, v, R, G, Y = !1) {
                    super(s, o, G.delay),
                        (this.keyframes = u),
                        (this.preStyleProps = v),
                        (this.postStyleProps = R),
                        (this._stretchStartingKeyframe = Y),
                        (this.timings = {
                            duration: G.duration,
                            delay: G.delay,
                            easing: G.easing,
                        });
                }
                containsAnimation() {
                    return this.keyframes.length > 1;
                }
                buildKeyframes() {
                    let s = this.keyframes,
                        { delay: o, duration: u, easing: v } = this.timings;
                    if (this._stretchStartingKeyframe && o) {
                        const R = [],
                            G = u + o,
                            Y = o / G,
                            ue = xr(s[0], !1);
                        (ue.offset = 0), R.push(ue);
                        const Ve = xr(s[0], !1);
                        (Ve.offset = ns(Y)), R.push(Ve);
                        const it = s.length - 1;
                        for (let Et = 1; Et <= it; Et++) {
                            let Mt = xr(s[Et], !1);
                            (Mt.offset = ns((o + Mt.offset * u) / G)),
                                R.push(Mt);
                        }
                        (u = G), (o = 0), (v = ''), (s = R);
                    }
                    return dn(
                        this.element,
                        s,
                        this.preStyleProps,
                        this.postStyleProps,
                        u,
                        o,
                        v,
                        !0
                    );
                }
            }
            function ns(d, s = 3) {
                const o = Math.pow(10, s - 1);
                return Math.round(d * o) / o;
            }
            class Ke {}
            class Zs extends Ke {
                normalizePropertyName(s, o) {
                    return li(s);
                }
                normalizeStyleValue(s, o, u, v) {
                    let R = '';
                    const G = u.toString().trim();
                    if (Yn[o] && 0 !== u && '0' !== u)
                        if ('number' == typeof u) R = 'px';
                        else {
                            const Y = u.match(/^[+-]?[\d\.]+([a-z]*)$/);
                            Y &&
                                0 == Y[1].length &&
                                v.push(
                                    `Please provide a CSS unit value for ${s}:${u}`
                                );
                        }
                    return G + R;
                }
            }
            const Yn = (() =>
                (function fs(d) {
                    const s = {};
                    return d.forEach((o) => (s[o] = !0)), s;
                })(
                    'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
                        ','
                    )
                ))();
            function Mi(d, s, o, u, v, R, G, Y, ue, Ve, it, Et, Mt) {
                return {
                    type: 0,
                    element: d,
                    triggerName: s,
                    isRemovalTransition: v,
                    fromState: o,
                    fromStyles: R,
                    toState: u,
                    toStyles: G,
                    timelines: Y,
                    queriedElements: ue,
                    preStyleProps: Ve,
                    postStyleProps: it,
                    totalTime: Et,
                    errors: Mt,
                };
            }
            const Dr = {};
            class hs {
                constructor(s, o, u) {
                    (this._triggerName = s),
                        (this.ast = o),
                        (this._stateStyles = u);
                }
                match(s, o, u, v) {
                    return (function ws(d, s, o, u, v) {
                        return d.some((R) => R(s, o, u, v));
                    })(this.ast.matchers, s, o, u, v);
                }
                buildStyles(s, o, u) {
                    const v = this._stateStyles['*'],
                        R = this._stateStyles[s],
                        G = v ? v.buildStyles(o, u) : {};
                    return R ? R.buildStyles(o, u) : G;
                }
                build(s, o, u, v, R, G, Y, ue, Ve, it) {
                    const Et = [],
                        Mt =
                            (this.ast.options && this.ast.options.params) || Dr,
                        mt = this.buildStyles(u, (Y && Y.params) || Dr, Et),
                        Vt = (ue && ue.params) || Dr,
                        _n = this.buildStyles(v, Vt, Et),
                        Sn = new Set(),
                        ur = new Map(),
                        ri = new Map(),
                        Hr = 'void' === v,
                        oo = {
                            params: Object.assign(Object.assign({}, Mt), Vt),
                        },
                        Vi = it
                            ? []
                            : Vr(
                                  s,
                                  o,
                                  this.ast.animation,
                                  R,
                                  G,
                                  mt,
                                  _n,
                                  oo,
                                  Ve,
                                  Et
                              );
                    let gi = 0;
                    if (
                        (Vi.forEach((js) => {
                            gi = Math.max(js.duration + js.delay, gi);
                        }),
                        Et.length)
                    )
                        return Mi(
                            o,
                            this._triggerName,
                            u,
                            v,
                            Hr,
                            mt,
                            _n,
                            [],
                            [],
                            ur,
                            ri,
                            gi,
                            Et
                        );
                    Vi.forEach((js) => {
                        const Pi = js.element,
                            Lo = an(ur, Pi, {});
                        js.preStyleProps.forEach((ko) => (Lo[ko] = !0));
                        const Zo = an(ri, Pi, {});
                        js.postStyleProps.forEach((ko) => (Zo[ko] = !0)),
                            Pi !== o && Sn.add(Pi);
                    });
                    const Us = gr(Sn.values());
                    return Mi(
                        o,
                        this._triggerName,
                        u,
                        v,
                        Hr,
                        mt,
                        _n,
                        Vi,
                        Us,
                        ur,
                        ri,
                        gi
                    );
                }
            }
            class So {
                constructor(s, o, u) {
                    (this.styles = s),
                        (this.defaultParams = o),
                        (this.normalizer = u);
                }
                buildStyles(s, o) {
                    const u = {},
                        v = sn(this.defaultParams);
                    return (
                        Object.keys(s).forEach((R) => {
                            const G = s[R];
                            null != G && (v[R] = G);
                        }),
                        this.styles.styles.forEach((R) => {
                            if ('string' != typeof R) {
                                const G = R;
                                Object.keys(G).forEach((Y) => {
                                    let ue = G[Y];
                                    ue.length > 1 && (ue = zr(ue, v, o));
                                    const Ve =
                                        this.normalizer.normalizePropertyName(
                                            Y,
                                            o
                                        );
                                    (ue = this.normalizer.normalizeStyleValue(
                                        Y,
                                        Ve,
                                        ue,
                                        o
                                    )),
                                        (u[Ve] = ue);
                                });
                            }
                        }),
                        u
                    );
                }
            }
            class ps {
                constructor(s, o, u) {
                    (this.name = s),
                        (this.ast = o),
                        (this._normalizer = u),
                        (this.transitionFactories = []),
                        (this.states = {}),
                        o.states.forEach((v) => {
                            this.states[v.name] = new So(
                                v.style,
                                (v.options && v.options.params) || {},
                                u
                            );
                        }),
                        mr(this.states, 'true', '1'),
                        mr(this.states, 'false', '0'),
                        o.transitions.forEach((v) => {
                            this.transitionFactories.push(
                                new hs(s, v, this.states)
                            );
                        }),
                        (this.fallbackTransition = (function gs(d, s, o) {
                            return new hs(
                                d,
                                {
                                    type: 1,
                                    animation: {
                                        type: 2,
                                        steps: [],
                                        options: null,
                                    },
                                    matchers: [(G, Y) => !0],
                                    options: null,
                                    queryCount: 0,
                                    depCount: 0,
                                },
                                s
                            );
                        })(s, this.states));
                }
                get containsQueries() {
                    return this.ast.queryCount > 0;
                }
                matchTransition(s, o, u, v) {
                    return (
                        this.transitionFactories.find((G) =>
                            G.match(s, o, u, v)
                        ) || null
                    );
                }
                matchStyles(s, o, u) {
                    return this.fallbackTransition.buildStyles(s, o, u);
                }
            }
            function mr(d, s, o) {
                d.hasOwnProperty(s)
                    ? d.hasOwnProperty(o) || (d[o] = d[s])
                    : d.hasOwnProperty(o) && (d[s] = d[o]);
            }
            const Di = new Gt();
            class Ss {
                constructor(s, o, u) {
                    (this.bodyNode = s),
                        (this._driver = o),
                        (this._normalizer = u),
                        (this._animations = {}),
                        (this._playersById = {}),
                        (this.players = []);
                }
                register(s, o) {
                    const u = [],
                        v = Ii(this._driver, o, u);
                    if (u.length)
                        throw new Error(
                            `Unable to build the animation due to the following errors: ${u.join(
                                '\n'
                            )}`
                        );
                    this._animations[s] = v;
                }
                _buildPlayer(s, o, u) {
                    const v = s.element,
                        R = Nt(0, this._normalizer, 0, s.keyframes, o, u);
                    return this._driver.animate(
                        v,
                        R,
                        s.duration,
                        s.delay,
                        s.easing,
                        [],
                        !0
                    );
                }
                create(s, o, u = {}) {
                    const v = [],
                        R = this._animations[s];
                    let G;
                    const Y = new Map();
                    if (
                        (R
                            ? ((G = Vr(
                                  this._driver,
                                  o,
                                  R,
                                  $i,
                                  yi,
                                  {},
                                  {},
                                  u,
                                  Di,
                                  v
                              )),
                              G.forEach((it) => {
                                  const Et = an(Y, it.element, {});
                                  it.postStyleProps.forEach(
                                      (Mt) => (Et[Mt] = null)
                                  );
                              }))
                            : (v.push(
                                  "The requested animation doesn't exist or has already been destroyed"
                              ),
                              (G = [])),
                        v.length)
                    )
                        throw new Error(
                            `Unable to create the animation due to the following errors: ${v.join(
                                '\n'
                            )}`
                        );
                    Y.forEach((it, Et) => {
                        Object.keys(it).forEach((Mt) => {
                            it[Mt] = this._driver.computeStyle(Et, Mt, tn);
                        });
                    });
                    const Ve = En(
                        G.map((it) => {
                            const Et = Y.get(it.element);
                            return this._buildPlayer(it, {}, Et);
                        })
                    );
                    return (
                        (this._playersById[s] = Ve),
                        Ve.onDestroy(() => this.destroy(s)),
                        this.players.push(Ve),
                        Ve
                    );
                }
                destroy(s) {
                    const o = this._getPlayer(s);
                    o.destroy(), delete this._playersById[s];
                    const u = this.players.indexOf(o);
                    u >= 0 && this.players.splice(u, 1);
                }
                _getPlayer(s) {
                    const o = this._playersById[s];
                    if (!o)
                        throw new Error(
                            `Unable to find the timeline player referenced by ${s}`
                        );
                    return o;
                }
                listen(s, o, u, v) {
                    const R = Ir(o, '', '', '');
                    return Sr(this._getPlayer(s), u, R, v), () => {};
                }
                command(s, o, u, v) {
                    if ('register' == u) return void this.register(s, v[0]);
                    if ('create' == u)
                        return void this.create(s, o, v[0] || {});
                    const R = this._getPlayer(s);
                    switch (u) {
                        case 'play':
                            R.play();
                            break;
                        case 'pause':
                            R.pause();
                            break;
                        case 'reset':
                            R.reset();
                            break;
                        case 'restart':
                            R.restart();
                            break;
                        case 'finish':
                            R.finish();
                            break;
                        case 'init':
                            R.init();
                            break;
                        case 'setPosition':
                            R.setPosition(parseFloat(v[0]));
                            break;
                        case 'destroy':
                            this.destroy(s);
                    }
                }
            }
            const di = 'ng-animate-queued',
                C = 'ng-animate-disabled',
                Fe = [],
                at = {
                    namespaceId: '',
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1,
                },
                yn = {
                    namespaceId: '',
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0,
                },
                Cn = '__ng_removed';
            class fi {
                constructor(s, o = '') {
                    this.namespaceId = o;
                    const u = s && s.hasOwnProperty('value');
                    if (
                        ((this.value = (function Is(d) {
                            return null != d ? d : null;
                        })(u ? s.value : s)),
                        u)
                    ) {
                        const R = sn(s);
                        delete R.value, (this.options = R);
                    } else this.options = {};
                    this.options.params || (this.options.params = {});
                }
                get params() {
                    return this.options.params;
                }
                absorbOptions(s) {
                    const o = s.params;
                    if (o) {
                        const u = this.options.params;
                        Object.keys(o).forEach((v) => {
                            null == u[v] && (u[v] = o[v]);
                        });
                    }
                }
            }
            const Ur = 'void',
                hi = new fi(Ur);
            class rs {
                constructor(s, o, u) {
                    (this.id = s),
                        (this.hostElement = o),
                        (this._engine = u),
                        (this.players = []),
                        (this._triggers = {}),
                        (this._queue = []),
                        (this._elementListeners = new Map()),
                        (this._hostClassName = 'ng-tns-' + s),
                        pi(o, this._hostClassName);
                }
                listen(s, o, u, v) {
                    if (!this._triggers.hasOwnProperty(o))
                        throw new Error(
                            `Unable to listen on the animation trigger event "${u}" because the animation trigger "${o}" doesn't exist!`
                        );
                    if (null == u || 0 == u.length)
                        throw new Error(
                            `Unable to listen on the animation trigger "${o}" because the provided event is undefined!`
                        );
                    if (
                        !(function Ho(d) {
                            return 'start' == d || 'done' == d;
                        })(u)
                    )
                        throw new Error(
                            `The provided animation trigger event "${u}" for the animation trigger "${o}" is not supported!`
                        );
                    const R = an(this._elementListeners, s, []),
                        G = { name: o, phase: u, callback: v };
                    R.push(G);
                    const Y = an(this._engine.statesByElement, s, {});
                    return (
                        Y.hasOwnProperty(o) ||
                            (pi(s, _e), pi(s, _e + '-' + o), (Y[o] = hi)),
                        () => {
                            this._engine.afterFlush(() => {
                                const ue = R.indexOf(G);
                                ue >= 0 && R.splice(ue, 1),
                                    this._triggers[o] || delete Y[o];
                            });
                        }
                    );
                }
                register(s, o) {
                    return !this._triggers[s] && ((this._triggers[s] = o), !0);
                }
                _getTrigger(s) {
                    const o = this._triggers[s];
                    if (!o)
                        throw new Error(
                            `The provided animation trigger "${s}" has not been registered!`
                        );
                    return o;
                }
                trigger(s, o, u, v = !0) {
                    const R = this._getTrigger(o),
                        G = new Js(this.id, o, s);
                    let Y = this._engine.statesByElement.get(s);
                    Y ||
                        (pi(s, _e),
                        pi(s, _e + '-' + o),
                        this._engine.statesByElement.set(s, (Y = {})));
                    let ue = Y[o];
                    const Ve = new fi(u, this.id);
                    if (
                        (!(u && u.hasOwnProperty('value')) &&
                            ue &&
                            Ve.absorbOptions(ue.options),
                        (Y[o] = Ve),
                        ue || (ue = hi),
                        Ve.value !== Ur && ue.value === Ve.value)
                    ) {
                        if (
                            !(function Io(d, s) {
                                const o = Object.keys(d),
                                    u = Object.keys(s);
                                if (o.length != u.length) return !1;
                                for (let v = 0; v < o.length; v++) {
                                    const R = o[v];
                                    if (!s.hasOwnProperty(R) || d[R] !== s[R])
                                        return !1;
                                }
                                return !0;
                            })(ue.params, Ve.params)
                        ) {
                            const Vt = [],
                                _n = R.matchStyles(ue.value, ue.params, Vt),
                                Sn = R.matchStyles(Ve.value, Ve.params, Vt);
                            Vt.length
                                ? this._engine.reportError(Vt)
                                : this._engine.afterFlush(() => {
                                      oi(s, _n), Mr(s, Sn);
                                  });
                        }
                        return;
                    }
                    const Mt = an(this._engine.playersByElement, s, []);
                    Mt.forEach((Vt) => {
                        Vt.namespaceId == this.id &&
                            Vt.triggerName == o &&
                            Vt.queued &&
                            Vt.destroy();
                    });
                    let ht = R.matchTransition(
                            ue.value,
                            Ve.value,
                            s,
                            Ve.params
                        ),
                        mt = !1;
                    if (!ht) {
                        if (!v) return;
                        (ht = R.fallbackTransition), (mt = !0);
                    }
                    return (
                        this._engine.totalQueuedPlayers++,
                        this._queue.push({
                            element: s,
                            triggerName: o,
                            transition: ht,
                            fromState: ue,
                            toState: Ve,
                            player: G,
                            isFallbackTransition: mt,
                        }),
                        mt ||
                            (pi(s, di),
                            G.onStart(() => {
                                qi(s, di);
                            })),
                        G.onDone(() => {
                            let Vt = this.players.indexOf(G);
                            Vt >= 0 && this.players.splice(Vt, 1);
                            const _n = this._engine.playersByElement.get(s);
                            if (_n) {
                                let Sn = _n.indexOf(G);
                                Sn >= 0 && _n.splice(Sn, 1);
                            }
                        }),
                        this.players.push(G),
                        Mt.push(G),
                        G
                    );
                }
                deregister(s) {
                    delete this._triggers[s],
                        this._engine.statesByElement.forEach((o, u) => {
                            delete o[s];
                        }),
                        this._elementListeners.forEach((o, u) => {
                            this._elementListeners.set(
                                u,
                                o.filter((v) => v.name != s)
                            );
                        });
                }
                clearElementCache(s) {
                    this._engine.statesByElement.delete(s),
                        this._elementListeners.delete(s);
                    const o = this._engine.playersByElement.get(s);
                    o &&
                        (o.forEach((u) => u.destroy()),
                        this._engine.playersByElement.delete(s));
                }
                _signalRemovalForInnerTriggers(s, o) {
                    const u = this._engine.driver.query(s, ge, !0);
                    u.forEach((v) => {
                        if (v[Cn]) return;
                        const R = this._engine.fetchNamespacesByElement(v);
                        R.size
                            ? R.forEach((G) =>
                                  G.triggerLeaveAnimation(v, o, !1, !0)
                              )
                            : this.clearElementCache(v);
                    }),
                        this._engine.afterFlushAnimationsDone(() =>
                            u.forEach((v) => this.clearElementCache(v))
                        );
                }
                triggerLeaveAnimation(s, o, u, v) {
                    const R = this._engine.statesByElement.get(s),
                        G = new Map();
                    if (R) {
                        const Y = [];
                        if (
                            (Object.keys(R).forEach((ue) => {
                                if (
                                    (G.set(ue, R[ue].value), this._triggers[ue])
                                ) {
                                    const Ve = this.trigger(s, ue, Ur, v);
                                    Ve && Y.push(Ve);
                                }
                            }),
                            Y.length)
                        )
                            return (
                                this._engine.markElementAsRemoved(
                                    this.id,
                                    s,
                                    !0,
                                    o,
                                    G
                                ),
                                u &&
                                    En(Y).onDone(() =>
                                        this._engine.processLeaveNode(s)
                                    ),
                                !0
                            );
                    }
                    return !1;
                }
                prepareLeaveAnimationListeners(s) {
                    const o = this._elementListeners.get(s),
                        u = this._engine.statesByElement.get(s);
                    if (o && u) {
                        const v = new Set();
                        o.forEach((R) => {
                            const G = R.name;
                            if (v.has(G)) return;
                            v.add(G);
                            const ue = this._triggers[G].fallbackTransition,
                                Ve = u[G] || hi,
                                it = new fi(Ur),
                                Et = new Js(this.id, G, s);
                            this._engine.totalQueuedPlayers++,
                                this._queue.push({
                                    element: s,
                                    triggerName: G,
                                    transition: ue,
                                    fromState: Ve,
                                    toState: it,
                                    player: Et,
                                    isFallbackTransition: !0,
                                });
                        });
                    }
                }
                removeNode(s, o) {
                    const u = this._engine;
                    if (
                        (s.childElementCount &&
                            this._signalRemovalForInnerTriggers(s, o),
                        this.triggerLeaveAnimation(s, o, !0))
                    )
                        return;
                    let v = !1;
                    if (u.totalAnimations) {
                        const R = u.players.length
                            ? u.playersByQueriedElement.get(s)
                            : [];
                        if (R && R.length) v = !0;
                        else {
                            let G = s;
                            for (; (G = G.parentNode); )
                                if (u.statesByElement.get(G)) {
                                    v = !0;
                                    break;
                                }
                        }
                    }
                    if ((this.prepareLeaveAnimationListeners(s), v))
                        u.markElementAsRemoved(this.id, s, !1, o);
                    else {
                        const R = s[Cn];
                        (!R || R === at) &&
                            (u.afterFlush(() => this.clearElementCache(s)),
                            u.destroyInnerAnimations(s),
                            u._onRemovalComplete(s, o));
                    }
                }
                insertNode(s, o) {
                    pi(s, this._hostClassName);
                }
                drainQueuedTransitions(s) {
                    const o = [];
                    return (
                        this._queue.forEach((u) => {
                            const v = u.player;
                            if (v.destroyed) return;
                            const R = u.element,
                                G = this._elementListeners.get(R);
                            G &&
                                G.forEach((Y) => {
                                    if (Y.name == u.triggerName) {
                                        const ue = Ir(
                                            R,
                                            u.triggerName,
                                            u.fromState.value,
                                            u.toState.value
                                        );
                                        (ue._data = s),
                                            Sr(
                                                u.player,
                                                Y.phase,
                                                ue,
                                                Y.callback
                                            );
                                    }
                                }),
                                v.markedForDestroy
                                    ? this._engine.afterFlush(() => {
                                          v.destroy();
                                      })
                                    : o.push(u);
                        }),
                        (this._queue = []),
                        o.sort((u, v) => {
                            const R = u.transition.ast.depCount,
                                G = v.transition.ast.depCount;
                            return 0 == R || 0 == G
                                ? R - G
                                : this._engine.driver.containsElement(
                                      u.element,
                                      v.element
                                  )
                                ? 1
                                : -1;
                        })
                    );
                }
                destroy(s) {
                    this.players.forEach((o) => o.destroy()),
                        this._signalRemovalForInnerTriggers(
                            this.hostElement,
                            s
                        );
                }
                elementContainsData(s) {
                    let o = !1;
                    return (
                        this._elementListeners.has(s) && (o = !0),
                        (o = !!this._queue.find((u) => u.element === s) || o),
                        o
                    );
                }
            }
            class qs {
                constructor(s, o, u) {
                    (this.bodyNode = s),
                        (this.driver = o),
                        (this._normalizer = u),
                        (this.players = []),
                        (this.newHostElements = new Map()),
                        (this.playersByElement = new Map()),
                        (this.playersByQueriedElement = new Map()),
                        (this.statesByElement = new Map()),
                        (this.disabledNodes = new Set()),
                        (this.totalAnimations = 0),
                        (this.totalQueuedPlayers = 0),
                        (this._namespaceLookup = {}),
                        (this._namespaceList = []),
                        (this._flushFns = []),
                        (this._whenQuietFns = []),
                        (this.namespacesByHostElement = new Map()),
                        (this.collectedEnterElements = []),
                        (this.collectedLeaveElements = []),
                        (this.onRemovalComplete = (v, R) => {});
                }
                _onRemovalComplete(s, o) {
                    this.onRemovalComplete(s, o);
                }
                get queuedPlayers() {
                    const s = [];
                    return (
                        this._namespaceList.forEach((o) => {
                            o.players.forEach((u) => {
                                u.queued && s.push(u);
                            });
                        }),
                        s
                    );
                }
                createNamespace(s, o) {
                    const u = new rs(s, o, this);
                    return (
                        this.bodyNode &&
                        this.driver.containsElement(this.bodyNode, o)
                            ? this._balanceNamespaceList(u, o)
                            : (this.newHostElements.set(o, u),
                              this.collectEnterElement(o)),
                        (this._namespaceLookup[s] = u)
                    );
                }
                _balanceNamespaceList(s, o) {
                    const u = this._namespaceList.length - 1;
                    if (u >= 0) {
                        let v = !1;
                        for (let R = u; R >= 0; R--)
                            if (
                                this.driver.containsElement(
                                    this._namespaceList[R].hostElement,
                                    o
                                )
                            ) {
                                this._namespaceList.splice(R + 1, 0, s),
                                    (v = !0);
                                break;
                            }
                        v || this._namespaceList.splice(0, 0, s);
                    } else this._namespaceList.push(s);
                    return this.namespacesByHostElement.set(o, s), s;
                }
                register(s, o) {
                    let u = this._namespaceLookup[s];
                    return u || (u = this.createNamespace(s, o)), u;
                }
                registerTrigger(s, o, u) {
                    let v = this._namespaceLookup[s];
                    v && v.register(o, u) && this.totalAnimations++;
                }
                destroy(s, o) {
                    if (!s) return;
                    const u = this._fetchNamespace(s);
                    this.afterFlush(() => {
                        this.namespacesByHostElement.delete(u.hostElement),
                            delete this._namespaceLookup[s];
                        const v = this._namespaceList.indexOf(u);
                        v >= 0 && this._namespaceList.splice(v, 1);
                    }),
                        this.afterFlushAnimationsDone(() => u.destroy(o));
                }
                _fetchNamespace(s) {
                    return this._namespaceLookup[s];
                }
                fetchNamespacesByElement(s) {
                    const o = new Set(),
                        u = this.statesByElement.get(s);
                    if (u) {
                        const v = Object.keys(u);
                        for (let R = 0; R < v.length; R++) {
                            const G = u[v[R]].namespaceId;
                            if (G) {
                                const Y = this._fetchNamespace(G);
                                Y && o.add(Y);
                            }
                        }
                    }
                    return o;
                }
                trigger(s, o, u, v) {
                    if (Zi(o)) {
                        const R = this._fetchNamespace(s);
                        if (R) return R.trigger(o, u, v), !0;
                    }
                    return !1;
                }
                insertNode(s, o, u, v) {
                    if (!Zi(o)) return;
                    const R = o[Cn];
                    if (R && R.setForRemoval) {
                        (R.setForRemoval = !1), (R.setForMove = !0);
                        const G = this.collectedLeaveElements.indexOf(o);
                        G >= 0 && this.collectedLeaveElements.splice(G, 1);
                    }
                    if (s) {
                        const G = this._fetchNamespace(s);
                        G && G.insertNode(o, u);
                    }
                    v && this.collectEnterElement(o);
                }
                collectEnterElement(s) {
                    this.collectedEnterElements.push(s);
                }
                markElementAsDisabled(s, o) {
                    o
                        ? this.disabledNodes.has(s) ||
                          (this.disabledNodes.add(s), pi(s, C))
                        : this.disabledNodes.has(s) &&
                          (this.disabledNodes.delete(s), qi(s, C));
                }
                removeNode(s, o, u, v) {
                    if (Zi(o)) {
                        const R = s ? this._fetchNamespace(s) : null;
                        if (
                            (R
                                ? R.removeNode(o, v)
                                : this.markElementAsRemoved(s, o, !1, v),
                            u)
                        ) {
                            const G = this.namespacesByHostElement.get(o);
                            G && G.id !== s && G.removeNode(o, v);
                        }
                    } else this._onRemovalComplete(o, v);
                }
                markElementAsRemoved(s, o, u, v, R) {
                    this.collectedLeaveElements.push(o),
                        (o[Cn] = {
                            namespaceId: s,
                            setForRemoval: v,
                            hasAnimation: u,
                            removedBeforeQueried: !1,
                            previousTriggersValues: R,
                        });
                }
                listen(s, o, u, v, R) {
                    return Zi(o)
                        ? this._fetchNamespace(s).listen(o, u, v, R)
                        : () => {};
                }
                _buildInstruction(s, o, u, v, R) {
                    return s.transition.build(
                        this.driver,
                        s.element,
                        s.fromState.value,
                        s.toState.value,
                        u,
                        v,
                        s.fromState.options,
                        s.toState.options,
                        o,
                        R
                    );
                }
                destroyInnerAnimations(s) {
                    let o = this.driver.query(s, ge, !0);
                    o.forEach((u) => this.destroyActiveAnimationsForElement(u)),
                        0 != this.playersByQueriedElement.size &&
                            ((o = this.driver.query(s, We, !0)),
                            o.forEach((u) =>
                                this.finishActiveQueriedAnimationOnElement(u)
                            ));
                }
                destroyActiveAnimationsForElement(s) {
                    const o = this.playersByElement.get(s);
                    o &&
                        o.forEach((u) => {
                            u.queued ? (u.markedForDestroy = !0) : u.destroy();
                        });
                }
                finishActiveQueriedAnimationOnElement(s) {
                    const o = this.playersByQueriedElement.get(s);
                    o && o.forEach((u) => u.finish());
                }
                whenRenderingDone() {
                    return new Promise((s) => {
                        if (this.players.length)
                            return En(this.players).onDone(() => s());
                        s();
                    });
                }
                processLeaveNode(s) {
                    var o;
                    const u = s[Cn];
                    if (u && u.setForRemoval) {
                        if (((s[Cn] = at), u.namespaceId)) {
                            this.destroyInnerAnimations(s);
                            const v = this._fetchNamespace(u.namespaceId);
                            v && v.clearElementCache(s);
                        }
                        this._onRemovalComplete(s, u.setForRemoval);
                    }
                    (null === (o = s.classList) || void 0 === o
                        ? void 0
                        : o.contains(C)) && this.markElementAsDisabled(s, !1),
                        this.driver
                            .query(s, '.ng-animate-disabled', !0)
                            .forEach((v) => {
                                this.markElementAsDisabled(v, !1);
                            });
                }
                flush(s = -1) {
                    let o = [];
                    if (
                        (this.newHostElements.size &&
                            (this.newHostElements.forEach((u, v) =>
                                this._balanceNamespaceList(u, v)
                            ),
                            this.newHostElements.clear()),
                        this.totalAnimations &&
                            this.collectedEnterElements.length)
                    )
                        for (
                            let u = 0;
                            u < this.collectedEnterElements.length;
                            u++
                        )
                            pi(
                                this.collectedEnterElements[u],
                                'ng-star-inserted'
                            );
                    if (
                        this._namespaceList.length &&
                        (this.totalQueuedPlayers ||
                            this.collectedLeaveElements.length)
                    ) {
                        const u = [];
                        try {
                            o = this._flushAnimations(u, s);
                        } finally {
                            for (let v = 0; v < u.length; v++) u[v]();
                        }
                    } else
                        for (
                            let u = 0;
                            u < this.collectedLeaveElements.length;
                            u++
                        )
                            this.processLeaveNode(
                                this.collectedLeaveElements[u]
                            );
                    if (
                        ((this.totalQueuedPlayers = 0),
                        (this.collectedEnterElements.length = 0),
                        (this.collectedLeaveElements.length = 0),
                        this._flushFns.forEach((u) => u()),
                        (this._flushFns = []),
                        this._whenQuietFns.length)
                    ) {
                        const u = this._whenQuietFns;
                        (this._whenQuietFns = []),
                            o.length
                                ? En(o).onDone(() => {
                                      u.forEach((v) => v());
                                  })
                                : u.forEach((v) => v());
                    }
                }
                reportError(s) {
                    throw new Error(
                        `Unable to process animations due to the following failed trigger transitions\n ${s.join(
                            '\n'
                        )}`
                    );
                }
                _flushAnimations(s, o) {
                    const u = new Gt(),
                        v = [],
                        R = new Map(),
                        G = [],
                        Y = new Map(),
                        ue = new Map(),
                        Ve = new Map(),
                        it = new Set();
                    this.disabledNodes.forEach((St) => {
                        it.add(St);
                        const Lt = this.driver.query(
                            St,
                            '.ng-animate-queued',
                            !0
                        );
                        for (let Wt = 0; Wt < Lt.length; Wt++) it.add(Lt[Wt]);
                    });
                    const Et = this.bodyNode,
                        Mt = Array.from(this.statesByElement.keys()),
                        ht = ir(Mt, this.collectedEnterElements),
                        mt = new Map();
                    let Vt = 0;
                    ht.forEach((St, Lt) => {
                        const Wt = $i + Vt++;
                        mt.set(Lt, Wt), St.forEach((Bn) => pi(Bn, Wt));
                    });
                    const _n = [],
                        Sn = new Set(),
                        ur = new Set();
                    for (
                        let St = 0;
                        St < this.collectedLeaveElements.length;
                        St++
                    ) {
                        const Lt = this.collectedLeaveElements[St],
                            Wt = Lt[Cn];
                        Wt &&
                            Wt.setForRemoval &&
                            (_n.push(Lt),
                            Sn.add(Lt),
                            Wt.hasAnimation
                                ? this.driver
                                      .query(Lt, '.ng-star-inserted', !0)
                                      .forEach((Bn) => Sn.add(Bn))
                                : ur.add(Lt));
                    }
                    const ri = new Map(),
                        Hr = ir(Mt, Array.from(Sn));
                    Hr.forEach((St, Lt) => {
                        const Wt = yi + Vt++;
                        ri.set(Lt, Wt), St.forEach((Bn) => pi(Bn, Wt));
                    }),
                        s.push(() => {
                            ht.forEach((St, Lt) => {
                                const Wt = mt.get(Lt);
                                St.forEach((Bn) => qi(Bn, Wt));
                            }),
                                Hr.forEach((St, Lt) => {
                                    const Wt = ri.get(Lt);
                                    St.forEach((Bn) => qi(Bn, Wt));
                                }),
                                _n.forEach((St) => {
                                    this.processLeaveNode(St);
                                });
                        });
                    const oo = [],
                        Vi = [];
                    for (let St = this._namespaceList.length - 1; St >= 0; St--)
                        this._namespaceList[St].drainQueuedTransitions(
                            o
                        ).forEach((Wt) => {
                            const Bn = Wt.player,
                                Br = Wt.element;
                            if (
                                (oo.push(Bn),
                                this.collectedEnterElements.length)
                            ) {
                                const ii = Br[Cn];
                                if (ii && ii.setForMove) {
                                    if (
                                        ii.previousTriggersValues &&
                                        ii.previousTriggersValues.has(
                                            Wt.triggerName
                                        )
                                    ) {
                                        const lo =
                                                ii.previousTriggersValues.get(
                                                    Wt.triggerName
                                                ),
                                            Hs = this.statesByElement.get(
                                                Wt.element
                                            );
                                        Hs &&
                                            Hs[Wt.triggerName] &&
                                            (Hs[Wt.triggerName].value = lo);
                                    }
                                    return void Bn.destroy();
                                }
                            }
                            const Xi =
                                    !Et || !this.driver.containsElement(Et, Br),
                                Zr = ri.get(Br),
                                ao = mt.get(Br),
                                br = this._buildInstruction(Wt, u, ao, Zr, Xi);
                            if (br.errors && br.errors.length)
                                return void Vi.push(br);
                            if (Xi)
                                return (
                                    Bn.onStart(() => oi(Br, br.fromStyles)),
                                    Bn.onDestroy(() => Mr(Br, br.toStyles)),
                                    void v.push(Bn)
                                );
                            if (Wt.isFallbackTransition)
                                return (
                                    Bn.onStart(() => oi(Br, br.fromStyles)),
                                    Bn.onDestroy(() => Mr(Br, br.toStyles)),
                                    void v.push(Bn)
                                );
                            const ru = [];
                            br.timelines.forEach((ii) => {
                                (ii.stretchStartingKeyframe = !0),
                                    this.disabledNodes.has(ii.element) ||
                                        ru.push(ii);
                            }),
                                (br.timelines = ru),
                                u.append(Br, br.timelines),
                                G.push({
                                    instruction: br,
                                    player: Bn,
                                    element: Br,
                                }),
                                br.queriedElements.forEach((ii) =>
                                    an(Y, ii, []).push(Bn)
                                ),
                                br.preStyleProps.forEach((ii, lo) => {
                                    const Hs = Object.keys(ii);
                                    if (Hs.length) {
                                        let uo = ue.get(lo);
                                        uo || ue.set(lo, (uo = new Set())),
                                            Hs.forEach((ha) => uo.add(ha));
                                    }
                                }),
                                br.postStyleProps.forEach((ii, lo) => {
                                    const Hs = Object.keys(ii);
                                    let uo = Ve.get(lo);
                                    uo || Ve.set(lo, (uo = new Set())),
                                        Hs.forEach((ha) => uo.add(ha));
                                });
                        });
                    if (Vi.length) {
                        const St = [];
                        Vi.forEach((Lt) => {
                            St.push(`@${Lt.triggerName} has failed due to:\n`),
                                Lt.errors.forEach((Wt) => St.push(`- ${Wt}\n`));
                        }),
                            oo.forEach((Lt) => Lt.destroy()),
                            this.reportError(St);
                    }
                    const gi = new Map(),
                        Us = new Map();
                    G.forEach((St) => {
                        const Lt = St.element;
                        u.has(Lt) &&
                            (Us.set(Lt, Lt),
                            this._beforeAnimationBuild(
                                St.player.namespaceId,
                                St.instruction,
                                gi
                            ));
                    }),
                        v.forEach((St) => {
                            const Lt = St.element;
                            this._getPreviousPlayers(
                                Lt,
                                !1,
                                St.namespaceId,
                                St.triggerName,
                                null
                            ).forEach((Bn) => {
                                an(gi, Lt, []).push(Bn), Bn.destroy();
                            });
                        });
                    const js = _n.filter((St) => Os(St, ue, Ve)),
                        Pi = new Map();
                    ki(Pi, this.driver, ur, Ve, tn).forEach((St) => {
                        Os(St, ue, Ve) && js.push(St);
                    });
                    const Zo = new Map();
                    ht.forEach((St, Lt) => {
                        ki(Zo, this.driver, new Set(St), ue, '!');
                    }),
                        js.forEach((St) => {
                            const Lt = Pi.get(St),
                                Wt = Zo.get(St);
                            Pi.set(
                                St,
                                Object.assign(Object.assign({}, Lt), Wt)
                            );
                        });
                    const ko = [],
                        $a = [],
                        Dl = {};
                    G.forEach((St) => {
                        const { element: Lt, player: Wt, instruction: Bn } = St;
                        if (u.has(Lt)) {
                            if (it.has(Lt))
                                return (
                                    Wt.onDestroy(() => Mr(Lt, Bn.toStyles)),
                                    (Wt.disabled = !0),
                                    Wt.overrideTotalTime(Bn.totalTime),
                                    void v.push(Wt)
                                );
                            let Br = Dl;
                            if (Us.size > 1) {
                                let Zr = Lt;
                                const ao = [];
                                for (; (Zr = Zr.parentNode); ) {
                                    const br = Us.get(Zr);
                                    if (br) {
                                        Br = br;
                                        break;
                                    }
                                    ao.push(Zr);
                                }
                                ao.forEach((br) => Us.set(br, Br));
                            }
                            const Xi = this._buildAnimation(
                                Wt.namespaceId,
                                Bn,
                                gi,
                                R,
                                Zo,
                                Pi
                            );
                            if ((Wt.setRealPlayer(Xi), Br === Dl)) ko.push(Wt);
                            else {
                                const Zr = this.playersByElement.get(Br);
                                Zr && Zr.length && (Wt.parentPlayer = En(Zr)),
                                    v.push(Wt);
                            }
                        } else
                            oi(Lt, Bn.fromStyles),
                                Wt.onDestroy(() => Mr(Lt, Bn.toStyles)),
                                $a.push(Wt),
                                it.has(Lt) && v.push(Wt);
                    }),
                        $a.forEach((St) => {
                            const Lt = R.get(St.element);
                            if (Lt && Lt.length) {
                                const Wt = En(Lt);
                                St.setRealPlayer(Wt);
                            }
                        }),
                        v.forEach((St) => {
                            St.parentPlayer
                                ? St.syncPlayerEvents(St.parentPlayer)
                                : St.destroy();
                        });
                    for (let St = 0; St < _n.length; St++) {
                        const Lt = _n[St],
                            Wt = Lt[Cn];
                        if ((qi(Lt, yi), Wt && Wt.hasAnimation)) continue;
                        let Bn = [];
                        if (Y.size) {
                            let Xi = Y.get(Lt);
                            Xi && Xi.length && Bn.push(...Xi);
                            let Zr = this.driver.query(Lt, We, !0);
                            for (let ao = 0; ao < Zr.length; ao++) {
                                let br = Y.get(Zr[ao]);
                                br && br.length && Bn.push(...br);
                            }
                        }
                        const Br = Bn.filter((Xi) => !Xi.destroyed);
                        Br.length
                            ? na(this, Lt, Br)
                            : this.processLeaveNode(Lt);
                    }
                    return (
                        (_n.length = 0),
                        ko.forEach((St) => {
                            this.players.push(St),
                                St.onDone(() => {
                                    St.destroy();
                                    const Lt = this.players.indexOf(St);
                                    this.players.splice(Lt, 1);
                                }),
                                St.play();
                        }),
                        ko
                    );
                }
                elementContainsData(s, o) {
                    let u = !1;
                    const v = o[Cn];
                    return (
                        v && v.setForRemoval && (u = !0),
                        this.playersByElement.has(o) && (u = !0),
                        this.playersByQueriedElement.has(o) && (u = !0),
                        this.statesByElement.has(o) && (u = !0),
                        this._fetchNamespace(s).elementContainsData(o) || u
                    );
                }
                afterFlush(s) {
                    this._flushFns.push(s);
                }
                afterFlushAnimationsDone(s) {
                    this._whenQuietFns.push(s);
                }
                _getPreviousPlayers(s, o, u, v, R) {
                    let G = [];
                    if (o) {
                        const Y = this.playersByQueriedElement.get(s);
                        Y && (G = Y);
                    } else {
                        const Y = this.playersByElement.get(s);
                        if (Y) {
                            const ue = !R || R == Ur;
                            Y.forEach((Ve) => {
                                Ve.queued ||
                                    (!ue && Ve.triggerName != v) ||
                                    G.push(Ve);
                            });
                        }
                    }
                    return (
                        (u || v) &&
                            (G = G.filter(
                                (Y) =>
                                    !(
                                        (u && u != Y.namespaceId) ||
                                        (v && v != Y.triggerName)
                                    )
                            )),
                        G
                    );
                }
                _beforeAnimationBuild(s, o, u) {
                    const R = o.element,
                        G = o.isRemovalTransition ? void 0 : s,
                        Y = o.isRemovalTransition ? void 0 : o.triggerName;
                    for (const ue of o.timelines) {
                        const Ve = ue.element,
                            it = Ve !== R,
                            Et = an(u, Ve, []);
                        this._getPreviousPlayers(
                            Ve,
                            it,
                            G,
                            Y,
                            o.toState
                        ).forEach((ht) => {
                            const mt = ht.getRealPlayer();
                            mt.beforeDestroy && mt.beforeDestroy(),
                                ht.destroy(),
                                Et.push(ht);
                        });
                    }
                    oi(R, o.fromStyles);
                }
                _buildAnimation(s, o, u, v, R, G) {
                    const Y = o.triggerName,
                        ue = o.element,
                        Ve = [],
                        it = new Set(),
                        Et = new Set(),
                        Mt = o.timelines.map((mt) => {
                            const Vt = mt.element;
                            it.add(Vt);
                            const _n = Vt[Cn];
                            if (_n && _n.removedBeforeQueried)
                                return new er(mt.duration, mt.delay);
                            const Sn = Vt !== ue,
                                ur = (function ra(d) {
                                    const s = [];
                                    return Ms(d, s), s;
                                })(
                                    (u.get(Vt) || Fe).map((gi) =>
                                        gi.getRealPlayer()
                                    )
                                ).filter(
                                    (gi) => !!gi.element && gi.element === Vt
                                ),
                                ri = R.get(Vt),
                                Hr = G.get(Vt),
                                oo = Nt(
                                    0,
                                    this._normalizer,
                                    0,
                                    mt.keyframes,
                                    ri,
                                    Hr
                                ),
                                Vi = this._buildPlayer(mt, oo, ur);
                            if ((mt.subTimeline && v && Et.add(Vt), Sn)) {
                                const gi = new Js(s, Y, Vt);
                                gi.setRealPlayer(Vi), Ve.push(gi);
                            }
                            return Vi;
                        });
                    Ve.forEach((mt) => {
                        an(this.playersByQueriedElement, mt.element, []).push(
                            mt
                        ),
                            mt.onDone(() =>
                                (function _o(d, s, o) {
                                    let u;
                                    if (d instanceof Map) {
                                        if (((u = d.get(s)), u)) {
                                            if (u.length) {
                                                const v = u.indexOf(o);
                                                u.splice(v, 1);
                                            }
                                            0 == u.length && d.delete(s);
                                        }
                                    } else if (((u = d[s]), u)) {
                                        if (u.length) {
                                            const v = u.indexOf(o);
                                            u.splice(v, 1);
                                        }
                                        0 == u.length && delete d[s];
                                    }
                                    return u;
                                })(this.playersByQueriedElement, mt.element, mt)
                            );
                    }),
                        it.forEach((mt) => pi(mt, Ie));
                    const ht = En(Mt);
                    return (
                        ht.onDestroy(() => {
                            it.forEach((mt) => qi(mt, Ie)), Mr(ue, o.toStyles);
                        }),
                        Et.forEach((mt) => {
                            an(v, mt, []).push(ht);
                        }),
                        ht
                    );
                }
                _buildPlayer(s, o, u) {
                    return o.length > 0
                        ? this.driver.animate(
                              s.element,
                              o,
                              s.duration,
                              s.delay,
                              s.easing,
                              u
                          )
                        : new er(s.duration, s.delay);
                }
            }
            class Js {
                constructor(s, o, u) {
                    (this.namespaceId = s),
                        (this.triggerName = o),
                        (this.element = u),
                        (this._player = new er()),
                        (this._containsRealPlayer = !1),
                        (this._queuedCallbacks = {}),
                        (this.destroyed = !1),
                        (this.markedForDestroy = !1),
                        (this.disabled = !1),
                        (this.queued = !0),
                        (this.totalTime = 0);
                }
                setRealPlayer(s) {
                    this._containsRealPlayer ||
                        ((this._player = s),
                        Object.keys(this._queuedCallbacks).forEach((o) => {
                            this._queuedCallbacks[o].forEach((u) =>
                                Sr(s, o, void 0, u)
                            );
                        }),
                        (this._queuedCallbacks = {}),
                        (this._containsRealPlayer = !0),
                        this.overrideTotalTime(s.totalTime),
                        (this.queued = !1));
                }
                getRealPlayer() {
                    return this._player;
                }
                overrideTotalTime(s) {
                    this.totalTime = s;
                }
                syncPlayerEvents(s) {
                    const o = this._player;
                    o.triggerCallback &&
                        s.onStart(() => o.triggerCallback('start')),
                        s.onDone(() => this.finish()),
                        s.onDestroy(() => this.destroy());
                }
                _queueEvent(s, o) {
                    an(this._queuedCallbacks, s, []).push(o);
                }
                onDone(s) {
                    this.queued && this._queueEvent('done', s),
                        this._player.onDone(s);
                }
                onStart(s) {
                    this.queued && this._queueEvent('start', s),
                        this._player.onStart(s);
                }
                onDestroy(s) {
                    this.queued && this._queueEvent('destroy', s),
                        this._player.onDestroy(s);
                }
                init() {
                    this._player.init();
                }
                hasStarted() {
                    return !this.queued && this._player.hasStarted();
                }
                play() {
                    !this.queued && this._player.play();
                }
                pause() {
                    !this.queued && this._player.pause();
                }
                restart() {
                    !this.queued && this._player.restart();
                }
                finish() {
                    this._player.finish();
                }
                destroy() {
                    (this.destroyed = !0), this._player.destroy();
                }
                reset() {
                    !this.queued && this._player.reset();
                }
                setPosition(s) {
                    this.queued || this._player.setPosition(s);
                }
                getPosition() {
                    return this.queued ? 0 : this._player.getPosition();
                }
                triggerCallback(s) {
                    const o = this._player;
                    o.triggerCallback && o.triggerCallback(s);
                }
            }
            function Zi(d) {
                return d && 1 === d.nodeType;
            }
            function Or(d, s) {
                const o = d.style.display;
                return (d.style.display = null != s ? s : 'none'), o;
            }
            function ki(d, s, o, u, v) {
                const R = [];
                o.forEach((ue) => R.push(Or(ue)));
                const G = [];
                u.forEach((ue, Ve) => {
                    const it = {};
                    ue.forEach((Et) => {
                        const Mt = (it[Et] = s.computeStyle(Ve, Et, v));
                        (!Mt || 0 == Mt.length) && ((Ve[Cn] = yn), G.push(Ve));
                    }),
                        d.set(Ve, it);
                });
                let Y = 0;
                return o.forEach((ue) => Or(ue, R[Y++])), G;
            }
            function ir(d, s) {
                const o = new Map();
                if ((d.forEach((Y) => o.set(Y, [])), 0 == s.length)) return o;
                const v = new Set(s),
                    R = new Map();
                function G(Y) {
                    if (!Y) return 1;
                    let ue = R.get(Y);
                    if (ue) return ue;
                    const Ve = Y.parentNode;
                    return (
                        (ue = o.has(Ve) ? Ve : v.has(Ve) ? 1 : G(Ve)),
                        R.set(Y, ue),
                        ue
                    );
                }
                return (
                    s.forEach((Y) => {
                        const ue = G(Y);
                        1 !== ue && o.get(ue).push(Y);
                    }),
                    o
                );
            }
            function pi(d, s) {
                var o;
                null === (o = d.classList) || void 0 === o || o.add(s);
            }
            function qi(d, s) {
                var o;
                null === (o = d.classList) || void 0 === o || o.remove(s);
            }
            function na(d, s, o) {
                En(o).onDone(() => d.processLeaveNode(s));
            }
            function Ms(d, s) {
                for (let o = 0; o < d.length; o++) {
                    const u = d[o];
                    u instanceof cn ? Ms(u.players, s) : s.push(u);
                }
            }
            function Os(d, s, o) {
                const u = o.get(d);
                if (!u) return !1;
                let v = s.get(d);
                return (
                    v ? u.forEach((R) => v.add(R)) : s.set(d, u),
                    o.delete(d),
                    !0
                );
            }
            class is {
                constructor(s, o, u) {
                    (this.bodyNode = s),
                        (this._driver = o),
                        (this._normalizer = u),
                        (this._triggerCache = {}),
                        (this.onRemovalComplete = (v, R) => {}),
                        (this._transitionEngine = new qs(s, o, u)),
                        (this._timelineEngine = new Ss(s, o, u)),
                        (this._transitionEngine.onRemovalComplete = (v, R) =>
                            this.onRemovalComplete(v, R));
                }
                registerTrigger(s, o, u, v, R) {
                    const G = s + '-' + v;
                    let Y = this._triggerCache[G];
                    if (!Y) {
                        const ue = [],
                            Ve = Ii(this._driver, R, ue);
                        if (ue.length)
                            throw new Error(
                                `The animation trigger "${v}" has failed to build due to the following errors:\n - ${ue.join(
                                    '\n - '
                                )}`
                            );
                        (Y = (function Ts(d, s, o) {
                            return new ps(d, s, o);
                        })(v, Ve, this._normalizer)),
                            (this._triggerCache[G] = Y);
                    }
                    this._transitionEngine.registerTrigger(o, v, Y);
                }
                register(s, o) {
                    this._transitionEngine.register(s, o);
                }
                destroy(s, o) {
                    this._transitionEngine.destroy(s, o);
                }
                onInsert(s, o, u, v) {
                    this._transitionEngine.insertNode(s, o, u, v);
                }
                onRemove(s, o, u, v) {
                    this._transitionEngine.removeNode(s, o, v || !1, u);
                }
                disableAnimations(s, o) {
                    this._transitionEngine.markElementAsDisabled(s, o);
                }
                process(s, o, u, v) {
                    if ('@' == u.charAt(0)) {
                        const [R, G] = Mn(u);
                        this._timelineEngine.command(R, o, G, v);
                    } else this._transitionEngine.trigger(s, o, u, v);
                }
                listen(s, o, u, v, R) {
                    if ('@' == u.charAt(0)) {
                        const [G, Y] = Mn(u);
                        return this._timelineEngine.listen(G, o, Y, R);
                    }
                    return this._transitionEngine.listen(s, o, u, v, R);
                }
                flush(s = -1) {
                    this._transitionEngine.flush(s);
                }
                get players() {
                    return this._transitionEngine.players.concat(
                        this._timelineEngine.players
                    );
                }
                whenRenderingDone() {
                    return this._transitionEngine.whenRenderingDone();
                }
            }
            let $o = (() => {
                class d extends or {
                    constructor(o, u) {
                        super(),
                            (this._nextAnimationId = 0),
                            (this._renderer = o.createRenderer(u.body, {
                                id: '0',
                                encapsulation: P.ifc.None,
                                styles: [],
                                data: { animation: [] },
                            }));
                    }
                    build(o) {
                        const u = this._nextAnimationId.toString();
                        this._nextAnimationId++;
                        const v = Array.isArray(o) ? Wr(o) : o;
                        return (
                            ys(this._renderer, null, u, 'register', [v]),
                            new vo(u, this._renderer)
                        );
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(P.FYo), P.LFG(f.K0));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            class vo extends class $t {} {
                constructor(s, o) {
                    super(), (this._id = s), (this._renderer = o);
                }
                create(s, o) {
                    return new ms(this._id, s, o || {}, this._renderer);
                }
            }
            class ms {
                constructor(s, o, u, v) {
                    (this.id = s),
                        (this.element = o),
                        (this._renderer = v),
                        (this.parentPlayer = null),
                        (this._started = !1),
                        (this.totalTime = 0),
                        this._command('create', u);
                }
                _listen(s, o) {
                    return this._renderer.listen(
                        this.element,
                        `@@${this.id}:${s}`,
                        o
                    );
                }
                _command(s, ...o) {
                    return ys(this._renderer, this.element, this.id, s, o);
                }
                onDone(s) {
                    this._listen('done', s);
                }
                onStart(s) {
                    this._listen('start', s);
                }
                onDestroy(s) {
                    this._listen('destroy', s);
                }
                init() {
                    this._command('init');
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this._command('play'), (this._started = !0);
                }
                pause() {
                    this._command('pause');
                }
                restart() {
                    this._command('restart');
                }
                finish() {
                    this._command('finish');
                }
                destroy() {
                    this._command('destroy');
                }
                reset() {
                    this._command('reset'), (this._started = !1);
                }
                setPosition(s) {
                    this._command('setPosition', s);
                }
                getPosition() {
                    var s, o;
                    return null !==
                        (o =
                            null ===
                                (s = this._renderer.engine.players[+this.id]) ||
                            void 0 === s
                                ? void 0
                                : s.getPosition()) && void 0 !== o
                        ? o
                        : 0;
                }
            }
            function ys(d, s, o, u, v) {
                return d.setProperty(s, `@@${o}:${u}`, v);
            }
            const Eo = '@.disabled';
            let Mo = (() => {
                class d {
                    constructor(o, u, v) {
                        (this.delegate = o),
                            (this.engine = u),
                            (this._zone = v),
                            (this._currentId = 0),
                            (this._microtaskId = 1),
                            (this._animationCallbacksBuffer = []),
                            (this._rendererCache = new Map()),
                            (this._cdRecurDepth = 0),
                            (this.promise = Promise.resolve(0)),
                            (u.onRemovalComplete = (R, G) => {
                                const Y = null == G ? void 0 : G.parentNode(R);
                                Y && G.removeChild(Y, R);
                            });
                    }
                    createRenderer(o, u) {
                        const R = this.delegate.createRenderer(o, u);
                        if (!(o && u && u.data && u.data.animation)) {
                            let it = this._rendererCache.get(R);
                            return (
                                it ||
                                    ((it = new ia('', R, this.engine)),
                                    this._rendererCache.set(R, it)),
                                it
                            );
                        }
                        const G = u.id,
                            Y = u.id + '-' + this._currentId;
                        this._currentId++, this.engine.register(Y, o);
                        const ue = (it) => {
                            Array.isArray(it)
                                ? it.forEach(ue)
                                : this.engine.registerTrigger(
                                      G,
                                      Y,
                                      o,
                                      it.name,
                                      it
                                  );
                        };
                        return (
                            u.data.animation.forEach(ue),
                            new fr(this, Y, R, this.engine)
                        );
                    }
                    begin() {
                        this._cdRecurDepth++,
                            this.delegate.begin && this.delegate.begin();
                    }
                    _scheduleCountTask() {
                        this.promise.then(() => {
                            this._microtaskId++;
                        });
                    }
                    scheduleListenerCallback(o, u, v) {
                        o >= 0 && o < this._microtaskId
                            ? this._zone.run(() => u(v))
                            : (0 == this._animationCallbacksBuffer.length &&
                                  Promise.resolve(null).then(() => {
                                      this._zone.run(() => {
                                          this._animationCallbacksBuffer.forEach(
                                              (R) => {
                                                  const [G, Y] = R;
                                                  G(Y);
                                              }
                                          ),
                                              (this._animationCallbacksBuffer =
                                                  []);
                                      });
                                  }),
                              this._animationCallbacksBuffer.push([u, v]));
                    }
                    end() {
                        this._cdRecurDepth--,
                            0 == this._cdRecurDepth &&
                                this._zone.runOutsideAngular(() => {
                                    this._scheduleCountTask(),
                                        this.engine.flush(this._microtaskId);
                                }),
                            this.delegate.end && this.delegate.end();
                    }
                    whenRenderingDone() {
                        return this.engine.whenRenderingDone();
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(
                            P.LFG(P.FYo),
                            P.LFG(is),
                            P.LFG(P.R0b)
                        );
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            class ia {
                constructor(s, o, u) {
                    (this.namespaceId = s),
                        (this.delegate = o),
                        (this.engine = u),
                        (this.destroyNode = this.delegate.destroyNode
                            ? (v) => o.destroyNode(v)
                            : null);
                }
                get data() {
                    return this.delegate.data;
                }
                destroy() {
                    this.engine.destroy(this.namespaceId, this.delegate),
                        this.delegate.destroy();
                }
                createElement(s, o) {
                    return this.delegate.createElement(s, o);
                }
                createComment(s) {
                    return this.delegate.createComment(s);
                }
                createText(s) {
                    return this.delegate.createText(s);
                }
                appendChild(s, o) {
                    this.delegate.appendChild(s, o),
                        this.engine.onInsert(this.namespaceId, o, s, !1);
                }
                insertBefore(s, o, u, v = !0) {
                    this.delegate.insertBefore(s, o, u),
                        this.engine.onInsert(this.namespaceId, o, s, v);
                }
                removeChild(s, o, u) {
                    this.engine.onRemove(this.namespaceId, o, this.delegate, u);
                }
                selectRootElement(s, o) {
                    return this.delegate.selectRootElement(s, o);
                }
                parentNode(s) {
                    return this.delegate.parentNode(s);
                }
                nextSibling(s) {
                    return this.delegate.nextSibling(s);
                }
                setAttribute(s, o, u, v) {
                    this.delegate.setAttribute(s, o, u, v);
                }
                removeAttribute(s, o, u) {
                    this.delegate.removeAttribute(s, o, u);
                }
                addClass(s, o) {
                    this.delegate.addClass(s, o);
                }
                removeClass(s, o) {
                    this.delegate.removeClass(s, o);
                }
                setStyle(s, o, u, v) {
                    this.delegate.setStyle(s, o, u, v);
                }
                removeStyle(s, o, u) {
                    this.delegate.removeStyle(s, o, u);
                }
                setProperty(s, o, u) {
                    '@' == o.charAt(0) && o == Eo
                        ? this.disableAnimations(s, !!u)
                        : this.delegate.setProperty(s, o, u);
                }
                setValue(s, o) {
                    this.delegate.setValue(s, o);
                }
                listen(s, o, u) {
                    return this.delegate.listen(s, o, u);
                }
                disableAnimations(s, o) {
                    this.engine.disableAnimations(s, o);
                }
            }
            class fr extends ia {
                constructor(s, o, u, v) {
                    super(o, u, v), (this.factory = s), (this.namespaceId = o);
                }
                setProperty(s, o, u) {
                    '@' == o.charAt(0)
                        ? '.' == o.charAt(1) && o == Eo
                            ? this.disableAnimations(
                                  s,
                                  (u = void 0 === u || !!u)
                              )
                            : this.engine.process(
                                  this.namespaceId,
                                  s,
                                  o.substr(1),
                                  u
                              )
                        : this.delegate.setProperty(s, o, u);
                }
                listen(s, o, u) {
                    if ('@' == o.charAt(0)) {
                        const v = (function Do(d) {
                            switch (d) {
                                case 'body':
                                    return document.body;
                                case 'document':
                                    return document;
                                case 'window':
                                    return window;
                                default:
                                    return d;
                            }
                        })(s);
                        let R = o.substr(1),
                            G = '';
                        return (
                            '@' != R.charAt(0) &&
                                ([R, G] = (function Co(d) {
                                    const s = d.indexOf('.');
                                    return [d.substring(0, s), d.substr(s + 1)];
                                })(R)),
                            this.engine.listen(
                                this.namespaceId,
                                v,
                                R,
                                G,
                                (Y) => {
                                    this.factory.scheduleListenerCallback(
                                        Y._data || -1,
                                        u,
                                        Y
                                    );
                                }
                            )
                        );
                    }
                    return this.delegate.listen(s, o, u);
                }
            }
            let eo = (() => {
                class d extends is {
                    constructor(o, u, v) {
                        super(o.body, u, v);
                    }
                    ngOnDestroy() {
                        this.flush();
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(f.K0), P.LFG(pr), P.LFG(Ke));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            const Fs = [
                { provide: pr, useClass: Jt },
                {
                    provide: new P.OlP('AnimationModuleType'),
                    useValue: 'NoopAnimations',
                },
                ...[
                    { provide: or, useClass: $o },
                    {
                        provide: Ke,
                        useFactory: function bo() {
                            return new Zs();
                        },
                    },
                    { provide: is, useClass: eo },
                    {
                        provide: P.FYo,
                        useFactory: function Oo(d, s, o) {
                            return new Mo(d, s, o);
                        },
                        deps: [Ne, is, P.R0b],
                    },
                ],
            ];
            let Po = (() => {
                class d {}
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)();
                    }),
                    (d.ɵmod = P.oAB({ type: d })),
                    (d.ɵinj = P.cJS({ providers: Fs, imports: [Ut] })),
                    d
                );
            })();
            var xs = _(5944),
                ro = _(5893);
            let Go = (() => {
                class d {}
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)();
                    }),
                    (d.ɵmod = P.oAB({ type: d })),
                    (d.ɵinj = P.cJS({
                        imports: [[f.ez, xs.UserButtonModule, bt.Bz, ro.hJ]],
                    })),
                    d
                );
            })();
            var vs = _(4004),
                os = _(3385),
                Ro = _(2266);
            function g(d, s) {
                if (
                    (1 & d && (P.ynx(0), P._UZ(1, 'p-avatar', 2), P.BQk()),
                    2 & d)
                ) {
                    const o = s.ngIf;
                    P.xp6(1), P.Q6J('label', o[0].toLocaleUpperCase());
                }
            }
            function h(d, s) {
                1 & d && P._UZ(0, 'p-button', 3);
            }
            let c = (() => {
                    class d {
                        constructor(o) {
                            this.afAuth = o;
                        }
                        ngOnInit() {
                            this.email$ = this.afAuth.user.pipe(
                                (0, vs.U)((o) => (null == o ? void 0 : o.email))
                            );
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)(P.Y36(os.zQ));
                        }),
                        (d.ɵcmp = P.Xpm({
                            type: d,
                            selectors: [['sol-user-button']],
                            decls: 4,
                            vars: 4,
                            consts: [
                                [4, 'ngIf', 'ngIfElse'],
                                ['login', ''],
                                ['size', 'large', 3, 'label'],
                                [
                                    'routerLink',
                                    '/user/login',
                                    'label',
                                    'Log In',
                                ],
                            ],
                            template: function (o, u) {
                                if (
                                    (1 & o &&
                                        (P.YNc(0, g, 2, 1, 'ng-container', 0),
                                        P.ALo(1, 'async'),
                                        P.YNc(
                                            2,
                                            h,
                                            1,
                                            0,
                                            'ng-template',
                                            null,
                                            1,
                                            P.W1O
                                        )),
                                    2 & o)
                                ) {
                                    const v = P.MAs(3);
                                    P.Q6J('ngIf', P.lcZ(1, 2, u.email$))(
                                        'ngIfElse',
                                        v
                                    );
                                }
                            },
                            directives: [f.O5, Ro.q, ro.zx, bt.rH],
                            pipes: [f.Ov],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        d
                    );
                })(),
                b = (() => {
                    class d {}
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)();
                        }),
                        (d.ɵcmp = P.Xpm({
                            type: d,
                            selectors: [['ng-component']],
                            decls: 8,
                            vars: 0,
                            consts: [
                                [2, 'display', 'flex', 'padding', '10px'],
                                ['routerLink', '/', 2, 'cursor', 'pointer'],
                                [2, 'flex', '1 1 auto'],
                                [
                                    'routerLink',
                                    '/report',
                                    'label',
                                    'Report',
                                    'styleClass',
                                    'p-button-success',
                                ],
                            ],
                            template: function (o, u) {
                                1 & o &&
                                    (P.TgZ(0, 'header'),
                                    P.TgZ(1, 'div', 0),
                                    P.TgZ(2, 'h1', 1),
                                    P._uU(3, 'Mountain SOL'),
                                    P.qZA(),
                                    P._UZ(4, 'span', 2),
                                    P._UZ(5, 'p-button', 3),
                                    P._UZ(6, 'sol-user-button'),
                                    P.qZA(),
                                    P.qZA(),
                                    P._UZ(7, 'router-outlet'));
                            },
                            directives: [bt.rH, ro.zx, c, bt.lC],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        d
                    );
                })();
            var M = _(1485);
            const Z = [
                {
                    path: '',
                    component: b,
                    children: [
                        {
                            path: 'user',
                            loadChildren: () =>
                                Promise.resolve()
                                    .then(_.bind(_, 5944))
                                    .then((d) => d.AuthLoginModule),
                        },
                        {
                            path: 'report',
                            component: (() => {
                                class d {
                                    constructor(o) {
                                        this.functionsApi = o;
                                    }
                                    downloadBlob(o, u = 'file.txt') {
                                        const v = window.URL.createObjectURL(o),
                                            R = document.createElement('a');
                                        (R.href = v),
                                            (R.download = u),
                                            R.dispatchEvent(
                                                new MouseEvent('click', {
                                                    bubbles: !0,
                                                    cancelable: !0,
                                                    view: window,
                                                })
                                            ),
                                            setTimeout(() => {
                                                window.URL.revokeObjectURL(v),
                                                    R.remove();
                                            }, 100);
                                    }
                                    downloadReport() {
                                        var o;
                                        const u =
                                            document.querySelector(
                                                '#downloadBtn'
                                            );
                                        u &&
                                            ((u.innerText = 'Downloading...'),
                                            (u.disabled = !0),
                                            this.functionsApi
                                                .get(
                                                    `roster?class= ${
                                                        null ===
                                                            (o =
                                                                document.querySelector(
                                                                    '#classNameInput'
                                                                )) ||
                                                        void 0 === o
                                                            ? void 0
                                                            : o.value
                                                    }`
                                                )
                                                .subscribe(({ data: v }) => {
                                                    const R = new Blob(
                                                        [new Uint8Array(v)],
                                                        {
                                                            type: 'application/pdf',
                                                        }
                                                    );
                                                    this.downloadBlob(
                                                        R,
                                                        'roster.pdf'
                                                    ),
                                                        (u.innerText =
                                                            'Download Report'),
                                                        (u.disabled = !1);
                                                }));
                                    }
                                }
                                return (
                                    (d.ɵfac = function (o) {
                                        return new (o || d)(P.Y36(M.O));
                                    }),
                                    (d.ɵcmp = P.Xpm({
                                        type: d,
                                        selectors: [['ng-component']],
                                        decls: 5,
                                        vars: 0,
                                        consts: [
                                            ['for', 'classNameInput'],
                                            [
                                                'id',
                                                'classNameInput',
                                                'placeholder',
                                                'Knots-fall-2021',
                                            ],
                                            ['id', 'downloadBtn', 3, 'click'],
                                        ],
                                        template: function (o, u) {
                                            1 & o &&
                                                (P.TgZ(0, 'label', 0),
                                                P._uU(1, 'Class Name'),
                                                P.qZA(),
                                                P._UZ(2, 'input', 1),
                                                P.TgZ(3, 'button', 2),
                                                P.NdJ('click', function () {
                                                    return u.downloadReport();
                                                }),
                                                P._uU(4, ' Download Report '),
                                                P.qZA());
                                        },
                                        encapsulation: 2,
                                        changeDetection: 0,
                                    })),
                                    d
                                );
                            })(),
                        },
                        {
                            path: 'calendar',
                            loadChildren: () =>
                                Promise.all([_.e(592), _.e(522)])
                                    .then(_.bind(_, 3522))
                                    .then((d) => d.SolCalendarModule),
                        },
                    ],
                },
            ];
            let ce = (() => {
                class d {}
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)();
                    }),
                    (d.ɵmod = P.oAB({ type: d })),
                    (d.ɵinj = P.cJS({ imports: [[bt.Bz.forRoot(Z)], bt.Bz] })),
                    d
                );
            })();
            var He = _(2323),
                Ct = _(5573),
                on = _(2011),
                Tt = _(9565),
                Ln = _(9646),
                kn = _(8306),
                Ji = _(4351),
                Kr = _(9300);
            class ti {}
            class Ai {}
            class jr {
                constructor(s) {
                    (this.normalizedNames = new Map()),
                        (this.lazyUpdate = null),
                        s
                            ? (this.lazyInit =
                                  'string' == typeof s
                                      ? () => {
                                            (this.headers = new Map()),
                                                s.split('\n').forEach((o) => {
                                                    const u = o.indexOf(':');
                                                    if (u > 0) {
                                                        const v = o.slice(0, u),
                                                            R = v.toLowerCase(),
                                                            G = o
                                                                .slice(u + 1)
                                                                .trim();
                                                        this.maybeSetNormalizedName(
                                                            v,
                                                            R
                                                        ),
                                                            this.headers.has(R)
                                                                ? this.headers
                                                                      .get(R)
                                                                      .push(G)
                                                                : this.headers.set(
                                                                      R,
                                                                      [G]
                                                                  );
                                                    }
                                                });
                                        }
                                      : () => {
                                            (this.headers = new Map()),
                                                Object.keys(s).forEach((o) => {
                                                    let u = s[o];
                                                    const v = o.toLowerCase();
                                                    'string' == typeof u &&
                                                        (u = [u]),
                                                        u.length > 0 &&
                                                            (this.headers.set(
                                                                v,
                                                                u
                                                            ),
                                                            this.maybeSetNormalizedName(
                                                                o,
                                                                v
                                                            ));
                                                });
                                        })
                            : (this.headers = new Map());
                }
                has(s) {
                    return this.init(), this.headers.has(s.toLowerCase());
                }
                get(s) {
                    this.init();
                    const o = this.headers.get(s.toLowerCase());
                    return o && o.length > 0 ? o[0] : null;
                }
                keys() {
                    return (
                        this.init(), Array.from(this.normalizedNames.values())
                    );
                }
                getAll(s) {
                    return (
                        this.init(), this.headers.get(s.toLowerCase()) || null
                    );
                }
                append(s, o) {
                    return this.clone({ name: s, value: o, op: 'a' });
                }
                set(s, o) {
                    return this.clone({ name: s, value: o, op: 's' });
                }
                delete(s, o) {
                    return this.clone({ name: s, value: o, op: 'd' });
                }
                maybeSetNormalizedName(s, o) {
                    this.normalizedNames.has(o) ||
                        this.normalizedNames.set(o, s);
                }
                init() {
                    this.lazyInit &&
                        (this.lazyInit instanceof jr
                            ? this.copyFrom(this.lazyInit)
                            : this.lazyInit(),
                        (this.lazyInit = null),
                        this.lazyUpdate &&
                            (this.lazyUpdate.forEach((s) =>
                                this.applyUpdate(s)
                            ),
                            (this.lazyUpdate = null)));
                }
                copyFrom(s) {
                    s.init(),
                        Array.from(s.headers.keys()).forEach((o) => {
                            this.headers.set(o, s.headers.get(o)),
                                this.normalizedNames.set(
                                    o,
                                    s.normalizedNames.get(o)
                                );
                        });
                }
                clone(s) {
                    const o = new jr();
                    return (
                        (o.lazyInit =
                            this.lazyInit && this.lazyInit instanceof jr
                                ? this.lazyInit
                                : this),
                        (o.lazyUpdate = (this.lazyUpdate || []).concat([s])),
                        o
                    );
                }
                applyUpdate(s) {
                    const o = s.name.toLowerCase();
                    switch (s.op) {
                        case 'a':
                        case 's':
                            let u = s.value;
                            if (
                                ('string' == typeof u && (u = [u]),
                                0 === u.length)
                            )
                                return;
                            this.maybeSetNormalizedName(s.name, o);
                            const v =
                                ('a' === s.op ? this.headers.get(o) : void 0) ||
                                [];
                            v.push(...u), this.headers.set(o, v);
                            break;
                        case 'd':
                            const R = s.value;
                            if (R) {
                                let G = this.headers.get(o);
                                if (!G) return;
                                (G = G.filter((Y) => -1 === R.indexOf(Y))),
                                    0 === G.length
                                        ? (this.headers.delete(o),
                                          this.normalizedNames.delete(o))
                                        : this.headers.set(o, G);
                            } else
                                this.headers.delete(o),
                                    this.normalizedNames.delete(o);
                    }
                }
                forEach(s) {
                    this.init(),
                        Array.from(this.normalizedNames.keys()).forEach((o) =>
                            s(this.normalizedNames.get(o), this.headers.get(o))
                        );
                }
            }
            class Yr {
                encodeKey(s) {
                    return Wo(s);
                }
                encodeValue(s) {
                    return Wo(s);
                }
                decodeKey(s) {
                    return decodeURIComponent(s);
                }
                decodeValue(s) {
                    return decodeURIComponent(s);
                }
            }
            const Es = /%(\d[a-f0-9])/gi,
                Fo = {
                    40: '@',
                    '3A': ':',
                    24: '$',
                    '2C': ',',
                    '3B': ';',
                    '2B': '+',
                    '3D': '=',
                    '3F': '?',
                    '2F': '/',
                };
            function Wo(d) {
                return encodeURIComponent(d).replace(Es, (s, o) => {
                    var u;
                    return null !== (u = Fo[o]) && void 0 !== u ? u : s;
                });
            }
            function Ns(d) {
                return `${d}`;
            }
            class Ls {
                constructor(s = {}) {
                    if (
                        ((this.updates = null),
                        (this.cloneFrom = null),
                        (this.encoder = s.encoder || new Yr()),
                        s.fromString)
                    ) {
                        if (s.fromObject)
                            throw new Error(
                                'Cannot specify both fromString and fromObject.'
                            );
                        this.map = (function ni(d, s) {
                            const o = new Map();
                            return (
                                d.length > 0 &&
                                    d
                                        .replace(/^\?/, '')
                                        .split('&')
                                        .forEach((v) => {
                                            const R = v.indexOf('='),
                                                [G, Y] =
                                                    -1 == R
                                                        ? [s.decodeKey(v), '']
                                                        : [
                                                              s.decodeKey(
                                                                  v.slice(0, R)
                                                              ),
                                                              s.decodeValue(
                                                                  v.slice(R + 1)
                                                              ),
                                                          ],
                                                ue = o.get(G) || [];
                                            ue.push(Y), o.set(G, ue);
                                        }),
                                o
                            );
                        })(s.fromString, this.encoder);
                    } else
                        s.fromObject
                            ? ((this.map = new Map()),
                              Object.keys(s.fromObject).forEach((o) => {
                                  const u = s.fromObject[o];
                                  this.map.set(o, Array.isArray(u) ? u : [u]);
                              }))
                            : (this.map = null);
                }
                has(s) {
                    return this.init(), this.map.has(s);
                }
                get(s) {
                    this.init();
                    const o = this.map.get(s);
                    return o ? o[0] : null;
                }
                getAll(s) {
                    return this.init(), this.map.get(s) || null;
                }
                keys() {
                    return this.init(), Array.from(this.map.keys());
                }
                append(s, o) {
                    return this.clone({ param: s, value: o, op: 'a' });
                }
                appendAll(s) {
                    const o = [];
                    return (
                        Object.keys(s).forEach((u) => {
                            const v = s[u];
                            Array.isArray(v)
                                ? v.forEach((R) => {
                                      o.push({ param: u, value: R, op: 'a' });
                                  })
                                : o.push({ param: u, value: v, op: 'a' });
                        }),
                        this.clone(o)
                    );
                }
                set(s, o) {
                    return this.clone({ param: s, value: o, op: 's' });
                }
                delete(s, o) {
                    return this.clone({ param: s, value: o, op: 'd' });
                }
                toString() {
                    return (
                        this.init(),
                        this.keys()
                            .map((s) => {
                                const o = this.encoder.encodeKey(s);
                                return this.map
                                    .get(s)
                                    .map(
                                        (u) =>
                                            o +
                                            '=' +
                                            this.encoder.encodeValue(u)
                                    )
                                    .join('&');
                            })
                            .filter((s) => '' !== s)
                            .join('&')
                    );
                }
                clone(s) {
                    const o = new Ls({ encoder: this.encoder });
                    return (
                        (o.cloneFrom = this.cloneFrom || this),
                        (o.updates = (this.updates || []).concat(s)),
                        o
                    );
                }
                init() {
                    null === this.map && (this.map = new Map()),
                        null !== this.cloneFrom &&
                            (this.cloneFrom.init(),
                            this.cloneFrom
                                .keys()
                                .forEach((s) =>
                                    this.map.set(s, this.cloneFrom.map.get(s))
                                ),
                            this.updates.forEach((s) => {
                                switch (s.op) {
                                    case 'a':
                                    case 's':
                                        const o =
                                            ('a' === s.op
                                                ? this.map.get(s.param)
                                                : void 0) || [];
                                        o.push(Ns(s.value)),
                                            this.map.set(s.param, o);
                                        break;
                                    case 'd':
                                        if (void 0 === s.value) {
                                            this.map.delete(s.param);
                                            break;
                                        }
                                        {
                                            let u = this.map.get(s.param) || [];
                                            const v = u.indexOf(Ns(s.value));
                                            -1 !== v && u.splice(v, 1),
                                                u.length > 0
                                                    ? this.map.set(s.param, u)
                                                    : this.map.delete(s.param);
                                        }
                                }
                            }),
                            (this.cloneFrom = this.updates = null));
                }
            }
            class Cr {
                constructor() {
                    this.map = new Map();
                }
                set(s, o) {
                    return this.map.set(s, o), this;
                }
                get(s) {
                    return (
                        this.map.has(s) || this.map.set(s, s.defaultValue()),
                        this.map.get(s)
                    );
                }
                delete(s) {
                    return this.map.delete(s), this;
                }
                has(s) {
                    return this.map.has(s);
                }
                keys() {
                    return this.map.keys();
                }
            }
            function yl(d) {
                return (
                    'undefined' != typeof ArrayBuffer &&
                    d instanceof ArrayBuffer
                );
            }
            function _l(d) {
                return 'undefined' != typeof Blob && d instanceof Blob;
            }
            function Ua(d) {
                return 'undefined' != typeof FormData && d instanceof FormData;
            }
            class Ao {
                constructor(s, o, u, v) {
                    let R;
                    if (
                        ((this.url = o),
                        (this.body = null),
                        (this.reportProgress = !1),
                        (this.withCredentials = !1),
                        (this.responseType = 'json'),
                        (this.method = s.toUpperCase()),
                        (function ml(d) {
                            switch (d) {
                                case 'DELETE':
                                case 'GET':
                                case 'HEAD':
                                case 'OPTIONS':
                                case 'JSONP':
                                    return !1;
                                default:
                                    return !0;
                            }
                        })(this.method) || v
                            ? ((this.body = void 0 !== u ? u : null), (R = v))
                            : (R = u),
                        R &&
                            ((this.reportProgress = !!R.reportProgress),
                            (this.withCredentials = !!R.withCredentials),
                            R.responseType &&
                                (this.responseType = R.responseType),
                            R.headers && (this.headers = R.headers),
                            R.context && (this.context = R.context),
                            R.params && (this.params = R.params)),
                        this.headers || (this.headers = new jr()),
                        this.context || (this.context = new Cr()),
                        this.params)
                    ) {
                        const G = this.params.toString();
                        if (0 === G.length) this.urlWithParams = o;
                        else {
                            const Y = o.indexOf('?');
                            this.urlWithParams =
                                o +
                                (-1 === Y ? '?' : Y < o.length - 1 ? '&' : '') +
                                G;
                        }
                    } else (this.params = new Ls()), (this.urlWithParams = o);
                }
                serializeBody() {
                    return null === this.body
                        ? null
                        : yl(this.body) ||
                          _l(this.body) ||
                          Ua(this.body) ||
                          (function ja(d) {
                              return (
                                  'undefined' != typeof URLSearchParams &&
                                  d instanceof URLSearchParams
                              );
                          })(this.body) ||
                          'string' == typeof this.body
                        ? this.body
                        : this.body instanceof Ls
                        ? this.body.toString()
                        : 'object' == typeof this.body ||
                          'boolean' == typeof this.body ||
                          Array.isArray(this.body)
                        ? JSON.stringify(this.body)
                        : this.body.toString();
                }
                detectContentTypeHeader() {
                    return null === this.body || Ua(this.body)
                        ? null
                        : _l(this.body)
                        ? this.body.type || null
                        : yl(this.body)
                        ? null
                        : 'string' == typeof this.body
                        ? 'text/plain'
                        : this.body instanceof Ls
                        ? 'application/x-www-form-urlencoded;charset=UTF-8'
                        : 'object' == typeof this.body ||
                          'number' == typeof this.body ||
                          'boolean' == typeof this.body
                        ? 'application/json'
                        : null;
                }
                clone(s = {}) {
                    var o;
                    const u = s.method || this.method,
                        v = s.url || this.url,
                        R = s.responseType || this.responseType,
                        G = void 0 !== s.body ? s.body : this.body,
                        Y =
                            void 0 !== s.withCredentials
                                ? s.withCredentials
                                : this.withCredentials,
                        ue =
                            void 0 !== s.reportProgress
                                ? s.reportProgress
                                : this.reportProgress;
                    let Ve = s.headers || this.headers,
                        it = s.params || this.params;
                    const Et =
                        null !== (o = s.context) && void 0 !== o
                            ? o
                            : this.context;
                    return (
                        void 0 !== s.setHeaders &&
                            (Ve = Object.keys(s.setHeaders).reduce(
                                (Mt, ht) => Mt.set(ht, s.setHeaders[ht]),
                                Ve
                            )),
                        s.setParams &&
                            (it = Object.keys(s.setParams).reduce(
                                (Mt, ht) => Mt.set(ht, s.setParams[ht]),
                                it
                            )),
                        new Ao(u, v, G, {
                            params: it,
                            headers: Ve,
                            context: Et,
                            reportProgress: ue,
                            responseType: R,
                            withCredentials: Y,
                        })
                    );
                }
            }
            var Lr = (() => (
                ((Lr = Lr || {})[(Lr.Sent = 0)] = 'Sent'),
                (Lr[(Lr.UploadProgress = 1)] = 'UploadProgress'),
                (Lr[(Lr.ResponseHeader = 2)] = 'ResponseHeader'),
                (Lr[(Lr.DownloadProgress = 3)] = 'DownloadProgress'),
                (Lr[(Lr.Response = 4)] = 'Response'),
                (Lr[(Lr.User = 5)] = 'User'),
                Lr
            ))();
            class ks {
                constructor(s, o = 200, u = 'OK') {
                    (this.headers = s.headers || new jr()),
                        (this.status = void 0 !== s.status ? s.status : o),
                        (this.statusText = s.statusText || u),
                        (this.url = s.url || null),
                        (this.ok = this.status >= 200 && this.status < 300);
                }
            }
            class oa extends ks {
                constructor(s = {}) {
                    super(s), (this.type = Lr.ResponseHeader);
                }
                clone(s = {}) {
                    return new oa({
                        headers: s.headers || this.headers,
                        status: void 0 !== s.status ? s.status : this.status,
                        statusText: s.statusText || this.statusText,
                        url: s.url || this.url || void 0,
                    });
                }
            }
            class vr extends ks {
                constructor(s = {}) {
                    super(s),
                        (this.type = Lr.Response),
                        (this.body = void 0 !== s.body ? s.body : null);
                }
                clone(s = {}) {
                    return new vr({
                        body: void 0 !== s.body ? s.body : this.body,
                        headers: s.headers || this.headers,
                        status: void 0 !== s.status ? s.status : this.status,
                        statusText: s.statusText || this.statusText,
                        url: s.url || this.url || void 0,
                    });
                }
            }
            class xo extends ks {
                constructor(s) {
                    super(s, 0, 'Unknown Error'),
                        (this.name = 'HttpErrorResponse'),
                        (this.ok = !1),
                        (this.message =
                            this.status >= 200 && this.status < 300
                                ? `Http failure during parsing for ${
                                      s.url || '(unknown url)'
                                  }`
                                : `Http failure response for ${
                                      s.url || '(unknown url)'
                                  }: ${s.status} ${s.statusText}`),
                        (this.error = s.error || null);
                }
            }
            function Bs(d, s) {
                return {
                    body: s,
                    headers: d.headers,
                    context: d.context,
                    observe: d.observe,
                    params: d.params,
                    reportProgress: d.reportProgress,
                    responseType: d.responseType,
                    withCredentials: d.withCredentials,
                };
            }
            let vl = (() => {
                class d {
                    constructor(o) {
                        this.handler = o;
                    }
                    request(o, u, v = {}) {
                        let R;
                        if (o instanceof Ao) R = o;
                        else {
                            let ue, Ve;
                            (ue =
                                v.headers instanceof jr
                                    ? v.headers
                                    : new jr(v.headers)),
                                v.params &&
                                    (Ve =
                                        v.params instanceof Ls
                                            ? v.params
                                            : new Ls({ fromObject: v.params })),
                                (R = new Ao(
                                    o,
                                    u,
                                    void 0 !== v.body ? v.body : null,
                                    {
                                        headers: ue,
                                        context: v.context,
                                        params: Ve,
                                        reportProgress: v.reportProgress,
                                        responseType: v.responseType || 'json',
                                        withCredentials: v.withCredentials,
                                    }
                                ));
                        }
                        const G = (0, Ln.of)(R).pipe(
                            (0, Ji.b)((ue) => this.handler.handle(ue))
                        );
                        if (o instanceof Ao || 'events' === v.observe) return G;
                        const Y = G.pipe((0, Kr.h)((ue) => ue instanceof vr));
                        switch (v.observe || 'body') {
                            case 'body':
                                switch (R.responseType) {
                                    case 'arraybuffer':
                                        return Y.pipe(
                                            (0, vs.U)((ue) => {
                                                if (
                                                    null !== ue.body &&
                                                    !(
                                                        ue.body instanceof
                                                        ArrayBuffer
                                                    )
                                                )
                                                    throw new Error(
                                                        'Response is not an ArrayBuffer.'
                                                    );
                                                return ue.body;
                                            })
                                        );
                                    case 'blob':
                                        return Y.pipe(
                                            (0, vs.U)((ue) => {
                                                if (
                                                    null !== ue.body &&
                                                    !(ue.body instanceof Blob)
                                                )
                                                    throw new Error(
                                                        'Response is not a Blob.'
                                                    );
                                                return ue.body;
                                            })
                                        );
                                    case 'text':
                                        return Y.pipe(
                                            (0, vs.U)((ue) => {
                                                if (
                                                    null !== ue.body &&
                                                    'string' != typeof ue.body
                                                )
                                                    throw new Error(
                                                        'Response is not a string.'
                                                    );
                                                return ue.body;
                                            })
                                        );
                                    default:
                                        return Y.pipe(
                                            (0, vs.U)((ue) => ue.body)
                                        );
                                }
                            case 'response':
                                return Y;
                            default:
                                throw new Error(
                                    `Unreachable: unhandled observe type ${v.observe}}`
                                );
                        }
                    }
                    delete(o, u = {}) {
                        return this.request('DELETE', o, u);
                    }
                    get(o, u = {}) {
                        return this.request('GET', o, u);
                    }
                    head(o, u = {}) {
                        return this.request('HEAD', o, u);
                    }
                    jsonp(o, u) {
                        return this.request('JSONP', o, {
                            params: new Ls().append(u, 'JSONP_CALLBACK'),
                            observe: 'body',
                            responseType: 'json',
                        });
                    }
                    options(o, u = {}) {
                        return this.request('OPTIONS', o, u);
                    }
                    patch(o, u, v = {}) {
                        return this.request('PATCH', o, Bs(v, u));
                    }
                    post(o, u, v = {}) {
                        return this.request('POST', o, Bs(v, u));
                    }
                    put(o, u, v = {}) {
                        return this.request('PUT', o, Bs(v, u));
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(ti));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            class zo {
                constructor(s, o) {
                    (this.next = s), (this.interceptor = o);
                }
                handle(s) {
                    return this.interceptor.intercept(s, this.next);
                }
            }
            const Qr = new P.OlP('HTTP_INTERCEPTORS');
            let Bi = (() => {
                class d {
                    intercept(o, u) {
                        return u.handle(o);
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)();
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            const El = /^\)\]\}',?\n/;
            let kr = (() => {
                class d {
                    constructor(o) {
                        this.xhrFactory = o;
                    }
                    handle(o) {
                        if ('JSONP' === o.method)
                            throw new Error(
                                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.'
                            );
                        return new kn.y((u) => {
                            const v = this.xhrFactory.build();
                            if (
                                (v.open(o.method, o.urlWithParams),
                                o.withCredentials && (v.withCredentials = !0),
                                o.headers.forEach((ht, mt) =>
                                    v.setRequestHeader(ht, mt.join(','))
                                ),
                                o.headers.has('Accept') ||
                                    v.setRequestHeader(
                                        'Accept',
                                        'application/json, text/plain, */*'
                                    ),
                                !o.headers.has('Content-Type'))
                            ) {
                                const ht = o.detectContentTypeHeader();
                                null !== ht &&
                                    v.setRequestHeader('Content-Type', ht);
                            }
                            if (o.responseType) {
                                const ht = o.responseType.toLowerCase();
                                v.responseType = 'json' !== ht ? ht : 'text';
                            }
                            const R = o.serializeBody();
                            let G = null;
                            const Y = () => {
                                    if (null !== G) return G;
                                    const ht =
                                            1223 === v.status ? 204 : v.status,
                                        mt = v.statusText || 'OK',
                                        Vt = new jr(v.getAllResponseHeaders()),
                                        _n =
                                            (function aa(d) {
                                                return 'responseURL' in d &&
                                                    d.responseURL
                                                    ? d.responseURL
                                                    : /^X-Request-URL:/m.test(
                                                          d.getAllResponseHeaders()
                                                      )
                                                    ? d.getResponseHeader(
                                                          'X-Request-URL'
                                                      )
                                                    : null;
                                            })(v) || o.url;
                                    return (
                                        (G = new oa({
                                            headers: Vt,
                                            status: ht,
                                            statusText: mt,
                                            url: _n,
                                        })),
                                        G
                                    );
                                },
                                ue = () => {
                                    let {
                                            headers: ht,
                                            status: mt,
                                            statusText: Vt,
                                            url: _n,
                                        } = Y(),
                                        Sn = null;
                                    204 !== mt &&
                                        (Sn =
                                            void 0 === v.response
                                                ? v.responseText
                                                : v.response),
                                        0 === mt && (mt = Sn ? 200 : 0);
                                    let ur = mt >= 200 && mt < 300;
                                    if (
                                        'json' === o.responseType &&
                                        'string' == typeof Sn
                                    ) {
                                        const ri = Sn;
                                        Sn = Sn.replace(El, '');
                                        try {
                                            Sn =
                                                '' !== Sn
                                                    ? JSON.parse(Sn)
                                                    : null;
                                        } catch (Hr) {
                                            (Sn = ri),
                                                ur &&
                                                    ((ur = !1),
                                                    (Sn = {
                                                        error: Hr,
                                                        text: Sn,
                                                    }));
                                        }
                                    }
                                    ur
                                        ? (u.next(
                                              new vr({
                                                  body: Sn,
                                                  headers: ht,
                                                  status: mt,
                                                  statusText: Vt,
                                                  url: _n || void 0,
                                              })
                                          ),
                                          u.complete())
                                        : u.error(
                                              new xo({
                                                  error: Sn,
                                                  headers: ht,
                                                  status: mt,
                                                  statusText: Vt,
                                                  url: _n || void 0,
                                              })
                                          );
                                },
                                Ve = (ht) => {
                                    const { url: mt } = Y(),
                                        Vt = new xo({
                                            error: ht,
                                            status: v.status || 0,
                                            statusText:
                                                v.statusText || 'Unknown Error',
                                            url: mt || void 0,
                                        });
                                    u.error(Vt);
                                };
                            let it = !1;
                            const Et = (ht) => {
                                    it || (u.next(Y()), (it = !0));
                                    let mt = {
                                        type: Lr.DownloadProgress,
                                        loaded: ht.loaded,
                                    };
                                    ht.lengthComputable &&
                                        (mt.total = ht.total),
                                        'text' === o.responseType &&
                                            !!v.responseText &&
                                            (mt.partialText = v.responseText),
                                        u.next(mt);
                                },
                                Mt = (ht) => {
                                    let mt = {
                                        type: Lr.UploadProgress,
                                        loaded: ht.loaded,
                                    };
                                    ht.lengthComputable &&
                                        (mt.total = ht.total),
                                        u.next(mt);
                                };
                            return (
                                v.addEventListener('load', ue),
                                v.addEventListener('error', Ve),
                                v.addEventListener('timeout', Ve),
                                v.addEventListener('abort', Ve),
                                o.reportProgress &&
                                    (v.addEventListener('progress', Et),
                                    null !== R &&
                                        v.upload &&
                                        v.upload.addEventListener(
                                            'progress',
                                            Mt
                                        )),
                                v.send(R),
                                u.next({ type: Lr.Sent }),
                                () => {
                                    v.removeEventListener('error', Ve),
                                        v.removeEventListener('abort', Ve),
                                        v.removeEventListener('load', ue),
                                        v.removeEventListener('timeout', Ve),
                                        o.reportProgress &&
                                            (v.removeEventListener(
                                                'progress',
                                                Et
                                            ),
                                            null !== R &&
                                                v.upload &&
                                                v.upload.removeEventListener(
                                                    'progress',
                                                    Mt
                                                )),
                                        v.readyState !== v.DONE && v.abort();
                                }
                            );
                        });
                    }
                }
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)(P.LFG(f.JF));
                    }),
                    (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                    d
                );
            })();
            const so = new P.OlP('XSRF_COOKIE_NAME'),
                Ds = new P.OlP('XSRF_HEADER_NAME');
            class Ha {}
            let Cs = (() => {
                    class d {
                        constructor(o, u, v) {
                            (this.doc = o),
                                (this.platform = u),
                                (this.cookieName = v),
                                (this.lastCookieString = ''),
                                (this.lastToken = null),
                                (this.parseCount = 0);
                        }
                        getToken() {
                            if ('server' === this.platform) return null;
                            const o = this.doc.cookie || '';
                            return (
                                o !== this.lastCookieString &&
                                    (this.parseCount++,
                                    (this.lastToken = (0, f.Mx)(
                                        o,
                                        this.cookieName
                                    )),
                                    (this.lastCookieString = o)),
                                this.lastToken
                            );
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)(
                                P.LFG(f.K0),
                                P.LFG(P.Lbi),
                                P.LFG(so)
                            );
                        }),
                        (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                        d
                    );
                })(),
                Qo = (() => {
                    class d {
                        constructor(o, u) {
                            (this.tokenService = o), (this.headerName = u);
                        }
                        intercept(o, u) {
                            const v = o.url.toLowerCase();
                            if (
                                'GET' === o.method ||
                                'HEAD' === o.method ||
                                v.startsWith('http://') ||
                                v.startsWith('https://')
                            )
                                return u.handle(o);
                            const R = this.tokenService.getToken();
                            return (
                                null !== R &&
                                    !o.headers.has(this.headerName) &&
                                    (o = o.clone({
                                        headers: o.headers.set(
                                            this.headerName,
                                            R
                                        ),
                                    })),
                                u.handle(o)
                            );
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)(P.LFG(Ha), P.LFG(Ds));
                        }),
                        (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                        d
                    );
                })(),
                Vs = (() => {
                    class d {
                        constructor(o, u) {
                            (this.backend = o),
                                (this.injector = u),
                                (this.chain = null);
                        }
                        handle(o) {
                            if (null === this.chain) {
                                const u = this.injector.get(Qr, []);
                                this.chain = u.reduceRight(
                                    (v, R) => new zo(v, R),
                                    this.backend
                                );
                            }
                            return this.chain.handle(o);
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)(P.LFG(Ai), P.LFG(P.zs3));
                        }),
                        (d.ɵprov = P.Yz7({ token: d, factory: d.ɵfac })),
                        d
                    );
                })(),
                la = (() => {
                    class d {
                        static disable() {
                            return {
                                ngModule: d,
                                providers: [{ provide: Qo, useClass: Bi }],
                            };
                        }
                        static withOptions(o = {}) {
                            return {
                                ngModule: d,
                                providers: [
                                    o.cookieName
                                        ? {
                                              provide: so,
                                              useValue: o.cookieName,
                                          }
                                        : [],
                                    o.headerName
                                        ? {
                                              provide: Ds,
                                              useValue: o.headerName,
                                          }
                                        : [],
                                ],
                            };
                        }
                    }
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)();
                        }),
                        (d.ɵmod = P.oAB({ type: d })),
                        (d.ɵinj = P.cJS({
                            providers: [
                                Qo,
                                { provide: Qr, useExisting: Qo, multi: !0 },
                                { provide: Ha, useClass: Cs },
                                { provide: so, useValue: 'XSRF-TOKEN' },
                                { provide: Ds, useValue: 'X-XSRF-TOKEN' },
                            ],
                        })),
                        d
                    );
                })(),
                ua = (() => {
                    class d {}
                    return (
                        (d.ɵfac = function (o) {
                            return new (o || d)();
                        }),
                        (d.ɵmod = P.oAB({ type: d })),
                        (d.ɵinj = P.cJS({
                            providers: [
                                vl,
                                { provide: ti, useClass: Vs },
                                kr,
                                { provide: Ai, useExisting: kr },
                            ],
                            imports: [
                                [
                                    la.withOptions({
                                        cookieName: 'XSRF-TOKEN',
                                        headerName: 'X-XSRF-TOKEN',
                                    }),
                                ],
                            ],
                        })),
                        d
                    );
                })();
            var E = _(2228);
            const B = [
                    { provide: Qr, useClass: xs.AuthInterceptor, multi: !0 },
                ],
                ee = {
                    provide: E.jQ,
                    useValue: 'https://mountain-sol-platform.web.app',
                };
            let Ce = (() => {
                class d {}
                return (
                    (d.ɵfac = function (o) {
                        return new (o || d)();
                    }),
                    (d.ɵmod = P.oAB({ type: d, bootstrap: [zn] })),
                    (d.ɵinj = P.cJS({
                        providers: [B, ee],
                        imports: [
                            [
                                on.hO.initializeApp({
                                    apiKey: 'AIzaSyBxv66X_Ye4MXI5lt8Sjc1xz88rdWJJ0ho',
                                    authDomain: 'mountain-sol-platform.web.app',
                                    projectId: 'mountain-sol-platform',
                                    storageBucket:
                                        'mountain-sol-platform.appspot.com',
                                    messagingSenderId: '319228048592',
                                    appId: '1:319228048592:web:2d418795ca948ba2665ad5',
                                    measurementId: 'G-QN03ENCDDC',
                                }),
                                Ut,
                                Po,
                                ce,
                                Go,
                                He.Aw.forRoot({}, {}),
                                Tt.FT.instrument({ maxAge: 25, autoPause: !0 }),
                                Ct.sQ.forRoot([]),
                                E.Qv,
                                ua,
                            ],
                        ],
                    })),
                    d
                );
            })();
            (0, P.G48)(),
                Qn()
                    .bootstrapModule(Ce, {
                        defaultEncapsulation: P.ifc.ShadowDom,
                    })
                    .catch((d) => console.error(d));
        },
        5944: (pe, z, _) => {
            'use strict';
            _.r(z),
                _.d(z, {
                    AuthInterceptor: () => Ci,
                    AuthLoginModule: () => Di,
                    AuthLoginRoutingModule: () => mr,
                    UserButtonModule: () => di,
                });
            var f = _(9808),
                P = _(8996),
                j = _(8505),
                w = _(5e3),
                H = _(3385),
                te = _(6115);
            let X = (() => {
                    class C {
                        constructor(m, N) {
                            (this.afAuth = m), (this.router = N);
                        }
                        login(m, N) {
                            return (0, P.D)(
                                this.afAuth.signInWithEmailAndPassword(m, N)
                            );
                        }
                        emailSignup(m, N) {
                            (0, P.D)(
                                this.afAuth.createUserWithEmailAndPassword(m, N)
                            ).pipe(
                                (0, j.b)(() =>
                                    this.router.navigateByUrl('/profile')
                                )
                            );
                        }
                        logout() {
                            (0, P.D)(this.afAuth.signOut()).pipe(
                                (0, j.b)(() => this.router.navigate(['/']))
                            );
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(w.LFG(H.zQ), w.LFG(te.F0));
                        }),
                        (C.ɵprov = w.Yz7({ token: C, factory: C.ɵfac })),
                        C
                    );
                })(),
                ne = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({
                            providers: [X],
                            imports: [[f.ez, H.ww]],
                        })),
                        C
                    );
                })();
            var K = _(8306),
                $ = _(4742),
                U = _(8421),
                ie = _(7669),
                Ae = _(5403),
                be = _(3268),
                Re = _(1810),
                ae = _(4004);
            let Q = (() => {
                    class C {
                        constructor(m, N) {
                            (this._renderer = m),
                                (this._elementRef = N),
                                (this.onChange = (Fe) => {}),
                                (this.onTouched = () => {});
                        }
                        setProperty(m, N) {
                            this._renderer.setProperty(
                                this._elementRef.nativeElement,
                                m,
                                N
                            );
                        }
                        registerOnTouched(m) {
                            this.onTouched = m;
                        }
                        registerOnChange(m) {
                            this.onChange = m;
                        }
                        setDisabledState(m) {
                            this.setProperty('disabled', m);
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(w.Y36(w.Qsj), w.Y36(w.SBq));
                        }),
                        (C.ɵdir = w.lG2({ type: C })),
                        C
                    );
                })(),
                me = (() => {
                    class C extends Q {}
                    return (
                        (C.ɵfac = (function () {
                            let D;
                            return function (N) {
                                return (D || (D = w.n5z(C)))(N || C);
                            };
                        })()),
                        (C.ɵdir = w.lG2({ type: C, features: [w.qOj] })),
                        C
                    );
                })();
            const I = new w.OlP('NgValueAccessor'),
                q = {
                    provide: I,
                    useExisting: (0, w.Gpc)(() => qe),
                    multi: !0,
                },
                Be = new w.OlP('CompositionEventMode');
            let qe = (() => {
                class C extends Q {
                    constructor(m, N, Fe) {
                        super(m, N),
                            (this._compositionMode = Fe),
                            (this._composing = !1),
                            null == this._compositionMode &&
                                (this._compositionMode = !(function Pe() {
                                    const C = (0, f.q)()
                                        ? (0, f.q)().getUserAgent()
                                        : '';
                                    return /android (\d+)/.test(
                                        C.toLowerCase()
                                    );
                                })());
                    }
                    writeValue(m) {
                        this.setProperty('value', null == m ? '' : m);
                    }
                    _handleInput(m) {
                        (!this._compositionMode ||
                            (this._compositionMode && !this._composing)) &&
                            this.onChange(m);
                    }
                    _compositionStart() {
                        this._composing = !0;
                    }
                    _compositionEnd(m) {
                        (this._composing = !1),
                            this._compositionMode && this.onChange(m);
                    }
                }
                return (
                    (C.ɵfac = function (m) {
                        return new (m || C)(
                            w.Y36(w.Qsj),
                            w.Y36(w.SBq),
                            w.Y36(Be, 8)
                        );
                    }),
                    (C.ɵdir = w.lG2({
                        type: C,
                        selectors: [
                            [
                                'input',
                                'formControlName',
                                '',
                                3,
                                'type',
                                'checkbox',
                            ],
                            ['textarea', 'formControlName', ''],
                            ['input', 'formControl', '', 3, 'type', 'checkbox'],
                            ['textarea', 'formControl', ''],
                            ['input', 'ngModel', '', 3, 'type', 'checkbox'],
                            ['textarea', 'ngModel', ''],
                            ['', 'ngDefaultControl', ''],
                        ],
                        hostBindings: function (m, N) {
                            1 & m &&
                                w.NdJ('input', function (at) {
                                    return N._handleInput(at.target.value);
                                })('blur', function () {
                                    return N.onTouched();
                                })('compositionstart', function () {
                                    return N._compositionStart();
                                })('compositionend', function (at) {
                                    return N._compositionEnd(at.target.value);
                                });
                        },
                        features: [w._Bn([q]), w.qOj],
                    })),
                    C
                );
            })();
            const Ee = new w.OlP('NgValidators'),
                Oe = new w.OlP('NgAsyncValidators');
            function Rn(C) {
                return null != C;
            }
            function mn(C) {
                const D = (0, w.QGY)(C) ? (0, P.D)(C) : C;
                return (0, w.CqO)(D), D;
            }
            function Zt(C) {
                let D = {};
                return (
                    C.forEach((m) => {
                        D =
                            null != m
                                ? Object.assign(Object.assign({}, D), m)
                                : D;
                    }),
                    0 === Object.keys(D).length ? null : D
                );
            }
            function jn(C, D) {
                return D.map((m) => m(C));
            }
            function Gn(C) {
                return C.map((D) =>
                    (function nn(C) {
                        return !C.validate;
                    })(D)
                        ? D
                        : (m) => D.validate(m)
                );
            }
            function Qn(C) {
                return null != C
                    ? (function Wn(C) {
                          if (!C) return null;
                          const D = C.filter(Rn);
                          return 0 == D.length
                              ? null
                              : function (m) {
                                    return Zt(jn(m, D));
                                };
                      })(Gn(C))
                    : null;
            }
            function Ut(C) {
                return null != C
                    ? (function cr(C) {
                          if (!C) return null;
                          const D = C.filter(Rn);
                          return 0 == D.length
                              ? null
                              : function (m) {
                                    return (function je(...C) {
                                        const D = (0, ie.jO)(C),
                                            { args: m, keys: N } = (0, $.D)(C),
                                            Fe = new K.y((at) => {
                                                const { length: yn } = m;
                                                if (!yn)
                                                    return void at.complete();
                                                const Cn = new Array(yn);
                                                let fi = yn,
                                                    Ur = yn;
                                                for (
                                                    let hi = 0;
                                                    hi < yn;
                                                    hi++
                                                ) {
                                                    let rs = !1;
                                                    (0, U.Xf)(m[hi]).subscribe(
                                                        new Ae.Q(
                                                            at,
                                                            (qs) => {
                                                                rs ||
                                                                    ((rs = !0),
                                                                    Ur--),
                                                                    (Cn[hi] =
                                                                        qs);
                                                            },
                                                            () => fi--,
                                                            void 0,
                                                            () => {
                                                                (!fi || !rs) &&
                                                                    (Ur ||
                                                                        at.next(
                                                                            N
                                                                                ? (0,
                                                                                  Re.n)(
                                                                                      N,
                                                                                      Cn
                                                                                  )
                                                                                : Cn
                                                                        ),
                                                                    at.complete());
                                                            }
                                                        )
                                                    );
                                                }
                                            });
                                        return D ? Fe.pipe((0, be.Z)(D)) : Fe;
                                    })(jn(m, D).map(mn)).pipe((0, ae.U)(Zt));
                                };
                      })(Gn(C))
                    : null;
            }
            function Fn(C, D) {
                return null === C ? [D] : Array.isArray(C) ? [...C, D] : [C, D];
            }
            function yt(C) {
                return C._rawValidators;
            }
            function xn(C) {
                return C._rawAsyncValidators;
            }
            function In(C) {
                return C ? (Array.isArray(C) ? C : [C]) : [];
            }
            function rn(C, D) {
                return Array.isArray(C) ? C.includes(D) : C === D;
            }
            function yr(C, D) {
                const m = In(D);
                return (
                    In(C).forEach((Fe) => {
                        rn(m, Fe) || m.push(Fe);
                    }),
                    m
                );
            }
            function At(C, D) {
                return In(D).filter((m) => !rn(C, m));
            }
            class _t {
                constructor() {
                    (this._rawValidators = []),
                        (this._rawAsyncValidators = []),
                        (this._onDestroyCallbacks = []);
                }
                get value() {
                    return this.control ? this.control.value : null;
                }
                get valid() {
                    return this.control ? this.control.valid : null;
                }
                get invalid() {
                    return this.control ? this.control.invalid : null;
                }
                get pending() {
                    return this.control ? this.control.pending : null;
                }
                get disabled() {
                    return this.control ? this.control.disabled : null;
                }
                get enabled() {
                    return this.control ? this.control.enabled : null;
                }
                get errors() {
                    return this.control ? this.control.errors : null;
                }
                get pristine() {
                    return this.control ? this.control.pristine : null;
                }
                get dirty() {
                    return this.control ? this.control.dirty : null;
                }
                get touched() {
                    return this.control ? this.control.touched : null;
                }
                get status() {
                    return this.control ? this.control.status : null;
                }
                get untouched() {
                    return this.control ? this.control.untouched : null;
                }
                get statusChanges() {
                    return this.control ? this.control.statusChanges : null;
                }
                get valueChanges() {
                    return this.control ? this.control.valueChanges : null;
                }
                get path() {
                    return null;
                }
                _setValidators(D) {
                    (this._rawValidators = D || []),
                        (this._composedValidatorFn = Qn(this._rawValidators));
                }
                _setAsyncValidators(D) {
                    (this._rawAsyncValidators = D || []),
                        (this._composedAsyncValidatorFn = Ut(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn || null;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn || null;
                }
                _registerOnDestroy(D) {
                    this._onDestroyCallbacks.push(D);
                }
                _invokeOnDestroyCallbacks() {
                    this._onDestroyCallbacks.forEach((D) => D()),
                        (this._onDestroyCallbacks = []);
                }
                reset(D) {
                    this.control && this.control.reset(D);
                }
                hasError(D, m) {
                    return !!this.control && this.control.hasError(D, m);
                }
                getError(D, m) {
                    return this.control ? this.control.getError(D, m) : null;
                }
            }
            class It extends _t {
                constructor() {
                    super(...arguments),
                        (this._parent = null),
                        (this.name = null),
                        (this.valueAccessor = null);
                }
            }
            class et extends _t {
                get formDirective() {
                    return null;
                }
                get path() {
                    return null;
                }
            }
            class fn {
                constructor(D) {
                    this._cd = D;
                }
                is(D) {
                    var m, N, Fe;
                    return 'submitted' === D
                        ? !!(null === (m = this._cd) || void 0 === m
                              ? void 0
                              : m.submitted)
                        : !!(null ===
                              (Fe =
                                  null === (N = this._cd) || void 0 === N
                                      ? void 0
                                      : N.control) || void 0 === Fe
                              ? void 0
                              : Fe[D]);
                }
            }
            let gt = (() => {
                    class C extends fn {
                        constructor(m) {
                            super(m);
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(w.Y36(It, 2));
                        }),
                        (C.ɵdir = w.lG2({
                            type: C,
                            selectors: [
                                ['', 'formControlName', ''],
                                ['', 'ngModel', ''],
                                ['', 'formControl', ''],
                            ],
                            hostVars: 14,
                            hostBindings: function (m, N) {
                                2 & m &&
                                    w.ekj('ng-untouched', N.is('untouched'))(
                                        'ng-touched',
                                        N.is('touched')
                                    )('ng-pristine', N.is('pristine'))(
                                        'ng-dirty',
                                        N.is('dirty')
                                    )('ng-valid', N.is('valid'))(
                                        'ng-invalid',
                                        N.is('invalid')
                                    )('ng-pending', N.is('pending'));
                            },
                            features: [w.qOj],
                        })),
                        C
                    );
                })(),
                Ar = (() => {
                    class C extends fn {
                        constructor(m) {
                            super(m);
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(w.Y36(et, 10));
                        }),
                        (C.ɵdir = w.lG2({
                            type: C,
                            selectors: [
                                ['', 'formGroupName', ''],
                                ['', 'formArrayName', ''],
                                ['', 'ngModelGroup', ''],
                                ['', 'formGroup', ''],
                                ['form', 3, 'ngNoForm', ''],
                                ['', 'ngForm', ''],
                            ],
                            hostVars: 16,
                            hostBindings: function (m, N) {
                                2 & m &&
                                    w.ekj('ng-untouched', N.is('untouched'))(
                                        'ng-touched',
                                        N.is('touched')
                                    )('ng-pristine', N.is('pristine'))(
                                        'ng-dirty',
                                        N.is('dirty')
                                    )('ng-valid', N.is('valid'))(
                                        'ng-invalid',
                                        N.is('invalid')
                                    )('ng-pending', N.is('pending'))(
                                        'ng-submitted',
                                        N.is('submitted')
                                    );
                            },
                            features: [w.qOj],
                        })),
                        C
                    );
                })();
            function rt(C, D) {
                return [...D.path, C];
            }
            function Kt(C, D) {
                zn(C, D),
                    D.valueAccessor.writeValue(C.value),
                    (function $t(C, D) {
                        D.valueAccessor.registerOnChange((m) => {
                            (C._pendingValue = m),
                                (C._pendingChange = !0),
                                (C._pendingDirty = !0),
                                'change' === C.updateOn && bn(C, D);
                        });
                    })(C, D),
                    (function Pn(C, D) {
                        const m = (N, Fe) => {
                            D.valueAccessor.writeValue(N),
                                Fe && D.viewToModelUpdate(N);
                        };
                        C.registerOnChange(m),
                            D._registerOnDestroy(() => {
                                C._unregisterOnChange(m);
                            });
                    })(C, D),
                    (function tn(C, D) {
                        D.valueAccessor.registerOnTouched(() => {
                            (C._pendingTouched = !0),
                                'blur' === C.updateOn &&
                                    C._pendingChange &&
                                    bn(C, D),
                                'submit' !== C.updateOn && C.markAsTouched();
                        });
                    })(C, D),
                    (function bt(C, D) {
                        if (D.valueAccessor.setDisabledState) {
                            const m = (N) => {
                                D.valueAccessor.setDisabledState(N);
                            };
                            C.registerOnDisabledChange(m),
                                D._registerOnDestroy(() => {
                                    C._unregisterOnDisabledChange(m);
                                });
                        }
                    })(C, D);
            }
            function qt(C, D, m = !0) {
                const N = () => {};
                D.valueAccessor &&
                    (D.valueAccessor.registerOnChange(N),
                    D.valueAccessor.registerOnTouched(N)),
                    or(C, D),
                    C &&
                        (D._invokeOnDestroyCallbacks(),
                        C._registerOnCollectionChange(() => {}));
            }
            function vn(C, D) {
                C.forEach((m) => {
                    m.registerOnValidatorChange &&
                        m.registerOnValidatorChange(D);
                });
            }
            function zn(C, D) {
                const m = yt(C);
                null !== D.validator
                    ? C.setValidators(Fn(m, D.validator))
                    : 'function' == typeof m && C.setValidators([m]);
                const N = xn(C);
                null !== D.asyncValidator
                    ? C.setAsyncValidators(Fn(N, D.asyncValidator))
                    : 'function' == typeof N && C.setAsyncValidators([N]);
                const Fe = () => C.updateValueAndValidity();
                vn(D._rawValidators, Fe), vn(D._rawAsyncValidators, Fe);
            }
            function or(C, D) {
                let m = !1;
                if (null !== C) {
                    if (null !== D.validator) {
                        const Fe = yt(C);
                        if (Array.isArray(Fe) && Fe.length > 0) {
                            const at = Fe.filter((yn) => yn !== D.validator);
                            at.length !== Fe.length &&
                                ((m = !0), C.setValidators(at));
                        }
                    }
                    if (null !== D.asyncValidator) {
                        const Fe = xn(C);
                        if (Array.isArray(Fe) && Fe.length > 0) {
                            const at = Fe.filter(
                                (yn) => yn !== D.asyncValidator
                            );
                            at.length !== Fe.length &&
                                ((m = !0), C.setAsyncValidators(at));
                        }
                    }
                }
                const N = () => {};
                return vn(D._rawValidators, N), vn(D._rawAsyncValidators, N), m;
            }
            function bn(C, D) {
                C._pendingDirty && C.markAsDirty(),
                    C.setValue(C._pendingValue, { emitModelToViewChange: !1 }),
                    D.viewToModelUpdate(C._pendingValue),
                    (C._pendingChange = !1);
            }
            function _r(C, D) {
                if (!C.hasOwnProperty('model')) return !1;
                const m = C.model;
                return !!m.isFirstChange() || !Object.is(D, m.currentValue);
            }
            function Xn(C, D) {
                if (!D) return null;
                let m, N, Fe;
                return (
                    Array.isArray(D),
                    D.forEach((at) => {
                        at.constructor === qe
                            ? (m = at)
                            : (function nr(C) {
                                  return (
                                      Object.getPrototypeOf(C.constructor) ===
                                      me
                                  );
                              })(at)
                            ? (N = at)
                            : (Fe = at);
                    }),
                    Fe || N || m || null
                );
            }
            function tt(C, D) {
                const m = C.indexOf(D);
                m > -1 && C.splice(m, 1);
            }
            const Vn = 'VALID',
                er = 'INVALID',
                cn = 'PENDING',
                Kn = 'DISABLED';
            function Tr(C) {
                return (dr(C) ? C.validators : C) || null;
            }
            function En(C) {
                return Array.isArray(C) ? Qn(C) : C || null;
            }
            function Nt(C, D) {
                return (dr(D) ? D.asyncValidators : C) || null;
            }
            function Sr(C) {
                return Array.isArray(C) ? Ut(C) : C || null;
            }
            function dr(C) {
                return null != C && !Array.isArray(C) && 'object' == typeof C;
            }
            const Ir = (C) => C instanceof Me,
                an = (C) => C instanceof Je,
                Mn = (C) => C instanceof Ze;
            function Fr(C) {
                return Ir(C) ? C.value : C.getRawValue();
            }
            function J(C, D) {
                const m = an(C),
                    N = C.controls;
                if (!(m ? Object.keys(N) : N).length) throw new w.vHH(1e3, '');
                if (!N[D]) throw new w.vHH(1001, '');
            }
            function xe(C, D) {
                an(C),
                    C._forEachChild((N, Fe) => {
                        if (void 0 === D[Fe]) throw new w.vHH(1002, '');
                    });
            }
            class ve {
                constructor(D, m) {
                    (this._pendingDirty = !1),
                        (this._hasOwnPendingAsyncValidator = !1),
                        (this._pendingTouched = !1),
                        (this._onCollectionChange = () => {}),
                        (this._parent = null),
                        (this.pristine = !0),
                        (this.touched = !1),
                        (this._onDisabledChange = []),
                        (this._rawValidators = D),
                        (this._rawAsyncValidators = m),
                        (this._composedValidatorFn = En(this._rawValidators)),
                        (this._composedAsyncValidatorFn = Sr(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn;
                }
                set validator(D) {
                    this._rawValidators = this._composedValidatorFn = D;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn;
                }
                set asyncValidator(D) {
                    this._rawAsyncValidators = this._composedAsyncValidatorFn =
                        D;
                }
                get parent() {
                    return this._parent;
                }
                get valid() {
                    return this.status === Vn;
                }
                get invalid() {
                    return this.status === er;
                }
                get pending() {
                    return this.status == cn;
                }
                get disabled() {
                    return this.status === Kn;
                }
                get enabled() {
                    return this.status !== Kn;
                }
                get dirty() {
                    return !this.pristine;
                }
                get untouched() {
                    return !this.touched;
                }
                get updateOn() {
                    return this._updateOn
                        ? this._updateOn
                        : this.parent
                        ? this.parent.updateOn
                        : 'change';
                }
                setValidators(D) {
                    (this._rawValidators = D),
                        (this._composedValidatorFn = En(D));
                }
                setAsyncValidators(D) {
                    (this._rawAsyncValidators = D),
                        (this._composedAsyncValidatorFn = Sr(D));
                }
                addValidators(D) {
                    this.setValidators(yr(D, this._rawValidators));
                }
                addAsyncValidators(D) {
                    this.setAsyncValidators(yr(D, this._rawAsyncValidators));
                }
                removeValidators(D) {
                    this.setValidators(At(D, this._rawValidators));
                }
                removeAsyncValidators(D) {
                    this.setAsyncValidators(At(D, this._rawAsyncValidators));
                }
                hasValidator(D) {
                    return rn(this._rawValidators, D);
                }
                hasAsyncValidator(D) {
                    return rn(this._rawAsyncValidators, D);
                }
                clearValidators() {
                    this.validator = null;
                }
                clearAsyncValidators() {
                    this.asyncValidator = null;
                }
                markAsTouched(D = {}) {
                    (this.touched = !0),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.markAsTouched(D);
                }
                markAllAsTouched() {
                    this.markAsTouched({ onlySelf: !0 }),
                        this._forEachChild((D) => D.markAllAsTouched());
                }
                markAsUntouched(D = {}) {
                    (this.touched = !1),
                        (this._pendingTouched = !1),
                        this._forEachChild((m) => {
                            m.markAsUntouched({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updateTouched(D);
                }
                markAsDirty(D = {}) {
                    (this.pristine = !1),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.markAsDirty(D);
                }
                markAsPristine(D = {}) {
                    (this.pristine = !0),
                        (this._pendingDirty = !1),
                        this._forEachChild((m) => {
                            m.markAsPristine({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updatePristine(D);
                }
                markAsPending(D = {}) {
                    (this.status = cn),
                        !1 !== D.emitEvent &&
                            this.statusChanges.emit(this.status),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.markAsPending(D);
                }
                disable(D = {}) {
                    const m = this._parentMarkedDirty(D.onlySelf);
                    (this.status = Kn),
                        (this.errors = null),
                        this._forEachChild((N) => {
                            N.disable(
                                Object.assign(Object.assign({}, D), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this._updateValue(),
                        !1 !== D.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, D), {
                                skipPristineCheck: m,
                            })
                        ),
                        this._onDisabledChange.forEach((N) => N(!0));
                }
                enable(D = {}) {
                    const m = this._parentMarkedDirty(D.onlySelf);
                    (this.status = Vn),
                        this._forEachChild((N) => {
                            N.enable(
                                Object.assign(Object.assign({}, D), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: D.emitEvent,
                        }),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, D), {
                                skipPristineCheck: m,
                            })
                        ),
                        this._onDisabledChange.forEach((N) => N(!1));
                }
                _updateAncestors(D) {
                    this._parent &&
                        !D.onlySelf &&
                        (this._parent.updateValueAndValidity(D),
                        D.skipPristineCheck || this._parent._updatePristine(),
                        this._parent._updateTouched());
                }
                setParent(D) {
                    this._parent = D;
                }
                updateValueAndValidity(D = {}) {
                    this._setInitialStatus(),
                        this._updateValue(),
                        this.enabled &&
                            (this._cancelExistingSubscription(),
                            (this.errors = this._runValidator()),
                            (this.status = this._calculateStatus()),
                            (this.status === Vn || this.status === cn) &&
                                this._runAsyncValidator(D.emitEvent)),
                        !1 !== D.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.updateValueAndValidity(D);
                }
                _updateTreeValidity(D = { emitEvent: !0 }) {
                    this._forEachChild((m) => m._updateTreeValidity(D)),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: D.emitEvent,
                        });
                }
                _setInitialStatus() {
                    this.status = this._allControlsDisabled() ? Kn : Vn;
                }
                _runValidator() {
                    return this.validator ? this.validator(this) : null;
                }
                _runAsyncValidator(D) {
                    if (this.asyncValidator) {
                        (this.status = cn),
                            (this._hasOwnPendingAsyncValidator = !0);
                        const m = mn(this.asyncValidator(this));
                        this._asyncValidationSubscription = m.subscribe((N) => {
                            (this._hasOwnPendingAsyncValidator = !1),
                                this.setErrors(N, { emitEvent: D });
                        });
                    }
                }
                _cancelExistingSubscription() {
                    this._asyncValidationSubscription &&
                        (this._asyncValidationSubscription.unsubscribe(),
                        (this._hasOwnPendingAsyncValidator = !1));
                }
                setErrors(D, m = {}) {
                    (this.errors = D),
                        this._updateControlsErrors(!1 !== m.emitEvent);
                }
                get(D) {
                    return (function An(C, D, m) {
                        if (
                            null == D ||
                            (Array.isArray(D) || (D = D.split(m)),
                            Array.isArray(D) && 0 === D.length)
                        )
                            return null;
                        let N = C;
                        return (
                            D.forEach((Fe) => {
                                N = an(N)
                                    ? N.controls.hasOwnProperty(Fe)
                                        ? N.controls[Fe]
                                        : null
                                    : (Mn(N) && N.at(Fe)) || null;
                            }),
                            N
                        );
                    })(this, D, '.');
                }
                getError(D, m) {
                    const N = m ? this.get(m) : this;
                    return N && N.errors ? N.errors[D] : null;
                }
                hasError(D, m) {
                    return !!this.getError(D, m);
                }
                get root() {
                    let D = this;
                    for (; D._parent; ) D = D._parent;
                    return D;
                }
                _updateControlsErrors(D) {
                    (this.status = this._calculateStatus()),
                        D && this.statusChanges.emit(this.status),
                        this._parent && this._parent._updateControlsErrors(D);
                }
                _initObservables() {
                    (this.valueChanges = new w.vpe()),
                        (this.statusChanges = new w.vpe());
                }
                _calculateStatus() {
                    return this._allControlsDisabled()
                        ? Kn
                        : this.errors
                        ? er
                        : this._hasOwnPendingAsyncValidator ||
                          this._anyControlsHaveStatus(cn)
                        ? cn
                        : this._anyControlsHaveStatus(er)
                        ? er
                        : Vn;
                }
                _anyControlsHaveStatus(D) {
                    return this._anyControls((m) => m.status === D);
                }
                _anyControlsDirty() {
                    return this._anyControls((D) => D.dirty);
                }
                _anyControlsTouched() {
                    return this._anyControls((D) => D.touched);
                }
                _updatePristine(D = {}) {
                    (this.pristine = !this._anyControlsDirty()),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updatePristine(D);
                }
                _updateTouched(D = {}) {
                    (this.touched = this._anyControlsTouched()),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updateTouched(D);
                }
                _isBoxedValue(D) {
                    return (
                        'object' == typeof D &&
                        null !== D &&
                        2 === Object.keys(D).length &&
                        'value' in D &&
                        'disabled' in D
                    );
                }
                _registerOnCollectionChange(D) {
                    this._onCollectionChange = D;
                }
                _setUpdateStrategy(D) {
                    dr(D) &&
                        null != D.updateOn &&
                        (this._updateOn = D.updateOn);
                }
                _parentMarkedDirty(D) {
                    return (
                        !D &&
                        !(!this._parent || !this._parent.dirty) &&
                        !this._parent._anyControlsDirty()
                    );
                }
            }
            class Me extends ve {
                constructor(D = null, m, N) {
                    super(Tr(m), Nt(N, m)),
                        (this.defaultValue = null),
                        (this._onChange = []),
                        (this._pendingChange = !1),
                        this._applyFormState(D),
                        this._setUpdateStrategy(m),
                        this._initObservables(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        }),
                        dr(m) &&
                            m.initialValueIsDefault &&
                            (this.defaultValue = this._isBoxedValue(D)
                                ? D.value
                                : D);
                }
                setValue(D, m = {}) {
                    (this.value = this._pendingValue = D),
                        this._onChange.length &&
                            !1 !== m.emitModelToViewChange &&
                            this._onChange.forEach((N) =>
                                N(this.value, !1 !== m.emitViewToModelChange)
                            ),
                        this.updateValueAndValidity(m);
                }
                patchValue(D, m = {}) {
                    this.setValue(D, m);
                }
                reset(D = this.defaultValue, m = {}) {
                    this._applyFormState(D),
                        this.markAsPristine(m),
                        this.markAsUntouched(m),
                        this.setValue(this.value, m),
                        (this._pendingChange = !1);
                }
                _updateValue() {}
                _anyControls(D) {
                    return !1;
                }
                _allControlsDisabled() {
                    return this.disabled;
                }
                registerOnChange(D) {
                    this._onChange.push(D);
                }
                _unregisterOnChange(D) {
                    tt(this._onChange, D);
                }
                registerOnDisabledChange(D) {
                    this._onDisabledChange.push(D);
                }
                _unregisterOnDisabledChange(D) {
                    tt(this._onDisabledChange, D);
                }
                _forEachChild(D) {}
                _syncPendingControls() {
                    return !(
                        'submit' !== this.updateOn ||
                        (this._pendingDirty && this.markAsDirty(),
                        this._pendingTouched && this.markAsTouched(),
                        !this._pendingChange) ||
                        (this.setValue(this._pendingValue, {
                            onlySelf: !0,
                            emitModelToViewChange: !1,
                        }),
                        0)
                    );
                }
                _applyFormState(D) {
                    this._isBoxedValue(D)
                        ? ((this.value = this._pendingValue = D.value),
                          D.disabled
                              ? this.disable({ onlySelf: !0, emitEvent: !1 })
                              : this.enable({ onlySelf: !0, emitEvent: !1 }))
                        : (this.value = this._pendingValue = D);
                }
            }
            class Je extends ve {
                constructor(D, m, N) {
                    super(Tr(m), Nt(N, m)),
                        (this.controls = D),
                        this._initObservables(),
                        this._setUpdateStrategy(m),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                registerControl(D, m) {
                    return this.controls[D]
                        ? this.controls[D]
                        : ((this.controls[D] = m),
                          m.setParent(this),
                          m._registerOnCollectionChange(
                              this._onCollectionChange
                          ),
                          m);
                }
                addControl(D, m, N = {}) {
                    this.registerControl(D, m),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent }),
                        this._onCollectionChange();
                }
                removeControl(D, m = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        delete this.controls[D],
                        this.updateValueAndValidity({ emitEvent: m.emitEvent }),
                        this._onCollectionChange();
                }
                setControl(D, m, N = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        delete this.controls[D],
                        m && this.registerControl(D, m),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent }),
                        this._onCollectionChange();
                }
                contains(D) {
                    return (
                        this.controls.hasOwnProperty(D) &&
                        this.controls[D].enabled
                    );
                }
                setValue(D, m = {}) {
                    xe(this, D),
                        Object.keys(D).forEach((N) => {
                            J(this, N),
                                this.controls[N].setValue(D[N], {
                                    onlySelf: !0,
                                    emitEvent: m.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(m);
                }
                patchValue(D, m = {}) {
                    null != D &&
                        (Object.keys(D).forEach((N) => {
                            this.controls[N] &&
                                this.controls[N].patchValue(D[N], {
                                    onlySelf: !0,
                                    emitEvent: m.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(m));
                }
                reset(D = {}, m = {}) {
                    this._forEachChild((N, Fe) => {
                        N.reset(D[Fe], {
                            onlySelf: !0,
                            emitEvent: m.emitEvent,
                        });
                    }),
                        this._updatePristine(m),
                        this._updateTouched(m),
                        this.updateValueAndValidity(m);
                }
                getRawValue() {
                    return this._reduceChildren(
                        {},
                        (D, m, N) => ((D[N] = Fr(m)), D)
                    );
                }
                _syncPendingControls() {
                    let D = this._reduceChildren(
                        !1,
                        (m, N) => !!N._syncPendingControls() || m
                    );
                    return (
                        D && this.updateValueAndValidity({ onlySelf: !0 }), D
                    );
                }
                _forEachChild(D) {
                    Object.keys(this.controls).forEach((m) => {
                        const N = this.controls[m];
                        N && D(N, m);
                    });
                }
                _setUpControls() {
                    this._forEachChild((D) => {
                        D.setParent(this),
                            D._registerOnCollectionChange(
                                this._onCollectionChange
                            );
                    });
                }
                _updateValue() {
                    this.value = this._reduceValue();
                }
                _anyControls(D) {
                    for (const m of Object.keys(this.controls)) {
                        const N = this.controls[m];
                        if (this.contains(m) && D(N)) return !0;
                    }
                    return !1;
                }
                _reduceValue() {
                    return this._reduceChildren(
                        {},
                        (D, m, N) => (
                            (m.enabled || this.disabled) && (D[N] = m.value), D
                        )
                    );
                }
                _reduceChildren(D, m) {
                    let N = D;
                    return (
                        this._forEachChild((Fe, at) => {
                            N = m(N, Fe, at);
                        }),
                        N
                    );
                }
                _allControlsDisabled() {
                    for (const D of Object.keys(this.controls))
                        if (this.controls[D].enabled) return !1;
                    return (
                        Object.keys(this.controls).length > 0 || this.disabled
                    );
                }
            }
            class Ze extends ve {
                constructor(D, m, N) {
                    super(Tr(m), Nt(N, m)),
                        (this.controls = D),
                        this._initObservables(),
                        this._setUpdateStrategy(m),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                at(D) {
                    return this.controls[D];
                }
                push(D, m = {}) {
                    this.controls.push(D),
                        this._registerControl(D),
                        this.updateValueAndValidity({ emitEvent: m.emitEvent }),
                        this._onCollectionChange();
                }
                insert(D, m, N = {}) {
                    this.controls.splice(D, 0, m),
                        this._registerControl(m),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent });
                }
                removeAt(D, m = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        this.controls.splice(D, 1),
                        this.updateValueAndValidity({ emitEvent: m.emitEvent });
                }
                setControl(D, m, N = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        this.controls.splice(D, 1),
                        m &&
                            (this.controls.splice(D, 0, m),
                            this._registerControl(m)),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent }),
                        this._onCollectionChange();
                }
                get length() {
                    return this.controls.length;
                }
                setValue(D, m = {}) {
                    xe(this, D),
                        D.forEach((N, Fe) => {
                            J(this, Fe),
                                this.at(Fe).setValue(N, {
                                    onlySelf: !0,
                                    emitEvent: m.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(m);
                }
                patchValue(D, m = {}) {
                    null != D &&
                        (D.forEach((N, Fe) => {
                            this.at(Fe) &&
                                this.at(Fe).patchValue(N, {
                                    onlySelf: !0,
                                    emitEvent: m.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(m));
                }
                reset(D = [], m = {}) {
                    this._forEachChild((N, Fe) => {
                        N.reset(D[Fe], {
                            onlySelf: !0,
                            emitEvent: m.emitEvent,
                        });
                    }),
                        this._updatePristine(m),
                        this._updateTouched(m),
                        this.updateValueAndValidity(m);
                }
                getRawValue() {
                    return this.controls.map((D) => Fr(D));
                }
                clear(D = {}) {
                    this.controls.length < 1 ||
                        (this._forEachChild((m) =>
                            m._registerOnCollectionChange(() => {})
                        ),
                        this.controls.splice(0),
                        this.updateValueAndValidity({
                            emitEvent: D.emitEvent,
                        }));
                }
                _syncPendingControls() {
                    let D = this.controls.reduce(
                        (m, N) => !!N._syncPendingControls() || m,
                        !1
                    );
                    return (
                        D && this.updateValueAndValidity({ onlySelf: !0 }), D
                    );
                }
                _forEachChild(D) {
                    this.controls.forEach((m, N) => {
                        D(m, N);
                    });
                }
                _updateValue() {
                    this.value = this.controls
                        .filter((D) => D.enabled || this.disabled)
                        .map((D) => D.value);
                }
                _anyControls(D) {
                    return this.controls.some((m) => m.enabled && D(m));
                }
                _setUpControls() {
                    this._forEachChild((D) => this._registerControl(D));
                }
                _allControlsDisabled() {
                    for (const D of this.controls) if (D.enabled) return !1;
                    return this.controls.length > 0 || this.disabled;
                }
                _registerControl(D) {
                    D.setParent(this),
                        D._registerOnCollectionChange(this._onCollectionChange);
                }
            }
            const yi = { provide: It, useExisting: (0, w.Gpc)(() => ge) },
                _e = (() => Promise.resolve(null))();
            let ge = (() => {
                    class C extends It {
                        constructor(m, N, Fe, at, yn) {
                            super(),
                                (this._changeDetectorRef = yn),
                                (this.control = new Me()),
                                (this._registered = !1),
                                (this.update = new w.vpe()),
                                (this._parent = m),
                                this._setValidators(N),
                                this._setAsyncValidators(Fe),
                                (this.valueAccessor = Xn(0, at));
                        }
                        ngOnChanges(m) {
                            this._checkForErrors(),
                                this._registered || this._setUpControl(),
                                'isDisabled' in m && this._updateDisabled(m),
                                _r(m, this.viewModel) &&
                                    (this._updateValue(this.model),
                                    (this.viewModel = this.model));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        get path() {
                            return this._parent
                                ? rt(this.name, this._parent)
                                : [this.name];
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        viewToModelUpdate(m) {
                            (this.viewModel = m), this.update.emit(m);
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(),
                                this._isStandalone()
                                    ? this._setUpStandalone()
                                    : this.formDirective.addControl(this),
                                (this._registered = !0);
                        }
                        _setUpdateStrategy() {
                            this.options &&
                                null != this.options.updateOn &&
                                (this.control._updateOn =
                                    this.options.updateOn);
                        }
                        _isStandalone() {
                            return (
                                !this._parent ||
                                !(!this.options || !this.options.standalone)
                            );
                        }
                        _setUpStandalone() {
                            Kt(this.control, this),
                                this.control.updateValueAndValidity({
                                    emitEvent: !1,
                                });
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(),
                                this._checkName();
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options &&
                                this.options.name &&
                                (this.name = this.options.name),
                                this._isStandalone();
                        }
                        _updateValue(m) {
                            _e.then(() => {
                                var N;
                                this.control.setValue(m, {
                                    emitViewToModelChange: !1,
                                }),
                                    null === (N = this._changeDetectorRef) ||
                                        void 0 === N ||
                                        N.markForCheck();
                            });
                        }
                        _updateDisabled(m) {
                            const N = m.isDisabled.currentValue,
                                Fe = '' === N || (N && 'false' !== N);
                            _e.then(() => {
                                var at;
                                Fe && !this.control.disabled
                                    ? this.control.disable()
                                    : !Fe &&
                                      this.control.disabled &&
                                      this.control.enable(),
                                    null === (at = this._changeDetectorRef) ||
                                        void 0 === at ||
                                        at.markForCheck();
                            });
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(
                                w.Y36(et, 9),
                                w.Y36(Ee, 10),
                                w.Y36(Oe, 10),
                                w.Y36(I, 10),
                                w.Y36(w.sBO, 8)
                            );
                        }),
                        (C.ɵdir = w.lG2({
                            type: C,
                            selectors: [
                                [
                                    '',
                                    'ngModel',
                                    '',
                                    3,
                                    'formControlName',
                                    '',
                                    3,
                                    'formControl',
                                    '',
                                ],
                            ],
                            inputs: {
                                name: 'name',
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                                options: ['ngModelOptions', 'options'],
                            },
                            outputs: { update: 'ngModelChange' },
                            exportAs: ['ngModel'],
                            features: [w._Bn([yi]), w.qOj, w.TTD],
                        })),
                        C
                    );
                })(),
                ar = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({})),
                        C
                    );
                })();
            const Ti = new w.OlP('NgModelWithFormControlWarning'),
                ai = { provide: et, useExisting: (0, w.Gpc)(() => es) };
            let es = (() => {
                class C extends et {
                    constructor(m, N) {
                        super(),
                            (this.validators = m),
                            (this.asyncValidators = N),
                            (this.submitted = !1),
                            (this._onCollectionChange = () =>
                                this._updateDomValue()),
                            (this.directives = []),
                            (this.form = null),
                            (this.ngSubmit = new w.vpe()),
                            this._setValidators(m),
                            this._setAsyncValidators(N);
                    }
                    ngOnChanges(m) {
                        this._checkFormPresent(),
                            m.hasOwnProperty('form') &&
                                (this._updateValidators(),
                                this._updateDomValue(),
                                this._updateRegistrations(),
                                (this._oldForm = this.form));
                    }
                    ngOnDestroy() {
                        this.form &&
                            (or(this.form, this),
                            this.form._onCollectionChange ===
                                this._onCollectionChange &&
                                this.form._registerOnCollectionChange(
                                    () => {}
                                ));
                    }
                    get formDirective() {
                        return this;
                    }
                    get control() {
                        return this.form;
                    }
                    get path() {
                        return [];
                    }
                    addControl(m) {
                        const N = this.form.get(m.path);
                        return (
                            Kt(N, m),
                            N.updateValueAndValidity({ emitEvent: !1 }),
                            this.directives.push(m),
                            N
                        );
                    }
                    getControl(m) {
                        return this.form.get(m.path);
                    }
                    removeControl(m) {
                        qt(m.control || null, m, !1), tt(this.directives, m);
                    }
                    addFormGroup(m) {
                        this._setUpFormContainer(m);
                    }
                    removeFormGroup(m) {
                        this._cleanUpFormContainer(m);
                    }
                    getFormGroup(m) {
                        return this.form.get(m.path);
                    }
                    addFormArray(m) {
                        this._setUpFormContainer(m);
                    }
                    removeFormArray(m) {
                        this._cleanUpFormContainer(m);
                    }
                    getFormArray(m) {
                        return this.form.get(m.path);
                    }
                    updateModel(m, N) {
                        this.form.get(m.path).setValue(N);
                    }
                    onSubmit(m) {
                        return (
                            (this.submitted = !0),
                            (function Rr(C, D) {
                                C._syncPendingControls(),
                                    D.forEach((m) => {
                                        const N = m.control;
                                        'submit' === N.updateOn &&
                                            N._pendingChange &&
                                            (m.viewToModelUpdate(
                                                N._pendingValue
                                            ),
                                            (N._pendingChange = !1));
                                    });
                            })(this.form, this.directives),
                            this.ngSubmit.emit(m),
                            !1
                        );
                    }
                    onReset() {
                        this.resetForm();
                    }
                    resetForm(m) {
                        this.form.reset(m), (this.submitted = !1);
                    }
                    _updateDomValue() {
                        this.directives.forEach((m) => {
                            const N = m.control,
                                Fe = this.form.get(m.path);
                            N !== Fe &&
                                (qt(N || null, m),
                                Ir(Fe) && (Kt(Fe, m), (m.control = Fe)));
                        }),
                            this.form._updateTreeValidity({ emitEvent: !1 });
                    }
                    _setUpFormContainer(m) {
                        const N = this.form.get(m.path);
                        (function Jn(C, D) {
                            zn(C, D);
                        })(N, m),
                            N.updateValueAndValidity({ emitEvent: !1 });
                    }
                    _cleanUpFormContainer(m) {
                        if (this.form) {
                            const N = this.form.get(m.path);
                            N &&
                                (function Wr(C, D) {
                                    return or(C, D);
                                })(N, m) &&
                                N.updateValueAndValidity({ emitEvent: !1 });
                        }
                    }
                    _updateRegistrations() {
                        this.form._registerOnCollectionChange(
                            this._onCollectionChange
                        ),
                            this._oldForm &&
                                this._oldForm._registerOnCollectionChange(
                                    () => {}
                                );
                    }
                    _updateValidators() {
                        zn(this.form, this),
                            this._oldForm && or(this._oldForm, this);
                    }
                    _checkFormPresent() {}
                }
                return (
                    (C.ɵfac = function (m) {
                        return new (m || C)(w.Y36(Ee, 10), w.Y36(Oe, 10));
                    }),
                    (C.ɵdir = w.lG2({
                        type: C,
                        selectors: [['', 'formGroup', '']],
                        hostBindings: function (m, N) {
                            1 & m &&
                                w.NdJ('submit', function (at) {
                                    return N.onSubmit(at);
                                })('reset', function () {
                                    return N.onReset();
                                });
                        },
                        inputs: { form: ['formGroup', 'form'] },
                        outputs: { ngSubmit: 'ngSubmit' },
                        exportAs: ['ngForm'],
                        features: [w._Bn([ai]), w.qOj, w.TTD],
                    })),
                    C
                );
            })();
            const li = { provide: It, useExisting: (0, w.Gpc)(() => Gi) };
            let Gi = (() => {
                    class C extends It {
                        constructor(m, N, Fe, at, yn) {
                            super(),
                                (this._ngModelWarningConfig = yn),
                                (this._added = !1),
                                (this.update = new w.vpe()),
                                (this._ngModelWarningSent = !1),
                                (this._parent = m),
                                this._setValidators(N),
                                this._setAsyncValidators(Fe),
                                (this.valueAccessor = Xn(0, at));
                        }
                        set isDisabled(m) {}
                        ngOnChanges(m) {
                            this._added || this._setUpControl(),
                                _r(m, this.viewModel) &&
                                    ((this.viewModel = this.model),
                                    this.formDirective.updateModel(
                                        this,
                                        this.model
                                    ));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        viewToModelUpdate(m) {
                            (this.viewModel = m), this.update.emit(m);
                        }
                        get path() {
                            return rt(
                                null == this.name
                                    ? this.name
                                    : this.name.toString(),
                                this._parent
                            );
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        _checkParentType() {}
                        _setUpControl() {
                            this._checkParentType(),
                                (this.control =
                                    this.formDirective.addControl(this)),
                                this.control.disabled &&
                                    this.valueAccessor.setDisabledState &&
                                    this.valueAccessor.setDisabledState(!0),
                                (this._added = !0);
                        }
                    }
                    return (
                        (C._ngModelWarningSentOnce = !1),
                        (C.ɵfac = function (m) {
                            return new (m || C)(
                                w.Y36(et, 13),
                                w.Y36(Ee, 10),
                                w.Y36(Oe, 10),
                                w.Y36(I, 10),
                                w.Y36(Ti, 8)
                            );
                        }),
                        (C.ɵdir = w.lG2({
                            type: C,
                            selectors: [['', 'formControlName', '']],
                            inputs: {
                                name: ['formControlName', 'name'],
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                            },
                            outputs: { update: 'ngModelChange' },
                            features: [w._Bn([li]), w.qOj, w.TTD],
                        })),
                        C
                    );
                })(),
                Yi = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({ imports: [[ar]] })),
                        C
                    );
                })(),
                Li = (() => {
                    class C {
                        static withConfig(m) {
                            return {
                                ngModule: C,
                                providers: [
                                    {
                                        provide: Ti,
                                        useValue:
                                            m.warnOnNgModelWithFormControl,
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({ imports: [Yi] })),
                        C
                    );
                })(),
                Qi = (() => {
                    class C {
                        group(m, N = null) {
                            const Fe = this._reduceControls(m);
                            let Cn,
                                at = null,
                                yn = null;
                            return (
                                null != N &&
                                    ((function ns(C) {
                                        return (
                                            void 0 !== C.asyncValidators ||
                                            void 0 !== C.validators ||
                                            void 0 !== C.updateOn
                                        );
                                    })(N)
                                        ? ((at =
                                              null != N.validators
                                                  ? N.validators
                                                  : null),
                                          (yn =
                                              null != N.asyncValidators
                                                  ? N.asyncValidators
                                                  : null),
                                          (Cn =
                                              null != N.updateOn
                                                  ? N.updateOn
                                                  : void 0))
                                        : ((at =
                                              null != N.validator
                                                  ? N.validator
                                                  : null),
                                          (yn =
                                              null != N.asyncValidator
                                                  ? N.asyncValidator
                                                  : null))),
                                new Je(Fe, {
                                    asyncValidators: yn,
                                    updateOn: Cn,
                                    validators: at,
                                })
                            );
                        }
                        control(m, N, Fe) {
                            return new Me(m, N, Fe);
                        }
                        array(m, N, Fe) {
                            const at = m.map((yn) => this._createControl(yn));
                            return new Ze(at, N, Fe);
                        }
                        _reduceControls(m) {
                            const N = {};
                            return (
                                Object.keys(m).forEach((Fe) => {
                                    N[Fe] = this._createControl(m[Fe]);
                                }),
                                N
                            );
                        }
                        _createControl(m) {
                            return Ir(m) || an(m) || Mn(m)
                                ? m
                                : Array.isArray(m)
                                ? this.control(
                                      m[0],
                                      m.length > 1 ? m[1] : null,
                                      m.length > 2 ? m[2] : null
                                  )
                                : this.control(m);
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵprov = w.Yz7({
                            token: C,
                            factory: C.ɵfac,
                            providedIn: Li,
                        })),
                        C
                    );
                })();
            var Ke = _(5573),
                Xt = _(2323);
            (0, Xt.PH)('[Go to Login Button] Visit Login Intent');
            const Yn = (0, Xt.PH)('[Login Service] Login Intent', (0, Xt.Ky)()),
                fs = (0, Xt.PH)('[Login Effects] Login Success');
            var Mi = _(3900),
                Dr = _(9300);
            let hs = (() => {
                    class C {
                        constructor(m, N, Fe) {
                            (this.actions$ = m),
                                (this.authService = N),
                                (this.router = Fe),
                                (this.login$ = (0, Ke.GW)(() =>
                                    this.actions$.pipe(
                                        (0, Ke.l4)(Yn),
                                        (0, Mi.w)(
                                            ({ email: at, password: yn }) =>
                                                this.authService
                                                    .login(at, yn)
                                                    .pipe(
                                                        (0, ae.U)(
                                                            ({ user: Cn }) => Cn
                                                        ),
                                                        (0, Dr.h)((Cn) => !!Cn),
                                                        (0, ae.U)(() => fs())
                                                    )
                                        ),
                                        (0, j.b)(() =>
                                            this.router.navigate(['/'])
                                        )
                                    )
                                ));
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(
                                w.LFG(Ke.eX),
                                w.LFG(X),
                                w.LFG(te.F0)
                            );
                        }),
                        (C.ɵprov = w.Yz7({
                            token: C,
                            factory: C.ɵfac,
                            providedIn: 'root',
                        })),
                        C
                    );
                })(),
                ws = (() => {
                    class C {
                        constructor(m, N, Fe) {
                            (this.el = m), (this.ngModel = N), (this.cd = Fe);
                        }
                        ngAfterViewInit() {
                            this.updateFilledState(), this.cd.detectChanges();
                        }
                        ngDoCheck() {
                            this.updateFilledState();
                        }
                        onInput(m) {
                            this.updateFilledState();
                        }
                        updateFilledState() {
                            this.filled =
                                (this.el.nativeElement.value &&
                                    this.el.nativeElement.value.length) ||
                                (this.ngModel && this.ngModel.model);
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(
                                w.Y36(w.SBq),
                                w.Y36(ge, 8),
                                w.Y36(w.sBO)
                            );
                        }),
                        (C.ɵdir = w.lG2({
                            type: C,
                            selectors: [['', 'pInputText', '']],
                            hostAttrs: [
                                1,
                                'p-inputtext',
                                'p-component',
                                'p-element',
                            ],
                            hostVars: 2,
                            hostBindings: function (m, N) {
                                1 & m &&
                                    w.NdJ('input', function (at) {
                                        return N.onInput(at);
                                    }),
                                    2 & m && w.ekj('p-filled', N.filled);
                            },
                        })),
                        C
                    );
                })(),
                So = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({ imports: [[f.ez]] })),
                        C
                    );
                })();
            var Ts = _(5893);
            const gs = [
                {
                    path: 'login',
                    component: (() => {
                        class C {
                            constructor(m, N) {
                                (this.formBuilder = m),
                                    (this.store = N),
                                    (this.loginForm = this.formBuilder.group({
                                        email: [],
                                        password: [],
                                    }));
                            }
                            loginClick() {
                                var m, N;
                                this.store.dispatch(
                                    Yn({
                                        email:
                                            null === (m = this.loginForm) ||
                                            void 0 === m
                                                ? void 0
                                                : m.value.email,
                                        password:
                                            null === (N = this.loginForm) ||
                                            void 0 === N
                                                ? void 0
                                                : N.value.password,
                                    })
                                );
                            }
                        }
                        return (
                            (C.ɵfac = function (m) {
                                return new (m || C)(w.Y36(Qi), w.Y36(Xt.yh));
                            }),
                            (C.ɵcmp = w.Xpm({
                                type: C,
                                selectors: [['ng-component']],
                                decls: 16,
                                vars: 1,
                                consts: [
                                    [1, 'p-fluid', 3, 'formGroup'],
                                    [1, 'field'],
                                    ['for', 'email'],
                                    [1, 'p-inputgroup'],
                                    [1, 'p-inputgroup-addon'],
                                    [1, 'pi', 'pi-user'],
                                    [
                                        'id',
                                        'email',
                                        'type',
                                        'text',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'email',
                                        'placeholder',
                                        'somebody@email.com',
                                    ],
                                    [1, 'pi', 'pi-lock'],
                                    [
                                        'type',
                                        'password',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'password',
                                    ],
                                    ['label', 'Submit', 3, 'click'],
                                ],
                                template: function (m, N) {
                                    1 & m &&
                                        (w.TgZ(0, 'div', 0),
                                        w.TgZ(1, 'div', 1),
                                        w.TgZ(2, 'label', 2),
                                        w._uU(3, 'Email'),
                                        w.qZA(),
                                        w.TgZ(4, 'div', 3),
                                        w.TgZ(5, 'span', 4),
                                        w._UZ(6, 'i', 5),
                                        w.qZA(),
                                        w._UZ(7, 'input', 6),
                                        w.qZA(),
                                        w.qZA(),
                                        w.TgZ(8, 'div', 1),
                                        w.TgZ(9, 'label', 2),
                                        w._uU(10, 'Password'),
                                        w.qZA(),
                                        w.TgZ(11, 'div', 3),
                                        w.TgZ(12, 'span', 4),
                                        w._UZ(13, 'i', 7),
                                        w.qZA(),
                                        w._UZ(14, 'input', 8),
                                        w.qZA(),
                                        w.qZA(),
                                        w.qZA(),
                                        w.TgZ(15, 'p-button', 9),
                                        w.NdJ('click', function () {
                                            return N.loginClick();
                                        }),
                                        w.qZA()),
                                        2 & m &&
                                            w.Q6J('formGroup', N.loginForm);
                                },
                                directives: [Ar, es, qe, ws, gt, Gi, Ts.zx],
                                encapsulation: 2,
                                changeDetection: 0,
                            })),
                            C
                        );
                    })(),
                    children: [],
                },
            ];
            let mr = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({
                            imports: [[te.Bz.forChild(gs)], te.Bz],
                        })),
                        C
                    );
                })(),
                Di = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({
                            imports: [
                                [
                                    f.ez,
                                    mr,
                                    Li,
                                    Ts.hJ,
                                    So,
                                    ne,
                                    Ke.sQ.forFeature([hs]),
                                ],
                            ],
                        })),
                        C
                    );
                })();
            var Ss = _(2266);
            let di = (() => {
                    class C {}
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)();
                        }),
                        (C.ɵmod = w.oAB({ type: C })),
                        (C.ɵinj = w.cJS({
                            imports: [[f.ez, Ts.hJ, Ss.F, te.Bz]],
                        })),
                        C
                    );
                })(),
                Ci = (() => {
                    class C {
                        constructor(m) {
                            this.afAuth = m;
                        }
                        intercept(m, N) {
                            return this.afAuth.user.pipe(
                                (0, Mi.w)((Fe) =>
                                    Fe
                                        ? (0, P.D)(Fe.getIdToken()).pipe(
                                              (0, ae.U)((at) =>
                                                  m.clone({
                                                      headers: m.headers.append(
                                                          'Authorization',
                                                          `Bearer ${at}`
                                                      ),
                                                  })
                                              ),
                                              (0, Mi.w)((at) => N.handle(at))
                                          )
                                        : N.handle(m)
                                )
                            );
                        }
                    }
                    return (
                        (C.ɵfac = function (m) {
                            return new (m || C)(w.LFG(H.zQ));
                        }),
                        (C.ɵprov = w.Yz7({ token: C, factory: C.ɵfac })),
                        C
                    );
                })();
        },
        1485: (pe, z, _) => {
            'use strict';
            _.d(z, { O: () => j });
            var f = _(5e3),
                P = _(2228);
            let j = (() => {
                class w {
                    constructor(te) {
                        this.fns = te;
                    }
                    get(te) {
                        return this.fns.httpsCallable(te)(void 0);
                    }
                }
                return (
                    (w.ɵfac = function (te) {
                        return new (te || w)(f.LFG(P.l4));
                    }),
                    (w.ɵprov = f.Yz7({
                        token: w,
                        factory: w.ɵfac,
                        providedIn: 'root',
                    })),
                    w
                );
            })();
        },
        5867: (pe, z, _) => {
            'use strict';
            _.d(z, { Mq: () => f.getApp, C6: () => f.getApps });
            var f = _(9681);
            (0, f.registerVersion)('firebase', '9.6.5', 'app');
        },
        127: (pe, z, _) => {
            'use strict';
            _.d(z, { Z: () => f.Z });
            var f = _(3942);
            f.Z.registerVersion('firebase', '9.6.5', 'app-compat');
        },
        2940: function (pe, z) {
            !(function (_) {
                'use strict';
                function f(ae) {
                    return Array.prototype.slice.call(ae);
                }
                function P(ae) {
                    return new Promise(function (Q, me) {
                        (ae.onsuccess = function () {
                            Q(ae.result);
                        }),
                            (ae.onerror = function () {
                                me(ae.error);
                            });
                    });
                }
                function j(ae, Q, me) {
                    var I,
                        F = new Promise(function (oe, q) {
                            P((I = ae[Q].apply(ae, me))).then(oe, q);
                        });
                    return (F.request = I), F;
                }
                function w(ae, Q, me) {
                    var I = j(ae, Q, me);
                    return I.then(function (F) {
                        if (F) return new $(F, I.request);
                    });
                }
                function H(ae, Q, me) {
                    me.forEach(function (I) {
                        Object.defineProperty(ae.prototype, I, {
                            get: function () {
                                return this[Q][I];
                            },
                            set: function (F) {
                                this[Q][I] = F;
                            },
                        });
                    });
                }
                function te(ae, Q, me, I) {
                    I.forEach(function (F) {
                        F in me.prototype &&
                            (ae.prototype[F] = function () {
                                return j(this[Q], F, arguments);
                            });
                    });
                }
                function X(ae, Q, me, I) {
                    I.forEach(function (F) {
                        F in me.prototype &&
                            (ae.prototype[F] = function () {
                                return this[Q][F].apply(this[Q], arguments);
                            });
                    });
                }
                function ne(ae, Q, me, I) {
                    I.forEach(function (F) {
                        F in me.prototype &&
                            (ae.prototype[F] = function () {
                                return w(this[Q], F, arguments);
                            });
                    });
                }
                function K(ae) {
                    this._index = ae;
                }
                function $(ae, Q) {
                    (this._cursor = ae), (this._request = Q);
                }
                function U(ae) {
                    this._store = ae;
                }
                function ie(ae) {
                    (this._tx = ae),
                        (this.complete = new Promise(function (Q, me) {
                            (ae.oncomplete = function () {
                                Q();
                            }),
                                (ae.onerror = function () {
                                    me(ae.error);
                                }),
                                (ae.onabort = function () {
                                    me(ae.error);
                                });
                        }));
                }
                function Ae(ae, Q, me) {
                    (this._db = ae),
                        (this.oldVersion = Q),
                        (this.transaction = new ie(me));
                }
                function be(ae) {
                    this._db = ae;
                }
                H(K, '_index', ['name', 'keyPath', 'multiEntry', 'unique']),
                    te(K, '_index', IDBIndex, [
                        'get',
                        'getKey',
                        'getAll',
                        'getAllKeys',
                        'count',
                    ]),
                    ne(K, '_index', IDBIndex, ['openCursor', 'openKeyCursor']),
                    H($, '_cursor', [
                        'direction',
                        'key',
                        'primaryKey',
                        'value',
                    ]),
                    te($, '_cursor', IDBCursor, ['update', 'delete']),
                    ['advance', 'continue', 'continuePrimaryKey'].forEach(
                        function (ae) {
                            ae in IDBCursor.prototype &&
                                ($.prototype[ae] = function () {
                                    var Q = this,
                                        me = arguments;
                                    return Promise.resolve().then(function () {
                                        return (
                                            Q._cursor[ae].apply(Q._cursor, me),
                                            P(Q._request).then(function (I) {
                                                if (I)
                                                    return new $(I, Q._request);
                                            })
                                        );
                                    });
                                });
                        }
                    ),
                    (U.prototype.createIndex = function () {
                        return new K(
                            this._store.createIndex.apply(
                                this._store,
                                arguments
                            )
                        );
                    }),
                    (U.prototype.index = function () {
                        return new K(
                            this._store.index.apply(this._store, arguments)
                        );
                    }),
                    H(U, '_store', [
                        'name',
                        'keyPath',
                        'indexNames',
                        'autoIncrement',
                    ]),
                    te(U, '_store', IDBObjectStore, [
                        'put',
                        'add',
                        'delete',
                        'clear',
                        'get',
                        'getAll',
                        'getKey',
                        'getAllKeys',
                        'count',
                    ]),
                    ne(U, '_store', IDBObjectStore, [
                        'openCursor',
                        'openKeyCursor',
                    ]),
                    X(U, '_store', IDBObjectStore, ['deleteIndex']),
                    (ie.prototype.objectStore = function () {
                        return new U(
                            this._tx.objectStore.apply(this._tx, arguments)
                        );
                    }),
                    H(ie, '_tx', ['objectStoreNames', 'mode']),
                    X(ie, '_tx', IDBTransaction, ['abort']),
                    (Ae.prototype.createObjectStore = function () {
                        return new U(
                            this._db.createObjectStore.apply(
                                this._db,
                                arguments
                            )
                        );
                    }),
                    H(Ae, '_db', ['name', 'version', 'objectStoreNames']),
                    X(Ae, '_db', IDBDatabase, ['deleteObjectStore', 'close']),
                    (be.prototype.transaction = function () {
                        return new ie(
                            this._db.transaction.apply(this._db, arguments)
                        );
                    }),
                    H(be, '_db', ['name', 'version', 'objectStoreNames']),
                    X(be, '_db', IDBDatabase, ['close']),
                    ['openCursor', 'openKeyCursor'].forEach(function (ae) {
                        [U, K].forEach(function (Q) {
                            ae in Q.prototype &&
                                (Q.prototype[ae.replace('open', 'iterate')] =
                                    function () {
                                        var me = f(arguments),
                                            I = me[me.length - 1],
                                            F = this._store || this._index,
                                            oe = F[ae].apply(
                                                F,
                                                me.slice(0, -1)
                                            );
                                        oe.onsuccess = function () {
                                            I(oe.result);
                                        };
                                    });
                        });
                    }),
                    [K, U].forEach(function (ae) {
                        ae.prototype.getAll ||
                            (ae.prototype.getAll = function (Q, me) {
                                var I = this,
                                    F = [];
                                return new Promise(function (oe) {
                                    I.iterateCursor(Q, function (q) {
                                        q
                                            ? (F.push(q.value),
                                              void 0 === me || F.length != me
                                                  ? q.continue()
                                                  : oe(F))
                                            : oe(F);
                                    });
                                });
                            });
                    }),
                    (_.openDb = function Re(ae, Q, me) {
                        var I = j(indexedDB, 'open', [ae, Q]),
                            F = I.request;
                        return (
                            F &&
                                (F.onupgradeneeded = function (oe) {
                                    me &&
                                        me(
                                            new Ae(
                                                F.result,
                                                oe.oldVersion,
                                                F.transaction
                                            )
                                        );
                                }),
                            I.then(function (oe) {
                                return new be(oe);
                            })
                        );
                    }),
                    (_.deleteDb = function je(ae) {
                        return j(indexedDB, 'deleteDatabase', [ae]);
                    }),
                    Object.defineProperty(_, '__esModule', { value: !0 });
            })(z);
        },
        1135: (pe, z, _) => {
            'use strict';
            _.d(z, { X: () => P });
            var f = _(7579);
            class P extends f.x {
                constructor(w) {
                    super(), (this._value = w);
                }
                get value() {
                    return this.getValue();
                }
                _subscribe(w) {
                    const H = super._subscribe(w);
                    return !H.closed && w.next(this._value), H;
                }
                getValue() {
                    const { hasError: w, thrownError: H, _value: te } = this;
                    if (w) throw H;
                    return this._throwIfClosed(), te;
                }
                next(w) {
                    super.next((this._value = w));
                }
            }
        },
        8306: (pe, z, _) => {
            'use strict';
            _.d(z, { y: () => $ });
            var f = _(930),
                P = _(727),
                j = _(8822),
                w = _(4671);
            var X = _(2416),
                ne = _(576),
                K = _(2806);
            let $ = (() => {
                class be {
                    constructor(je) {
                        je && (this._subscribe = je);
                    }
                    lift(je) {
                        const ae = new be();
                        return (ae.source = this), (ae.operator = je), ae;
                    }
                    subscribe(je, ae, Q) {
                        const me = (function Ae(be) {
                            return (
                                (be && be instanceof f.Lv) ||
                                ((function ie(be) {
                                    return (
                                        be &&
                                        (0, ne.m)(be.next) &&
                                        (0, ne.m)(be.error) &&
                                        (0, ne.m)(be.complete)
                                    );
                                })(be) &&
                                    (0, P.Nn)(be))
                            );
                        })(je)
                            ? je
                            : new f.Hp(je, ae, Q);
                        return (
                            (0, K.x)(() => {
                                const { operator: I, source: F } = this;
                                me.add(
                                    I
                                        ? I.call(me, F)
                                        : F
                                        ? this._subscribe(me)
                                        : this._trySubscribe(me)
                                );
                            }),
                            me
                        );
                    }
                    _trySubscribe(je) {
                        try {
                            return this._subscribe(je);
                        } catch (ae) {
                            je.error(ae);
                        }
                    }
                    forEach(je, ae) {
                        return new (ae = U(ae))((Q, me) => {
                            let I;
                            I = this.subscribe(
                                (F) => {
                                    try {
                                        je(F);
                                    } catch (oe) {
                                        me(oe), null == I || I.unsubscribe();
                                    }
                                },
                                me,
                                Q
                            );
                        });
                    }
                    _subscribe(je) {
                        var ae;
                        return null === (ae = this.source) || void 0 === ae
                            ? void 0
                            : ae.subscribe(je);
                    }
                    [j.L]() {
                        return this;
                    }
                    pipe(...je) {
                        return (function te(be) {
                            return 0 === be.length
                                ? w.y
                                : 1 === be.length
                                ? be[0]
                                : function (je) {
                                      return be.reduce((ae, Q) => Q(ae), je);
                                  };
                        })(je)(this);
                    }
                    toPromise(je) {
                        return new (je = U(je))((ae, Q) => {
                            let me;
                            this.subscribe(
                                (I) => (me = I),
                                (I) => Q(I),
                                () => ae(me)
                            );
                        });
                    }
                }
                return (be.create = (Re) => new be(Re)), be;
            })();
            function U(be) {
                var Re;
                return null !== (Re = null != be ? be : X.v.Promise) &&
                    void 0 !== Re
                    ? Re
                    : Promise;
            }
        },
        4707: (pe, z, _) => {
            'use strict';
            _.d(z, { t: () => j });
            var f = _(7579),
                P = _(6063);
            class j extends f.x {
                constructor(H = 1 / 0, te = 1 / 0, X = P.l) {
                    super(),
                        (this._bufferSize = H),
                        (this._windowTime = te),
                        (this._timestampProvider = X),
                        (this._buffer = []),
                        (this._infiniteTimeWindow = !0),
                        (this._infiniteTimeWindow = te === 1 / 0),
                        (this._bufferSize = Math.max(1, H)),
                        (this._windowTime = Math.max(1, te));
                }
                next(H) {
                    const {
                        isStopped: te,
                        _buffer: X,
                        _infiniteTimeWindow: ne,
                        _timestampProvider: K,
                        _windowTime: $,
                    } = this;
                    te || (X.push(H), !ne && X.push(K.now() + $)),
                        this._trimBuffer(),
                        super.next(H);
                }
                _subscribe(H) {
                    this._throwIfClosed(), this._trimBuffer();
                    const te = this._innerSubscribe(H),
                        { _infiniteTimeWindow: X, _buffer: ne } = this,
                        K = ne.slice();
                    for (let $ = 0; $ < K.length && !H.closed; $ += X ? 1 : 2)
                        H.next(K[$]);
                    return this._checkFinalizedStatuses(H), te;
                }
                _trimBuffer() {
                    const {
                            _bufferSize: H,
                            _timestampProvider: te,
                            _buffer: X,
                            _infiniteTimeWindow: ne,
                        } = this,
                        K = (ne ? 1 : 2) * H;
                    if (
                        (H < 1 / 0 && K < X.length && X.splice(0, X.length - K),
                        !ne)
                    ) {
                        const $ = te.now();
                        let U = 0;
                        for (let ie = 1; ie < X.length && X[ie] <= $; ie += 2)
                            U = ie;
                        U && X.splice(0, U + 1);
                    }
                }
            }
        },
        7579: (pe, z, _) => {
            'use strict';
            _.d(z, { x: () => X });
            var f = _(8306),
                P = _(727);
            const w = (0, _(3888).d)(
                (K) =>
                    function () {
                        K(this),
                            (this.name = 'ObjectUnsubscribedError'),
                            (this.message = 'object unsubscribed');
                    }
            );
            var H = _(8737),
                te = _(2806);
            let X = (() => {
                class K extends f.y {
                    constructor() {
                        super(),
                            (this.closed = !1),
                            (this.observers = []),
                            (this.isStopped = !1),
                            (this.hasError = !1),
                            (this.thrownError = null);
                    }
                    lift(U) {
                        const ie = new ne(this, this);
                        return (ie.operator = U), ie;
                    }
                    _throwIfClosed() {
                        if (this.closed) throw new w();
                    }
                    next(U) {
                        (0, te.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                const ie = this.observers.slice();
                                for (const Ae of ie) Ae.next(U);
                            }
                        });
                    }
                    error(U) {
                        (0, te.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                (this.hasError = this.isStopped = !0),
                                    (this.thrownError = U);
                                const { observers: ie } = this;
                                for (; ie.length; ) ie.shift().error(U);
                            }
                        });
                    }
                    complete() {
                        (0, te.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                this.isStopped = !0;
                                const { observers: U } = this;
                                for (; U.length; ) U.shift().complete();
                            }
                        });
                    }
                    unsubscribe() {
                        (this.isStopped = this.closed = !0),
                            (this.observers = null);
                    }
                    get observed() {
                        var U;
                        return (
                            (null === (U = this.observers) || void 0 === U
                                ? void 0
                                : U.length) > 0
                        );
                    }
                    _trySubscribe(U) {
                        return this._throwIfClosed(), super._trySubscribe(U);
                    }
                    _subscribe(U) {
                        return (
                            this._throwIfClosed(),
                            this._checkFinalizedStatuses(U),
                            this._innerSubscribe(U)
                        );
                    }
                    _innerSubscribe(U) {
                        const {
                            hasError: ie,
                            isStopped: Ae,
                            observers: be,
                        } = this;
                        return ie || Ae
                            ? P.Lc
                            : (be.push(U), new P.w0(() => (0, H.P)(be, U)));
                    }
                    _checkFinalizedStatuses(U) {
                        const {
                            hasError: ie,
                            thrownError: Ae,
                            isStopped: be,
                        } = this;
                        ie ? U.error(Ae) : be && U.complete();
                    }
                    asObservable() {
                        const U = new f.y();
                        return (U.source = this), U;
                    }
                }
                return (K.create = ($, U) => new ne($, U)), K;
            })();
            class ne extends X {
                constructor($, U) {
                    super(), (this.destination = $), (this.source = U);
                }
                next($) {
                    var U, ie;
                    null ===
                        (ie =
                            null === (U = this.destination) || void 0 === U
                                ? void 0
                                : U.next) ||
                        void 0 === ie ||
                        ie.call(U, $);
                }
                error($) {
                    var U, ie;
                    null ===
                        (ie =
                            null === (U = this.destination) || void 0 === U
                                ? void 0
                                : U.error) ||
                        void 0 === ie ||
                        ie.call(U, $);
                }
                complete() {
                    var $, U;
                    null ===
                        (U =
                            null === ($ = this.destination) || void 0 === $
                                ? void 0
                                : $.complete) ||
                        void 0 === U ||
                        U.call($);
                }
                _subscribe($) {
                    var U, ie;
                    return null !==
                        (ie =
                            null === (U = this.source) || void 0 === U
                                ? void 0
                                : U.subscribe($)) && void 0 !== ie
                        ? ie
                        : P.Lc;
                }
            }
        },
        930: (pe, z, _) => {
            'use strict';
            _.d(z, { Hp: () => Ae, Lv: () => ie });
            var f = _(576),
                P = _(727),
                j = _(2416),
                w = _(7849),
                H = _(5032);
            const te = K('C', void 0, void 0);
            function K(Q, me, I) {
                return { kind: Q, value: me, error: I };
            }
            var $ = _(3410),
                U = _(2806);
            class ie extends P.w0 {
                constructor(me) {
                    super(),
                        (this.isStopped = !1),
                        me
                            ? ((this.destination = me),
                              (0, P.Nn)(me) && me.add(this))
                            : (this.destination = ae);
                }
                static create(me, I, F) {
                    return new Ae(me, I, F);
                }
                next(me) {
                    this.isStopped
                        ? je(
                              (function ne(Q) {
                                  return K('N', Q, void 0);
                              })(me),
                              this
                          )
                        : this._next(me);
                }
                error(me) {
                    this.isStopped
                        ? je(
                              (function X(Q) {
                                  return K('E', void 0, Q);
                              })(me),
                              this
                          )
                        : ((this.isStopped = !0), this._error(me));
                }
                complete() {
                    this.isStopped
                        ? je(te, this)
                        : ((this.isStopped = !0), this._complete());
                }
                unsubscribe() {
                    this.closed ||
                        ((this.isStopped = !0),
                        super.unsubscribe(),
                        (this.destination = null));
                }
                _next(me) {
                    this.destination.next(me);
                }
                _error(me) {
                    try {
                        this.destination.error(me);
                    } finally {
                        this.unsubscribe();
                    }
                }
                _complete() {
                    try {
                        this.destination.complete();
                    } finally {
                        this.unsubscribe();
                    }
                }
            }
            class Ae extends ie {
                constructor(me, I, F) {
                    let oe;
                    if ((super(), (0, f.m)(me))) oe = me;
                    else if (me) {
                        let q;
                        ({ next: oe, error: I, complete: F } = me),
                            this && j.v.useDeprecatedNextContext
                                ? ((q = Object.create(me)),
                                  (q.unsubscribe = () => this.unsubscribe()))
                                : (q = me),
                            (oe = null == oe ? void 0 : oe.bind(q)),
                            (I = null == I ? void 0 : I.bind(q)),
                            (F = null == F ? void 0 : F.bind(q));
                    }
                    this.destination = {
                        next: oe ? be(oe) : H.Z,
                        error: be(null != I ? I : Re),
                        complete: F ? be(F) : H.Z,
                    };
                }
            }
            function be(Q, me) {
                return (...I) => {
                    try {
                        Q(...I);
                    } catch (F) {
                        j.v.useDeprecatedSynchronousErrorHandling
                            ? (0, U.O)(F)
                            : (0, w.h)(F);
                    }
                };
            }
            function Re(Q) {
                throw Q;
            }
            function je(Q, me) {
                const { onStoppedNotification: I } = j.v;
                I && $.z.setTimeout(() => I(Q, me));
            }
            const ae = { closed: !0, next: H.Z, error: Re, complete: H.Z };
        },
        727: (pe, z, _) => {
            'use strict';
            _.d(z, { Lc: () => te, w0: () => H, Nn: () => X });
            var f = _(576);
            const j = (0, _(3888).d)(
                (K) =>
                    function (U) {
                        K(this),
                            (this.message = U
                                ? `${
                                      U.length
                                  } errors occurred during unsubscription:\n${U.map(
                                      (ie, Ae) => `${Ae + 1}) ${ie.toString()}`
                                  ).join('\n  ')}`
                                : ''),
                            (this.name = 'UnsubscriptionError'),
                            (this.errors = U);
                    }
            );
            var w = _(8737);
            class H {
                constructor($) {
                    (this.initialTeardown = $),
                        (this.closed = !1),
                        (this._parentage = null),
                        (this._teardowns = null);
                }
                unsubscribe() {
                    let $;
                    if (!this.closed) {
                        this.closed = !0;
                        const { _parentage: U } = this;
                        if (U)
                            if (((this._parentage = null), Array.isArray(U)))
                                for (const be of U) be.remove(this);
                            else U.remove(this);
                        const { initialTeardown: ie } = this;
                        if ((0, f.m)(ie))
                            try {
                                ie();
                            } catch (be) {
                                $ = be instanceof j ? be.errors : [be];
                            }
                        const { _teardowns: Ae } = this;
                        if (Ae) {
                            this._teardowns = null;
                            for (const be of Ae)
                                try {
                                    ne(be);
                                } catch (Re) {
                                    ($ = null != $ ? $ : []),
                                        Re instanceof j
                                            ? ($ = [...$, ...Re.errors])
                                            : $.push(Re);
                                }
                        }
                        if ($) throw new j($);
                    }
                }
                add($) {
                    var U;
                    if ($ && $ !== this)
                        if (this.closed) ne($);
                        else {
                            if ($ instanceof H) {
                                if ($.closed || $._hasParent(this)) return;
                                $._addParent(this);
                            }
                            (this._teardowns =
                                null !== (U = this._teardowns) && void 0 !== U
                                    ? U
                                    : []).push($);
                        }
                }
                _hasParent($) {
                    const { _parentage: U } = this;
                    return U === $ || (Array.isArray(U) && U.includes($));
                }
                _addParent($) {
                    const { _parentage: U } = this;
                    this._parentage = Array.isArray(U)
                        ? (U.push($), U)
                        : U
                        ? [U, $]
                        : $;
                }
                _removeParent($) {
                    const { _parentage: U } = this;
                    U === $
                        ? (this._parentage = null)
                        : Array.isArray(U) && (0, w.P)(U, $);
                }
                remove($) {
                    const { _teardowns: U } = this;
                    U && (0, w.P)(U, $),
                        $ instanceof H && $._removeParent(this);
                }
            }
            H.EMPTY = (() => {
                const K = new H();
                return (K.closed = !0), K;
            })();
            const te = H.EMPTY;
            function X(K) {
                return (
                    K instanceof H ||
                    (K &&
                        'closed' in K &&
                        (0, f.m)(K.remove) &&
                        (0, f.m)(K.add) &&
                        (0, f.m)(K.unsubscribe))
                );
            }
            function ne(K) {
                (0, f.m)(K) ? K() : K.unsubscribe();
            }
        },
        2416: (pe, z, _) => {
            'use strict';
            _.d(z, { v: () => f });
            const f = {
                onUnhandledError: null,
                onStoppedNotification: null,
                Promise: void 0,
                useDeprecatedSynchronousErrorHandling: !1,
                useDeprecatedNextContext: !1,
            };
        },
        7272: (pe, z, _) => {
            'use strict';
            _.d(z, { z: () => H });
            var f = _(8189),
                j = _(7669),
                w = _(8996);
            function H(...te) {
                return (function P() {
                    return (0, f.J)(1);
                })()((0, w.D)(te, (0, j.yG)(te)));
            }
        },
        515: (pe, z, _) => {
            'use strict';
            _.d(z, { E: () => P });
            const P = new (_(8306).y)((H) => H.complete());
        },
        8996: (pe, z, _) => {
            'use strict';
            _.d(z, { D: () => oe });
            var f = _(8421),
                P = _(5363),
                j = _(9468),
                te = _(8306),
                ne = _(2202),
                K = _(576),
                $ = _(9672);
            function ie(q, Pe) {
                if (!q) throw new Error('Iterable cannot be null');
                return new te.y((Be) => {
                    (0, $.f)(Be, Pe, () => {
                        const qe = q[Symbol.asyncIterator]();
                        (0, $.f)(
                            Be,
                            Pe,
                            () => {
                                qe.next().then((re) => {
                                    re.done ? Be.complete() : Be.next(re.value);
                                });
                            },
                            0,
                            !0
                        );
                    });
                });
            }
            var Ae = _(3670),
                be = _(8239),
                Re = _(1144),
                je = _(6495),
                ae = _(2206),
                Q = _(4532),
                me = _(3260);
            function oe(q, Pe) {
                return Pe
                    ? (function F(q, Pe) {
                          if (null != q) {
                              if ((0, Ae.c)(q))
                                  return (function w(q, Pe) {
                                      return (0, f.Xf)(q).pipe(
                                          (0, j.R)(Pe),
                                          (0, P.Q)(Pe)
                                      );
                                  })(q, Pe);
                              if ((0, Re.z)(q))
                                  return (function X(q, Pe) {
                                      return new te.y((Be) => {
                                          let qe = 0;
                                          return Pe.schedule(function () {
                                              qe === q.length
                                                  ? Be.complete()
                                                  : (Be.next(q[qe++]),
                                                    Be.closed ||
                                                        this.schedule());
                                          });
                                      });
                                  })(q, Pe);
                              if ((0, be.t)(q))
                                  return (function H(q, Pe) {
                                      return (0, f.Xf)(q).pipe(
                                          (0, j.R)(Pe),
                                          (0, P.Q)(Pe)
                                      );
                                  })(q, Pe);
                              if ((0, ae.D)(q)) return ie(q, Pe);
                              if ((0, je.T)(q))
                                  return (function U(q, Pe) {
                                      return new te.y((Be) => {
                                          let qe;
                                          return (
                                              (0, $.f)(Be, Pe, () => {
                                                  (qe = q[ne.h]()),
                                                      (0, $.f)(
                                                          Be,
                                                          Pe,
                                                          () => {
                                                              let re, Se;
                                                              try {
                                                                  ({
                                                                      value: re,
                                                                      done: Se,
                                                                  } =
                                                                      qe.next());
                                                              } catch (Ee) {
                                                                  return void Be.error(
                                                                      Ee
                                                                  );
                                                              }
                                                              Se
                                                                  ? Be.complete()
                                                                  : Be.next(re);
                                                          },
                                                          0,
                                                          !0
                                                      );
                                              }),
                                              () =>
                                                  (0, K.m)(
                                                      null == qe
                                                          ? void 0
                                                          : qe.return
                                                  ) && qe.return()
                                          );
                                      });
                                  })(q, Pe);
                              if ((0, me.L)(q))
                                  return (function I(q, Pe) {
                                      return ie((0, me.Q)(q), Pe);
                                  })(q, Pe);
                          }
                          throw (0, Q.z)(q);
                      })(q, Pe)
                    : (0, f.Xf)(q);
            }
        },
        8421: (pe, z, _) => {
            'use strict';
            _.d(z, { Xf: () => Ae });
            var f = _(5987),
                P = _(1144),
                j = _(8239),
                w = _(8306),
                H = _(3670),
                te = _(2206),
                X = _(4532),
                ne = _(6495),
                K = _(3260),
                $ = _(576),
                U = _(7849),
                ie = _(8822);
            function Ae(F) {
                if (F instanceof w.y) return F;
                if (null != F) {
                    if ((0, H.c)(F))
                        return (function be(F) {
                            return new w.y((oe) => {
                                const q = F[ie.L]();
                                if ((0, $.m)(q.subscribe))
                                    return q.subscribe(oe);
                                throw new TypeError(
                                    'Provided object does not correctly implement Symbol.observable'
                                );
                            });
                        })(F);
                    if ((0, P.z)(F))
                        return (function Re(F) {
                            return new w.y((oe) => {
                                for (let q = 0; q < F.length && !oe.closed; q++)
                                    oe.next(F[q]);
                                oe.complete();
                            });
                        })(F);
                    if ((0, j.t)(F))
                        return (function je(F) {
                            return new w.y((oe) => {
                                F.then(
                                    (q) => {
                                        oe.closed ||
                                            (oe.next(q), oe.complete());
                                    },
                                    (q) => oe.error(q)
                                ).then(null, U.h);
                            });
                        })(F);
                    if ((0, te.D)(F)) return Q(F);
                    if ((0, ne.T)(F))
                        return (function ae(F) {
                            return new w.y((oe) => {
                                for (const q of F)
                                    if ((oe.next(q), oe.closed)) return;
                                oe.complete();
                            });
                        })(F);
                    if ((0, K.L)(F))
                        return (function me(F) {
                            return Q((0, K.Q)(F));
                        })(F);
                }
                throw (0, X.z)(F);
            }
            function Q(F) {
                return new w.y((oe) => {
                    (function I(F, oe) {
                        var q, Pe, Be, qe;
                        return (0, f.mG)(this, void 0, void 0, function* () {
                            try {
                                for (
                                    q = (0, f.KL)(F);
                                    !(Pe = yield q.next()).done;

                                )
                                    if ((oe.next(Pe.value), oe.closed)) return;
                            } catch (re) {
                                Be = { error: re };
                            } finally {
                                try {
                                    Pe &&
                                        !Pe.done &&
                                        (qe = q.return) &&
                                        (yield qe.call(q));
                                } finally {
                                    if (Be) throw Be.error;
                                }
                            }
                            oe.complete();
                        });
                    })(F, oe).catch((q) => oe.error(q));
                });
            }
        },
        6451: (pe, z, _) => {
            'use strict';
            _.d(z, { T: () => te });
            var f = _(8189),
                P = _(8421),
                j = _(515),
                w = _(7669),
                H = _(8996);
            function te(...X) {
                const ne = (0, w.yG)(X),
                    K = (0, w._6)(X, 1 / 0),
                    $ = X;
                return $.length
                    ? 1 === $.length
                        ? (0, P.Xf)($[0])
                        : (0, f.J)(K)((0, H.D)($, ne))
                    : j.E;
            }
        },
        9646: (pe, z, _) => {
            'use strict';
            _.d(z, { of: () => j });
            var f = _(7669),
                P = _(8996);
            function j(...w) {
                const H = (0, f.yG)(w);
                return (0, P.D)(w, H);
            }
        },
        5403: (pe, z, _) => {
            'use strict';
            _.d(z, { Q: () => P });
            var f = _(930);
            class P extends f.Lv {
                constructor(w, H, te, X, ne) {
                    super(w),
                        (this.onFinalize = ne),
                        (this._next = H
                            ? function (K) {
                                  try {
                                      H(K);
                                  } catch ($) {
                                      w.error($);
                                  }
                              }
                            : super._next),
                        (this._error = X
                            ? function (K) {
                                  try {
                                      X(K);
                                  } catch ($) {
                                      w.error($);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._error),
                        (this._complete = te
                            ? function () {
                                  try {
                                      te();
                                  } catch (K) {
                                      w.error(K);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._complete);
                }
                unsubscribe() {
                    var w;
                    const { closed: H } = this;
                    super.unsubscribe(),
                        !H &&
                            (null === (w = this.onFinalize) ||
                                void 0 === w ||
                                w.call(this));
                }
            }
        },
        262: (pe, z, _) => {
            'use strict';
            _.d(z, { K: () => w });
            var f = _(8421),
                P = _(5403),
                j = _(4482);
            function w(H) {
                return (0, j.e)((te, X) => {
                    let $,
                        ne = null,
                        K = !1;
                    (ne = te.subscribe(
                        new P.Q(X, void 0, void 0, (U) => {
                            ($ = (0, f.Xf)(H(U, w(H)(te)))),
                                ne
                                    ? (ne.unsubscribe(),
                                      (ne = null),
                                      $.subscribe(X))
                                    : (K = !0);
                        })
                    )),
                        K && (ne.unsubscribe(), (ne = null), $.subscribe(X));
                });
            }
        },
        4351: (pe, z, _) => {
            'use strict';
            _.d(z, { b: () => j });
            var f = _(5577),
                P = _(576);
            function j(w, H) {
                return (0, P.m)(H) ? (0, f.z)(w, H, 1) : (0, f.z)(w, 1);
            }
        },
        8372: (pe, z, _) => {
            'use strict';
            _.d(z, { b: () => w });
            var f = _(4986),
                P = _(4482),
                j = _(5403);
            function w(H, te = f.z) {
                return (0, P.e)((X, ne) => {
                    let K = null,
                        $ = null,
                        U = null;
                    const ie = () => {
                        if (K) {
                            K.unsubscribe(), (K = null);
                            const be = $;
                            ($ = null), ne.next(be);
                        }
                    };
                    function Ae() {
                        const be = U + H,
                            Re = te.now();
                        if (Re < be)
                            return (
                                (K = this.schedule(void 0, be - Re)),
                                void ne.add(K)
                            );
                        ie();
                    }
                    X.subscribe(
                        new j.Q(
                            ne,
                            (be) => {
                                ($ = be),
                                    (U = te.now()),
                                    K || ((K = te.schedule(Ae, H)), ne.add(K));
                            },
                            () => {
                                ie(), ne.complete();
                            },
                            void 0,
                            () => {
                                $ = K = null;
                            }
                        )
                    );
                });
            }
        },
        6590: (pe, z, _) => {
            'use strict';
            _.d(z, { d: () => j });
            var f = _(4482),
                P = _(5403);
            function j(w) {
                return (0, f.e)((H, te) => {
                    let X = !1;
                    H.subscribe(
                        new P.Q(
                            te,
                            (ne) => {
                                (X = !0), te.next(ne);
                            },
                            () => {
                                X || te.next(w), te.complete();
                            }
                        )
                    );
                });
            }
        },
        9300: (pe, z, _) => {
            'use strict';
            _.d(z, { h: () => j });
            var f = _(4482),
                P = _(5403);
            function j(w, H) {
                return (0, f.e)((te, X) => {
                    let ne = 0;
                    te.subscribe(
                        new P.Q(X, (K) => w.call(H, K, ne++) && X.next(K))
                    );
                });
            }
        },
        590: (pe, z, _) => {
            'use strict';
            _.d(z, { P: () => X });
            var f = _(6805),
                P = _(9300),
                j = _(5698),
                w = _(6590),
                H = _(8068),
                te = _(4671);
            function X(ne, K) {
                const $ = arguments.length >= 2;
                return (U) =>
                    U.pipe(
                        ne ? (0, P.h)((ie, Ae) => ne(ie, Ae, U)) : te.y,
                        (0, j.q)(1),
                        $ ? (0, w.d)(K) : (0, H.T)(() => new f.K())
                    );
            }
        },
        4004: (pe, z, _) => {
            'use strict';
            _.d(z, { U: () => j });
            var f = _(4482),
                P = _(5403);
            function j(w, H) {
                return (0, f.e)((te, X) => {
                    let ne = 0;
                    te.subscribe(
                        new P.Q(X, (K) => {
                            X.next(w.call(H, K, ne++));
                        })
                    );
                });
            }
        },
        8189: (pe, z, _) => {
            'use strict';
            _.d(z, { J: () => j });
            var f = _(5577),
                P = _(4671);
            function j(w = 1 / 0) {
                return (0, f.z)(P.y, w);
            }
        },
        5577: (pe, z, _) => {
            'use strict';
            _.d(z, { z: () => ne });
            var f = _(4004),
                P = _(8421),
                j = _(4482),
                w = _(9672),
                H = _(5403),
                X = _(576);
            function ne(K, $, U = 1 / 0) {
                return (0, X.m)($)
                    ? ne(
                          (ie, Ae) =>
                              (0, f.U)((be, Re) => $(ie, be, Ae, Re))(
                                  (0, P.Xf)(K(ie, Ae))
                              ),
                          U
                      )
                    : ('number' == typeof $ && (U = $),
                      (0, j.e)((ie, Ae) =>
                          (function te(K, $, U, ie, Ae, be, Re, je) {
                              const ae = [];
                              let Q = 0,
                                  me = 0,
                                  I = !1;
                              const F = () => {
                                      I && !ae.length && !Q && $.complete();
                                  },
                                  oe = (Pe) => (Q < ie ? q(Pe) : ae.push(Pe)),
                                  q = (Pe) => {
                                      be && $.next(Pe), Q++;
                                      let Be = !1;
                                      (0, P.Xf)(U(Pe, me++)).subscribe(
                                          new H.Q(
                                              $,
                                              (qe) => {
                                                  null == Ae || Ae(qe),
                                                      be ? oe(qe) : $.next(qe);
                                              },
                                              () => {
                                                  Be = !0;
                                              },
                                              void 0,
                                              () => {
                                                  if (Be)
                                                      try {
                                                          for (
                                                              Q--;
                                                              ae.length &&
                                                              Q < ie;

                                                          ) {
                                                              const qe =
                                                                  ae.shift();
                                                              Re
                                                                  ? (0, w.f)(
                                                                        $,
                                                                        Re,
                                                                        () =>
                                                                            q(
                                                                                qe
                                                                            )
                                                                    )
                                                                  : q(qe);
                                                          }
                                                          F();
                                                      } catch (qe) {
                                                          $.error(qe);
                                                      }
                                              }
                                          )
                                      );
                                  };
                              return (
                                  K.subscribe(
                                      new H.Q($, oe, () => {
                                          (I = !0), F();
                                      })
                                  ),
                                  () => {
                                      null == je || je();
                                  }
                              );
                          })(ie, Ae, K, U)
                      ));
            }
        },
        5363: (pe, z, _) => {
            'use strict';
            _.d(z, { Q: () => w });
            var f = _(9672),
                P = _(4482),
                j = _(5403);
            function w(H, te = 0) {
                return (0, P.e)((X, ne) => {
                    X.subscribe(
                        new j.Q(
                            ne,
                            (K) => (0, f.f)(ne, H, () => ne.next(K), te),
                            () => (0, f.f)(ne, H, () => ne.complete(), te),
                            (K) => (0, f.f)(ne, H, () => ne.error(K), te)
                        )
                    );
                });
            }
        },
        5026: (pe, z, _) => {
            'use strict';
            _.d(z, { R: () => w });
            var f = _(4482),
                P = _(5403);
            function j(H, te, X, ne, K) {
                return ($, U) => {
                    let ie = X,
                        Ae = te,
                        be = 0;
                    $.subscribe(
                        new P.Q(
                            U,
                            (Re) => {
                                const je = be++;
                                (Ae = ie ? H(Ae, Re, je) : ((ie = !0), Re)),
                                    ne && U.next(Ae);
                            },
                            K &&
                                (() => {
                                    ie && U.next(Ae), U.complete();
                                })
                        )
                    );
                };
            }
            function w(H, te) {
                return (0, f.e)(j(H, te, arguments.length >= 2, !0));
            }
        },
        3099: (pe, z, _) => {
            'use strict';
            _.d(z, { B: () => te });
            var f = _(8996),
                P = _(5698),
                j = _(7579),
                w = _(930),
                H = _(4482);
            function te(ne = {}) {
                const {
                    connector: K = () => new j.x(),
                    resetOnError: $ = !0,
                    resetOnComplete: U = !0,
                    resetOnRefCountZero: ie = !0,
                } = ne;
                return (Ae) => {
                    let be = null,
                        Re = null,
                        je = null,
                        ae = 0,
                        Q = !1,
                        me = !1;
                    const I = () => {
                            null == Re || Re.unsubscribe(), (Re = null);
                        },
                        F = () => {
                            I(), (be = je = null), (Q = me = !1);
                        },
                        oe = () => {
                            const q = be;
                            F(), null == q || q.unsubscribe();
                        };
                    return (0, H.e)((q, Pe) => {
                        ae++, !me && !Q && I();
                        const Be = (je = null != je ? je : K());
                        Pe.add(() => {
                            ae--, 0 === ae && !me && !Q && (Re = X(oe, ie));
                        }),
                            Be.subscribe(Pe),
                            be ||
                                ((be = new w.Hp({
                                    next: (qe) => Be.next(qe),
                                    error: (qe) => {
                                        (me = !0),
                                            I(),
                                            (Re = X(F, $, qe)),
                                            Be.error(qe);
                                    },
                                    complete: () => {
                                        (Q = !0),
                                            I(),
                                            (Re = X(F, U)),
                                            Be.complete();
                                    },
                                })),
                                (0, f.D)(q).subscribe(be));
                    })(Ae);
                };
            }
            function X(ne, K, ...$) {
                return !0 === K
                    ? (ne(), null)
                    : !1 === K
                    ? null
                    : K(...$)
                          .pipe((0, P.q)(1))
                          .subscribe(() => ne());
            }
        },
        4782: (pe, z, _) => {
            'use strict';
            _.d(z, { d: () => j });
            var f = _(4707),
                P = _(3099);
            function j(w, H, te) {
                var X, ne;
                let K,
                    $ = !1;
                return (
                    w && 'object' == typeof w
                        ? ((K =
                              null !== (X = w.bufferSize) && void 0 !== X
                                  ? X
                                  : 1 / 0),
                          (H =
                              null !== (ne = w.windowTime) && void 0 !== ne
                                  ? ne
                                  : 1 / 0),
                          ($ = !!w.refCount),
                          (te = w.scheduler))
                        : (K = null != w ? w : 1 / 0),
                    (0, P.B)({
                        connector: () => new f.t(K, H, te),
                        resetOnError: !0,
                        resetOnComplete: !1,
                        resetOnRefCountZero: $,
                    })
                );
            }
        },
        5684: (pe, z, _) => {
            'use strict';
            _.d(z, { T: () => P });
            var f = _(9300);
            function P(j) {
                return (0, f.h)((w, H) => j <= H);
            }
        },
        8675: (pe, z, _) => {
            'use strict';
            _.d(z, { O: () => w });
            var f = _(7272),
                P = _(7669),
                j = _(4482);
            function w(...H) {
                const te = (0, P.yG)(H);
                return (0, j.e)((X, ne) => {
                    (te ? (0, f.z)(H, X, te) : (0, f.z)(H, X)).subscribe(ne);
                });
            }
        },
        9468: (pe, z, _) => {
            'use strict';
            _.d(z, { R: () => P });
            var f = _(4482);
            function P(j, w = 0) {
                return (0, f.e)((H, te) => {
                    te.add(j.schedule(() => H.subscribe(te), w));
                });
            }
        },
        3900: (pe, z, _) => {
            'use strict';
            _.d(z, { w: () => w });
            var f = _(8421),
                P = _(4482),
                j = _(5403);
            function w(H, te) {
                return (0, P.e)((X, ne) => {
                    let K = null,
                        $ = 0,
                        U = !1;
                    const ie = () => U && !K && ne.complete();
                    X.subscribe(
                        new j.Q(
                            ne,
                            (Ae) => {
                                null == K || K.unsubscribe();
                                let be = 0;
                                const Re = $++;
                                (0, f.Xf)(H(Ae, Re)).subscribe(
                                    (K = new j.Q(
                                        ne,
                                        (je) =>
                                            ne.next(
                                                te ? te(Ae, je, Re, be++) : je
                                            ),
                                        () => {
                                            (K = null), ie();
                                        }
                                    ))
                                );
                            },
                            () => {
                                (U = !0), ie();
                            }
                        )
                    );
                });
            }
        },
        5698: (pe, z, _) => {
            'use strict';
            _.d(z, { q: () => w });
            var f = _(515),
                P = _(4482),
                j = _(5403);
            function w(H) {
                return H <= 0
                    ? () => f.E
                    : (0, P.e)((te, X) => {
                          let ne = 0;
                          te.subscribe(
                              new j.Q(X, (K) => {
                                  ++ne <= H &&
                                      (X.next(K), H <= ne && X.complete());
                              })
                          );
                      });
            }
        },
        2722: (pe, z, _) => {
            'use strict';
            _.d(z, { R: () => H });
            var f = _(4482),
                P = _(5403),
                j = _(8421),
                w = _(5032);
            function H(te) {
                return (0, f.e)((X, ne) => {
                    (0, j.Xf)(te).subscribe(
                        new P.Q(ne, () => ne.complete(), w.Z)
                    ),
                        !ne.closed && X.subscribe(ne);
                });
            }
        },
        8505: (pe, z, _) => {
            'use strict';
            _.d(z, { b: () => H });
            var f = _(576),
                P = _(4482),
                j = _(5403),
                w = _(4671);
            function H(te, X, ne) {
                const K =
                    (0, f.m)(te) || X || ne
                        ? { next: te, error: X, complete: ne }
                        : te;
                return K
                    ? (0, P.e)(($, U) => {
                          var ie;
                          null === (ie = K.subscribe) ||
                              void 0 === ie ||
                              ie.call(K);
                          let Ae = !0;
                          $.subscribe(
                              new j.Q(
                                  U,
                                  (be) => {
                                      var Re;
                                      null === (Re = K.next) ||
                                          void 0 === Re ||
                                          Re.call(K, be),
                                          U.next(be);
                                  },
                                  () => {
                                      var be;
                                      (Ae = !1),
                                          null === (be = K.complete) ||
                                              void 0 === be ||
                                              be.call(K),
                                          U.complete();
                                  },
                                  (be) => {
                                      var Re;
                                      (Ae = !1),
                                          null === (Re = K.error) ||
                                              void 0 === Re ||
                                              Re.call(K, be),
                                          U.error(be);
                                  },
                                  () => {
                                      var be, Re;
                                      Ae &&
                                          (null === (be = K.unsubscribe) ||
                                              void 0 === be ||
                                              be.call(K)),
                                          null === (Re = K.finalize) ||
                                              void 0 === Re ||
                                              Re.call(K);
                                  }
                              )
                          );
                      })
                    : w.y;
            }
        },
        8068: (pe, z, _) => {
            'use strict';
            _.d(z, { T: () => w });
            var f = _(6805),
                P = _(4482),
                j = _(5403);
            function w(te = H) {
                return (0, P.e)((X, ne) => {
                    let K = !1;
                    X.subscribe(
                        new j.Q(
                            ne,
                            ($) => {
                                (K = !0), ne.next($);
                            },
                            () => (K ? ne.complete() : ne.error(te()))
                        )
                    );
                });
            }
            function H() {
                return new f.K();
            }
        },
        1749: (pe, z, _) => {
            'use strict';
            _.d(z, { V: () => K });
            var f = _(4986),
                j = _(4482),
                w = _(8421),
                H = _(3888),
                te = _(5403),
                X = _(9672);
            const ne = (0, H.d)(
                (U) =>
                    function (Ae = null) {
                        U(this),
                            (this.message = 'Timeout has occurred'),
                            (this.name = 'TimeoutError'),
                            (this.info = Ae);
                    }
            );
            function K(U, ie) {
                const {
                    first: Ae,
                    each: be,
                    with: Re = $,
                    scheduler: je = null != ie ? ie : f.z,
                    meta: ae = null,
                } = (function P(U) {
                    return U instanceof Date && !isNaN(U);
                })(U)
                    ? { first: U }
                    : 'number' == typeof U
                    ? { each: U }
                    : U;
                if (null == Ae && null == be)
                    throw new TypeError('No timeout provided.');
                return (0, j.e)((Q, me) => {
                    let I,
                        F,
                        oe = null,
                        q = 0;
                    const Pe = (Be) => {
                        F = (0, X.f)(
                            me,
                            je,
                            () => {
                                try {
                                    I.unsubscribe(),
                                        (0, w.Xf)(
                                            Re({
                                                meta: ae,
                                                lastValue: oe,
                                                seen: q,
                                            })
                                        ).subscribe(me);
                                } catch (qe) {
                                    me.error(qe);
                                }
                            },
                            Be
                        );
                    };
                    (I = Q.subscribe(
                        new te.Q(
                            me,
                            (Be) => {
                                null == F || F.unsubscribe(),
                                    q++,
                                    me.next((oe = Be)),
                                    be > 0 && Pe(be);
                            },
                            void 0,
                            void 0,
                            () => {
                                (null == F ? void 0 : F.closed) ||
                                    null == F ||
                                    F.unsubscribe(),
                                    (oe = null);
                            }
                        )
                    )),
                        Pe(
                            null != Ae
                                ? 'number' == typeof Ae
                                    ? Ae
                                    : +Ae - je.now()
                                : be
                        );
                });
            }
            function $(U) {
                throw new ne(U);
            }
        },
        1365: (pe, z, _) => {
            'use strict';
            _.d(z, { M: () => X });
            var f = _(4482),
                P = _(5403),
                j = _(8421),
                w = _(4671),
                H = _(5032),
                te = _(7669);
            function X(...ne) {
                const K = (0, te.jO)(ne);
                return (0, f.e)(($, U) => {
                    const ie = ne.length,
                        Ae = new Array(ie);
                    let be = ne.map(() => !1),
                        Re = !1;
                    for (let je = 0; je < ie; je++)
                        (0, j.Xf)(ne[je]).subscribe(
                            new P.Q(
                                U,
                                (ae) => {
                                    (Ae[je] = ae),
                                        !Re &&
                                            !be[je] &&
                                            ((be[je] = !0),
                                            (Re = be.every(w.y)) &&
                                                (be = null));
                                },
                                H.Z
                            )
                        );
                    $.subscribe(
                        new P.Q(U, (je) => {
                            if (Re) {
                                const ae = [je, ...Ae];
                                U.next(K ? K(...ae) : ae);
                            }
                        })
                    );
                });
            }
        },
        4408: (pe, z, _) => {
            'use strict';
            _.d(z, { o: () => H });
            var f = _(727);
            class P extends f.w0 {
                constructor(X, ne) {
                    super();
                }
                schedule(X, ne = 0) {
                    return this;
                }
            }
            const j = {
                setInterval(...te) {
                    const { delegate: X } = j;
                    return (
                        (null == X ? void 0 : X.setInterval) || setInterval
                    )(...te);
                },
                clearInterval(te) {
                    const { delegate: X } = j;
                    return (
                        (null == X ? void 0 : X.clearInterval) || clearInterval
                    )(te);
                },
                delegate: void 0,
            };
            var w = _(8737);
            class H extends P {
                constructor(X, ne) {
                    super(X, ne),
                        (this.scheduler = X),
                        (this.work = ne),
                        (this.pending = !1);
                }
                schedule(X, ne = 0) {
                    if (this.closed) return this;
                    this.state = X;
                    const K = this.id,
                        $ = this.scheduler;
                    return (
                        null != K && (this.id = this.recycleAsyncId($, K, ne)),
                        (this.pending = !0),
                        (this.delay = ne),
                        (this.id =
                            this.id || this.requestAsyncId($, this.id, ne)),
                        this
                    );
                }
                requestAsyncId(X, ne, K = 0) {
                    return j.setInterval(X.flush.bind(X, this), K);
                }
                recycleAsyncId(X, ne, K = 0) {
                    if (null != K && this.delay === K && !1 === this.pending)
                        return ne;
                    j.clearInterval(ne);
                }
                execute(X, ne) {
                    if (this.closed)
                        return new Error('executing a cancelled action');
                    this.pending = !1;
                    const K = this._execute(X, ne);
                    if (K) return K;
                    !1 === this.pending &&
                        null != this.id &&
                        (this.id = this.recycleAsyncId(
                            this.scheduler,
                            this.id,
                            null
                        ));
                }
                _execute(X, ne) {
                    let $,
                        K = !1;
                    try {
                        this.work(X);
                    } catch (U) {
                        (K = !0),
                            ($ =
                                U ||
                                new Error(
                                    'Scheduled action threw falsy error'
                                ));
                    }
                    if (K) return this.unsubscribe(), $;
                }
                unsubscribe() {
                    if (!this.closed) {
                        const { id: X, scheduler: ne } = this,
                            { actions: K } = ne;
                        (this.work = this.state = this.scheduler = null),
                            (this.pending = !1),
                            (0, w.P)(K, this),
                            null != X &&
                                (this.id = this.recycleAsyncId(ne, X, null)),
                            (this.delay = null),
                            super.unsubscribe();
                    }
                }
            }
        },
        7565: (pe, z, _) => {
            'use strict';
            _.d(z, { v: () => j });
            var f = _(6063);
            class P {
                constructor(H, te = P.now) {
                    (this.schedulerActionCtor = H), (this.now = te);
                }
                schedule(H, te = 0, X) {
                    return new this.schedulerActionCtor(this, H).schedule(
                        X,
                        te
                    );
                }
            }
            P.now = f.l.now;
            class j extends P {
                constructor(H, te = P.now) {
                    super(H, te),
                        (this.actions = []),
                        (this._active = !1),
                        (this._scheduled = void 0);
                }
                flush(H) {
                    const { actions: te } = this;
                    if (this._active) return void te.push(H);
                    let X;
                    this._active = !0;
                    do {
                        if ((X = H.execute(H.state, H.delay))) break;
                    } while ((H = te.shift()));
                    if (((this._active = !1), X)) {
                        for (; (H = te.shift()); ) H.unsubscribe();
                        throw X;
                    }
                }
            }
        },
        4986: (pe, z, _) => {
            'use strict';
            _.d(z, { z: () => j });
            var f = _(4408);
            const j = new (_(7565).v)(f.o);
        },
        6063: (pe, z, _) => {
            'use strict';
            _.d(z, { l: () => f });
            const f = {
                now: () => (f.delegate || Date).now(),
                delegate: void 0,
            };
        },
        233: (pe, z, _) => {
            'use strict';
            _.d(z, { N: () => H });
            var f = _(4408),
                j = _(7565);
            const H = new (class w extends j.v {})(
                class P extends f.o {
                    constructor(ne, K) {
                        super(ne, K), (this.scheduler = ne), (this.work = K);
                    }
                    schedule(ne, K = 0) {
                        return K > 0
                            ? super.schedule(ne, K)
                            : ((this.delay = K),
                              (this.state = ne),
                              this.scheduler.flush(this),
                              this);
                    }
                    execute(ne, K) {
                        return K > 0 || this.closed
                            ? super.execute(ne, K)
                            : this._execute(ne, K);
                    }
                    requestAsyncId(ne, K, $ = 0) {
                        return (null != $ && $ > 0) ||
                            (null == $ && this.delay > 0)
                            ? super.requestAsyncId(ne, K, $)
                            : ne.flush(this);
                    }
                }
            );
        },
        3410: (pe, z, _) => {
            'use strict';
            _.d(z, { z: () => f });
            const f = {
                setTimeout(...P) {
                    const { delegate: j } = f;
                    return ((null == j ? void 0 : j.setTimeout) || setTimeout)(
                        ...P
                    );
                },
                clearTimeout(P) {
                    const { delegate: j } = f;
                    return (
                        (null == j ? void 0 : j.clearTimeout) || clearTimeout
                    )(P);
                },
                delegate: void 0,
            };
        },
        2202: (pe, z, _) => {
            'use strict';
            _.d(z, { h: () => P });
            const P = (function f() {
                return 'function' == typeof Symbol && Symbol.iterator
                    ? Symbol.iterator
                    : '@@iterator';
            })();
        },
        8822: (pe, z, _) => {
            'use strict';
            _.d(z, { L: () => f });
            const f =
                ('function' == typeof Symbol && Symbol.observable) ||
                '@@observable';
        },
        6805: (pe, z, _) => {
            'use strict';
            _.d(z, { K: () => P });
            const P = (0, _(3888).d)(
                (j) =>
                    function () {
                        j(this),
                            (this.name = 'EmptyError'),
                            (this.message = 'no elements in sequence');
                    }
            );
        },
        7669: (pe, z, _) => {
            'use strict';
            _.d(z, { _6: () => te, jO: () => w, yG: () => H });
            var f = _(576);
            function j(X) {
                return X[X.length - 1];
            }
            function w(X) {
                return (0, f.m)(j(X)) ? X.pop() : void 0;
            }
            function H(X) {
                return (function P(X) {
                    return X && (0, f.m)(X.schedule);
                })(j(X))
                    ? X.pop()
                    : void 0;
            }
            function te(X, ne) {
                return 'number' == typeof j(X) ? X.pop() : ne;
            }
        },
        4742: (pe, z, _) => {
            'use strict';
            _.d(z, { D: () => H });
            const { isArray: f } = Array,
                { getPrototypeOf: P, prototype: j, keys: w } = Object;
            function H(X) {
                if (1 === X.length) {
                    const ne = X[0];
                    if (f(ne)) return { args: ne, keys: null };
                    if (
                        (function te(X) {
                            return X && 'object' == typeof X && P(X) === j;
                        })(ne)
                    ) {
                        const K = w(ne);
                        return { args: K.map(($) => ne[$]), keys: K };
                    }
                }
                return { args: X, keys: null };
            }
        },
        8737: (pe, z, _) => {
            'use strict';
            function f(P, j) {
                if (P) {
                    const w = P.indexOf(j);
                    0 <= w && P.splice(w, 1);
                }
            }
            _.d(z, { P: () => f });
        },
        3888: (pe, z, _) => {
            'use strict';
            function f(P) {
                const w = P((H) => {
                    Error.call(H), (H.stack = new Error().stack);
                });
                return (
                    (w.prototype = Object.create(Error.prototype)),
                    (w.prototype.constructor = w),
                    w
                );
            }
            _.d(z, { d: () => f });
        },
        1810: (pe, z, _) => {
            'use strict';
            function f(P, j) {
                return P.reduce((w, H, te) => ((w[H] = j[te]), w), {});
            }
            _.d(z, { n: () => f });
        },
        2806: (pe, z, _) => {
            'use strict';
            _.d(z, { x: () => j, O: () => w });
            var f = _(2416);
            let P = null;
            function j(H) {
                if (f.v.useDeprecatedSynchronousErrorHandling) {
                    const te = !P;
                    if (
                        (te && (P = { errorThrown: !1, error: null }), H(), te)
                    ) {
                        const { errorThrown: X, error: ne } = P;
                        if (((P = null), X)) throw ne;
                    }
                } else H();
            }
            function w(H) {
                f.v.useDeprecatedSynchronousErrorHandling &&
                    P &&
                    ((P.errorThrown = !0), (P.error = H));
            }
        },
        9672: (pe, z, _) => {
            'use strict';
            function f(P, j, w, H = 0, te = !1) {
                const X = j.schedule(function () {
                    w(),
                        te ? P.add(this.schedule(null, H)) : this.unsubscribe();
                }, H);
                if ((P.add(X), !te)) return X;
            }
            _.d(z, { f: () => f });
        },
        4671: (pe, z, _) => {
            'use strict';
            function f(P) {
                return P;
            }
            _.d(z, { y: () => f });
        },
        1144: (pe, z, _) => {
            'use strict';
            _.d(z, { z: () => f });
            const f = (P) =>
                P && 'number' == typeof P.length && 'function' != typeof P;
        },
        2206: (pe, z, _) => {
            'use strict';
            _.d(z, { D: () => P });
            var f = _(576);
            function P(j) {
                return (
                    Symbol.asyncIterator &&
                    (0, f.m)(null == j ? void 0 : j[Symbol.asyncIterator])
                );
            }
        },
        576: (pe, z, _) => {
            'use strict';
            function f(P) {
                return 'function' == typeof P;
            }
            _.d(z, { m: () => f });
        },
        3670: (pe, z, _) => {
            'use strict';
            _.d(z, { c: () => j });
            var f = _(8822),
                P = _(576);
            function j(w) {
                return (0, P.m)(w[f.L]);
            }
        },
        6495: (pe, z, _) => {
            'use strict';
            _.d(z, { T: () => j });
            var f = _(2202),
                P = _(576);
            function j(w) {
                return (0, P.m)(null == w ? void 0 : w[f.h]);
            }
        },
        8239: (pe, z, _) => {
            'use strict';
            _.d(z, { t: () => P });
            var f = _(576);
            function P(j) {
                return (0, f.m)(null == j ? void 0 : j.then);
            }
        },
        3260: (pe, z, _) => {
            'use strict';
            _.d(z, { Q: () => j, L: () => w });
            var f = _(5987),
                P = _(576);
            function j(H) {
                return (0, f.FC)(this, arguments, function* () {
                    const X = H.getReader();
                    try {
                        for (;;) {
                            const { value: ne, done: K } = yield (0, f.qq)(
                                X.read()
                            );
                            if (K) return yield (0, f.qq)(void 0);
                            yield yield (0, f.qq)(ne);
                        }
                    } finally {
                        X.releaseLock();
                    }
                });
            }
            function w(H) {
                return (0, P.m)(null == H ? void 0 : H.getReader);
            }
        },
        4482: (pe, z, _) => {
            'use strict';
            _.d(z, { A: () => P, e: () => j });
            var f = _(576);
            function P(w) {
                return (0, f.m)(null == w ? void 0 : w.lift);
            }
            function j(w) {
                return (H) => {
                    if (P(H))
                        return H.lift(function (te) {
                            try {
                                return w(te, this);
                            } catch (X) {
                                this.error(X);
                            }
                        });
                    throw new TypeError(
                        'Unable to lift unknown Observable type'
                    );
                };
            }
        },
        3268: (pe, z, _) => {
            'use strict';
            _.d(z, { Z: () => w });
            var f = _(4004);
            const { isArray: P } = Array;
            function w(H) {
                return (0, f.U)((te) =>
                    (function j(H, te) {
                        return P(te) ? H(...te) : H(te);
                    })(H, te)
                );
            }
        },
        5032: (pe, z, _) => {
            'use strict';
            function f() {}
            _.d(z, { Z: () => f });
        },
        7849: (pe, z, _) => {
            'use strict';
            _.d(z, { h: () => j });
            var f = _(2416),
                P = _(3410);
            function j(w) {
                P.z.setTimeout(() => {
                    const { onUnhandledError: H } = f.v;
                    if (!H) throw w;
                    H(w);
                });
            }
        },
        4532: (pe, z, _) => {
            'use strict';
            function f(P) {
                return new TypeError(
                    `You provided ${
                        null !== P && 'object' == typeof P
                            ? 'an invalid object'
                            : `'${P}'`
                    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
                );
            }
            _.d(z, { z: () => f });
        },
        5987: (pe, z, _) => {
            'use strict';
            function ne(re, Se, Ee, Oe) {
                return new (Ee || (Ee = Promise))(function (De, ut) {
                    function Bt(st) {
                        try {
                            ot(Oe.next(st));
                        } catch (un) {
                            ut(un);
                        }
                    }
                    function gn(st) {
                        try {
                            ot(Oe.throw(st));
                        } catch (un) {
                            ut(un);
                        }
                    }
                    function ot(st) {
                        st.done
                            ? De(st.value)
                            : (function Ne(De) {
                                  return De instanceof Ee
                                      ? De
                                      : new Ee(function (ut) {
                                            ut(De);
                                        });
                              })(st.value).then(Bt, gn);
                    }
                    ot((Oe = Oe.apply(re, Se || [])).next());
                });
            }
            function ae(re) {
                return this instanceof ae ? ((this.v = re), this) : new ae(re);
            }
            function Q(re, Se, Ee) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var Ne,
                    Oe = Ee.apply(re, Se || []),
                    De = [];
                return (
                    (Ne = {}),
                    ut('next'),
                    ut('throw'),
                    ut('return'),
                    (Ne[Symbol.asyncIterator] = function () {
                        return this;
                    }),
                    Ne
                );
                function ut(Ft) {
                    Oe[Ft] &&
                        (Ne[Ft] = function (Ht) {
                            return new Promise(function (ct, Rn) {
                                De.push([Ft, Ht, ct, Rn]) > 1 || Bt(Ft, Ht);
                            });
                        });
                }
                function Bt(Ft, Ht) {
                    try {
                        !(function gn(Ft) {
                            Ft.value instanceof ae
                                ? Promise.resolve(Ft.value.v).then(ot, st)
                                : un(De[0][2], Ft);
                        })(Oe[Ft](Ht));
                    } catch (ct) {
                        un(De[0][3], ct);
                    }
                }
                function ot(Ft) {
                    Bt('next', Ft);
                }
                function st(Ft) {
                    Bt('throw', Ft);
                }
                function un(Ft, Ht) {
                    Ft(Ht), De.shift(), De.length && Bt(De[0][0], De[0][1]);
                }
            }
            function I(re) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var Ee,
                    Se = re[Symbol.asyncIterator];
                return Se
                    ? Se.call(re)
                    : ((re = (function ie(re) {
                          var Se =
                                  'function' == typeof Symbol &&
                                  Symbol.iterator,
                              Ee = Se && re[Se],
                              Oe = 0;
                          if (Ee) return Ee.call(re);
                          if (re && 'number' == typeof re.length)
                              return {
                                  next: function () {
                                      return (
                                          re &&
                                              Oe >= re.length &&
                                              (re = void 0),
                                          { value: re && re[Oe++], done: !re }
                                      );
                                  },
                              };
                          throw new TypeError(
                              Se
                                  ? 'Object is not iterable.'
                                  : 'Symbol.iterator is not defined.'
                          );
                      })(re)),
                      (Ee = {}),
                      Oe('next'),
                      Oe('throw'),
                      Oe('return'),
                      (Ee[Symbol.asyncIterator] = function () {
                          return this;
                      }),
                      Ee);
                function Oe(De) {
                    Ee[De] =
                        re[De] &&
                        function (ut) {
                            return new Promise(function (Bt, gn) {
                                !(function Ne(De, ut, Bt, gn) {
                                    Promise.resolve(gn).then(function (ot) {
                                        De({ value: ot, done: Bt });
                                    }, ut);
                                })(Bt, gn, (ut = re[De](ut)).done, ut.value);
                            });
                        };
                }
            }
            _.d(z, { mG: () => ne, qq: () => ae, FC: () => Q, KL: () => I });
        },
        9808: (pe, z, _) => {
            'use strict';
            _.d(z, {
                mr: () => me,
                Ov: () => Ie,
                ez: () => Gi,
                K0: () => X,
                Do: () => F,
                V_: () => $,
                Ye: () => oe,
                S$: () => ae,
                mk: () => dr,
                sg: () => Mn,
                O5: () => xe,
                PC: () => pr,
                tP: () => mi,
                b0: () => I,
                lw: () => ne,
                EM: () => vi,
                JF: () => Qt,
                PM: () => ts,
                w_: () => te,
                bD: () => ds,
                q: () => j,
                Mx: () => Sr,
                HT: () => H,
            });
            var f = _(5e3);
            let P = null;
            function j() {
                return P;
            }
            function H(T) {
                P || (P = T);
            }
            class te {}
            const X = new f.OlP('DocumentToken');
            let ne = (() => {
                class T {
                    historyGo(A) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (T.ɵfac = function (A) {
                        return new (A || T)();
                    }),
                    (T.ɵprov = f.Yz7({
                        token: T,
                        factory: function () {
                            return (function K() {
                                return (0, f.LFG)(U);
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    T
                );
            })();
            const $ = new f.OlP('Location Initialized');
            let U = (() => {
                class T extends ne {
                    constructor(A) {
                        super(), (this._doc = A), this._init();
                    }
                    _init() {
                        (this.location = window.location),
                            (this._history = window.history);
                    }
                    getBaseHrefFromDOM() {
                        return j().getBaseHref(this._doc);
                    }
                    onPopState(A) {
                        const V = j().getGlobalEventTarget(this._doc, 'window');
                        return (
                            V.addEventListener('popstate', A, !1),
                            () => V.removeEventListener('popstate', A)
                        );
                    }
                    onHashChange(A) {
                        const V = j().getGlobalEventTarget(this._doc, 'window');
                        return (
                            V.addEventListener('hashchange', A, !1),
                            () => V.removeEventListener('hashchange', A)
                        );
                    }
                    get href() {
                        return this.location.href;
                    }
                    get protocol() {
                        return this.location.protocol;
                    }
                    get hostname() {
                        return this.location.hostname;
                    }
                    get port() {
                        return this.location.port;
                    }
                    get pathname() {
                        return this.location.pathname;
                    }
                    get search() {
                        return this.location.search;
                    }
                    get hash() {
                        return this.location.hash;
                    }
                    set pathname(A) {
                        this.location.pathname = A;
                    }
                    pushState(A, V, fe) {
                        ie()
                            ? this._history.pushState(A, V, fe)
                            : (this.location.hash = fe);
                    }
                    replaceState(A, V, fe) {
                        ie()
                            ? this._history.replaceState(A, V, fe)
                            : (this.location.hash = fe);
                    }
                    forward() {
                        this._history.forward();
                    }
                    back() {
                        this._history.back();
                    }
                    historyGo(A = 0) {
                        this._history.go(A);
                    }
                    getState() {
                        return this._history.state;
                    }
                }
                return (
                    (T.ɵfac = function (A) {
                        return new (A || T)(f.LFG(X));
                    }),
                    (T.ɵprov = f.Yz7({
                        token: T,
                        factory: function () {
                            return (function Ae() {
                                return new U((0, f.LFG)(X));
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    T
                );
            })();
            function ie() {
                return !!window.history.pushState;
            }
            function be(T, L) {
                if (0 == T.length) return L;
                if (0 == L.length) return T;
                let A = 0;
                return (
                    T.endsWith('/') && A++,
                    L.startsWith('/') && A++,
                    2 == A ? T + L.substring(1) : 1 == A ? T + L : T + '/' + L
                );
            }
            function Re(T) {
                const L = T.match(/#|\?|$/),
                    A = (L && L.index) || T.length;
                return T.slice(0, A - ('/' === T[A - 1] ? 1 : 0)) + T.slice(A);
            }
            function je(T) {
                return T && '?' !== T[0] ? '?' + T : T;
            }
            let ae = (() => {
                class T {
                    historyGo(A) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (T.ɵfac = function (A) {
                        return new (A || T)();
                    }),
                    (T.ɵprov = f.Yz7({
                        token: T,
                        factory: function () {
                            return (function Q(T) {
                                const L = (0, f.LFG)(X).location;
                                return new I(
                                    (0, f.LFG)(ne),
                                    (L && L.origin) || ''
                                );
                            })();
                        },
                        providedIn: 'root',
                    })),
                    T
                );
            })();
            const me = new f.OlP('appBaseHref');
            let I = (() => {
                    class T extends ae {
                        constructor(A, V) {
                            if (
                                (super(),
                                (this._platformLocation = A),
                                (this._removeListenerFns = []),
                                null == V &&
                                    (V =
                                        this._platformLocation.getBaseHrefFromDOM()),
                                null == V)
                            )
                                throw new Error(
                                    'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                                );
                            this._baseHref = V;
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(A) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(A),
                                this._platformLocation.onHashChange(A)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        prepareExternalUrl(A) {
                            return be(this._baseHref, A);
                        }
                        path(A = !1) {
                            const V =
                                    this._platformLocation.pathname +
                                    je(this._platformLocation.search),
                                fe = this._platformLocation.hash;
                            return fe && A ? `${V}${fe}` : V;
                        }
                        pushState(A, V, fe, ke) {
                            const ze = this.prepareExternalUrl(fe + je(ke));
                            this._platformLocation.pushState(A, V, ze);
                        }
                        replaceState(A, V, fe, ke) {
                            const ze = this.prepareExternalUrl(fe + je(ke));
                            this._platformLocation.replaceState(A, V, ze);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(A = 0) {
                            var V, fe;
                            null ===
                                (fe = (V = this._platformLocation).historyGo) ||
                                void 0 === fe ||
                                fe.call(V, A);
                        }
                    }
                    return (
                        (T.ɵfac = function (A) {
                            return new (A || T)(f.LFG(ne), f.LFG(me, 8));
                        }),
                        (T.ɵprov = f.Yz7({ token: T, factory: T.ɵfac })),
                        T
                    );
                })(),
                F = (() => {
                    class T extends ae {
                        constructor(A, V) {
                            super(),
                                (this._platformLocation = A),
                                (this._baseHref = ''),
                                (this._removeListenerFns = []),
                                null != V && (this._baseHref = V);
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(A) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(A),
                                this._platformLocation.onHashChange(A)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        path(A = !1) {
                            let V = this._platformLocation.hash;
                            return (
                                null == V && (V = '#'),
                                V.length > 0 ? V.substring(1) : V
                            );
                        }
                        prepareExternalUrl(A) {
                            const V = be(this._baseHref, A);
                            return V.length > 0 ? '#' + V : V;
                        }
                        pushState(A, V, fe, ke) {
                            let ze = this.prepareExternalUrl(fe + je(ke));
                            0 == ze.length &&
                                (ze = this._platformLocation.pathname),
                                this._platformLocation.pushState(A, V, ze);
                        }
                        replaceState(A, V, fe, ke) {
                            let ze = this.prepareExternalUrl(fe + je(ke));
                            0 == ze.length &&
                                (ze = this._platformLocation.pathname),
                                this._platformLocation.replaceState(A, V, ze);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(A = 0) {
                            var V, fe;
                            null ===
                                (fe = (V = this._platformLocation).historyGo) ||
                                void 0 === fe ||
                                fe.call(V, A);
                        }
                    }
                    return (
                        (T.ɵfac = function (A) {
                            return new (A || T)(f.LFG(ne), f.LFG(me, 8));
                        }),
                        (T.ɵprov = f.Yz7({ token: T, factory: T.ɵfac })),
                        T
                    );
                })(),
                oe = (() => {
                    class T {
                        constructor(A, V) {
                            (this._subject = new f.vpe()),
                                (this._urlChangeListeners = []),
                                (this._platformStrategy = A);
                            const fe = this._platformStrategy.getBaseHref();
                            (this._platformLocation = V),
                                (this._baseHref = Re(Be(fe))),
                                this._platformStrategy.onPopState((ke) => {
                                    this._subject.emit({
                                        url: this.path(!0),
                                        pop: !0,
                                        state: ke.state,
                                        type: ke.type,
                                    });
                                });
                        }
                        path(A = !1) {
                            return this.normalize(
                                this._platformStrategy.path(A)
                            );
                        }
                        getState() {
                            return this._platformLocation.getState();
                        }
                        isCurrentPathEqualTo(A, V = '') {
                            return this.path() == this.normalize(A + je(V));
                        }
                        normalize(A) {
                            return T.stripTrailingSlash(
                                (function Pe(T, L) {
                                    return T && L.startsWith(T)
                                        ? L.substring(T.length)
                                        : L;
                                })(this._baseHref, Be(A))
                            );
                        }
                        prepareExternalUrl(A) {
                            return (
                                A && '/' !== A[0] && (A = '/' + A),
                                this._platformStrategy.prepareExternalUrl(A)
                            );
                        }
                        go(A, V = '', fe = null) {
                            this._platformStrategy.pushState(fe, '', A, V),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(A + je(V)),
                                    fe
                                );
                        }
                        replaceState(A, V = '', fe = null) {
                            this._platformStrategy.replaceState(fe, '', A, V),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(A + je(V)),
                                    fe
                                );
                        }
                        forward() {
                            this._platformStrategy.forward();
                        }
                        back() {
                            this._platformStrategy.back();
                        }
                        historyGo(A = 0) {
                            var V, fe;
                            null ===
                                (fe = (V = this._platformStrategy).historyGo) ||
                                void 0 === fe ||
                                fe.call(V, A);
                        }
                        onUrlChange(A) {
                            this._urlChangeListeners.push(A),
                                this._urlChangeSubscription ||
                                    (this._urlChangeSubscription =
                                        this.subscribe((V) => {
                                            this._notifyUrlChangeListeners(
                                                V.url,
                                                V.state
                                            );
                                        }));
                        }
                        _notifyUrlChangeListeners(A = '', V) {
                            this._urlChangeListeners.forEach((fe) => fe(A, V));
                        }
                        subscribe(A, V, fe) {
                            return this._subject.subscribe({
                                next: A,
                                error: V,
                                complete: fe,
                            });
                        }
                    }
                    return (
                        (T.normalizeQueryParams = je),
                        (T.joinWithSlash = be),
                        (T.stripTrailingSlash = Re),
                        (T.ɵfac = function (A) {
                            return new (A || T)(f.LFG(ae), f.LFG(ne));
                        }),
                        (T.ɵprov = f.Yz7({
                            token: T,
                            factory: function () {
                                return (function q() {
                                    return new oe(
                                        (0, f.LFG)(ae),
                                        (0, f.LFG)(ne)
                                    );
                                })();
                            },
                            providedIn: 'root',
                        })),
                        T
                    );
                })();
            function Be(T) {
                return T.replace(/\/index.html$/, '');
            }
            var Se = (() => (
                ((Se = Se || {})[(Se.Zero = 0)] = 'Zero'),
                (Se[(Se.One = 1)] = 'One'),
                (Se[(Se.Two = 2)] = 'Two'),
                (Se[(Se.Few = 3)] = 'Few'),
                (Se[(Se.Many = 4)] = 'Many'),
                (Se[(Se.Other = 5)] = 'Other'),
                Se
            ))();
            const cr = f.kL8;
            class An {}
            let En = (() => {
                class T extends An {
                    constructor(A) {
                        super(), (this.locale = A);
                    }
                    getPluralCategory(A, V) {
                        switch (cr(V || this.locale)(A)) {
                            case Se.Zero:
                                return 'zero';
                            case Se.One:
                                return 'one';
                            case Se.Two:
                                return 'two';
                            case Se.Few:
                                return 'few';
                            case Se.Many:
                                return 'many';
                            default:
                                return 'other';
                        }
                    }
                }
                return (
                    (T.ɵfac = function (A) {
                        return new (A || T)(f.LFG(f.soG));
                    }),
                    (T.ɵprov = f.Yz7({ token: T, factory: T.ɵfac })),
                    T
                );
            })();
            function Sr(T, L) {
                L = encodeURIComponent(L);
                for (const A of T.split(';')) {
                    const V = A.indexOf('='),
                        [fe, ke] =
                            -1 == V ? [A, ''] : [A.slice(0, V), A.slice(V + 1)];
                    if (fe.trim() === L) return decodeURIComponent(ke);
                }
                return null;
            }
            let dr = (() => {
                class T {
                    constructor(A, V, fe, ke) {
                        (this._iterableDiffers = A),
                            (this._keyValueDiffers = V),
                            (this._ngEl = fe),
                            (this._renderer = ke),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._initialClasses = []),
                            (this._rawClass = null);
                    }
                    set klass(A) {
                        this._removeClasses(this._initialClasses),
                            (this._initialClasses =
                                'string' == typeof A ? A.split(/\s+/) : []),
                            this._applyClasses(this._initialClasses),
                            this._applyClasses(this._rawClass);
                    }
                    set ngClass(A) {
                        this._removeClasses(this._rawClass),
                            this._applyClasses(this._initialClasses),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._rawClass =
                                'string' == typeof A ? A.split(/\s+/) : A),
                            this._rawClass &&
                                ((0, f.sIi)(this._rawClass)
                                    ? (this._iterableDiffer =
                                          this._iterableDiffers
                                              .find(this._rawClass)
                                              .create())
                                    : (this._keyValueDiffer =
                                          this._keyValueDiffers
                                              .find(this._rawClass)
                                              .create()));
                    }
                    ngDoCheck() {
                        if (this._iterableDiffer) {
                            const A = this._iterableDiffer.diff(this._rawClass);
                            A && this._applyIterableChanges(A);
                        } else if (this._keyValueDiffer) {
                            const A = this._keyValueDiffer.diff(this._rawClass);
                            A && this._applyKeyValueChanges(A);
                        }
                    }
                    _applyKeyValueChanges(A) {
                        A.forEachAddedItem((V) =>
                            this._toggleClass(V.key, V.currentValue)
                        ),
                            A.forEachChangedItem((V) =>
                                this._toggleClass(V.key, V.currentValue)
                            ),
                            A.forEachRemovedItem((V) => {
                                V.previousValue && this._toggleClass(V.key, !1);
                            });
                    }
                    _applyIterableChanges(A) {
                        A.forEachAddedItem((V) => {
                            if ('string' != typeof V.item)
                                throw new Error(
                                    `NgClass can only toggle CSS classes expressed as strings, got ${(0,
                                    f.AaK)(V.item)}`
                                );
                            this._toggleClass(V.item, !0);
                        }),
                            A.forEachRemovedItem((V) =>
                                this._toggleClass(V.item, !1)
                            );
                    }
                    _applyClasses(A) {
                        A &&
                            (Array.isArray(A) || A instanceof Set
                                ? A.forEach((V) => this._toggleClass(V, !0))
                                : Object.keys(A).forEach((V) =>
                                      this._toggleClass(V, !!A[V])
                                  ));
                    }
                    _removeClasses(A) {
                        A &&
                            (Array.isArray(A) || A instanceof Set
                                ? A.forEach((V) => this._toggleClass(V, !1))
                                : Object.keys(A).forEach((V) =>
                                      this._toggleClass(V, !1)
                                  ));
                    }
                    _toggleClass(A, V) {
                        (A = A.trim()) &&
                            A.split(/\s+/g).forEach((fe) => {
                                V
                                    ? this._renderer.addClass(
                                          this._ngEl.nativeElement,
                                          fe
                                      )
                                    : this._renderer.removeClass(
                                          this._ngEl.nativeElement,
                                          fe
                                      );
                            });
                    }
                }
                return (
                    (T.ɵfac = function (A) {
                        return new (A || T)(
                            f.Y36(f.ZZ4),
                            f.Y36(f.aQg),
                            f.Y36(f.SBq),
                            f.Y36(f.Qsj)
                        );
                    }),
                    (T.ɵdir = f.lG2({
                        type: T,
                        selectors: [['', 'ngClass', '']],
                        inputs: {
                            klass: ['class', 'klass'],
                            ngClass: 'ngClass',
                        },
                    })),
                    T
                );
            })();
            class an {
                constructor(L, A, V, fe) {
                    (this.$implicit = L),
                        (this.ngForOf = A),
                        (this.index = V),
                        (this.count = fe);
                }
                get first() {
                    return 0 === this.index;
                }
                get last() {
                    return this.index === this.count - 1;
                }
                get even() {
                    return this.index % 2 == 0;
                }
                get odd() {
                    return !this.even;
                }
            }
            let Mn = (() => {
                class T {
                    constructor(A, V, fe) {
                        (this._viewContainer = A),
                            (this._template = V),
                            (this._differs = fe),
                            (this._ngForOf = null),
                            (this._ngForOfDirty = !0),
                            (this._differ = null);
                    }
                    set ngForOf(A) {
                        (this._ngForOf = A), (this._ngForOfDirty = !0);
                    }
                    set ngForTrackBy(A) {
                        this._trackByFn = A;
                    }
                    get ngForTrackBy() {
                        return this._trackByFn;
                    }
                    set ngForTemplate(A) {
                        A && (this._template = A);
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const A = this._ngForOf;
                            !this._differ &&
                                A &&
                                (this._differ = this._differs
                                    .find(A)
                                    .create(this.ngForTrackBy));
                        }
                        if (this._differ) {
                            const A = this._differ.diff(this._ngForOf);
                            A && this._applyChanges(A);
                        }
                    }
                    _applyChanges(A) {
                        const V = this._viewContainer;
                        A.forEachOperation((fe, ke, ze) => {
                            if (null == fe.previousIndex)
                                V.createEmbeddedView(
                                    this._template,
                                    new an(fe.item, this._ngForOf, -1, -1),
                                    null === ze ? void 0 : ze
                                );
                            else if (null == ze)
                                V.remove(null === ke ? void 0 : ke);
                            else if (null !== ke) {
                                const vt = V.get(ke);
                                V.move(vt, ze), Fr(vt, fe);
                            }
                        });
                        for (let fe = 0, ke = V.length; fe < ke; fe++) {
                            const vt = V.get(fe).context;
                            (vt.index = fe),
                                (vt.count = ke),
                                (vt.ngForOf = this._ngForOf);
                        }
                        A.forEachIdentityChange((fe) => {
                            Fr(V.get(fe.currentIndex), fe);
                        });
                    }
                    static ngTemplateContextGuard(A, V) {
                        return !0;
                    }
                }
                return (
                    (T.ɵfac = function (A) {
                        return new (A || T)(
                            f.Y36(f.s_b),
                            f.Y36(f.Rgc),
                            f.Y36(f.ZZ4)
                        );
                    }),
                    (T.ɵdir = f.lG2({
                        type: T,
                        selectors: [['', 'ngFor', '', 'ngForOf', '']],
                        inputs: {
                            ngForOf: 'ngForOf',
                            ngForTrackBy: 'ngForTrackBy',
                            ngForTemplate: 'ngForTemplate',
                        },
                    })),
                    T
                );
            })();
            function Fr(T, L) {
                T.context.$implicit = L.item;
            }
            let xe = (() => {
                class T {
                    constructor(A, V) {
                        (this._viewContainer = A),
                            (this._context = new ve()),
                            (this._thenTemplateRef = null),
                            (this._elseTemplateRef = null),
                            (this._thenViewRef = null),
                            (this._elseViewRef = null),
                            (this._thenTemplateRef = V);
                    }
                    set ngIf(A) {
                        (this._context.$implicit = this._context.ngIf = A),
                            this._updateView();
                    }
                    set ngIfThen(A) {
                        Me('ngIfThen', A),
                            (this._thenTemplateRef = A),
                            (this._thenViewRef = null),
                            this._updateView();
                    }
                    set ngIfElse(A) {
                        Me('ngIfElse', A),
                            (this._elseTemplateRef = A),
                            (this._elseViewRef = null),
                            this._updateView();
                    }
                    _updateView() {
                        this._context.$implicit
                            ? this._thenViewRef ||
                              (this._viewContainer.clear(),
                              (this._elseViewRef = null),
                              this._thenTemplateRef &&
                                  (this._thenViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._thenTemplateRef,
                                          this._context
                                      )))
                            : this._elseViewRef ||
                              (this._viewContainer.clear(),
                              (this._thenViewRef = null),
                              this._elseTemplateRef &&
                                  (this._elseViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._elseTemplateRef,
                                          this._context
                                      )));
                    }
                    static ngTemplateContextGuard(A, V) {
                        return !0;
                    }
                }
                return (
                    (T.ɵfac = function (A) {
                        return new (A || T)(f.Y36(f.s_b), f.Y36(f.Rgc));
                    }),
                    (T.ɵdir = f.lG2({
                        type: T,
                        selectors: [['', 'ngIf', '']],
                        inputs: {
                            ngIf: 'ngIf',
                            ngIfThen: 'ngIfThen',
                            ngIfElse: 'ngIfElse',
                        },
                    })),
                    T
                );
            })();
            class ve {
                constructor() {
                    (this.$implicit = null), (this.ngIf = null);
                }
            }
            function Me(T, L) {
                if (L && !L.createEmbeddedView)
                    throw new Error(
                        `${T} must be a TemplateRef, but received '${(0, f.AaK)(
                            L
                        )}'.`
                    );
            }
            let pr = (() => {
                    class T {
                        constructor(A, V, fe) {
                            (this._ngEl = A),
                                (this._differs = V),
                                (this._renderer = fe),
                                (this._ngStyle = null),
                                (this._differ = null);
                        }
                        set ngStyle(A) {
                            (this._ngStyle = A),
                                !this._differ &&
                                    A &&
                                    (this._differ = this._differs
                                        .find(A)
                                        .create());
                        }
                        ngDoCheck() {
                            if (this._differ) {
                                const A = this._differ.diff(this._ngStyle);
                                A && this._applyChanges(A);
                            }
                        }
                        _setStyle(A, V) {
                            const [fe, ke] = A.split('.');
                            null != (V = null != V && ke ? `${V}${ke}` : V)
                                ? this._renderer.setStyle(
                                      this._ngEl.nativeElement,
                                      fe,
                                      V
                                  )
                                : this._renderer.removeStyle(
                                      this._ngEl.nativeElement,
                                      fe
                                  );
                        }
                        _applyChanges(A) {
                            A.forEachRemovedItem((V) =>
                                this._setStyle(V.key, null)
                            ),
                                A.forEachAddedItem((V) =>
                                    this._setStyle(V.key, V.currentValue)
                                ),
                                A.forEachChangedItem((V) =>
                                    this._setStyle(V.key, V.currentValue)
                                );
                        }
                    }
                    return (
                        (T.ɵfac = function (A) {
                            return new (A || T)(
                                f.Y36(f.SBq),
                                f.Y36(f.aQg),
                                f.Y36(f.Qsj)
                            );
                        }),
                        (T.ɵdir = f.lG2({
                            type: T,
                            selectors: [['', 'ngStyle', '']],
                            inputs: { ngStyle: 'ngStyle' },
                        })),
                        T
                    );
                })(),
                mi = (() => {
                    class T {
                        constructor(A) {
                            (this._viewContainerRef = A),
                                (this._viewRef = null),
                                (this.ngTemplateOutletContext = null),
                                (this.ngTemplateOutlet = null);
                        }
                        ngOnChanges(A) {
                            if (A.ngTemplateOutlet) {
                                const V = this._viewContainerRef;
                                this._viewRef &&
                                    V.remove(V.indexOf(this._viewRef)),
                                    (this._viewRef = this.ngTemplateOutlet
                                        ? V.createEmbeddedView(
                                              this.ngTemplateOutlet,
                                              this.ngTemplateOutletContext
                                          )
                                        : null);
                            } else
                                this._viewRef &&
                                    A.ngTemplateOutletContext &&
                                    this.ngTemplateOutletContext &&
                                    (this._viewRef.context =
                                        this.ngTemplateOutletContext);
                        }
                    }
                    return (
                        (T.ɵfac = function (A) {
                            return new (A || T)(f.Y36(f.s_b));
                        }),
                        (T.ɵdir = f.lG2({
                            type: T,
                            selectors: [['', 'ngTemplateOutlet', '']],
                            inputs: {
                                ngTemplateOutletContext:
                                    'ngTemplateOutletContext',
                                ngTemplateOutlet: 'ngTemplateOutlet',
                            },
                            features: [f.TTD],
                        })),
                        T
                    );
                })();
            class $i {
                createSubscription(L, A) {
                    return L.subscribe({
                        next: A,
                        error: (V) => {
                            throw V;
                        },
                    });
                }
                dispose(L) {
                    L.unsubscribe();
                }
                onDestroy(L) {
                    L.unsubscribe();
                }
            }
            class yi {
                createSubscription(L, A) {
                    return L.then(A, (V) => {
                        throw V;
                    });
                }
                dispose(L) {}
                onDestroy(L) {}
            }
            const _e = new yi(),
                ge = new $i();
            let Ie = (() => {
                    class T {
                        constructor(A) {
                            (this._ref = A),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null),
                                (this._strategy = null);
                        }
                        ngOnDestroy() {
                            this._subscription && this._dispose();
                        }
                        transform(A) {
                            return this._obj
                                ? A !== this._obj
                                    ? (this._dispose(), this.transform(A))
                                    : this._latestValue
                                : (A && this._subscribe(A), this._latestValue);
                        }
                        _subscribe(A) {
                            (this._obj = A),
                                (this._strategy = this._selectStrategy(A)),
                                (this._subscription =
                                    this._strategy.createSubscription(A, (V) =>
                                        this._updateLatestValue(A, V)
                                    ));
                        }
                        _selectStrategy(A) {
                            if ((0, f.QGY)(A)) return _e;
                            if ((0, f.F4k)(A)) return ge;
                            throw (function Er(T, L) {
                                return new f.vHH(2100, '');
                            })();
                        }
                        _dispose() {
                            this._strategy.dispose(this._subscription),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null);
                        }
                        _updateLatestValue(A, V) {
                            A === this._obj &&
                                ((this._latestValue = V),
                                this._ref.markForCheck());
                        }
                    }
                    return (
                        (T.ɵfac = function (A) {
                            return new (A || T)(f.Y36(f.sBO, 16));
                        }),
                        (T.ɵpipe = f.Yjl({ name: 'async', type: T, pure: !1 })),
                        T
                    );
                })(),
                Gi = (() => {
                    class T {}
                    return (
                        (T.ɵfac = function (A) {
                            return new (A || T)();
                        }),
                        (T.ɵmod = f.oAB({ type: T })),
                        (T.ɵinj = f.cJS({
                            providers: [{ provide: An, useClass: En }],
                        })),
                        T
                    );
                })();
            const ds = 'browser';
            function ts(T) {
                return 'server' === T;
            }
            let vi = (() => {
                class T {}
                return (
                    (T.ɵprov = (0, f.Yz7)({
                        token: T,
                        providedIn: 'root',
                        factory: () => new Ni((0, f.LFG)(X), window),
                    })),
                    T
                );
            })();
            class Ni {
                constructor(L, A) {
                    (this.document = L),
                        (this.window = A),
                        (this.offset = () => [0, 0]);
                }
                setOffset(L) {
                    this.offset = Array.isArray(L) ? () => L : L;
                }
                getScrollPosition() {
                    return this.supportsScrolling()
                        ? [this.window.pageXOffset, this.window.pageYOffset]
                        : [0, 0];
                }
                scrollToPosition(L) {
                    this.supportsScrolling() &&
                        this.window.scrollTo(L[0], L[1]);
                }
                scrollToAnchor(L) {
                    if (!this.supportsScrolling()) return;
                    const A = (function Xr(T, L) {
                        const A =
                            T.getElementById(L) || T.getElementsByName(L)[0];
                        if (A) return A;
                        if (
                            'function' == typeof T.createTreeWalker &&
                            T.body &&
                            (T.body.createShadowRoot || T.body.attachShadow)
                        ) {
                            const V = T.createTreeWalker(
                                T.body,
                                NodeFilter.SHOW_ELEMENT
                            );
                            let fe = V.currentNode;
                            for (; fe; ) {
                                const ke = fe.shadowRoot;
                                if (ke) {
                                    const ze =
                                        ke.getElementById(L) ||
                                        ke.querySelector(`[name="${L}"]`);
                                    if (ze) return ze;
                                }
                                fe = V.nextNode();
                            }
                        }
                        return null;
                    })(this.document, L);
                    A && (this.scrollToElement(A), A.focus());
                }
                setHistoryScrollRestoration(L) {
                    if (this.supportScrollRestoration()) {
                        const A = this.window.history;
                        A && A.scrollRestoration && (A.scrollRestoration = L);
                    }
                }
                scrollToElement(L) {
                    const A = L.getBoundingClientRect(),
                        V = A.left + this.window.pageXOffset,
                        fe = A.top + this.window.pageYOffset,
                        ke = this.offset();
                    this.window.scrollTo(V - ke[0], fe - ke[1]);
                }
                supportScrollRestoration() {
                    try {
                        if (!this.supportsScrolling()) return !1;
                        const L =
                            Ki(this.window.history) ||
                            Ki(Object.getPrototypeOf(this.window.history));
                        return !(!L || (!L.writable && !L.set));
                    } catch (L) {
                        return !1;
                    }
                }
                supportsScrolling() {
                    try {
                        return (
                            !!this.window &&
                            !!this.window.scrollTo &&
                            'pageXOffset' in this.window
                        );
                    } catch (L) {
                        return !1;
                    }
                }
            }
            function Ki(T) {
                return Object.getOwnPropertyDescriptor(T, 'scrollRestoration');
            }
            class Qt {}
        },
        5e3: (pe, z, _) => {
            'use strict';
            _.d(z, {
                deG: () => ml,
                tb: () => $g,
                AFp: () => Ug,
                ip1: () => Hc,
                CZH: () => Va,
                hGG: () => t0,
                z2F: () => gl,
                sBO: () => PC,
                Sil: () => Gc,
                _Vd: () => ll,
                EJc: () => Wg,
                SBq: () => ul,
                qLn: () => Ya,
                vpe: () => yo,
                tBr: () => Vt,
                XFs: () => yt,
                OlP: () => Cr,
                zs3: () => bs,
                ZZ4: () => ql,
                aQg: () => Jl,
                soG: () => Ql,
                YKP: () => Jp,
                h0i: () => La,
                PXZ: () => bC,
                R0b: () => ls,
                FiY: () => _n,
                Lbi: () => Hg,
                g9A: () => jg,
                Qsj: () => aD,
                FYo: () => Kp,
                JOm: () => ho,
                PiD: () => Sn,
                tp0: () => ur,
                Rgc: () => hl,
                dDg: () => Yg,
                q4F: () => Qp,
                GfV: () => Yp,
                s_b: () => Wl,
                ifc: () => Pt,
                eFA: () => qg,
                G48: () => OC,
                Gpc: () => U,
                X6Q: () => MC,
                _c5: () => YC,
                VLi: () => EC,
                c2e: () => Gg,
                zSh: () => Ku,
                wAp: () => zt,
                vHH: () => Re,
                cg1: () => vc,
                kL8: () => yp,
                dqk: () => jt,
                sIi: () => el,
                CqO: () => Eh,
                QGY: () => fc,
                F4k: () => vh,
                RDi: () => Ki,
                AaK: () => ne,
                qOj: () => Ju,
                TTD: () => zr,
                _Bn: () => Gp,
                xp6: () => Zd,
                uIk: () => tc,
                Tol: () => Gh,
                ekj: () => mc,
                Suo: () => _g,
                Xpm: () => Ue,
                lG2: () => zn,
                Yz7: () => ct,
                cJS: () => mn,
                oAB: () => qt,
                Yjl: () => or,
                Y36: () => nl,
                _UZ: () => yh,
                GkF: () => _h,
                BQk: () => dc,
                ynx: () => cc,
                qZA: () => uc,
                TgZ: () => lc,
                n5z: () => ti,
                LFG: () => Y,
                $8M: () => jr,
                $Z: () => mh,
                NdJ: () => hc,
                CRH: () => vg,
                oxw: () => Ah,
                ALo: () => cg,
                lcZ: () => dg,
                Hsn: () => Th,
                F$t: () => wh,
                Q6J: () => oc,
                DdM: () => ng,
                l5B: () => rg,
                qbA: () => ig,
                iGM: () => yg,
                MAs: () => sh,
                LSH: () => lu,
                kYT: () => vn,
                Akn: () => zs,
                YNc: () => ih,
                W1O: () => bg,
                _uU: () => qh,
                Oqu: () => _c,
                hij: () => kl,
            });
            var f = _(7579),
                P = _(727),
                j = _(8306),
                w = _(6451),
                H = _(3099);
            function te(e) {
                for (let t in e) if (e[t] === te) return t;
                throw Error(
                    'Could not find renamed property on target object.'
                );
            }
            function X(e, t) {
                for (const n in t)
                    t.hasOwnProperty(n) &&
                        !e.hasOwnProperty(n) &&
                        (e[n] = t[n]);
            }
            function ne(e) {
                if ('string' == typeof e) return e;
                if (Array.isArray(e)) return '[' + e.map(ne).join(', ') + ']';
                if (null == e) return '' + e;
                if (e.overriddenName) return `${e.overriddenName}`;
                if (e.name) return `${e.name}`;
                const t = e.toString();
                if (null == t) return '' + t;
                const n = t.indexOf('\n');
                return -1 === n ? t : t.substring(0, n);
            }
            function K(e, t) {
                return null == e || '' === e
                    ? null === t
                        ? ''
                        : t
                    : null == t || '' === t
                    ? e
                    : e + ' ' + t;
            }
            const $ = te({ __forward_ref__: te });
            function U(e) {
                return (
                    (e.__forward_ref__ = U),
                    (e.toString = function () {
                        return ne(this());
                    }),
                    e
                );
            }
            function ie(e) {
                return Ae(e) ? e() : e;
            }
            function Ae(e) {
                return (
                    'function' == typeof e &&
                    e.hasOwnProperty($) &&
                    e.__forward_ref__ === U
                );
            }
            class Re extends Error {
                constructor(t, n) {
                    super(
                        (function je(e, t) {
                            return `NG0${Math.abs(e)}${t ? ': ' + t : ''}`;
                        })(t, n)
                    ),
                        (this.code = t);
                }
            }
            function ae(e) {
                return 'string' == typeof e ? e : null == e ? '' : String(e);
            }
            function Q(e) {
                return 'function' == typeof e
                    ? e.name || e.toString()
                    : 'object' == typeof e &&
                      null != e &&
                      'function' == typeof e.type
                    ? e.type.name || e.type.toString()
                    : ae(e);
            }
            function oe(e, t) {
                const n = t ? ` in ${t}` : '';
                throw new Re(-201, `No provider for ${Q(e)} found${n}`);
            }
            function ot(e, t) {
                null == e &&
                    (function st(e, t, n, r) {
                        throw new Error(
                            `ASSERTION ERROR: ${e}` +
                                (null == r
                                    ? ''
                                    : ` [Expected=> ${n} ${r} ${t} <=Actual]`)
                        );
                    })(t, e, null, '!=');
            }
            function ct(e) {
                return {
                    token: e.token,
                    providedIn: e.providedIn || null,
                    factory: e.factory,
                    value: void 0,
                };
            }
            function mn(e) {
                return {
                    providers: e.providers || [],
                    imports: e.imports || [],
                };
            }
            function Zt(e) {
                return jn(e, Qn) || jn(e, Ut);
            }
            function jn(e, t) {
                return e.hasOwnProperty(t) ? e[t] : null;
            }
            function Wn(e) {
                return e && (e.hasOwnProperty(cr) || e.hasOwnProperty(Fn))
                    ? e[cr]
                    : null;
            }
            const Qn = te({ ɵprov: te }),
                cr = te({ ɵinj: te }),
                Ut = te({ ngInjectableDef: te }),
                Fn = te({ ngInjectorDef: te });
            var yt = (() => (
                ((yt = yt || {})[(yt.Default = 0)] = 'Default'),
                (yt[(yt.Host = 1)] = 'Host'),
                (yt[(yt.Self = 2)] = 'Self'),
                (yt[(yt.SkipSelf = 4)] = 'SkipSelf'),
                (yt[(yt.Optional = 8)] = 'Optional'),
                yt
            ))();
            let xn;
            function rn(e) {
                const t = xn;
                return (xn = e), t;
            }
            function yr(e, t, n) {
                const r = Zt(e);
                return r && 'root' == r.providedIn
                    ? void 0 === r.value
                        ? (r.value = r.factory())
                        : r.value
                    : n & yt.Optional
                    ? null
                    : void 0 !== t
                    ? t
                    : void oe(ne(e), 'Injector');
            }
            function _t(e) {
                return { toString: e }.toString();
            }
            var It = (() => (
                    ((It = It || {})[(It.OnPush = 0)] = 'OnPush'),
                    (It[(It.Default = 1)] = 'Default'),
                    It
                ))(),
                Pt = (() => {
                    return (
                        ((e = Pt || (Pt = {}))[(e.Emulated = 0)] = 'Emulated'),
                        (e[(e.None = 2)] = 'None'),
                        (e[(e.ShadowDom = 3)] = 'ShadowDom'),
                        Pt
                    );
                    var e;
                })();
            const pt = 'undefined' != typeof globalThis && globalThis,
                gt = 'undefined' != typeof window && window,
                Ar =
                    'undefined' != typeof self &&
                    'undefined' != typeof WorkerGlobalScope &&
                    self instanceof WorkerGlobalScope &&
                    self,
                jt = pt || ('undefined' != typeof global && global) || gt || Ar,
                wr = {},
                se = [],
                de = te({ ɵcmp: te }),
                le = te({ ɵdir: te }),
                $e = te({ ɵpipe: te }),
                Te = te({ ɵmod: te }),
                lt = te({ ɵfac: te }),
                ye = te({ __NG_ELEMENT_ID__: te });
            let Le = 0;
            function Ue(e) {
                return _t(() => {
                    const n = {},
                        r = {
                            type: e.type,
                            providersResolver: null,
                            decls: e.decls,
                            vars: e.vars,
                            factory: null,
                            template: e.template || null,
                            consts: e.consts || null,
                            ngContentSelectors: e.ngContentSelectors,
                            hostBindings: e.hostBindings || null,
                            hostVars: e.hostVars || 0,
                            hostAttrs: e.hostAttrs || null,
                            contentQueries: e.contentQueries || null,
                            declaredInputs: n,
                            inputs: null,
                            outputs: null,
                            exportAs: e.exportAs || null,
                            onPush: e.changeDetection === It.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            selectors: e.selectors || se,
                            viewQuery: e.viewQuery || null,
                            features: e.features || null,
                            data: e.data || {},
                            encapsulation: e.encapsulation || Pt.Emulated,
                            id: 'c',
                            styles: e.styles || se,
                            _: null,
                            setInput: null,
                            schemas: e.schemas || null,
                            tView: null,
                        },
                        i = e.directives,
                        a = e.features,
                        l = e.pipes;
                    return (
                        (r.id += Le++),
                        (r.inputs = bt(e.inputs, n)),
                        (r.outputs = bt(e.outputs)),
                        a && a.forEach((p) => p(r)),
                        (r.directiveDefs = i
                            ? () => ('function' == typeof i ? i() : i).map(Dt)
                            : null),
                        (r.pipeDefs = l
                            ? () => ('function' == typeof l ? l() : l).map(rt)
                            : null),
                        r
                    );
                });
            }
            function Dt(e) {
                return (
                    $t(e) ||
                    (function tn(e) {
                        return e[le] || null;
                    })(e)
                );
            }
            function rt(e) {
                return (function bn(e) {
                    return e[$e] || null;
                })(e);
            }
            const Kt = {};
            function qt(e) {
                return _t(() => {
                    const t = {
                        type: e.type,
                        bootstrap: e.bootstrap || se,
                        declarations: e.declarations || se,
                        imports: e.imports || se,
                        exports: e.exports || se,
                        transitiveCompileScopes: null,
                        schemas: e.schemas || null,
                        id: e.id || null,
                    };
                    return null != e.id && (Kt[e.id] = e.type), t;
                });
            }
            function vn(e, t) {
                return _t(() => {
                    const n = Pn(e, !0);
                    (n.declarations = t.declarations || se),
                        (n.imports = t.imports || se),
                        (n.exports = t.exports || se);
                });
            }
            function bt(e, t) {
                if (null == e) return wr;
                const n = {};
                for (const r in e)
                    if (e.hasOwnProperty(r)) {
                        let i = e[r],
                            a = i;
                        Array.isArray(i) && ((a = i[1]), (i = i[0])),
                            (n[i] = r),
                            t && (t[i] = a);
                    }
                return n;
            }
            const zn = Ue;
            function or(e) {
                return {
                    type: e.type,
                    name: e.name,
                    factory: null,
                    pure: !1 !== e.pure,
                    onDestroy: e.type.prototype.ngOnDestroy || null,
                };
            }
            function $t(e) {
                return e[de] || null;
            }
            function Pn(e, t) {
                const n = e[Te] || null;
                if (!n && !0 === t)
                    throw new Error(
                        `Type ${ne(e)} does not have '\u0275mod' property.`
                    );
                return n;
            }
            const J = 18;
            function Ze(e) {
                return Array.isArray(e) && 'object' == typeof e[1];
            }
            function Rt(e) {
                return Array.isArray(e) && !0 === e[1];
            }
            function pn(e) {
                return 0 != (8 & e.flags);
            }
            function Dn(e) {
                return 2 == (2 & e.flags);
            }
            function Un(e) {
                return 1 == (1 & e.flags);
            }
            function Jt(e) {
                return null !== e.template;
            }
            function pr(e) {
                return 0 != (512 & e[2]);
            }
            function Jr(e, t) {
                return e.hasOwnProperty(lt) ? e[lt] : null;
            }
            class xi {
                constructor(t, n, r) {
                    (this.previousValue = t),
                        (this.currentValue = n),
                        (this.firstChange = r);
                }
                isFirstChange() {
                    return this.firstChange;
                }
            }
            function zr() {
                return gr;
            }
            function gr(e) {
                return e.type.prototype.ngOnChanges && (e.setInput = li), cs;
            }
            function cs() {
                const e = ds(this),
                    t = null == e ? void 0 : e.current;
                if (t) {
                    const n = e.previous;
                    if (n === wr) e.previous = t;
                    else for (let r in t) n[r] = t[r];
                    (e.current = null), this.ngOnChanges(t);
                }
            }
            function li(e, t, n, r) {
                const i =
                        ds(e) ||
                        (function _i(e, t) {
                            return (e[Gi] = t);
                        })(e, { previous: wr, current: null }),
                    a = i.current || (i.current = {}),
                    l = i.previous,
                    p = this.declaredInputs[n],
                    y = l[p];
                (a[p] = new xi(y && y.currentValue, t, l === wr)), (e[r] = t);
            }
            zr.ngInherit = !0;
            const Gi = '__ngSimpleChanges__';
            function ds(e) {
                return e[Gi] || null;
            }
            let Ni;
            function Ki(e) {
                Ni = e;
            }
            function Qt(e) {
                return !!e.listen;
            }
            const T = {
                createRenderer: (e, t) =>
                    (function Xr() {
                        return void 0 !== Ni
                            ? Ni
                            : 'undefined' != typeof document
                            ? document
                            : void 0;
                    })(),
            };
            function A(e) {
                for (; Array.isArray(e); ) e = e[0];
                return e;
            }
            function ke(e, t) {
                return A(t[e]);
            }
            function ze(e, t) {
                return A(t[e.index]);
            }
            function xt(e, t) {
                return e.data[t];
            }
            function dn(e, t) {
                return e[t];
            }
            function Gt(e, t) {
                const n = t[e];
                return Ze(n) ? n : n[0];
            }
            function en(e) {
                return 4 == (4 & e[2]);
            }
            function tr(e) {
                return 128 == (128 & e[2]);
            }
            function Nn(e, t) {
                return null == t ? null : e[t];
            }
            function ei(e) {
                e[J] = 0;
            }
            function Vr(e, t) {
                e[5] += t;
                let n = e,
                    r = e[3];
                for (
                    ;
                    null !== r &&
                    ((1 === t && 1 === n[5]) || (-1 === t && 0 === n[5]));

                )
                    (r[5] += t), (n = r), (r = r[3]);
            }
            const Ot = {
                lFrame: qs(null),
                bindingsEnabled: !0,
                isInCheckNoChangesMode: !1,
            };
            function ns() {
                return Ot.bindingsEnabled;
            }
            function Ke() {
                return Ot.lFrame.lView;
            }
            function Xt() {
                return Ot.lFrame.tView;
            }
            function Yn() {
                let e = fs();
                for (; null !== e && 64 === e.type; ) e = e.parent;
                return e;
            }
            function fs() {
                return Ot.lFrame.currentTNode;
            }
            function Dr(e, t) {
                const n = Ot.lFrame;
                (n.currentTNode = e), (n.isParent = t);
            }
            function hs() {
                return Ot.lFrame.isParent;
            }
            function ws() {
                Ot.lFrame.isParent = !1;
            }
            function ps() {
                return Ot.isInCheckNoChangesMode;
            }
            function gs(e) {
                Ot.isInCheckNoChangesMode = e;
            }
            function mr() {
                const e = Ot.lFrame;
                let t = e.bindingRootIndex;
                return (
                    -1 === t &&
                        (t = e.bindingRootIndex = e.tView.bindingStartIndex),
                    t
                );
            }
            function di() {
                return Ot.lFrame.bindingIndex++;
            }
            function Ci(e) {
                const t = Ot.lFrame,
                    n = t.bindingIndex;
                return (t.bindingIndex = t.bindingIndex + e), n;
            }
            function m(e, t) {
                const n = Ot.lFrame;
                (n.bindingIndex = n.bindingRootIndex = e), Fe(t);
            }
            function Fe(e) {
                Ot.lFrame.currentDirectiveIndex = e;
            }
            function yn() {
                return Ot.lFrame.currentQueryIndex;
            }
            function Cn(e) {
                Ot.lFrame.currentQueryIndex = e;
            }
            function fi(e) {
                const t = e[1];
                return 2 === t.type ? t.declTNode : 1 === t.type ? e[6] : null;
            }
            function Ur(e, t, n) {
                if (n & yt.SkipSelf) {
                    let i = t,
                        a = e;
                    for (
                        ;
                        !((i = i.parent),
                        null !== i ||
                            n & yt.Host ||
                            ((i = fi(a)),
                            null === i || ((a = a[15]), 10 & i.type)));

                    );
                    if (null === i) return !1;
                    (t = i), (e = a);
                }
                const r = (Ot.lFrame = rs());
                return (r.currentTNode = t), (r.lView = e), !0;
            }
            function hi(e) {
                const t = rs(),
                    n = e[1];
                (Ot.lFrame = t),
                    (t.currentTNode = n.firstChild),
                    (t.lView = e),
                    (t.tView = n),
                    (t.contextLView = e),
                    (t.bindingIndex = n.bindingStartIndex),
                    (t.inI18n = !1);
            }
            function rs() {
                const e = Ot.lFrame,
                    t = null === e ? null : e.child;
                return null === t ? qs(e) : t;
            }
            function qs(e) {
                const t = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: e,
                    child: null,
                    inI18n: !1,
                };
                return null !== e && (e.child = t), t;
            }
            function Js() {
                const e = Ot.lFrame;
                return (
                    (Ot.lFrame = e.parent),
                    (e.currentTNode = null),
                    (e.lView = null),
                    e
                );
            }
            const _o = Js;
            function Is() {
                const e = Js();
                (e.isParent = !0),
                    (e.tView = null),
                    (e.selectedIndex = -1),
                    (e.contextLView = null),
                    (e.elementDepthCount = 0),
                    (e.currentDirectiveIndex = -1),
                    (e.currentNamespace = null),
                    (e.bindingRootIndex = -1),
                    (e.bindingIndex = -1),
                    (e.currentQueryIndex = 0);
            }
            function Or() {
                return Ot.lFrame.selectedIndex;
            }
            function ki(e) {
                Ot.lFrame.selectedIndex = e;
            }
            function ir() {
                const e = Ot.lFrame;
                return xt(e.tView, e.selectedIndex);
            }
            function Os(e, t) {
                for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) {
                    const a = e.data[n].type.prototype,
                        {
                            ngAfterContentInit: l,
                            ngAfterContentChecked: p,
                            ngAfterViewInit: y,
                            ngAfterViewChecked: O,
                            ngOnDestroy: x,
                        } = a;
                    l && (e.contentHooks || (e.contentHooks = [])).push(-n, l),
                        p &&
                            ((e.contentHooks || (e.contentHooks = [])).push(
                                n,
                                p
                            ),
                            (
                                e.contentCheckHooks ||
                                (e.contentCheckHooks = [])
                            ).push(n, p)),
                        y && (e.viewHooks || (e.viewHooks = [])).push(-n, y),
                        O &&
                            ((e.viewHooks || (e.viewHooks = [])).push(n, O),
                            (e.viewCheckHooks || (e.viewCheckHooks = [])).push(
                                n,
                                O
                            )),
                        null != x &&
                            (e.destroyHooks || (e.destroyHooks = [])).push(
                                n,
                                x
                            );
                }
            }
            function is(e, t, n) {
                lr(e, t, 3, n);
            }
            function Nr(e, t, n, r) {
                (3 & e[2]) === n && lr(e, t, n, r);
            }
            function Xs(e, t) {
                let n = e[2];
                (3 & n) === t && ((n &= 2047), (n += 1), (e[2] = n));
            }
            function lr(e, t, n, r) {
                const a = null != r ? r : -1,
                    l = t.length - 1;
                let p = 0;
                for (let y = void 0 !== r ? 65535 & e[J] : 0; y < l; y++)
                    if ('number' == typeof t[y + 1]) {
                        if (((p = t[y]), null != r && p >= r)) break;
                    } else
                        t[y] < 0 && (e[J] += 65536),
                            (p < a || -1 == a) &&
                                (Ps(e, n, t, y),
                                (e[J] = (4294901760 & e[J]) + y + 2)),
                            y++;
            }
            function Ps(e, t, n, r) {
                const i = n[r] < 0,
                    a = n[r + 1],
                    p = e[i ? -n[r] : n[r]];
                if (i) {
                    if (e[2] >> 11 < e[J] >> 16 && (3 & e[2]) === t) {
                        e[2] += 2048;
                        try {
                            a.call(p);
                        } finally {
                        }
                    }
                } else
                    try {
                        a.call(p);
                    } finally {
                    }
            }
            class Oi {
                constructor(t, n, r) {
                    (this.factory = t),
                        (this.resolving = !1),
                        (this.canSeeViewProviders = n),
                        (this.injectImpl = r);
                }
            }
            function fr(e, t, n) {
                const r = Qt(e);
                let i = 0;
                for (; i < n.length; ) {
                    const a = n[i];
                    if ('number' == typeof a) {
                        if (0 !== a) break;
                        i++;
                        const l = n[i++],
                            p = n[i++],
                            y = n[i++];
                        r
                            ? e.setAttribute(t, p, y, l)
                            : t.setAttributeNS(l, p, y);
                    } else {
                        const l = a,
                            p = n[++i];
                        Co(l)
                            ? r && e.setProperty(t, l, p)
                            : r
                            ? e.setAttribute(t, l, p)
                            : t.setAttribute(l, p),
                            i++;
                    }
                }
                return i;
            }
            function Do(e) {
                return 3 === e || 4 === e || 6 === e;
            }
            function Co(e) {
                return 64 === e.charCodeAt(0);
            }
            function eo(e, t) {
                if (null !== t && 0 !== t.length)
                    if (null === e || 0 === e.length) e = t.slice();
                    else {
                        let n = -1;
                        for (let r = 0; r < t.length; r++) {
                            const i = t[r];
                            'number' == typeof i
                                ? (n = i)
                                : 0 === n ||
                                  bo(
                                      e,
                                      n,
                                      i,
                                      null,
                                      -1 === n || 2 === n ? t[++r] : null
                                  );
                        }
                    }
                return e;
            }
            function bo(e, t, n, r, i) {
                let a = 0,
                    l = e.length;
                if (-1 === t) l = -1;
                else
                    for (; a < e.length; ) {
                        const p = e[a++];
                        if ('number' == typeof p) {
                            if (p === t) {
                                l = -1;
                                break;
                            }
                            if (p > t) {
                                l = a - 1;
                                break;
                            }
                        }
                    }
                for (; a < e.length; ) {
                    const p = e[a];
                    if ('number' == typeof p) break;
                    if (p === n) {
                        if (null === r)
                            return void (null !== i && (e[a + 1] = i));
                        if (r === e[a + 1]) return void (e[a + 2] = i);
                    }
                    a++, null !== r && a++, null !== i && a++;
                }
                -1 !== l && (e.splice(l, 0, t), (a = l + 1)),
                    e.splice(a++, 0, n),
                    null !== r && e.splice(a++, 0, r),
                    null !== i && e.splice(a++, 0, i);
            }
            function Oo(e) {
                return -1 !== e;
            }
            function ss(e) {
                return 32767 & e;
            }
            function _s(e, t) {
                let n = (function to(e) {
                        return e >> 16;
                    })(e),
                    r = t;
                for (; n > 0; ) (r = r[15]), n--;
                return r;
            }
            let Fs = !0;
            function no(e) {
                const t = Fs;
                return (Fs = e), t;
            }
            let Go = 0;
            function os(e, t) {
                const n = g(e, t);
                if (-1 !== n) return n;
                const r = t[1];
                r.firstCreatePass &&
                    ((e.injectorIndex = t.length),
                    Ro(r.data, e),
                    Ro(t, null),
                    Ro(r.blueprint, null));
                const i = h(e, t),
                    a = e.injectorIndex;
                if (Oo(i)) {
                    const l = ss(i),
                        p = _s(i, t),
                        y = p[1].data;
                    for (let O = 0; O < 8; O++) t[a + O] = p[l + O] | y[l + O];
                }
                return (t[a + 8] = i), a;
            }
            function Ro(e, t) {
                e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
            }
            function g(e, t) {
                return -1 === e.injectorIndex ||
                    (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
                    null === t[e.injectorIndex + 8]
                    ? -1
                    : e.injectorIndex;
            }
            function h(e, t) {
                if (e.parent && -1 !== e.parent.injectorIndex)
                    return e.parent.injectorIndex;
                let n = 0,
                    r = null,
                    i = t;
                for (; null !== i; ) {
                    const a = i[1],
                        l = a.type;
                    if (
                        ((r = 2 === l ? a.declTNode : 1 === l ? i[6] : null),
                        null === r)
                    )
                        return -1;
                    if ((n++, (i = i[15]), -1 !== r.injectorIndex))
                        return r.injectorIndex | (n << 16);
                }
                return -1;
            }
            function c(e, t, n) {
                !(function vs(e, t, n) {
                    let r;
                    'string' == typeof n
                        ? (r = n.charCodeAt(0) || 0)
                        : n.hasOwnProperty(ye) && (r = n[ye]),
                        null == r && (r = n[ye] = Go++);
                    const i = 255 & r;
                    t.data[e + (i >> 5)] |= 1 << i;
                })(e, t, n);
            }
            function M(e, t, n) {
                if (n & yt.Optional) return e;
                oe(t, 'NodeInjector');
            }
            function k(e, t, n, r) {
                if (
                    (n & yt.Optional && void 0 === r && (r = null),
                    0 == (n & (yt.Self | yt.Host)))
                ) {
                    const i = e[9],
                        a = rn(void 0);
                    try {
                        return i
                            ? i.get(t, r, n & yt.Optional)
                            : yr(t, r, n & yt.Optional);
                    } finally {
                        rn(a);
                    }
                }
                return M(r, t, n);
            }
            function Z(e, t, n, r = yt.Default, i) {
                if (null !== e) {
                    const a = (function Ln(e) {
                        if ('string' == typeof e) return e.charCodeAt(0) || 0;
                        const t = e.hasOwnProperty(ye) ? e[ye] : void 0;
                        return 'number' == typeof t
                            ? t >= 0
                                ? 255 & t
                                : He
                            : t;
                    })(n);
                    if ('function' == typeof a) {
                        if (!Ur(t, e, r))
                            return r & yt.Host ? M(i, n, r) : k(t, n, r, i);
                        try {
                            const l = a(r);
                            if (null != l || r & yt.Optional) return l;
                            oe(n);
                        } finally {
                            _o();
                        }
                    } else if ('number' == typeof a) {
                        let l = null,
                            p = g(e, t),
                            y = -1,
                            O = r & yt.Host ? t[16][6] : null;
                        for (
                            (-1 === p || r & yt.SkipSelf) &&
                            ((y = -1 === p ? h(e, t) : t[p + 8]),
                            -1 !== y && Ji(r, !1)
                                ? ((l = t[1]), (p = ss(y)), (t = _s(y, t)))
                                : (p = -1));
                            -1 !== p;

                        ) {
                            const x = t[1];
                            if (kn(a, p, x.data)) {
                                const W = Ct(p, t, n, l, r, O);
                                if (W !== ce) return W;
                            }
                            (y = t[p + 8]),
                                -1 !== y &&
                                Ji(r, t[1].data[p + 8] === O) &&
                                kn(a, p, t)
                                    ? ((l = x), (p = ss(y)), (t = _s(y, t)))
                                    : (p = -1);
                        }
                    }
                }
                return k(t, n, r, i);
            }
            const ce = {};
            function He() {
                return new Kr(Yn(), Ke());
            }
            function Ct(e, t, n, r, i, a) {
                const l = t[1],
                    p = l.data[e + 8],
                    x = on(
                        p,
                        l,
                        n,
                        null == r ? Dn(p) && Fs : r != l && 0 != (3 & p.type),
                        i & yt.Host && a === p
                    );
                return null !== x ? Tt(t, l, x, p) : ce;
            }
            function on(e, t, n, r, i) {
                const a = e.providerIndexes,
                    l = t.data,
                    p = 1048575 & a,
                    y = e.directiveStart,
                    x = a >> 20,
                    he = i ? p + x : e.directiveEnd;
                for (let we = r ? p : p + x; we < he; we++) {
                    const Ge = l[we];
                    if ((we < y && n === Ge) || (we >= y && Ge.type === n))
                        return we;
                }
                if (i) {
                    const we = l[y];
                    if (we && Jt(we) && we.type === n) return y;
                }
                return null;
            }
            function Tt(e, t, n, r) {
                let i = e[n];
                const a = t.data;
                if (
                    (function $o(e) {
                        return e instanceof Oi;
                    })(i)
                ) {
                    const l = i;
                    l.resolving &&
                        (function me(e, t) {
                            const n = t
                                ? `. Dependency path: ${t.join(' > ')} > ${e}`
                                : '';
                            throw new Re(
                                -200,
                                `Circular dependency in DI detected for ${e}${n}`
                            );
                        })(Q(a[n]));
                    const p = no(l.canSeeViewProviders);
                    l.resolving = !0;
                    const y = l.injectImpl ? rn(l.injectImpl) : null;
                    Ur(e, r, yt.Default);
                    try {
                        (i = e[n] = l.factory(void 0, a, e, r)),
                            t.firstCreatePass &&
                                n >= r.directiveStart &&
                                (function Io(e, t, n) {
                                    const {
                                        ngOnChanges: r,
                                        ngOnInit: i,
                                        ngDoCheck: a,
                                    } = t.type.prototype;
                                    if (r) {
                                        const l = gr(t);
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(e, l),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, l);
                                    }
                                    i &&
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(0 - e, i),
                                        a &&
                                            ((
                                                n.preOrderHooks ||
                                                (n.preOrderHooks = [])
                                            ).push(e, a),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, a));
                                })(n, a[n], t);
                    } finally {
                        null !== y && rn(y), no(p), (l.resolving = !1), _o();
                    }
                }
                return i;
            }
            function kn(e, t, n) {
                return !!(n[t + (e >> 5)] & (1 << e));
            }
            function Ji(e, t) {
                return !(e & yt.Self || (e & yt.Host && t));
            }
            class Kr {
                constructor(t, n) {
                    (this._tNode = t), (this._lView = n);
                }
                get(t, n, r) {
                    return Z(this._tNode, this._lView, t, r, n);
                }
            }
            function ti(e) {
                return _t(() => {
                    const t = e.prototype.constructor,
                        n = t[lt] || Ai(t),
                        r = Object.prototype;
                    let i = Object.getPrototypeOf(e.prototype).constructor;
                    for (; i && i !== r; ) {
                        const a = i[lt] || Ai(i);
                        if (a && a !== n) return a;
                        i = Object.getPrototypeOf(i);
                    }
                    return (a) => new a();
                });
            }
            function Ai(e) {
                return Ae(e)
                    ? () => {
                          const t = Ai(ie(e));
                          return t && t();
                      }
                    : Jr(e);
            }
            function jr(e) {
                return (function b(e, t) {
                    if ('class' === t) return e.classes;
                    if ('style' === t) return e.styles;
                    const n = e.attrs;
                    if (n) {
                        const r = n.length;
                        let i = 0;
                        for (; i < r; ) {
                            const a = n[i];
                            if (Do(a)) break;
                            if (0 === a) i += 2;
                            else if ('number' == typeof a)
                                for (i++; i < r && 'string' == typeof n[i]; )
                                    i++;
                            else {
                                if (a === t) return n[i + 1];
                                i += 2;
                            }
                        }
                    }
                    return null;
                })(Yn(), e);
            }
            const ni = '__parameters__';
            function Ns(e, t, n) {
                return _t(() => {
                    const r = (function Wo(e) {
                        return function (...n) {
                            if (e) {
                                const r = e(...n);
                                for (const i in r) this[i] = r[i];
                            }
                        };
                    })(t);
                    function i(...a) {
                        if (this instanceof i) return r.apply(this, a), this;
                        const l = new i(...a);
                        return (p.annotation = l), p;
                        function p(y, O, x) {
                            const W = y.hasOwnProperty(ni)
                                ? y[ni]
                                : Object.defineProperty(y, ni, { value: [] })[
                                      ni
                                  ];
                            for (; W.length <= x; ) W.push(null);
                            return (W[x] = W[x] || []).push(l), y;
                        }
                    }
                    return (
                        n && (i.prototype = Object.create(n.prototype)),
                        (i.prototype.ngMetadataName = e),
                        (i.annotationCls = i),
                        i
                    );
                });
            }
            class Cr {
                constructor(t, n) {
                    (this._desc = t),
                        (this.ngMetadataName = 'InjectionToken'),
                        (this.ɵprov = void 0),
                        'number' == typeof n
                            ? (this.__NG_ELEMENT_ID__ = n)
                            : void 0 !== n &&
                              (this.ɵprov = ct({
                                  token: this,
                                  providedIn: n.providedIn || 'root',
                                  factory: n.factory,
                              }));
                }
                toString() {
                    return `InjectionToken ${this._desc}`;
                }
            }
            const ml = new Cr('AnalyzeForEntryComponents');
            function Qr(e, t) {
                void 0 === t && (t = e);
                for (let n = 0; n < e.length; n++) {
                    let r = e[n];
                    Array.isArray(r)
                        ? (t === e && (t = e.slice(0, n)), Qr(r, t))
                        : t !== e && t.push(r);
                }
                return t;
            }
            function Bi(e, t) {
                e.forEach((n) => (Array.isArray(n) ? Bi(n, t) : t(n)));
            }
            function Ko(e, t, n) {
                t >= e.length ? e.push(n) : e.splice(t, 0, n);
            }
            function No(e, t) {
                return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
            }
            function io(e, t) {
                const n = [];
                for (let r = 0; r < e; r++) n.push(t);
                return n;
            }
            function kr(e, t, n) {
                let r = Ds(e, t);
                return (
                    r >= 0
                        ? (e[1 | r] = n)
                        : ((r = ~r),
                          (function eu(e, t, n, r) {
                              let i = e.length;
                              if (i == t) e.push(n, r);
                              else if (1 === i) e.push(r, e[0]), (e[0] = n);
                              else {
                                  for (i--, e.push(e[i - 1], e[i]); i > t; )
                                      (e[i] = e[i - 2]), i--;
                                  (e[t] = n), (e[t + 1] = r);
                              }
                          })(e, r, t, n)),
                    r
                );
            }
            function so(e, t) {
                const n = Ds(e, t);
                if (n >= 0) return e[1 | n];
            }
            function Ds(e, t) {
                return (function Cs(e, t, n) {
                    let r = 0,
                        i = e.length >> n;
                    for (; i !== r; ) {
                        const a = r + ((i - r) >> 1),
                            l = e[a << n];
                        if (t === l) return a << n;
                        l > t ? (i = a) : (r = a + 1);
                    }
                    return ~(i << n);
                })(e, t, 1);
            }
            const S = {},
                B = '__NG_DI_FLAG__',
                ee = 'ngTempTokenPath',
                d = /\n/gm,
                o = '__source',
                u = te({ provide: String, useValue: te });
            let v;
            function R(e) {
                const t = v;
                return (v = e), t;
            }
            function G(e, t = yt.Default) {
                if (void 0 === v) throw new Re(203, '');
                return null === v
                    ? yr(e, void 0, t)
                    : v.get(e, t & yt.Optional ? null : void 0, t);
            }
            function Y(e, t = yt.Default) {
                return (
                    (function In() {
                        return xn;
                    })() || G
                )(ie(e), t);
            }
            function it(e) {
                const t = [];
                for (let n = 0; n < e.length; n++) {
                    const r = ie(e[n]);
                    if (Array.isArray(r)) {
                        if (0 === r.length) throw new Re(900, '');
                        let i,
                            a = yt.Default;
                        for (let l = 0; l < r.length; l++) {
                            const p = r[l],
                                y = Mt(p);
                            'number' == typeof y
                                ? -1 === y
                                    ? (i = p.token)
                                    : (a |= y)
                                : (i = p);
                        }
                        t.push(Y(i, a));
                    } else t.push(Y(r));
                }
                return t;
            }
            function Et(e, t) {
                return (e[B] = t), (e.prototype[B] = t), e;
            }
            function Mt(e) {
                return e[B];
            }
            const Vt = Et(
                    Ns('Inject', (e) => ({ token: e })),
                    -1
                ),
                _n = Et(Ns('Optional'), 8),
                Sn = Et(Ns('Self'), 2),
                ur = Et(Ns('SkipSelf'), 4);
            class ha {
                constructor(t) {
                    this.changingThisBreaksApplicationSecurity = t;
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
                }
            }
            function Bo(e) {
                return e instanceof ha
                    ? e.changingThisBreaksApplicationSecurity
                    : e;
            }
            const Am =
                    /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
                wm =
                    /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
            var qr = (() => (
                ((qr = qr || {})[(qr.NONE = 0)] = 'NONE'),
                (qr[(qr.HTML = 1)] = 'HTML'),
                (qr[(qr.STYLE = 2)] = 'STYLE'),
                (qr[(qr.SCRIPT = 3)] = 'SCRIPT'),
                (qr[(qr.URL = 4)] = 'URL'),
                (qr[(qr.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
                qr
            ))();
            function lu(e) {
                const t = (function za() {
                    const e = Ke();
                    return e && e[12];
                })();
                return t
                    ? t.sanitize(qr.URL, e) || ''
                    : (function Ga(e, t) {
                          const n = (function Em(e) {
                              return (
                                  (e instanceof ha && e.getTypeName()) || null
                              );
                          })(e);
                          if (null != n && n !== t) {
                              if ('ResourceURL' === n && 'URL' === t) return !0;
                              throw new Error(
                                  `Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`
                              );
                          }
                          return n === t;
                      })(e, 'URL')
                    ? Bo(e)
                    : (function Cl(e) {
                          return (e = String(e)).match(Am) || e.match(wm)
                              ? e
                              : 'unsafe:' + e;
                      })(ae(e));
            }
            const vd = '__ngContext__';
            function Ri(e, t) {
                e[vd] = t;
            }
            function cu(e) {
                const t = (function Ka(e) {
                    return e[vd] || null;
                })(e);
                return t ? (Array.isArray(t) ? t : t.lView) : null;
            }
            function fu(e) {
                return e.ngOriginalError;
            }
            function Ym(e, ...t) {
                e.error(...t);
            }
            class Ya {
                constructor() {
                    this._console = console;
                }
                handleError(t) {
                    const n = this._findOriginalError(t),
                        r = (function Km(e) {
                            return (e && e.ngErrorLogger) || Ym;
                        })(t);
                    r(this._console, 'ERROR', t),
                        n && r(this._console, 'ORIGINAL ERROR', n);
                }
                _findOriginalError(t) {
                    let n = t && fu(t);
                    for (; n && fu(n); ) n = fu(n);
                    return n || null;
                }
            }
            const Ad = (() =>
                (
                    ('undefined' != typeof requestAnimationFrame &&
                        requestAnimationFrame) ||
                    setTimeout
                ).bind(jt))();
            function fo(e) {
                return e instanceof Function ? e() : e;
            }
            var ho = (() => (
                ((ho = ho || {})[(ho.Important = 1)] = 'Important'),
                (ho[(ho.DashCase = 2)] = 'DashCase'),
                ho
            ))();
            function pu(e, t) {
                return undefined(e, t);
            }
            function Qa(e) {
                const t = e[3];
                return Rt(t) ? t[3] : t;
            }
            function gu(e) {
                return Md(e[13]);
            }
            function mu(e) {
                return Md(e[4]);
            }
            function Md(e) {
                for (; null !== e && !Rt(e); ) e = e[4];
                return e;
            }
            function ga(e, t, n, r, i) {
                if (null != r) {
                    let a,
                        l = !1;
                    Rt(r) ? (a = r) : Ze(r) && ((l = !0), (r = r[0]));
                    const p = A(r);
                    0 === e && null !== n
                        ? null == i
                            ? Nd(t, n, p)
                            : qo(t, n, p, i || null, !0)
                        : 1 === e && null !== n
                        ? qo(t, n, p, i || null, !0)
                        : 2 === e
                        ? (function Hd(e, t, n) {
                              const r = Al(e, t);
                              r &&
                                  (function yy(e, t, n, r) {
                                      Qt(e)
                                          ? e.removeChild(t, n, r)
                                          : t.removeChild(n);
                                  })(e, r, t, n);
                          })(t, p, l)
                        : 3 === e && t.destroyNode(p),
                        null != a &&
                            (function Ey(e, t, n, r, i) {
                                const a = n[7];
                                a !== A(n) && ga(t, e, r, a, i);
                                for (let p = 10; p < n.length; p++) {
                                    const y = n[p];
                                    Za(y[1], y, e, t, r, a);
                                }
                            })(t, e, a, n, i);
                }
            }
            function _u(e, t, n) {
                if (Qt(e)) return e.createElement(t, n);
                {
                    const r =
                        null !== n
                            ? (function vi(e) {
                                  const t = e.toLowerCase();
                                  return 'svg' === t
                                      ? 'http://www.w3.org/2000/svg'
                                      : 'math' === t
                                      ? 'http://www.w3.org/1998/MathML/'
                                      : null;
                              })(n)
                            : null;
                    return null === r
                        ? e.createElement(t)
                        : e.createElementNS(r, t);
                }
            }
            function Pd(e, t) {
                const n = e[9],
                    r = n.indexOf(t),
                    i = t[3];
                1024 & t[2] && ((t[2] &= -1025), Vr(i, -1)), n.splice(r, 1);
            }
            function vu(e, t) {
                if (e.length <= 10) return;
                const n = 10 + t,
                    r = e[n];
                if (r) {
                    const i = r[17];
                    null !== i && i !== e && Pd(i, r),
                        t > 0 && (e[n - 1][4] = r[4]);
                    const a = No(e, 10 + t);
                    !(function uy(e, t) {
                        Za(e, t, t[11], 2, null, null),
                            (t[0] = null),
                            (t[6] = null);
                    })(r[1], r);
                    const l = a[19];
                    null !== l && l.detachView(a[1]),
                        (r[3] = null),
                        (r[4] = null),
                        (r[2] &= -129);
                }
                return r;
            }
            function Rd(e, t) {
                if (!(256 & t[2])) {
                    const n = t[11];
                    Qt(n) && n.destroyNode && Za(e, t, n, 3, null, null),
                        (function fy(e) {
                            let t = e[13];
                            if (!t) return Eu(e[1], e);
                            for (; t; ) {
                                let n = null;
                                if (Ze(t)) n = t[13];
                                else {
                                    const r = t[10];
                                    r && (n = r);
                                }
                                if (!n) {
                                    for (; t && !t[4] && t !== e; )
                                        Ze(t) && Eu(t[1], t), (t = t[3]);
                                    null === t && (t = e),
                                        Ze(t) && Eu(t[1], t),
                                        (n = t && t[4]);
                                }
                                t = n;
                            }
                        })(t);
                }
            }
            function Eu(e, t) {
                if (!(256 & t[2])) {
                    (t[2] &= -129),
                        (t[2] |= 256),
                        (function my(e, t) {
                            let n;
                            if (null != e && null != (n = e.destroyHooks))
                                for (let r = 0; r < n.length; r += 2) {
                                    const i = t[n[r]];
                                    if (!(i instanceof Oi)) {
                                        const a = n[r + 1];
                                        if (Array.isArray(a))
                                            for (
                                                let l = 0;
                                                l < a.length;
                                                l += 2
                                            ) {
                                                const p = i[a[l]],
                                                    y = a[l + 1];
                                                try {
                                                    y.call(p);
                                                } finally {
                                                }
                                            }
                                        else
                                            try {
                                                a.call(i);
                                            } finally {
                                            }
                                    }
                                }
                        })(e, t),
                        (function gy(e, t) {
                            const n = e.cleanup,
                                r = t[7];
                            let i = -1;
                            if (null !== n)
                                for (let a = 0; a < n.length - 1; a += 2)
                                    if ('string' == typeof n[a]) {
                                        const l = n[a + 1],
                                            p =
                                                'function' == typeof l
                                                    ? l(t)
                                                    : A(t[l]),
                                            y = r[(i = n[a + 2])],
                                            O = n[a + 3];
                                        'boolean' == typeof O
                                            ? p.removeEventListener(n[a], y, O)
                                            : O >= 0
                                            ? r[(i = O)]()
                                            : r[(i = -O)].unsubscribe(),
                                            (a += 2);
                                    } else {
                                        const l = r[(i = n[a + 1])];
                                        n[a].call(l);
                                    }
                            if (null !== r) {
                                for (let a = i + 1; a < r.length; a++) r[a]();
                                t[7] = null;
                            }
                        })(e, t),
                        1 === t[1].type && Qt(t[11]) && t[11].destroy();
                    const n = t[17];
                    if (null !== n && Rt(t[3])) {
                        n !== t[3] && Pd(n, t);
                        const r = t[19];
                        null !== r && r.detachView(e);
                    }
                }
            }
            function Fd(e, t, n) {
                return (function xd(e, t, n) {
                    let r = t;
                    for (; null !== r && 40 & r.type; ) r = (t = r).parent;
                    if (null === r) return n[0];
                    if (2 & r.flags) {
                        const i = e.data[r.directiveStart].encapsulation;
                        if (i === Pt.None || i === Pt.Emulated) return null;
                    }
                    return ze(r, n);
                })(e, t.parent, n);
            }
            function qo(e, t, n, r, i) {
                Qt(e) ? e.insertBefore(t, n, r, i) : t.insertBefore(n, r, i);
            }
            function Nd(e, t, n) {
                Qt(e) ? e.appendChild(t, n) : t.appendChild(n);
            }
            function Ld(e, t, n, r, i) {
                null !== r ? qo(e, t, n, r, i) : Nd(e, t, n);
            }
            function Al(e, t) {
                return Qt(e) ? e.parentNode(t) : t.parentNode;
            }
            function kd(e, t, n) {
                return Vd(e, t, n);
            }
            let Vd = function Bd(e, t, n) {
                return 40 & e.type ? ze(e, n) : null;
            };
            function wl(e, t, n, r) {
                const i = Fd(e, r, t),
                    a = t[11],
                    p = kd(r.parent || t[6], r, t);
                if (null != i)
                    if (Array.isArray(n))
                        for (let y = 0; y < n.length; y++)
                            Ld(a, i, n[y], p, !1);
                    else Ld(a, i, n, p, !1);
            }
            function Tl(e, t) {
                if (null !== t) {
                    const n = t.type;
                    if (3 & n) return ze(t, e);
                    if (4 & n) return Cu(-1, e[t.index]);
                    if (8 & n) {
                        const r = t.child;
                        if (null !== r) return Tl(e, r);
                        {
                            const i = e[t.index];
                            return Rt(i) ? Cu(-1, i) : A(i);
                        }
                    }
                    if (32 & n) return pu(t, e)() || A(e[t.index]);
                    {
                        const r = jd(e, t);
                        return null !== r
                            ? Array.isArray(r)
                                ? r[0]
                                : Tl(Qa(e[16]), r)
                            : Tl(e, t.next);
                    }
                }
                return null;
            }
            function jd(e, t) {
                return null !== t ? e[16][6].projection[t.projection] : null;
            }
            function Cu(e, t) {
                const n = 10 + e + 1;
                if (n < t.length) {
                    const r = t[n],
                        i = r[1].firstChild;
                    if (null !== i) return Tl(r, i);
                }
                return t[7];
            }
            function bu(e, t, n, r, i, a, l) {
                for (; null != n; ) {
                    const p = r[n.index],
                        y = n.type;
                    if (
                        (l && 0 === t && (p && Ri(A(p), r), (n.flags |= 4)),
                        64 != (64 & n.flags))
                    )
                        if (8 & y)
                            bu(e, t, n.child, r, i, a, !1), ga(t, e, i, p, a);
                        else if (32 & y) {
                            const O = pu(n, r);
                            let x;
                            for (; (x = O()); ) ga(t, e, i, x, a);
                            ga(t, e, i, p, a);
                        } else
                            16 & y ? $d(e, t, r, n, i, a) : ga(t, e, i, p, a);
                    n = l ? n.projectionNext : n.next;
                }
            }
            function Za(e, t, n, r, i, a) {
                bu(n, r, e.firstChild, t, i, a, !1);
            }
            function $d(e, t, n, r, i, a) {
                const l = n[16],
                    y = l[6].projection[r.projection];
                if (Array.isArray(y))
                    for (let O = 0; O < y.length; O++) ga(t, e, i, y[O], a);
                else bu(e, t, y, l[3], i, a, !0);
            }
            function Gd(e, t, n) {
                Qt(e) ? e.setAttribute(t, 'style', n) : (t.style.cssText = n);
            }
            function Au(e, t, n) {
                Qt(e)
                    ? '' === n
                        ? e.removeAttribute(t, 'class')
                        : e.setAttribute(t, 'class', n)
                    : (t.className = n);
            }
            function Wd(e, t, n) {
                let r = e.length;
                for (;;) {
                    const i = e.indexOf(t, n);
                    if (-1 === i) return i;
                    if (0 === i || e.charCodeAt(i - 1) <= 32) {
                        const a = t.length;
                        if (i + a === r || e.charCodeAt(i + a) <= 32) return i;
                    }
                    n = i + 1;
                }
            }
            const zd = 'ng-template';
            function Cy(e, t, n) {
                let r = 0;
                for (; r < e.length; ) {
                    let i = e[r++];
                    if (n && 'class' === i) {
                        if (((i = e[r]), -1 !== Wd(i.toLowerCase(), t, 0)))
                            return !0;
                    } else if (1 === i) {
                        for (
                            ;
                            r < e.length && 'string' == typeof (i = e[r++]);

                        )
                            if (i.toLowerCase() === t) return !0;
                        return !1;
                    }
                }
                return !1;
            }
            function Kd(e) {
                return 4 === e.type && e.value !== zd;
            }
            function by(e, t, n) {
                return t === (4 !== e.type || n ? e.value : zd);
            }
            function Ay(e, t, n) {
                let r = 4;
                const i = e.attrs || [],
                    a = (function Sy(e) {
                        for (let t = 0; t < e.length; t++)
                            if (Do(e[t])) return t;
                        return e.length;
                    })(i);
                let l = !1;
                for (let p = 0; p < t.length; p++) {
                    const y = t[p];
                    if ('number' != typeof y) {
                        if (!l)
                            if (4 & r) {
                                if (
                                    ((r = 2 | (1 & r)),
                                    ('' !== y && !by(e, y, n)) ||
                                        ('' === y && 1 === t.length))
                                ) {
                                    if ($s(r)) return !1;
                                    l = !0;
                                }
                            } else {
                                const O = 8 & r ? y : t[++p];
                                if (8 & r && null !== e.attrs) {
                                    if (!Cy(e.attrs, O, n)) {
                                        if ($s(r)) return !1;
                                        l = !0;
                                    }
                                    continue;
                                }
                                const W = wy(8 & r ? 'class' : y, i, Kd(e), n);
                                if (-1 === W) {
                                    if ($s(r)) return !1;
                                    l = !0;
                                    continue;
                                }
                                if ('' !== O) {
                                    let he;
                                    he = W > a ? '' : i[W + 1].toLowerCase();
                                    const we = 8 & r ? he : null;
                                    if (
                                        (we && -1 !== Wd(we, O, 0)) ||
                                        (2 & r && O !== he)
                                    ) {
                                        if ($s(r)) return !1;
                                        l = !0;
                                    }
                                }
                            }
                    } else {
                        if (!l && !$s(r) && !$s(y)) return !1;
                        if (l && $s(y)) continue;
                        (l = !1), (r = y | (1 & r));
                    }
                }
                return $s(r) || l;
            }
            function $s(e) {
                return 0 == (1 & e);
            }
            function wy(e, t, n, r) {
                if (null === t) return -1;
                let i = 0;
                if (r || !n) {
                    let a = !1;
                    for (; i < t.length; ) {
                        const l = t[i];
                        if (l === e) return i;
                        if (3 === l || 6 === l) a = !0;
                        else {
                            if (1 === l || 2 === l) {
                                let p = t[++i];
                                for (; 'string' == typeof p; ) p = t[++i];
                                continue;
                            }
                            if (4 === l) break;
                            if (0 === l) {
                                i += 4;
                                continue;
                            }
                        }
                        i += a ? 1 : 2;
                    }
                    return -1;
                }
                return (function Iy(e, t) {
                    let n = e.indexOf(4);
                    if (n > -1)
                        for (n++; n < e.length; ) {
                            const r = e[n];
                            if ('number' == typeof r) return -1;
                            if (r === t) return n;
                            n++;
                        }
                    return -1;
                })(t, e);
            }
            function Yd(e, t, n = !1) {
                for (let r = 0; r < t.length; r++)
                    if (Ay(e, t[r], n)) return !0;
                return !1;
            }
            function My(e, t) {
                e: for (let n = 0; n < t.length; n++) {
                    const r = t[n];
                    if (e.length === r.length) {
                        for (let i = 0; i < e.length; i++)
                            if (e[i] !== r[i]) continue e;
                        return !0;
                    }
                }
                return !1;
            }
            function Qd(e, t) {
                return e ? ':not(' + t.trim() + ')' : t;
            }
            function Oy(e) {
                let t = e[0],
                    n = 1,
                    r = 2,
                    i = '',
                    a = !1;
                for (; n < e.length; ) {
                    let l = e[n];
                    if ('string' == typeof l)
                        if (2 & r) {
                            const p = e[++n];
                            i +=
                                '[' +
                                l +
                                (p.length > 0 ? '="' + p + '"' : '') +
                                ']';
                        } else 8 & r ? (i += '.' + l) : 4 & r && (i += ' ' + l);
                    else
                        '' !== i && !$s(l) && ((t += Qd(a, i)), (i = '')),
                            (r = l),
                            (a = a || !$s(r));
                    n++;
                }
                return '' !== i && (t += Qd(a, i)), t;
            }
            const ln = {};
            function Zd(e) {
                qd(Xt(), Ke(), Or() + e, ps());
            }
            function qd(e, t, n, r) {
                if (!r)
                    if (3 == (3 & t[2])) {
                        const a = e.preOrderCheckHooks;
                        null !== a && is(t, a, n);
                    } else {
                        const a = e.preOrderHooks;
                        null !== a && Nr(t, a, 0, n);
                    }
                ki(n);
            }
            function Sl(e, t) {
                return (e << 17) | (t << 2);
            }
            function Gs(e) {
                return (e >> 17) & 32767;
            }
            function wu(e) {
                return 2 | e;
            }
            function wo(e) {
                return (131068 & e) >> 2;
            }
            function Tu(e, t) {
                return (-131069 & e) | (t << 2);
            }
            function Su(e) {
                return 1 | e;
            }
            function cf(e, t) {
                const n = e.contentQueries;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2) {
                        const i = n[r],
                            a = n[r + 1];
                        if (-1 !== a) {
                            const l = e.data[a];
                            Cn(i), l.contentQueries(2, t[a], a);
                        }
                    }
            }
            function qa(e, t, n, r, i, a, l, p, y, O) {
                const x = t.blueprint.slice();
                return (
                    (x[0] = i),
                    (x[2] = 140 | r),
                    ei(x),
                    (x[3] = x[15] = e),
                    (x[8] = n),
                    (x[10] = l || (e && e[10])),
                    (x[11] = p || (e && e[11])),
                    (x[12] = y || (e && e[12]) || null),
                    (x[9] = O || (e && e[9]) || null),
                    (x[6] = a),
                    (x[16] = 2 == t.type ? e[16] : x),
                    x
                );
            }
            function ma(e, t, n, r, i) {
                let a = e.data[t];
                if (null === a)
                    (a = (function Lu(e, t, n, r, i) {
                        const a = fs(),
                            l = hs(),
                            y = (e.data[t] = (function Yy(e, t, n, r, i, a) {
                                return {
                                    type: n,
                                    index: r,
                                    insertBeforeIndex: null,
                                    injectorIndex: t ? t.injectorIndex : -1,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    propertyBindings: null,
                                    flags: 0,
                                    providerIndexes: 0,
                                    value: i,
                                    attrs: a,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tViews: null,
                                    next: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: t,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0,
                                };
                            })(0, l ? a : a && a.parent, n, t, r, i));
                        return (
                            null === e.firstChild && (e.firstChild = y),
                            null !== a &&
                                (l
                                    ? null == a.child &&
                                      null !== y.parent &&
                                      (a.child = y)
                                    : null === a.next && (a.next = y)),
                            y
                        );
                    })(e, t, n, r, i)),
                        (function C() {
                            return Ot.lFrame.inI18n;
                        })() && (a.flags |= 64);
                else if (64 & a.type) {
                    (a.type = n), (a.value = r), (a.attrs = i);
                    const l = (function Mi() {
                        const e = Ot.lFrame,
                            t = e.currentTNode;
                        return e.isParent ? t : t.parent;
                    })();
                    a.injectorIndex = null === l ? -1 : l.injectorIndex;
                }
                return Dr(a, !0), a;
            }
            function ya(e, t, n, r) {
                if (0 === n) return -1;
                const i = t.length;
                for (let a = 0; a < n; a++)
                    t.push(r), e.blueprint.push(r), e.data.push(null);
                return i;
            }
            function Ja(e, t, n) {
                hi(t);
                try {
                    const r = e.viewQuery;
                    null !== r && Wu(1, r, n);
                    const i = e.template;
                    null !== i && df(e, t, i, 1, n),
                        e.firstCreatePass && (e.firstCreatePass = !1),
                        e.staticContentQueries && cf(e, t),
                        e.staticViewQueries && Wu(2, e.viewQuery, n);
                    const a = e.components;
                    null !== a &&
                        (function Wy(e, t) {
                            for (let n = 0; n < t.length; n++) f_(e, t[n]);
                        })(t, a);
                } catch (r) {
                    throw (
                        (e.firstCreatePass &&
                            ((e.incompleteFirstPass = !0),
                            (e.firstCreatePass = !1)),
                        r)
                    );
                } finally {
                    (t[2] &= -5), Is();
                }
            }
            function _a(e, t, n, r) {
                const i = t[2];
                if (256 == (256 & i)) return;
                hi(t);
                const a = ps();
                try {
                    ei(t),
                        (function Ss(e) {
                            return (Ot.lFrame.bindingIndex = e);
                        })(e.bindingStartIndex),
                        null !== n && df(e, t, n, 2, r);
                    const l = 3 == (3 & i);
                    if (!a)
                        if (l) {
                            const O = e.preOrderCheckHooks;
                            null !== O && is(t, O, null);
                        } else {
                            const O = e.preOrderHooks;
                            null !== O && Nr(t, O, 0, null), Xs(t, 0);
                        }
                    if (
                        ((function c_(e) {
                            for (let t = gu(e); null !== t; t = mu(t)) {
                                if (!t[2]) continue;
                                const n = t[9];
                                for (let r = 0; r < n.length; r++) {
                                    const i = n[r],
                                        a = i[3];
                                    0 == (1024 & i[2]) && Vr(a, 1),
                                        (i[2] |= 1024);
                                }
                            }
                        })(t),
                        (function u_(e) {
                            for (let t = gu(e); null !== t; t = mu(t))
                                for (let n = 10; n < t.length; n++) {
                                    const r = t[n],
                                        i = r[1];
                                    tr(r) && _a(i, r, i.template, r[8]);
                                }
                        })(t),
                        null !== e.contentQueries && cf(e, t),
                        !a)
                    )
                        if (l) {
                            const O = e.contentCheckHooks;
                            null !== O && is(t, O);
                        } else {
                            const O = e.contentHooks;
                            null !== O && Nr(t, O, 1), Xs(t, 1);
                        }
                    !(function $y(e, t) {
                        const n = e.hostBindingOpCodes;
                        if (null !== n)
                            try {
                                for (let r = 0; r < n.length; r++) {
                                    const i = n[r];
                                    if (i < 0) ki(~i);
                                    else {
                                        const a = i,
                                            l = n[++r],
                                            p = n[++r];
                                        m(l, a), p(2, t[a]);
                                    }
                                }
                            } finally {
                                ki(-1);
                            }
                    })(e, t);
                    const p = e.components;
                    null !== p &&
                        (function Gy(e, t) {
                            for (let n = 0; n < t.length; n++) d_(e, t[n]);
                        })(t, p);
                    const y = e.viewQuery;
                    if ((null !== y && Wu(2, y, r), !a))
                        if (l) {
                            const O = e.viewCheckHooks;
                            null !== O && is(t, O);
                        } else {
                            const O = e.viewHooks;
                            null !== O && Nr(t, O, 2), Xs(t, 2);
                        }
                    !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
                        a || (t[2] &= -73),
                        1024 & t[2] && ((t[2] &= -1025), Vr(t[3], -1));
                } finally {
                    Is();
                }
            }
            function zy(e, t, n, r) {
                const i = t[10],
                    a = !ps(),
                    l = en(t);
                try {
                    a && !l && i.begin && i.begin(),
                        l && Ja(e, t, r),
                        _a(e, t, n, r);
                } finally {
                    a && !l && i.end && i.end();
                }
            }
            function df(e, t, n, r, i) {
                const a = Or(),
                    l = 2 & r;
                try {
                    ki(-1), l && t.length > 20 && qd(e, t, 20, ps()), n(r, i);
                } finally {
                    ki(a);
                }
            }
            function ff(e, t, n) {
                if (pn(t)) {
                    const i = t.directiveEnd;
                    for (let a = t.directiveStart; a < i; a++) {
                        const l = e.data[a];
                        l.contentQueries && l.contentQueries(1, n[a], a);
                    }
                }
            }
            function ku(e, t, n) {
                !ns() ||
                    ((function t_(e, t, n, r) {
                        const i = n.directiveStart,
                            a = n.directiveEnd;
                        e.firstCreatePass || os(n, t), Ri(r, t);
                        const l = n.initialInputs;
                        for (let p = i; p < a; p++) {
                            const y = e.data[p],
                                O = Jt(y);
                            O && o_(t, n, y);
                            const x = Tt(t, e, p, n);
                            Ri(x, t),
                                null !== l && a_(0, p - i, x, y, 0, l),
                                O && (Gt(n.index, t)[8] = x);
                        }
                    })(e, t, n, ze(n, t)),
                    128 == (128 & n.flags) &&
                        (function n_(e, t, n) {
                            const r = n.directiveStart,
                                i = n.directiveEnd,
                                l = n.index,
                                p = (function N() {
                                    return Ot.lFrame.currentDirectiveIndex;
                                })();
                            try {
                                ki(l);
                                for (let y = r; y < i; y++) {
                                    const O = e.data[y],
                                        x = t[y];
                                    Fe(y),
                                        (null !== O.hostBindings ||
                                            0 !== O.hostVars ||
                                            null !== O.hostAttrs) &&
                                            Ef(O, x);
                                }
                            } finally {
                                ki(-1), Fe(p);
                            }
                        })(e, t, n));
            }
            function Bu(e, t, n = ze) {
                const r = t.localNames;
                if (null !== r) {
                    let i = t.index + 1;
                    for (let a = 0; a < r.length; a += 2) {
                        const l = r[a + 1],
                            p = -1 === l ? n(t, e) : e[l];
                        e[i++] = p;
                    }
                }
            }
            function hf(e) {
                const t = e.tView;
                return null === t || t.incompleteFirstPass
                    ? (e.tView = Ol(
                          1,
                          null,
                          e.template,
                          e.decls,
                          e.vars,
                          e.directiveDefs,
                          e.pipeDefs,
                          e.viewQuery,
                          e.schemas,
                          e.consts
                      ))
                    : t;
            }
            function Ol(e, t, n, r, i, a, l, p, y, O) {
                const x = 20 + r,
                    W = x + i,
                    he = (function Ky(e, t) {
                        const n = [];
                        for (let r = 0; r < t; r++) n.push(r < e ? null : ln);
                        return n;
                    })(x, W),
                    we = 'function' == typeof O ? O() : O;
                return (he[1] = {
                    type: e,
                    blueprint: he,
                    template: n,
                    queries: null,
                    viewQuery: p,
                    declTNode: t,
                    data: he.slice().fill(null, x),
                    bindingStartIndex: x,
                    expandoStartIndex: W,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: 'function' == typeof a ? a() : a,
                    pipeRegistry: 'function' == typeof l ? l() : l,
                    firstChild: null,
                    schemas: y,
                    consts: we,
                    incompleteFirstPass: !1,
                });
            }
            function mf(e, t, n, r) {
                const i = Tf(t);
                null === n
                    ? i.push(r)
                    : (i.push(n),
                      e.firstCreatePass && Sf(e).push(r, i.length - 1));
            }
            function yf(e, t, n) {
                for (let r in e)
                    if (e.hasOwnProperty(r)) {
                        const i = e[r];
                        (n = null === n ? {} : n).hasOwnProperty(r)
                            ? n[r].push(t, i)
                            : (n[r] = [t, i]);
                    }
                return n;
            }
            function Vu(e, t, n, r) {
                let i = !1;
                if (ns()) {
                    const a = (function r_(e, t, n) {
                            const r = e.directiveRegistry;
                            let i = null;
                            if (r)
                                for (let a = 0; a < r.length; a++) {
                                    const l = r[a];
                                    Yd(n, l.selectors, !1) &&
                                        (i || (i = []),
                                        c(os(n, t), e, l.type),
                                        Jt(l)
                                            ? (Df(e, n), i.unshift(l))
                                            : i.push(l));
                                }
                            return i;
                        })(e, t, n),
                        l = null === r ? null : { '': -1 };
                    if (null !== a) {
                        (i = !0), Cf(n, e.data.length, a.length);
                        for (let x = 0; x < a.length; x++) {
                            const W = a[x];
                            W.providersResolver && W.providersResolver(W);
                        }
                        let p = !1,
                            y = !1,
                            O = ya(e, t, a.length, null);
                        for (let x = 0; x < a.length; x++) {
                            const W = a[x];
                            (n.mergedAttrs = eo(n.mergedAttrs, W.hostAttrs)),
                                bf(e, n, t, O, W),
                                s_(O, W, l),
                                null !== W.contentQueries && (n.flags |= 8),
                                (null !== W.hostBindings ||
                                    null !== W.hostAttrs ||
                                    0 !== W.hostVars) &&
                                    (n.flags |= 128);
                            const he = W.type.prototype;
                            !p &&
                                (he.ngOnChanges ||
                                    he.ngOnInit ||
                                    he.ngDoCheck) &&
                                ((
                                    e.preOrderHooks || (e.preOrderHooks = [])
                                ).push(n.index),
                                (p = !0)),
                                !y &&
                                    (he.ngOnChanges || he.ngDoCheck) &&
                                    ((
                                        e.preOrderCheckHooks ||
                                        (e.preOrderCheckHooks = [])
                                    ).push(n.index),
                                    (y = !0)),
                                O++;
                        }
                        !(function Qy(e, t) {
                            const r = t.directiveEnd,
                                i = e.data,
                                a = t.attrs,
                                l = [];
                            let p = null,
                                y = null;
                            for (let O = t.directiveStart; O < r; O++) {
                                const x = i[O],
                                    W = x.inputs,
                                    he = null === a || Kd(t) ? null : l_(W, a);
                                l.push(he),
                                    (p = yf(W, O, p)),
                                    (y = yf(x.outputs, O, y));
                            }
                            null !== p &&
                                (p.hasOwnProperty('class') && (t.flags |= 16),
                                p.hasOwnProperty('style') && (t.flags |= 32)),
                                (t.initialInputs = l),
                                (t.inputs = p),
                                (t.outputs = y);
                        })(e, n);
                    }
                    l &&
                        (function i_(e, t, n) {
                            if (t) {
                                const r = (e.localNames = []);
                                for (let i = 0; i < t.length; i += 2) {
                                    const a = n[t[i + 1]];
                                    if (null == a) throw new Re(-301, !1);
                                    r.push(t[i], a);
                                }
                            }
                        })(n, r, l);
                }
                return (n.mergedAttrs = eo(n.mergedAttrs, n.attrs)), i;
            }
            function vf(e, t, n, r, i, a) {
                const l = a.hostBindings;
                if (l) {
                    let p = e.hostBindingOpCodes;
                    null === p && (p = e.hostBindingOpCodes = []);
                    const y = ~t.index;
                    (function e_(e) {
                        let t = e.length;
                        for (; t > 0; ) {
                            const n = e[--t];
                            if ('number' == typeof n && n < 0) return n;
                        }
                        return 0;
                    })(p) != y && p.push(y),
                        p.push(r, i, l);
                }
            }
            function Ef(e, t) {
                null !== e.hostBindings && e.hostBindings(1, t);
            }
            function Df(e, t) {
                (t.flags |= 2),
                    (e.components || (e.components = [])).push(t.index);
            }
            function s_(e, t, n) {
                if (n) {
                    if (t.exportAs)
                        for (let r = 0; r < t.exportAs.length; r++)
                            n[t.exportAs[r]] = e;
                    Jt(t) && (n[''] = e);
                }
            }
            function Cf(e, t, n) {
                (e.flags |= 1),
                    (e.directiveStart = t),
                    (e.directiveEnd = t + n),
                    (e.providerIndexes = t);
            }
            function bf(e, t, n, r, i) {
                e.data[r] = i;
                const a = i.factory || (i.factory = Jr(i.type)),
                    l = new Oi(a, Jt(i), null);
                (e.blueprint[r] = l),
                    (n[r] = l),
                    vf(e, t, 0, r, ya(e, n, i.hostVars, ln), i);
            }
            function o_(e, t, n) {
                const r = ze(t, e),
                    i = hf(n),
                    a = e[10],
                    l = Pl(
                        e,
                        qa(
                            e,
                            i,
                            null,
                            n.onPush ? 64 : 16,
                            r,
                            t,
                            a,
                            a.createRenderer(r, n),
                            null,
                            null
                        )
                    );
                e[t.index] = l;
            }
            function po(e, t, n, r, i, a) {
                const l = ze(e, t);
                !(function Uu(e, t, n, r, i, a, l) {
                    if (null == a)
                        Qt(e)
                            ? e.removeAttribute(t, i, n)
                            : t.removeAttribute(i);
                    else {
                        const p = null == l ? ae(a) : l(a, r || '', i);
                        Qt(e)
                            ? e.setAttribute(t, i, p, n)
                            : n
                            ? t.setAttributeNS(n, i, p)
                            : t.setAttribute(i, p);
                    }
                })(t[11], l, a, e.value, n, r, i);
            }
            function a_(e, t, n, r, i, a) {
                const l = a[t];
                if (null !== l) {
                    const p = r.setInput;
                    for (let y = 0; y < l.length; ) {
                        const O = l[y++],
                            x = l[y++],
                            W = l[y++];
                        null !== p ? r.setInput(n, W, O, x) : (n[x] = W);
                    }
                }
            }
            function l_(e, t) {
                let n = null,
                    r = 0;
                for (; r < t.length; ) {
                    const i = t[r];
                    if (0 !== i)
                        if (5 !== i) {
                            if ('number' == typeof i) break;
                            e.hasOwnProperty(i) &&
                                (null === n && (n = []),
                                n.push(i, e[i], t[r + 1])),
                                (r += 2);
                        } else r += 2;
                    else r += 4;
                }
                return n;
            }
            function Af(e, t, n, r) {
                return new Array(e, !0, !1, t, null, 0, r, n, null, null);
            }
            function d_(e, t) {
                const n = Gt(t, e);
                if (tr(n)) {
                    const r = n[1];
                    80 & n[2] ? _a(r, n, r.template, n[8]) : n[5] > 0 && ju(n);
                }
            }
            function ju(e) {
                for (let r = gu(e); null !== r; r = mu(r))
                    for (let i = 10; i < r.length; i++) {
                        const a = r[i];
                        if (1024 & a[2]) {
                            const l = a[1];
                            _a(l, a, l.template, a[8]);
                        } else a[5] > 0 && ju(a);
                    }
                const n = e[1].components;
                if (null !== n)
                    for (let r = 0; r < n.length; r++) {
                        const i = Gt(n[r], e);
                        tr(i) && i[5] > 0 && ju(i);
                    }
            }
            function f_(e, t) {
                const n = Gt(t, e),
                    r = n[1];
                (function h_(e, t) {
                    for (let n = t.length; n < e.blueprint.length; n++)
                        t.push(e.blueprint[n]);
                })(r, n),
                    Ja(r, n, n[8]);
            }
            function Pl(e, t) {
                return e[13] ? (e[14][4] = t) : (e[13] = t), (e[14] = t), t;
            }
            function Hu(e) {
                for (; e; ) {
                    e[2] |= 64;
                    const t = Qa(e);
                    if (pr(e) && !t) return e;
                    e = t;
                }
                return null;
            }
            function Gu(e, t, n) {
                const r = t[10];
                r.begin && r.begin();
                try {
                    _a(e, t, e.template, n);
                } catch (i) {
                    throw (Mf(t, i), i);
                } finally {
                    r.end && r.end();
                }
            }
            function wf(e) {
                !(function $u(e) {
                    for (let t = 0; t < e.components.length; t++) {
                        const n = e.components[t],
                            r = cu(n),
                            i = r[1];
                        zy(i, r, i.template, n);
                    }
                })(e[8]);
            }
            function Wu(e, t, n) {
                Cn(0), t(e, n);
            }
            const y_ = (() => Promise.resolve(null))();
            function Tf(e) {
                return e[7] || (e[7] = []);
            }
            function Sf(e) {
                return e.cleanup || (e.cleanup = []);
            }
            function Mf(e, t) {
                const n = e[9],
                    r = n ? n.get(Ya, null) : null;
                r && r.handleError(t);
            }
            function Of(e, t, n, r, i) {
                for (let a = 0; a < n.length; ) {
                    const l = n[a++],
                        p = n[a++],
                        y = t[l],
                        O = e.data[l];
                    null !== O.setInput ? O.setInput(y, i, r, p) : (y[p] = i);
                }
            }
            function To(e, t, n) {
                const r = ke(t, e);
                !(function Od(e, t, n) {
                    Qt(e) ? e.setValue(t, n) : (t.textContent = n);
                })(e[11], r, n);
            }
            function Rl(e, t, n) {
                let r = n ? e.styles : null,
                    i = n ? e.classes : null,
                    a = 0;
                if (null !== t)
                    for (let l = 0; l < t.length; l++) {
                        const p = t[l];
                        'number' == typeof p
                            ? (a = p)
                            : 1 == a
                            ? (i = K(i, p))
                            : 2 == a && (r = K(r, p + ': ' + t[++l] + ';'));
                    }
                n ? (e.styles = r) : (e.stylesWithoutHost = r),
                    n ? (e.classes = i) : (e.classesWithoutHost = i);
            }
            const zu = new Cr('INJECTOR', -1);
            class Pf {
                get(t, n = S) {
                    if (n === S) {
                        const r = new Error(
                            `NullInjectorError: No provider for ${ne(t)}!`
                        );
                        throw ((r.name = 'NullInjectorError'), r);
                    }
                    return n;
                }
            }
            const Ku = new Cr('Set Injector scope.'),
                Xa = {},
                E_ = {};
            let Yu;
            function Rf() {
                return void 0 === Yu && (Yu = new Pf()), Yu;
            }
            function Ff(e, t = null, n = null, r) {
                const i = xf(e, t, n, r);
                return i._resolveInjectorDefTypes(), i;
            }
            function xf(e, t = null, n = null, r) {
                return new D_(e, n, t || Rf(), r);
            }
            class D_ {
                constructor(t, n, r, i = null) {
                    (this.parent = r),
                        (this.records = new Map()),
                        (this.injectorDefTypes = new Set()),
                        (this.onDestroy = new Set()),
                        (this._destroyed = !1);
                    const a = [];
                    n && Bi(n, (p) => this.processProvider(p, t, n)),
                        Bi([t], (p) => this.processInjectorType(p, [], a)),
                        this.records.set(zu, va(void 0, this));
                    const l = this.records.get(Ku);
                    (this.scope = null != l ? l.value : null),
                        (this.source =
                            i || ('object' == typeof t ? null : ne(t)));
                }
                get destroyed() {
                    return this._destroyed;
                }
                destroy() {
                    this.assertNotDestroyed(), (this._destroyed = !0);
                    try {
                        this.onDestroy.forEach((t) => t.ngOnDestroy());
                    } finally {
                        this.records.clear(),
                            this.onDestroy.clear(),
                            this.injectorDefTypes.clear();
                    }
                }
                get(t, n = S, r = yt.Default) {
                    this.assertNotDestroyed();
                    const i = R(this),
                        a = rn(void 0);
                    try {
                        if (!(r & yt.SkipSelf)) {
                            let p = this.records.get(t);
                            if (void 0 === p) {
                                const y =
                                    (function M_(e) {
                                        return (
                                            'function' == typeof e ||
                                            ('object' == typeof e &&
                                                e instanceof Cr)
                                        );
                                    })(t) && Zt(t);
                                (p =
                                    y && this.injectableDefInScope(y)
                                        ? va(Qu(t), Xa)
                                        : null),
                                    this.records.set(t, p);
                            }
                            if (null != p) return this.hydrate(t, p);
                        }
                        return (r & yt.Self ? Rf() : this.parent).get(
                            t,
                            (n = r & yt.Optional && n === S ? null : n)
                        );
                    } catch (l) {
                        if ('NullInjectorError' === l.name) {
                            if (((l[ee] = l[ee] || []).unshift(ne(t)), i))
                                throw l;
                            return (function ht(e, t, n, r) {
                                const i = e[ee];
                                throw (
                                    (t[o] && i.unshift(t[o]),
                                    (e.message = (function mt(
                                        e,
                                        t,
                                        n,
                                        r = null
                                    ) {
                                        e =
                                            e &&
                                            '\n' === e.charAt(0) &&
                                            '\u0275' == e.charAt(1)
                                                ? e.substr(2)
                                                : e;
                                        let i = ne(t);
                                        if (Array.isArray(t))
                                            i = t.map(ne).join(' -> ');
                                        else if ('object' == typeof t) {
                                            let a = [];
                                            for (let l in t)
                                                if (t.hasOwnProperty(l)) {
                                                    let p = t[l];
                                                    a.push(
                                                        l +
                                                            ':' +
                                                            ('string' ==
                                                            typeof p
                                                                ? JSON.stringify(
                                                                      p
                                                                  )
                                                                : ne(p))
                                                    );
                                                }
                                            i = `{${a.join(', ')}}`;
                                        }
                                        return `${n}${
                                            r ? '(' + r + ')' : ''
                                        }[${i}]: ${e.replace(d, '\n  ')}`;
                                    })('\n' + e.message, i, n, r)),
                                    (e.ngTokenPath = i),
                                    (e[ee] = null),
                                    e)
                                );
                            })(l, t, 'R3InjectorError', this.source);
                        }
                        throw l;
                    } finally {
                        rn(a), R(i);
                    }
                }
                _resolveInjectorDefTypes() {
                    this.injectorDefTypes.forEach((t) => this.get(t));
                }
                toString() {
                    const t = [];
                    return (
                        this.records.forEach((r, i) => t.push(ne(i))),
                        `R3Injector[${t.join(', ')}]`
                    );
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new Re(205, !1);
                }
                processInjectorType(t, n, r) {
                    if (!(t = ie(t))) return !1;
                    let i = Wn(t);
                    const a = (null == i && t.ngModule) || void 0,
                        l = void 0 === a ? t : a,
                        p = -1 !== r.indexOf(l);
                    if ((void 0 !== a && (i = Wn(a)), null == i)) return !1;
                    if (null != i.imports && !p) {
                        let x;
                        r.push(l);
                        try {
                            Bi(i.imports, (W) => {
                                this.processInjectorType(W, n, r) &&
                                    (void 0 === x && (x = []), x.push(W));
                            });
                        } finally {
                        }
                        if (void 0 !== x)
                            for (let W = 0; W < x.length; W++) {
                                const { ngModule: he, providers: we } = x[W];
                                Bi(we, (Ge) =>
                                    this.processProvider(Ge, he, we || se)
                                );
                            }
                    }
                    this.injectorDefTypes.add(l);
                    const y = Jr(l) || (() => new l());
                    this.records.set(l, va(y, Xa));
                    const O = i.providers;
                    if (null != O && !p) {
                        const x = t;
                        Bi(O, (W) => this.processProvider(W, x, O));
                    }
                    return void 0 !== a && void 0 !== t.providers;
                }
                processProvider(t, n, r) {
                    let i = Ea((t = ie(t))) ? t : ie(t && t.provide);
                    const a = (function b_(e, t, n) {
                        return Lf(e) ? va(void 0, e.useValue) : va(Nf(e), Xa);
                    })(t);
                    if (Ea(t) || !0 !== t.multi) this.records.get(i);
                    else {
                        let l = this.records.get(i);
                        l ||
                            ((l = va(void 0, Xa, !0)),
                            (l.factory = () => it(l.multi)),
                            this.records.set(i, l)),
                            (i = t),
                            l.multi.push(t);
                    }
                    this.records.set(i, a);
                }
                hydrate(t, n) {
                    return (
                        n.value === Xa &&
                            ((n.value = E_), (n.value = n.factory())),
                        'object' == typeof n.value &&
                            n.value &&
                            (function I_(e) {
                                return (
                                    null !== e &&
                                    'object' == typeof e &&
                                    'function' == typeof e.ngOnDestroy
                                );
                            })(n.value) &&
                            this.onDestroy.add(n.value),
                        n.value
                    );
                }
                injectableDefInScope(t) {
                    if (!t.providedIn) return !1;
                    const n = ie(t.providedIn);
                    return 'string' == typeof n
                        ? 'any' === n || n === this.scope
                        : this.injectorDefTypes.has(n);
                }
            }
            function Qu(e) {
                const t = Zt(e),
                    n = null !== t ? t.factory : Jr(e);
                if (null !== n) return n;
                if (e instanceof Cr) throw new Re(204, !1);
                if (e instanceof Function)
                    return (function C_(e) {
                        const t = e.length;
                        if (t > 0) throw (io(t, '?'), new Re(204, !1));
                        const n = (function nn(e) {
                            const t = e && (e[Qn] || e[Ut]);
                            if (t) {
                                const n = (function Gn(e) {
                                    if (e.hasOwnProperty('name')) return e.name;
                                    const t = ('' + e).match(
                                        /^function\s*([^\s(]+)/
                                    );
                                    return null === t ? '' : t[1];
                                })(e);
                                return (
                                    console.warn(
                                        `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`
                                    ),
                                    t
                                );
                            }
                            return null;
                        })(e);
                        return null !== n ? () => n.factory(e) : () => new e();
                    })(e);
                throw new Re(204, !1);
            }
            function Nf(e, t, n) {
                let r;
                if (Ea(e)) {
                    const i = ie(e);
                    return Jr(i) || Qu(i);
                }
                if (Lf(e)) r = () => ie(e.useValue);
                else if (
                    (function w_(e) {
                        return !(!e || !e.useFactory);
                    })(e)
                )
                    r = () => e.useFactory(...it(e.deps || []));
                else if (
                    (function A_(e) {
                        return !(!e || !e.useExisting);
                    })(e)
                )
                    r = () => Y(ie(e.useExisting));
                else {
                    const i = ie(e && (e.useClass || e.provide));
                    if (
                        !(function S_(e) {
                            return !!e.deps;
                        })(e)
                    )
                        return Jr(i) || Qu(i);
                    r = () => new i(...it(e.deps));
                }
                return r;
            }
            function va(e, t, n = !1) {
                return { factory: e, value: t, multi: n ? [] : void 0 };
            }
            function Lf(e) {
                return null !== e && 'object' == typeof e && u in e;
            }
            function Ea(e) {
                return 'function' == typeof e;
            }
            let bs = (() => {
                class e {
                    static create(n, r) {
                        var i;
                        if (Array.isArray(n)) return Ff({ name: '' }, r, n, '');
                        {
                            const a =
                                null !== (i = n.name) && void 0 !== i ? i : '';
                            return Ff({ name: a }, n.parent, n.providers, a);
                        }
                    }
                }
                return (
                    (e.THROW_IF_NOT_FOUND = S),
                    (e.NULL = new Pf()),
                    (e.ɵprov = ct({
                        token: e,
                        providedIn: 'any',
                        factory: () => Y(zu),
                    })),
                    (e.__NG_ELEMENT_ID__ = -1),
                    e
                );
            })();
            function k_(e, t) {
                Os(cu(e)[1], Yn());
            }
            function Ju(e) {
                let t = (function Yf(e) {
                        return Object.getPrototypeOf(e.prototype).constructor;
                    })(e.type),
                    n = !0;
                const r = [e];
                for (; t; ) {
                    let i;
                    if (Jt(e)) i = t.ɵcmp || t.ɵdir;
                    else {
                        if (t.ɵcmp) throw new Re(903, '');
                        i = t.ɵdir;
                    }
                    if (i) {
                        if (n) {
                            r.push(i);
                            const l = e;
                            (l.inputs = Xu(e.inputs)),
                                (l.declaredInputs = Xu(e.declaredInputs)),
                                (l.outputs = Xu(e.outputs));
                            const p = i.hostBindings;
                            p && j_(e, p);
                            const y = i.viewQuery,
                                O = i.contentQueries;
                            if (
                                (y && V_(e, y),
                                O && U_(e, O),
                                X(e.inputs, i.inputs),
                                X(e.declaredInputs, i.declaredInputs),
                                X(e.outputs, i.outputs),
                                Jt(i) && i.data.animation)
                            ) {
                                const x = e.data;
                                x.animation = (x.animation || []).concat(
                                    i.data.animation
                                );
                            }
                        }
                        const a = i.features;
                        if (a)
                            for (let l = 0; l < a.length; l++) {
                                const p = a[l];
                                p && p.ngInherit && p(e), p === Ju && (n = !1);
                            }
                    }
                    t = Object.getPrototypeOf(t);
                }
                !(function B_(e) {
                    let t = 0,
                        n = null;
                    for (let r = e.length - 1; r >= 0; r--) {
                        const i = e[r];
                        (i.hostVars = t += i.hostVars),
                            (i.hostAttrs = eo(
                                i.hostAttrs,
                                (n = eo(n, i.hostAttrs))
                            ));
                    }
                })(r);
            }
            function Xu(e) {
                return e === wr ? {} : e === se ? [] : e;
            }
            function V_(e, t) {
                const n = e.viewQuery;
                e.viewQuery = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            function U_(e, t) {
                const n = e.contentQueries;
                e.contentQueries = n
                    ? (r, i, a) => {
                          t(r, i, a), n(r, i, a);
                      }
                    : t;
            }
            function j_(e, t) {
                const n = e.hostBindings;
                e.hostBindings = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            let Fl = null;
            function Da() {
                if (!Fl) {
                    const e = jt.Symbol;
                    if (e && e.iterator) Fl = e.iterator;
                    else {
                        const t = Object.getOwnPropertyNames(Map.prototype);
                        for (let n = 0; n < t.length; ++n) {
                            const r = t[n];
                            'entries' !== r &&
                                'size' !== r &&
                                Map.prototype[r] === Map.prototype.entries &&
                                (Fl = r);
                        }
                    }
                }
                return Fl;
            }
            function el(e) {
                return (
                    !!ec(e) &&
                    (Array.isArray(e) || (!(e instanceof Map) && Da() in e))
                );
            }
            function ec(e) {
                return (
                    null !== e &&
                    ('function' == typeof e || 'object' == typeof e)
                );
            }
            function go(e, t, n) {
                return (e[t] = n);
            }
            function tl(e, t) {
                return e[t];
            }
            function Fi(e, t, n) {
                return !Object.is(e[t], n) && ((e[t] = n), !0);
            }
            function Jo(e, t, n, r) {
                const i = Fi(e, t, n);
                return Fi(e, t + 1, r) || i;
            }
            function As(e, t, n, r, i, a) {
                const l = Jo(e, t, n, r);
                return Jo(e, t + 2, i, a) || l;
            }
            function tc(e, t, n, r) {
                const i = Ke();
                return Fi(i, di(), t) && (Xt(), po(ir(), i, e, t, n, r)), tc;
            }
            function ih(e, t, n, r, i, a, l, p) {
                const y = Ke(),
                    O = Xt(),
                    x = e + 20,
                    W = O.firstCreatePass
                        ? (function Y_(e, t, n, r, i, a, l, p, y) {
                              const O = t.consts,
                                  x = ma(t, e, 4, l || null, Nn(O, p));
                              Vu(t, n, x, Nn(O, y)), Os(t, x);
                              const W = (x.tViews = Ol(
                                  2,
                                  x,
                                  r,
                                  i,
                                  a,
                                  t.directiveRegistry,
                                  t.pipeRegistry,
                                  null,
                                  t.schemas,
                                  O
                              ));
                              return (
                                  null !== t.queries &&
                                      (t.queries.template(t, x),
                                      (W.queries = t.queries.embeddedTView(x))),
                                  x
                              );
                          })(x, O, y, t, n, r, i, a, l)
                        : O.data[x];
                Dr(W, !1);
                const he = y[11].createComment('');
                wl(O, y, he, W),
                    Ri(he, y),
                    Pl(y, (y[x] = Af(he, y, he, W))),
                    Un(W) && ku(O, y, W),
                    null != l && Bu(y, W, p);
            }
            function sh(e) {
                return dn(
                    (function Ts() {
                        return Ot.lFrame.contextLView;
                    })(),
                    20 + e
                );
            }
            function nl(e, t = yt.Default) {
                const n = Ke();
                return null === n ? Y(e, t) : Z(Yn(), n, ie(e), t);
            }
            function mh() {
                throw new Error('invalid');
            }
            function oc(e, t, n) {
                const r = Ke();
                return (
                    Fi(r, di(), t) &&
                        (function as(e, t, n, r, i, a, l, p) {
                            const y = ze(t, n);
                            let x,
                                O = t.inputs;
                            !p && null != O && (x = O[r])
                                ? (Of(e, n, x, r, i),
                                  Dn(t) &&
                                      (function qy(e, t) {
                                          const n = Gt(t, e);
                                          16 & n[2] || (n[2] |= 64);
                                      })(n, t.index))
                                : 3 & t.type &&
                                  ((r = (function Zy(e) {
                                      return 'class' === e
                                          ? 'className'
                                          : 'for' === e
                                          ? 'htmlFor'
                                          : 'formaction' === e
                                          ? 'formAction'
                                          : 'innerHtml' === e
                                          ? 'innerHTML'
                                          : 'readonly' === e
                                          ? 'readOnly'
                                          : 'tabindex' === e
                                          ? 'tabIndex'
                                          : e;
                                  })(r)),
                                  (i = null != l ? l(i, t.value || '', r) : i),
                                  Qt(a)
                                      ? a.setProperty(y, r, i)
                                      : Co(r) ||
                                        (y.setProperty
                                            ? y.setProperty(r, i)
                                            : (y[r] = i)));
                        })(Xt(), ir(), r, e, t, r[11], n, !1),
                    oc
                );
            }
            function ac(e, t, n, r, i) {
                const l = i ? 'class' : 'style';
                Of(e, n, t.inputs[l], l, r);
            }
            function lc(e, t, n, r) {
                const i = Ke(),
                    a = Xt(),
                    l = 20 + e,
                    p = i[11],
                    y = (i[l] = _u(
                        p,
                        t,
                        (function Ms() {
                            return Ot.lFrame.currentNamespace;
                        })()
                    )),
                    O = a.firstCreatePass
                        ? (function gv(e, t, n, r, i, a, l) {
                              const p = t.consts,
                                  O = ma(t, e, 2, i, Nn(p, a));
                              return (
                                  Vu(t, n, O, Nn(p, l)),
                                  null !== O.attrs && Rl(O, O.attrs, !1),
                                  null !== O.mergedAttrs &&
                                      Rl(O, O.mergedAttrs, !0),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, O),
                                  O
                              );
                          })(l, a, i, 0, t, n, r)
                        : a.data[l];
                Dr(O, !0);
                const x = O.mergedAttrs;
                null !== x && fr(p, y, x);
                const W = O.classes;
                null !== W && Au(p, y, W);
                const he = O.styles;
                null !== he && Gd(p, y, he),
                    64 != (64 & O.flags) && wl(a, i, y, O),
                    0 ===
                        (function Yi() {
                            return Ot.lFrame.elementDepthCount;
                        })() && Ri(y, i),
                    (function Ei() {
                        Ot.lFrame.elementDepthCount++;
                    })(),
                    Un(O) && (ku(a, i, O), ff(a, O, i)),
                    null !== r && Bu(i, O);
            }
            function uc() {
                let e = Yn();
                hs() ? ws() : ((e = e.parent), Dr(e, !1));
                const t = e;
                !(function Li() {
                    Ot.lFrame.elementDepthCount--;
                })();
                const n = Xt();
                n.firstCreatePass &&
                    (Os(n, e), pn(e) && n.queries.elementEnd(e)),
                    null != t.classesWithoutHost &&
                        (function Rs(e) {
                            return 0 != (16 & e.flags);
                        })(t) &&
                        ac(n, t, Ke(), t.classesWithoutHost, !0),
                    null != t.stylesWithoutHost &&
                        (function Eo(e) {
                            return 0 != (32 & e.flags);
                        })(t) &&
                        ac(n, t, Ke(), t.stylesWithoutHost, !1);
            }
            function yh(e, t, n, r) {
                lc(e, t, n, r), uc();
            }
            function cc(e, t, n) {
                const r = Ke(),
                    i = Xt(),
                    a = e + 20,
                    l = i.firstCreatePass
                        ? (function mv(e, t, n, r, i) {
                              const a = t.consts,
                                  l = Nn(a, r),
                                  p = ma(t, e, 8, 'ng-container', l);
                              return (
                                  null !== l && Rl(p, l, !0),
                                  Vu(t, n, p, Nn(a, i)),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, p),
                                  p
                              );
                          })(a, i, r, t, n)
                        : i.data[a];
                Dr(l, !0);
                const p = (r[a] = r[11].createComment(''));
                wl(i, r, p, l),
                    Ri(p, r),
                    Un(l) && (ku(i, r, l), ff(i, l, r)),
                    null != n && Bu(r, l);
            }
            function dc() {
                let e = Yn();
                const t = Xt();
                hs() ? ws() : ((e = e.parent), Dr(e, !1)),
                    t.firstCreatePass &&
                        (Os(t, e), pn(e) && t.queries.elementEnd(e));
            }
            function _h(e, t, n) {
                cc(e, t, n), dc();
            }
            function fc(e) {
                return !!e && 'function' == typeof e.then;
            }
            function vh(e) {
                return !!e && 'function' == typeof e.subscribe;
            }
            const Eh = vh;
            function hc(e, t, n, r) {
                const i = Ke(),
                    a = Xt(),
                    l = Yn();
                return (
                    (function Ch(e, t, n, r, i, a, l, p) {
                        const y = Un(r),
                            x = e.firstCreatePass && Sf(e),
                            W = t[8],
                            he = Tf(t);
                        let we = !0;
                        if (3 & r.type || p) {
                            const dt = ze(r, t),
                                wt = p ? p(dt) : dt,
                                Ye = he.length,
                                kt = p ? (On) => p(A(On[r.index])) : r.index;
                            if (Qt(n)) {
                                let On = null;
                                if (
                                    (!p &&
                                        y &&
                                        (On = (function _v(e, t, n, r) {
                                            const i = e.cleanup;
                                            if (null != i)
                                                for (
                                                    let a = 0;
                                                    a < i.length - 1;
                                                    a += 2
                                                ) {
                                                    const l = i[a];
                                                    if (
                                                        l === n &&
                                                        i[a + 1] === r
                                                    ) {
                                                        const p = t[7],
                                                            y = i[a + 2];
                                                        return p.length > y
                                                            ? p[y]
                                                            : null;
                                                    }
                                                    'string' == typeof l &&
                                                        (a += 2);
                                                }
                                            return null;
                                        })(e, t, i, r.index)),
                                    null !== On)
                                )
                                    ((
                                        On.__ngLastListenerFn__ || On
                                    ).__ngNextListenerFn__ = a),
                                        (On.__ngLastListenerFn__ = a),
                                        (we = !1);
                                else {
                                    a = pc(r, t, W, a, !1);
                                    const sr = n.listen(wt, i, a);
                                    he.push(a, sr),
                                        x && x.push(i, kt, Ye, Ye + 1);
                                }
                            } else
                                (a = pc(r, t, W, a, !0)),
                                    wt.addEventListener(i, a, l),
                                    he.push(a),
                                    x && x.push(i, kt, Ye, l);
                        } else a = pc(r, t, W, a, !1);
                        const Ge = r.outputs;
                        let nt;
                        if (we && null !== Ge && (nt = Ge[i])) {
                            const dt = nt.length;
                            if (dt)
                                for (let wt = 0; wt < dt; wt += 2) {
                                    const us =
                                            t[nt[wt]][nt[wt + 1]].subscribe(a),
                                        ta = he.length;
                                    he.push(a, us),
                                        x && x.push(i, r.index, ta, -(ta + 1));
                                }
                        }
                    })(a, i, i[11], l, e, t, !!n, r),
                    hc
                );
            }
            function bh(e, t, n, r) {
                try {
                    return !1 !== n(r);
                } catch (i) {
                    return Mf(e, i), !1;
                }
            }
            function pc(e, t, n, r, i) {
                return function a(l) {
                    if (l === Function) return r;
                    const p = 2 & e.flags ? Gt(e.index, t) : t;
                    0 == (32 & t[2]) && Hu(p);
                    let y = bh(t, 0, r, l),
                        O = a.__ngNextListenerFn__;
                    for (; O; )
                        (y = bh(t, 0, O, l) && y), (O = O.__ngNextListenerFn__);
                    return (
                        i &&
                            !1 === y &&
                            (l.preventDefault(), (l.returnValue = !1)),
                        y
                    );
                };
            }
            function Ah(e = 1) {
                return (function Zi(e) {
                    return (Ot.lFrame.contextLView = (function Ho(e, t) {
                        for (; e > 0; ) (t = t[15]), e--;
                        return t;
                    })(e, Ot.lFrame.contextLView))[8];
                })(e);
            }
            function vv(e, t) {
                let n = null;
                const r = (function Ty(e) {
                    const t = e.attrs;
                    if (null != t) {
                        const n = t.indexOf(5);
                        if (0 == (1 & n)) return t[n + 1];
                    }
                    return null;
                })(e);
                for (let i = 0; i < t.length; i++) {
                    const a = t[i];
                    if ('*' !== a) {
                        if (null === r ? Yd(e, a, !0) : My(r, a)) return i;
                    } else n = i;
                }
                return n;
            }
            function wh(e) {
                const t = Ke()[16][6];
                if (!t.projection) {
                    const r = (t.projection = io(e ? e.length : 1, null)),
                        i = r.slice();
                    let a = t.child;
                    for (; null !== a; ) {
                        const l = e ? vv(a, e) : 0;
                        null !== l &&
                            (i[l] ? (i[l].projectionNext = a) : (r[l] = a),
                            (i[l] = a)),
                            (a = a.next);
                    }
                }
            }
            function Th(e, t = 0, n) {
                const r = Ke(),
                    i = Xt(),
                    a = ma(i, 20 + e, 16, null, n || null);
                null === a.projection && (a.projection = t),
                    ws(),
                    64 != (64 & a.flags) &&
                        (function vy(e, t, n) {
                            $d(
                                t[11],
                                0,
                                t,
                                n,
                                Fd(e, n, t),
                                kd(n.parent || t[6], n, t)
                            );
                        })(i, r, a);
            }
            function Lh(e, t, n, r, i) {
                const a = e[n + 1],
                    l = null === t;
                let p = r ? Gs(a) : wo(a),
                    y = !1;
                for (; 0 !== p && (!1 === y || l); ) {
                    const x = e[p + 1];
                    Cv(e[p], t) && ((y = !0), (e[p + 1] = r ? Su(x) : wu(x))),
                        (p = r ? Gs(x) : wo(x));
                }
                y && (e[n + 1] = r ? wu(a) : Su(a));
            }
            function Cv(e, t) {
                return (
                    null === e ||
                    null == t ||
                    (Array.isArray(e) ? e[1] : e) === t ||
                    (!(!Array.isArray(e) || 'string' != typeof t) &&
                        Ds(e, t) >= 0)
                );
            }
            const si = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
            function kh(e) {
                return e.substring(si.key, si.keyEnd);
            }
            function bv(e) {
                return e.substring(si.value, si.valueEnd);
            }
            function Bh(e, t) {
                const n = si.textEnd;
                return n === t
                    ? -1
                    : ((t = si.keyEnd =
                          (function Tv(e, t, n) {
                              for (; t < n && e.charCodeAt(t) > 32; ) t++;
                              return t;
                          })(e, (si.key = t), n)),
                      Ra(e, t, n));
            }
            function Vh(e, t) {
                const n = si.textEnd;
                let r = (si.key = Ra(e, t, n));
                return n === r
                    ? -1
                    : ((r = si.keyEnd =
                          (function Sv(e, t, n) {
                              let r;
                              for (
                                  ;
                                  t < n &&
                                  (45 === (r = e.charCodeAt(t)) ||
                                      95 === r ||
                                      ((-33 & r) >= 65 && (-33 & r) <= 90) ||
                                      (r >= 48 && r <= 57));

                              )
                                  t++;
                              return t;
                          })(e, r, n)),
                      (r = jh(e, r, n)),
                      (r = si.value = Ra(e, r, n)),
                      (r = si.valueEnd =
                          (function Iv(e, t, n) {
                              let r = -1,
                                  i = -1,
                                  a = -1,
                                  l = t,
                                  p = l;
                              for (; l < n; ) {
                                  const y = e.charCodeAt(l++);
                                  if (59 === y) return p;
                                  34 === y || 39 === y
                                      ? (p = l = Hh(e, y, l, n))
                                      : t === l - 4 &&
                                        85 === a &&
                                        82 === i &&
                                        76 === r &&
                                        40 === y
                                      ? (p = l = Hh(e, 41, l, n))
                                      : y > 32 && (p = l),
                                      (a = i),
                                      (i = r),
                                      (r = -33 & y);
                              }
                              return p;
                          })(e, r, n)),
                      jh(e, r, n));
            }
            function Uh(e) {
                (si.key = 0),
                    (si.keyEnd = 0),
                    (si.value = 0),
                    (si.valueEnd = 0),
                    (si.textEnd = e.length);
            }
            function Ra(e, t, n) {
                for (; t < n && e.charCodeAt(t) <= 32; ) t++;
                return t;
            }
            function jh(e, t, n, r) {
                return (t = Ra(e, t, n)) < n && t++, t;
            }
            function Hh(e, t, n, r) {
                let i = -1,
                    a = n;
                for (; a < r; ) {
                    const l = e.charCodeAt(a++);
                    if (l == t && 92 !== i) return a;
                    i = 92 == l && 92 === i ? 0 : l;
                }
                throw new Error();
            }
            function mc(e, t) {
                return (
                    (function Ks(e, t, n, r) {
                        const i = Ke(),
                            a = Xt(),
                            l = Ci(2);
                        a.firstUpdatePass && zh(a, e, l, r),
                            t !== ln &&
                                Fi(i, l, t) &&
                                Yh(
                                    a,
                                    a.data[Or()],
                                    i,
                                    i[11],
                                    e,
                                    (i[l + 1] = (function Lv(e, t) {
                                        return (
                                            null == e ||
                                                ('string' == typeof t
                                                    ? (e += t)
                                                    : 'object' == typeof e &&
                                                      (e = ne(Bo(e)))),
                                            e
                                        );
                                    })(t, n)),
                                    r,
                                    l
                                );
                    })(e, t, null, !0),
                    mc
                );
            }
            function zs(e) {
                Ys(Kh, Mv, e, !1);
            }
            function Mv(e, t) {
                for (
                    let n = (function wv(e) {
                        return Uh(e), Vh(e, Ra(e, 0, si.textEnd));
                    })(t);
                    n >= 0;
                    n = Vh(t, n)
                )
                    Kh(e, kh(t), bv(t));
            }
            function Gh(e) {
                Ys(kr, mo, e, !0);
            }
            function mo(e, t) {
                for (
                    let n = (function Av(e) {
                        return Uh(e), Bh(e, Ra(e, 0, si.textEnd));
                    })(t);
                    n >= 0;
                    n = Bh(t, n)
                )
                    kr(e, kh(t), !0);
            }
            function Ys(e, t, n, r) {
                const i = Xt(),
                    a = Ci(2);
                i.firstUpdatePass && zh(i, null, a, r);
                const l = Ke();
                if (n !== ln && Fi(l, a, n)) {
                    const p = i.data[Or()];
                    if (Zh(p, r) && !Wh(i, a)) {
                        let y = r ? p.classesWithoutHost : p.stylesWithoutHost;
                        null !== y && (n = K(y, n || '')), ac(i, p, l, n, r);
                    } else
                        !(function Nv(e, t, n, r, i, a, l, p) {
                            i === ln && (i = se);
                            let y = 0,
                                O = 0,
                                x = 0 < i.length ? i[0] : null,
                                W = 0 < a.length ? a[0] : null;
                            for (; null !== x || null !== W; ) {
                                const he = y < i.length ? i[y + 1] : void 0,
                                    we = O < a.length ? a[O + 1] : void 0;
                                let nt,
                                    Ge = null;
                                x === W
                                    ? ((y += 2),
                                      (O += 2),
                                      he !== we && ((Ge = W), (nt = we)))
                                    : null === W || (null !== x && x < W)
                                    ? ((y += 2), (Ge = x))
                                    : ((O += 2), (Ge = W), (nt = we)),
                                    null !== Ge && Yh(e, t, n, r, Ge, nt, l, p),
                                    (x = y < i.length ? i[y] : null),
                                    (W = O < a.length ? a[O] : null);
                            }
                        })(
                            i,
                            p,
                            l,
                            l[11],
                            l[a + 1],
                            (l[a + 1] = (function xv(e, t, n) {
                                if (null == n || '' === n) return se;
                                const r = [],
                                    i = Bo(n);
                                if (Array.isArray(i))
                                    for (let a = 0; a < i.length; a++)
                                        e(r, i[a], !0);
                                else if ('object' == typeof i)
                                    for (const a in i)
                                        i.hasOwnProperty(a) && e(r, a, i[a]);
                                else 'string' == typeof i && t(r, i);
                                return r;
                            })(e, t, n)),
                            r,
                            a
                        );
                }
            }
            function Wh(e, t) {
                return t >= e.expandoStartIndex;
            }
            function zh(e, t, n, r) {
                const i = e.data;
                if (null === i[n + 1]) {
                    const a = i[Or()],
                        l = Wh(e, n);
                    Zh(a, r) && null === t && !l && (t = !1),
                        (t = (function Ov(e, t, n, r) {
                            const i = (function at(e) {
                                const t = Ot.lFrame.currentDirectiveIndex;
                                return -1 === t ? null : e[t];
                            })(e);
                            let a = r ? t.residualClasses : t.residualStyles;
                            if (null === i)
                                0 === (r ? t.classBindings : t.styleBindings) &&
                                    ((n = rl(
                                        (n = yc(null, e, t, n, r)),
                                        t.attrs,
                                        r
                                    )),
                                    (a = null));
                            else {
                                const l = t.directiveStylingLast;
                                if (-1 === l || e[l] !== i)
                                    if (((n = yc(i, e, t, n, r)), null === a)) {
                                        let y = (function Pv(e, t, n) {
                                            const r = n
                                                ? t.classBindings
                                                : t.styleBindings;
                                            if (0 !== wo(r)) return e[Gs(r)];
                                        })(e, t, r);
                                        void 0 !== y &&
                                            Array.isArray(y) &&
                                            ((y = yc(null, e, t, y[1], r)),
                                            (y = rl(y, t.attrs, r)),
                                            (function Rv(e, t, n, r) {
                                                e[
                                                    Gs(
                                                        n
                                                            ? t.classBindings
                                                            : t.styleBindings
                                                    )
                                                ] = r;
                                            })(e, t, r, y));
                                    } else
                                        a = (function Fv(e, t, n) {
                                            let r;
                                            const i = t.directiveEnd;
                                            for (
                                                let a =
                                                    1 + t.directiveStylingLast;
                                                a < i;
                                                a++
                                            )
                                                r = rl(r, e[a].hostAttrs, n);
                                            return rl(r, t.attrs, n);
                                        })(e, t, r);
                            }
                            return (
                                void 0 !== a &&
                                    (r
                                        ? (t.residualClasses = a)
                                        : (t.residualStyles = a)),
                                n
                            );
                        })(i, a, t, r)),
                        (function Ev(e, t, n, r, i, a) {
                            let l = a ? t.classBindings : t.styleBindings,
                                p = Gs(l),
                                y = wo(l);
                            e[r] = n;
                            let x,
                                O = !1;
                            if (Array.isArray(n)) {
                                const W = n;
                                (x = W[1]),
                                    (null === x || Ds(W, x) > 0) && (O = !0);
                            } else x = n;
                            if (i)
                                if (0 !== y) {
                                    const he = Gs(e[p + 1]);
                                    (e[r + 1] = Sl(he, p)),
                                        0 !== he &&
                                            (e[he + 1] = Tu(e[he + 1], r)),
                                        (e[p + 1] = (function Fy(e, t) {
                                            return (131071 & e) | (t << 17);
                                        })(e[p + 1], r));
                                } else
                                    (e[r + 1] = Sl(p, 0)),
                                        0 !== p && (e[p + 1] = Tu(e[p + 1], r)),
                                        (p = r);
                            else
                                (e[r + 1] = Sl(y, 0)),
                                    0 === p
                                        ? (p = r)
                                        : (e[y + 1] = Tu(e[y + 1], r)),
                                    (y = r);
                            O && (e[r + 1] = wu(e[r + 1])),
                                Lh(e, x, r, !0),
                                Lh(e, x, r, !1),
                                (function Dv(e, t, n, r, i) {
                                    const a = i
                                        ? e.residualClasses
                                        : e.residualStyles;
                                    null != a &&
                                        'string' == typeof t &&
                                        Ds(a, t) >= 0 &&
                                        (n[r + 1] = Su(n[r + 1]));
                                })(t, x, e, r, a),
                                (l = Sl(p, y)),
                                a
                                    ? (t.classBindings = l)
                                    : (t.styleBindings = l);
                        })(i, a, t, n, l, r);
                }
            }
            function yc(e, t, n, r, i) {
                let a = null;
                const l = n.directiveEnd;
                let p = n.directiveStylingLast;
                for (
                    -1 === p ? (p = n.directiveStart) : p++;
                    p < l && ((a = t[p]), (r = rl(r, a.hostAttrs, i)), a !== e);

                )
                    p++;
                return null !== e && (n.directiveStylingLast = p), r;
            }
            function rl(e, t, n) {
                const r = n ? 1 : 2;
                let i = -1;
                if (null !== t)
                    for (let a = 0; a < t.length; a++) {
                        const l = t[a];
                        'number' == typeof l
                            ? (i = l)
                            : i === r &&
                              (Array.isArray(e) ||
                                  (e = void 0 === e ? [] : ['', e]),
                              kr(e, l, !!n || t[++a]));
                    }
                return void 0 === e ? null : e;
            }
            function Kh(e, t, n) {
                kr(e, t, Bo(n));
            }
            function Yh(e, t, n, r, i, a, l, p) {
                if (!(3 & t.type)) return;
                const y = e.data,
                    O = y[p + 1];
                Ll(
                    (function ef(e) {
                        return 1 == (1 & e);
                    })(O)
                        ? Qh(y, t, n, i, wo(O), l)
                        : void 0
                ) ||
                    (Ll(a) ||
                        ((function Xd(e) {
                            return 2 == (2 & e);
                        })(O) &&
                            (a = Qh(y, null, n, i, p, l))),
                    (function Dy(e, t, n, r, i) {
                        const a = Qt(e);
                        if (t)
                            i
                                ? a
                                    ? e.addClass(n, r)
                                    : n.classList.add(r)
                                : a
                                ? e.removeClass(n, r)
                                : n.classList.remove(r);
                        else {
                            let l =
                                -1 === r.indexOf('-') ? void 0 : ho.DashCase;
                            if (null == i)
                                a
                                    ? e.removeStyle(n, r, l)
                                    : n.style.removeProperty(r);
                            else {
                                const p =
                                    'string' == typeof i &&
                                    i.endsWith('!important');
                                p &&
                                    ((i = i.slice(0, -10)),
                                    (l |= ho.Important)),
                                    a
                                        ? e.setStyle(n, r, i, l)
                                        : n.style.setProperty(
                                              r,
                                              i,
                                              p ? 'important' : ''
                                          );
                            }
                        }
                    })(r, l, ke(Or(), n), i, a));
            }
            function Qh(e, t, n, r, i, a) {
                const l = null === t;
                let p;
                for (; i > 0; ) {
                    const y = e[i],
                        O = Array.isArray(y),
                        x = O ? y[1] : y,
                        W = null === x;
                    let he = n[i + 1];
                    he === ln && (he = W ? se : void 0);
                    let we = W ? so(he, r) : x === r ? he : void 0;
                    if (
                        (O && !Ll(we) && (we = so(y, r)),
                        Ll(we) && ((p = we), l))
                    )
                        return p;
                    const Ge = e[i + 1];
                    i = l ? Gs(Ge) : wo(Ge);
                }
                if (null !== t) {
                    let y = a ? t.residualClasses : t.residualStyles;
                    null != y && (p = so(y, r));
                }
                return p;
            }
            function Ll(e) {
                return void 0 !== e;
            }
            function Zh(e, t) {
                return 0 != (e.flags & (t ? 16 : 32));
            }
            function qh(e, t = '') {
                const n = Ke(),
                    r = Xt(),
                    i = e + 20,
                    a = r.firstCreatePass ? ma(r, i, 1, t, null) : r.data[i],
                    l = (n[i] = (function yu(e, t) {
                        return Qt(e) ? e.createText(t) : e.createTextNode(t);
                    })(n[11], t));
                wl(r, n, l, a), Dr(a, !1);
            }
            function _c(e) {
                return kl('', e, ''), _c;
            }
            function kl(e, t, n) {
                const r = Ke(),
                    i = (function ba(e, t, n, r) {
                        return Fi(e, di(), n) ? t + ae(n) + r : ln;
                    })(r, e, t, n);
                return i !== ln && To(r, Or(), i), kl;
            }
            const Xo = void 0;
            var nE = [
                'en',
                [['a', 'p'], ['AM', 'PM'], Xo],
                [['AM', 'PM'], Xo, Xo],
                [
                    ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
                    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                    [
                        'Sunday',
                        'Monday',
                        'Tuesday',
                        'Wednesday',
                        'Thursday',
                        'Friday',
                        'Saturday',
                    ],
                    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                ],
                Xo,
                [
                    [
                        'J',
                        'F',
                        'M',
                        'A',
                        'M',
                        'J',
                        'J',
                        'A',
                        'S',
                        'O',
                        'N',
                        'D',
                    ],
                    [
                        'Jan',
                        'Feb',
                        'Mar',
                        'Apr',
                        'May',
                        'Jun',
                        'Jul',
                        'Aug',
                        'Sep',
                        'Oct',
                        'Nov',
                        'Dec',
                    ],
                    [
                        'January',
                        'February',
                        'March',
                        'April',
                        'May',
                        'June',
                        'July',
                        'August',
                        'September',
                        'October',
                        'November',
                        'December',
                    ],
                ],
                Xo,
                [
                    ['B', 'A'],
                    ['BC', 'AD'],
                    ['Before Christ', 'Anno Domini'],
                ],
                0,
                [6, 0],
                ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
                ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
                ['{1}, {0}', Xo, "{1} 'at' {0}", Xo],
                [
                    '.',
                    ',',
                    ';',
                    '%',
                    '+',
                    '-',
                    'E',
                    '\xd7',
                    '\u2030',
                    '\u221e',
                    'NaN',
                    ':',
                ],
                ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
                'USD',
                '$',
                'US Dollar',
                {},
                'ltr',
                function tE(e) {
                    const n = Math.floor(Math.abs(e)),
                        r = e.toString().replace(/^[^.]*\.?/, '').length;
                    return 1 === n && 0 === r ? 1 : 5;
                },
            ];
            let Fa = {};
            function vc(e) {
                const t = (function rE(e) {
                    return e.toLowerCase().replace(/_/g, '-');
                })(e);
                let n = _p(t);
                if (n) return n;
                const r = t.split('-')[0];
                if (((n = _p(r)), n)) return n;
                if ('en' === r) return nE;
                throw new Error(`Missing locale data for the locale "${e}".`);
            }
            function yp(e) {
                return vc(e)[zt.PluralCase];
            }
            function _p(e) {
                return (
                    e in Fa ||
                        (Fa[e] =
                            jt.ng &&
                            jt.ng.common &&
                            jt.ng.common.locales &&
                            jt.ng.common.locales[e]),
                    Fa[e]
                );
            }
            var zt = (() => (
                ((zt = zt || {})[(zt.LocaleId = 0)] = 'LocaleId'),
                (zt[(zt.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
                (zt[(zt.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
                (zt[(zt.DaysFormat = 3)] = 'DaysFormat'),
                (zt[(zt.DaysStandalone = 4)] = 'DaysStandalone'),
                (zt[(zt.MonthsFormat = 5)] = 'MonthsFormat'),
                (zt[(zt.MonthsStandalone = 6)] = 'MonthsStandalone'),
                (zt[(zt.Eras = 7)] = 'Eras'),
                (zt[(zt.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
                (zt[(zt.WeekendRange = 9)] = 'WeekendRange'),
                (zt[(zt.DateFormat = 10)] = 'DateFormat'),
                (zt[(zt.TimeFormat = 11)] = 'TimeFormat'),
                (zt[(zt.DateTimeFormat = 12)] = 'DateTimeFormat'),
                (zt[(zt.NumberSymbols = 13)] = 'NumberSymbols'),
                (zt[(zt.NumberFormats = 14)] = 'NumberFormats'),
                (zt[(zt.CurrencyCode = 15)] = 'CurrencyCode'),
                (zt[(zt.CurrencySymbol = 16)] = 'CurrencySymbol'),
                (zt[(zt.CurrencyName = 17)] = 'CurrencyName'),
                (zt[(zt.Currencies = 18)] = 'Currencies'),
                (zt[(zt.Directionality = 19)] = 'Directionality'),
                (zt[(zt.PluralCase = 20)] = 'PluralCase'),
                (zt[(zt.ExtraData = 21)] = 'ExtraData'),
                zt
            ))();
            const Bl = 'en-US';
            let vp = Bl;
            function Cc(e, t, n, r, i) {
                if (((e = ie(e)), Array.isArray(e)))
                    for (let a = 0; a < e.length; a++) Cc(e[a], t, n, r, i);
                else {
                    const a = Xt(),
                        l = Ke();
                    let p = Ea(e) ? e : ie(e.provide),
                        y = Nf(e);
                    const O = Yn(),
                        x = 1048575 & O.providerIndexes,
                        W = O.directiveStart,
                        he = O.providerIndexes >> 20;
                    if (Ea(e) || !e.multi) {
                        const we = new Oi(y, i, nl),
                            Ge = Ac(p, t, i ? x : x + he, W);
                        -1 === Ge
                            ? (c(os(O, l), a, p),
                              bc(a, e, t.length),
                              t.push(p),
                              O.directiveStart++,
                              O.directiveEnd++,
                              i && (O.providerIndexes += 1048576),
                              n.push(we),
                              l.push(we))
                            : ((n[Ge] = we), (l[Ge] = we));
                    } else {
                        const we = Ac(p, t, x + he, W),
                            Ge = Ac(p, t, x, x + he),
                            nt = we >= 0 && n[we],
                            dt = Ge >= 0 && n[Ge];
                        if ((i && !dt) || (!i && !nt)) {
                            c(os(O, l), a, p);
                            const wt = (function tD(e, t, n, r, i) {
                                const a = new Oi(e, n, nl);
                                return (
                                    (a.multi = []),
                                    (a.index = t),
                                    (a.componentProviders = 0),
                                    $p(a, i, r && !n),
                                    a
                                );
                            })(i ? eD : XE, n.length, i, r, y);
                            !i && dt && (n[Ge].providerFactory = wt),
                                bc(a, e, t.length, 0),
                                t.push(p),
                                O.directiveStart++,
                                O.directiveEnd++,
                                i && (O.providerIndexes += 1048576),
                                n.push(wt),
                                l.push(wt);
                        } else
                            bc(
                                a,
                                e,
                                we > -1 ? we : Ge,
                                $p(n[i ? Ge : we], y, !i && r)
                            );
                        !i && r && dt && n[Ge].componentProviders++;
                    }
                }
            }
            function bc(e, t, n, r) {
                const i = Ea(t),
                    a = (function T_(e) {
                        return !!e.useClass;
                    })(t);
                if (i || a) {
                    const y = (a ? ie(t.useClass) : t).prototype.ngOnDestroy;
                    if (y) {
                        const O = e.destroyHooks || (e.destroyHooks = []);
                        if (!i && t.multi) {
                            const x = O.indexOf(n);
                            -1 === x ? O.push(n, [r, y]) : O[x + 1].push(r, y);
                        } else O.push(n, y);
                    }
                }
            }
            function $p(e, t, n) {
                return n && e.componentProviders++, e.multi.push(t) - 1;
            }
            function Ac(e, t, n, r) {
                for (let i = n; i < r; i++) if (t[i] === e) return i;
                return -1;
            }
            function XE(e, t, n, r) {
                return wc(this.multi, []);
            }
            function eD(e, t, n, r) {
                const i = this.multi;
                let a;
                if (this.providerFactory) {
                    const l = this.providerFactory.componentProviders,
                        p = Tt(n, n[1], this.providerFactory.index, r);
                    (a = p.slice(0, l)), wc(i, a);
                    for (let y = l; y < p.length; y++) a.push(p[y]);
                } else (a = []), wc(i, a);
                return a;
            }
            function wc(e, t) {
                for (let n = 0; n < e.length; n++) t.push((0, e[n])());
                return t;
            }
            function Gp(e, t = []) {
                return (n) => {
                    n.providersResolver = (r, i) =>
                        (function JE(e, t, n) {
                            const r = Xt();
                            if (r.firstCreatePass) {
                                const i = Jt(e);
                                Cc(n, r.data, r.blueprint, i, !0),
                                    Cc(t, r.data, r.blueprint, i, !1);
                            }
                        })(r, i ? i(e) : e, t);
                };
            }
            class Wp {}
            class iD {
                resolveComponentFactory(t) {
                    throw (function rD(e) {
                        const t = Error(
                            `No component factory found for ${ne(
                                e
                            )}. Did you add it to @NgModule.entryComponents?`
                        );
                        return (t.ngComponent = e), t;
                    })(t);
                }
            }
            let ll = (() => {
                class e {}
                return (e.NULL = new iD()), e;
            })();
            function sD() {
                return Na(Yn(), Ke());
            }
            function Na(e, t) {
                return new ul(ze(e, t));
            }
            let ul = (() => {
                class e {
                    constructor(n) {
                        this.nativeElement = n;
                    }
                }
                return (e.__NG_ELEMENT_ID__ = sD), e;
            })();
            function oD(e) {
                return e instanceof ul ? e.nativeElement : e;
            }
            class Kp {}
            let aD = (() => {
                    class e {}
                    return (
                        (e.__NG_ELEMENT_ID__ = () =>
                            (function uD() {
                                const e = Ke(),
                                    n = Gt(Yn().index, e);
                                return (function lD(e) {
                                    return e[11];
                                })(Ze(n) ? n : e);
                            })()),
                        e
                    );
                })(),
                cD = (() => {
                    class e {}
                    return (
                        (e.ɵprov = ct({
                            token: e,
                            providedIn: 'root',
                            factory: () => null,
                        })),
                        e
                    );
                })();
            class Yp {
                constructor(t) {
                    (this.full = t),
                        (this.major = t.split('.')[0]),
                        (this.minor = t.split('.')[1]),
                        (this.patch = t.split('.').slice(2).join('.'));
                }
            }
            const Qp = new Yp('13.2.1'),
                Tc = {};
            function $l(e, t, n, r, i = !1) {
                for (; null !== n; ) {
                    const a = t[n.index];
                    if ((null !== a && r.push(A(a)), Rt(a)))
                        for (let p = 10; p < a.length; p++) {
                            const y = a[p],
                                O = y[1].firstChild;
                            null !== O && $l(y[1], y, O, r);
                        }
                    const l = n.type;
                    if (8 & l) $l(e, t, n.child, r);
                    else if (32 & l) {
                        const p = pu(n, t);
                        let y;
                        for (; (y = p()); ) r.push(y);
                    } else if (16 & l) {
                        const p = jd(t, n);
                        if (Array.isArray(p)) r.push(...p);
                        else {
                            const y = Qa(t[16]);
                            $l(y[1], y, p, r, !0);
                        }
                    }
                    n = i ? n.projectionNext : n.next;
                }
                return r;
            }
            class cl {
                constructor(t, n) {
                    (this._lView = t),
                        (this._cdRefInjectingView = n),
                        (this._appRef = null),
                        (this._attachedToViewContainer = !1);
                }
                get rootNodes() {
                    const t = this._lView,
                        n = t[1];
                    return $l(n, t, n.firstChild, []);
                }
                get context() {
                    return this._lView[8];
                }
                set context(t) {
                    this._lView[8] = t;
                }
                get destroyed() {
                    return 256 == (256 & this._lView[2]);
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const t = this._lView[3];
                        if (Rt(t)) {
                            const n = t[8],
                                r = n ? n.indexOf(this) : -1;
                            r > -1 && (vu(t, r), No(n, r));
                        }
                        this._attachedToViewContainer = !1;
                    }
                    Rd(this._lView[1], this._lView);
                }
                onDestroy(t) {
                    mf(this._lView[1], this._lView, null, t);
                }
                markForCheck() {
                    Hu(this._cdRefInjectingView || this._lView);
                }
                detach() {
                    this._lView[2] &= -129;
                }
                reattach() {
                    this._lView[2] |= 128;
                }
                detectChanges() {
                    Gu(this._lView[1], this._lView, this.context);
                }
                checkNoChanges() {
                    !(function g_(e, t, n) {
                        gs(!0);
                        try {
                            Gu(e, t, n);
                        } finally {
                            gs(!1);
                        }
                    })(this._lView[1], this._lView, this.context);
                }
                attachToViewContainerRef() {
                    if (this._appRef) throw new Re(902, '');
                    this._attachedToViewContainer = !0;
                }
                detachFromAppRef() {
                    (this._appRef = null),
                        (function dy(e, t) {
                            Za(e, t, t[11], 2, null, null);
                        })(this._lView[1], this._lView);
                }
                attachToAppRef(t) {
                    if (this._attachedToViewContainer) throw new Re(902, '');
                    this._appRef = t;
                }
            }
            class dD extends cl {
                constructor(t) {
                    super(t), (this._view = t);
                }
                detectChanges() {
                    wf(this._view);
                }
                checkNoChanges() {
                    !(function m_(e) {
                        gs(!0);
                        try {
                            wf(e);
                        } finally {
                            gs(!1);
                        }
                    })(this._view);
                }
                get context() {
                    return null;
                }
            }
            class Zp extends ll {
                constructor(t) {
                    super(), (this.ngModule = t);
                }
                resolveComponentFactory(t) {
                    const n = $t(t);
                    return new Sc(n, this.ngModule);
                }
            }
            function qp(e) {
                const t = [];
                for (let n in e)
                    e.hasOwnProperty(n) &&
                        t.push({ propName: e[n], templateName: n });
                return t;
            }
            const hD = new Cr('SCHEDULER_TOKEN', {
                providedIn: 'root',
                factory: () => Ad,
            });
            class Sc extends Wp {
                constructor(t, n) {
                    super(),
                        (this.componentDef = t),
                        (this.ngModule = n),
                        (this.componentType = t.type),
                        (this.selector = (function Py(e) {
                            return e.map(Oy).join(',');
                        })(t.selectors)),
                        (this.ngContentSelectors = t.ngContentSelectors
                            ? t.ngContentSelectors
                            : []),
                        (this.isBoundToModule = !!n);
                }
                get inputs() {
                    return qp(this.componentDef.inputs);
                }
                get outputs() {
                    return qp(this.componentDef.outputs);
                }
                create(t, n, r, i) {
                    const a = (i = i || this.ngModule)
                            ? (function pD(e, t) {
                                  return {
                                      get: (n, r, i) => {
                                          const a = e.get(n, Tc, i);
                                          return a !== Tc || r === Tc
                                              ? a
                                              : t.get(n, r, i);
                                      },
                                  };
                              })(t, i.injector)
                            : t,
                        l = a.get(Kp, T),
                        p = a.get(cD, null),
                        y = l.createRenderer(null, this.componentDef),
                        O = this.componentDef.selectors[0][0] || 'div',
                        x = r
                            ? (function gf(e, t, n) {
                                  if (Qt(e))
                                      return e.selectRootElement(
                                          t,
                                          n === Pt.ShadowDom
                                      );
                                  let r =
                                      'string' == typeof t
                                          ? e.querySelector(t)
                                          : t;
                                  return (r.textContent = ''), r;
                              })(y, r, this.componentDef.encapsulation)
                            : _u(
                                  l.createRenderer(null, this.componentDef),
                                  O,
                                  (function fD(e) {
                                      const t = e.toLowerCase();
                                      return 'svg' === t
                                          ? 'svg'
                                          : 'math' === t
                                          ? 'math'
                                          : null;
                                  })(O)
                              ),
                        W = this.componentDef.onPush ? 576 : 528,
                        he = (function Kf(e, t) {
                            return {
                                components: [],
                                scheduler: e || Ad,
                                clean: y_,
                                playerHandler: t || null,
                                flags: 0,
                            };
                        })(),
                        we = Ol(
                            0,
                            null,
                            null,
                            1,
                            0,
                            null,
                            null,
                            null,
                            null,
                            null
                        ),
                        Ge = qa(null, we, he, W, null, null, l, y, p, a);
                    let nt, dt;
                    hi(Ge);
                    try {
                        const wt = (function Wf(e, t, n, r, i, a) {
                            const l = n[1];
                            n[20] = e;
                            const y = ma(l, 20, 2, '#host', null),
                                O = (y.mergedAttrs = t.hostAttrs);
                            null !== O &&
                                (Rl(y, O, !0),
                                null !== e &&
                                    (fr(i, e, O),
                                    null !== y.classes && Au(i, e, y.classes),
                                    null !== y.styles && Gd(i, e, y.styles)));
                            const x = r.createRenderer(e, t),
                                W = qa(
                                    n,
                                    hf(t),
                                    null,
                                    t.onPush ? 64 : 16,
                                    n[20],
                                    y,
                                    r,
                                    x,
                                    a || null,
                                    null
                                );
                            return (
                                l.firstCreatePass &&
                                    (c(os(y, n), l, t.type),
                                    Df(l, y),
                                    Cf(y, n.length, 1)),
                                Pl(n, W),
                                (n[20] = W)
                            );
                        })(x, this.componentDef, Ge, l, y);
                        if (x)
                            if (r) fr(y, x, ['ng-version', Qp.full]);
                            else {
                                const { attrs: Ye, classes: kt } = (function Ry(
                                    e
                                ) {
                                    const t = [],
                                        n = [];
                                    let r = 1,
                                        i = 2;
                                    for (; r < e.length; ) {
                                        let a = e[r];
                                        if ('string' == typeof a)
                                            2 === i
                                                ? '' !== a && t.push(a, e[++r])
                                                : 8 === i && n.push(a);
                                        else {
                                            if (!$s(i)) break;
                                            i = a;
                                        }
                                        r++;
                                    }
                                    return { attrs: t, classes: n };
                                })(this.componentDef.selectors[0]);
                                Ye && fr(y, x, Ye),
                                    kt &&
                                        kt.length > 0 &&
                                        Au(y, x, kt.join(' '));
                            }
                        if (((dt = xt(we, 20)), void 0 !== n)) {
                            const Ye = (dt.projection = []);
                            for (
                                let kt = 0;
                                kt < this.ngContentSelectors.length;
                                kt++
                            ) {
                                const On = n[kt];
                                Ye.push(null != On ? Array.from(On) : null);
                            }
                        }
                        (nt = (function zf(e, t, n, r, i) {
                            const a = n[1],
                                l = (function Xy(e, t, n) {
                                    const r = Yn();
                                    e.firstCreatePass &&
                                        (n.providersResolver &&
                                            n.providersResolver(n),
                                        bf(e, r, t, ya(e, t, 1, null), n));
                                    const i = Tt(t, e, r.directiveStart, r);
                                    Ri(i, t);
                                    const a = ze(r, t);
                                    return a && Ri(a, t), i;
                                })(a, n, t);
                            if (
                                (r.components.push(l),
                                (e[8] = l),
                                i && i.forEach((y) => y(l, t)),
                                t.contentQueries)
                            ) {
                                const y = Yn();
                                t.contentQueries(1, l, y.directiveStart);
                            }
                            const p = Yn();
                            return (
                                !a.firstCreatePass ||
                                    (null === t.hostBindings &&
                                        null === t.hostAttrs) ||
                                    (ki(p.index),
                                    vf(
                                        n[1],
                                        p,
                                        0,
                                        p.directiveStart,
                                        p.directiveEnd,
                                        t
                                    ),
                                    Ef(t, l)),
                                l
                            );
                        })(wt, this.componentDef, Ge, he, [k_])),
                            Ja(we, Ge, null);
                    } finally {
                        Is();
                    }
                    return new mD(this.componentType, nt, Na(dt, Ge), Ge, dt);
                }
            }
            class mD extends class nD {} {
                constructor(t, n, r, i, a) {
                    super(),
                        (this.location = r),
                        (this._rootLView = i),
                        (this._tNode = a),
                        (this.instance = n),
                        (this.hostView = this.changeDetectorRef = new dD(i)),
                        (this.componentType = t);
                }
                get injector() {
                    return new Kr(this._tNode, this._rootLView);
                }
                destroy() {
                    this.hostView.destroy();
                }
                onDestroy(t) {
                    this.hostView.onDestroy(t);
                }
            }
            class La {}
            class Jp {}
            const ka = new Map();
            class tg extends La {
                constructor(t, n) {
                    super(),
                        (this._parent = n),
                        (this._bootstrapComponents = []),
                        (this.injector = this),
                        (this.destroyCbs = []),
                        (this.componentFactoryResolver = new Zp(this));
                    const r = Pn(t);
                    (this._bootstrapComponents = fo(r.bootstrap)),
                        (this._r3Injector = xf(
                            t,
                            n,
                            [
                                { provide: La, useValue: this },
                                {
                                    provide: ll,
                                    useValue: this.componentFactoryResolver,
                                },
                            ],
                            ne(t)
                        )),
                        this._r3Injector._resolveInjectorDefTypes(),
                        (this.instance = this.get(t));
                }
                get(t, n = bs.THROW_IF_NOT_FOUND, r = yt.Default) {
                    return t === bs || t === La || t === zu
                        ? this
                        : this._r3Injector.get(t, n, r);
                }
                destroy() {
                    const t = this._r3Injector;
                    !t.destroyed && t.destroy(),
                        this.destroyCbs.forEach((n) => n()),
                        (this.destroyCbs = null);
                }
                onDestroy(t) {
                    this.destroyCbs.push(t);
                }
            }
            class Ic extends Jp {
                constructor(t) {
                    super(),
                        (this.moduleType = t),
                        null !== Pn(t) &&
                            (function _D(e) {
                                const t = new Set();
                                !(function n(r) {
                                    const i = Pn(r, !0),
                                        a = i.id;
                                    null !== a &&
                                        ((function Xp(e, t, n) {
                                            if (t && t !== n)
                                                throw new Error(
                                                    `Duplicate module registered for ${e} - ${ne(
                                                        t
                                                    )} vs ${ne(t.name)}`
                                                );
                                        })(a, ka.get(a), r),
                                        ka.set(a, r));
                                    const l = fo(i.imports);
                                    for (const p of l)
                                        t.has(p) || (t.add(p), n(p));
                                })(e);
                            })(t);
                }
                create(t) {
                    return new tg(this.moduleType, t);
                }
            }
            function ng(e, t, n) {
                const r = mr() + e,
                    i = Ke();
                return i[r] === ln ? go(i, r, n ? t.call(n) : t()) : tl(i, r);
            }
            function rg(e, t, n, r, i, a, l) {
                return (function lg(e, t, n, r, i, a, l, p, y) {
                    const O = t + n;
                    return As(e, O, i, a, l, p)
                        ? go(
                              e,
                              O + 4,
                              y ? r.call(y, i, a, l, p) : r(i, a, l, p)
                          )
                        : dl(e, O + 4);
                })(Ke(), mr(), e, t, n, r, i, a, l);
            }
            function ig(e, t, n, r, i, a, l, p) {
                const y = mr() + e,
                    O = Ke(),
                    x = As(O, y, n, r, i, a);
                return Fi(O, y + 4, l) || x
                    ? go(
                          O,
                          y + 5,
                          p ? t.call(p, n, r, i, a, l) : t(n, r, i, a, l)
                      )
                    : tl(O, y + 5);
            }
            function dl(e, t) {
                const n = e[t];
                return n === ln ? void 0 : n;
            }
            function cg(e, t) {
                const n = Xt();
                let r;
                const i = e + 20;
                n.firstCreatePass
                    ? ((r = (function TD(e, t) {
                          if (t)
                              for (let n = t.length - 1; n >= 0; n--) {
                                  const r = t[n];
                                  if (e === r.name) return r;
                              }
                      })(t, n.pipeRegistry)),
                      (n.data[i] = r),
                      r.onDestroy &&
                          (n.destroyHooks || (n.destroyHooks = [])).push(
                              i,
                              r.onDestroy
                          ))
                    : (r = n.data[i]);
                const a = r.factory || (r.factory = Jr(r.type)),
                    l = rn(nl);
                try {
                    const p = no(!1),
                        y = a();
                    return (
                        no(p),
                        (function Q_(e, t, n, r) {
                            n >= e.data.length &&
                                ((e.data[n] = null), (e.blueprint[n] = null)),
                                (t[n] = r);
                        })(n, Ke(), i, y),
                        y
                    );
                } finally {
                    rn(l);
                }
            }
            function dg(e, t, n) {
                const r = e + 20,
                    i = Ke(),
                    a = dn(i, r);
                return (function fl(e, t) {
                    return e[1].data[t].pure;
                })(i, r)
                    ? (function sg(e, t, n, r, i, a) {
                          const l = t + n;
                          return Fi(e, l, i)
                              ? go(e, l + 1, a ? r.call(a, i) : r(i))
                              : dl(e, l + 1);
                      })(i, mr(), t, a.transform, n, a)
                    : a.transform(n);
            }
            function Mc(e) {
                return (t) => {
                    setTimeout(e, void 0, t);
                };
            }
            const yo = class PD extends f.x {
                constructor(t = !1) {
                    super(), (this.__isAsync = t);
                }
                emit(t) {
                    super.next(t);
                }
                subscribe(t, n, r) {
                    var i, a, l;
                    let p = t,
                        y = n || (() => null),
                        O = r;
                    if (t && 'object' == typeof t) {
                        const W = t;
                        (p =
                            null === (i = W.next) || void 0 === i
                                ? void 0
                                : i.bind(W)),
                            (y =
                                null === (a = W.error) || void 0 === a
                                    ? void 0
                                    : a.bind(W)),
                            (O =
                                null === (l = W.complete) || void 0 === l
                                    ? void 0
                                    : l.bind(W));
                    }
                    this.__isAsync &&
                        ((y = Mc(y)), p && (p = Mc(p)), O && (O = Mc(O)));
                    const x = super.subscribe({
                        next: p,
                        error: y,
                        complete: O,
                    });
                    return t instanceof P.w0 && t.add(x), x;
                }
            };
            function RD() {
                return this._results[Da()]();
            }
            class Oc {
                constructor(t = !1) {
                    (this._emitDistinctChangesOnly = t),
                        (this.dirty = !0),
                        (this._results = []),
                        (this._changesDetected = !1),
                        (this._changes = null),
                        (this.length = 0),
                        (this.first = void 0),
                        (this.last = void 0);
                    const n = Da(),
                        r = Oc.prototype;
                    r[n] || (r[n] = RD);
                }
                get changes() {
                    return this._changes || (this._changes = new yo());
                }
                get(t) {
                    return this._results[t];
                }
                map(t) {
                    return this._results.map(t);
                }
                filter(t) {
                    return this._results.filter(t);
                }
                find(t) {
                    return this._results.find(t);
                }
                reduce(t, n) {
                    return this._results.reduce(t, n);
                }
                forEach(t) {
                    this._results.forEach(t);
                }
                some(t) {
                    return this._results.some(t);
                }
                toArray() {
                    return this._results.slice();
                }
                toString() {
                    return this._results.toString();
                }
                reset(t, n) {
                    const r = this;
                    r.dirty = !1;
                    const i = Qr(t);
                    (this._changesDetected = !(function zo(e, t, n) {
                        if (e.length !== t.length) return !1;
                        for (let r = 0; r < e.length; r++) {
                            let i = e[r],
                                a = t[r];
                            if ((n && ((i = n(i)), (a = n(a))), a !== i))
                                return !1;
                        }
                        return !0;
                    })(r._results, i, n)) &&
                        ((r._results = i),
                        (r.length = i.length),
                        (r.last = i[this.length - 1]),
                        (r.first = i[0]));
                }
                notifyOnChanges() {
                    this._changes &&
                        (this._changesDetected ||
                            !this._emitDistinctChangesOnly) &&
                        this._changes.emit(this);
                }
                setDirty() {
                    this.dirty = !0;
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe();
                }
            }
            Symbol;
            let hl = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = ND), e;
            })();
            const FD = hl,
                xD = class extends FD {
                    constructor(t, n, r) {
                        super(),
                            (this._declarationLView = t),
                            (this._declarationTContainer = n),
                            (this.elementRef = r);
                    }
                    createEmbeddedView(t) {
                        const n = this._declarationTContainer.tViews,
                            r = qa(
                                this._declarationLView,
                                n,
                                t,
                                16,
                                null,
                                n.declTNode,
                                null,
                                null,
                                null,
                                null
                            );
                        r[17] =
                            this._declarationLView[
                                this._declarationTContainer.index
                            ];
                        const a = this._declarationLView[19];
                        return (
                            null !== a && (r[19] = a.createEmbeddedView(n)),
                            Ja(n, r, t),
                            new cl(r)
                        );
                    }
                };
            function ND() {
                return Gl(Yn(), Ke());
            }
            function Gl(e, t) {
                return 4 & e.type ? new xD(t, e, Na(e, t)) : null;
            }
            let Wl = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = LD), e;
            })();
            function LD() {
                return pg(Yn(), Ke());
            }
            const kD = Wl,
                fg = class extends kD {
                    constructor(t, n, r) {
                        super(),
                            (this._lContainer = t),
                            (this._hostTNode = n),
                            (this._hostLView = r);
                    }
                    get element() {
                        return Na(this._hostTNode, this._hostLView);
                    }
                    get injector() {
                        return new Kr(this._hostTNode, this._hostLView);
                    }
                    get parentInjector() {
                        const t = h(this._hostTNode, this._hostLView);
                        if (Oo(t)) {
                            const n = _s(t, this._hostLView),
                                r = ss(t);
                            return new Kr(n[1].data[r + 8], n);
                        }
                        return new Kr(null, this._hostLView);
                    }
                    clear() {
                        for (; this.length > 0; ) this.remove(this.length - 1);
                    }
                    get(t) {
                        const n = hg(this._lContainer);
                        return (null !== n && n[t]) || null;
                    }
                    get length() {
                        return this._lContainer.length - 10;
                    }
                    createEmbeddedView(t, n, r) {
                        const i = t.createEmbeddedView(n || {});
                        return this.insert(i, r), i;
                    }
                    createComponent(t, n, r, i, a) {
                        const l =
                            t &&
                            !(function Bs(e) {
                                return 'function' == typeof e;
                            })(t);
                        let p;
                        if (l) p = n;
                        else {
                            const W = n || {};
                            (p = W.index),
                                (r = W.injector),
                                (i = W.projectableNodes),
                                (a = W.ngModuleRef);
                        }
                        const y = l ? t : new Sc($t(t)),
                            O = r || this.parentInjector;
                        if (!a && null == y.ngModule && O) {
                            const W = O.get(La, null);
                            W && (a = W);
                        }
                        const x = y.create(O, i, void 0, a);
                        return this.insert(x.hostView, p), x;
                    }
                    insert(t, n) {
                        const r = t._lView,
                            i = r[1];
                        if (
                            (function Tn(e) {
                                return Rt(e[3]);
                            })(r)
                        ) {
                            const x = this.indexOf(t);
                            if (-1 !== x) this.detach(x);
                            else {
                                const W = r[3],
                                    he = new fg(W, W[6], W[3]);
                                he.detach(he.indexOf(t));
                            }
                        }
                        const a = this._adjustIndex(n),
                            l = this._lContainer;
                        !(function hy(e, t, n, r) {
                            const i = 10 + r,
                                a = n.length;
                            r > 0 && (n[i - 1][4] = t),
                                r < a - 10
                                    ? ((t[4] = n[i]), Ko(n, 10 + r, t))
                                    : (n.push(t), (t[4] = null)),
                                (t[3] = n);
                            const l = t[17];
                            null !== l &&
                                n !== l &&
                                (function py(e, t) {
                                    const n = e[9];
                                    t[16] !== t[3][3][16] && (e[2] = !0),
                                        null === n ? (e[9] = [t]) : n.push(t);
                                })(l, t);
                            const p = t[19];
                            null !== p && p.insertView(e), (t[2] |= 128);
                        })(i, r, l, a);
                        const p = Cu(a, l),
                            y = r[11],
                            O = Al(y, l[7]);
                        return (
                            null !== O &&
                                (function cy(e, t, n, r, i, a) {
                                    (r[0] = i),
                                        (r[6] = t),
                                        Za(e, r, n, 1, i, a);
                                })(i, l[6], y, r, O, p),
                            t.attachToViewContainerRef(),
                            Ko(Pc(l), a, t),
                            t
                        );
                    }
                    move(t, n) {
                        return this.insert(t, n);
                    }
                    indexOf(t) {
                        const n = hg(this._lContainer);
                        return null !== n ? n.indexOf(t) : -1;
                    }
                    remove(t) {
                        const n = this._adjustIndex(t, -1),
                            r = vu(this._lContainer, n);
                        r && (No(Pc(this._lContainer), n), Rd(r[1], r));
                    }
                    detach(t) {
                        const n = this._adjustIndex(t, -1),
                            r = vu(this._lContainer, n);
                        return r && null != No(Pc(this._lContainer), n)
                            ? new cl(r)
                            : null;
                    }
                    _adjustIndex(t, n = 0) {
                        return null == t ? this.length + n : t;
                    }
                };
            function hg(e) {
                return e[8];
            }
            function Pc(e) {
                return e[8] || (e[8] = []);
            }
            function pg(e, t) {
                let n;
                const r = t[e.index];
                if (Rt(r)) n = r;
                else {
                    let i;
                    if (8 & e.type) i = A(r);
                    else {
                        const a = t[11];
                        i = a.createComment('');
                        const l = ze(e, t);
                        qo(
                            a,
                            Al(a, l),
                            i,
                            (function _y(e, t) {
                                return Qt(e) ? e.nextSibling(t) : t.nextSibling;
                            })(a, l),
                            !1
                        );
                    }
                    (t[e.index] = n = Af(r, t, i, e)), Pl(t, n);
                }
                return new fg(n, e, t);
            }
            class Rc {
                constructor(t) {
                    (this.queryList = t), (this.matches = null);
                }
                clone() {
                    return new Rc(this.queryList);
                }
                setDirty() {
                    this.queryList.setDirty();
                }
            }
            class Fc {
                constructor(t = []) {
                    this.queries = t;
                }
                createEmbeddedView(t) {
                    const n = t.queries;
                    if (null !== n) {
                        const r =
                                null !== t.contentQueries
                                    ? t.contentQueries[0]
                                    : n.length,
                            i = [];
                        for (let a = 0; a < r; a++) {
                            const l = n.getByIndex(a);
                            i.push(
                                this.queries[l.indexInDeclarationView].clone()
                            );
                        }
                        return new Fc(i);
                    }
                    return null;
                }
                insertView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                detachView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                dirtyQueriesWithMatches(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        null !== Cg(t, n).matches && this.queries[n].setDirty();
                }
            }
            class gg {
                constructor(t, n, r = null) {
                    (this.predicate = t), (this.flags = n), (this.read = r);
                }
            }
            class xc {
                constructor(t = []) {
                    this.queries = t;
                }
                elementStart(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].elementStart(t, n);
                }
                elementEnd(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        this.queries[n].elementEnd(t);
                }
                embeddedTView(t) {
                    let n = null;
                    for (let r = 0; r < this.length; r++) {
                        const i = null !== n ? n.length : 0,
                            a = this.getByIndex(r).embeddedTView(t, i);
                        a &&
                            ((a.indexInDeclarationView = r),
                            null !== n ? n.push(a) : (n = [a]));
                    }
                    return null !== n ? new xc(n) : null;
                }
                template(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].template(t, n);
                }
                getByIndex(t) {
                    return this.queries[t];
                }
                get length() {
                    return this.queries.length;
                }
                track(t) {
                    this.queries.push(t);
                }
            }
            class Nc {
                constructor(t, n = -1) {
                    (this.metadata = t),
                        (this.matches = null),
                        (this.indexInDeclarationView = -1),
                        (this.crossesNgTemplate = !1),
                        (this._appliesToNextNode = !0),
                        (this._declarationNodeIndex = n);
                }
                elementStart(t, n) {
                    this.isApplyingToNode(n) && this.matchTNode(t, n);
                }
                elementEnd(t) {
                    this._declarationNodeIndex === t.index &&
                        (this._appliesToNextNode = !1);
                }
                template(t, n) {
                    this.elementStart(t, n);
                }
                embeddedTView(t, n) {
                    return this.isApplyingToNode(t)
                        ? ((this.crossesNgTemplate = !0),
                          this.addMatch(-t.index, n),
                          new Nc(this.metadata))
                        : null;
                }
                isApplyingToNode(t) {
                    if (
                        this._appliesToNextNode &&
                        1 != (1 & this.metadata.flags)
                    ) {
                        const n = this._declarationNodeIndex;
                        let r = t.parent;
                        for (; null !== r && 8 & r.type && r.index !== n; )
                            r = r.parent;
                        return n === (null !== r ? r.index : -1);
                    }
                    return this._appliesToNextNode;
                }
                matchTNode(t, n) {
                    const r = this.metadata.predicate;
                    if (Array.isArray(r))
                        for (let i = 0; i < r.length; i++) {
                            const a = r[i];
                            this.matchTNodeWithReadOption(t, n, UD(n, a)),
                                this.matchTNodeWithReadOption(
                                    t,
                                    n,
                                    on(n, t, a, !1, !1)
                                );
                        }
                    else
                        r === hl
                            ? 4 & n.type &&
                              this.matchTNodeWithReadOption(t, n, -1)
                            : this.matchTNodeWithReadOption(
                                  t,
                                  n,
                                  on(n, t, r, !1, !1)
                              );
                }
                matchTNodeWithReadOption(t, n, r) {
                    if (null !== r) {
                        const i = this.metadata.read;
                        if (null !== i)
                            if (
                                i === ul ||
                                i === Wl ||
                                (i === hl && 4 & n.type)
                            )
                                this.addMatch(n.index, -2);
                            else {
                                const a = on(n, t, i, !1, !1);
                                null !== a && this.addMatch(n.index, a);
                            }
                        else this.addMatch(n.index, r);
                    }
                }
                addMatch(t, n) {
                    null === this.matches
                        ? (this.matches = [t, n])
                        : this.matches.push(t, n);
                }
            }
            function UD(e, t) {
                const n = e.localNames;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2)
                        if (n[r] === t) return n[r + 1];
                return null;
            }
            function HD(e, t, n, r) {
                return -1 === n
                    ? (function jD(e, t) {
                          return 11 & e.type
                              ? Na(e, t)
                              : 4 & e.type
                              ? Gl(e, t)
                              : null;
                      })(t, e)
                    : -2 === n
                    ? (function $D(e, t, n) {
                          return n === ul
                              ? Na(t, e)
                              : n === hl
                              ? Gl(t, e)
                              : n === Wl
                              ? pg(t, e)
                              : void 0;
                      })(e, t, r)
                    : Tt(e, e[1], n, t);
            }
            function mg(e, t, n, r) {
                const i = t[19].queries[r];
                if (null === i.matches) {
                    const a = e.data,
                        l = n.matches,
                        p = [];
                    for (let y = 0; y < l.length; y += 2) {
                        const O = l[y];
                        p.push(
                            O < 0
                                ? null
                                : HD(t, a[O], l[y + 1], n.metadata.read)
                        );
                    }
                    i.matches = p;
                }
                return i.matches;
            }
            function Lc(e, t, n, r) {
                const i = e.queries.getByIndex(n),
                    a = i.matches;
                if (null !== a) {
                    const l = mg(e, t, i, n);
                    for (let p = 0; p < a.length; p += 2) {
                        const y = a[p];
                        if (y > 0) r.push(l[p / 2]);
                        else {
                            const O = a[p + 1],
                                x = t[-y];
                            for (let W = 10; W < x.length; W++) {
                                const he = x[W];
                                he[17] === he[3] && Lc(he[1], he, O, r);
                            }
                            if (null !== x[9]) {
                                const W = x[9];
                                for (let he = 0; he < W.length; he++) {
                                    const we = W[he];
                                    Lc(we[1], we, O, r);
                                }
                            }
                        }
                    }
                }
                return r;
            }
            function yg(e) {
                const t = Ke(),
                    n = Xt(),
                    r = yn();
                Cn(r + 1);
                const i = Cg(n, r);
                if (e.dirty && en(t) === (2 == (2 & i.metadata.flags))) {
                    if (null === i.matches) e.reset([]);
                    else {
                        const a = i.crossesNgTemplate
                            ? Lc(n, t, r, [])
                            : mg(n, t, i, r);
                        e.reset(a, oD), e.notifyOnChanges();
                    }
                    return !0;
                }
                return !1;
            }
            function _g(e, t, n, r) {
                const i = Xt();
                if (i.firstCreatePass) {
                    const a = Yn();
                    (function Dg(e, t, n) {
                        null === e.queries && (e.queries = new xc()),
                            e.queries.track(new Nc(t, n));
                    })(i, new gg(t, n, r), a.index),
                        (function zD(e, t) {
                            const n =
                                e.contentQueries || (e.contentQueries = []);
                            t !== (n.length ? n[n.length - 1] : -1) &&
                                n.push(e.queries.length - 1, t);
                        })(i, e),
                        2 == (2 & n) && (i.staticContentQueries = !0);
                }
                !(function Eg(e, t, n) {
                    const r = new Oc(4 == (4 & n));
                    mf(e, t, r, r.destroy),
                        null === t[19] && (t[19] = new Fc()),
                        t[19].queries.push(new Rc(r));
                })(i, Ke(), n);
            }
            function vg() {
                return (function WD(e, t) {
                    return e[19].queries[t].queryList;
                })(Ke(), yn());
            }
            function Cg(e, t) {
                return e.queries.getByIndex(t);
            }
            function bg(e, t) {
                return Gl(e, t);
            }
            function Yl(...e) {}
            const Hc = new Cr('Application Initializer');
            let Va = (() => {
                class e {
                    constructor(n) {
                        (this.appInits = n),
                            (this.resolve = Yl),
                            (this.reject = Yl),
                            (this.initialized = !1),
                            (this.done = !1),
                            (this.donePromise = new Promise((r, i) => {
                                (this.resolve = r), (this.reject = i);
                            }));
                    }
                    runInitializers() {
                        if (this.initialized) return;
                        const n = [],
                            r = () => {
                                (this.done = !0), this.resolve();
                            };
                        if (this.appInits)
                            for (let i = 0; i < this.appInits.length; i++) {
                                const a = this.appInits[i]();
                                if (fc(a)) n.push(a);
                                else if (Eh(a)) {
                                    const l = new Promise((p, y) => {
                                        a.subscribe({ complete: p, error: y });
                                    });
                                    n.push(l);
                                }
                            }
                        Promise.all(n)
                            .then(() => {
                                r();
                            })
                            .catch((i) => {
                                this.reject(i);
                            }),
                            0 === n.length && r(),
                            (this.initialized = !0);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Y(Hc, 8));
                    }),
                    (e.ɵprov = ct({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const Ug = new Cr('AppId'),
                cC = {
                    provide: Ug,
                    useFactory: function uC() {
                        return `${$c()}${$c()}${$c()}`;
                    },
                    deps: [],
                };
            function $c() {
                return String.fromCharCode(97 + Math.floor(25 * Math.random()));
            }
            const jg = new Cr('Platform Initializer'),
                Hg = new Cr('Platform ID'),
                $g = new Cr('appBootstrapListener');
            let Gg = (() => {
                class e {
                    log(n) {
                        console.log(n);
                    }
                    warn(n) {
                        console.warn(n);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = ct({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const Ql = new Cr('LocaleId'),
                Wg = new Cr('DefaultCurrencyCode');
            class dC {
                constructor(t, n) {
                    (this.ngModuleFactory = t), (this.componentFactories = n);
                }
            }
            let Gc = (() => {
                class e {
                    compileModuleSync(n) {
                        return new Ic(n);
                    }
                    compileModuleAsync(n) {
                        return Promise.resolve(this.compileModuleSync(n));
                    }
                    compileModuleAndAllComponentsSync(n) {
                        const r = this.compileModuleSync(n),
                            a = fo(Pn(n).declarations).reduce((l, p) => {
                                const y = $t(p);
                                return y && l.push(new Sc(y)), l;
                            }, []);
                        return new dC(r, a);
                    }
                    compileModuleAndAllComponentsAsync(n) {
                        return Promise.resolve(
                            this.compileModuleAndAllComponentsSync(n)
                        );
                    }
                    clearCache() {}
                    clearCacheFor(n) {}
                    getModuleId(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = ct({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const hC = (() => Promise.resolve(0))();
            function Wc(e) {
                'undefined' == typeof Zone
                    ? hC.then(() => {
                          e && e.apply(null, null);
                      })
                    : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
            }
            class ls {
                constructor({
                    enableLongStackTrace: t = !1,
                    shouldCoalesceEventChangeDetection: n = !1,
                    shouldCoalesceRunChangeDetection: r = !1,
                }) {
                    if (
                        ((this.hasPendingMacrotasks = !1),
                        (this.hasPendingMicrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new yo(!1)),
                        (this.onMicrotaskEmpty = new yo(!1)),
                        (this.onStable = new yo(!1)),
                        (this.onError = new yo(!1)),
                        'undefined' == typeof Zone)
                    )
                        throw new Error(
                            'In this configuration Angular requires Zone.js'
                        );
                    Zone.assertZonePatched();
                    const i = this;
                    (i._nesting = 0),
                        (i._outer = i._inner = Zone.current),
                        Zone.TaskTrackingZoneSpec &&
                            (i._inner = i._inner.fork(
                                new Zone.TaskTrackingZoneSpec()
                            )),
                        t &&
                            Zone.longStackTraceZoneSpec &&
                            (i._inner = i._inner.fork(
                                Zone.longStackTraceZoneSpec
                            )),
                        (i.shouldCoalesceEventChangeDetection = !r && n),
                        (i.shouldCoalesceRunChangeDetection = r),
                        (i.lastRequestAnimationFrameId = -1),
                        (i.nativeRequestAnimationFrame = (function pC() {
                            let e = jt.requestAnimationFrame,
                                t = jt.cancelAnimationFrame;
                            if ('undefined' != typeof Zone && e && t) {
                                const n =
                                    e[Zone.__symbol__('OriginalDelegate')];
                                n && (e = n);
                                const r =
                                    t[Zone.__symbol__('OriginalDelegate')];
                                r && (t = r);
                            }
                            return {
                                nativeRequestAnimationFrame: e,
                                nativeCancelAnimationFrame: t,
                            };
                        })().nativeRequestAnimationFrame),
                        (function yC(e) {
                            const t = () => {
                                !(function mC(e) {
                                    e.isCheckStableRunning ||
                                        -1 !== e.lastRequestAnimationFrameId ||
                                        ((e.lastRequestAnimationFrameId =
                                            e.nativeRequestAnimationFrame.call(
                                                jt,
                                                () => {
                                                    e.fakeTopEventTask ||
                                                        (e.fakeTopEventTask =
                                                            Zone.root.scheduleEventTask(
                                                                'fakeTopEventTask',
                                                                () => {
                                                                    (e.lastRequestAnimationFrameId =
                                                                        -1),
                                                                        Kc(e),
                                                                        (e.isCheckStableRunning =
                                                                            !0),
                                                                        zc(e),
                                                                        (e.isCheckStableRunning =
                                                                            !1);
                                                                },
                                                                void 0,
                                                                () => {},
                                                                () => {}
                                                            )),
                                                        e.fakeTopEventTask.invoke();
                                                }
                                            )),
                                        Kc(e));
                                })(e);
                            };
                            e._inner = e._inner.fork({
                                name: 'angular',
                                properties: { isAngularZone: !0 },
                                onInvokeTask: (n, r, i, a, l, p) => {
                                    try {
                                        return zg(e), n.invokeTask(i, a, l, p);
                                    } finally {
                                        ((e.shouldCoalesceEventChangeDetection &&
                                            'eventTask' === a.type) ||
                                            e.shouldCoalesceRunChangeDetection) &&
                                            t(),
                                            Kg(e);
                                    }
                                },
                                onInvoke: (n, r, i, a, l, p, y) => {
                                    try {
                                        return zg(e), n.invoke(i, a, l, p, y);
                                    } finally {
                                        e.shouldCoalesceRunChangeDetection &&
                                            t(),
                                            Kg(e);
                                    }
                                },
                                onHasTask: (n, r, i, a) => {
                                    n.hasTask(i, a),
                                        r === i &&
                                            ('microTask' == a.change
                                                ? ((e._hasPendingMicrotasks =
                                                      a.microTask),
                                                  Kc(e),
                                                  zc(e))
                                                : 'macroTask' == a.change &&
                                                  (e.hasPendingMacrotasks =
                                                      a.macroTask));
                                },
                                onHandleError: (n, r, i, a) => (
                                    n.handleError(i, a),
                                    e.runOutsideAngular(() =>
                                        e.onError.emit(a)
                                    ),
                                    !1
                                ),
                            });
                        })(i);
                }
                static isInAngularZone() {
                    return (
                        'undefined' != typeof Zone &&
                        !0 === Zone.current.get('isAngularZone')
                    );
                }
                static assertInAngularZone() {
                    if (!ls.isInAngularZone())
                        throw new Error(
                            'Expected to be in Angular Zone, but it is not!'
                        );
                }
                static assertNotInAngularZone() {
                    if (ls.isInAngularZone())
                        throw new Error(
                            'Expected to not be in Angular Zone, but it is!'
                        );
                }
                run(t, n, r) {
                    return this._inner.run(t, n, r);
                }
                runTask(t, n, r, i) {
                    const a = this._inner,
                        l = a.scheduleEventTask(
                            'NgZoneEvent: ' + i,
                            t,
                            gC,
                            Yl,
                            Yl
                        );
                    try {
                        return a.runTask(l, n, r);
                    } finally {
                        a.cancelTask(l);
                    }
                }
                runGuarded(t, n, r) {
                    return this._inner.runGuarded(t, n, r);
                }
                runOutsideAngular(t) {
                    return this._outer.run(t);
                }
            }
            const gC = {};
            function zc(e) {
                if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
                    try {
                        e._nesting++, e.onMicrotaskEmpty.emit(null);
                    } finally {
                        if ((e._nesting--, !e.hasPendingMicrotasks))
                            try {
                                e.runOutsideAngular(() =>
                                    e.onStable.emit(null)
                                );
                            } finally {
                                e.isStable = !0;
                            }
                    }
            }
            function Kc(e) {
                e.hasPendingMicrotasks = !!(
                    e._hasPendingMicrotasks ||
                    ((e.shouldCoalesceEventChangeDetection ||
                        e.shouldCoalesceRunChangeDetection) &&
                        -1 !== e.lastRequestAnimationFrameId)
                );
            }
            function zg(e) {
                e._nesting++,
                    e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
            }
            function Kg(e) {
                e._nesting--, zc(e);
            }
            class _C {
                constructor() {
                    (this.hasPendingMicrotasks = !1),
                        (this.hasPendingMacrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new yo()),
                        (this.onMicrotaskEmpty = new yo()),
                        (this.onStable = new yo()),
                        (this.onError = new yo());
                }
                run(t, n, r) {
                    return t.apply(n, r);
                }
                runGuarded(t, n, r) {
                    return t.apply(n, r);
                }
                runOutsideAngular(t) {
                    return t();
                }
                runTask(t, n, r, i) {
                    return t.apply(n, r);
                }
            }
            let Yg = (() => {
                    class e {
                        constructor(n) {
                            (this._ngZone = n),
                                (this._pendingCount = 0),
                                (this._isZoneStable = !0),
                                (this._didWork = !1),
                                (this._callbacks = []),
                                (this.taskTrackingZone = null),
                                this._watchAngularEvents(),
                                n.run(() => {
                                    this.taskTrackingZone =
                                        'undefined' == typeof Zone
                                            ? null
                                            : Zone.current.get(
                                                  'TaskTrackingZone'
                                              );
                                });
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    (this._didWork = !0),
                                        (this._isZoneStable = !1);
                                },
                            }),
                                this._ngZone.runOutsideAngular(() => {
                                    this._ngZone.onStable.subscribe({
                                        next: () => {
                                            ls.assertNotInAngularZone(),
                                                Wc(() => {
                                                    (this._isZoneStable = !0),
                                                        this._runCallbacksIfReady();
                                                });
                                        },
                                    });
                                });
                        }
                        increasePendingRequestCount() {
                            return (
                                (this._pendingCount += 1),
                                (this._didWork = !0),
                                this._pendingCount
                            );
                        }
                        decreasePendingRequestCount() {
                            if (
                                ((this._pendingCount -= 1),
                                this._pendingCount < 0)
                            )
                                throw new Error(
                                    'pending async requests below zero'
                                );
                            return (
                                this._runCallbacksIfReady(), this._pendingCount
                            );
                        }
                        isStable() {
                            return (
                                this._isZoneStable &&
                                0 === this._pendingCount &&
                                !this._ngZone.hasPendingMacrotasks
                            );
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable())
                                Wc(() => {
                                    for (; 0 !== this._callbacks.length; ) {
                                        let n = this._callbacks.pop();
                                        clearTimeout(n.timeoutId),
                                            n.doneCb(this._didWork);
                                    }
                                    this._didWork = !1;
                                });
                            else {
                                let n = this.getPendingTasks();
                                (this._callbacks = this._callbacks.filter(
                                    (r) =>
                                        !r.updateCb ||
                                        !r.updateCb(n) ||
                                        (clearTimeout(r.timeoutId), !1)
                                )),
                                    (this._didWork = !0);
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone
                                ? this.taskTrackingZone.macroTasks.map((n) => ({
                                      source: n.source,
                                      creationLocation: n.creationLocation,
                                      data: n.data,
                                  }))
                                : [];
                        }
                        addCallback(n, r, i) {
                            let a = -1;
                            r &&
                                r > 0 &&
                                (a = setTimeout(() => {
                                    (this._callbacks = this._callbacks.filter(
                                        (l) => l.timeoutId !== a
                                    )),
                                        n(
                                            this._didWork,
                                            this.getPendingTasks()
                                        );
                                }, r)),
                                this._callbacks.push({
                                    doneCb: n,
                                    timeoutId: a,
                                    updateCb: i,
                                });
                        }
                        whenStable(n, r, i) {
                            if (i && !this.taskTrackingZone)
                                throw new Error(
                                    'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                                );
                            this.addCallback(n, r, i),
                                this._runCallbacksIfReady();
                        }
                        getPendingRequestCount() {
                            return this._pendingCount;
                        }
                        findProviders(n, r, i) {
                            return [];
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)(Y(ls));
                        }),
                        (e.ɵprov = ct({ token: e, factory: e.ɵfac })),
                        e
                    );
                })(),
                Qg = (() => {
                    class e {
                        constructor() {
                            (this._applications = new Map()),
                                Yc.addToWindow(this);
                        }
                        registerApplication(n, r) {
                            this._applications.set(n, r);
                        }
                        unregisterApplication(n) {
                            this._applications.delete(n);
                        }
                        unregisterAllApplications() {
                            this._applications.clear();
                        }
                        getTestability(n) {
                            return this._applications.get(n) || null;
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values());
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys());
                        }
                        findTestabilityInTree(n, r = !0) {
                            return Yc.findTestabilityInTree(this, n, r);
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)();
                        }),
                        (e.ɵprov = ct({ token: e, factory: e.ɵfac })),
                        e
                    );
                })();
            class vC {
                addToWindow(t) {}
                findTestabilityInTree(t, n, r) {
                    return null;
                }
            }
            function EC(e) {
                Yc = e;
            }
            let Qs,
                Yc = new vC();
            const Zg = new Cr('AllowMultipleToken');
            class bC {
                constructor(t, n) {
                    (this.name = t), (this.token = n);
                }
            }
            function qg(e, t, n = []) {
                const r = `Platform: ${t}`,
                    i = new Cr(r);
                return (a = []) => {
                    let l = Jg();
                    if (!l || l.injector.get(Zg, !1))
                        if (e)
                            e(n.concat(a).concat({ provide: i, useValue: !0 }));
                        else {
                            const p = n
                                .concat(a)
                                .concat(
                                    { provide: i, useValue: !0 },
                                    { provide: Ku, useValue: 'platform' }
                                );
                            !(function AC(e) {
                                if (
                                    Qs &&
                                    !Qs.destroyed &&
                                    !Qs.injector.get(Zg, !1)
                                )
                                    throw new Re(400, '');
                                Qs = e.get(Xg);
                                const t = e.get(jg, null);
                                t && t.forEach((n) => n());
                            })(bs.create({ providers: p, name: r }));
                        }
                    return (function wC(e) {
                        const t = Jg();
                        if (!t) throw new Re(401, '');
                        return t;
                    })();
                };
            }
            function Jg() {
                return Qs && !Qs.destroyed ? Qs : null;
            }
            let Xg = (() => {
                class e {
                    constructor(n) {
                        (this._injector = n),
                            (this._modules = []),
                            (this._destroyListeners = []),
                            (this._destroyed = !1);
                    }
                    bootstrapModuleFactory(n, r) {
                        const p = (function TC(e, t) {
                                let n;
                                return (
                                    (n =
                                        'noop' === e
                                            ? new _C()
                                            : ('zone.js' === e ? void 0 : e) ||
                                              new ls({
                                                  enableLongStackTrace: !1,
                                                  shouldCoalesceEventChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneEventCoalescing),
                                                  shouldCoalesceRunChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneRunCoalescing),
                                              })),
                                    n
                                );
                            })(r ? r.ngZone : void 0, {
                                ngZoneEventCoalescing:
                                    (r && r.ngZoneEventCoalescing) || !1,
                                ngZoneRunCoalescing:
                                    (r && r.ngZoneRunCoalescing) || !1,
                            }),
                            y = [{ provide: ls, useValue: p }];
                        return p.run(() => {
                            const O = bs.create({
                                    providers: y,
                                    parent: this.injector,
                                    name: n.moduleType.name,
                                }),
                                x = n.create(O),
                                W = x.injector.get(Ya, null);
                            if (!W) throw new Re(402, '');
                            return (
                                p.runOutsideAngular(() => {
                                    const he = p.onError.subscribe({
                                        next: (we) => {
                                            W.handleError(we);
                                        },
                                    });
                                    x.onDestroy(() => {
                                        Qc(this._modules, x), he.unsubscribe();
                                    });
                                }),
                                (function SC(e, t, n) {
                                    try {
                                        const r = n();
                                        return fc(r)
                                            ? r.catch((i) => {
                                                  throw (
                                                      (t.runOutsideAngular(() =>
                                                          e.handleError(i)
                                                      ),
                                                      i)
                                                  );
                                              })
                                            : r;
                                    } catch (r) {
                                        throw (
                                            (t.runOutsideAngular(() =>
                                                e.handleError(r)
                                            ),
                                            r)
                                        );
                                    }
                                })(W, p, () => {
                                    const he = x.injector.get(Va);
                                    return (
                                        he.runInitializers(),
                                        he.donePromise.then(
                                            () => (
                                                (function aE(e) {
                                                    ot(
                                                        e,
                                                        'Expected localeId to be defined'
                                                    ),
                                                        'string' == typeof e &&
                                                            (vp = e
                                                                .toLowerCase()
                                                                .replace(
                                                                    /_/g,
                                                                    '-'
                                                                ));
                                                })(
                                                    x.injector.get(Ql, Bl) || Bl
                                                ),
                                                this._moduleDoBootstrap(x),
                                                x
                                            )
                                        )
                                    );
                                })
                            );
                        });
                    }
                    bootstrapModule(n, r = []) {
                        const i = em({}, r);
                        return (function DC(e, t, n) {
                            const r = new Ic(n);
                            return Promise.resolve(r);
                        })(0, 0, n).then((a) =>
                            this.bootstrapModuleFactory(a, i)
                        );
                    }
                    _moduleDoBootstrap(n) {
                        const r = n.injector.get(gl);
                        if (n._bootstrapComponents.length > 0)
                            n._bootstrapComponents.forEach((i) =>
                                r.bootstrap(i)
                            );
                        else {
                            if (!n.instance.ngDoBootstrap)
                                throw new Re(403, '');
                            n.instance.ngDoBootstrap(r);
                        }
                        this._modules.push(n);
                    }
                    onDestroy(n) {
                        this._destroyListeners.push(n);
                    }
                    get injector() {
                        return this._injector;
                    }
                    destroy() {
                        if (this._destroyed) throw new Re(404, '');
                        this._modules.slice().forEach((n) => n.destroy()),
                            this._destroyListeners.forEach((n) => n()),
                            (this._destroyed = !0);
                    }
                    get destroyed() {
                        return this._destroyed;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Y(bs));
                    }),
                    (e.ɵprov = ct({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            function em(e, t) {
                return Array.isArray(t)
                    ? t.reduce(em, e)
                    : Object.assign(Object.assign({}, e), t);
            }
            let gl = (() => {
                class e {
                    constructor(n, r, i, a, l) {
                        (this._zone = n),
                            (this._injector = r),
                            (this._exceptionHandler = i),
                            (this._componentFactoryResolver = a),
                            (this._initStatus = l),
                            (this._bootstrapListeners = []),
                            (this._views = []),
                            (this._runningTick = !1),
                            (this._stable = !0),
                            (this.componentTypes = []),
                            (this.components = []),
                            (this._onMicrotaskEmptySubscription =
                                this._zone.onMicrotaskEmpty.subscribe({
                                    next: () => {
                                        this._zone.run(() => {
                                            this.tick();
                                        });
                                    },
                                }));
                        const p = new j.y((O) => {
                                (this._stable =
                                    this._zone.isStable &&
                                    !this._zone.hasPendingMacrotasks &&
                                    !this._zone.hasPendingMicrotasks),
                                    this._zone.runOutsideAngular(() => {
                                        O.next(this._stable), O.complete();
                                    });
                            }),
                            y = new j.y((O) => {
                                let x;
                                this._zone.runOutsideAngular(() => {
                                    x = this._zone.onStable.subscribe(() => {
                                        ls.assertNotInAngularZone(),
                                            Wc(() => {
                                                !this._stable &&
                                                    !this._zone
                                                        .hasPendingMacrotasks &&
                                                    !this._zone
                                                        .hasPendingMicrotasks &&
                                                    ((this._stable = !0),
                                                    O.next(!0));
                                            });
                                    });
                                });
                                const W = this._zone.onUnstable.subscribe(
                                    () => {
                                        ls.assertInAngularZone(),
                                            this._stable &&
                                                ((this._stable = !1),
                                                this._zone.runOutsideAngular(
                                                    () => {
                                                        O.next(!1);
                                                    }
                                                ));
                                    }
                                );
                                return () => {
                                    x.unsubscribe(), W.unsubscribe();
                                };
                            });
                        this.isStable = (0, w.T)(p, y.pipe((0, H.B)()));
                    }
                    bootstrap(n, r) {
                        if (!this._initStatus.done) throw new Re(405, '');
                        let i;
                        (i =
                            n instanceof Wp
                                ? n
                                : this._componentFactoryResolver.resolveComponentFactory(
                                      n
                                  )),
                            this.componentTypes.push(i.componentType);
                        const a = (function CC(e) {
                                return e.isBoundToModule;
                            })(i)
                                ? void 0
                                : this._injector.get(La),
                            p = i.create(bs.NULL, [], r || i.selector, a),
                            y = p.location.nativeElement,
                            O = p.injector.get(Yg, null),
                            x = O && p.injector.get(Qg);
                        return (
                            O && x && x.registerApplication(y, O),
                            p.onDestroy(() => {
                                this.detachView(p.hostView),
                                    Qc(this.components, p),
                                    x && x.unregisterApplication(y);
                            }),
                            this._loadComponent(p),
                            p
                        );
                    }
                    tick() {
                        if (this._runningTick) throw new Re(101, '');
                        try {
                            this._runningTick = !0;
                            for (let n of this._views) n.detectChanges();
                        } catch (n) {
                            this._zone.runOutsideAngular(() =>
                                this._exceptionHandler.handleError(n)
                            );
                        } finally {
                            this._runningTick = !1;
                        }
                    }
                    attachView(n) {
                        const r = n;
                        this._views.push(r), r.attachToAppRef(this);
                    }
                    detachView(n) {
                        const r = n;
                        Qc(this._views, r), r.detachFromAppRef();
                    }
                    _loadComponent(n) {
                        this.attachView(n.hostView),
                            this.tick(),
                            this.components.push(n),
                            this._injector
                                .get($g, [])
                                .concat(this._bootstrapListeners)
                                .forEach((i) => i(n));
                    }
                    ngOnDestroy() {
                        this._views.slice().forEach((n) => n.destroy()),
                            this._onMicrotaskEmptySubscription.unsubscribe();
                    }
                    get viewCount() {
                        return this._views.length;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Y(ls), Y(bs), Y(Ya), Y(ll), Y(Va));
                    }),
                    (e.ɵprov = ct({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            function Qc(e, t) {
                const n = e.indexOf(t);
                n > -1 && e.splice(n, 1);
            }
            let nm = !0,
                rm = !1;
            function MC() {
                return (rm = !0), nm;
            }
            function OC() {
                if (rm)
                    throw new Error(
                        'Cannot enable prod mode after platform setup.'
                    );
                nm = !1;
            }
            let PC = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = RC), e;
            })();
            function RC(e) {
                return (function FC(e, t, n) {
                    if (Dn(e) && !n) {
                        const r = Gt(e.index, t);
                        return new cl(r, r);
                    }
                    return 47 & e.type ? new cl(t[16], t) : null;
                })(Yn(), Ke(), 16 == (16 & e));
            }
            class um {
                constructor() {}
                supports(t) {
                    return el(t);
                }
                create(t) {
                    return new VC(t);
                }
            }
            const BC = (e, t) => t;
            class VC {
                constructor(t) {
                    (this.length = 0),
                        (this._linkedRecords = null),
                        (this._unlinkedRecords = null),
                        (this._previousItHead = null),
                        (this._itHead = null),
                        (this._itTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._movesHead = null),
                        (this._movesTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null),
                        (this._identityChangesHead = null),
                        (this._identityChangesTail = null),
                        (this._trackByFn = t || BC);
                }
                forEachItem(t) {
                    let n;
                    for (n = this._itHead; null !== n; n = n._next) t(n);
                }
                forEachOperation(t) {
                    let n = this._itHead,
                        r = this._removalsHead,
                        i = 0,
                        a = null;
                    for (; n || r; ) {
                        const l =
                                !r || (n && n.currentIndex < dm(r, i, a))
                                    ? n
                                    : r,
                            p = dm(l, i, a),
                            y = l.currentIndex;
                        if (l === r) i--, (r = r._nextRemoved);
                        else if (((n = n._next), null == l.previousIndex)) i++;
                        else {
                            a || (a = []);
                            const O = p - i,
                                x = y - i;
                            if (O != x) {
                                for (let he = 0; he < O; he++) {
                                    const we =
                                            he < a.length ? a[he] : (a[he] = 0),
                                        Ge = we + he;
                                    x <= Ge && Ge < O && (a[he] = we + 1);
                                }
                                a[l.previousIndex] = x - O;
                            }
                        }
                        p !== y && t(l, p, y);
                    }
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousItHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachMovedItem(t) {
                    let n;
                    for (n = this._movesHead; null !== n; n = n._nextMoved)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                forEachIdentityChange(t) {
                    let n;
                    for (
                        n = this._identityChangesHead;
                        null !== n;
                        n = n._nextIdentityChange
                    )
                        t(n);
                }
                diff(t) {
                    if ((null == t && (t = []), !el(t))) throw new Re(900, '');
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let i,
                        a,
                        l,
                        n = this._itHead,
                        r = !1;
                    if (Array.isArray(t)) {
                        this.length = t.length;
                        for (let p = 0; p < this.length; p++)
                            (a = t[p]),
                                (l = this._trackByFn(p, a)),
                                null !== n && Object.is(n.trackById, l)
                                    ? (r &&
                                          (n = this._verifyReinsertion(
                                              n,
                                              a,
                                              l,
                                              p
                                          )),
                                      Object.is(n.item, a) ||
                                          this._addIdentityChange(n, a))
                                    : ((n = this._mismatch(n, a, l, p)),
                                      (r = !0)),
                                (n = n._next);
                    } else
                        (i = 0),
                            (function K_(e, t) {
                                if (Array.isArray(e))
                                    for (let n = 0; n < e.length; n++) t(e[n]);
                                else {
                                    const n = e[Da()]();
                                    let r;
                                    for (; !(r = n.next()).done; ) t(r.value);
                                }
                            })(t, (p) => {
                                (l = this._trackByFn(i, p)),
                                    null !== n && Object.is(n.trackById, l)
                                        ? (r &&
                                              (n = this._verifyReinsertion(
                                                  n,
                                                  p,
                                                  l,
                                                  i
                                              )),
                                          Object.is(n.item, p) ||
                                              this._addIdentityChange(n, p))
                                        : ((n = this._mismatch(n, p, l, i)),
                                          (r = !0)),
                                    (n = n._next),
                                    i++;
                            }),
                            (this.length = i);
                    return (
                        this._truncate(n), (this.collection = t), this.isDirty
                    );
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._movesHead ||
                        null !== this._removalsHead ||
                        null !== this._identityChangesHead
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            t = this._previousItHead = this._itHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._additionsHead;
                            null !== t;
                            t = t._nextAdded
                        )
                            t.previousIndex = t.currentIndex;
                        for (
                            this._additionsHead = this._additionsTail = null,
                                t = this._movesHead;
                            null !== t;
                            t = t._nextMoved
                        )
                            t.previousIndex = t.currentIndex;
                        (this._movesHead = this._movesTail = null),
                            (this._removalsHead = this._removalsTail = null),
                            (this._identityChangesHead =
                                this._identityChangesTail =
                                    null);
                    }
                }
                _mismatch(t, n, r, i) {
                    let a;
                    return (
                        null === t
                            ? (a = this._itTail)
                            : ((a = t._prev), this._remove(t)),
                        null !==
                        (t =
                            null === this._unlinkedRecords
                                ? null
                                : this._unlinkedRecords.get(r, null))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._reinsertAfter(t, a, i))
                            : null !==
                              (t =
                                  null === this._linkedRecords
                                      ? null
                                      : this._linkedRecords.get(r, i))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._moveAfter(t, a, i))
                            : (t = this._addAfter(new UC(n, r), a, i)),
                        t
                    );
                }
                _verifyReinsertion(t, n, r, i) {
                    let a =
                        null === this._unlinkedRecords
                            ? null
                            : this._unlinkedRecords.get(r, null);
                    return (
                        null !== a
                            ? (t = this._reinsertAfter(a, t._prev, i))
                            : t.currentIndex != i &&
                              ((t.currentIndex = i), this._addToMoves(t, i)),
                        t
                    );
                }
                _truncate(t) {
                    for (; null !== t; ) {
                        const n = t._next;
                        this._addToRemovals(this._unlink(t)), (t = n);
                    }
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.clear(),
                        null !== this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        null !== this._movesTail &&
                            (this._movesTail._nextMoved = null),
                        null !== this._itTail && (this._itTail._next = null),
                        null !== this._removalsTail &&
                            (this._removalsTail._nextRemoved = null),
                        null !== this._identityChangesTail &&
                            (this._identityChangesTail._nextIdentityChange =
                                null);
                }
                _reinsertAfter(t, n, r) {
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.remove(t);
                    const i = t._prevRemoved,
                        a = t._nextRemoved;
                    return (
                        null === i
                            ? (this._removalsHead = a)
                            : (i._nextRemoved = a),
                        null === a
                            ? (this._removalsTail = i)
                            : (a._prevRemoved = i),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _moveAfter(t, n, r) {
                    return (
                        this._unlink(t),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _addAfter(t, n, r) {
                    return (
                        this._insertAfter(t, n, r),
                        (this._additionsTail =
                            null === this._additionsTail
                                ? (this._additionsHead = t)
                                : (this._additionsTail._nextAdded = t)),
                        t
                    );
                }
                _insertAfter(t, n, r) {
                    const i = null === n ? this._itHead : n._next;
                    return (
                        (t._next = i),
                        (t._prev = n),
                        null === i ? (this._itTail = t) : (i._prev = t),
                        null === n ? (this._itHead = t) : (n._next = t),
                        null === this._linkedRecords &&
                            (this._linkedRecords = new cm()),
                        this._linkedRecords.put(t),
                        (t.currentIndex = r),
                        t
                    );
                }
                _remove(t) {
                    return this._addToRemovals(this._unlink(t));
                }
                _unlink(t) {
                    null !== this._linkedRecords &&
                        this._linkedRecords.remove(t);
                    const n = t._prev,
                        r = t._next;
                    return (
                        null === n ? (this._itHead = r) : (n._next = r),
                        null === r ? (this._itTail = n) : (r._prev = n),
                        t
                    );
                }
                _addToMoves(t, n) {
                    return (
                        t.previousIndex === n ||
                            (this._movesTail =
                                null === this._movesTail
                                    ? (this._movesHead = t)
                                    : (this._movesTail._nextMoved = t)),
                        t
                    );
                }
                _addToRemovals(t) {
                    return (
                        null === this._unlinkedRecords &&
                            (this._unlinkedRecords = new cm()),
                        this._unlinkedRecords.put(t),
                        (t.currentIndex = null),
                        (t._nextRemoved = null),
                        null === this._removalsTail
                            ? ((this._removalsTail = this._removalsHead = t),
                              (t._prevRemoved = null))
                            : ((t._prevRemoved = this._removalsTail),
                              (this._removalsTail =
                                  this._removalsTail._nextRemoved =
                                      t)),
                        t
                    );
                }
                _addIdentityChange(t, n) {
                    return (
                        (t.item = n),
                        (this._identityChangesTail =
                            null === this._identityChangesTail
                                ? (this._identityChangesHead = t)
                                : (this._identityChangesTail._nextIdentityChange =
                                      t)),
                        t
                    );
                }
            }
            class UC {
                constructor(t, n) {
                    (this.item = t),
                        (this.trackById = n),
                        (this.currentIndex = null),
                        (this.previousIndex = null),
                        (this._nextPrevious = null),
                        (this._prev = null),
                        (this._next = null),
                        (this._prevDup = null),
                        (this._nextDup = null),
                        (this._prevRemoved = null),
                        (this._nextRemoved = null),
                        (this._nextAdded = null),
                        (this._nextMoved = null),
                        (this._nextIdentityChange = null);
                }
            }
            class jC {
                constructor() {
                    (this._head = null), (this._tail = null);
                }
                add(t) {
                    null === this._head
                        ? ((this._head = this._tail = t),
                          (t._nextDup = null),
                          (t._prevDup = null))
                        : ((this._tail._nextDup = t),
                          (t._prevDup = this._tail),
                          (t._nextDup = null),
                          (this._tail = t));
                }
                get(t, n) {
                    let r;
                    for (r = this._head; null !== r; r = r._nextDup)
                        if (
                            (null === n || n <= r.currentIndex) &&
                            Object.is(r.trackById, t)
                        )
                            return r;
                    return null;
                }
                remove(t) {
                    const n = t._prevDup,
                        r = t._nextDup;
                    return (
                        null === n ? (this._head = r) : (n._nextDup = r),
                        null === r ? (this._tail = n) : (r._prevDup = n),
                        null === this._head
                    );
                }
            }
            class cm {
                constructor() {
                    this.map = new Map();
                }
                put(t) {
                    const n = t.trackById;
                    let r = this.map.get(n);
                    r || ((r = new jC()), this.map.set(n, r)), r.add(t);
                }
                get(t, n) {
                    const i = this.map.get(t);
                    return i ? i.get(t, n) : null;
                }
                remove(t) {
                    const n = t.trackById;
                    return this.map.get(n).remove(t) && this.map.delete(n), t;
                }
                get isEmpty() {
                    return 0 === this.map.size;
                }
                clear() {
                    this.map.clear();
                }
            }
            function dm(e, t, n) {
                const r = e.previousIndex;
                if (null === r) return r;
                let i = 0;
                return n && r < n.length && (i = n[r]), r + t + i;
            }
            class fm {
                constructor() {}
                supports(t) {
                    return t instanceof Map || ec(t);
                }
                create() {
                    return new HC();
                }
            }
            class HC {
                constructor() {
                    (this._records = new Map()),
                        (this._mapHead = null),
                        (this._appendAfter = null),
                        (this._previousMapHead = null),
                        (this._changesHead = null),
                        (this._changesTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null);
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._changesHead ||
                        null !== this._removalsHead
                    );
                }
                forEachItem(t) {
                    let n;
                    for (n = this._mapHead; null !== n; n = n._next) t(n);
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousMapHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachChangedItem(t) {
                    let n;
                    for (n = this._changesHead; null !== n; n = n._nextChanged)
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                diff(t) {
                    if (t) {
                        if (!(t instanceof Map || ec(t))) throw new Re(900, '');
                    } else t = new Map();
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let n = this._mapHead;
                    if (
                        ((this._appendAfter = null),
                        this._forEach(t, (r, i) => {
                            if (n && n.key === i)
                                this._maybeAddToChanges(n, r),
                                    (this._appendAfter = n),
                                    (n = n._next);
                            else {
                                const a = this._getOrCreateRecordForKey(i, r);
                                n = this._insertBeforeOrAppend(n, a);
                            }
                        }),
                        n)
                    ) {
                        n._prev && (n._prev._next = null),
                            (this._removalsHead = n);
                        for (let r = n; null !== r; r = r._nextRemoved)
                            r === this._mapHead && (this._mapHead = null),
                                this._records.delete(r.key),
                                (r._nextRemoved = r._next),
                                (r.previousValue = r.currentValue),
                                (r.currentValue = null),
                                (r._prev = null),
                                (r._next = null);
                    }
                    return (
                        this._changesTail &&
                            (this._changesTail._nextChanged = null),
                        this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        this.isDirty
                    );
                }
                _insertBeforeOrAppend(t, n) {
                    if (t) {
                        const r = t._prev;
                        return (
                            (n._next = t),
                            (n._prev = r),
                            (t._prev = n),
                            r && (r._next = n),
                            t === this._mapHead && (this._mapHead = n),
                            (this._appendAfter = t),
                            t
                        );
                    }
                    return (
                        this._appendAfter
                            ? ((this._appendAfter._next = n),
                              (n._prev = this._appendAfter))
                            : (this._mapHead = n),
                        (this._appendAfter = n),
                        null
                    );
                }
                _getOrCreateRecordForKey(t, n) {
                    if (this._records.has(t)) {
                        const i = this._records.get(t);
                        this._maybeAddToChanges(i, n);
                        const a = i._prev,
                            l = i._next;
                        return (
                            a && (a._next = l),
                            l && (l._prev = a),
                            (i._next = null),
                            (i._prev = null),
                            i
                        );
                    }
                    const r = new $C(t);
                    return (
                        this._records.set(t, r),
                        (r.currentValue = n),
                        this._addToAdditions(r),
                        r
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            this._previousMapHead = this._mapHead,
                                t = this._previousMapHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._changesHead;
                            null !== t;
                            t = t._nextChanged
                        )
                            t.previousValue = t.currentValue;
                        for (
                            t = this._additionsHead;
                            null != t;
                            t = t._nextAdded
                        )
                            t.previousValue = t.currentValue;
                        (this._changesHead = this._changesTail = null),
                            (this._additionsHead = this._additionsTail = null),
                            (this._removalsHead = null);
                    }
                }
                _maybeAddToChanges(t, n) {
                    Object.is(n, t.currentValue) ||
                        ((t.previousValue = t.currentValue),
                        (t.currentValue = n),
                        this._addToChanges(t));
                }
                _addToAdditions(t) {
                    null === this._additionsHead
                        ? (this._additionsHead = this._additionsTail = t)
                        : ((this._additionsTail._nextAdded = t),
                          (this._additionsTail = t));
                }
                _addToChanges(t) {
                    null === this._changesHead
                        ? (this._changesHead = this._changesTail = t)
                        : ((this._changesTail._nextChanged = t),
                          (this._changesTail = t));
                }
                _forEach(t, n) {
                    t instanceof Map
                        ? t.forEach(n)
                        : Object.keys(t).forEach((r) => n(t[r], r));
                }
            }
            class $C {
                constructor(t) {
                    (this.key = t),
                        (this.previousValue = null),
                        (this.currentValue = null),
                        (this._nextPrevious = null),
                        (this._next = null),
                        (this._prev = null),
                        (this._nextAdded = null),
                        (this._nextRemoved = null),
                        (this._nextChanged = null);
                }
            }
            function hm() {
                return new ql([new um()]);
            }
            let ql = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (null != r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || hm()),
                            deps: [[e, new ur(), new _n()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((i) => i.supports(n));
                        if (null != r) return r;
                        throw new Re(901, '');
                    }
                }
                return (
                    (e.ɵprov = ct({
                        token: e,
                        providedIn: 'root',
                        factory: hm,
                    })),
                    e
                );
            })();
            function pm() {
                return new Jl([new fm()]);
            }
            let Jl = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || pm()),
                            deps: [[e, new ur(), new _n()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((a) => a.supports(n));
                        if (r) return r;
                        throw new Re(901, '');
                    }
                }
                return (
                    (e.ɵprov = ct({
                        token: e,
                        providedIn: 'root',
                        factory: pm,
                    })),
                    e
                );
            })();
            const GC = [new fm()],
                zC = new ql([new um()]),
                KC = new Jl(GC),
                YC = qg(null, 'core', [
                    { provide: Hg, useValue: 'unknown' },
                    { provide: Xg, deps: [bs] },
                    { provide: Qg, deps: [] },
                    { provide: Gg, deps: [] },
                ]),
                XC = [
                    { provide: gl, useClass: gl, deps: [ls, bs, Ya, ll, Va] },
                    {
                        provide: hD,
                        deps: [ls],
                        useFactory: function e0(e) {
                            let t = [];
                            return (
                                e.onStable.subscribe(() => {
                                    for (; t.length; ) t.pop()();
                                }),
                                function (n) {
                                    t.push(n);
                                }
                            );
                        },
                    },
                    { provide: Va, useClass: Va, deps: [[new _n(), Hc]] },
                    { provide: Gc, useClass: Gc, deps: [] },
                    cC,
                    {
                        provide: ql,
                        useFactory: function QC() {
                            return zC;
                        },
                        deps: [],
                    },
                    {
                        provide: Jl,
                        useFactory: function ZC() {
                            return KC;
                        },
                        deps: [],
                    },
                    {
                        provide: Ql,
                        useFactory: function qC(e) {
                            return (
                                e ||
                                (function JC() {
                                    return (
                                        ('undefined' != typeof $localize &&
                                            $localize.locale) ||
                                        Bl
                                    );
                                })()
                            );
                        },
                        deps: [[new Vt(Ql), new _n(), new ur()]],
                    },
                    { provide: Wg, useValue: 'USD' },
                ];
            let t0 = (() => {
                class e {
                    constructor(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(Y(gl));
                    }),
                    (e.ɵmod = qt({ type: e })),
                    (e.ɵinj = mn({ providers: XC })),
                    e
                );
            })();
        },
        6115: (pe, z, _) => {
            'use strict';
            _.d(z, { F0: () => Nr, rH: () => Ps, Bz: () => bo, lC: () => Wi });
            var f = _(5e3),
                P = _(8306),
                j = _(4742),
                w = _(8996),
                H = _(4671),
                te = _(3268),
                X = _(7669),
                ne = _(1810),
                K = _(5403),
                $ = _(9672);
            function Ae(g, h, c) {
                g ? (0, $.f)(c, g, h) : h();
            }
            var be = _(8421);
            function Re(g) {
                return new P.y((h) => {
                    (0, be.Xf)(g()).subscribe(h);
                });
            }
            var je = _(727),
                ae = _(4482);
            function Q() {
                return (0, ae.e)((g, h) => {
                    let c = null;
                    g._refCount++;
                    const b = new K.Q(h, void 0, void 0, void 0, () => {
                        if (!g || g._refCount <= 0 || 0 < --g._refCount)
                            return void (c = null);
                        const M = g._connection,
                            k = c;
                        (c = null),
                            M && (!k || M === k) && M.unsubscribe(),
                            h.unsubscribe();
                    });
                    g.subscribe(b), b.closed || (c = g.connect());
                });
            }
            class me extends P.y {
                constructor(h, c) {
                    super(),
                        (this.source = h),
                        (this.subjectFactory = c),
                        (this._subject = null),
                        (this._refCount = 0),
                        (this._connection = null),
                        (0, ae.A)(h) && (this.lift = h.lift);
                }
                _subscribe(h) {
                    return this.getSubject().subscribe(h);
                }
                getSubject() {
                    const h = this._subject;
                    return (
                        (!h || h.isStopped) &&
                            (this._subject = this.subjectFactory()),
                        this._subject
                    );
                }
                _teardown() {
                    this._refCount = 0;
                    const { _connection: h } = this;
                    (this._subject = this._connection = null),
                        null == h || h.unsubscribe();
                }
                connect() {
                    let h = this._connection;
                    if (!h) {
                        h = this._connection = new je.w0();
                        const c = this.getSubject();
                        h.add(
                            this.source.subscribe(
                                new K.Q(
                                    c,
                                    void 0,
                                    () => {
                                        this._teardown(), c.complete();
                                    },
                                    (b) => {
                                        this._teardown(), c.error(b);
                                    },
                                    () => this._teardown()
                                )
                            )
                        ),
                            h.closed &&
                                ((this._connection = null), (h = je.w0.EMPTY));
                    }
                    return h;
                }
                refCount() {
                    return Q()(this);
                }
            }
            var I = _(9646),
                F = _(1135),
                oe = _(6805),
                q = _(7272),
                Pe = _(515),
                Be = _(7579),
                qe = _(9300);
            function re(g) {
                return g <= 0
                    ? () => Pe.E
                    : (0, ae.e)((h, c) => {
                          let b = [];
                          h.subscribe(
                              new K.Q(
                                  c,
                                  (M) => {
                                      b.push(M), g < b.length && b.shift();
                                  },
                                  () => {
                                      for (const M of b) c.next(M);
                                      c.complete();
                                  },
                                  void 0,
                                  () => {
                                      b = null;
                                  }
                              )
                          );
                      });
            }
            var Se = _(8068),
                Ee = _(6590),
                De = _(4004),
                ut = _(3900),
                Bt = _(5698),
                gn = _(8675),
                ot = _(5026),
                st = _(262),
                un = _(4351),
                Ft = _(590),
                Ht = _(5577),
                ct = _(8505),
                Rn = _(8189),
                mn = _(9808);
            class Zt {
                constructor(h, c) {
                    (this.id = h), (this.url = c);
                }
            }
            class jn extends Zt {
                constructor(h, c, b = 'imperative', M = null) {
                    super(h, c),
                        (this.navigationTrigger = b),
                        (this.restoredState = M);
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class nn extends Zt {
                constructor(h, c, b) {
                    super(h, c), (this.urlAfterRedirects = b);
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
                }
            }
            class Gn extends Zt {
                constructor(h, c, b) {
                    super(h, c), (this.reason = b);
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class Wn extends Zt {
                constructor(h, c, b) {
                    super(h, c), (this.error = b);
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
                }
            }
            class Qn extends Zt {
                constructor(h, c, b, M) {
                    super(h, c), (this.urlAfterRedirects = b), (this.state = M);
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class cr extends Zt {
                constructor(h, c, b, M) {
                    super(h, c), (this.urlAfterRedirects = b), (this.state = M);
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Ut extends Zt {
                constructor(h, c, b, M, k) {
                    super(h, c),
                        (this.urlAfterRedirects = b),
                        (this.state = M),
                        (this.shouldActivate = k);
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
                }
            }
            class Fn extends Zt {
                constructor(h, c, b, M) {
                    super(h, c), (this.urlAfterRedirects = b), (this.state = M);
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class yt extends Zt {
                constructor(h, c, b, M) {
                    super(h, c), (this.urlAfterRedirects = b), (this.state = M);
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class xn {
                constructor(h) {
                    this.route = h;
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`;
                }
            }
            class In {
                constructor(h) {
                    this.route = h;
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`;
                }
            }
            class rn {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ChildActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class yr {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ChildActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class At {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class _t {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class It {
                constructor(h, c, b) {
                    (this.routerEvent = h),
                        (this.position = c),
                        (this.anchor = b);
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${
                        this.position
                            ? `${this.position[0]}, ${this.position[1]}`
                            : null
                    }')`;
                }
            }
            const et = 'primary';
            class fn {
                constructor(h) {
                    this.params = h || {};
                }
                has(h) {
                    return Object.prototype.hasOwnProperty.call(this.params, h);
                }
                get(h) {
                    if (this.has(h)) {
                        const c = this.params[h];
                        return Array.isArray(c) ? c[0] : c;
                    }
                    return null;
                }
                getAll(h) {
                    if (this.has(h)) {
                        const c = this.params[h];
                        return Array.isArray(c) ? c : [c];
                    }
                    return [];
                }
                get keys() {
                    return Object.keys(this.params);
                }
            }
            function Pt(g) {
                return new fn(g);
            }
            const pt = 'ngNavigationCancelingError';
            function gt(g) {
                const h = Error('NavigationCancelingError: ' + g);
                return (h[pt] = !0), h;
            }
            function Zn(g, h, c) {
                const b = c.path.split('/');
                if (
                    b.length > g.length ||
                    ('full' === c.pathMatch &&
                        (h.hasChildren() || b.length < g.length))
                )
                    return null;
                const M = {};
                for (let k = 0; k < b.length; k++) {
                    const Z = b[k],
                        ce = g[k];
                    if (Z.startsWith(':')) M[Z.substring(1)] = ce;
                    else if (Z !== ce.path) return null;
                }
                return { consumed: g.slice(0, b.length), posParams: M };
            }
            function qn(g, h) {
                const c = g ? Object.keys(g) : void 0,
                    b = h ? Object.keys(h) : void 0;
                if (!c || !b || c.length != b.length) return !1;
                let M;
                for (let k = 0; k < c.length; k++)
                    if (((M = c[k]), !Hn(g[M], h[M]))) return !1;
                return !0;
            }
            function Hn(g, h) {
                if (Array.isArray(g) && Array.isArray(h)) {
                    if (g.length !== h.length) return !1;
                    const c = [...g].sort(),
                        b = [...h].sort();
                    return c.every((M, k) => b[k] === M);
                }
                return g === h;
            }
            function wr(g) {
                return Array.prototype.concat.apply([], g);
            }
            function se(g) {
                return g.length > 0 ? g[g.length - 1] : null;
            }
            function le(g, h) {
                for (const c in g) g.hasOwnProperty(c) && h(g[c], c);
            }
            function $e(g) {
                return (0, f.CqO)(g)
                    ? g
                    : (0, f.QGY)(g)
                    ? (0, w.D)(Promise.resolve(g))
                    : (0, I.of)(g);
            }
            const lt = {
                    exact: function Qe(g, h, c) {
                        if (
                            !$t(g.segments, h.segments) ||
                            !qt(g.segments, h.segments, c) ||
                            g.numberOfChildren !== h.numberOfChildren
                        )
                            return !1;
                        for (const b in h.children)
                            if (
                                !g.children[b] ||
                                !Qe(g.children[b], h.children[b], c)
                            )
                                return !1;
                        return !0;
                    },
                    subset: rt,
                },
                ye = {
                    exact: function Ue(g, h) {
                        return qn(g, h);
                    },
                    subset: function Dt(g, h) {
                        return (
                            Object.keys(h).length <= Object.keys(g).length &&
                            Object.keys(h).every((c) => Hn(g[c], h[c]))
                        );
                    },
                    ignored: () => !0,
                };
            function Le(g, h, c) {
                return (
                    lt[c.paths](g.root, h.root, c.matrixParams) &&
                    ye[c.queryParams](g.queryParams, h.queryParams) &&
                    !('exact' === c.fragment && g.fragment !== h.fragment)
                );
            }
            function rt(g, h, c) {
                return Kt(g, h, h.segments, c);
            }
            function Kt(g, h, c, b) {
                if (g.segments.length > c.length) {
                    const M = g.segments.slice(0, c.length);
                    return !(!$t(M, c) || h.hasChildren() || !qt(M, c, b));
                }
                if (g.segments.length === c.length) {
                    if (!$t(g.segments, c) || !qt(g.segments, c, b)) return !1;
                    for (const M in h.children)
                        if (
                            !g.children[M] ||
                            !rt(g.children[M], h.children[M], b)
                        )
                            return !1;
                    return !0;
                }
                {
                    const M = c.slice(0, g.segments.length),
                        k = c.slice(g.segments.length);
                    return (
                        !!(
                            $t(g.segments, M) &&
                            qt(g.segments, M, b) &&
                            g.children[et]
                        ) && Kt(g.children[et], h, k, b)
                    );
                }
            }
            function qt(g, h, c) {
                return h.every((b, M) => ye[c](g[M].parameters, b.parameters));
            }
            class vn {
                constructor(h, c, b) {
                    (this.root = h),
                        (this.queryParams = c),
                        (this.fragment = b);
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = Pt(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return Jn.serialize(this);
                }
            }
            class bt {
                constructor(h, c) {
                    (this.segments = h),
                        (this.children = c),
                        (this.parent = null),
                        le(c, (b, M) => (b.parent = this));
                }
                hasChildren() {
                    return this.numberOfChildren > 0;
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length;
                }
                toString() {
                    return Wr(this);
                }
            }
            class zn {
                constructor(h, c) {
                    (this.path = h), (this.parameters = c);
                }
                get parameterMap() {
                    return (
                        this._parameterMap ||
                            (this._parameterMap = Pt(this.parameters)),
                        this._parameterMap
                    );
                }
                toString() {
                    return Yt(this);
                }
            }
            function $t(g, h) {
                return (
                    g.length === h.length &&
                    g.every((c, b) => c.path === h[b].path)
                );
            }
            class bn {}
            class Pn {
                parse(h) {
                    const c = new Nt(h);
                    return new vn(
                        c.parseRootSegment(),
                        c.parseQueryParams(),
                        c.parseFragment()
                    );
                }
                serialize(h) {
                    const c = `/${hr(h.root, !0)}`,
                        b = (function Vn(g) {
                            const h = Object.keys(g)
                                .map((c) => {
                                    const b = g[c];
                                    return Array.isArray(b)
                                        ? b
                                              .map((M) => `${_r(c)}=${_r(M)}`)
                                              .join('&')
                                        : `${_r(c)}=${_r(b)}`;
                                })
                                .filter((c) => !!c);
                            return h.length ? `?${h.join('&')}` : '';
                        })(h.queryParams);
                    return `${c}${b}${
                        'string' == typeof h.fragment
                            ? `#${(function nr(g) {
                                  return encodeURI(g);
                              })(h.fragment)}`
                            : ''
                    }`;
                }
            }
            const Jn = new Pn();
            function Wr(g) {
                return g.segments.map((h) => Yt(h)).join('/');
            }
            function hr(g, h) {
                if (!g.hasChildren()) return Wr(g);
                if (h) {
                    const c = g.children[et] ? hr(g.children[et], !1) : '',
                        b = [];
                    return (
                        le(g.children, (M, k) => {
                            k !== et && b.push(`${k}:${hr(M, !1)}`);
                        }),
                        b.length > 0 ? `${c}(${b.join('//')})` : c
                    );
                }
                {
                    const c = (function tn(g, h) {
                        let c = [];
                        return (
                            le(g.children, (b, M) => {
                                M === et && (c = c.concat(h(b, M)));
                            }),
                            le(g.children, (b, M) => {
                                M !== et && (c = c.concat(h(b, M)));
                            }),
                            c
                        );
                    })(g, (b, M) =>
                        M === et
                            ? [hr(g.children[et], !1)]
                            : [`${M}:${hr(b, !1)}`]
                    );
                    return 1 === Object.keys(g.children).length &&
                        null != g.children[et]
                        ? `${Wr(g)}/${c[0]}`
                        : `${Wr(g)}/(${c.join('//')})`;
                }
            }
            function Pr(g) {
                return encodeURIComponent(g)
                    .replace(/%40/g, '@')
                    .replace(/%3A/gi, ':')
                    .replace(/%24/g, '$')
                    .replace(/%2C/gi, ',');
            }
            function _r(g) {
                return Pr(g).replace(/%3B/gi, ';');
            }
            function Rr(g) {
                return Pr(g)
                    .replace(/\(/g, '%28')
                    .replace(/\)/g, '%29')
                    .replace(/%26/gi, '&');
            }
            function Xn(g) {
                return decodeURIComponent(g);
            }
            function tt(g) {
                return Xn(g.replace(/\+/g, '%20'));
            }
            function Yt(g) {
                return `${Rr(g.path)}${(function hn(g) {
                    return Object.keys(g)
                        .map((h) => `;${Rr(h)}=${Rr(g[h])}`)
                        .join('');
                })(g.parameters)}`;
            }
            const er = /^[^\/()?;=#]+/;
            function cn(g) {
                const h = g.match(er);
                return h ? h[0] : '';
            }
            const Kn = /^[^=?&#]+/,
                Tr = /^[^&#]+/;
            class Nt {
                constructor(h) {
                    (this.url = h), (this.remaining = h);
                }
                parseRootSegment() {
                    return (
                        this.consumeOptional('/'),
                        '' === this.remaining ||
                        this.peekStartsWith('?') ||
                        this.peekStartsWith('#')
                            ? new bt([], {})
                            : new bt([], this.parseChildren())
                    );
                }
                parseQueryParams() {
                    const h = {};
                    if (this.consumeOptional('?'))
                        do {
                            this.parseQueryParam(h);
                        } while (this.consumeOptional('&'));
                    return h;
                }
                parseFragment() {
                    return this.consumeOptional('#')
                        ? decodeURIComponent(this.remaining)
                        : null;
                }
                parseChildren() {
                    if ('' === this.remaining) return {};
                    this.consumeOptional('/');
                    const h = [];
                    for (
                        this.peekStartsWith('(') || h.push(this.parseSegment());
                        this.peekStartsWith('/') &&
                        !this.peekStartsWith('//') &&
                        !this.peekStartsWith('/(');

                    )
                        this.capture('/'), h.push(this.parseSegment());
                    let c = {};
                    this.peekStartsWith('/(') &&
                        (this.capture('/'), (c = this.parseParens(!0)));
                    let b = {};
                    return (
                        this.peekStartsWith('(') && (b = this.parseParens(!1)),
                        (h.length > 0 || Object.keys(c).length > 0) &&
                            (b[et] = new bt(h, c)),
                        b
                    );
                }
                parseSegment() {
                    const h = cn(this.remaining);
                    if ('' === h && this.peekStartsWith(';'))
                        throw new Error(
                            `Empty path url segment cannot have parameters: '${this.remaining}'.`
                        );
                    return (
                        this.capture(h), new zn(Xn(h), this.parseMatrixParams())
                    );
                }
                parseMatrixParams() {
                    const h = {};
                    for (; this.consumeOptional(';'); ) this.parseParam(h);
                    return h;
                }
                parseParam(h) {
                    const c = cn(this.remaining);
                    if (!c) return;
                    this.capture(c);
                    let b = '';
                    if (this.consumeOptional('=')) {
                        const M = cn(this.remaining);
                        M && ((b = M), this.capture(b));
                    }
                    h[Xn(c)] = Xn(b);
                }
                parseQueryParam(h) {
                    const c = (function An(g) {
                        const h = g.match(Kn);
                        return h ? h[0] : '';
                    })(this.remaining);
                    if (!c) return;
                    this.capture(c);
                    let b = '';
                    if (this.consumeOptional('=')) {
                        const Z = (function En(g) {
                            const h = g.match(Tr);
                            return h ? h[0] : '';
                        })(this.remaining);
                        Z && ((b = Z), this.capture(b));
                    }
                    const M = tt(c),
                        k = tt(b);
                    if (h.hasOwnProperty(M)) {
                        let Z = h[M];
                        Array.isArray(Z) || ((Z = [Z]), (h[M] = Z)), Z.push(k);
                    } else h[M] = k;
                }
                parseParens(h) {
                    const c = {};
                    for (
                        this.capture('(');
                        !this.consumeOptional(')') && this.remaining.length > 0;

                    ) {
                        const b = cn(this.remaining),
                            M = this.remaining[b.length];
                        if ('/' !== M && ')' !== M && ';' !== M)
                            throw new Error(`Cannot parse url '${this.url}'`);
                        let k;
                        b.indexOf(':') > -1
                            ? ((k = b.substr(0, b.indexOf(':'))),
                              this.capture(k),
                              this.capture(':'))
                            : h && (k = et);
                        const Z = this.parseChildren();
                        (c[k] =
                            1 === Object.keys(Z).length
                                ? Z[et]
                                : new bt([], Z)),
                            this.consumeOptional('//');
                    }
                    return c;
                }
                peekStartsWith(h) {
                    return this.remaining.startsWith(h);
                }
                consumeOptional(h) {
                    return (
                        !!this.peekStartsWith(h) &&
                        ((this.remaining = this.remaining.substring(h.length)),
                        !0)
                    );
                }
                capture(h) {
                    if (!this.consumeOptional(h))
                        throw new Error(`Expected "${h}".`);
                }
            }
            class Sr {
                constructor(h) {
                    this._root = h;
                }
                get root() {
                    return this._root.value;
                }
                parent(h) {
                    const c = this.pathFromRoot(h);
                    return c.length > 1 ? c[c.length - 2] : null;
                }
                children(h) {
                    const c = dr(h, this._root);
                    return c ? c.children.map((b) => b.value) : [];
                }
                firstChild(h) {
                    const c = dr(h, this._root);
                    return c && c.children.length > 0
                        ? c.children[0].value
                        : null;
                }
                siblings(h) {
                    const c = Ir(h, this._root);
                    return c.length < 2
                        ? []
                        : c[c.length - 2].children
                              .map((M) => M.value)
                              .filter((M) => M !== h);
                }
                pathFromRoot(h) {
                    return Ir(h, this._root).map((c) => c.value);
                }
            }
            function dr(g, h) {
                if (g === h.value) return h;
                for (const c of h.children) {
                    const b = dr(g, c);
                    if (b) return b;
                }
                return null;
            }
            function Ir(g, h) {
                if (g === h.value) return [h];
                for (const c of h.children) {
                    const b = Ir(g, c);
                    if (b.length) return b.unshift(h), b;
                }
                return [];
            }
            class an {
                constructor(h, c) {
                    (this.value = h), (this.children = c);
                }
                toString() {
                    return `TreeNode(${this.value})`;
                }
            }
            function Mn(g) {
                const h = {};
                return (
                    g && g.children.forEach((c) => (h[c.value.outlet] = c)), h
                );
            }
            class Fr extends Sr {
                constructor(h, c) {
                    super(h), (this.snapshot = c), pn(this, h);
                }
                toString() {
                    return this.snapshot.toString();
                }
            }
            function J(g, h) {
                const c = (function xe(g, h) {
                        const Z = new Ze(
                            [],
                            {},
                            {},
                            '',
                            {},
                            et,
                            h,
                            null,
                            g.root,
                            -1,
                            {}
                        );
                        return new Rt('', new an(Z, []));
                    })(g, h),
                    b = new F.X([new zn('', {})]),
                    M = new F.X({}),
                    k = new F.X({}),
                    Z = new F.X({}),
                    ce = new F.X(''),
                    He = new ve(b, M, Z, ce, k, et, h, c.root);
                return (He.snapshot = c.root), new Fr(new an(He, []), c);
            }
            class ve {
                constructor(h, c, b, M, k, Z, ce, He) {
                    (this.url = h),
                        (this.params = c),
                        (this.queryParams = b),
                        (this.fragment = M),
                        (this.data = k),
                        (this.outlet = Z),
                        (this.component = ce),
                        (this._futureSnapshot = He);
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig;
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap ||
                            (this._paramMap = this.params.pipe(
                                (0, De.U)((h) => Pt(h))
                            )),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = this.queryParams.pipe(
                                (0, De.U)((h) => Pt(h))
                            )),
                        this._queryParamMap
                    );
                }
                toString() {
                    return this.snapshot
                        ? this.snapshot.toString()
                        : `Future(${this._futureSnapshot})`;
                }
            }
            function Me(g, h = 'emptyOnly') {
                const c = g.pathFromRoot;
                let b = 0;
                if ('always' !== h)
                    for (b = c.length - 1; b >= 1; ) {
                        const M = c[b],
                            k = c[b - 1];
                        if (M.routeConfig && '' === M.routeConfig.path) b--;
                        else {
                            if (k.component) break;
                            b--;
                        }
                    }
                return (function Je(g) {
                    return g.reduce(
                        (h, c) => ({
                            params: Object.assign(
                                Object.assign({}, h.params),
                                c.params
                            ),
                            data: Object.assign(
                                Object.assign({}, h.data),
                                c.data
                            ),
                            resolve: Object.assign(
                                Object.assign({}, h.resolve),
                                c._resolvedData
                            ),
                        }),
                        { params: {}, data: {}, resolve: {} }
                    );
                })(c.slice(b));
            }
            class Ze {
                constructor(h, c, b, M, k, Z, ce, He, Ct, on, Tt) {
                    (this.url = h),
                        (this.params = c),
                        (this.queryParams = b),
                        (this.fragment = M),
                        (this.data = k),
                        (this.outlet = Z),
                        (this.component = ce),
                        (this.routeConfig = He),
                        (this._urlSegment = Ct),
                        (this._lastPathIndex = on),
                        (this._resolve = Tt);
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap || (this._paramMap = Pt(this.params)),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = Pt(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return `Route(url:'${this.url
                        .map((b) => b.toString())
                        .join('/')}', path:'${
                        this.routeConfig ? this.routeConfig.path : ''
                    }')`;
                }
            }
            class Rt extends Sr {
                constructor(h, c) {
                    super(c), (this.url = h), pn(this, c);
                }
                toString() {
                    return Dn(this._root);
                }
            }
            function pn(g, h) {
                (h.value._routerState = g), h.children.forEach((c) => pn(g, c));
            }
            function Dn(g) {
                const h =
                    g.children.length > 0
                        ? ` { ${g.children.map(Dn).join(', ')} } `
                        : '';
                return `${g.value}${h}`;
            }
            function Un(g) {
                if (g.snapshot) {
                    const h = g.snapshot,
                        c = g._futureSnapshot;
                    (g.snapshot = c),
                        qn(h.queryParams, c.queryParams) ||
                            g.queryParams.next(c.queryParams),
                        h.fragment !== c.fragment &&
                            g.fragment.next(c.fragment),
                        qn(h.params, c.params) || g.params.next(c.params),
                        (function jt(g, h) {
                            if (g.length !== h.length) return !1;
                            for (let c = 0; c < g.length; ++c)
                                if (!qn(g[c], h[c])) return !1;
                            return !0;
                        })(h.url, c.url) || g.url.next(c.url),
                        qn(h.data, c.data) || g.data.next(c.data);
                } else
                    (g.snapshot = g._futureSnapshot),
                        g.data.next(g._futureSnapshot.data);
            }
            function Jt(g, h) {
                const c =
                    qn(g.params, h.params) &&
                    (function or(g, h) {
                        return (
                            $t(g, h) &&
                            g.every((c, b) => qn(c.parameters, h[b].parameters))
                        );
                    })(g.url, h.url);
                return (
                    c &&
                    !(!g.parent != !h.parent) &&
                    (!g.parent || Jt(g.parent, h.parent))
                );
            }
            function mi(g, h, c) {
                if (c && g.shouldReuseRoute(h.value, c.value.snapshot)) {
                    const b = c.value;
                    b._futureSnapshot = h.value;
                    const M = (function Hi(g, h, c) {
                        return h.children.map((b) => {
                            for (const M of c.children)
                                if (
                                    g.shouldReuseRoute(
                                        b.value,
                                        M.value.snapshot
                                    )
                                )
                                    return mi(g, b, M);
                            return mi(g, b);
                        });
                    })(g, h, c);
                    return new an(b, M);
                }
                {
                    if (g.shouldAttach(h.value)) {
                        const k = g.retrieve(h.value);
                        if (null !== k) {
                            const Z = k.route;
                            return (
                                (Z.value._futureSnapshot = h.value),
                                (Z.children = h.children.map((ce) =>
                                    mi(g, ce)
                                )),
                                Z
                            );
                        }
                    }
                    const b = (function Er(g) {
                            return new ve(
                                new F.X(g.url),
                                new F.X(g.params),
                                new F.X(g.queryParams),
                                new F.X(g.fragment),
                                new F.X(g.data),
                                g.outlet,
                                g.component,
                                g
                            );
                        })(h.value),
                        M = h.children.map((k) => mi(g, k));
                    return new an(b, M);
                }
            }
            function yi(g) {
                return (
                    'object' == typeof g &&
                    null != g &&
                    !g.outlets &&
                    !g.segmentPath
                );
            }
            function _e(g) {
                return 'object' == typeof g && null != g && g.outlets;
            }
            function ge(g, h, c, b, M) {
                let k = {};
                return (
                    b &&
                        le(b, (Z, ce) => {
                            k[ce] = Array.isArray(Z)
                                ? Z.map((He) => `${He}`)
                                : `${Z}`;
                        }),
                    new vn(c.root === g ? h : Ie(c.root, g, h), k, M)
                );
            }
            function Ie(g, h, c) {
                const b = {};
                return (
                    le(g.children, (M, k) => {
                        b[k] = M === h ? c : Ie(M, h, c);
                    }),
                    new bt(g.segments, b)
                );
            }
            class We {
                constructor(h, c, b) {
                    if (
                        ((this.isAbsolute = h),
                        (this.numberOfDoubleDots = c),
                        (this.commands = b),
                        h && b.length > 0 && yi(b[0]))
                    )
                        throw new Error(
                            'Root segment cannot have matrix parameters'
                        );
                    const M = b.find(_e);
                    if (M && M !== se(b))
                        throw new Error(
                            '{outlets:{}} has to be the last command'
                        );
                }
                toRoot() {
                    return (
                        this.isAbsolute &&
                        1 === this.commands.length &&
                        '/' == this.commands[0]
                    );
                }
            }
            class ft {
                constructor(h, c, b) {
                    (this.segmentGroup = h),
                        (this.processChildren = c),
                        (this.index = b);
                }
            }
            function Gr(g, h, c) {
                if (
                    (g || (g = new bt([], {})),
                    0 === g.segments.length && g.hasChildren())
                )
                    return xr(g, h, c);
                const b = (function wi(g, h, c) {
                        let b = 0,
                            M = h;
                        const k = { match: !1, pathIndex: 0, commandIndex: 0 };
                        for (; M < g.segments.length; ) {
                            if (b >= c.length) return k;
                            const Z = g.segments[M],
                                ce = c[b];
                            if (_e(ce)) break;
                            const He = `${ce}`,
                                Ct = b < c.length - 1 ? c[b + 1] : null;
                            if (M > 0 && void 0 === He) break;
                            if (
                                He &&
                                Ct &&
                                'object' == typeof Ct &&
                                void 0 === Ct.outlets
                            ) {
                                if (!ai(He, Ct, Z)) return k;
                                b += 2;
                            } else {
                                if (!ai(He, {}, Z)) return k;
                                b++;
                            }
                            M++;
                        }
                        return { match: !0, pathIndex: M, commandIndex: b };
                    })(g, h, c),
                    M = c.slice(b.commandIndex);
                if (b.match && b.pathIndex < g.segments.length) {
                    const k = new bt(g.segments.slice(0, b.pathIndex), {});
                    return (
                        (k.children[et] = new bt(
                            g.segments.slice(b.pathIndex),
                            g.children
                        )),
                        xr(k, 0, M)
                    );
                }
                return b.match && 0 === M.length
                    ? new bt(g.segments, {})
                    : b.match && !g.hasChildren()
                    ? Ti(g, h, c)
                    : b.match
                    ? xr(g, 0, M)
                    : Ti(g, h, c);
            }
            function xr(g, h, c) {
                if (0 === c.length) return new bt(g.segments, {});
                {
                    const b = (function sn(g) {
                            return _e(g[0]) ? g[0].outlets : { [et]: g };
                        })(c),
                        M = {};
                    return (
                        le(b, (k, Z) => {
                            'string' == typeof k && (k = [k]),
                                null !== k && (M[Z] = Gr(g.children[Z], h, k));
                        }),
                        le(g.children, (k, Z) => {
                            void 0 === b[Z] && (M[Z] = k);
                        }),
                        new bt(g.segments, M)
                    );
                }
            }
            function Ti(g, h, c) {
                const b = g.segments.slice(0, h);
                let M = 0;
                for (; M < c.length; ) {
                    const k = c[M];
                    if (_e(k)) {
                        const He = Mr(k.outlets);
                        return new bt(b, He);
                    }
                    if (0 === M && yi(c[0])) {
                        b.push(new zn(g.segments[h].path, oi(c[0]))), M++;
                        continue;
                    }
                    const Z = _e(k) ? k.outlets[et] : `${k}`,
                        ce = M < c.length - 1 ? c[M + 1] : null;
                    Z && ce && yi(ce)
                        ? (b.push(new zn(Z, oi(ce))), (M += 2))
                        : (b.push(new zn(Z, {})), M++);
                }
                return new bt(b, {});
            }
            function Mr(g) {
                const h = {};
                return (
                    le(g, (c, b) => {
                        'string' == typeof c && (c = [c]),
                            null !== c && (h[b] = Ti(new bt([], {}), 0, c));
                    }),
                    h
                );
            }
            function oi(g) {
                const h = {};
                return le(g, (c, b) => (h[b] = `${c}`)), h;
            }
            function ai(g, h, c) {
                return g == c.path && qn(h, c.parameters);
            }
            class Jr {
                constructor(h, c, b, M) {
                    (this.routeReuseStrategy = h),
                        (this.futureState = c),
                        (this.currState = b),
                        (this.forwardEvent = M);
                }
                activate(h) {
                    const c = this.futureState._root,
                        b = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(c, b, h),
                        Un(this.futureState.root),
                        this.activateChildRoutes(c, b, h);
                }
                deactivateChildRoutes(h, c, b) {
                    const M = Mn(c);
                    h.children.forEach((k) => {
                        const Z = k.value.outlet;
                        this.deactivateRoutes(k, M[Z], b), delete M[Z];
                    }),
                        le(M, (k, Z) => {
                            this.deactivateRouteAndItsChildren(k, b);
                        });
                }
                deactivateRoutes(h, c, b) {
                    const M = h.value,
                        k = c ? c.value : null;
                    if (M === k)
                        if (M.component) {
                            const Z = b.getContext(M.outlet);
                            Z && this.deactivateChildRoutes(h, c, Z.children);
                        } else this.deactivateChildRoutes(h, c, b);
                    else k && this.deactivateRouteAndItsChildren(c, b);
                }
                deactivateRouteAndItsChildren(h, c) {
                    h.value.component &&
                    this.routeReuseStrategy.shouldDetach(h.value.snapshot)
                        ? this.detachAndStoreRouteSubtree(h, c)
                        : this.deactivateRouteAndOutlet(h, c);
                }
                detachAndStoreRouteSubtree(h, c) {
                    const b = c.getContext(h.value.outlet),
                        M = b && h.value.component ? b.children : c,
                        k = Mn(h);
                    for (const Z of Object.keys(k))
                        this.deactivateRouteAndItsChildren(k[Z], M);
                    if (b && b.outlet) {
                        const Z = b.outlet.detach(),
                            ce = b.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(h.value.snapshot, {
                            componentRef: Z,
                            route: h,
                            contexts: ce,
                        });
                    }
                }
                deactivateRouteAndOutlet(h, c) {
                    const b = c.getContext(h.value.outlet),
                        M = b && h.value.component ? b.children : c,
                        k = Mn(h);
                    for (const Z of Object.keys(k))
                        this.deactivateRouteAndItsChildren(k[Z], M);
                    b &&
                        b.outlet &&
                        (b.outlet.deactivate(),
                        b.children.onOutletDeactivated(),
                        (b.attachRef = null),
                        (b.resolver = null),
                        (b.route = null));
                }
                activateChildRoutes(h, c, b) {
                    const M = Mn(c);
                    h.children.forEach((k) => {
                        this.activateRoutes(k, M[k.value.outlet], b),
                            this.forwardEvent(new _t(k.value.snapshot));
                    }),
                        h.children.length &&
                            this.forwardEvent(new yr(h.value.snapshot));
                }
                activateRoutes(h, c, b) {
                    const M = h.value,
                        k = c ? c.value : null;
                    if ((Un(M), M === k))
                        if (M.component) {
                            const Z = b.getOrCreateContext(M.outlet);
                            this.activateChildRoutes(h, c, Z.children);
                        } else this.activateChildRoutes(h, c, b);
                    else if (M.component) {
                        const Z = b.getOrCreateContext(M.outlet);
                        if (this.routeReuseStrategy.shouldAttach(M.snapshot)) {
                            const ce = this.routeReuseStrategy.retrieve(
                                M.snapshot
                            );
                            this.routeReuseStrategy.store(M.snapshot, null),
                                Z.children.onOutletReAttached(ce.contexts),
                                (Z.attachRef = ce.componentRef),
                                (Z.route = ce.route.value),
                                Z.outlet &&
                                    Z.outlet.attach(
                                        ce.componentRef,
                                        ce.route.value
                                    ),
                                Un(ce.route.value),
                                this.activateChildRoutes(h, null, Z.children);
                        } else {
                            const ce = (function xi(g) {
                                    for (let h = g.parent; h; h = h.parent) {
                                        const c = h.routeConfig;
                                        if (c && c._loadedConfig)
                                            return c._loadedConfig;
                                        if (c && c.component) return null;
                                    }
                                    return null;
                                })(M.snapshot),
                                He = ce
                                    ? ce.module.componentFactoryResolver
                                    : null;
                            (Z.attachRef = null),
                                (Z.route = M),
                                (Z.resolver = He),
                                Z.outlet && Z.outlet.activateWith(M, He),
                                this.activateChildRoutes(h, null, Z.children);
                        }
                    } else this.activateChildRoutes(h, null, b);
                }
            }
            class zr {
                constructor(h, c) {
                    (this.routes = h), (this.module = c);
                }
            }
            function gr(g) {
                return 'function' == typeof g;
            }
            function li(g) {
                return g instanceof vn;
            }
            const ui = Symbol('INITIAL_VALUE');
            function rr() {
                return (0, ut.w)((g) =>
                    (function U(...g) {
                        const h = (0, X.yG)(g),
                            c = (0, X.jO)(g),
                            { args: b, keys: M } = (0, j.D)(g);
                        if (0 === b.length) return (0, w.D)([], h);
                        const k = new P.y(
                            (function ie(g, h, c = H.y) {
                                return (b) => {
                                    Ae(
                                        h,
                                        () => {
                                            const { length: M } = g,
                                                k = new Array(M);
                                            let Z = M,
                                                ce = M;
                                            for (let He = 0; He < M; He++)
                                                Ae(
                                                    h,
                                                    () => {
                                                        const Ct = (0, w.D)(
                                                            g[He],
                                                            h
                                                        );
                                                        let on = !1;
                                                        Ct.subscribe(
                                                            new K.Q(
                                                                b,
                                                                (Tt) => {
                                                                    (k[He] =
                                                                        Tt),
                                                                        on ||
                                                                            ((on =
                                                                                !0),
                                                                            ce--),
                                                                        ce ||
                                                                            b.next(
                                                                                c(
                                                                                    k.slice()
                                                                                )
                                                                            );
                                                                },
                                                                () => {
                                                                    --Z ||
                                                                        b.complete();
                                                                }
                                                            )
                                                        );
                                                    },
                                                    b
                                                );
                                        },
                                        b
                                    );
                                };
                            })(b, h, M ? (Z) => (0, ne.n)(M, Z) : H.y)
                        );
                        return c ? k.pipe((0, te.Z)(c)) : k;
                    })(g.map((h) => h.pipe((0, Bt.q)(1), (0, gn.O)(ui)))).pipe(
                        (0, ot.R)((h, c) => {
                            let b = !1;
                            return c.reduce(
                                (M, k, Z) =>
                                    M !== ui
                                        ? M
                                        : (k === ui && (b = !0),
                                          b ||
                                          (!1 !== k &&
                                              Z !== c.length - 1 &&
                                              !li(k))
                                              ? M
                                              : k),
                                h
                            );
                        }, ui),
                        (0, qe.h)((h) => h !== ui),
                        (0, De.U)((h) => (li(h) ? h : !0 === h)),
                        (0, Bt.q)(1)
                    )
                );
            }
            class ts {
                constructor() {
                    (this.outlet = null),
                        (this.route = null),
                        (this.resolver = null),
                        (this.children = new Si()),
                        (this.attachRef = null);
                }
            }
            class Si {
                constructor() {
                    this.contexts = new Map();
                }
                onChildOutletCreated(h, c) {
                    const b = this.getOrCreateContext(h);
                    (b.outlet = c), this.contexts.set(h, b);
                }
                onChildOutletDestroyed(h) {
                    const c = this.getContext(h);
                    c && ((c.outlet = null), (c.attachRef = null));
                }
                onOutletDeactivated() {
                    const h = this.contexts;
                    return (this.contexts = new Map()), h;
                }
                onOutletReAttached(h) {
                    this.contexts = h;
                }
                getOrCreateContext(h) {
                    let c = this.getContext(h);
                    return c || ((c = new ts()), this.contexts.set(h, c)), c;
                }
                getContext(h) {
                    return this.contexts.get(h) || null;
                }
            }
            let Wi = (() => {
                class g {
                    constructor(c, b, M, k, Z) {
                        (this.parentContexts = c),
                            (this.location = b),
                            (this.resolver = M),
                            (this.changeDetector = Z),
                            (this.activated = null),
                            (this._activatedRoute = null),
                            (this.activateEvents = new f.vpe()),
                            (this.deactivateEvents = new f.vpe()),
                            (this.attachEvents = new f.vpe()),
                            (this.detachEvents = new f.vpe()),
                            (this.name = k || et),
                            c.onChildOutletCreated(this.name, this);
                    }
                    ngOnDestroy() {
                        this.parentContexts.onChildOutletDestroyed(this.name);
                    }
                    ngOnInit() {
                        if (!this.activated) {
                            const c = this.parentContexts.getContext(this.name);
                            c &&
                                c.route &&
                                (c.attachRef
                                    ? this.attach(c.attachRef, c.route)
                                    : this.activateWith(
                                          c.route,
                                          c.resolver || null
                                      ));
                        }
                    }
                    get isActivated() {
                        return !!this.activated;
                    }
                    get component() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this.activated.instance;
                    }
                    get activatedRoute() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this._activatedRoute;
                    }
                    get activatedRouteData() {
                        return this._activatedRoute
                            ? this._activatedRoute.snapshot.data
                            : {};
                    }
                    detach() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        this.location.detach();
                        const c = this.activated;
                        return (
                            (this.activated = null),
                            (this._activatedRoute = null),
                            this.detachEvents.emit(c.instance),
                            c
                        );
                    }
                    attach(c, b) {
                        (this.activated = c),
                            (this._activatedRoute = b),
                            this.location.insert(c.hostView),
                            this.attachEvents.emit(c.instance);
                    }
                    deactivate() {
                        if (this.activated) {
                            const c = this.component;
                            this.activated.destroy(),
                                (this.activated = null),
                                (this._activatedRoute = null),
                                this.deactivateEvents.emit(c);
                        }
                    }
                    activateWith(c, b) {
                        if (this.isActivated)
                            throw new Error(
                                'Cannot activate an already activated outlet'
                            );
                        this._activatedRoute = c;
                        const Z = (b =
                                b || this.resolver).resolveComponentFactory(
                                c._futureSnapshot.routeConfig.component
                            ),
                            ce = this.parentContexts.getOrCreateContext(
                                this.name
                            ).children,
                            He = new zi(c, ce, this.location.injector);
                        (this.activated = this.location.createComponent(
                            Z,
                            this.location.length,
                            He
                        )),
                            this.changeDetector.markForCheck(),
                            this.activateEvents.emit(this.activated.instance);
                    }
                }
                return (
                    (g.ɵfac = function (c) {
                        return new (c || g)(
                            f.Y36(Si),
                            f.Y36(f.s_b),
                            f.Y36(f._Vd),
                            f.$8M('name'),
                            f.Y36(f.sBO)
                        );
                    }),
                    (g.ɵdir = f.lG2({
                        type: g,
                        selectors: [['router-outlet']],
                        outputs: {
                            activateEvents: 'activate',
                            deactivateEvents: 'deactivate',
                            attachEvents: 'attach',
                            detachEvents: 'detach',
                        },
                        exportAs: ['outlet'],
                    })),
                    g
                );
            })();
            class zi {
                constructor(h, c, b) {
                    (this.route = h),
                        (this.childContexts = c),
                        (this.parent = b);
                }
                get(h, c) {
                    return h === ve
                        ? this.route
                        : h === Si
                        ? this.childContexts
                        : this.parent.get(h, c);
                }
            }
            let vi = (() => {
                class g {}
                return (
                    (g.ɵfac = function (c) {
                        return new (c || g)();
                    }),
                    (g.ɵcmp = f.Xpm({
                        type: g,
                        selectors: [['ng-component']],
                        decls: 1,
                        vars: 0,
                        template: function (c, b) {
                            1 & c && f._UZ(0, 'router-outlet');
                        },
                        directives: [Wi],
                        encapsulation: 2,
                    })),
                    g
                );
            })();
            function Ni(g, h = '') {
                for (let c = 0; c < g.length; c++) {
                    const b = g[c];
                    Ki(b, Xr(h, b));
                }
            }
            function Ki(g, h) {
                g.children && Ni(g.children, h);
            }
            function Xr(g, h) {
                return h
                    ? g || h.path
                        ? g && !h.path
                            ? `${g}/`
                            : !g && h.path
                            ? h.path
                            : `${g}/${h.path}`
                        : ''
                    : g;
            }
            function Ii(g) {
                const h = g.children && g.children.map(Ii),
                    c = h
                        ? Object.assign(Object.assign({}, g), { children: h })
                        : Object.assign({}, g);
                return (
                    !c.component &&
                        (h || c.loadChildren) &&
                        c.outlet &&
                        c.outlet !== et &&
                        (c.component = vi),
                    c
                );
            }
            function Qt(g) {
                return g.outlet || et;
            }
            function T(g, h) {
                const c = g.filter((b) => Qt(b) === h);
                return c.push(...g.filter((b) => Qt(b) !== h)), c;
            }
            const L = {
                matched: !1,
                consumedSegments: [],
                lastChild: 0,
                parameters: {},
                positionalParamSegments: {},
            };
            function A(g, h, c) {
                var b;
                if ('' === h.path)
                    return 'full' === h.pathMatch &&
                        (g.hasChildren() || c.length > 0)
                        ? Object.assign({}, L)
                        : {
                              matched: !0,
                              consumedSegments: [],
                              lastChild: 0,
                              parameters: {},
                              positionalParamSegments: {},
                          };
                const k = (h.matcher || Zn)(c, g, h);
                if (!k) return Object.assign({}, L);
                const Z = {};
                le(k.posParams, (He, Ct) => {
                    Z[Ct] = He.path;
                });
                const ce =
                    k.consumed.length > 0
                        ? Object.assign(
                              Object.assign({}, Z),
                              k.consumed[k.consumed.length - 1].parameters
                          )
                        : Z;
                return {
                    matched: !0,
                    consumedSegments: k.consumed,
                    lastChild: k.consumed.length,
                    parameters: ce,
                    positionalParamSegments:
                        null !== (b = k.posParams) && void 0 !== b ? b : {},
                };
            }
            function V(g, h, c, b, M = 'corrected') {
                if (
                    c.length > 0 &&
                    (function ze(g, h, c) {
                        return c.some((b) => xt(g, h, b) && Qt(b) !== et);
                    })(g, c, b)
                ) {
                    const Z = new bt(
                        h,
                        (function ke(g, h, c, b) {
                            const M = {};
                            (M[et] = b),
                                (b._sourceSegment = g),
                                (b._segmentIndexShift = h.length);
                            for (const k of c)
                                if ('' === k.path && Qt(k) !== et) {
                                    const Z = new bt([], {});
                                    (Z._sourceSegment = g),
                                        (Z._segmentIndexShift = h.length),
                                        (M[Qt(k)] = Z);
                                }
                            return M;
                        })(g, h, b, new bt(c, g.children))
                    );
                    return (
                        (Z._sourceSegment = g),
                        (Z._segmentIndexShift = h.length),
                        { segmentGroup: Z, slicedSegments: [] }
                    );
                }
                if (
                    0 === c.length &&
                    (function vt(g, h, c) {
                        return c.some((b) => xt(g, h, b));
                    })(g, c, b)
                ) {
                    const Z = new bt(
                        g.segments,
                        (function fe(g, h, c, b, M, k) {
                            const Z = {};
                            for (const ce of b)
                                if (xt(g, c, ce) && !M[Qt(ce)]) {
                                    const He = new bt([], {});
                                    (He._sourceSegment = g),
                                        (He._segmentIndexShift =
                                            'legacy' === k
                                                ? g.segments.length
                                                : h.length),
                                        (Z[Qt(ce)] = He);
                                }
                            return Object.assign(Object.assign({}, M), Z);
                        })(g, h, c, b, g.children, M)
                    );
                    return (
                        (Z._sourceSegment = g),
                        (Z._segmentIndexShift = h.length),
                        { segmentGroup: Z, slicedSegments: c }
                    );
                }
                const k = new bt(g.segments, g.children);
                return (
                    (k._sourceSegment = g),
                    (k._segmentIndexShift = h.length),
                    { segmentGroup: k, slicedSegments: c }
                );
            }
            function xt(g, h, c) {
                return (
                    (!(g.hasChildren() || h.length > 0) ||
                        'full' !== c.pathMatch) &&
                    '' === c.path
                );
            }
            function dn(g, h, c, b) {
                return (
                    !!(Qt(g) === b || (b !== et && xt(h, c, g))) &&
                    ('**' === g.path || A(h, g, c).matched)
                );
            }
            function Gt(g, h, c) {
                return 0 === h.length && !g.children[c];
            }
            class en {
                constructor(h) {
                    this.segmentGroup = h || null;
                }
            }
            class tr {
                constructor(h) {
                    this.urlTree = h;
                }
            }
            function Tn(g) {
                return new P.y((h) => h.error(new en(g)));
            }
            function Nn(g) {
                return new P.y((h) => h.error(new tr(g)));
            }
            function ei(g) {
                return new P.y((h) =>
                    h.error(
                        new Error(
                            `Only absolute redirects can have named outlets. redirectTo: '${g}'`
                        )
                    )
                );
            }
            class ci {
                constructor(h, c, b, M, k) {
                    (this.configLoader = c),
                        (this.urlSerializer = b),
                        (this.urlTree = M),
                        (this.config = k),
                        (this.allowRedirects = !0),
                        (this.ngModule = h.get(f.h0i));
                }
                apply() {
                    const h = V(
                            this.urlTree.root,
                            [],
                            [],
                            this.config
                        ).segmentGroup,
                        c = new bt(h.segments, h.children);
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        c,
                        et
                    )
                        .pipe(
                            (0, De.U)((k) =>
                                this.createUrlTree(
                                    Ei(k),
                                    this.urlTree.queryParams,
                                    this.urlTree.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, st.K)((k) => {
                                if (k instanceof tr)
                                    return (
                                        (this.allowRedirects = !1),
                                        this.match(k.urlTree)
                                    );
                                throw k instanceof en
                                    ? this.noMatchError(k)
                                    : k;
                            })
                        );
                }
                match(h) {
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        h.root,
                        et
                    )
                        .pipe(
                            (0, De.U)((M) =>
                                this.createUrlTree(
                                    Ei(M),
                                    h.queryParams,
                                    h.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, st.K)((M) => {
                                throw M instanceof en
                                    ? this.noMatchError(M)
                                    : M;
                            })
                        );
                }
                noMatchError(h) {
                    return new Error(
                        `Cannot match any routes. URL Segment: '${h.segmentGroup}'`
                    );
                }
                createUrlTree(h, c, b) {
                    const M =
                        h.segments.length > 0 ? new bt([], { [et]: h }) : h;
                    return new vn(M, c, b);
                }
                expandSegmentGroup(h, c, b, M) {
                    return 0 === b.segments.length && b.hasChildren()
                        ? this.expandChildren(h, c, b).pipe(
                              (0, De.U)((k) => new bt([], k))
                          )
                        : this.expandSegment(h, b, c, b.segments, M, !0);
                }
                expandChildren(h, c, b) {
                    const M = [];
                    for (const k of Object.keys(b.children))
                        'primary' === k ? M.unshift(k) : M.push(k);
                    return (0, w.D)(M).pipe(
                        (0, un.b)((k) => {
                            const Z = b.children[k],
                                ce = T(c, k);
                            return this.expandSegmentGroup(h, ce, Z, k).pipe(
                                (0, De.U)((He) => ({ segment: He, outlet: k }))
                            );
                        }),
                        (0, ot.R)((k, Z) => ((k[Z.outlet] = Z.segment), k), {}),
                        (function Oe(g, h) {
                            const c = arguments.length >= 2;
                            return (b) =>
                                b.pipe(
                                    g ? (0, qe.h)((M, k) => g(M, k, b)) : H.y,
                                    re(1),
                                    c
                                        ? (0, Ee.d)(h)
                                        : (0, Se.T)(() => new oe.K())
                                );
                        })()
                    );
                }
                expandSegment(h, c, b, M, k, Z) {
                    return (0, w.D)(b).pipe(
                        (0, un.b)((ce) =>
                            this.expandSegmentAgainstRoute(
                                h,
                                c,
                                b,
                                ce,
                                M,
                                k,
                                Z
                            ).pipe(
                                (0, st.K)((Ct) => {
                                    if (Ct instanceof en)
                                        return (0, I.of)(null);
                                    throw Ct;
                                })
                            )
                        ),
                        (0, Ft.P)((ce) => !!ce),
                        (0, st.K)((ce, He) => {
                            if (
                                ce instanceof oe.K ||
                                'EmptyError' === ce.name
                            ) {
                                if (Gt(c, M, k))
                                    return (0, I.of)(new bt([], {}));
                                throw new en(c);
                            }
                            throw ce;
                        })
                    );
                }
                expandSegmentAgainstRoute(h, c, b, M, k, Z, ce) {
                    return dn(M, c, k, Z)
                        ? void 0 === M.redirectTo
                            ? this.matchSegmentAgainstRoute(h, c, M, k, Z)
                            : ce && this.allowRedirects
                            ? this.expandSegmentAgainstRouteUsingRedirect(
                                  h,
                                  c,
                                  b,
                                  M,
                                  k,
                                  Z
                              )
                            : Tn(c)
                        : Tn(c);
                }
                expandSegmentAgainstRouteUsingRedirect(h, c, b, M, k, Z) {
                    return '**' === M.path
                        ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(
                              h,
                              b,
                              M,
                              Z
                          )
                        : this.expandRegularSegmentAgainstRouteUsingRedirect(
                              h,
                              c,
                              b,
                              M,
                              k,
                              Z
                          );
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(h, c, b, M) {
                    const k = this.applyRedirectCommands([], b.redirectTo, {});
                    return b.redirectTo.startsWith('/')
                        ? Nn(k)
                        : this.lineralizeSegments(b, k).pipe(
                              (0, Ht.z)((Z) => {
                                  const ce = new bt(Z, {});
                                  return this.expandSegment(h, ce, c, Z, M, !1);
                              })
                          );
                }
                expandRegularSegmentAgainstRouteUsingRedirect(
                    h,
                    c,
                    b,
                    M,
                    k,
                    Z
                ) {
                    const {
                        matched: ce,
                        consumedSegments: He,
                        lastChild: Ct,
                        positionalParamSegments: on,
                    } = A(c, M, k);
                    if (!ce) return Tn(c);
                    const Tt = this.applyRedirectCommands(He, M.redirectTo, on);
                    return M.redirectTo.startsWith('/')
                        ? Nn(Tt)
                        : this.lineralizeSegments(M, Tt).pipe(
                              (0, Ht.z)((Ln) =>
                                  this.expandSegment(
                                      h,
                                      c,
                                      b,
                                      Ln.concat(k.slice(Ct)),
                                      Z,
                                      !1
                                  )
                              )
                          );
                }
                matchSegmentAgainstRoute(h, c, b, M, k) {
                    if ('**' === b.path)
                        return b.loadChildren
                            ? (b._loadedConfig
                                  ? (0, I.of)(b._loadedConfig)
                                  : this.configLoader.load(h.injector, b)
                              ).pipe(
                                  (0, De.U)(
                                      (Ln) => (
                                          (b._loadedConfig = Ln), new bt(M, {})
                                      )
                                  )
                              )
                            : (0, I.of)(new bt(M, {}));
                    const {
                        matched: Z,
                        consumedSegments: ce,
                        lastChild: He,
                    } = A(c, b, M);
                    if (!Z) return Tn(c);
                    const Ct = M.slice(He);
                    return this.getChildConfig(h, b, M).pipe(
                        (0, Ht.z)((Tt) => {
                            const Ln = Tt.module,
                                kn = Tt.routes,
                                { segmentGroup: Ji, slicedSegments: Kr } = V(
                                    c,
                                    ce,
                                    Ct,
                                    kn
                                ),
                                ti = new bt(Ji.segments, Ji.children);
                            if (0 === Kr.length && ti.hasChildren())
                                return this.expandChildren(Ln, kn, ti).pipe(
                                    (0, De.U)((ni) => new bt(ce, ni))
                                );
                            if (0 === kn.length && 0 === Kr.length)
                                return (0, I.of)(new bt(ce, {}));
                            const Ai = Qt(b) === k;
                            return this.expandSegment(
                                Ln,
                                ti,
                                kn,
                                Kr,
                                Ai ? et : k,
                                !0
                            ).pipe(
                                (0, De.U)(
                                    (Yr) =>
                                        new bt(
                                            ce.concat(Yr.segments),
                                            Yr.children
                                        )
                                )
                            );
                        })
                    );
                }
                getChildConfig(h, c, b) {
                    return c.children
                        ? (0, I.of)(new zr(c.children, h))
                        : c.loadChildren
                        ? void 0 !== c._loadedConfig
                            ? (0, I.of)(c._loadedConfig)
                            : this.runCanLoadGuards(h.injector, c, b).pipe(
                                  (0, Ht.z)((M) =>
                                      M
                                          ? this.configLoader
                                                .load(h.injector, c)
                                                .pipe(
                                                    (0, De.U)(
                                                        (k) => (
                                                            (c._loadedConfig =
                                                                k),
                                                            k
                                                        )
                                                    )
                                                )
                                          : (function Vr(g) {
                                                return new P.y((h) =>
                                                    h.error(
                                                        gt(
                                                            `Cannot load children because the guard of the route "path: '${g.path}'" returned false`
                                                        )
                                                    )
                                                );
                                            })(c)
                                  )
                              )
                        : (0, I.of)(new zr([], h));
                }
                runCanLoadGuards(h, c, b) {
                    const M = c.canLoad;
                    if (!M || 0 === M.length) return (0, I.of)(!0);
                    const k = M.map((Z) => {
                        const ce = h.get(Z);
                        let He;
                        if (
                            (function Gi(g) {
                                return g && gr(g.canLoad);
                            })(ce)
                        )
                            He = ce.canLoad(c, b);
                        else {
                            if (!gr(ce))
                                throw new Error('Invalid CanLoad guard');
                            He = ce(c, b);
                        }
                        return $e(He);
                    });
                    return (0, I.of)(k).pipe(
                        rr(),
                        (0, ct.b)((Z) => {
                            if (!li(Z)) return;
                            const ce = gt(
                                `Redirecting to "${this.urlSerializer.serialize(
                                    Z
                                )}"`
                            );
                            throw ((ce.url = Z), ce);
                        }),
                        (0, De.U)((Z) => !0 === Z)
                    );
                }
                lineralizeSegments(h, c) {
                    let b = [],
                        M = c.root;
                    for (;;) {
                        if (
                            ((b = b.concat(M.segments)),
                            0 === M.numberOfChildren)
                        )
                            return (0, I.of)(b);
                        if (M.numberOfChildren > 1 || !M.children[et])
                            return ei(h.redirectTo);
                        M = M.children[et];
                    }
                }
                applyRedirectCommands(h, c, b) {
                    return this.applyRedirectCreatreUrlTree(
                        c,
                        this.urlSerializer.parse(c),
                        h,
                        b
                    );
                }
                applyRedirectCreatreUrlTree(h, c, b, M) {
                    const k = this.createSegmentGroup(h, c.root, b, M);
                    return new vn(
                        k,
                        this.createQueryParams(
                            c.queryParams,
                            this.urlTree.queryParams
                        ),
                        c.fragment
                    );
                }
                createQueryParams(h, c) {
                    const b = {};
                    return (
                        le(h, (M, k) => {
                            if ('string' == typeof M && M.startsWith(':')) {
                                const ce = M.substring(1);
                                b[k] = c[ce];
                            } else b[k] = M;
                        }),
                        b
                    );
                }
                createSegmentGroup(h, c, b, M) {
                    const k = this.createSegments(h, c.segments, b, M);
                    let Z = {};
                    return (
                        le(c.children, (ce, He) => {
                            Z[He] = this.createSegmentGroup(h, ce, b, M);
                        }),
                        new bt(k, Z)
                    );
                }
                createSegments(h, c, b, M) {
                    return c.map((k) =>
                        k.path.startsWith(':')
                            ? this.findPosParam(h, k, M)
                            : this.findOrReturn(k, b)
                    );
                }
                findPosParam(h, c, b) {
                    const M = b[c.path.substring(1)];
                    if (!M)
                        throw new Error(
                            `Cannot redirect to '${h}'. Cannot find '${c.path}'.`
                        );
                    return M;
                }
                findOrReturn(h, c) {
                    let b = 0;
                    for (const M of c) {
                        if (M.path === h.path) return c.splice(b), M;
                        b++;
                    }
                    return h;
                }
            }
            function Ei(g) {
                const h = {};
                for (const b of Object.keys(g.children)) {
                    const k = Ei(g.children[b]);
                    (k.segments.length > 0 || k.hasChildren()) && (h[b] = k);
                }
                return (function Yi(g) {
                    if (1 === g.numberOfChildren && g.children[et]) {
                        const h = g.children[et];
                        return new bt(
                            g.segments.concat(h.segments),
                            h.children
                        );
                    }
                    return g;
                })(new bt(g.segments, h));
            }
            class ns {
                constructor(h) {
                    (this.path = h),
                        (this.route = this.path[this.path.length - 1]);
                }
            }
            class Qi {
                constructor(h, c) {
                    (this.component = h), (this.route = c);
                }
            }
            function jo(g, h, c) {
                const b = g._root;
                return Yn(b, h ? h._root : null, c, [b.value]);
            }
            function Xt(g, h, c) {
                const b = (function Zs(g) {
                    if (!g) return null;
                    for (let h = g.parent; h; h = h.parent) {
                        const c = h.routeConfig;
                        if (c && c._loadedConfig) return c._loadedConfig;
                    }
                    return null;
                })(h);
                return (b ? b.module.injector : c).get(g);
            }
            function Yn(
                g,
                h,
                c,
                b,
                M = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
                const k = Mn(h);
                return (
                    g.children.forEach((Z) => {
                        (function fs(
                            g,
                            h,
                            c,
                            b,
                            M = {
                                canDeactivateChecks: [],
                                canActivateChecks: [],
                            }
                        ) {
                            const k = g.value,
                                Z = h ? h.value : null,
                                ce = c ? c.getContext(g.value.outlet) : null;
                            if (Z && k.routeConfig === Z.routeConfig) {
                                const He = (function Mi(g, h, c) {
                                    if ('function' == typeof c) return c(g, h);
                                    switch (c) {
                                        case 'pathParamsChange':
                                            return !$t(g.url, h.url);
                                        case 'pathParamsOrQueryParamsChange':
                                            return (
                                                !$t(g.url, h.url) ||
                                                !qn(
                                                    g.queryParams,
                                                    h.queryParams
                                                )
                                            );
                                        case 'always':
                                            return !0;
                                        case 'paramsOrQueryParamsChange':
                                            return (
                                                !Jt(g, h) ||
                                                !qn(
                                                    g.queryParams,
                                                    h.queryParams
                                                )
                                            );
                                        default:
                                            return !Jt(g, h);
                                    }
                                })(Z, k, k.routeConfig.runGuardsAndResolvers);
                                He
                                    ? M.canActivateChecks.push(new ns(b))
                                    : ((k.data = Z.data),
                                      (k._resolvedData = Z._resolvedData)),
                                    Yn(
                                        g,
                                        h,
                                        k.component
                                            ? ce
                                                ? ce.children
                                                : null
                                            : c,
                                        b,
                                        M
                                    ),
                                    He &&
                                        ce &&
                                        ce.outlet &&
                                        ce.outlet.isActivated &&
                                        M.canDeactivateChecks.push(
                                            new Qi(ce.outlet.component, Z)
                                        );
                            } else
                                Z && Dr(h, ce, M),
                                    M.canActivateChecks.push(new ns(b)),
                                    Yn(
                                        g,
                                        null,
                                        k.component
                                            ? ce
                                                ? ce.children
                                                : null
                                            : c,
                                        b,
                                        M
                                    );
                        })(Z, k[Z.value.outlet], c, b.concat([Z.value]), M),
                            delete k[Z.value.outlet];
                    }),
                    le(k, (Z, ce) => Dr(Z, c.getContext(ce), M)),
                    M
                );
            }
            function Dr(g, h, c) {
                const b = Mn(g),
                    M = g.value;
                le(b, (k, Z) => {
                    Dr(
                        k,
                        M.component ? (h ? h.children.getContext(Z) : null) : h,
                        c
                    );
                }),
                    c.canDeactivateChecks.push(
                        new Qi(
                            M.component && h && h.outlet && h.outlet.isActivated
                                ? h.outlet.component
                                : null,
                            M
                        )
                    );
            }
            class Ss {}
            function di(g) {
                return new P.y((h) => h.error(g));
            }
            class C {
                constructor(h, c, b, M, k, Z) {
                    (this.rootComponentType = h),
                        (this.config = c),
                        (this.urlTree = b),
                        (this.url = M),
                        (this.paramsInheritanceStrategy = k),
                        (this.relativeLinkResolution = Z);
                }
                recognize() {
                    const h = V(
                            this.urlTree.root,
                            [],
                            [],
                            this.config.filter((Z) => void 0 === Z.redirectTo),
                            this.relativeLinkResolution
                        ).segmentGroup,
                        c = this.processSegmentGroup(this.config, h, et);
                    if (null === c) return null;
                    const b = new Ze(
                            [],
                            Object.freeze({}),
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            {},
                            et,
                            this.rootComponentType,
                            null,
                            this.urlTree.root,
                            -1,
                            {}
                        ),
                        M = new an(b, c),
                        k = new Rt(this.url, M);
                    return this.inheritParamsAndData(k._root), k;
                }
                inheritParamsAndData(h) {
                    const c = h.value,
                        b = Me(c, this.paramsInheritanceStrategy);
                    (c.params = Object.freeze(b.params)),
                        (c.data = Object.freeze(b.data)),
                        h.children.forEach((M) => this.inheritParamsAndData(M));
                }
                processSegmentGroup(h, c, b) {
                    return 0 === c.segments.length && c.hasChildren()
                        ? this.processChildren(h, c)
                        : this.processSegment(h, c, c.segments, b);
                }
                processChildren(h, c) {
                    const b = [];
                    for (const k of Object.keys(c.children)) {
                        const Z = c.children[k],
                            ce = T(h, k),
                            He = this.processSegmentGroup(ce, Z, k);
                        if (null === He) return null;
                        b.push(...He);
                    }
                    const M = Fe(b);
                    return (
                        (function D(g) {
                            g.sort((h, c) =>
                                h.value.outlet === et
                                    ? -1
                                    : c.value.outlet === et
                                    ? 1
                                    : h.value.outlet.localeCompare(
                                          c.value.outlet
                                      )
                            );
                        })(M),
                        M
                    );
                }
                processSegment(h, c, b, M) {
                    for (const k of h) {
                        const Z = this.processSegmentAgainstRoute(k, c, b, M);
                        if (null !== Z) return Z;
                    }
                    return Gt(c, b, M) ? [] : null;
                }
                processSegmentAgainstRoute(h, c, b, M) {
                    if (h.redirectTo || !dn(h, c, b, M)) return null;
                    let k,
                        Z = [],
                        ce = [];
                    if ('**' === h.path) {
                        const kn = b.length > 0 ? se(b).parameters : {};
                        k = new Ze(
                            b,
                            kn,
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            fi(h),
                            Qt(h),
                            h.component,
                            h,
                            yn(c),
                            Cn(c) + b.length,
                            Ur(h)
                        );
                    } else {
                        const kn = A(c, h, b);
                        if (!kn.matched) return null;
                        (Z = kn.consumedSegments),
                            (ce = b.slice(kn.lastChild)),
                            (k = new Ze(
                                Z,
                                kn.parameters,
                                Object.freeze(
                                    Object.assign({}, this.urlTree.queryParams)
                                ),
                                this.urlTree.fragment,
                                fi(h),
                                Qt(h),
                                h.component,
                                h,
                                yn(c),
                                Cn(c) + Z.length,
                                Ur(h)
                            ));
                    }
                    const He = (function m(g) {
                            return g.children
                                ? g.children
                                : g.loadChildren
                                ? g._loadedConfig.routes
                                : [];
                        })(h),
                        { segmentGroup: Ct, slicedSegments: on } = V(
                            c,
                            Z,
                            ce,
                            He.filter((kn) => void 0 === kn.redirectTo),
                            this.relativeLinkResolution
                        );
                    if (0 === on.length && Ct.hasChildren()) {
                        const kn = this.processChildren(He, Ct);
                        return null === kn ? null : [new an(k, kn)];
                    }
                    if (0 === He.length && 0 === on.length)
                        return [new an(k, [])];
                    const Tt = Qt(h) === M,
                        Ln = this.processSegment(He, Ct, on, Tt ? et : M);
                    return null === Ln ? null : [new an(k, Ln)];
                }
            }
            function N(g) {
                const h = g.value.routeConfig;
                return h && '' === h.path && void 0 === h.redirectTo;
            }
            function Fe(g) {
                const h = [],
                    c = new Set();
                for (const b of g) {
                    if (!N(b)) {
                        h.push(b);
                        continue;
                    }
                    const M = h.find(
                        (k) => b.value.routeConfig === k.value.routeConfig
                    );
                    void 0 !== M
                        ? (M.children.push(...b.children), c.add(M))
                        : h.push(b);
                }
                for (const b of c) {
                    const M = Fe(b.children);
                    h.push(new an(b.value, M));
                }
                return h.filter((b) => !c.has(b));
            }
            function yn(g) {
                let h = g;
                for (; h._sourceSegment; ) h = h._sourceSegment;
                return h;
            }
            function Cn(g) {
                let h = g,
                    c = h._segmentIndexShift ? h._segmentIndexShift : 0;
                for (; h._sourceSegment; )
                    (h = h._sourceSegment),
                        (c += h._segmentIndexShift ? h._segmentIndexShift : 0);
                return c - 1;
            }
            function fi(g) {
                return g.data || {};
            }
            function Ur(g) {
                return g.resolve || {};
            }
            function _o(g) {
                return [...Object.keys(g), ...Object.getOwnPropertySymbols(g)];
            }
            function Zi(g) {
                return (0, ut.w)((h) => {
                    const c = g(h);
                    return c
                        ? (0, w.D)(c).pipe((0, De.U)(() => h))
                        : (0, I.of)(h);
                });
            }
            class ki extends class Or {
                shouldDetach(h) {
                    return !1;
                }
                store(h, c) {}
                shouldAttach(h) {
                    return !1;
                }
                retrieve(h) {
                    return null;
                }
                shouldReuseRoute(h, c) {
                    return h.routeConfig === c.routeConfig;
                }
            } {}
            const ir = new f.OlP('ROUTES');
            class pi {
                constructor(h, c, b, M) {
                    (this.injector = h),
                        (this.compiler = c),
                        (this.onLoadStartListener = b),
                        (this.onLoadEndListener = M);
                }
                load(h, c) {
                    if (c._loader$) return c._loader$;
                    this.onLoadStartListener && this.onLoadStartListener(c);
                    const M = this.loadModuleFactory(c.loadChildren).pipe(
                        (0, De.U)((k) => {
                            this.onLoadEndListener && this.onLoadEndListener(c);
                            const Z = k.create(h);
                            return new zr(
                                wr(
                                    Z.injector.get(
                                        ir,
                                        void 0,
                                        f.XFs.Self | f.XFs.Optional
                                    )
                                ).map(Ii),
                                Z
                            );
                        }),
                        (0, st.K)((k) => {
                            throw ((c._loader$ = void 0), k);
                        })
                    );
                    return (
                        (c._loader$ = new me(M, () => new Be.x()).pipe(Q())),
                        c._loader$
                    );
                }
                loadModuleFactory(h) {
                    return $e(h()).pipe(
                        (0, Ht.z)((c) =>
                            c instanceof f.YKP
                                ? (0, I.of)(c)
                                : (0, w.D)(this.compiler.compileModuleAsync(c))
                        )
                    );
                }
            }
            class na {
                shouldProcessUrl(h) {
                    return !0;
                }
                extract(h) {
                    return h;
                }
                merge(h, c) {
                    return h;
                }
            }
            function ra(g) {
                throw g;
            }
            function Ms(g, h, c) {
                return h.parse('/');
            }
            function Io(g, h) {
                return (0, I.of)(null);
            }
            const Os = {
                    paths: 'exact',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'exact',
                },
                is = {
                    paths: 'subset',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'subset',
                };
            let Nr = (() => {
                class g {
                    constructor(c, b, M, k, Z, ce, He) {
                        (this.rootComponentType = c),
                            (this.urlSerializer = b),
                            (this.rootContexts = M),
                            (this.location = k),
                            (this.config = He),
                            (this.lastSuccessfulNavigation = null),
                            (this.currentNavigation = null),
                            (this.disposed = !1),
                            (this.navigationId = 0),
                            (this.currentPageId = 0),
                            (this.isNgZoneEnabled = !1),
                            (this.events = new Be.x()),
                            (this.errorHandler = ra),
                            (this.malformedUriErrorHandler = Ms),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1),
                            (this.hooks = {
                                beforePreactivation: Io,
                                afterPreactivation: Io,
                            }),
                            (this.urlHandlingStrategy = new na()),
                            (this.routeReuseStrategy = new ki()),
                            (this.onSameUrlNavigation = 'ignore'),
                            (this.paramsInheritanceStrategy = 'emptyOnly'),
                            (this.urlUpdateStrategy = 'deferred'),
                            (this.relativeLinkResolution = 'corrected'),
                            (this.canceledNavigationResolution = 'replace'),
                            (this.ngModule = Z.get(f.h0i)),
                            (this.console = Z.get(f.c2e));
                        const Tt = Z.get(f.R0b);
                        (this.isNgZoneEnabled =
                            Tt instanceof f.R0b && f.R0b.isInAngularZone()),
                            this.resetConfig(He),
                            (this.currentUrlTree = (function Te() {
                                return new vn(new bt([], {}), {}, null);
                            })()),
                            (this.rawUrlTree = this.currentUrlTree),
                            (this.browserUrlTree = this.currentUrlTree),
                            (this.configLoader = new pi(
                                Z,
                                ce,
                                (Ln) => this.triggerEvent(new xn(Ln)),
                                (Ln) => this.triggerEvent(new In(Ln))
                            )),
                            (this.routerState = J(
                                this.currentUrlTree,
                                this.rootComponentType
                            )),
                            (this.transitions = new F.X({
                                id: 0,
                                targetPageId: 0,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.currentUrlTree,
                                extractedUrl: this.urlHandlingStrategy.extract(
                                    this.currentUrlTree
                                ),
                                urlAfterRedirects:
                                    this.urlHandlingStrategy.extract(
                                        this.currentUrlTree
                                    ),
                                rawUrl: this.currentUrlTree,
                                extras: {},
                                resolve: null,
                                reject: null,
                                promise: Promise.resolve(!0),
                                source: 'imperative',
                                restoredState: null,
                                currentSnapshot: this.routerState.snapshot,
                                targetSnapshot: null,
                                currentRouterState: this.routerState,
                                targetRouterState: null,
                                guards: {
                                    canActivateChecks: [],
                                    canDeactivateChecks: [],
                                },
                                guardsResult: null,
                            })),
                            (this.navigations = this.setupNavigations(
                                this.transitions
                            )),
                            this.processNavigations();
                    }
                    get browserPageId() {
                        var c;
                        return null === (c = this.location.getState()) ||
                            void 0 === c
                            ? void 0
                            : c.ɵrouterPageId;
                    }
                    setupNavigations(c) {
                        const b = this.events;
                        return c.pipe(
                            (0, qe.h)((M) => 0 !== M.id),
                            (0, De.U)((M) =>
                                Object.assign(Object.assign({}, M), {
                                    extractedUrl:
                                        this.urlHandlingStrategy.extract(
                                            M.rawUrl
                                        ),
                                })
                            ),
                            (0, ut.w)((M) => {
                                let k = !1,
                                    Z = !1;
                                return (0, I.of)(M).pipe(
                                    (0, ct.b)((ce) => {
                                        this.currentNavigation = {
                                            id: ce.id,
                                            initialUrl: ce.currentRawUrl,
                                            extractedUrl: ce.extractedUrl,
                                            trigger: ce.source,
                                            extras: ce.extras,
                                            previousNavigation: this
                                                .lastSuccessfulNavigation
                                                ? Object.assign(
                                                      Object.assign(
                                                          {},
                                                          this
                                                              .lastSuccessfulNavigation
                                                      ),
                                                      {
                                                          previousNavigation:
                                                              null,
                                                      }
                                                  )
                                                : null,
                                        };
                                    }),
                                    (0, ut.w)((ce) => {
                                        const He =
                                                this.browserUrlTree.toString(),
                                            Ct =
                                                !this.navigated ||
                                                ce.extractedUrl.toString() !==
                                                    He ||
                                                He !==
                                                    this.currentUrlTree.toString();
                                        if (
                                            ('reload' ===
                                                this.onSameUrlNavigation ||
                                                Ct) &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                ce.rawUrl
                                            )
                                        )
                                            return (
                                                lr(ce.source) &&
                                                    (this.browserUrlTree =
                                                        ce.extractedUrl),
                                                (0, I.of)(ce).pipe(
                                                    (0, ut.w)((Tt) => {
                                                        const Ln =
                                                            this.transitions.getValue();
                                                        return (
                                                            b.next(
                                                                new jn(
                                                                    Tt.id,
                                                                    this.serializeUrl(
                                                                        Tt.extractedUrl
                                                                    ),
                                                                    Tt.source,
                                                                    Tt.restoredState
                                                                )
                                                            ),
                                                            Ln !==
                                                            this.transitions.getValue()
                                                                ? Pe.E
                                                                : Promise.resolve(
                                                                      Tt
                                                                  )
                                                        );
                                                    }),
                                                    (function Li(g, h, c, b) {
                                                        return (0, ut.w)((M) =>
                                                            (function Ot(
                                                                g,
                                                                h,
                                                                c,
                                                                b,
                                                                M
                                                            ) {
                                                                return new ci(
                                                                    g,
                                                                    h,
                                                                    c,
                                                                    b,
                                                                    M
                                                                ).apply();
                                                            })(
                                                                g,
                                                                h,
                                                                c,
                                                                M.extractedUrl,
                                                                b
                                                            ).pipe(
                                                                (0, De.U)((k) =>
                                                                    Object.assign(
                                                                        Object.assign(
                                                                            {},
                                                                            M
                                                                        ),
                                                                        {
                                                                            urlAfterRedirects:
                                                                                k,
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.ngModule.injector,
                                                        this.configLoader,
                                                        this.urlSerializer,
                                                        this.config
                                                    ),
                                                    (0, ct.b)((Tt) => {
                                                        this.currentNavigation =
                                                            Object.assign(
                                                                Object.assign(
                                                                    {},
                                                                    this
                                                                        .currentNavigation
                                                                ),
                                                                {
                                                                    finalUrl:
                                                                        Tt.urlAfterRedirects,
                                                                }
                                                            );
                                                    }),
                                                    (function hi(
                                                        g,
                                                        h,
                                                        c,
                                                        b,
                                                        M
                                                    ) {
                                                        return (0, Ht.z)((k) =>
                                                            (function Ci(
                                                                g,
                                                                h,
                                                                c,
                                                                b,
                                                                M = 'emptyOnly',
                                                                k = 'legacy'
                                                            ) {
                                                                try {
                                                                    const Z =
                                                                        new C(
                                                                            g,
                                                                            h,
                                                                            c,
                                                                            b,
                                                                            M,
                                                                            k
                                                                        ).recognize();
                                                                    return null ===
                                                                        Z
                                                                        ? di(
                                                                              new Ss()
                                                                          )
                                                                        : (0,
                                                                          I.of)(
                                                                              Z
                                                                          );
                                                                } catch (Z) {
                                                                    return di(
                                                                        Z
                                                                    );
                                                                }
                                                            })(
                                                                g,
                                                                h,
                                                                k.urlAfterRedirects,
                                                                c(
                                                                    k.urlAfterRedirects
                                                                ),
                                                                b,
                                                                M
                                                            ).pipe(
                                                                (0, De.U)((Z) =>
                                                                    Object.assign(
                                                                        Object.assign(
                                                                            {},
                                                                            k
                                                                        ),
                                                                        {
                                                                            targetSnapshot:
                                                                                Z,
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.rootComponentType,
                                                        this.config,
                                                        (Tt) =>
                                                            this.serializeUrl(
                                                                Tt
                                                            ),
                                                        this
                                                            .paramsInheritanceStrategy,
                                                        this
                                                            .relativeLinkResolution
                                                    ),
                                                    (0, ct.b)((Tt) => {
                                                        if (
                                                            'eager' ===
                                                            this
                                                                .urlUpdateStrategy
                                                        ) {
                                                            if (
                                                                !Tt.extras
                                                                    .skipLocationChange
                                                            ) {
                                                                const kn =
                                                                    this.urlHandlingStrategy.merge(
                                                                        Tt.urlAfterRedirects,
                                                                        Tt.rawUrl
                                                                    );
                                                                this.setBrowserUrl(
                                                                    kn,
                                                                    Tt
                                                                );
                                                            }
                                                            this.browserUrlTree =
                                                                Tt.urlAfterRedirects;
                                                        }
                                                        const Ln = new Qn(
                                                            Tt.id,
                                                            this.serializeUrl(
                                                                Tt.extractedUrl
                                                            ),
                                                            this.serializeUrl(
                                                                Tt.urlAfterRedirects
                                                            ),
                                                            Tt.targetSnapshot
                                                        );
                                                        b.next(Ln);
                                                    })
                                                )
                                            );
                                        if (
                                            Ct &&
                                            this.rawUrlTree &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                this.rawUrlTree
                                            )
                                        ) {
                                            const {
                                                    id: Ln,
                                                    extractedUrl: kn,
                                                    source: Ji,
                                                    restoredState: Kr,
                                                    extras: ti,
                                                } = ce,
                                                Ai = new jn(
                                                    Ln,
                                                    this.serializeUrl(kn),
                                                    Ji,
                                                    Kr
                                                );
                                            b.next(Ai);
                                            const jr = J(
                                                kn,
                                                this.rootComponentType
                                            ).snapshot;
                                            return (0, I.of)(
                                                Object.assign(
                                                    Object.assign({}, ce),
                                                    {
                                                        targetSnapshot: jr,
                                                        urlAfterRedirects: kn,
                                                        extras: Object.assign(
                                                            Object.assign(
                                                                {},
                                                                ti
                                                            ),
                                                            {
                                                                skipLocationChange:
                                                                    !1,
                                                                replaceUrl: !1,
                                                            }
                                                        ),
                                                    }
                                                )
                                            );
                                        }
                                        return (
                                            (this.rawUrlTree = ce.rawUrl),
                                            ce.resolve(null),
                                            Pe.E
                                        );
                                    }),
                                    Zi((ce) => {
                                        const {
                                            targetSnapshot: He,
                                            id: Ct,
                                            extractedUrl: on,
                                            rawUrl: Tt,
                                            extras: {
                                                skipLocationChange: Ln,
                                                replaceUrl: kn,
                                            },
                                        } = ce;
                                        return this.hooks.beforePreactivation(
                                            He,
                                            {
                                                navigationId: Ct,
                                                appliedUrlTree: on,
                                                rawUrlTree: Tt,
                                                skipLocationChange: !!Ln,
                                                replaceUrl: !!kn,
                                            }
                                        );
                                    }),
                                    (0, ct.b)((ce) => {
                                        const He = new cr(
                                            ce.id,
                                            this.serializeUrl(ce.extractedUrl),
                                            this.serializeUrl(
                                                ce.urlAfterRedirects
                                            ),
                                            ce.targetSnapshot
                                        );
                                        this.triggerEvent(He);
                                    }),
                                    (0, De.U)((ce) =>
                                        Object.assign(Object.assign({}, ce), {
                                            guards: jo(
                                                ce.targetSnapshot,
                                                ce.currentSnapshot,
                                                this.rootContexts
                                            ),
                                        })
                                    ),
                                    (function hs(g, h) {
                                        return (0, Ht.z)((c) => {
                                            const {
                                                targetSnapshot: b,
                                                currentSnapshot: M,
                                                guards: {
                                                    canActivateChecks: k,
                                                    canDeactivateChecks: Z,
                                                },
                                            } = c;
                                            return 0 === Z.length &&
                                                0 === k.length
                                                ? (0, I.of)(
                                                      Object.assign(
                                                          Object.assign({}, c),
                                                          { guardsResult: !0 }
                                                      )
                                                  )
                                                : (function ws(g, h, c, b) {
                                                      return (0, w.D)(g).pipe(
                                                          (0, Ht.z)((M) =>
                                                              (function Di(
                                                                  g,
                                                                  h,
                                                                  c,
                                                                  b,
                                                                  M
                                                              ) {
                                                                  const k =
                                                                      h &&
                                                                      h.routeConfig
                                                                          ? h
                                                                                .routeConfig
                                                                                .canDeactivate
                                                                          : null;
                                                                  if (
                                                                      !k ||
                                                                      0 ===
                                                                          k.length
                                                                  )
                                                                      return (0,
                                                                      I.of)(!0);
                                                                  const Z =
                                                                      k.map(
                                                                          (
                                                                              ce
                                                                          ) => {
                                                                              const He =
                                                                                  Xt(
                                                                                      ce,
                                                                                      h,
                                                                                      M
                                                                                  );
                                                                              let Ct;
                                                                              if (
                                                                                  (function $n(
                                                                                      g
                                                                                  ) {
                                                                                      return (
                                                                                          g &&
                                                                                          gr(
                                                                                              g.canDeactivate
                                                                                          )
                                                                                      );
                                                                                  })(
                                                                                      He
                                                                                  )
                                                                              )
                                                                                  Ct =
                                                                                      $e(
                                                                                          He.canDeactivate(
                                                                                              g,
                                                                                              h,
                                                                                              c,
                                                                                              b
                                                                                          )
                                                                                      );
                                                                              else {
                                                                                  if (
                                                                                      !gr(
                                                                                          He
                                                                                      )
                                                                                  )
                                                                                      throw new Error(
                                                                                          'Invalid CanDeactivate guard'
                                                                                      );
                                                                                  Ct =
                                                                                      $e(
                                                                                          He(
                                                                                              g,
                                                                                              h,
                                                                                              c,
                                                                                              b
                                                                                          )
                                                                                      );
                                                                              }
                                                                              return Ct.pipe(
                                                                                  (0,
                                                                                  Ft.P)()
                                                                              );
                                                                          }
                                                                      );
                                                                  return (0,
                                                                  I.of)(Z).pipe(
                                                                      rr()
                                                                  );
                                                              })(
                                                                  M.component,
                                                                  M.route,
                                                                  c,
                                                                  h,
                                                                  b
                                                              )
                                                          ),
                                                          (0, Ft.P)(
                                                              (M) => !0 !== M,
                                                              !0
                                                          )
                                                      );
                                                  })(Z, b, M, g).pipe(
                                                      (0, Ht.z)((ce) =>
                                                          ce &&
                                                          (function cs(g) {
                                                              return (
                                                                  'boolean' ==
                                                                  typeof g
                                                              );
                                                          })(ce)
                                                              ? (function So(
                                                                    g,
                                                                    h,
                                                                    c,
                                                                    b
                                                                ) {
                                                                    return (0,
                                                                    w.D)(
                                                                        h
                                                                    ).pipe(
                                                                        (0,
                                                                        un.b)(
                                                                            (
                                                                                M
                                                                            ) =>
                                                                                (0,
                                                                                q.z)(
                                                                                    (function ps(
                                                                                        g,
                                                                                        h
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                g &&
                                                                                                h &&
                                                                                                h(
                                                                                                    new rn(
                                                                                                        g
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            I.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        M
                                                                                            .route
                                                                                            .parent,
                                                                                        b
                                                                                    ),
                                                                                    (function Ts(
                                                                                        g,
                                                                                        h
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                g &&
                                                                                                h &&
                                                                                                h(
                                                                                                    new At(
                                                                                                        g
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            I.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        M.route,
                                                                                        b
                                                                                    ),
                                                                                    (function mr(
                                                                                        g,
                                                                                        h,
                                                                                        c
                                                                                    ) {
                                                                                        const b =
                                                                                                h[
                                                                                                    h.length -
                                                                                                        1
                                                                                                ],
                                                                                            k =
                                                                                                h
                                                                                                    .slice(
                                                                                                        0,
                                                                                                        h.length -
                                                                                                            1
                                                                                                    )
                                                                                                    .reverse()
                                                                                                    .map(
                                                                                                        (
                                                                                                            Z
                                                                                                        ) =>
                                                                                                            (function Ke(
                                                                                                                g
                                                                                                            ) {
                                                                                                                const h =
                                                                                                                    g.routeConfig
                                                                                                                        ? g
                                                                                                                              .routeConfig
                                                                                                                              .canActivateChild
                                                                                                                        : null;
                                                                                                                return h &&
                                                                                                                    0 !==
                                                                                                                        h.length
                                                                                                                    ? {
                                                                                                                          node: g,
                                                                                                                          guards: h,
                                                                                                                      }
                                                                                                                    : null;
                                                                                                            })(
                                                                                                                Z
                                                                                                            )
                                                                                                    )
                                                                                                    .filter(
                                                                                                        (
                                                                                                            Z
                                                                                                        ) =>
                                                                                                            null !==
                                                                                                            Z
                                                                                                    )
                                                                                                    .map(
                                                                                                        (
                                                                                                            Z
                                                                                                        ) =>
                                                                                                            Re(
                                                                                                                () => {
                                                                                                                    const ce =
                                                                                                                        Z.guards.map(
                                                                                                                            (
                                                                                                                                He
                                                                                                                            ) => {
                                                                                                                                const Ct =
                                                                                                                                    Xt(
                                                                                                                                        He,
                                                                                                                                        Z.node,
                                                                                                                                        c
                                                                                                                                    );
                                                                                                                                let on;
                                                                                                                                if (
                                                                                                                                    (function _i(
                                                                                                                                        g
                                                                                                                                    ) {
                                                                                                                                        return (
                                                                                                                                            g &&
                                                                                                                                            gr(
                                                                                                                                                g.canActivateChild
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                    })(
                                                                                                                                        Ct
                                                                                                                                    )
                                                                                                                                )
                                                                                                                                    on =
                                                                                                                                        $e(
                                                                                                                                            Ct.canActivateChild(
                                                                                                                                                b,
                                                                                                                                                g
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                else {
                                                                                                                                    if (
                                                                                                                                        !gr(
                                                                                                                                            Ct
                                                                                                                                        )
                                                                                                                                    )
                                                                                                                                        throw new Error(
                                                                                                                                            'Invalid CanActivateChild guard'
                                                                                                                                        );
                                                                                                                                    on =
                                                                                                                                        $e(
                                                                                                                                            Ct(
                                                                                                                                                b,
                                                                                                                                                g
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                }
                                                                                                                                return on.pipe(
                                                                                                                                    (0,
                                                                                                                                    Ft.P)()
                                                                                                                                );
                                                                                                                            }
                                                                                                                        );
                                                                                                                    return (0,
                                                                                                                    I.of)(
                                                                                                                        ce
                                                                                                                    ).pipe(
                                                                                                                        rr()
                                                                                                                    );
                                                                                                                }
                                                                                                            )
                                                                                                    );
                                                                                        return (0,
                                                                                        I.of)(
                                                                                            k
                                                                                        ).pipe(
                                                                                            rr()
                                                                                        );
                                                                                    })(
                                                                                        g,
                                                                                        M.path,
                                                                                        c
                                                                                    ),
                                                                                    (function gs(
                                                                                        g,
                                                                                        h,
                                                                                        c
                                                                                    ) {
                                                                                        const b =
                                                                                            h.routeConfig
                                                                                                ? h
                                                                                                      .routeConfig
                                                                                                      .canActivate
                                                                                                : null;
                                                                                        if (
                                                                                            !b ||
                                                                                            0 ===
                                                                                                b.length
                                                                                        )
                                                                                            return (0,
                                                                                            I.of)(
                                                                                                !0
                                                                                            );
                                                                                        const M =
                                                                                            b.map(
                                                                                                (
                                                                                                    k
                                                                                                ) =>
                                                                                                    Re(
                                                                                                        () => {
                                                                                                            const Z =
                                                                                                                Xt(
                                                                                                                    k,
                                                                                                                    h,
                                                                                                                    c
                                                                                                                );
                                                                                                            let ce;
                                                                                                            if (
                                                                                                                (function ds(
                                                                                                                    g
                                                                                                                ) {
                                                                                                                    return (
                                                                                                                        g &&
                                                                                                                        gr(
                                                                                                                            g.canActivate
                                                                                                                        )
                                                                                                                    );
                                                                                                                })(
                                                                                                                    Z
                                                                                                                )
                                                                                                            )
                                                                                                                ce =
                                                                                                                    $e(
                                                                                                                        Z.canActivate(
                                                                                                                            h,
                                                                                                                            g
                                                                                                                        )
                                                                                                                    );
                                                                                                            else {
                                                                                                                if (
                                                                                                                    !gr(
                                                                                                                        Z
                                                                                                                    )
                                                                                                                )
                                                                                                                    throw new Error(
                                                                                                                        'Invalid CanActivate guard'
                                                                                                                    );
                                                                                                                ce =
                                                                                                                    $e(
                                                                                                                        Z(
                                                                                                                            h,
                                                                                                                            g
                                                                                                                        )
                                                                                                                    );
                                                                                                            }
                                                                                                            return ce.pipe(
                                                                                                                (0,
                                                                                                                Ft.P)()
                                                                                                            );
                                                                                                        }
                                                                                                    )
                                                                                            );
                                                                                        return (0,
                                                                                        I.of)(
                                                                                            M
                                                                                        ).pipe(
                                                                                            rr()
                                                                                        );
                                                                                    })(
                                                                                        g,
                                                                                        M.route,
                                                                                        c
                                                                                    )
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        Ft.P)(
                                                                            (
                                                                                M
                                                                            ) =>
                                                                                !0 !==
                                                                                M,
                                                                            !0
                                                                        )
                                                                    );
                                                                })(b, k, g, h)
                                                              : (0, I.of)(ce)
                                                      ),
                                                      (0, De.U)((ce) =>
                                                          Object.assign(
                                                              Object.assign(
                                                                  {},
                                                                  c
                                                              ),
                                                              {
                                                                  guardsResult:
                                                                      ce,
                                                              }
                                                          )
                                                      )
                                                  );
                                        });
                                    })(this.ngModule.injector, (ce) =>
                                        this.triggerEvent(ce)
                                    ),
                                    (0, ct.b)((ce) => {
                                        if (li(ce.guardsResult)) {
                                            const Ct = gt(
                                                `Redirecting to "${this.serializeUrl(
                                                    ce.guardsResult
                                                )}"`
                                            );
                                            throw (
                                                ((Ct.url = ce.guardsResult), Ct)
                                            );
                                        }
                                        const He = new Ut(
                                            ce.id,
                                            this.serializeUrl(ce.extractedUrl),
                                            this.serializeUrl(
                                                ce.urlAfterRedirects
                                            ),
                                            ce.targetSnapshot,
                                            !!ce.guardsResult
                                        );
                                        this.triggerEvent(He);
                                    }),
                                    (0, qe.h)(
                                        (ce) =>
                                            !!ce.guardsResult ||
                                            (this.restoreHistory(ce),
                                            this.cancelNavigationTransition(
                                                ce,
                                                ''
                                            ),
                                            !1)
                                    ),
                                    Zi((ce) => {
                                        if (ce.guards.canActivateChecks.length)
                                            return (0, I.of)(ce).pipe(
                                                (0, ct.b)((He) => {
                                                    const Ct = new Fn(
                                                        He.id,
                                                        this.serializeUrl(
                                                            He.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            He.urlAfterRedirects
                                                        ),
                                                        He.targetSnapshot
                                                    );
                                                    this.triggerEvent(Ct);
                                                }),
                                                (0, ut.w)((He) => {
                                                    let Ct = !1;
                                                    return (0, I.of)(He).pipe(
                                                        (function rs(g, h) {
                                                            return (0, Ht.z)(
                                                                (c) => {
                                                                    const {
                                                                        targetSnapshot:
                                                                            b,
                                                                        guards: {
                                                                            canActivateChecks:
                                                                                M,
                                                                        },
                                                                    } = c;
                                                                    if (
                                                                        !M.length
                                                                    )
                                                                        return (0,
                                                                        I.of)(
                                                                            c
                                                                        );
                                                                    let k = 0;
                                                                    return (0,
                                                                    w.D)(
                                                                        M
                                                                    ).pipe(
                                                                        (0,
                                                                        un.b)(
                                                                            (
                                                                                Z
                                                                            ) =>
                                                                                (function qs(
                                                                                    g,
                                                                                    h,
                                                                                    c,
                                                                                    b
                                                                                ) {
                                                                                    return (function Js(
                                                                                        g,
                                                                                        h,
                                                                                        c,
                                                                                        b
                                                                                    ) {
                                                                                        const M =
                                                                                            _o(
                                                                                                g
                                                                                            );
                                                                                        if (
                                                                                            0 ===
                                                                                            M.length
                                                                                        )
                                                                                            return (0,
                                                                                            I.of)(
                                                                                                {}
                                                                                            );
                                                                                        const k =
                                                                                            {};
                                                                                        return (0,
                                                                                        w.D)(
                                                                                            M
                                                                                        ).pipe(
                                                                                            (0,
                                                                                            Ht.z)(
                                                                                                (
                                                                                                    Z
                                                                                                ) =>
                                                                                                    (function Is(
                                                                                                        g,
                                                                                                        h,
                                                                                                        c,
                                                                                                        b
                                                                                                    ) {
                                                                                                        const M =
                                                                                                            Xt(
                                                                                                                g,
                                                                                                                h,
                                                                                                                b
                                                                                                            );
                                                                                                        return $e(
                                                                                                            M.resolve
                                                                                                                ? M.resolve(
                                                                                                                      h,
                                                                                                                      c
                                                                                                                  )
                                                                                                                : M(
                                                                                                                      h,
                                                                                                                      c
                                                                                                                  )
                                                                                                        );
                                                                                                    })(
                                                                                                        g[
                                                                                                            Z
                                                                                                        ],
                                                                                                        h,
                                                                                                        c,
                                                                                                        b
                                                                                                    ).pipe(
                                                                                                        (0,
                                                                                                        ct.b)(
                                                                                                            (
                                                                                                                ce
                                                                                                            ) => {
                                                                                                                k[
                                                                                                                    Z
                                                                                                                ] =
                                                                                                                    ce;
                                                                                                            }
                                                                                                        )
                                                                                                    )
                                                                                            ),
                                                                                            re(
                                                                                                1
                                                                                            ),
                                                                                            (0,
                                                                                            Ht.z)(
                                                                                                () =>
                                                                                                    _o(
                                                                                                        k
                                                                                                    )
                                                                                                        .length ===
                                                                                                    M.length
                                                                                                        ? (0,
                                                                                                          I.of)(
                                                                                                              k
                                                                                                          )
                                                                                                        : Pe.E
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        g._resolve,
                                                                                        g,
                                                                                        h,
                                                                                        b
                                                                                    ).pipe(
                                                                                        (0,
                                                                                        De.U)(
                                                                                            (
                                                                                                k
                                                                                            ) => (
                                                                                                (g._resolvedData =
                                                                                                    k),
                                                                                                (g.data =
                                                                                                    Object.assign(
                                                                                                        Object.assign(
                                                                                                            {},
                                                                                                            g.data
                                                                                                        ),
                                                                                                        Me(
                                                                                                            g,
                                                                                                            c
                                                                                                        )
                                                                                                            .resolve
                                                                                                    )),
                                                                                                null
                                                                                            )
                                                                                        )
                                                                                    );
                                                                                })(
                                                                                    Z.route,
                                                                                    b,
                                                                                    g,
                                                                                    h
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        ct.b)(
                                                                            () =>
                                                                                k++
                                                                        ),
                                                                        re(1),
                                                                        (0,
                                                                        Ht.z)(
                                                                            (
                                                                                Z
                                                                            ) =>
                                                                                k ===
                                                                                M.length
                                                                                    ? (0,
                                                                                      I.of)(
                                                                                          c
                                                                                      )
                                                                                    : Pe.E
                                                                        )
                                                                    );
                                                                }
                                                            );
                                                        })(
                                                            this
                                                                .paramsInheritanceStrategy,
                                                            this.ngModule
                                                                .injector
                                                        ),
                                                        (0, ct.b)({
                                                            next: () =>
                                                                (Ct = !0),
                                                            complete: () => {
                                                                Ct ||
                                                                    (this.restoreHistory(
                                                                        He
                                                                    ),
                                                                    this.cancelNavigationTransition(
                                                                        He,
                                                                        "At least one route resolver didn't emit any value."
                                                                    ));
                                                            },
                                                        })
                                                    );
                                                }),
                                                (0, ct.b)((He) => {
                                                    const Ct = new yt(
                                                        He.id,
                                                        this.serializeUrl(
                                                            He.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            He.urlAfterRedirects
                                                        ),
                                                        He.targetSnapshot
                                                    );
                                                    this.triggerEvent(Ct);
                                                })
                                            );
                                    }),
                                    Zi((ce) => {
                                        const {
                                            targetSnapshot: He,
                                            id: Ct,
                                            extractedUrl: on,
                                            rawUrl: Tt,
                                            extras: {
                                                skipLocationChange: Ln,
                                                replaceUrl: kn,
                                            },
                                        } = ce;
                                        return this.hooks.afterPreactivation(
                                            He,
                                            {
                                                navigationId: Ct,
                                                appliedUrlTree: on,
                                                rawUrlTree: Tt,
                                                skipLocationChange: !!Ln,
                                                replaceUrl: !!kn,
                                            }
                                        );
                                    }),
                                    (0, De.U)((ce) => {
                                        const He = (function pr(g, h, c) {
                                            const b = mi(
                                                g,
                                                h._root,
                                                c ? c._root : void 0
                                            );
                                            return new Fr(b, h);
                                        })(
                                            this.routeReuseStrategy,
                                            ce.targetSnapshot,
                                            ce.currentRouterState
                                        );
                                        return Object.assign(
                                            Object.assign({}, ce),
                                            { targetRouterState: He }
                                        );
                                    }),
                                    (0, ct.b)((ce) => {
                                        (this.currentUrlTree =
                                            ce.urlAfterRedirects),
                                            (this.rawUrlTree =
                                                this.urlHandlingStrategy.merge(
                                                    ce.urlAfterRedirects,
                                                    ce.rawUrl
                                                )),
                                            (this.routerState =
                                                ce.targetRouterState),
                                            'deferred' ===
                                                this.urlUpdateStrategy &&
                                                (ce.extras.skipLocationChange ||
                                                    this.setBrowserUrl(
                                                        this.rawUrlTree,
                                                        ce
                                                    ),
                                                (this.browserUrlTree =
                                                    ce.urlAfterRedirects));
                                    }),
                                    ((g, h, c) =>
                                        (0, De.U)(
                                            (b) => (
                                                new Jr(
                                                    h,
                                                    b.targetRouterState,
                                                    b.currentRouterState,
                                                    c
                                                ).activate(g),
                                                b
                                            )
                                        ))(
                                        this.rootContexts,
                                        this.routeReuseStrategy,
                                        (ce) => this.triggerEvent(ce)
                                    ),
                                    (0, ct.b)({
                                        next() {
                                            k = !0;
                                        },
                                        complete() {
                                            k = !0;
                                        },
                                    }),
                                    (function Ne(g) {
                                        return (0, ae.e)((h, c) => {
                                            try {
                                                h.subscribe(c);
                                            } finally {
                                                c.add(g);
                                            }
                                        });
                                    })(() => {
                                        var ce;
                                        k ||
                                            Z ||
                                            this.cancelNavigationTransition(
                                                M,
                                                `Navigation ID ${M.id} is not equal to the current navigation id ${this.navigationId}`
                                            ),
                                            (null ===
                                                (ce = this.currentNavigation) ||
                                            void 0 === ce
                                                ? void 0
                                                : ce.id) === M.id &&
                                                (this.currentNavigation = null);
                                    }),
                                    (0, st.K)((ce) => {
                                        if (
                                            ((Z = !0),
                                            (function Ar(g) {
                                                return g && g[pt];
                                            })(ce))
                                        ) {
                                            const He = li(ce.url);
                                            He ||
                                                ((this.navigated = !0),
                                                this.restoreHistory(M, !0));
                                            const Ct = new Gn(
                                                M.id,
                                                this.serializeUrl(
                                                    M.extractedUrl
                                                ),
                                                ce.message
                                            );
                                            b.next(Ct),
                                                He
                                                    ? setTimeout(() => {
                                                          const on =
                                                                  this.urlHandlingStrategy.merge(
                                                                      ce.url,
                                                                      this
                                                                          .rawUrlTree
                                                                  ),
                                                              Tt = {
                                                                  skipLocationChange:
                                                                      M.extras
                                                                          .skipLocationChange,
                                                                  replaceUrl:
                                                                      'eager' ===
                                                                          this
                                                                              .urlUpdateStrategy ||
                                                                      lr(
                                                                          M.source
                                                                      ),
                                                              };
                                                          this.scheduleNavigation(
                                                              on,
                                                              'imperative',
                                                              null,
                                                              Tt,
                                                              {
                                                                  resolve:
                                                                      M.resolve,
                                                                  reject: M.reject,
                                                                  promise:
                                                                      M.promise,
                                                              }
                                                          );
                                                      }, 0)
                                                    : M.resolve(!1);
                                        } else {
                                            this.restoreHistory(M, !0);
                                            const He = new Wn(
                                                M.id,
                                                this.serializeUrl(
                                                    M.extractedUrl
                                                ),
                                                ce
                                            );
                                            b.next(He);
                                            try {
                                                M.resolve(
                                                    this.errorHandler(ce)
                                                );
                                            } catch (Ct) {
                                                M.reject(Ct);
                                            }
                                        }
                                        return Pe.E;
                                    })
                                );
                            })
                        );
                    }
                    resetRootComponentType(c) {
                        (this.rootComponentType = c),
                            (this.routerState.root.component =
                                this.rootComponentType);
                    }
                    setTransition(c) {
                        this.transitions.next(
                            Object.assign(
                                Object.assign({}, this.transitions.value),
                                c
                            )
                        );
                    }
                    initialNavigation() {
                        this.setUpLocationChangeListener(),
                            0 === this.navigationId &&
                                this.navigateByUrl(this.location.path(!0), {
                                    replaceUrl: !0,
                                });
                    }
                    setUpLocationChangeListener() {
                        this.locationSubscription ||
                            (this.locationSubscription =
                                this.location.subscribe((c) => {
                                    const b =
                                        'popstate' === c.type
                                            ? 'popstate'
                                            : 'hashchange';
                                    'popstate' === b &&
                                        setTimeout(() => {
                                            var M;
                                            const k = { replaceUrl: !0 },
                                                Z = (
                                                    null === (M = c.state) ||
                                                    void 0 === M
                                                        ? void 0
                                                        : M.navigationId
                                                )
                                                    ? c.state
                                                    : null;
                                            if (Z) {
                                                const He = Object.assign({}, Z);
                                                delete He.navigationId,
                                                    delete He.ɵrouterPageId,
                                                    0 !==
                                                        Object.keys(He)
                                                            .length &&
                                                        (k.state = He);
                                            }
                                            const ce = this.parseUrl(c.url);
                                            this.scheduleNavigation(
                                                ce,
                                                b,
                                                Z,
                                                k
                                            );
                                        }, 0);
                                }));
                    }
                    get url() {
                        return this.serializeUrl(this.currentUrlTree);
                    }
                    getCurrentNavigation() {
                        return this.currentNavigation;
                    }
                    triggerEvent(c) {
                        this.events.next(c);
                    }
                    resetConfig(c) {
                        Ni(c),
                            (this.config = c.map(Ii)),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1);
                    }
                    ngOnDestroy() {
                        this.dispose();
                    }
                    dispose() {
                        this.transitions.complete(),
                            this.locationSubscription &&
                                (this.locationSubscription.unsubscribe(),
                                (this.locationSubscription = void 0)),
                            (this.disposed = !0);
                    }
                    createUrlTree(c, b = {}) {
                        const {
                                relativeTo: M,
                                queryParams: k,
                                fragment: Z,
                                queryParamsHandling: ce,
                                preserveFragment: He,
                            } = b,
                            Ct = M || this.routerState.root,
                            on = He ? this.currentUrlTree.fragment : Z;
                        let Tt = null;
                        switch (ce) {
                            case 'merge':
                                Tt = Object.assign(
                                    Object.assign(
                                        {},
                                        this.currentUrlTree.queryParams
                                    ),
                                    k
                                );
                                break;
                            case 'preserve':
                                Tt = this.currentUrlTree.queryParams;
                                break;
                            default:
                                Tt = k || null;
                        }
                        return (
                            null !== Tt && (Tt = this.removeEmptyProps(Tt)),
                            (function $i(g, h, c, b, M) {
                                if (0 === c.length)
                                    return ge(h.root, h.root, h, b, M);
                                const k = (function Xe(g) {
                                    if (
                                        'string' == typeof g[0] &&
                                        1 === g.length &&
                                        '/' === g[0]
                                    )
                                        return new We(!0, 0, g);
                                    let h = 0,
                                        c = !1;
                                    const b = g.reduce((M, k, Z) => {
                                        if ('object' == typeof k && null != k) {
                                            if (k.outlets) {
                                                const ce = {};
                                                return (
                                                    le(k.outlets, (He, Ct) => {
                                                        ce[Ct] =
                                                            'string' ==
                                                            typeof He
                                                                ? He.split('/')
                                                                : He;
                                                    }),
                                                    [...M, { outlets: ce }]
                                                );
                                            }
                                            if (k.segmentPath)
                                                return [...M, k.segmentPath];
                                        }
                                        return 'string' != typeof k
                                            ? [...M, k]
                                            : 0 === Z
                                            ? (k
                                                  .split('/')
                                                  .forEach((ce, He) => {
                                                      (0 == He && '.' === ce) ||
                                                          (0 == He && '' === ce
                                                              ? (c = !0)
                                                              : '..' === ce
                                                              ? h++
                                                              : '' != ce &&
                                                                M.push(ce));
                                                  }),
                                              M)
                                            : [...M, k];
                                    }, []);
                                    return new We(c, h, b);
                                })(c);
                                if (k.toRoot())
                                    return ge(h.root, new bt([], {}), h, b, M);
                                const Z = (function wn(g, h, c) {
                                        if (g.isAbsolute)
                                            return new ft(h.root, !0, 0);
                                        if (-1 === c.snapshot._lastPathIndex) {
                                            const k = c.snapshot._urlSegment;
                                            return new ft(k, k === h.root, 0);
                                        }
                                        const b = yi(g.commands[0]) ? 0 : 1;
                                        return (function ar(g, h, c) {
                                            let b = g,
                                                M = h,
                                                k = c;
                                            for (; k > M; ) {
                                                if (
                                                    ((k -= M),
                                                    (b = b.parent),
                                                    !b)
                                                )
                                                    throw new Error(
                                                        "Invalid number of '../'"
                                                    );
                                                M = b.segments.length;
                                            }
                                            return new ft(b, !1, M - k);
                                        })(
                                            c.snapshot._urlSegment,
                                            c.snapshot._lastPathIndex + b,
                                            g.numberOfDoubleDots
                                        );
                                    })(k, h, g),
                                    ce = Z.processChildren
                                        ? xr(
                                              Z.segmentGroup,
                                              Z.index,
                                              k.commands
                                          )
                                        : Gr(
                                              Z.segmentGroup,
                                              Z.index,
                                              k.commands
                                          );
                                return ge(Z.segmentGroup, ce, h, b, M);
                            })(
                                Ct,
                                this.currentUrlTree,
                                c,
                                Tt,
                                null != on ? on : null
                            )
                        );
                    }
                    navigateByUrl(c, b = { skipLocationChange: !1 }) {
                        const M = li(c) ? c : this.parseUrl(c),
                            k = this.urlHandlingStrategy.merge(
                                M,
                                this.rawUrlTree
                            );
                        return this.scheduleNavigation(
                            k,
                            'imperative',
                            null,
                            b
                        );
                    }
                    navigate(c, b = { skipLocationChange: !1 }) {
                        return (
                            (function Xs(g) {
                                for (let h = 0; h < g.length; h++) {
                                    const c = g[h];
                                    if (null == c)
                                        throw new Error(
                                            `The requested path contains ${c} segment at index ${h}`
                                        );
                                }
                            })(c),
                            this.navigateByUrl(this.createUrlTree(c, b), b)
                        );
                    }
                    serializeUrl(c) {
                        return this.urlSerializer.serialize(c);
                    }
                    parseUrl(c) {
                        let b;
                        try {
                            b = this.urlSerializer.parse(c);
                        } catch (M) {
                            b = this.malformedUriErrorHandler(
                                M,
                                this.urlSerializer,
                                c
                            );
                        }
                        return b;
                    }
                    isActive(c, b) {
                        let M;
                        if (
                            ((M =
                                !0 === b
                                    ? Object.assign({}, Os)
                                    : !1 === b
                                    ? Object.assign({}, is)
                                    : b),
                            li(c))
                        )
                            return Le(this.currentUrlTree, c, M);
                        const k = this.parseUrl(c);
                        return Le(this.currentUrlTree, k, M);
                    }
                    removeEmptyProps(c) {
                        return Object.keys(c).reduce((b, M) => {
                            const k = c[M];
                            return null != k && (b[M] = k), b;
                        }, {});
                    }
                    processNavigations() {
                        this.navigations.subscribe(
                            (c) => {
                                (this.navigated = !0),
                                    (this.lastSuccessfulId = c.id),
                                    (this.currentPageId = c.targetPageId),
                                    this.events.next(
                                        new nn(
                                            c.id,
                                            this.serializeUrl(c.extractedUrl),
                                            this.serializeUrl(
                                                this.currentUrlTree
                                            )
                                        )
                                    ),
                                    (this.lastSuccessfulNavigation =
                                        this.currentNavigation),
                                    c.resolve(!0);
                            },
                            (c) => {
                                this.console.warn(
                                    `Unhandled Navigation Error: ${c}`
                                );
                            }
                        );
                    }
                    scheduleNavigation(c, b, M, k, Z) {
                        var ce, He, Ct;
                        if (this.disposed) return Promise.resolve(!1);
                        const on = this.transitions.value,
                            Tt = lr(b) && on && !lr(on.source),
                            Ln = on.rawUrl.toString() === c.toString(),
                            kn =
                                on.id ===
                                (null === (ce = this.currentNavigation) ||
                                void 0 === ce
                                    ? void 0
                                    : ce.id);
                        if (Tt && Ln && kn) return Promise.resolve(!0);
                        let Kr, ti, Ai;
                        Z
                            ? ((Kr = Z.resolve),
                              (ti = Z.reject),
                              (Ai = Z.promise))
                            : (Ai = new Promise((ni, Es) => {
                                  (Kr = ni), (ti = Es);
                              }));
                        const jr = ++this.navigationId;
                        let Yr;
                        return (
                            'computed' === this.canceledNavigationResolution
                                ? (0 === this.currentPageId &&
                                      (M = this.location.getState()),
                                  (Yr =
                                      M && M.ɵrouterPageId
                                          ? M.ɵrouterPageId
                                          : k.replaceUrl || k.skipLocationChange
                                          ? null !==
                                                (He = this.browserPageId) &&
                                            void 0 !== He
                                              ? He
                                              : 0
                                          : (null !==
                                                (Ct = this.browserPageId) &&
                                            void 0 !== Ct
                                                ? Ct
                                                : 0) + 1))
                                : (Yr = 0),
                            this.setTransition({
                                id: jr,
                                targetPageId: Yr,
                                source: b,
                                restoredState: M,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.rawUrlTree,
                                rawUrl: c,
                                extras: k,
                                resolve: Kr,
                                reject: ti,
                                promise: Ai,
                                currentSnapshot: this.routerState.snapshot,
                                currentRouterState: this.routerState,
                            }),
                            Ai.catch((ni) => Promise.reject(ni))
                        );
                    }
                    setBrowserUrl(c, b) {
                        const M = this.urlSerializer.serialize(c),
                            k = Object.assign(
                                Object.assign({}, b.extras.state),
                                this.generateNgRouterState(b.id, b.targetPageId)
                            );
                        this.location.isCurrentPathEqualTo(M) ||
                        b.extras.replaceUrl
                            ? this.location.replaceState(M, '', k)
                            : this.location.go(M, '', k);
                    }
                    restoreHistory(c, b = !1) {
                        var M, k;
                        if ('computed' === this.canceledNavigationResolution) {
                            const Z = this.currentPageId - c.targetPageId;
                            ('popstate' !== c.source &&
                                'eager' !== this.urlUpdateStrategy &&
                                this.currentUrlTree !==
                                    (null === (M = this.currentNavigation) ||
                                    void 0 === M
                                        ? void 0
                                        : M.finalUrl)) ||
                            0 === Z
                                ? this.currentUrlTree ===
                                      (null === (k = this.currentNavigation) ||
                                      void 0 === k
                                          ? void 0
                                          : k.finalUrl) &&
                                  0 === Z &&
                                  (this.resetState(c),
                                  (this.browserUrlTree = c.currentUrlTree),
                                  this.resetUrlToCurrentUrlTree())
                                : this.location.historyGo(Z);
                        } else
                            'replace' === this.canceledNavigationResolution &&
                                (b && this.resetState(c),
                                this.resetUrlToCurrentUrlTree());
                    }
                    resetState(c) {
                        (this.routerState = c.currentRouterState),
                            (this.currentUrlTree = c.currentUrlTree),
                            (this.rawUrlTree = this.urlHandlingStrategy.merge(
                                this.currentUrlTree,
                                c.rawUrl
                            ));
                    }
                    resetUrlToCurrentUrlTree() {
                        this.location.replaceState(
                            this.urlSerializer.serialize(this.rawUrlTree),
                            '',
                            this.generateNgRouterState(
                                this.lastSuccessfulId,
                                this.currentPageId
                            )
                        );
                    }
                    cancelNavigationTransition(c, b) {
                        const M = new Gn(
                            c.id,
                            this.serializeUrl(c.extractedUrl),
                            b
                        );
                        this.triggerEvent(M), c.resolve(!1);
                    }
                    generateNgRouterState(c, b) {
                        return 'computed' === this.canceledNavigationResolution
                            ? { navigationId: c, ɵrouterPageId: b }
                            : { navigationId: c };
                    }
                }
                return (
                    (g.ɵfac = function (c) {
                        f.$Z();
                    }),
                    (g.ɵprov = f.Yz7({ token: g, factory: g.ɵfac })),
                    g
                );
            })();
            function lr(g) {
                return 'imperative' !== g;
            }
            let Ps = (() => {
                class g {
                    constructor(c, b, M, k, Z) {
                        (this.router = c),
                            (this.route = b),
                            (this.tabIndexAttribute = M),
                            (this.renderer = k),
                            (this.el = Z),
                            (this.commands = null),
                            (this.onChanges = new Be.x()),
                            this.setTabIndexIfNotOnNativeEl('0');
                    }
                    setTabIndexIfNotOnNativeEl(c) {
                        if (null != this.tabIndexAttribute) return;
                        const b = this.renderer,
                            M = this.el.nativeElement;
                        null !== c
                            ? b.setAttribute(M, 'tabindex', c)
                            : b.removeAttribute(M, 'tabindex');
                    }
                    ngOnChanges(c) {
                        this.onChanges.next(this);
                    }
                    set routerLink(c) {
                        null != c
                            ? ((this.commands = Array.isArray(c) ? c : [c]),
                              this.setTabIndexIfNotOnNativeEl('0'))
                            : ((this.commands = null),
                              this.setTabIndexIfNotOnNativeEl(null));
                    }
                    onClick() {
                        if (null === this.urlTree) return !0;
                        const c = {
                            skipLocationChange: Oi(this.skipLocationChange),
                            replaceUrl: Oi(this.replaceUrl),
                            state: this.state,
                        };
                        return this.router.navigateByUrl(this.urlTree, c), !0;
                    }
                    get urlTree() {
                        return null === this.commands
                            ? null
                            : this.router.createUrlTree(this.commands, {
                                  relativeTo:
                                      void 0 !== this.relativeTo
                                          ? this.relativeTo
                                          : this.route,
                                  queryParams: this.queryParams,
                                  fragment: this.fragment,
                                  queryParamsHandling: this.queryParamsHandling,
                                  preserveFragment: Oi(this.preserveFragment),
                              });
                    }
                }
                return (
                    (g.ɵfac = function (c) {
                        return new (c || g)(
                            f.Y36(Nr),
                            f.Y36(ve),
                            f.$8M('tabindex'),
                            f.Y36(f.Qsj),
                            f.Y36(f.SBq)
                        );
                    }),
                    (g.ɵdir = f.lG2({
                        type: g,
                        selectors: [['', 'routerLink', '', 5, 'a', 5, 'area']],
                        hostBindings: function (c, b) {
                            1 & c &&
                                f.NdJ('click', function () {
                                    return b.onClick();
                                });
                        },
                        inputs: {
                            queryParams: 'queryParams',
                            fragment: 'fragment',
                            queryParamsHandling: 'queryParamsHandling',
                            preserveFragment: 'preserveFragment',
                            skipLocationChange: 'skipLocationChange',
                            replaceUrl: 'replaceUrl',
                            state: 'state',
                            relativeTo: 'relativeTo',
                            routerLink: 'routerLink',
                        },
                        features: [f.TTD],
                    })),
                    g
                );
            })();
            function Oi(g) {
                return '' === g || !!g;
            }
            class ms {}
            class Rs {
                preload(h, c) {
                    return (0, I.of)(null);
                }
            }
            let Eo = (() => {
                    class g {
                        constructor(c, b, M, k) {
                            (this.router = c),
                                (this.injector = M),
                                (this.preloadingStrategy = k),
                                (this.loader = new pi(
                                    M,
                                    b,
                                    (He) => c.triggerEvent(new xn(He)),
                                    (He) => c.triggerEvent(new In(He))
                                ));
                        }
                        setUpPreloading() {
                            this.subscription = this.router.events
                                .pipe(
                                    (0, qe.h)((c) => c instanceof nn),
                                    (0, un.b)(() => this.preload())
                                )
                                .subscribe(() => {});
                        }
                        preload() {
                            const c = this.injector.get(f.h0i);
                            return this.processRoutes(c, this.router.config);
                        }
                        ngOnDestroy() {
                            this.subscription &&
                                this.subscription.unsubscribe();
                        }
                        processRoutes(c, b) {
                            const M = [];
                            for (const k of b)
                                if (
                                    k.loadChildren &&
                                    !k.canLoad &&
                                    k._loadedConfig
                                ) {
                                    const Z = k._loadedConfig;
                                    M.push(
                                        this.processRoutes(Z.module, Z.routes)
                                    );
                                } else
                                    k.loadChildren && !k.canLoad
                                        ? M.push(this.preloadConfig(c, k))
                                        : k.children &&
                                          M.push(
                                              this.processRoutes(c, k.children)
                                          );
                            return (0, w.D)(M).pipe(
                                (0, Rn.J)(),
                                (0, De.U)((k) => {})
                            );
                        }
                        preloadConfig(c, b) {
                            return this.preloadingStrategy.preload(b, () =>
                                (b._loadedConfig
                                    ? (0, I.of)(b._loadedConfig)
                                    : this.loader.load(c.injector, b)
                                ).pipe(
                                    (0, Ht.z)(
                                        (k) => (
                                            (b._loadedConfig = k),
                                            this.processRoutes(
                                                k.module,
                                                k.routes
                                            )
                                        )
                                    )
                                )
                            );
                        }
                    }
                    return (
                        (g.ɵfac = function (c) {
                            return new (c || g)(
                                f.LFG(Nr),
                                f.LFG(f.Sil),
                                f.LFG(f.zs3),
                                f.LFG(ms)
                            );
                        }),
                        (g.ɵprov = f.Yz7({ token: g, factory: g.ɵfac })),
                        g
                    );
                })(),
                Mo = (() => {
                    class g {
                        constructor(c, b, M = {}) {
                            (this.router = c),
                                (this.viewportScroller = b),
                                (this.options = M),
                                (this.lastId = 0),
                                (this.lastSource = 'imperative'),
                                (this.restoredId = 0),
                                (this.store = {}),
                                (M.scrollPositionRestoration =
                                    M.scrollPositionRestoration || 'disabled'),
                                (M.anchorScrolling =
                                    M.anchorScrolling || 'disabled');
                        }
                        init() {
                            'disabled' !==
                                this.options.scrollPositionRestoration &&
                                this.viewportScroller.setHistoryScrollRestoration(
                                    'manual'
                                ),
                                (this.routerEventsSubscription =
                                    this.createScrollEvents()),
                                (this.scrollEventsSubscription =
                                    this.consumeScrollEvents());
                        }
                        createScrollEvents() {
                            return this.router.events.subscribe((c) => {
                                c instanceof jn
                                    ? ((this.store[this.lastId] =
                                          this.viewportScroller.getScrollPosition()),
                                      (this.lastSource = c.navigationTrigger),
                                      (this.restoredId = c.restoredState
                                          ? c.restoredState.navigationId
                                          : 0))
                                    : c instanceof nn &&
                                      ((this.lastId = c.id),
                                      this.scheduleScrollEvent(
                                          c,
                                          this.router.parseUrl(
                                              c.urlAfterRedirects
                                          ).fragment
                                      ));
                            });
                        }
                        consumeScrollEvents() {
                            return this.router.events.subscribe((c) => {
                                c instanceof It &&
                                    (c.position
                                        ? 'top' ===
                                          this.options.scrollPositionRestoration
                                            ? this.viewportScroller.scrollToPosition(
                                                  [0, 0]
                                              )
                                            : 'enabled' ===
                                                  this.options
                                                      .scrollPositionRestoration &&
                                              this.viewportScroller.scrollToPosition(
                                                  c.position
                                              )
                                        : c.anchor &&
                                          'enabled' ===
                                              this.options.anchorScrolling
                                        ? this.viewportScroller.scrollToAnchor(
                                              c.anchor
                                          )
                                        : 'disabled' !==
                                              this.options
                                                  .scrollPositionRestoration &&
                                          this.viewportScroller.scrollToPosition(
                                              [0, 0]
                                          ));
                            });
                        }
                        scheduleScrollEvent(c, b) {
                            this.router.triggerEvent(
                                new It(
                                    c,
                                    'popstate' === this.lastSource
                                        ? this.store[this.restoredId]
                                        : null,
                                    b
                                )
                            );
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription &&
                                this.routerEventsSubscription.unsubscribe(),
                                this.scrollEventsSubscription &&
                                    this.scrollEventsSubscription.unsubscribe();
                        }
                    }
                    return (
                        (g.ɵfac = function (c) {
                            f.$Z();
                        }),
                        (g.ɵprov = f.Yz7({ token: g, factory: g.ɵfac })),
                        g
                    );
                })();
            const fr = new f.OlP('ROUTER_CONFIGURATION'),
                Do = new f.OlP('ROUTER_FORROOT_GUARD'),
                Co = [
                    mn.Ye,
                    { provide: bn, useClass: Pn },
                    {
                        provide: Nr,
                        useFactory: function Fs(
                            g,
                            h,
                            c,
                            b,
                            M,
                            k,
                            Z = {},
                            ce,
                            He
                        ) {
                            const Ct = new Nr(null, g, h, c, b, M, wr(k));
                            return (
                                ce && (Ct.urlHandlingStrategy = ce),
                                He && (Ct.routeReuseStrategy = He),
                                (function no(g, h) {
                                    g.errorHandler &&
                                        (h.errorHandler = g.errorHandler),
                                        g.malformedUriErrorHandler &&
                                            (h.malformedUriErrorHandler =
                                                g.malformedUriErrorHandler),
                                        g.onSameUrlNavigation &&
                                            (h.onSameUrlNavigation =
                                                g.onSameUrlNavigation),
                                        g.paramsInheritanceStrategy &&
                                            (h.paramsInheritanceStrategy =
                                                g.paramsInheritanceStrategy),
                                        g.relativeLinkResolution &&
                                            (h.relativeLinkResolution =
                                                g.relativeLinkResolution),
                                        g.urlUpdateStrategy &&
                                            (h.urlUpdateStrategy =
                                                g.urlUpdateStrategy),
                                        g.canceledNavigationResolution &&
                                            (h.canceledNavigationResolution =
                                                g.canceledNavigationResolution);
                                })(Z, Ct),
                                Z.enableTracing &&
                                    Ct.events.subscribe((on) => {
                                        var Tt, Ln;
                                        null === (Tt = console.group) ||
                                            void 0 === Tt ||
                                            Tt.call(
                                                console,
                                                `Router Event: ${on.constructor.name}`
                                            ),
                                            console.log(on.toString()),
                                            console.log(on),
                                            null === (Ln = console.groupEnd) ||
                                                void 0 === Ln ||
                                                Ln.call(console);
                                    }),
                                Ct
                            );
                        },
                        deps: [
                            bn,
                            Si,
                            mn.Ye,
                            f.zs3,
                            f.Sil,
                            ir,
                            fr,
                            [class qi {}, new f.FiY()],
                            [class Ho {}, new f.FiY()],
                        ],
                    },
                    Si,
                    {
                        provide: ve,
                        useFactory: function Po(g) {
                            return g.routerState.root;
                        },
                        deps: [Nr],
                    },
                    Eo,
                    Rs,
                    class ys {
                        preload(h, c) {
                            return c().pipe((0, st.K)(() => (0, I.of)(null)));
                        }
                    },
                    { provide: fr, useValue: { enableTracing: !1 } },
                ];
            function eo() {
                return new f.PXZ('Router', Nr);
            }
            let bo = (() => {
                class g {
                    constructor(c, b) {}
                    static forRoot(c, b) {
                        return {
                            ngModule: g,
                            providers: [
                                Co,
                                _s(c),
                                {
                                    provide: Do,
                                    useFactory: to,
                                    deps: [[Nr, new f.FiY(), new f.tp0()]],
                                },
                                { provide: fr, useValue: b || {} },
                                {
                                    provide: mn.S$,
                                    useFactory: ss,
                                    deps: [
                                        mn.lw,
                                        [new f.tBr(mn.mr), new f.FiY()],
                                        fr,
                                    ],
                                },
                                {
                                    provide: Mo,
                                    useFactory: Oo,
                                    deps: [Nr, mn.EM, fr],
                                },
                                {
                                    provide: ms,
                                    useExisting:
                                        b && b.preloadingStrategy
                                            ? b.preloadingStrategy
                                            : Rs,
                                },
                                { provide: f.PXZ, multi: !0, useFactory: eo },
                                [
                                    xs,
                                    {
                                        provide: f.ip1,
                                        multi: !0,
                                        useFactory: ro,
                                        deps: [xs],
                                    },
                                    { provide: vs, useFactory: Go, deps: [xs] },
                                    {
                                        provide: f.tb,
                                        multi: !0,
                                        useExisting: vs,
                                    },
                                ],
                            ],
                        };
                    }
                    static forChild(c) {
                        return { ngModule: g, providers: [_s(c)] };
                    }
                }
                return (
                    (g.ɵfac = function (c) {
                        return new (c || g)(f.LFG(Do, 8), f.LFG(Nr, 8));
                    }),
                    (g.ɵmod = f.oAB({ type: g })),
                    (g.ɵinj = f.cJS({})),
                    g
                );
            })();
            function Oo(g, h, c) {
                return (
                    c.scrollOffset && h.setOffset(c.scrollOffset),
                    new Mo(g, h, c)
                );
            }
            function ss(g, h, c = {}) {
                return c.useHash ? new mn.Do(g, h) : new mn.b0(g, h);
            }
            function to(g) {
                return 'guarded';
            }
            function _s(g) {
                return [
                    { provide: f.deG, multi: !0, useValue: g },
                    { provide: ir, multi: !0, useValue: g },
                ];
            }
            let xs = (() => {
                class g {
                    constructor(c) {
                        (this.injector = c),
                            (this.initNavigation = !1),
                            (this.destroyed = !1),
                            (this.resultOfPreactivationDone = new Be.x());
                    }
                    appInitializer() {
                        return this.injector
                            .get(mn.V_, Promise.resolve(null))
                            .then(() => {
                                if (this.destroyed) return Promise.resolve(!0);
                                let b = null;
                                const M = new Promise((ce) => (b = ce)),
                                    k = this.injector.get(Nr),
                                    Z = this.injector.get(fr);
                                return (
                                    'disabled' === Z.initialNavigation
                                        ? (k.setUpLocationChangeListener(),
                                          b(!0))
                                        : 'enabled' === Z.initialNavigation ||
                                          'enabledBlocking' ===
                                              Z.initialNavigation
                                        ? ((k.hooks.afterPreactivation = () =>
                                              this.initNavigation
                                                  ? (0, I.of)(null)
                                                  : ((this.initNavigation = !0),
                                                    b(!0),
                                                    this
                                                        .resultOfPreactivationDone)),
                                          k.initialNavigation())
                                        : b(!0),
                                    M
                                );
                            });
                    }
                    bootstrapListener(c) {
                        const b = this.injector.get(fr),
                            M = this.injector.get(Eo),
                            k = this.injector.get(Mo),
                            Z = this.injector.get(Nr),
                            ce = this.injector.get(f.z2F);
                        c === ce.components[0] &&
                            (('enabledNonBlocking' === b.initialNavigation ||
                                void 0 === b.initialNavigation) &&
                                Z.initialNavigation(),
                            M.setUpPreloading(),
                            k.init(),
                            Z.resetRootComponentType(ce.componentTypes[0]),
                            this.resultOfPreactivationDone.next(null),
                            this.resultOfPreactivationDone.complete());
                    }
                    ngOnDestroy() {
                        this.destroyed = !0;
                    }
                }
                return (
                    (g.ɵfac = function (c) {
                        return new (c || g)(f.LFG(f.zs3));
                    }),
                    (g.ɵprov = f.Yz7({ token: g, factory: g.ɵfac })),
                    g
                );
            })();
            function ro(g) {
                return g.appInitializer.bind(g);
            }
            function Go(g) {
                return g.bootstrapListener.bind(g);
            }
            const vs = new f.OlP('Router Initializer');
        },
        3942: (pe, z, _) => {
            'use strict';
            _.d(z, { Z: () => Re });
            var f = _(2090),
                P = _(4859),
                j = _(9681),
                w = _(1877);
            class H {
                constructor(ae, Q) {
                    (this._delegate = ae),
                        (this.firebase = Q),
                        (0, j._addComponent)(
                            ae,
                            new P.wA('app-compat', () => this, 'PUBLIC')
                        ),
                        (this.container = ae.container);
                }
                get automaticDataCollectionEnabled() {
                    return this._delegate.automaticDataCollectionEnabled;
                }
                set automaticDataCollectionEnabled(ae) {
                    this._delegate.automaticDataCollectionEnabled = ae;
                }
                get name() {
                    return this._delegate.name;
                }
                get options() {
                    return this._delegate.options;
                }
                delete() {
                    return new Promise((ae) => {
                        this._delegate.checkDestroyed(), ae();
                    }).then(
                        () => (
                            this.firebase.INTERNAL.removeApp(this.name),
                            (0, j.deleteApp)(this._delegate)
                        )
                    );
                }
                _getService(ae, Q = j._DEFAULT_ENTRY_NAME) {
                    var me;
                    this._delegate.checkDestroyed();
                    const I = this._delegate.container.getProvider(ae);
                    return (
                        !I.isInitialized() &&
                            'EXPLICIT' ===
                                (null === (me = I.getComponent()) ||
                                void 0 === me
                                    ? void 0
                                    : me.instantiationMode) &&
                            I.initialize(),
                        I.getImmediate({ identifier: Q })
                    );
                }
                _removeServiceInstance(ae, Q = j._DEFAULT_ENTRY_NAME) {
                    this._delegate.container.getProvider(ae).clearInstance(Q);
                }
                _addComponent(ae) {
                    (0, j._addComponent)(this._delegate, ae);
                }
                _addOrOverwriteComponent(ae) {
                    (0, j._addOrOverwriteComponent)(this._delegate, ae);
                }
                toJSON() {
                    return {
                        name: this.name,
                        automaticDataCollectionEnabled:
                            this.automaticDataCollectionEnabled,
                        options: this.options,
                    };
                }
            }
            const X = new f.LL('app-compat', 'Firebase', {
                    'no-app':
                        "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                    'invalid-app-argument':
                        'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                }),
                $ = (function K() {
                    const je = (function ne(je) {
                        const ae = {},
                            Q = {
                                __esModule: !0,
                                initializeApp: function F(Be, qe = {}) {
                                    const re = j.initializeApp(Be, qe);
                                    if ((0, f.r3)(ae, re.name))
                                        return ae[re.name];
                                    const Se = new je(re, Q);
                                    return (ae[re.name] = Se), Se;
                                },
                                app: I,
                                registerVersion: j.registerVersion,
                                setLogLevel: j.setLogLevel,
                                onLog: j.onLog,
                                apps: null,
                                SDK_VERSION: j.SDK_VERSION,
                                INTERNAL: {
                                    registerComponent: function q(Be) {
                                        const qe = Be.name,
                                            re = qe.replace('-compat', '');
                                        if (
                                            j._registerComponent(Be) &&
                                            'PUBLIC' === Be.type
                                        ) {
                                            const Se = (Ee = I()) => {
                                                if ('function' != typeof Ee[re])
                                                    throw X.create(
                                                        'invalid-app-argument',
                                                        { appName: qe }
                                                    );
                                                return Ee[re]();
                                            };
                                            void 0 !== Be.serviceProps &&
                                                (0, f.ZB)(Se, Be.serviceProps),
                                                (Q[re] = Se),
                                                (je.prototype[re] = function (
                                                    ...Ee
                                                ) {
                                                    return this._getService
                                                        .bind(this, qe)
                                                        .apply(
                                                            this,
                                                            Be.multipleInstances
                                                                ? Ee
                                                                : []
                                                        );
                                                });
                                        }
                                        return 'PUBLIC' === Be.type
                                            ? Q[re]
                                            : null;
                                    },
                                    removeApp: function me(Be) {
                                        delete ae[Be];
                                    },
                                    useAsService: function Pe(Be, qe) {
                                        return 'serverAuth' === qe ? null : qe;
                                    },
                                    modularAPIs: j,
                                },
                            };
                        function I(Be) {
                            if (
                                !(0, f.r3)(
                                    ae,
                                    (Be = Be || j._DEFAULT_ENTRY_NAME)
                                )
                            )
                                throw X.create('no-app', { appName: Be });
                            return ae[Be];
                        }
                        return (
                            (Q.default = Q),
                            Object.defineProperty(Q, 'apps', {
                                get: function oe() {
                                    return Object.keys(ae).map((Be) => ae[Be]);
                                },
                            }),
                            (I.App = je),
                            Q
                        );
                    })(H);
                    return (
                        (je.INTERNAL = Object.assign(
                            Object.assign({}, je.INTERNAL),
                            {
                                createFirebaseNamespace: K,
                                extendNamespace: function ae(Q) {
                                    (0, f.ZB)(je, Q);
                                },
                                createSubscribe: f.ne,
                                ErrorFactory: f.LL,
                                deepExtend: f.ZB,
                            }
                        )),
                        je
                    );
                })(),
                U = new w.Yd('@firebase/app-compat');
            if ((0, f.jU)() && void 0 !== self.firebase) {
                U.warn(
                    '\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  '
                );
                const je = self.firebase.SDK_VERSION;
                je &&
                    je.indexOf('LITE') >= 0 &&
                    U.warn(
                        '\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    '
                    );
            }
            const Re = $;
            !(function be(je) {
                (0, j.registerVersion)('@firebase/app-compat', '0.1.16', je);
            })();
        },
        9681: (pe, z, _) => {
            'use strict';
            _.r(z),
                _.d(z, {
                    FirebaseError: () => w.ZR,
                    SDK_VERSION: () => Wn,
                    _DEFAULT_ENTRY_NAME: () => gn,
                    _addComponent: () => Ft,
                    _addOrOverwriteComponent: () => Ht,
                    _apps: () => st,
                    _clearComponents: () => Zt,
                    _components: () => un,
                    _getProvider: () => Rn,
                    _registerComponent: () => ct,
                    _removeServiceInstance: () => mn,
                    deleteApp: () => Fn,
                    getApp: () => cr,
                    getApps: () => Ut,
                    initializeApp: () => Qn,
                    onLog: () => In,
                    registerVersion: () => xn,
                    setLogLevel: () => rn,
                });
            var f = _(5861),
                P = _(4859),
                j = _(1877),
                w = _(2090);
            class H {
                constructor(_t) {
                    this.container = _t;
                }
                getPlatformInfoString() {
                    return this.container
                        .getProviders()
                        .map((It) => {
                            if (
                                (function te(At) {
                                    const _t = At.getComponent();
                                    return (
                                        'VERSION' ===
                                        (null == _t ? void 0 : _t.type)
                                    );
                                })(It)
                            ) {
                                const et = It.getImmediate();
                                return `${et.library}/${et.version}`;
                            }
                            return null;
                        })
                        .filter((It) => It)
                        .join(' ');
                }
            }
            const X = '@firebase/app',
                K = new j.Yd('@firebase/app'),
                gn = '[DEFAULT]',
                ot = {
                    [X]: 'fire-core',
                    '@firebase/app-compat': 'fire-core-compat',
                    '@firebase/analytics': 'fire-analytics',
                    '@firebase/analytics-compat': 'fire-analytics-compat',
                    '@firebase/app-check': 'fire-app-check',
                    '@firebase/app-check-compat': 'fire-app-check-compat',
                    '@firebase/auth': 'fire-auth',
                    '@firebase/auth-compat': 'fire-auth-compat',
                    '@firebase/database': 'fire-rtdb',
                    '@firebase/database-compat': 'fire-rtdb-compat',
                    '@firebase/functions': 'fire-fn',
                    '@firebase/functions-compat': 'fire-fn-compat',
                    '@firebase/installations': 'fire-iid',
                    '@firebase/installations-compat': 'fire-iid-compat',
                    '@firebase/messaging': 'fire-fcm',
                    '@firebase/messaging-compat': 'fire-fcm-compat',
                    '@firebase/performance': 'fire-perf',
                    '@firebase/performance-compat': 'fire-perf-compat',
                    '@firebase/remote-config': 'fire-rc',
                    '@firebase/remote-config-compat': 'fire-rc-compat',
                    '@firebase/storage': 'fire-gcs',
                    '@firebase/storage-compat': 'fire-gcs-compat',
                    '@firebase/firestore': 'fire-fst',
                    '@firebase/firestore-compat': 'fire-fst-compat',
                    'fire-js': 'fire-js',
                    firebase: 'fire-js-all',
                },
                st = new Map(),
                un = new Map();
            function Ft(At, _t) {
                try {
                    At.container.addComponent(_t);
                } catch (It) {
                    K.debug(
                        `Component ${_t.name} failed to register with FirebaseApp ${At.name}`,
                        It
                    );
                }
            }
            function Ht(At, _t) {
                At.container.addOrOverwriteComponent(_t);
            }
            function ct(At) {
                const _t = At.name;
                if (un.has(_t))
                    return (
                        K.debug(
                            `There were multiple attempts to register component ${_t}.`
                        ),
                        !1
                    );
                un.set(_t, At);
                for (const It of st.values()) Ft(It, At);
                return !0;
            }
            function Rn(At, _t) {
                return At.container.getProvider(_t);
            }
            function mn(At, _t, It = gn) {
                Rn(At, _t).clearInstance(It);
            }
            function Zt() {
                un.clear();
            }
            const nn = new w.LL('app', 'Firebase', {
                'no-app':
                    "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                'bad-app-name': "Illegal App name: '{$appName}",
                'duplicate-app':
                    "Firebase App named '{$appName}' already exists with different options or config",
                'app-deleted':
                    "Firebase App named '{$appName}' already deleted",
                'invalid-app-argument':
                    'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                'invalid-log-argument':
                    'First argument to `onLog` must be null or a function.',
            });
            class Gn {
                constructor(_t, It, et) {
                    (this._isDeleted = !1),
                        (this._options = Object.assign({}, _t)),
                        (this._config = Object.assign({}, It)),
                        (this._name = It.name),
                        (this._automaticDataCollectionEnabled =
                            It.automaticDataCollectionEnabled),
                        (this._container = et),
                        this.container.addComponent(
                            new P.wA('app', () => this, 'PUBLIC')
                        );
                }
                get automaticDataCollectionEnabled() {
                    return (
                        this.checkDestroyed(),
                        this._automaticDataCollectionEnabled
                    );
                }
                set automaticDataCollectionEnabled(_t) {
                    this.checkDestroyed(),
                        (this._automaticDataCollectionEnabled = _t);
                }
                get name() {
                    return this.checkDestroyed(), this._name;
                }
                get options() {
                    return this.checkDestroyed(), this._options;
                }
                get config() {
                    return this.checkDestroyed(), this._config;
                }
                get container() {
                    return this._container;
                }
                get isDeleted() {
                    return this._isDeleted;
                }
                set isDeleted(_t) {
                    this._isDeleted = _t;
                }
                checkDestroyed() {
                    if (this.isDeleted)
                        throw nn.create('app-deleted', { appName: this._name });
                }
            }
            const Wn = '9.6.5';
            function Qn(At, _t = {}) {
                'object' != typeof _t && (_t = { name: _t });
                const It = Object.assign(
                        { name: gn, automaticDataCollectionEnabled: !1 },
                        _t
                    ),
                    et = It.name;
                if ('string' != typeof et || !et)
                    throw nn.create('bad-app-name', { appName: String(et) });
                const fn = st.get(et);
                if (fn) {
                    if ((0, w.vZ)(At, fn.options) && (0, w.vZ)(It, fn.config))
                        return fn;
                    throw nn.create('duplicate-app', { appName: et });
                }
                const Pt = new P.H0(et);
                for (const gt of un.values()) Pt.addComponent(gt);
                const pt = new Gn(At, It, Pt);
                return st.set(et, pt), pt;
            }
            function cr(At = gn) {
                const _t = st.get(At);
                if (!_t) throw nn.create('no-app', { appName: At });
                return _t;
            }
            function Ut() {
                return Array.from(st.values());
            }
            function Fn(At) {
                return yt.apply(this, arguments);
            }
            function yt() {
                return (yt = (0, f.Z)(function* (At) {
                    const _t = At.name;
                    st.has(_t) &&
                        (st.delete(_t),
                        yield Promise.all(
                            At.container.getProviders().map((It) => It.delete())
                        ),
                        (At.isDeleted = !0));
                })).apply(this, arguments);
            }
            function xn(At, _t, It) {
                var et;
                let fn = null !== (et = ot[At]) && void 0 !== et ? et : At;
                It && (fn += `-${It}`);
                const Pt = fn.match(/\s|\//),
                    pt = _t.match(/\s|\//);
                if (Pt || pt) {
                    const gt = [
                        `Unable to register library "${fn}" with version "${_t}":`,
                    ];
                    return (
                        Pt &&
                            gt.push(
                                `library name "${fn}" contains illegal characters (whitespace or "/")`
                            ),
                        Pt && pt && gt.push('and'),
                        pt &&
                            gt.push(
                                `version name "${_t}" contains illegal characters (whitespace or "/")`
                            ),
                        void K.warn(gt.join(' '))
                    );
                }
                ct(
                    new P.wA(
                        `${fn}-version`,
                        () => ({ library: fn, version: _t }),
                        'VERSION'
                    )
                );
            }
            function In(At, _t) {
                if (null !== At && 'function' != typeof At)
                    throw nn.create('invalid-log-argument');
                (0, j.Am)(At, _t);
            }
            function rn(At) {
                (0, j.Ub)(At);
            }
            !(function yr(At) {
                ct(new P.wA('platform-logger', (_t) => new H(_t), 'PRIVATE')),
                    xn(X, '0.7.15', At),
                    xn(X, '0.7.15', 'esm2017'),
                    xn('fire-js', '');
            })('');
        },
        4859: (pe, z, _) => {
            'use strict';
            _.d(z, { wA: () => j, H0: () => ne });
            var f = _(5861),
                P = _(2090);
            class j {
                constructor($, U, ie) {
                    (this.name = $),
                        (this.instanceFactory = U),
                        (this.type = ie),
                        (this.multipleInstances = !1),
                        (this.serviceProps = {}),
                        (this.instantiationMode = 'LAZY'),
                        (this.onInstanceCreated = null);
                }
                setInstantiationMode($) {
                    return (this.instantiationMode = $), this;
                }
                setMultipleInstances($) {
                    return (this.multipleInstances = $), this;
                }
                setServiceProps($) {
                    return (this.serviceProps = $), this;
                }
                setInstanceCreatedCallback($) {
                    return (this.onInstanceCreated = $), this;
                }
            }
            const w = '[DEFAULT]';
            class H {
                constructor($, U) {
                    (this.name = $),
                        (this.container = U),
                        (this.component = null),
                        (this.instances = new Map()),
                        (this.instancesDeferred = new Map()),
                        (this.instancesOptions = new Map()),
                        (this.onInitCallbacks = new Map());
                }
                get($) {
                    const U = this.normalizeInstanceIdentifier($);
                    if (!this.instancesDeferred.has(U)) {
                        const ie = new P.BH();
                        if (
                            (this.instancesDeferred.set(U, ie),
                            this.isInitialized(U) ||
                                this.shouldAutoInitialize())
                        )
                            try {
                                const Ae = this.getOrInitializeService({
                                    instanceIdentifier: U,
                                });
                                Ae && ie.resolve(Ae);
                            } catch (Ae) {}
                    }
                    return this.instancesDeferred.get(U).promise;
                }
                getImmediate($) {
                    var U;
                    const ie = this.normalizeInstanceIdentifier(
                            null == $ ? void 0 : $.identifier
                        ),
                        Ae =
                            null !== (U = null == $ ? void 0 : $.optional) &&
                            void 0 !== U &&
                            U;
                    if (
                        !this.isInitialized(ie) &&
                        !this.shouldAutoInitialize()
                    ) {
                        if (Ae) return null;
                        throw Error(`Service ${this.name} is not available`);
                    }
                    try {
                        return this.getOrInitializeService({
                            instanceIdentifier: ie,
                        });
                    } catch (be) {
                        if (Ae) return null;
                        throw be;
                    }
                }
                getComponent() {
                    return this.component;
                }
                setComponent($) {
                    if ($.name !== this.name)
                        throw Error(
                            `Mismatching Component ${$.name} for Provider ${this.name}.`
                        );
                    if (this.component)
                        throw Error(
                            `Component for ${this.name} has already been provided`
                        );
                    if (((this.component = $), this.shouldAutoInitialize())) {
                        if (
                            (function X(K) {
                                return 'EAGER' === K.instantiationMode;
                            })($)
                        )
                            try {
                                this.getOrInitializeService({
                                    instanceIdentifier: w,
                                });
                            } catch (U) {}
                        for (const [
                            U,
                            ie,
                        ] of this.instancesDeferred.entries()) {
                            const Ae = this.normalizeInstanceIdentifier(U);
                            try {
                                const be = this.getOrInitializeService({
                                    instanceIdentifier: Ae,
                                });
                                ie.resolve(be);
                            } catch (be) {}
                        }
                    }
                }
                clearInstance($ = w) {
                    this.instancesDeferred.delete($),
                        this.instancesOptions.delete($),
                        this.instances.delete($);
                }
                delete() {
                    var $ = this;
                    return (0, f.Z)(function* () {
                        const U = Array.from($.instances.values());
                        yield Promise.all([
                            ...U.filter((ie) => 'INTERNAL' in ie).map((ie) =>
                                ie.INTERNAL.delete()
                            ),
                            ...U.filter((ie) => '_delete' in ie).map((ie) =>
                                ie._delete()
                            ),
                        ]);
                    })();
                }
                isComponentSet() {
                    return null != this.component;
                }
                isInitialized($ = w) {
                    return this.instances.has($);
                }
                getOptions($ = w) {
                    return this.instancesOptions.get($) || {};
                }
                initialize($ = {}) {
                    const { options: U = {} } = $,
                        ie = this.normalizeInstanceIdentifier(
                            $.instanceIdentifier
                        );
                    if (this.isInitialized(ie))
                        throw Error(
                            `${this.name}(${ie}) has already been initialized`
                        );
                    if (!this.isComponentSet())
                        throw Error(
                            `Component ${this.name} has not been registered yet`
                        );
                    const Ae = this.getOrInitializeService({
                        instanceIdentifier: ie,
                        options: U,
                    });
                    for (const [be, Re] of this.instancesDeferred.entries())
                        ie === this.normalizeInstanceIdentifier(be) &&
                            Re.resolve(Ae);
                    return Ae;
                }
                onInit($, U) {
                    var ie;
                    const Ae = this.normalizeInstanceIdentifier(U),
                        be =
                            null !== (ie = this.onInitCallbacks.get(Ae)) &&
                            void 0 !== ie
                                ? ie
                                : new Set();
                    be.add($), this.onInitCallbacks.set(Ae, be);
                    const Re = this.instances.get(Ae);
                    return (
                        Re && $(Re, Ae),
                        () => {
                            be.delete($);
                        }
                    );
                }
                invokeOnInitCallbacks($, U) {
                    const ie = this.onInitCallbacks.get(U);
                    if (ie)
                        for (const Ae of ie)
                            try {
                                Ae($, U);
                            } catch (be) {}
                }
                getOrInitializeService({
                    instanceIdentifier: $,
                    options: U = {},
                }) {
                    let ie = this.instances.get($);
                    if (
                        !ie &&
                        this.component &&
                        ((ie = this.component.instanceFactory(this.container, {
                            instanceIdentifier: ((K = $), K === w ? void 0 : K),
                            options: U,
                        })),
                        this.instances.set($, ie),
                        this.instancesOptions.set($, U),
                        this.invokeOnInitCallbacks(ie, $),
                        this.component.onInstanceCreated)
                    )
                        try {
                            this.component.onInstanceCreated(
                                this.container,
                                $,
                                ie
                            );
                        } catch (Ae) {}
                    var K;
                    return ie || null;
                }
                normalizeInstanceIdentifier($ = w) {
                    return this.component
                        ? this.component.multipleInstances
                            ? $
                            : w
                        : $;
                }
                shouldAutoInitialize() {
                    return (
                        !!this.component &&
                        'EXPLICIT' !== this.component.instantiationMode
                    );
                }
            }
            class ne {
                constructor($) {
                    (this.name = $), (this.providers = new Map());
                }
                addComponent($) {
                    const U = this.getProvider($.name);
                    if (U.isComponentSet())
                        throw new Error(
                            `Component ${$.name} has already been registered with ${this.name}`
                        );
                    U.setComponent($);
                }
                addOrOverwriteComponent($) {
                    this.getProvider($.name).isComponentSet() &&
                        this.providers.delete($.name),
                        this.addComponent($);
                }
                getProvider($) {
                    if (this.providers.has($)) return this.providers.get($);
                    const U = new H($, this);
                    return this.providers.set($, U), U;
                }
                getProviders() {
                    return Array.from(this.providers.values());
                }
            }
        },
        1877: (pe, z, _) => {
            'use strict';
            _.d(z, { in: () => P, Yd: () => X, Ub: () => ne, Am: () => K });
            const f = [];
            var P = (() => {
                return (
                    (($ = P || (P = {}))[($.DEBUG = 0)] = 'DEBUG'),
                    ($[($.VERBOSE = 1)] = 'VERBOSE'),
                    ($[($.INFO = 2)] = 'INFO'),
                    ($[($.WARN = 3)] = 'WARN'),
                    ($[($.ERROR = 4)] = 'ERROR'),
                    ($[($.SILENT = 5)] = 'SILENT'),
                    P
                );
                var $;
            })();
            const j = {
                    debug: P.DEBUG,
                    verbose: P.VERBOSE,
                    info: P.INFO,
                    warn: P.WARN,
                    error: P.ERROR,
                    silent: P.SILENT,
                },
                w = P.INFO,
                H = {
                    [P.DEBUG]: 'log',
                    [P.VERBOSE]: 'log',
                    [P.INFO]: 'info',
                    [P.WARN]: 'warn',
                    [P.ERROR]: 'error',
                },
                te = ($, U, ...ie) => {
                    if (U < $.logLevel) return;
                    const Ae = new Date().toISOString(),
                        be = H[U];
                    if (!be)
                        throw new Error(
                            `Attempted to log a message with an invalid logType (value: ${U})`
                        );
                    console[be](`[${Ae}]  ${$.name}:`, ...ie);
                };
            class X {
                constructor(U) {
                    (this.name = U),
                        (this._logLevel = w),
                        (this._logHandler = te),
                        (this._userLogHandler = null),
                        f.push(this);
                }
                get logLevel() {
                    return this._logLevel;
                }
                set logLevel(U) {
                    if (!(U in P))
                        throw new TypeError(
                            `Invalid value "${U}" assigned to \`logLevel\``
                        );
                    this._logLevel = U;
                }
                setLogLevel(U) {
                    this._logLevel = 'string' == typeof U ? j[U] : U;
                }
                get logHandler() {
                    return this._logHandler;
                }
                set logHandler(U) {
                    if ('function' != typeof U)
                        throw new TypeError(
                            'Value assigned to `logHandler` must be a function'
                        );
                    this._logHandler = U;
                }
                get userLogHandler() {
                    return this._userLogHandler;
                }
                set userLogHandler(U) {
                    this._userLogHandler = U;
                }
                debug(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.DEBUG, ...U),
                        this._logHandler(this, P.DEBUG, ...U);
                }
                log(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.VERBOSE, ...U),
                        this._logHandler(this, P.VERBOSE, ...U);
                }
                info(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.INFO, ...U),
                        this._logHandler(this, P.INFO, ...U);
                }
                warn(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.WARN, ...U),
                        this._logHandler(this, P.WARN, ...U);
                }
                error(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, P.ERROR, ...U),
                        this._logHandler(this, P.ERROR, ...U);
                }
            }
            function ne($) {
                f.forEach((U) => {
                    U.setLogLevel($);
                });
            }
            function K($, U) {
                for (const ie of f) {
                    let Ae = null;
                    U && U.level && (Ae = j[U.level]),
                        (ie.userLogHandler =
                            null === $
                                ? null
                                : (be, Re, ...je) => {
                                      const ae = je
                                          .map((Q) => {
                                              if (null == Q) return null;
                                              if ('string' == typeof Q)
                                                  return Q;
                                              if (
                                                  'number' == typeof Q ||
                                                  'boolean' == typeof Q
                                              )
                                                  return Q.toString();
                                              if (Q instanceof Error)
                                                  return Q.message;
                                              try {
                                                  return JSON.stringify(Q);
                                              } catch (me) {
                                                  return null;
                                              }
                                          })
                                          .filter((Q) => Q)
                                          .join(' ');
                                      Re >= (null != Ae ? Ae : be.logLevel) &&
                                          $({
                                              level: P[Re].toLowerCase(),
                                              message: ae,
                                              args: je,
                                              type: be.name,
                                          });
                                  });
                }
            }
        },
        5573: (pe, z, _) => {
            'use strict';
            _.d(z, { eX: () => Zt, sQ: () => se, GW: () => Oe, l4: () => jn });
            var f = _(2323),
                P = _(6451),
                j = _(8306),
                w = _(7579),
                H = _(4482),
                te = _(5403),
                X = _(5032),
                K = _(515),
                $ = _(9646),
                U = _(576);
            class be {
                constructor(Le, Ue, Qe) {
                    (this.kind = Le),
                        (this.value = Ue),
                        (this.error = Qe),
                        (this.hasValue = 'N' === Le);
                }
                observe(Le) {
                    return Re(this, Le);
                }
                do(Le, Ue, Qe) {
                    const { kind: Dt, value: rt, error: Kt } = this;
                    return 'N' === Dt
                        ? null == Le
                            ? void 0
                            : Le(rt)
                        : 'E' === Dt
                        ? null == Ue
                            ? void 0
                            : Ue(Kt)
                        : null == Qe
                        ? void 0
                        : Qe();
                }
                accept(Le, Ue, Qe) {
                    var Dt;
                    return (0, U.m)(
                        null === (Dt = Le) || void 0 === Dt ? void 0 : Dt.next
                    )
                        ? this.observe(Le)
                        : this.do(Le, Ue, Qe);
                }
                toObservable() {
                    const { kind: Le, value: Ue, error: Qe } = this,
                        Dt =
                            'N' === Le
                                ? (0, $.of)(Ue)
                                : 'E' === Le
                                ? (function ie(ye, Le) {
                                      const Ue = (0, U.m)(ye) ? ye : () => ye,
                                          Qe = (Dt) => Dt.error(Ue());
                                      return new j.y(
                                          Le
                                              ? (Dt) => Le.schedule(Qe, 0, Dt)
                                              : Qe
                                      );
                                  })(() => Qe)
                                : 'C' === Le
                                ? K.E
                                : 0;
                    if (!Dt)
                        throw new TypeError(
                            `Unexpected notification kind ${Le}`
                        );
                    return Dt;
                }
                static createNext(Le) {
                    return new be('N', Le);
                }
                static createError(Le) {
                    return new be('E', void 0, Le);
                }
                static createComplete() {
                    return be.completeNotification;
                }
            }
            function Re(ye, Le) {
                var Ue, Qe, Dt;
                const { kind: rt, value: Kt, error: qt } = ye;
                if ('string' != typeof rt)
                    throw new TypeError('Invalid notification, missing "kind"');
                'N' === rt
                    ? null === (Ue = Le.next) ||
                      void 0 === Ue ||
                      Ue.call(Le, Kt)
                    : 'E' === rt
                    ? null === (Qe = Le.error) ||
                      void 0 === Qe ||
                      Qe.call(Le, qt)
                    : null === (Dt = Le.complete) ||
                      void 0 === Dt ||
                      Dt.call(Le);
            }
            be.completeNotification = new be('C');
            var ae = _(8421);
            function Q(ye, Le, Ue, Qe) {
                return (0, H.e)((Dt, rt) => {
                    let Kt;
                    Le && 'function' != typeof Le
                        ? ({ duration: Ue, element: Kt, connector: Qe } = Le)
                        : (Kt = Le);
                    const qt = new Map(),
                        vn = ($t) => {
                            qt.forEach($t), $t(rt);
                        },
                        bt = ($t) => vn((tn) => tn.error($t)),
                        zn = new me(
                            rt,
                            ($t) => {
                                try {
                                    const tn = ye($t);
                                    let bn = qt.get(tn);
                                    if (!bn) {
                                        qt.set(
                                            tn,
                                            (bn = Qe ? Qe() : new w.x())
                                        );
                                        const Pn = (function or($t, tn) {
                                            const bn = new j.y((Pn) => {
                                                zn.activeGroups++;
                                                const Jn = tn.subscribe(Pn);
                                                return () => {
                                                    Jn.unsubscribe(),
                                                        0 ==
                                                            --zn.activeGroups &&
                                                            zn.teardownAttempted &&
                                                            zn.unsubscribe();
                                                };
                                            });
                                            return (bn.key = $t), bn;
                                        })(tn, bn);
                                        if ((rt.next(Pn), Ue)) {
                                            const Jn = new te.Q(
                                                bn,
                                                () => {
                                                    bn.complete(),
                                                        null == Jn ||
                                                            Jn.unsubscribe();
                                                },
                                                void 0,
                                                void 0,
                                                () => qt.delete(tn)
                                            );
                                            zn.add(
                                                (0, ae.Xf)(Ue(Pn)).subscribe(Jn)
                                            );
                                        }
                                    }
                                    bn.next(Kt ? Kt($t) : $t);
                                } catch (tn) {
                                    bt(tn);
                                }
                            },
                            () => vn(($t) => $t.complete()),
                            bt,
                            () => qt.clear()
                        );
                    Dt.subscribe(zn);
                });
            }
            class me extends te.Q {
                constructor() {
                    super(...arguments),
                        (this.activeGroups = 0),
                        (this.teardownAttempted = !1);
                }
                unsubscribe() {
                    (this.teardownAttempted = !0),
                        0 === this.activeGroups && super.unsubscribe();
                }
            }
            var I = _(4004);
            function F(ye, Le) {
                return Le
                    ? (Ue) =>
                          Ue.pipe(
                              F((Qe, Dt) =>
                                  (0, ae.Xf)(ye(Qe, Dt)).pipe(
                                      (0, I.U)((rt, Kt) => Le(Qe, rt, Dt, Kt))
                                  )
                              )
                          )
                    : (0, H.e)((Ue, Qe) => {
                          let Dt = 0,
                              rt = null,
                              Kt = !1;
                          Ue.subscribe(
                              new te.Q(
                                  Qe,
                                  (qt) => {
                                      rt ||
                                          ((rt = new te.Q(Qe, void 0, () => {
                                              (rt = null), Kt && Qe.complete();
                                          })),
                                          (0, ae.Xf)(ye(qt, Dt++)).subscribe(
                                              rt
                                          ));
                                  },
                                  () => {
                                      (Kt = !0), !rt && Qe.complete();
                                  }
                              )
                          );
                      });
            }
            var q = _(262),
                Pe = _(9300),
                Be = _(5577),
                qe = _(5698),
                re = _(5e3);
            const Se = { dispatch: !0, useEffectsErrorHandler: !0 },
                Ee = '__@ngrx/effects_create__';
            function Oe(ye, Le) {
                const Ue = ye(),
                    Qe = Object.assign(Object.assign({}, Se), Le);
                return Object.defineProperty(Ue, Ee, { value: Qe }), Ue;
            }
            function Ne(ye) {
                return Object.getOwnPropertyNames(ye)
                    .filter(
                        (Qe) =>
                            !(!ye[Qe] || !ye[Qe].hasOwnProperty(Ee)) &&
                            ye[Qe][Ee].hasOwnProperty('dispatch')
                    )
                    .map((Qe) =>
                        Object.assign({ propertyName: Qe }, ye[Qe][Ee])
                    );
            }
            function De(ye) {
                return Object.getPrototypeOf(ye);
            }
            const ut = '__@ngrx/effects__';
            function gn(ye) {
                return (0, f.qC)(un, De)(ye);
            }
            function un(ye) {
                return (function ot(ye) {
                    return ye.constructor.hasOwnProperty(ut);
                })(ye)
                    ? ye.constructor[ut]
                    : [];
            }
            function ct(ye, Le, Ue) {
                const Qe = De(ye).constructor.name,
                    Dt = (function Ht(ye) {
                        return [gn, Ne].reduce(
                            (Ue, Qe) => Ue.concat(Qe(ye)),
                            []
                        );
                    })(ye).map(
                        ({
                            propertyName: rt,
                            dispatch: Kt,
                            useEffectsErrorHandler: qt,
                        }) => {
                            const vn =
                                    'function' == typeof ye[rt]
                                        ? ye[rt]()
                                        : ye[rt],
                                bt = qt ? Ue(vn, Le) : vn;
                            return !1 === Kt
                                ? bt.pipe(
                                      (function ne() {
                                          return (0, H.e)((ye, Le) => {
                                              ye.subscribe(new te.Q(Le, X.Z));
                                          });
                                      })()
                                  )
                                : bt
                                      .pipe(
                                          (function je() {
                                              return (0, H.e)((ye, Le) => {
                                                  ye.subscribe(
                                                      new te.Q(
                                                          Le,
                                                          (Ue) => {
                                                              Le.next(
                                                                  be.createNext(
                                                                      Ue
                                                                  )
                                                              );
                                                          },
                                                          () => {
                                                              Le.next(
                                                                  be.createComplete()
                                                              ),
                                                                  Le.complete();
                                                          },
                                                          (Ue) => {
                                                              Le.next(
                                                                  be.createError(
                                                                      Ue
                                                                  )
                                                              ),
                                                                  Le.complete();
                                                          }
                                                      )
                                                  );
                                              });
                                          })()
                                      )
                                      .pipe(
                                          (0, I.U)((or) => ({
                                              effect: ye[rt],
                                              notification: or,
                                              propertyName: rt,
                                              sourceName: Qe,
                                              sourceInstance: ye,
                                          }))
                                      );
                        }
                    );
                return (0, P.T)(...Dt);
            }
            function mn(ye, Le, Ue = 10) {
                return ye.pipe(
                    (0, q.K)(
                        (Qe) => (
                            Le && Le.handleError(Qe),
                            Ue <= 1 ? ye : mn(ye, Le, Ue - 1)
                        )
                    )
                );
            }
            let Zt = (() => {
                class ye extends j.y {
                    constructor(Ue) {
                        super(), Ue && (this.source = Ue);
                    }
                    lift(Ue) {
                        const Qe = new ye();
                        return (Qe.source = this), (Qe.operator = Ue), Qe;
                    }
                }
                return (
                    (ye.ɵfac = function (Ue) {
                        return new (Ue || ye)(re.LFG(f.Y$));
                    }),
                    (ye.ɵprov = re.Yz7({ token: ye, factory: ye.ɵfac })),
                    ye
                );
            })();
            function jn(...ye) {
                return (0, Pe.h)((Le) =>
                    ye.some((Ue) =>
                        'string' == typeof Ue
                            ? Ue === Le.type
                            : Ue.type === Le.type
                    )
                );
            }
            function In(ye) {
                return rn(ye, 'ngrxOnInitEffects');
            }
            function rn(ye, Le) {
                return ye && Le in ye && 'function' == typeof ye[Le];
            }
            const yr = new re.OlP('@ngrx/effects Internal Root Guard'),
                At = new re.OlP('@ngrx/effects User Provided Effects'),
                _t = new re.OlP('@ngrx/effects Internal Root Effects'),
                It = new re.OlP('@ngrx/effects Root Effects'),
                et = new re.OlP('@ngrx/effects Internal Feature Effects'),
                fn = new re.OlP('@ngrx/effects Feature Effects'),
                Pt = new re.OlP('@ngrx/effects Effects Error Handler');
            let pt = (() => {
                class ye extends w.x {
                    constructor(Ue, Qe) {
                        super(),
                            (this.errorHandler = Ue),
                            (this.effectsErrorHandler = Qe);
                    }
                    addEffects(Ue) {
                        this.next(Ue);
                    }
                    toActions() {
                        return this.pipe(
                            Q(De),
                            (0, Be.z)((Ue) => Ue.pipe(Q(gt))),
                            (0, Be.z)((Ue) => {
                                const Qe = Ue.pipe(
                                        F((rt) =>
                                            (function Ar(ye, Le) {
                                                return (Ue) => {
                                                    const Qe = ct(Ue, ye, Le);
                                                    return (function yt(ye) {
                                                        return rn(
                                                            ye,
                                                            'ngrxOnRunEffects'
                                                        );
                                                    })(Ue)
                                                        ? Ue.ngrxOnRunEffects(
                                                              Qe
                                                          )
                                                        : Qe;
                                                };
                                            })(
                                                this.errorHandler,
                                                this.effectsErrorHandler
                                            )(rt)
                                        ),
                                        (0, I.U)(
                                            (rt) => (
                                                (function nn(ye, Le) {
                                                    if (
                                                        'N' ===
                                                        ye.notification.kind
                                                    ) {
                                                        const Ue =
                                                            ye.notification
                                                                .value;
                                                        !(function Gn(ye) {
                                                            return (
                                                                'function' !=
                                                                    typeof ye &&
                                                                ye &&
                                                                ye.type &&
                                                                'string' ==
                                                                    typeof ye.type
                                                            );
                                                        })(Ue) &&
                                                            Le.handleError(
                                                                new Error(
                                                                    `Effect ${(function Wn({
                                                                        propertyName:
                                                                            ye,
                                                                        sourceInstance:
                                                                            Le,
                                                                        sourceName:
                                                                            Ue,
                                                                    }) {
                                                                        const Qe =
                                                                            'function' ==
                                                                            typeof Le[
                                                                                ye
                                                                            ];
                                                                        return `"${Ue}.${String(
                                                                            ye
                                                                        )}${
                                                                            Qe
                                                                                ? '()'
                                                                                : ''
                                                                        }"`;
                                                                    })(
                                                                        ye
                                                                    )} dispatched an invalid action: ${(function Qn(
                                                                        ye
                                                                    ) {
                                                                        try {
                                                                            return JSON.stringify(
                                                                                ye
                                                                            );
                                                                        } catch (Le) {
                                                                            return ye;
                                                                        }
                                                                    })(Ue)}`
                                                                )
                                                            );
                                                    }
                                                })(rt, this.errorHandler),
                                                rt.notification
                                            )
                                        ),
                                        (0, Pe.h)(
                                            (rt) =>
                                                'N' === rt.kind &&
                                                null != rt.value
                                        ),
                                        (function oe() {
                                            return (0, H.e)((ye, Le) => {
                                                ye.subscribe(
                                                    new te.Q(Le, (Ue) =>
                                                        Re(Ue, Le)
                                                    )
                                                );
                                            });
                                        })()
                                    ),
                                    Dt = Ue.pipe(
                                        (0, qe.q)(1),
                                        (0, Pe.h)(In),
                                        (0, I.U)((rt) => rt.ngrxOnInitEffects())
                                    );
                                return (0, P.T)(Qe, Dt);
                            })
                        );
                    }
                }
                return (
                    (ye.ɵfac = function (Ue) {
                        return new (Ue || ye)(re.LFG(re.qLn), re.LFG(Pt));
                    }),
                    (ye.ɵprov = re.Yz7({ token: ye, factory: ye.ɵfac })),
                    ye
                );
            })();
            function gt(ye) {
                return (function Ut(ye) {
                    return rn(ye, 'ngrxOnIdentifyEffects');
                })(ye)
                    ? ye.ngrxOnIdentifyEffects()
                    : '';
            }
            let Zn = (() => {
                class ye {
                    constructor(Ue, Qe) {
                        (this.effectSources = Ue),
                            (this.store = Qe),
                            (this.effectsSubscription = null);
                    }
                    start() {
                        this.effectsSubscription ||
                            (this.effectsSubscription = this.effectSources
                                .toActions()
                                .subscribe(this.store));
                    }
                    ngOnDestroy() {
                        this.effectsSubscription &&
                            (this.effectsSubscription.unsubscribe(),
                            (this.effectsSubscription = null));
                    }
                }
                return (
                    (ye.ɵfac = function (Ue) {
                        return new (Ue || ye)(re.LFG(pt), re.LFG(f.yh));
                    }),
                    (ye.ɵprov = re.Yz7({ token: ye, factory: ye.ɵfac })),
                    ye
                );
            })();
            const jt = '@ngrx/effects/init';
            (0, f.PH)(jt);
            let Hn = (() => {
                    class ye {
                        constructor(Ue, Qe, Dt, rt, Kt, qt, vn) {
                            (this.sources = Ue),
                                Qe.start(),
                                rt.forEach((bt) => Ue.addEffects(bt)),
                                Dt.dispatch({ type: jt });
                        }
                        addEffects(Ue) {
                            this.sources.addEffects(Ue);
                        }
                    }
                    return (
                        (ye.ɵfac = function (Ue) {
                            return new (Ue || ye)(
                                re.LFG(pt),
                                re.LFG(Zn),
                                re.LFG(f.yh),
                                re.LFG(It),
                                re.LFG(f.cr, 8),
                                re.LFG(f.CK, 8),
                                re.LFG(yr, 8)
                            );
                        }),
                        (ye.ɵmod = re.oAB({ type: ye })),
                        (ye.ɵinj = re.cJS({})),
                        ye
                    );
                })(),
                wr = (() => {
                    class ye {
                        constructor(Ue, Qe, Dt, rt) {
                            Qe.forEach((Kt) =>
                                Kt.forEach((qt) => Ue.addEffects(qt))
                            );
                        }
                    }
                    return (
                        (ye.ɵfac = function (Ue) {
                            return new (Ue || ye)(
                                re.LFG(Hn),
                                re.LFG(fn),
                                re.LFG(f.cr, 8),
                                re.LFG(f.CK, 8)
                            );
                        }),
                        (ye.ɵmod = re.oAB({ type: ye })),
                        (ye.ɵinj = re.cJS({})),
                        ye
                    );
                })(),
                se = (() => {
                    class ye {
                        static forFeature(Ue = []) {
                            return {
                                ngModule: wr,
                                providers: [
                                    Ue,
                                    { provide: et, multi: !0, useValue: Ue },
                                    { provide: At, multi: !0, useValue: [] },
                                    {
                                        provide: fn,
                                        multi: !0,
                                        useFactory: de,
                                        deps: [re.zs3, et, At],
                                    },
                                ],
                            };
                        }
                        static forRoot(Ue = []) {
                            return {
                                ngModule: Hn,
                                providers: [
                                    { provide: Pt, useValue: mn },
                                    Zn,
                                    pt,
                                    Zt,
                                    Ue,
                                    { provide: _t, useValue: [Ue] },
                                    {
                                        provide: yr,
                                        useFactory: $e,
                                        deps: [
                                            [Zn, new re.FiY(), new re.tp0()],
                                            [_t, new re.PiD()],
                                        ],
                                    },
                                    { provide: At, multi: !0, useValue: [] },
                                    {
                                        provide: It,
                                        useFactory: de,
                                        deps: [re.zs3, _t, At],
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (ye.ɵfac = function (Ue) {
                            return new (Ue || ye)();
                        }),
                        (ye.ɵmod = re.oAB({ type: ye })),
                        (ye.ɵinj = re.cJS({})),
                        ye
                    );
                })();
            function de(ye, Le, Ue) {
                const Qe = [];
                for (const Dt of Le) Qe.push(...Dt);
                for (const Dt of Ue) Qe.push(...Dt);
                return (function le(ye, Le) {
                    return Le.map((Ue) => ye.get(Ue));
                })(ye, Qe);
            }
            function $e(ye, Le) {
                if ((1 !== Le.length || 0 !== Le[0].length) && ye)
                    throw new TypeError(
                        'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        9565: (
            __unused_webpack___webpack_module__,
            __webpack_exports__,
            __webpack_require__
        ) => {
            'use strict';
            __webpack_require__.d(__webpack_exports__, {
                FT: () => StoreDevtoolsModule,
            });
            var _angular_core__WEBPACK_IMPORTED_MODULE_0__ =
                    __webpack_require__(5e3),
                _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ =
                    __webpack_require__(2323),
                rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(515),
                rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8306),
                rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9646),
                rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(6451),
                rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(233),
                rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(4707),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ =
                    __webpack_require__(3099),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ =
                    __webpack_require__(9300),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ =
                    __webpack_require__(4004),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ =
                    __webpack_require__(4351),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ =
                    __webpack_require__(1749),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ =
                    __webpack_require__(8372),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ =
                    __webpack_require__(262),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ =
                    __webpack_require__(5698),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ =
                    __webpack_require__(2722),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ =
                    __webpack_require__(3900),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ =
                    __webpack_require__(5684),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ =
                    __webpack_require__(5363),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ =
                    __webpack_require__(1365),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_21__ =
                    __webpack_require__(5026);
            class StoreDevtoolsConfig {
                constructor() {
                    this.maxAge = !1;
                }
            }
            const STORE_DEVTOOLS_CONFIG =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Options'
                    ),
                INITIAL_OPTIONS =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Initial Config'
                    );
            function noMonitor() {
                return null;
            }
            const DEFAULT_NAME = 'NgRx Store DevTools';
            function createConfig(pe) {
                const z = {
                        maxAge: !1,
                        monitor: noMonitor,
                        actionSanitizer: void 0,
                        stateSanitizer: void 0,
                        name: DEFAULT_NAME,
                        serialize: !1,
                        logOnly: !1,
                        autoPause: !1,
                        features: {
                            pause: !0,
                            lock: !0,
                            persist: !0,
                            export: !0,
                            import: 'custom',
                            jump: !0,
                            skip: !0,
                            reorder: !0,
                            dispatch: !0,
                            test: !0,
                        },
                    },
                    _ = 'function' == typeof pe ? pe() : pe,
                    j = Object.assign(
                        {},
                        z,
                        {
                            features:
                                _.features ||
                                (!!_.logOnly && {
                                    pause: !0,
                                    export: !0,
                                    test: !0,
                                }) ||
                                z.features,
                        },
                        _
                    );
                if (j.maxAge && j.maxAge < 2)
                    throw new Error(
                        `Devtools 'maxAge' cannot be less than 2, got ${j.maxAge}`
                    );
                return j;
            }
            const PERFORM_ACTION = 'PERFORM_ACTION',
                REFRESH = 'REFRESH',
                RESET = 'RESET',
                ROLLBACK = 'ROLLBACK',
                COMMIT = 'COMMIT',
                SWEEP = 'SWEEP',
                TOGGLE_ACTION = 'TOGGLE_ACTION',
                SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE',
                JUMP_TO_STATE = 'JUMP_TO_STATE',
                JUMP_TO_ACTION = 'JUMP_TO_ACTION',
                IMPORT_STATE = 'IMPORT_STATE',
                LOCK_CHANGES = 'LOCK_CHANGES',
                PAUSE_RECORDING = 'PAUSE_RECORDING';
            class PerformAction {
                constructor(z, _) {
                    if (
                        ((this.action = z),
                        (this.timestamp = _),
                        (this.type = PERFORM_ACTION),
                        void 0 === z.type)
                    )
                        throw new Error(
                            'Actions may not have an undefined "type" property. Have you misspelled a constant?'
                        );
                }
            }
            class Refresh {
                constructor() {
                    this.type = REFRESH;
                }
            }
            class Reset {
                constructor(z) {
                    (this.timestamp = z), (this.type = RESET);
                }
            }
            class Rollback {
                constructor(z) {
                    (this.timestamp = z), (this.type = ROLLBACK);
                }
            }
            class Commit {
                constructor(z) {
                    (this.timestamp = z), (this.type = COMMIT);
                }
            }
            class Sweep {
                constructor() {
                    this.type = SWEEP;
                }
            }
            class ToggleAction {
                constructor(z) {
                    (this.id = z), (this.type = TOGGLE_ACTION);
                }
            }
            class SetActionsActive {
                constructor(z, _, f = !0) {
                    (this.start = z),
                        (this.end = _),
                        (this.active = f),
                        (this.type = SET_ACTIONS_ACTIVE);
                }
            }
            class JumpToState {
                constructor(z) {
                    (this.index = z), (this.type = JUMP_TO_STATE);
                }
            }
            class JumpToAction {
                constructor(z) {
                    (this.actionId = z), (this.type = JUMP_TO_ACTION);
                }
            }
            class ImportState {
                constructor(z) {
                    (this.nextLiftedState = z), (this.type = IMPORT_STATE);
                }
            }
            class LockChanges {
                constructor(z) {
                    (this.status = z), (this.type = LOCK_CHANGES);
                }
            }
            class PauseRecording {
                constructor(z) {
                    (this.status = z), (this.type = PAUSE_RECORDING);
                }
            }
            function difference(pe, z) {
                return pe.filter((_) => z.indexOf(_) < 0);
            }
            function unliftState(pe) {
                const { computedStates: z, currentStateIndex: _ } = pe;
                if (_ >= z.length) {
                    const { state: P } = z[z.length - 1];
                    return P;
                }
                const { state: f } = z[_];
                return f;
            }
            function unliftAction(pe) {
                return pe.actionsById[pe.nextActionId - 1];
            }
            function liftAction(pe) {
                return new PerformAction(pe, +Date.now());
            }
            function sanitizeActions(pe, z) {
                return Object.keys(z).reduce((_, f) => {
                    const P = Number(f);
                    return (_[P] = sanitizeAction(pe, z[P], P)), _;
                }, {});
            }
            function sanitizeAction(pe, z, _) {
                return Object.assign(Object.assign({}, z), {
                    action: pe(z.action, _),
                });
            }
            function sanitizeStates(pe, z) {
                return z.map((_, f) => ({
                    state: sanitizeState(pe, _.state, f),
                    error: _.error,
                }));
            }
            function sanitizeState(pe, z, _) {
                return pe(z, _);
            }
            function shouldFilterActions(pe) {
                return (
                    pe.predicate || pe.actionsSafelist || pe.actionsBlocklist
                );
            }
            function filterLiftedState(pe, z, _, f) {
                const P = [],
                    j = {},
                    w = [];
                return (
                    pe.stagedActionIds.forEach((H, te) => {
                        const X = pe.actionsById[H];
                        !X ||
                            (te &&
                                isActionFiltered(
                                    pe.computedStates[te],
                                    X,
                                    z,
                                    _,
                                    f
                                )) ||
                            ((j[H] = X),
                            P.push(H),
                            w.push(pe.computedStates[te]));
                    }),
                    Object.assign(Object.assign({}, pe), {
                        stagedActionIds: P,
                        actionsById: j,
                        computedStates: w,
                    })
                );
            }
            function isActionFiltered(pe, z, _, f, P) {
                const j = _ && !_(pe, z.action),
                    w =
                        f &&
                        !z.action.type.match(
                            f.map((te) => escapeRegExp(te)).join('|')
                        ),
                    H =
                        P &&
                        z.action.type.match(
                            P.map((te) => escapeRegExp(te)).join('|')
                        );
                return j || w || H;
            }
            function escapeRegExp(pe) {
                return pe.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
            }
            const INIT_ACTION = {
                    type: _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg,
                },
                RECOMPUTE = '@ngrx/store-devtools/recompute',
                RECOMPUTE_ACTION = { type: RECOMPUTE };
            function computeNextEntry(pe, z, _, f, P) {
                if (f)
                    return {
                        state: _,
                        error: 'Interrupted by an error up the chain',
                    };
                let w,
                    j = _;
                try {
                    j = pe(_, z);
                } catch (H) {
                    (w = H.toString()), P.handleError(H);
                }
                return { state: j, error: w };
            }
            function recomputeStates(pe, z, _, f, P, j, w, H, te) {
                if (z >= pe.length && pe.length === j.length) return pe;
                const X = pe.slice(0, z),
                    ne = j.length - (te ? 1 : 0);
                for (let K = z; K < ne; K++) {
                    const $ = j[K],
                        U = P[$].action,
                        ie = X[K - 1],
                        Ae = ie ? ie.state : f,
                        be = ie ? ie.error : void 0,
                        je =
                            w.indexOf($) > -1
                                ? ie
                                : computeNextEntry(_, U, Ae, be, H);
                    X.push(je);
                }
                return te && X.push(pe[pe.length - 1]), X;
            }
            function liftInitialState(pe, z) {
                return {
                    monitorState: z(void 0, {}),
                    nextActionId: 1,
                    actionsById: { 0: liftAction(INIT_ACTION) },
                    stagedActionIds: [0],
                    skippedActionIds: [],
                    committedState: pe,
                    currentStateIndex: 0,
                    computedStates: [],
                    isLocked: !1,
                    isPaused: !1,
                };
            }
            function liftReducerWith(pe, z, _, f, P = {}) {
                return (j) => (w, H) => {
                    let {
                        monitorState: te,
                        actionsById: X,
                        nextActionId: ne,
                        stagedActionIds: K,
                        skippedActionIds: $,
                        committedState: U,
                        currentStateIndex: ie,
                        computedStates: Ae,
                        isLocked: be,
                        isPaused: Re,
                    } = w || z;
                    function je(me) {
                        let I = me,
                            F = K.slice(1, I + 1);
                        for (let oe = 0; oe < F.length; oe++) {
                            if (Ae[oe + 1].error) {
                                (I = oe), (F = K.slice(1, I + 1));
                                break;
                            }
                            delete X[F[oe]];
                        }
                        ($ = $.filter((oe) => -1 === F.indexOf(oe))),
                            (K = [0, ...K.slice(I + 1)]),
                            (U = Ae[I].state),
                            (Ae = Ae.slice(I)),
                            (ie = ie > I ? ie - I : 0);
                    }
                    function ae() {
                        (X = { 0: liftAction(INIT_ACTION) }),
                            (ne = 1),
                            (K = [0]),
                            ($ = []),
                            (U = Ae[ie].state),
                            (ie = 0),
                            (Ae = []);
                    }
                    w || (X = Object.create(X));
                    let Q = 0;
                    switch (H.type) {
                        case LOCK_CHANGES:
                            (be = H.status), (Q = 1 / 0);
                            break;
                        case PAUSE_RECORDING:
                            (Re = H.status),
                                Re
                                    ? ((K = [...K, ne]),
                                      (X[ne] = new PerformAction(
                                          { type: '@ngrx/devtools/pause' },
                                          +Date.now()
                                      )),
                                      ne++,
                                      (Q = K.length - 1),
                                      (Ae = Ae.concat(Ae[Ae.length - 1])),
                                      ie === K.length - 2 && ie++,
                                      (Q = 1 / 0))
                                    : ae();
                            break;
                        case RESET:
                            (X = { 0: liftAction(INIT_ACTION) }),
                                (ne = 1),
                                (K = [0]),
                                ($ = []),
                                (U = pe),
                                (ie = 0),
                                (Ae = []);
                            break;
                        case COMMIT:
                            ae();
                            break;
                        case ROLLBACK:
                            (X = { 0: liftAction(INIT_ACTION) }),
                                (ne = 1),
                                (K = [0]),
                                ($ = []),
                                (ie = 0),
                                (Ae = []);
                            break;
                        case TOGGLE_ACTION: {
                            const { id: me } = H;
                            ($ =
                                -1 === $.indexOf(me)
                                    ? [me, ...$]
                                    : $.filter((F) => F !== me)),
                                (Q = K.indexOf(me));
                            break;
                        }
                        case SET_ACTIONS_ACTIVE: {
                            const { start: me, end: I, active: F } = H,
                                oe = [];
                            for (let q = me; q < I; q++) oe.push(q);
                            ($ = F ? difference($, oe) : [...$, ...oe]),
                                (Q = K.indexOf(me));
                            break;
                        }
                        case JUMP_TO_STATE:
                            (ie = H.index), (Q = 1 / 0);
                            break;
                        case JUMP_TO_ACTION: {
                            const me = K.indexOf(H.actionId);
                            -1 !== me && (ie = me), (Q = 1 / 0);
                            break;
                        }
                        case SWEEP:
                            (K = difference(K, $)),
                                ($ = []),
                                (ie = Math.min(ie, K.length - 1));
                            break;
                        case PERFORM_ACTION: {
                            if (be) return w || z;
                            if (
                                Re ||
                                (w &&
                                    isActionFiltered(
                                        w.computedStates[ie],
                                        H,
                                        P.predicate,
                                        P.actionsSafelist,
                                        P.actionsBlocklist
                                    ))
                            ) {
                                const I = Ae[Ae.length - 1];
                                (Ae = [
                                    ...Ae.slice(0, -1),
                                    computeNextEntry(
                                        j,
                                        H.action,
                                        I.state,
                                        I.error,
                                        _
                                    ),
                                ]),
                                    (Q = 1 / 0);
                                break;
                            }
                            P.maxAge && K.length === P.maxAge && je(1),
                                ie === K.length - 1 && ie++;
                            const me = ne++;
                            (X[me] = H), (K = [...K, me]), (Q = K.length - 1);
                            break;
                        }
                        case IMPORT_STATE:
                            ({
                                monitorState: te,
                                actionsById: X,
                                nextActionId: ne,
                                stagedActionIds: K,
                                skippedActionIds: $,
                                committedState: U,
                                currentStateIndex: ie,
                                computedStates: Ae,
                                isLocked: be,
                                isPaused: Re,
                            } = H.nextLiftedState);
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg:
                            (Q = 0),
                                P.maxAge &&
                                    K.length > P.maxAge &&
                                    ((Ae = recomputeStates(
                                        Ae,
                                        Q,
                                        j,
                                        U,
                                        X,
                                        K,
                                        $,
                                        _,
                                        Re
                                    )),
                                    je(K.length - P.maxAge),
                                    (Q = 1 / 0));
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb:
                            if (Ae.filter((I) => I.error).length > 0)
                                (Q = 0),
                                    P.maxAge &&
                                        K.length > P.maxAge &&
                                        ((Ae = recomputeStates(
                                            Ae,
                                            Q,
                                            j,
                                            U,
                                            X,
                                            K,
                                            $,
                                            _,
                                            Re
                                        )),
                                        je(K.length - P.maxAge),
                                        (Q = 1 / 0));
                            else {
                                if (!Re && !be) {
                                    ie === K.length - 1 && ie++;
                                    const I = ne++;
                                    (X[I] = new PerformAction(H, +Date.now())),
                                        (K = [...K, I]),
                                        (Q = K.length - 1),
                                        (Ae = recomputeStates(
                                            Ae,
                                            Q,
                                            j,
                                            U,
                                            X,
                                            K,
                                            $,
                                            _,
                                            Re
                                        ));
                                }
                                (Ae = Ae.map((I) =>
                                    Object.assign(Object.assign({}, I), {
                                        state: j(I.state, RECOMPUTE_ACTION),
                                    })
                                )),
                                    (ie = K.length - 1),
                                    P.maxAge &&
                                        K.length > P.maxAge &&
                                        je(K.length - P.maxAge),
                                    (Q = 1 / 0);
                            }
                            break;
                        default:
                            Q = 1 / 0;
                    }
                    return (
                        (Ae = recomputeStates(Ae, Q, j, U, X, K, $, _, Re)),
                        (te = f(te, H)),
                        {
                            monitorState: te,
                            actionsById: X,
                            nextActionId: ne,
                            stagedActionIds: K,
                            skippedActionIds: $,
                            committedState: U,
                            currentStateIndex: ie,
                            computedStates: Ae,
                            isLocked: be,
                            isPaused: Re,
                        }
                    );
                };
            }
            let DevtoolsDispatcher = (() => {
                class pe extends _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO {}
                return (
                    (pe.ɵfac = (function () {
                        let z;
                        return function (f) {
                            return (
                                z ||
                                (z =
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.n5z(
                                        pe
                                    ))
                            )(f || pe);
                        };
                    })()),
                    (pe.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                        token: pe,
                        factory: pe.ɵfac,
                    })),
                    pe
                );
            })();
            const ExtensionActionTypes = {
                    START: 'START',
                    DISPATCH: 'DISPATCH',
                    STOP: 'STOP',
                    ACTION: 'ACTION',
                },
                REDUX_DEVTOOLS_EXTENSION =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Redux Devtools Extension'
                    );
            let DevtoolsExtension = (() => {
                    class DevtoolsExtension {
                        constructor(pe, z, _) {
                            (this.config = z),
                                (this.dispatcher = _),
                                (this.devtoolsExtension = pe),
                                this.createActionStreams();
                        }
                        notify(pe, z) {
                            if (this.devtoolsExtension)
                                if (pe.type === PERFORM_ACTION) {
                                    if (z.isLocked || z.isPaused) return;
                                    const _ = unliftState(z);
                                    if (
                                        shouldFilterActions(this.config) &&
                                        isActionFiltered(
                                            _,
                                            pe,
                                            this.config.predicate,
                                            this.config.actionsSafelist,
                                            this.config.actionsBlocklist
                                        )
                                    )
                                        return;
                                    const f = this.config.stateSanitizer
                                            ? sanitizeState(
                                                  this.config.stateSanitizer,
                                                  _,
                                                  z.currentStateIndex
                                              )
                                            : _,
                                        P = this.config.actionSanitizer
                                            ? sanitizeAction(
                                                  this.config.actionSanitizer,
                                                  pe,
                                                  z.nextActionId
                                              )
                                            : pe;
                                    this.sendToReduxDevtools(() =>
                                        this.extensionConnection.send(P, f)
                                    );
                                } else {
                                    const _ = Object.assign(
                                        Object.assign({}, z),
                                        {
                                            stagedActionIds: z.stagedActionIds,
                                            actionsById: this.config
                                                .actionSanitizer
                                                ? sanitizeActions(
                                                      this.config
                                                          .actionSanitizer,
                                                      z.actionsById
                                                  )
                                                : z.actionsById,
                                            computedStates: this.config
                                                .stateSanitizer
                                                ? sanitizeStates(
                                                      this.config
                                                          .stateSanitizer,
                                                      z.computedStates
                                                  )
                                                : z.computedStates,
                                        }
                                    );
                                    this.sendToReduxDevtools(() =>
                                        this.devtoolsExtension.send(
                                            null,
                                            _,
                                            this.getExtensionConfig(this.config)
                                        )
                                    );
                                }
                        }
                        createChangesObservable() {
                            return this.devtoolsExtension
                                ? new rxjs__WEBPACK_IMPORTED_MODULE_3__.y(
                                      (pe) => {
                                          const z =
                                              this.devtoolsExtension.connect(
                                                  this.getExtensionConfig(
                                                      this.config
                                                  )
                                              );
                                          return (
                                              (this.extensionConnection = z),
                                              z.init(),
                                              z.subscribe((_) => pe.next(_)),
                                              z.unsubscribe
                                          );
                                      }
                                  )
                                : rxjs__WEBPACK_IMPORTED_MODULE_2__.E;
                        }
                        createActionStreams() {
                            const pe = this.createChangesObservable().pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.B)()
                                ),
                                z = pe.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (H) =>
                                            H.type ===
                                            ExtensionActionTypes.START
                                    )
                                ),
                                _ = pe.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (H) =>
                                            H.type === ExtensionActionTypes.STOP
                                    )
                                ),
                                f = pe.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (H) =>
                                            H.type ===
                                            ExtensionActionTypes.DISPATCH
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        (H) => this.unwrapAction(H.payload)
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.b)(
                                        (H) =>
                                            H.type === IMPORT_STATE
                                                ? this.dispatcher.pipe(
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                                          (te) =>
                                                              te.type ===
                                                              _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.V)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.b)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                                          () => H
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.K)(
                                                          () =>
                                                              (0,
                                                              rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                                  H
                                                              )
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.q)(
                                                          1
                                                      )
                                                  )
                                                : (0,
                                                  rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                      H
                                                  )
                                    )
                                ),
                                j = pe
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                            (H) =>
                                                H.type ===
                                                ExtensionActionTypes.ACTION
                                        ),
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            (H) => this.unwrapAction(H.payload)
                                        )
                                    )
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                            _
                                        )
                                    ),
                                w = f.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                        _
                                    )
                                );
                            (this.start$ = z.pipe(
                                (0,
                                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                    _
                                )
                            )),
                                (this.actions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => j
                                    )
                                )),
                                (this.liftedActions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => w
                                    )
                                ));
                        }
                        unwrapAction(action) {
                            return 'string' == typeof action
                                ? eval(`(${action})`)
                                : action;
                        }
                        getExtensionConfig(pe) {
                            var z;
                            const _ = {
                                name: pe.name,
                                features: pe.features,
                                serialize: pe.serialize,
                                autoPause:
                                    null !== (z = pe.autoPause) &&
                                    void 0 !== z &&
                                    z,
                            };
                            return (
                                !1 !== pe.maxAge && (_.maxAge = pe.maxAge), _
                            );
                        }
                        sendToReduxDevtools(pe) {
                            try {
                                pe();
                            } catch (z) {
                                console.warn(
                                    '@ngrx/store-devtools: something went wrong inside the redux devtools',
                                    z
                                );
                            }
                        }
                    }
                    return (
                        (DevtoolsExtension.ɵfac = function pe(z) {
                            return new (z || DevtoolsExtension)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    REDUX_DEVTOOLS_EXTENSION
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                )
                            );
                        }),
                        (DevtoolsExtension.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: DevtoolsExtension,
                                factory: DevtoolsExtension.ɵfac,
                            })),
                        DevtoolsExtension
                    );
                })(),
                StoreDevtools = (() => {
                    class pe {
                        constructor(_, f, P, j, w, H, te, X) {
                            const ne = liftInitialState(te, X.monitor),
                                K = liftReducerWith(te, ne, H, X.monitor, X),
                                $ = (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                    (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                        f
                                            .asObservable()
                                            .pipe(
                                                (0,
                                                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.T)(
                                                    1
                                                )
                                            ),
                                        j.actions$
                                    ).pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            liftAction
                                        )
                                    ),
                                    _,
                                    j.liftedActions$
                                ).pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.Q)(
                                        rxjs__WEBPACK_IMPORTED_MODULE_18__.N
                                    )
                                ),
                                U = P.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        K
                                    )
                                ),
                                ie = new rxjs__WEBPACK_IMPORTED_MODULE_19__.t(
                                    1
                                ),
                                Ae = $.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.M)(
                                        U
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_21__.R)(
                                        ({ state: ae }, [Q, me]) => {
                                            let I = me(ae, Q);
                                            return (
                                                Q.type !== PERFORM_ACTION &&
                                                    shouldFilterActions(X) &&
                                                    (I = filterLiftedState(
                                                        I,
                                                        X.predicate,
                                                        X.actionsSafelist,
                                                        X.actionsBlocklist
                                                    )),
                                                j.notify(Q, I),
                                                { state: I, action: Q }
                                            );
                                        },
                                        { state: ne, action: null }
                                    )
                                ).subscribe(({ state: ae, action: Q }) => {
                                    ie.next(ae),
                                        Q.type === PERFORM_ACTION &&
                                            w.next(Q.action);
                                }),
                                be = j.start$.subscribe(() => {
                                    this.refresh();
                                }),
                                Re = ie.asObservable(),
                                je = Re.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        unliftState
                                    )
                                );
                            (this.extensionStartSubscription = be),
                                (this.stateSubscription = Ae),
                                (this.dispatcher = _),
                                (this.liftedState = Re),
                                (this.state = je);
                        }
                        dispatch(_) {
                            this.dispatcher.next(_);
                        }
                        next(_) {
                            this.dispatcher.next(_);
                        }
                        error(_) {}
                        complete() {}
                        performAction(_) {
                            this.dispatch(new PerformAction(_, +Date.now()));
                        }
                        refresh() {
                            this.dispatch(new Refresh());
                        }
                        reset() {
                            this.dispatch(new Reset(+Date.now()));
                        }
                        rollback() {
                            this.dispatch(new Rollback(+Date.now()));
                        }
                        commit() {
                            this.dispatch(new Commit(+Date.now()));
                        }
                        sweep() {
                            this.dispatch(new Sweep());
                        }
                        toggleAction(_) {
                            this.dispatch(new ToggleAction(_));
                        }
                        jumpToAction(_) {
                            this.dispatch(new JumpToAction(_));
                        }
                        jumpToState(_) {
                            this.dispatch(new JumpToState(_));
                        }
                        importState(_) {
                            this.dispatch(new ImportState(_));
                        }
                        lockChanges(_) {
                            this.dispatch(new LockChanges(_));
                        }
                        pauseRecording(_) {
                            this.dispatch(new PauseRecording(_));
                        }
                    }
                    return (
                        (pe.ɵfac = function (_) {
                            return new (_ || pe)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.n$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsExtension
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.qLn
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y6
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                )
                            );
                        }),
                        (pe.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: pe,
                                factory: pe.ɵfac,
                            })),
                        pe
                    );
                })();
            const IS_EXTENSION_OR_MONITOR_PRESENT =
                new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                    '@ngrx/store-devtools Is Devtools Extension or Monitor Present'
                );
            function createIsExtensionOrMonitorPresent(pe, z) {
                return Boolean(pe) || z.monitor !== noMonitor;
            }
            function createReduxDevtoolsExtension() {
                const pe = '__REDUX_DEVTOOLS_EXTENSION__';
                return 'object' == typeof window && void 0 !== window[pe]
                    ? window[pe]
                    : null;
            }
            function createStateObservable(pe) {
                return pe.state;
            }
            let StoreDevtoolsModule = (() => {
                class pe {
                    static instrument(_ = {}) {
                        return {
                            ngModule: pe,
                            providers: [
                                DevtoolsExtension,
                                DevtoolsDispatcher,
                                StoreDevtools,
                                { provide: INITIAL_OPTIONS, useValue: _ },
                                {
                                    provide: IS_EXTENSION_OR_MONITOR_PRESENT,
                                    deps: [
                                        REDUX_DEVTOOLS_EXTENSION,
                                        STORE_DEVTOOLS_CONFIG,
                                    ],
                                    useFactory:
                                        createIsExtensionOrMonitorPresent,
                                },
                                {
                                    provide: REDUX_DEVTOOLS_EXTENSION,
                                    useFactory: createReduxDevtoolsExtension,
                                },
                                {
                                    provide: STORE_DEVTOOLS_CONFIG,
                                    deps: [INITIAL_OPTIONS],
                                    useFactory: createConfig,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.FR,
                                    deps: [StoreDevtools],
                                    useFactory: createStateObservable,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.mK,
                                    useExisting: DevtoolsDispatcher,
                                },
                            ],
                        };
                    }
                }
                return (
                    (pe.ɵfac = function (_) {
                        return new (_ || pe)();
                    }),
                    (pe.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__.oAB({
                        type: pe,
                    })),
                    (pe.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__.cJS(
                        {}
                    )),
                    pe
                );
            })();
        },
        2323: (pe, z, _) => {
            'use strict';
            _.d(z, {
                UO: () => q,
                qg: () => oe,
                Y6: () => re,
                mK: () => Fn,
                n$: () => Ut,
                Y$: () => rn,
                FR: () => At,
                yh: () => fn,
                CK: () => An,
                Aw: () => Tr,
                cr: () => Kn,
                wb: () => yt,
                qC: () => Wn,
                PH: () => Q,
                Ky: () => me,
            });
            var f = _(5e3),
                P = _(1135),
                j = _(8306),
                w = _(7579),
                H = _(233),
                te = _(4004),
                ne = _(4671),
                K = _(4482),
                $ = _(5403);
            function ie(J, xe) {
                return J === xe;
            }
            var Ae = _(5363),
                be = _(1365),
                Re = _(5026);
            const je = {};
            function Q(J, xe) {
                if (((je[J] = (je[J] || 0) + 1), 'function' == typeof xe))
                    return F(J, (...Me) =>
                        Object.assign(Object.assign({}, xe(...Me)), { type: J })
                    );
                switch (xe ? xe._as : 'empty') {
                    case 'empty':
                        return F(J, () => ({ type: J }));
                    case 'props':
                        return F(J, (Me) =>
                            Object.assign(Object.assign({}, Me), { type: J })
                        );
                    default:
                        throw new Error('Unexpected config.');
                }
            }
            function me() {
                return { _as: 'props', _p: void 0 };
            }
            function F(J, xe) {
                return Object.defineProperty(xe, 'type', {
                    value: J,
                    writable: !1,
                });
            }
            const oe = '@ngrx/store/init';
            let q = (() => {
                class J extends P.X {
                    constructor() {
                        super({ type: oe });
                    }
                    next(ve) {
                        if ('function' == typeof ve)
                            throw new TypeError(
                                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction()."
                            );
                        if (void 0 === ve)
                            throw new TypeError('Actions must be objects');
                        if (void 0 === ve.type)
                            throw new TypeError(
                                'Actions must have a type property'
                            );
                        super.next(ve);
                    }
                    complete() {}
                    ngOnDestroy() {
                        super.complete();
                    }
                }
                return (
                    (J.ɵfac = function (ve) {
                        return new (ve || J)();
                    }),
                    (J.ɵprov = f.Yz7({ token: J, factory: J.ɵfac })),
                    J
                );
            })();
            const Pe = [q],
                Be = new f.OlP('@ngrx/store Internal Root Guard'),
                qe = new f.OlP('@ngrx/store Internal Initial State'),
                re = new f.OlP('@ngrx/store Initial State'),
                Se = new f.OlP('@ngrx/store Reducer Factory'),
                Ee = new f.OlP('@ngrx/store Internal Reducer Factory Provider'),
                Oe = new f.OlP('@ngrx/store Initial Reducers'),
                Ne = new f.OlP('@ngrx/store Internal Initial Reducers'),
                De = new f.OlP('@ngrx/store Store Features'),
                ut = new f.OlP('@ngrx/store Internal Store Reducers'),
                Bt = new f.OlP('@ngrx/store Internal Feature Reducers'),
                gn = new f.OlP('@ngrx/store Internal Feature Configs'),
                ot = new f.OlP('@ngrx/store Internal Store Features'),
                st = new f.OlP('@ngrx/store Internal Feature Reducers Token'),
                un = new f.OlP('@ngrx/store Feature Reducers'),
                Ft = new f.OlP('@ngrx/store User Provided Meta Reducers'),
                Ht = new f.OlP('@ngrx/store Meta Reducers'),
                ct = new f.OlP('@ngrx/store Internal Resolved Meta Reducers'),
                Rn = new f.OlP('@ngrx/store User Runtime Checks Config'),
                mn = new f.OlP(
                    '@ngrx/store Internal User Runtime Checks Config'
                ),
                Zt = new f.OlP('@ngrx/store Internal Runtime Checks'),
                jn = new f.OlP('@ngrx/store Check if Action types are unique');
            function nn(J, xe = {}) {
                const ve = Object.keys(J),
                    Me = {};
                for (let Ze = 0; Ze < ve.length; Ze++) {
                    const Rt = ve[Ze];
                    'function' == typeof J[Rt] && (Me[Rt] = J[Rt]);
                }
                const Je = Object.keys(Me);
                return function (Rt, pn) {
                    Rt = void 0 === Rt ? xe : Rt;
                    let Dn = !1;
                    const Un = {};
                    for (let Jt = 0; Jt < Je.length; Jt++) {
                        const pr = Je[Jt],
                            Hi = Rt[pr],
                            Er = (0, Me[pr])(Hi, pn);
                        (Un[pr] = Er), (Dn = Dn || Er !== Hi);
                    }
                    return Dn ? Un : Rt;
                };
            }
            function Wn(...J) {
                return function (xe) {
                    if (0 === J.length) return xe;
                    const ve = J[J.length - 1];
                    return J.slice(0, -1).reduceRight(
                        (Je, Ze) => Ze(Je),
                        ve(xe)
                    );
                };
            }
            function Qn(J, xe) {
                return (
                    Array.isArray(xe) &&
                        xe.length > 0 &&
                        (J = Wn.apply(null, [...xe, J])),
                    (ve, Me) => {
                        const Je = J(ve);
                        return (Ze, Rt) =>
                            Je((Ze = void 0 === Ze ? Me : Ze), Rt);
                    }
                );
            }
            class Ut extends j.y {}
            class Fn extends q {}
            const yt = '@ngrx/store/update-reducers';
            let xn = (() => {
                class J extends P.X {
                    constructor(ve, Me, Je, Ze) {
                        super(Ze(Je, Me)),
                            (this.dispatcher = ve),
                            (this.initialState = Me),
                            (this.reducers = Je),
                            (this.reducerFactory = Ze);
                    }
                    get currentReducers() {
                        return this.reducers;
                    }
                    addFeature(ve) {
                        this.addFeatures([ve]);
                    }
                    addFeatures(ve) {
                        const Me = ve.reduce(
                            (
                                Je,
                                {
                                    reducers: Ze,
                                    reducerFactory: Rt,
                                    metaReducers: pn,
                                    initialState: Dn,
                                    key: Un,
                                }
                            ) => {
                                const Jt =
                                    'function' == typeof Ze
                                        ? (function cr(J) {
                                              const xe =
                                                  Array.isArray(J) &&
                                                  J.length > 0
                                                      ? Wn(...J)
                                                      : (ve) => ve;
                                              return (ve, Me) => (
                                                  (ve = xe(ve)),
                                                  (Je, Ze) =>
                                                      ve(
                                                          (Je =
                                                              void 0 === Je
                                                                  ? Me
                                                                  : Je),
                                                          Ze
                                                      )
                                              );
                                          })(pn)(Ze, Dn)
                                        : Qn(Rt, pn)(Ze, Dn);
                                return (Je[Un] = Jt), Je;
                            },
                            {}
                        );
                        this.addReducers(Me);
                    }
                    removeFeature(ve) {
                        this.removeFeatures([ve]);
                    }
                    removeFeatures(ve) {
                        this.removeReducers(ve.map((Me) => Me.key));
                    }
                    addReducer(ve, Me) {
                        this.addReducers({ [ve]: Me });
                    }
                    addReducers(ve) {
                        (this.reducers = Object.assign(
                            Object.assign({}, this.reducers),
                            ve
                        )),
                            this.updateReducers(Object.keys(ve));
                    }
                    removeReducer(ve) {
                        this.removeReducers([ve]);
                    }
                    removeReducers(ve) {
                        ve.forEach((Me) => {
                            this.reducers = (function Gn(J, xe) {
                                return Object.keys(J)
                                    .filter((ve) => ve !== xe)
                                    .reduce(
                                        (ve, Me) =>
                                            Object.assign(ve, { [Me]: J[Me] }),
                                        {}
                                    );
                            })(this.reducers, Me);
                        }),
                            this.updateReducers(ve);
                    }
                    updateReducers(ve) {
                        this.next(
                            this.reducerFactory(
                                this.reducers,
                                this.initialState
                            )
                        ),
                            this.dispatcher.next({ type: yt, features: ve });
                    }
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (J.ɵfac = function (ve) {
                        return new (ve || J)(
                            f.LFG(Fn),
                            f.LFG(re),
                            f.LFG(Oe),
                            f.LFG(Se)
                        );
                    }),
                    (J.ɵprov = f.Yz7({ token: J, factory: J.ɵfac })),
                    J
                );
            })();
            const In = [
                xn,
                { provide: Ut, useExisting: xn },
                { provide: Fn, useExisting: q },
            ];
            let rn = (() => {
                class J extends w.x {
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (J.ɵfac = (function () {
                        let xe;
                        return function (Me) {
                            return (xe || (xe = f.n5z(J)))(Me || J);
                        };
                    })()),
                    (J.ɵprov = f.Yz7({ token: J, factory: J.ɵfac })),
                    J
                );
            })();
            const yr = [rn];
            class At extends j.y {}
            let _t = (() => {
                class J extends P.X {
                    constructor(ve, Me, Je, Ze) {
                        super(Ze);
                        const Un = ve
                            .pipe((0, Ae.Q)(H.N))
                            .pipe((0, be.M)(Me))
                            .pipe((0, Re.R)(It, { state: Ze }));
                        this.stateSubscription = Un.subscribe(
                            ({ state: Jt, action: pr }) => {
                                this.next(Jt), Je.next(pr);
                            }
                        );
                    }
                    ngOnDestroy() {
                        this.stateSubscription.unsubscribe(), this.complete();
                    }
                }
                return (
                    (J.INIT = oe),
                    (J.ɵfac = function (ve) {
                        return new (ve || J)(
                            f.LFG(q),
                            f.LFG(Ut),
                            f.LFG(rn),
                            f.LFG(re)
                        );
                    }),
                    (J.ɵprov = f.Yz7({ token: J, factory: J.ɵfac })),
                    J
                );
            })();
            function It(J = { state: void 0 }, [xe, ve]) {
                const { state: Me } = J;
                return { state: ve(Me, xe), action: xe };
            }
            const et = [_t, { provide: At, useExisting: _t }];
            let fn = (() => {
                class J extends j.y {
                    constructor(ve, Me, Je) {
                        super(),
                            (this.actionsObserver = Me),
                            (this.reducerManager = Je),
                            (this.source = ve);
                    }
                    select(ve, ...Me) {
                        return pt.call(null, ve, ...Me)(this);
                    }
                    lift(ve) {
                        const Me = new J(
                            this,
                            this.actionsObserver,
                            this.reducerManager
                        );
                        return (Me.operator = ve), Me;
                    }
                    dispatch(ve) {
                        this.actionsObserver.next(ve);
                    }
                    next(ve) {
                        this.actionsObserver.next(ve);
                    }
                    error(ve) {
                        this.actionsObserver.error(ve);
                    }
                    complete() {
                        this.actionsObserver.complete();
                    }
                    addReducer(ve, Me) {
                        this.reducerManager.addReducer(ve, Me);
                    }
                    removeReducer(ve) {
                        this.reducerManager.removeReducer(ve);
                    }
                }
                return (
                    (J.ɵfac = function (ve) {
                        return new (ve || J)(f.LFG(At), f.LFG(q), f.LFG(xn));
                    }),
                    (J.ɵprov = f.Yz7({ token: J, factory: J.ɵfac })),
                    J
                );
            })();
            const Pt = [fn];
            function pt(J, xe, ...ve) {
                return function (Je) {
                    let Ze;
                    if ('string' == typeof J) {
                        const Rt = [xe, ...ve].filter(Boolean);
                        Ze = Je.pipe(
                            (function X(...J) {
                                const xe = J.length;
                                if (0 === xe)
                                    throw new Error(
                                        'list of properties cannot be empty.'
                                    );
                                return (0, te.U)((ve) => {
                                    let Me = ve;
                                    for (let Je = 0; Je < xe; Je++) {
                                        const Ze =
                                            null == Me ? void 0 : Me[J[Je]];
                                        if (void 0 === Ze) return;
                                        Me = Ze;
                                    }
                                    return Me;
                                });
                            })(J, ...Rt)
                        );
                    } else {
                        if ('function' != typeof J)
                            throw new TypeError(
                                `Unexpected type '${typeof J}' in select operator, expected 'string' or 'function'`
                            );
                        Ze = Je.pipe((0, te.U)((Rt) => J(Rt, xe)));
                    }
                    return Ze.pipe(
                        (function U(J, xe = ne.y) {
                            return (
                                (J = null != J ? J : ie),
                                (0, K.e)((ve, Me) => {
                                    let Je,
                                        Ze = !0;
                                    ve.subscribe(
                                        new $.Q(Me, (Rt) => {
                                            const pn = xe(Rt);
                                            (Ze || !J(Je, pn)) &&
                                                ((Ze = !1),
                                                (Je = pn),
                                                Me.next(Rt));
                                        })
                                    );
                                })
                            );
                        })()
                    );
                };
            }
            const Ar =
                'https://ngrx.io/guide/store/configuration/runtime-checks';
            function Zn(J) {
                return void 0 === J;
            }
            function jt(J) {
                return null === J;
            }
            function qn(J) {
                return Array.isArray(J);
            }
            function de(J) {
                return 'object' == typeof J && null !== J;
            }
            function Te(J) {
                return 'function' == typeof J;
            }
            function Jn(J) {
                Object.freeze(J);
                const xe = Te(J);
                return (
                    Object.getOwnPropertyNames(J).forEach((ve) => {
                        if (
                            !ve.startsWith('\u0275') &&
                            (function ye(J, xe) {
                                return Object.prototype.hasOwnProperty.call(
                                    J,
                                    xe
                                );
                            })(J, ve) &&
                            (!xe ||
                                ('caller' !== ve &&
                                    'callee' !== ve &&
                                    'arguments' !== ve))
                        ) {
                            const Me = J[ve];
                            (de(Me) || Te(Me)) &&
                                !Object.isFrozen(Me) &&
                                Jn(Me);
                        }
                    }),
                    J
                );
            }
            function hr(J, xe = []) {
                return (Zn(J) || jt(J)) && 0 === xe.length
                    ? { path: ['root'], value: J }
                    : Object.keys(J).reduce((Me, Je) => {
                          if (Me) return Me;
                          const Ze = J[Je];
                          return (function lt(J) {
                              return Te(J) && J.hasOwnProperty('\u0275cmp');
                          })(Ze)
                              ? Me
                              : !(
                                    Zn(Ze) ||
                                    jt(Ze) ||
                                    (function se(J) {
                                        return 'number' == typeof J;
                                    })(Ze) ||
                                    (function wr(J) {
                                        return 'boolean' == typeof J;
                                    })(Ze) ||
                                    (function Hn(J) {
                                        return 'string' == typeof J;
                                    })(Ze) ||
                                    qn(Ze)
                                ) &&
                                    ((function $e(J) {
                                        if (
                                            !(function le(J) {
                                                return de(J) && !qn(J);
                                            })(J)
                                        )
                                            return !1;
                                        const xe = Object.getPrototypeOf(J);
                                        return (
                                            xe === Object.prototype ||
                                            null === xe
                                        );
                                    })(Ze)
                                        ? hr(Ze, [...xe, Je])
                                        : { path: [...xe, Je], value: Ze });
                      }, !1);
            }
            function Pr(J, xe) {
                if (!1 === J) return;
                const ve = J.path.join('.'),
                    Me = new Error(
                        `Detected unserializable ${xe} at "${ve}". ${Ar}#strict${xe}serializability`
                    );
                throw ((Me.value = J.value), (Me.unserializablePath = ve), Me);
            }
            function nr(J) {
                return (0, f.X6Q)()
                    ? Object.assign(
                          {
                              strictStateSerializability: !1,
                              strictActionSerializability: !1,
                              strictStateImmutability: !0,
                              strictActionImmutability: !0,
                              strictActionWithinNgZone: !1,
                              strictActionTypeUniqueness: !1,
                          },
                          J
                      )
                    : {
                          strictStateSerializability: !1,
                          strictActionSerializability: !1,
                          strictStateImmutability: !1,
                          strictActionImmutability: !1,
                          strictActionWithinNgZone: !1,
                          strictActionTypeUniqueness: !1,
                      };
            }
            function Rr({
                strictActionSerializability: J,
                strictStateSerializability: xe,
            }) {
                return (ve) =>
                    J || xe
                        ? (function Wr(J, xe) {
                              return function (ve, Me) {
                                  xe.action(Me) && Pr(hr(Me), 'action');
                                  const Je = J(ve, Me);
                                  return xe.state() && Pr(hr(Je), 'state'), Je;
                              };
                          })(ve, {
                              action: (Me) => J && !tt(Me),
                              state: () => xe,
                          })
                        : ve;
            }
            function Xn({
                strictActionImmutability: J,
                strictStateImmutability: xe,
            }) {
                return (ve) =>
                    J || xe
                        ? (function Pn(J, xe) {
                              return function (ve, Me) {
                                  const Je = xe.action(Me) ? Jn(Me) : Me,
                                      Ze = J(ve, Je);
                                  return xe.state() ? Jn(Ze) : Ze;
                              };
                          })(ve, {
                              action: (Me) => J && !tt(Me),
                              state: () => xe,
                          })
                        : ve;
            }
            function tt(J) {
                return J.type.startsWith('@ngrx');
            }
            function Yt({ strictActionWithinNgZone: J }) {
                return (xe) =>
                    J
                        ? (function _r(J, xe) {
                              return function (ve, Me) {
                                  if (xe.action(Me) && !f.R0b.isInAngularZone())
                                      throw new Error(
                                          `Action '${Me.type}' running outside NgZone. ${Ar}#strictactionwithinngzone`
                                      );
                                  return J(ve, Me);
                              };
                          })(xe, { action: (ve) => J && !tt(ve) })
                        : xe;
            }
            function hn(J) {
                return [
                    { provide: mn, useValue: J },
                    { provide: Rn, useFactory: er, deps: [mn] },
                    { provide: Zt, deps: [Rn], useFactory: nr },
                    { provide: Ht, multi: !0, deps: [Zt], useFactory: Xn },
                    { provide: Ht, multi: !0, deps: [Zt], useFactory: Rr },
                    { provide: Ht, multi: !0, deps: [Zt], useFactory: Yt },
                ];
            }
            function Vn() {
                return [{ provide: jn, multi: !0, deps: [Zt], useFactory: cn }];
            }
            function er(J) {
                return J;
            }
            function cn(J) {
                if (!J.strictActionTypeUniqueness) return;
                const xe = Object.entries(je)
                    .filter(([, ve]) => ve > 1)
                    .map(([ve]) => ve);
                if (xe.length)
                    throw new Error(
                        `Action types are registered more than once, ${xe
                            .map((ve) => `"${ve}"`)
                            .join(', ')}. ${Ar}#strictactiontypeuniqueness`
                    );
            }
            let Kn = (() => {
                    class J {
                        constructor(ve, Me, Je, Ze, Rt, pn) {}
                    }
                    return (
                        (J.ɵfac = function (ve) {
                            return new (ve || J)(
                                f.LFG(q),
                                f.LFG(Ut),
                                f.LFG(rn),
                                f.LFG(fn),
                                f.LFG(Be, 8),
                                f.LFG(jn, 8)
                            );
                        }),
                        (J.ɵmod = f.oAB({ type: J })),
                        (J.ɵinj = f.cJS({})),
                        J
                    );
                })(),
                An = (() => {
                    class J {
                        constructor(ve, Me, Je, Ze, Rt) {
                            (this.features = ve),
                                (this.featureReducers = Me),
                                (this.reducerManager = Je);
                            const pn = ve.map((Dn, Un) => {
                                const pr = Me.shift()[Un];
                                return Object.assign(Object.assign({}, Dn), {
                                    reducers: pr,
                                    initialState: dr(Dn.initialState),
                                });
                            });
                            Je.addFeatures(pn);
                        }
                        ngOnDestroy() {
                            this.reducerManager.removeFeatures(this.features);
                        }
                    }
                    return (
                        (J.ɵfac = function (ve) {
                            return new (ve || J)(
                                f.LFG(ot),
                                f.LFG(un),
                                f.LFG(xn),
                                f.LFG(Kn),
                                f.LFG(jn, 8)
                            );
                        }),
                        (J.ɵmod = f.oAB({ type: J })),
                        (J.ɵinj = f.cJS({})),
                        J
                    );
                })(),
                Tr = (() => {
                    class J {
                        static forRoot(ve, Me = {}) {
                            return {
                                ngModule: Kn,
                                providers: [
                                    {
                                        provide: Be,
                                        useFactory: an,
                                        deps: [[fn, new f.FiY(), new f.tp0()]],
                                    },
                                    { provide: qe, useValue: Me.initialState },
                                    { provide: re, useFactory: dr, deps: [qe] },
                                    { provide: Ne, useValue: ve },
                                    {
                                        provide: ut,
                                        useExisting:
                                            ve instanceof f.OlP ? ve : Ne,
                                    },
                                    {
                                        provide: Oe,
                                        deps: [f.zs3, Ne, [new f.tBr(ut)]],
                                        useFactory: En,
                                    },
                                    {
                                        provide: Ft,
                                        useValue: Me.metaReducers
                                            ? Me.metaReducers
                                            : [],
                                    },
                                    {
                                        provide: ct,
                                        deps: [Ht, Ft],
                                        useFactory: Ir,
                                    },
                                    {
                                        provide: Ee,
                                        useValue: Me.reducerFactory
                                            ? Me.reducerFactory
                                            : nn,
                                    },
                                    {
                                        provide: Se,
                                        deps: [Ee, ct],
                                        useFactory: Qn,
                                    },
                                    Pe,
                                    In,
                                    yr,
                                    et,
                                    Pt,
                                    hn(Me.runtimeChecks),
                                    Vn(),
                                ],
                            };
                        }
                        static forFeature(ve, Me, Je = {}) {
                            return {
                                ngModule: An,
                                providers: [
                                    {
                                        provide: gn,
                                        multi: !0,
                                        useValue:
                                            ve instanceof Object ? {} : Je,
                                    },
                                    {
                                        provide: De,
                                        multi: !0,
                                        useValue: {
                                            key:
                                                ve instanceof Object
                                                    ? ve.name
                                                    : ve,
                                            reducerFactory:
                                                Je instanceof f.OlP ||
                                                !Je.reducerFactory
                                                    ? nn
                                                    : Je.reducerFactory,
                                            metaReducers:
                                                Je instanceof f.OlP ||
                                                !Je.metaReducers
                                                    ? []
                                                    : Je.metaReducers,
                                            initialState:
                                                Je instanceof f.OlP ||
                                                !Je.initialState
                                                    ? void 0
                                                    : Je.initialState,
                                        },
                                    },
                                    {
                                        provide: ot,
                                        deps: [f.zs3, gn, De],
                                        useFactory: Nt,
                                    },
                                    {
                                        provide: Bt,
                                        multi: !0,
                                        useValue:
                                            ve instanceof Object
                                                ? ve.reducer
                                                : Me,
                                    },
                                    {
                                        provide: st,
                                        multi: !0,
                                        useExisting:
                                            Me instanceof f.OlP ? Me : Bt,
                                    },
                                    {
                                        provide: un,
                                        multi: !0,
                                        deps: [f.zs3, Bt, [new f.tBr(st)]],
                                        useFactory: Sr,
                                    },
                                    Vn(),
                                ],
                            };
                        }
                    }
                    return (
                        (J.ɵfac = function (ve) {
                            return new (ve || J)();
                        }),
                        (J.ɵmod = f.oAB({ type: J })),
                        (J.ɵinj = f.cJS({})),
                        J
                    );
                })();
            function En(J, xe) {
                return xe instanceof f.OlP ? J.get(xe) : xe;
            }
            function Nt(J, xe, ve) {
                return ve.map((Me, Je) => {
                    if (xe[Je] instanceof f.OlP) {
                        const Ze = J.get(xe[Je]);
                        return {
                            key: Me.key,
                            reducerFactory: Ze.reducerFactory
                                ? Ze.reducerFactory
                                : nn,
                            metaReducers: Ze.metaReducers
                                ? Ze.metaReducers
                                : [],
                            initialState: Ze.initialState,
                        };
                    }
                    return Me;
                });
            }
            function Sr(J, xe) {
                return xe.map((Me) => (Me instanceof f.OlP ? J.get(Me) : Me));
            }
            function dr(J) {
                return 'function' == typeof J ? J() : J;
            }
            function Ir(J, xe) {
                return J.concat(xe);
            }
            function an(J) {
                if (J)
                    throw new TypeError(
                        'StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        9783: (pe, z, _) => {
            'use strict';
            _.d(z, {
                $_: () => ae,
                h4: () => je,
                b4: () => te,
                jx: () => Q,
                m8: () => me,
            });
            var f = _(5e3),
                P = _(7579),
                j = _(9808);
            const w = ['*'];
            let H = (() => {
                    class F {}
                    return (
                        (F.STARTS_WITH = 'startsWith'),
                        (F.CONTAINS = 'contains'),
                        (F.NOT_CONTAINS = 'notContains'),
                        (F.ENDS_WITH = 'endsWith'),
                        (F.EQUALS = 'equals'),
                        (F.NOT_EQUALS = 'notEquals'),
                        (F.IN = 'in'),
                        (F.LESS_THAN = 'lt'),
                        (F.LESS_THAN_OR_EQUAL_TO = 'lte'),
                        (F.GREATER_THAN = 'gt'),
                        (F.GREATER_THAN_OR_EQUAL_TO = 'gte'),
                        (F.BETWEEN = 'between'),
                        (F.IS = 'is'),
                        (F.IS_NOT = 'isNot'),
                        (F.BEFORE = 'before'),
                        (F.AFTER = 'after'),
                        (F.DATE_IS = 'dateIs'),
                        (F.DATE_IS_NOT = 'dateIsNot'),
                        (F.DATE_BEFORE = 'dateBefore'),
                        (F.DATE_AFTER = 'dateAfter'),
                        F
                    );
                })(),
                te = (() => {
                    class F {
                        constructor() {
                            (this.ripple = !1),
                                (this.filterMatchModeOptions = {
                                    text: [
                                        H.STARTS_WITH,
                                        H.CONTAINS,
                                        H.NOT_CONTAINS,
                                        H.ENDS_WITH,
                                        H.EQUALS,
                                        H.NOT_EQUALS,
                                    ],
                                    numeric: [
                                        H.EQUALS,
                                        H.NOT_EQUALS,
                                        H.LESS_THAN,
                                        H.LESS_THAN_OR_EQUAL_TO,
                                        H.GREATER_THAN,
                                        H.GREATER_THAN_OR_EQUAL_TO,
                                    ],
                                    date: [
                                        H.DATE_IS,
                                        H.DATE_IS_NOT,
                                        H.DATE_BEFORE,
                                        H.DATE_AFTER,
                                    ],
                                }),
                                (this.translation = {
                                    startsWith: 'Starts with',
                                    contains: 'Contains',
                                    notContains: 'Not contains',
                                    endsWith: 'Ends with',
                                    equals: 'Equals',
                                    notEquals: 'Not equals',
                                    noFilter: 'No Filter',
                                    lt: 'Less than',
                                    lte: 'Less than or equal to',
                                    gt: 'Greater than',
                                    gte: 'Greater than or equal to',
                                    is: 'Is',
                                    isNot: 'Is not',
                                    before: 'Before',
                                    after: 'After',
                                    dateIs: 'Date is',
                                    dateIsNot: 'Date is not',
                                    dateBefore: 'Date is before',
                                    dateAfter: 'Date is after',
                                    clear: 'Clear',
                                    apply: 'Apply',
                                    matchAll: 'Match All',
                                    matchAny: 'Match Any',
                                    addRule: 'Add Rule',
                                    removeRule: 'Remove Rule',
                                    accept: 'Yes',
                                    reject: 'No',
                                    choose: 'Choose',
                                    upload: 'Upload',
                                    cancel: 'Cancel',
                                    dayNames: [
                                        'Sunday',
                                        'Monday',
                                        'Tuesday',
                                        'Wednesday',
                                        'Thursday',
                                        'Friday',
                                        'Saturday',
                                    ],
                                    dayNamesShort: [
                                        'Sun',
                                        'Mon',
                                        'Tue',
                                        'Wed',
                                        'Thu',
                                        'Fri',
                                        'Sat',
                                    ],
                                    dayNamesMin: [
                                        'Su',
                                        'Mo',
                                        'Tu',
                                        'We',
                                        'Th',
                                        'Fr',
                                        'Sa',
                                    ],
                                    monthNames: [
                                        'January',
                                        'February',
                                        'March',
                                        'April',
                                        'May',
                                        'June',
                                        'July',
                                        'August',
                                        'September',
                                        'October',
                                        'November',
                                        'December',
                                    ],
                                    monthNamesShort: [
                                        'Jan',
                                        'Feb',
                                        'Mar',
                                        'Apr',
                                        'May',
                                        'Jun',
                                        'Jul',
                                        'Aug',
                                        'Sep',
                                        'Oct',
                                        'Nov',
                                        'Dec',
                                    ],
                                    dateFormat: 'mm/dd/yy',
                                    today: 'Today',
                                    weekHeader: 'Wk',
                                    weak: 'Weak',
                                    medium: 'Medium',
                                    strong: 'Strong',
                                    passwordPrompt: 'Enter a password',
                                    emptyMessage: 'No results found',
                                    emptyFilterMessage: 'No results found',
                                }),
                                (this.zIndex = {
                                    modal: 1100,
                                    overlay: 1e3,
                                    menu: 1e3,
                                    tooltip: 1100,
                                }),
                                (this.translationSource = new P.x()),
                                (this.translationObserver =
                                    this.translationSource.asObservable());
                        }
                        getTranslation(q) {
                            return this.translation[q];
                        }
                        setTranslation(q) {
                            (this.translation = Object.assign(
                                Object.assign({}, this.translation),
                                q
                            )),
                                this.translationSource.next(this.translation);
                        }
                    }
                    return (
                        (F.ɵfac = function (q) {
                            return new (q || F)();
                        }),
                        (F.ɵprov = f.Yz7({
                            token: F,
                            factory: F.ɵfac,
                            providedIn: 'root',
                        })),
                        F
                    );
                })(),
                je = (() => {
                    class F {}
                    return (
                        (F.ɵfac = function (q) {
                            return new (q || F)();
                        }),
                        (F.ɵcmp = f.Xpm({
                            type: F,
                            selectors: [['p-header']],
                            ngContentSelectors: w,
                            decls: 1,
                            vars: 0,
                            template: function (q, Pe) {
                                1 & q && (f.F$t(), f.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        F
                    );
                })(),
                ae = (() => {
                    class F {}
                    return (
                        (F.ɵfac = function (q) {
                            return new (q || F)();
                        }),
                        (F.ɵcmp = f.Xpm({
                            type: F,
                            selectors: [['p-footer']],
                            ngContentSelectors: w,
                            decls: 1,
                            vars: 0,
                            template: function (q, Pe) {
                                1 & q && (f.F$t(), f.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        F
                    );
                })(),
                Q = (() => {
                    class F {
                        constructor(q) {
                            this.template = q;
                        }
                        getType() {
                            return this.name;
                        }
                    }
                    return (
                        (F.ɵfac = function (q) {
                            return new (q || F)(f.Y36(f.Rgc));
                        }),
                        (F.ɵdir = f.lG2({
                            type: F,
                            selectors: [['', 'pTemplate', '']],
                            inputs: {
                                type: 'type',
                                name: ['pTemplate', 'name'],
                            },
                        })),
                        F
                    );
                })(),
                me = (() => {
                    class F {}
                    return (
                        (F.ɵfac = function (q) {
                            return new (q || F)();
                        }),
                        (F.ɵmod = f.oAB({ type: F })),
                        (F.ɵinj = f.cJS({ imports: [[j.ez]] })),
                        F
                    );
                })();
        },
        2266: (pe, z, _) => {
            'use strict';
            _.d(z, { q: () => K, F: () => $ });
            var f = _(5e3),
                P = _(9808);
            function j(U, ie) {
                if (
                    (1 & U && (f.TgZ(0, 'span', 4), f._uU(1), f.qZA()), 2 & U)
                ) {
                    const Ae = f.oxw();
                    f.xp6(1), f.Oqu(Ae.label);
                }
            }
            function w(U, ie) {
                if ((1 & U && f._UZ(0, 'span', 6), 2 & U)) {
                    const Ae = f.oxw(2);
                    f.Tol(Ae.icon), f.Q6J('ngClass', 'p-avatar-icon');
                }
            }
            function H(U, ie) {
                if ((1 & U && f.YNc(0, w, 1, 3, 'span', 5), 2 & U)) {
                    const Ae = f.oxw(),
                        be = f.MAs(6);
                    f.Q6J('ngIf', Ae.icon)('ngIfElse', be);
                }
            }
            function te(U, ie) {
                if ((1 & U && f._UZ(0, 'img', 8), 2 & U)) {
                    const Ae = f.oxw(2);
                    f.Q6J('src', Ae.image, f.LSH);
                }
            }
            function X(U, ie) {
                if ((1 & U && f.YNc(0, te, 1, 1, 'img', 7), 2 & U)) {
                    const Ae = f.oxw();
                    f.Q6J('ngIf', Ae.image);
                }
            }
            const ne = ['*'];
            let K = (() => {
                    class U {
                        constructor() {
                            (this.size = 'normal'), (this.shape = 'square');
                        }
                        containerClass() {
                            return {
                                'p-avatar p-component': !0,
                                'p-avatar-image': null != this.image,
                                'p-avatar-circle': 'circle' === this.shape,
                                'p-avatar-lg': 'large' === this.size,
                                'p-avatar-xl': 'xlarge' === this.size,
                            };
                        }
                    }
                    return (
                        (U.ɵfac = function (Ae) {
                            return new (Ae || U)();
                        }),
                        (U.ɵcmp = f.Xpm({
                            type: U,
                            selectors: [['p-avatar']],
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                label: 'label',
                                icon: 'icon',
                                image: 'image',
                                size: 'size',
                                shape: 'shape',
                                style: 'style',
                                styleClass: 'styleClass',
                            },
                            ngContentSelectors: ne,
                            decls: 7,
                            vars: 6,
                            consts: [
                                [3, 'ngClass', 'ngStyle'],
                                [
                                    'class',
                                    'p-avatar-text',
                                    4,
                                    'ngIf',
                                    'ngIfElse',
                                ],
                                ['iconTemplate', ''],
                                ['imageTemplate', ''],
                                [1, 'p-avatar-text'],
                                [3, 'class', 'ngClass', 4, 'ngIf', 'ngIfElse'],
                                [3, 'ngClass'],
                                [3, 'src', 4, 'ngIf'],
                                [3, 'src'],
                            ],
                            template: function (Ae, be) {
                                if (
                                    (1 & Ae &&
                                        (f.F$t(),
                                        f.TgZ(0, 'div', 0),
                                        f.Hsn(1),
                                        f.YNc(2, j, 2, 1, 'span', 1),
                                        f.YNc(
                                            3,
                                            H,
                                            1,
                                            2,
                                            'ng-template',
                                            null,
                                            2,
                                            f.W1O
                                        ),
                                        f.YNc(
                                            5,
                                            X,
                                            1,
                                            1,
                                            'ng-template',
                                            null,
                                            3,
                                            f.W1O
                                        ),
                                        f.qZA()),
                                    2 & Ae)
                                ) {
                                    const Re = f.MAs(4);
                                    f.Tol(be.styleClass),
                                        f.Q6J('ngClass', be.containerClass())(
                                            'ngStyle',
                                            be.style
                                        ),
                                        f.xp6(2),
                                        f.Q6J('ngIf', be.label)('ngIfElse', Re);
                                }
                            },
                            directives: [P.mk, P.PC, P.O5],
                            styles: [
                                '.p-avatar{display:inline-flex;align-items:center;justify-content:center;width:2rem;height:2rem;font-size:1rem}.p-avatar.p-avatar-image{background-color:transparent}.p-avatar.p-avatar-circle{border-radius:50%;overflow:hidden}.p-avatar .p-avatar-icon{font-size:1rem}.p-avatar img{width:100%;height:100%}\n',
                            ],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        U
                    );
                })(),
                $ = (() => {
                    class U {}
                    return (
                        (U.ɵfac = function (Ae) {
                            return new (Ae || U)();
                        }),
                        (U.ɵmod = f.oAB({ type: U })),
                        (U.ɵinj = f.cJS({ imports: [[P.ez]] })),
                        U
                    );
                })();
        },
        5893: (pe, z, _) => {
            'use strict';
            _.d(z, { zx: () => je, hJ: () => ae });
            var f = _(5e3),
                P = _(9808);
            let j = (() => {
                class Q {
                    static addClass(I, F) {
                        I.classList
                            ? I.classList.add(F)
                            : (I.className += ' ' + F);
                    }
                    static addMultipleClasses(I, F) {
                        if (I.classList) {
                            let oe = F.trim().split(' ');
                            for (let q = 0; q < oe.length; q++)
                                I.classList.add(oe[q]);
                        } else {
                            let oe = F.split(' ');
                            for (let q = 0; q < oe.length; q++)
                                I.className += ' ' + oe[q];
                        }
                    }
                    static removeClass(I, F) {
                        I.classList
                            ? I.classList.remove(F)
                            : (I.className = I.className.replace(
                                  new RegExp(
                                      '(^|\\b)' +
                                          F.split(' ').join('|') +
                                          '(\\b|$)',
                                      'gi'
                                  ),
                                  ' '
                              ));
                    }
                    static hasClass(I, F) {
                        return I.classList
                            ? I.classList.contains(F)
                            : new RegExp('(^| )' + F + '( |$)', 'gi').test(
                                  I.className
                              );
                    }
                    static siblings(I) {
                        return Array.prototype.filter.call(
                            I.parentNode.children,
                            function (F) {
                                return F !== I;
                            }
                        );
                    }
                    static find(I, F) {
                        return Array.from(I.querySelectorAll(F));
                    }
                    static findSingle(I, F) {
                        return I ? I.querySelector(F) : null;
                    }
                    static index(I) {
                        let F = I.parentNode.childNodes,
                            oe = 0;
                        for (var q = 0; q < F.length; q++) {
                            if (F[q] == I) return oe;
                            1 == F[q].nodeType && oe++;
                        }
                        return -1;
                    }
                    static indexWithinGroup(I, F) {
                        let oe = I.parentNode ? I.parentNode.childNodes : [],
                            q = 0;
                        for (var Pe = 0; Pe < oe.length; Pe++) {
                            if (oe[Pe] == I) return q;
                            oe[Pe].attributes &&
                                oe[Pe].attributes[F] &&
                                1 == oe[Pe].nodeType &&
                                q++;
                        }
                        return -1;
                    }
                    static relativePosition(I, F) {
                        let oe = I.offsetParent
                            ? { width: I.offsetWidth, height: I.offsetHeight }
                            : this.getHiddenElementDimensions(I);
                        const q = F.offsetHeight,
                            Pe = F.getBoundingClientRect(),
                            Be = this.getViewport();
                        let qe, re;
                        Pe.top + q + oe.height > Be.height
                            ? ((qe = -1 * oe.height),
                              (I.style.transformOrigin = 'bottom'),
                              Pe.top + qe < 0 && (qe = -1 * Pe.top))
                            : ((qe = q), (I.style.transformOrigin = 'top')),
                            (re =
                                oe.width > Be.width
                                    ? -1 * Pe.left
                                    : Pe.left + oe.width > Be.width
                                    ? -1 * (Pe.left + oe.width - Be.width)
                                    : 0),
                            (I.style.top = qe + 'px'),
                            (I.style.left = re + 'px');
                    }
                    static absolutePosition(I, F) {
                        let Ne,
                            De,
                            oe = I.offsetParent
                                ? {
                                      width: I.offsetWidth,
                                      height: I.offsetHeight,
                                  }
                                : this.getHiddenElementDimensions(I),
                            q = oe.height,
                            Pe = oe.width,
                            Be = F.offsetHeight,
                            qe = F.offsetWidth,
                            re = F.getBoundingClientRect(),
                            Se = this.getWindowScrollTop(),
                            Ee = this.getWindowScrollLeft(),
                            Oe = this.getViewport();
                        re.top + Be + q > Oe.height
                            ? ((Ne = re.top + Se - q),
                              (I.style.transformOrigin = 'bottom'),
                              Ne < 0 && (Ne = Se))
                            : ((Ne = Be + re.top + Se),
                              (I.style.transformOrigin = 'top')),
                            (De =
                                re.left + Pe > Oe.width
                                    ? Math.max(0, re.left + Ee + qe - Pe)
                                    : re.left + Ee),
                            (I.style.top = Ne + 'px'),
                            (I.style.left = De + 'px');
                    }
                    static getParents(I, F = []) {
                        return null === I.parentNode
                            ? F
                            : this.getParents(
                                  I.parentNode,
                                  F.concat([I.parentNode])
                              );
                    }
                    static getScrollableParents(I) {
                        let F = [];
                        if (I) {
                            let oe = this.getParents(I);
                            const q = /(auto|scroll)/,
                                Pe = (Be) => {
                                    let qe = window.getComputedStyle(Be, null);
                                    return (
                                        q.test(
                                            qe.getPropertyValue('overflow')
                                        ) ||
                                        q.test(
                                            qe.getPropertyValue('overflowX')
                                        ) ||
                                        q.test(qe.getPropertyValue('overflowY'))
                                    );
                                };
                            for (let Be of oe) {
                                let qe =
                                    1 === Be.nodeType &&
                                    Be.dataset.scrollselectors;
                                if (qe) {
                                    let re = qe.split(',');
                                    for (let Se of re) {
                                        let Ee = this.findSingle(Be, Se);
                                        Ee && Pe(Ee) && F.push(Ee);
                                    }
                                }
                                9 !== Be.nodeType && Pe(Be) && F.push(Be);
                            }
                        }
                        return F;
                    }
                    static getHiddenElementOuterHeight(I) {
                        (I.style.visibility = 'hidden'),
                            (I.style.display = 'block');
                        let F = I.offsetHeight;
                        return (
                            (I.style.display = 'none'),
                            (I.style.visibility = 'visible'),
                            F
                        );
                    }
                    static getHiddenElementOuterWidth(I) {
                        (I.style.visibility = 'hidden'),
                            (I.style.display = 'block');
                        let F = I.offsetWidth;
                        return (
                            (I.style.display = 'none'),
                            (I.style.visibility = 'visible'),
                            F
                        );
                    }
                    static getHiddenElementDimensions(I) {
                        let F = {};
                        return (
                            (I.style.visibility = 'hidden'),
                            (I.style.display = 'block'),
                            (F.width = I.offsetWidth),
                            (F.height = I.offsetHeight),
                            (I.style.display = 'none'),
                            (I.style.visibility = 'visible'),
                            F
                        );
                    }
                    static scrollInView(I, F) {
                        let oe =
                                getComputedStyle(I).getPropertyValue(
                                    'borderTopWidth'
                                ),
                            q = oe ? parseFloat(oe) : 0,
                            Pe =
                                getComputedStyle(I).getPropertyValue(
                                    'paddingTop'
                                ),
                            Be = Pe ? parseFloat(Pe) : 0,
                            qe = I.getBoundingClientRect(),
                            Se =
                                F.getBoundingClientRect().top +
                                document.body.scrollTop -
                                (qe.top + document.body.scrollTop) -
                                q -
                                Be,
                            Ee = I.scrollTop,
                            Oe = I.clientHeight,
                            Ne = this.getOuterHeight(F);
                        Se < 0
                            ? (I.scrollTop = Ee + Se)
                            : Se + Ne > Oe && (I.scrollTop = Ee + Se - Oe + Ne);
                    }
                    static fadeIn(I, F) {
                        I.style.opacity = 0;
                        let oe = +new Date(),
                            q = 0,
                            Pe = function () {
                                (q =
                                    +I.style.opacity.replace(',', '.') +
                                    (new Date().getTime() - oe) / F),
                                    (I.style.opacity = q),
                                    (oe = +new Date()),
                                    +q < 1 &&
                                        ((window.requestAnimationFrame &&
                                            requestAnimationFrame(Pe)) ||
                                            setTimeout(Pe, 16));
                            };
                        Pe();
                    }
                    static fadeOut(I, F) {
                        var oe = 1,
                            Be = 50 / F;
                        let qe = setInterval(() => {
                            (oe -= Be) <= 0 && ((oe = 0), clearInterval(qe)),
                                (I.style.opacity = oe);
                        }, 50);
                    }
                    static getWindowScrollTop() {
                        let I = document.documentElement;
                        return (
                            (window.pageYOffset || I.scrollTop) -
                            (I.clientTop || 0)
                        );
                    }
                    static getWindowScrollLeft() {
                        let I = document.documentElement;
                        return (
                            (window.pageXOffset || I.scrollLeft) -
                            (I.clientLeft || 0)
                        );
                    }
                    static matches(I, F) {
                        var oe = Element.prototype;
                        return (
                            oe.matches ||
                            oe.webkitMatchesSelector ||
                            oe.mozMatchesSelector ||
                            oe.msMatchesSelector ||
                            function (Pe) {
                                return (
                                    -1 !==
                                    [].indexOf.call(
                                        document.querySelectorAll(Pe),
                                        this
                                    )
                                );
                            }
                        ).call(I, F);
                    }
                    static getOuterWidth(I, F) {
                        let oe = I.offsetWidth;
                        if (F) {
                            let q = getComputedStyle(I);
                            oe +=
                                parseFloat(q.marginLeft) +
                                parseFloat(q.marginRight);
                        }
                        return oe;
                    }
                    static getHorizontalPadding(I) {
                        let F = getComputedStyle(I);
                        return (
                            parseFloat(F.paddingLeft) +
                            parseFloat(F.paddingRight)
                        );
                    }
                    static getHorizontalMargin(I) {
                        let F = getComputedStyle(I);
                        return (
                            parseFloat(F.marginLeft) + parseFloat(F.marginRight)
                        );
                    }
                    static innerWidth(I) {
                        let F = I.offsetWidth,
                            oe = getComputedStyle(I);
                        return (
                            (F +=
                                parseFloat(oe.paddingLeft) +
                                parseFloat(oe.paddingRight)),
                            F
                        );
                    }
                    static width(I) {
                        let F = I.offsetWidth,
                            oe = getComputedStyle(I);
                        return (
                            (F -=
                                parseFloat(oe.paddingLeft) +
                                parseFloat(oe.paddingRight)),
                            F
                        );
                    }
                    static getInnerHeight(I) {
                        let F = I.offsetHeight,
                            oe = getComputedStyle(I);
                        return (
                            (F +=
                                parseFloat(oe.paddingTop) +
                                parseFloat(oe.paddingBottom)),
                            F
                        );
                    }
                    static getOuterHeight(I, F) {
                        let oe = I.offsetHeight;
                        if (F) {
                            let q = getComputedStyle(I);
                            oe +=
                                parseFloat(q.marginTop) +
                                parseFloat(q.marginBottom);
                        }
                        return oe;
                    }
                    static getHeight(I) {
                        let F = I.offsetHeight,
                            oe = getComputedStyle(I);
                        return (
                            (F -=
                                parseFloat(oe.paddingTop) +
                                parseFloat(oe.paddingBottom) +
                                parseFloat(oe.borderTopWidth) +
                                parseFloat(oe.borderBottomWidth)),
                            F
                        );
                    }
                    static getWidth(I) {
                        let F = I.offsetWidth,
                            oe = getComputedStyle(I);
                        return (
                            (F -=
                                parseFloat(oe.paddingLeft) +
                                parseFloat(oe.paddingRight) +
                                parseFloat(oe.borderLeftWidth) +
                                parseFloat(oe.borderRightWidth)),
                            F
                        );
                    }
                    static getViewport() {
                        let I = window,
                            F = document,
                            oe = F.documentElement,
                            q = F.getElementsByTagName('body')[0];
                        return {
                            width:
                                I.innerWidth || oe.clientWidth || q.clientWidth,
                            height:
                                I.innerHeight ||
                                oe.clientHeight ||
                                q.clientHeight,
                        };
                    }
                    static getOffset(I) {
                        var F = I.getBoundingClientRect();
                        return {
                            top:
                                F.top +
                                (window.pageYOffset ||
                                    document.documentElement.scrollTop ||
                                    document.body.scrollTop ||
                                    0),
                            left:
                                F.left +
                                (window.pageXOffset ||
                                    document.documentElement.scrollLeft ||
                                    document.body.scrollLeft ||
                                    0),
                        };
                    }
                    static replaceElementWith(I, F) {
                        let oe = I.parentNode;
                        if (!oe) throw "Can't replace element";
                        return oe.replaceChild(F, I);
                    }
                    static getUserAgent() {
                        return navigator.userAgent;
                    }
                    static isIE() {
                        var I = window.navigator.userAgent;
                        return (
                            I.indexOf('MSIE ') > 0 ||
                            (I.indexOf('Trident/') > 0
                                ? (I.indexOf('rv:'), !0)
                                : I.indexOf('Edge/') > 0)
                        );
                    }
                    static isIOS() {
                        return (
                            /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                            !window.MSStream
                        );
                    }
                    static isAndroid() {
                        return /(android)/i.test(navigator.userAgent);
                    }
                    static isTouchDevice() {
                        return (
                            'ontouchstart' in window ||
                            navigator.maxTouchPoints > 0
                        );
                    }
                    static appendChild(I, F) {
                        if (this.isElement(F)) F.appendChild(I);
                        else {
                            if (!F.el || !F.el.nativeElement)
                                throw 'Cannot append ' + F + ' to ' + I;
                            F.el.nativeElement.appendChild(I);
                        }
                    }
                    static removeChild(I, F) {
                        if (this.isElement(F)) F.removeChild(I);
                        else {
                            if (!F.el || !F.el.nativeElement)
                                throw 'Cannot remove ' + I + ' from ' + F;
                            F.el.nativeElement.removeChild(I);
                        }
                    }
                    static removeElement(I) {
                        'remove' in Element.prototype
                            ? I.remove()
                            : I.parentNode.removeChild(I);
                    }
                    static isElement(I) {
                        return 'object' == typeof HTMLElement
                            ? I instanceof HTMLElement
                            : I &&
                                  'object' == typeof I &&
                                  null !== I &&
                                  1 === I.nodeType &&
                                  'string' == typeof I.nodeName;
                    }
                    static calculateScrollbarWidth(I) {
                        if (I) {
                            let F = getComputedStyle(I);
                            return (
                                I.offsetWidth -
                                I.clientWidth -
                                parseFloat(F.borderLeftWidth) -
                                parseFloat(F.borderRightWidth)
                            );
                        }
                        {
                            if (null !== this.calculatedScrollbarWidth)
                                return this.calculatedScrollbarWidth;
                            let F = document.createElement('div');
                            (F.className = 'p-scrollbar-measure'),
                                document.body.appendChild(F);
                            let oe = F.offsetWidth - F.clientWidth;
                            return (
                                document.body.removeChild(F),
                                (this.calculatedScrollbarWidth = oe),
                                oe
                            );
                        }
                    }
                    static calculateScrollbarHeight() {
                        if (null !== this.calculatedScrollbarHeight)
                            return this.calculatedScrollbarHeight;
                        let I = document.createElement('div');
                        (I.className = 'p-scrollbar-measure'),
                            document.body.appendChild(I);
                        let F = I.offsetHeight - I.clientHeight;
                        return (
                            document.body.removeChild(I),
                            (this.calculatedScrollbarWidth = F),
                            F
                        );
                    }
                    static invokeElementMethod(I, F, oe) {
                        I[F].apply(I, oe);
                    }
                    static clearSelection() {
                        if (window.getSelection)
                            window.getSelection().empty
                                ? window.getSelection().empty()
                                : window.getSelection().removeAllRanges &&
                                  window.getSelection().rangeCount > 0 &&
                                  window
                                      .getSelection()
                                      .getRangeAt(0)
                                      .getClientRects().length > 0 &&
                                  window.getSelection().removeAllRanges();
                        else if (document.selection && document.selection.empty)
                            try {
                                document.selection.empty();
                            } catch (I) {}
                    }
                    static getBrowser() {
                        if (!this.browser) {
                            let I = this.resolveUserAgent();
                            (this.browser = {}),
                                I.browser &&
                                    ((this.browser[I.browser] = !0),
                                    (this.browser.version = I.version)),
                                this.browser.chrome
                                    ? (this.browser.webkit = !0)
                                    : this.browser.webkit &&
                                      (this.browser.safari = !0);
                        }
                        return this.browser;
                    }
                    static resolveUserAgent() {
                        let I = navigator.userAgent.toLowerCase(),
                            F =
                                /(chrome)[ \/]([\w.]+)/.exec(I) ||
                                /(webkit)[ \/]([\w.]+)/.exec(I) ||
                                /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(I) ||
                                /(msie) ([\w.]+)/.exec(I) ||
                                (I.indexOf('compatible') < 0 &&
                                    /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(I)) ||
                                [];
                        return { browser: F[1] || '', version: F[2] || '0' };
                    }
                    static isInteger(I) {
                        return Number.isInteger
                            ? Number.isInteger(I)
                            : 'number' == typeof I &&
                                  isFinite(I) &&
                                  Math.floor(I) === I;
                    }
                    static isHidden(I) {
                        return null === I.offsetParent;
                    }
                    static getFocusableElements(I) {
                        let F = Q.find(
                                I,
                                'button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]):not(.p-disabled)'
                            ),
                            oe = [];
                        for (let q of F)
                            'none' != getComputedStyle(q).display &&
                                'hidden' != getComputedStyle(q).visibility &&
                                oe.push(q);
                        return oe;
                    }
                    static generateZIndex() {
                        return (
                            (this.zindex = this.zindex || 999), ++this.zindex
                        );
                    }
                }
                return (
                    (Q.zindex = 1e3),
                    (Q.calculatedScrollbarWidth = null),
                    (Q.calculatedScrollbarHeight = null),
                    Q
                );
            })();
            var H = _(9783);
            let te = (() => {
                    class Q {
                        constructor(I, F, oe) {
                            (this.el = I), (this.zone = F), (this.config = oe);
                        }
                        ngAfterViewInit() {
                            this.config &&
                                this.config.ripple &&
                                this.zone.runOutsideAngular(() => {
                                    this.create(),
                                        (this.mouseDownListener =
                                            this.onMouseDown.bind(this)),
                                        this.el.nativeElement.addEventListener(
                                            'mousedown',
                                            this.mouseDownListener
                                        );
                                });
                        }
                        onMouseDown(I) {
                            let F = this.getInk();
                            if (
                                !F ||
                                'none' === getComputedStyle(F, null).display
                            )
                                return;
                            if (
                                (j.removeClass(F, 'p-ink-active'),
                                !j.getHeight(F) && !j.getWidth(F))
                            ) {
                                let Be = Math.max(
                                    j.getOuterWidth(this.el.nativeElement),
                                    j.getOuterHeight(this.el.nativeElement)
                                );
                                (F.style.height = Be + 'px'),
                                    (F.style.width = Be + 'px');
                            }
                            let oe = j.getOffset(this.el.nativeElement),
                                q =
                                    I.pageX -
                                    oe.left +
                                    document.body.scrollTop -
                                    j.getWidth(F) / 2,
                                Pe =
                                    I.pageY -
                                    oe.top +
                                    document.body.scrollLeft -
                                    j.getHeight(F) / 2;
                            (F.style.top = Pe + 'px'),
                                (F.style.left = q + 'px'),
                                j.addClass(F, 'p-ink-active');
                        }
                        getInk() {
                            for (
                                let I = 0;
                                I < this.el.nativeElement.children.length;
                                I++
                            )
                                if (
                                    -1 !==
                                    this.el.nativeElement.children[
                                        I
                                    ].className.indexOf('p-ink')
                                )
                                    return this.el.nativeElement.children[I];
                            return null;
                        }
                        resetInk() {
                            let I = this.getInk();
                            I && j.removeClass(I, 'p-ink-active');
                        }
                        onAnimationEnd(I) {
                            j.removeClass(I.currentTarget, 'p-ink-active');
                        }
                        create() {
                            let I = document.createElement('span');
                            (I.className = 'p-ink'),
                                this.el.nativeElement.appendChild(I),
                                (this.animationListener =
                                    this.onAnimationEnd.bind(this)),
                                I.addEventListener(
                                    'animationend',
                                    this.animationListener
                                );
                        }
                        remove() {
                            let I = this.getInk();
                            I &&
                                (this.el.nativeElement.removeEventListener(
                                    'mousedown',
                                    this.mouseDownListener
                                ),
                                I.removeEventListener(
                                    'animationend',
                                    this.animationListener
                                ),
                                j.removeElement(I));
                        }
                        ngOnDestroy() {
                            this.config && this.config.ripple && this.remove();
                        }
                    }
                    return (
                        (Q.ɵfac = function (I) {
                            return new (I || Q)(
                                f.Y36(f.SBq),
                                f.Y36(f.R0b),
                                f.Y36(H.b4, 8)
                            );
                        }),
                        (Q.ɵdir = f.lG2({
                            type: Q,
                            selectors: [['', 'pRipple', '']],
                            hostAttrs: [1, 'p-ripple', 'p-element'],
                        })),
                        Q
                    );
                })(),
                X = (() => {
                    class Q {}
                    return (
                        (Q.ɵfac = function (I) {
                            return new (I || Q)();
                        }),
                        (Q.ɵmod = f.oAB({ type: Q })),
                        (Q.ɵinj = f.cJS({ imports: [[P.ez]] })),
                        Q
                    );
                })();
            function ne(Q, me) {
                1 & Q && f.GkF(0);
            }
            const K = function (Q, me, I, F) {
                return {
                    'p-button-icon': !0,
                    'p-button-icon-left': Q,
                    'p-button-icon-right': me,
                    'p-button-icon-top': I,
                    'p-button-icon-bottom': F,
                };
            };
            function $(Q, me) {
                if ((1 & Q && f._UZ(0, 'span', 4), 2 & Q)) {
                    const I = f.oxw();
                    f.Tol(
                        I.loading
                            ? 'p-button-loading-icon ' + I.loadingIcon
                            : I.icon
                    ),
                        f.Q6J(
                            'ngClass',
                            f.l5B(
                                4,
                                K,
                                'left' === I.iconPos && I.label,
                                'right' === I.iconPos && I.label,
                                'top' === I.iconPos && I.label,
                                'bottom' === I.iconPos && I.label
                            )
                        ),
                        f.uIk('aria-hidden', !0);
                }
            }
            function U(Q, me) {
                if (
                    (1 & Q && (f.TgZ(0, 'span', 5), f._uU(1), f.qZA()), 2 & Q)
                ) {
                    const I = f.oxw();
                    f.uIk('aria-hidden', I.icon && !I.label),
                        f.xp6(1),
                        f.Oqu(I.label || '\xa0');
                }
            }
            function ie(Q, me) {
                if (
                    (1 & Q && (f.TgZ(0, 'span', 4), f._uU(1), f.qZA()), 2 & Q)
                ) {
                    const I = f.oxw();
                    f.Tol(I.badgeClass),
                        f.Q6J('ngClass', I.badgeStyleClass()),
                        f.xp6(1),
                        f.Oqu(I.badge);
                }
            }
            const Ae = function (Q, me, I, F, oe) {
                    return {
                        'p-button p-component': !0,
                        'p-button-icon-only': Q,
                        'p-button-vertical': me,
                        'p-disabled': I,
                        'p-button-loading': F,
                        'p-button-loading-label-only': oe,
                    };
                },
                be = ['*'];
            let je = (() => {
                    class Q {
                        constructor() {
                            (this.type = 'button'),
                                (this.iconPos = 'left'),
                                (this.loading = !1),
                                (this.loadingIcon = 'pi pi-spinner pi-spin'),
                                (this.onClick = new f.vpe()),
                                (this.onFocus = new f.vpe()),
                                (this.onBlur = new f.vpe());
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((I) => {
                                I.getType(),
                                    (this.contentTemplate = I.template);
                            });
                        }
                        badgeStyleClass() {
                            return {
                                'p-badge p-component': !0,
                                'p-badge-no-gutter':
                                    this.badge &&
                                    1 === String(this.badge).length,
                            };
                        }
                    }
                    return (
                        (Q.ɵfac = function (I) {
                            return new (I || Q)();
                        }),
                        (Q.ɵcmp = f.Xpm({
                            type: Q,
                            selectors: [['p-button']],
                            contentQueries: function (I, F, oe) {
                                if ((1 & I && f.Suo(oe, H.jx, 4), 2 & I)) {
                                    let q;
                                    f.iGM((q = f.CRH())) && (F.templates = q);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                type: 'type',
                                iconPos: 'iconPos',
                                icon: 'icon',
                                badge: 'badge',
                                label: 'label',
                                disabled: 'disabled',
                                loading: 'loading',
                                loadingIcon: 'loadingIcon',
                                style: 'style',
                                styleClass: 'styleClass',
                                badgeClass: 'badgeClass',
                            },
                            outputs: {
                                onClick: 'onClick',
                                onFocus: 'onFocus',
                                onBlur: 'onBlur',
                            },
                            ngContentSelectors: be,
                            decls: 6,
                            vars: 16,
                            consts: [
                                [
                                    'pRipple',
                                    '',
                                    3,
                                    'ngStyle',
                                    'disabled',
                                    'ngClass',
                                    'click',
                                    'focus',
                                    'blur',
                                ],
                                [4, 'ngTemplateOutlet'],
                                [3, 'ngClass', 'class', 4, 'ngIf'],
                                ['class', 'p-button-label', 4, 'ngIf'],
                                [3, 'ngClass'],
                                [1, 'p-button-label'],
                            ],
                            template: function (I, F) {
                                1 & I &&
                                    (f.F$t(),
                                    f.TgZ(0, 'button', 0),
                                    f.NdJ('click', function (q) {
                                        return F.onClick.emit(q);
                                    })('focus', function (q) {
                                        return F.onFocus.emit(q);
                                    })('blur', function (q) {
                                        return F.onBlur.emit(q);
                                    }),
                                    f.Hsn(1),
                                    f.YNc(2, ne, 1, 0, 'ng-container', 1),
                                    f.YNc(3, $, 1, 9, 'span', 2),
                                    f.YNc(4, U, 2, 2, 'span', 3),
                                    f.YNc(5, ie, 2, 4, 'span', 2),
                                    f.qZA()),
                                    2 & I &&
                                        (f.Tol(F.styleClass),
                                        f.Q6J('ngStyle', F.style)(
                                            'disabled',
                                            F.disabled || F.loading
                                        )(
                                            'ngClass',
                                            f.qbA(
                                                10,
                                                Ae,
                                                F.icon && !F.label,
                                                ('top' === F.iconPos ||
                                                    'bottom' === F.iconPos) &&
                                                    F.label,
                                                F.disabled || F.loading,
                                                F.loading,
                                                F.loading && !F.icon && F.label
                                            )
                                        ),
                                        f.uIk('type', F.type),
                                        f.xp6(2),
                                        f.Q6J(
                                            'ngTemplateOutlet',
                                            F.contentTemplate
                                        ),
                                        f.xp6(1),
                                        f.Q6J(
                                            'ngIf',
                                            !F.contentTemplate &&
                                                (F.icon || F.loading)
                                        ),
                                        f.xp6(1),
                                        f.Q6J('ngIf', !F.contentTemplate),
                                        f.xp6(1),
                                        f.Q6J(
                                            'ngIf',
                                            !F.contentTemplate && F.badge
                                        ));
                            },
                            directives: [te, P.PC, P.mk, P.tP, P.O5],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        Q
                    );
                })(),
                ae = (() => {
                    class Q {}
                    return (
                        (Q.ɵfac = function (I) {
                            return new (I || Q)();
                        }),
                        (Q.ɵmod = f.oAB({ type: Q })),
                        (Q.ɵinj = f.cJS({ imports: [[P.ez, X]] })),
                        Q
                    );
                })();
        },
        5861: (pe, z, _) => {
            'use strict';
            function f(j, w, H, te, X, ne, K) {
                try {
                    var $ = j[ne](K),
                        U = $.value;
                } catch (ie) {
                    return void H(ie);
                }
                $.done ? w(U) : Promise.resolve(U).then(te, X);
            }
            function P(j) {
                return function () {
                    var w = this,
                        H = arguments;
                    return new Promise(function (te, X) {
                        var ne = j.apply(w, H);
                        function K(U) {
                            f(ne, te, X, K, $, 'next', U);
                        }
                        function $(U) {
                            f(ne, te, X, K, $, 'throw', U);
                        }
                        K(void 0);
                    });
                };
            }
            _.d(z, { Z: () => P });
        },
    },
    (pe) => {
        pe((pe.s = 8409));
    },
]);
