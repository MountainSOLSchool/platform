(self.webpackChunkportal = self.webpackChunkportal || []).push([
    [179],
    {
        440: (de, z, _) => {
            'use strict';
            _.d(z, { nm: () => Le });
            var l = _(6351);
            _(5e3), _(5867);
            var Y = _(5861),
                ie = _(9681),
                se = _(4859),
                xe = _(2090),
                $e = _(1877);
            const it = new Map(),
                ne = { activated: !1, tokenObservers: [] },
                Pe = { initialized: !1, enabled: !1 };
            function le(ve) {
                return it.get(ve) || ne;
            }
            function Me(ve, me) {
                it.set(ve, me);
            }
            function be() {
                return Pe;
            }
            class un {
                constructor(me, Oe, Ze, tt, Et) {
                    if (
                        ((this.operation = me),
                        (this.retryPolicy = Oe),
                        (this.getWaitDuration = Ze),
                        (this.lowerBound = tt),
                        (this.upperBound = Et),
                        (this.pending = null),
                        (this.nextErrorWaitInterval = tt),
                        tt > Et)
                    )
                        throw new Error(
                            'Proactive refresh lower bound greater than upper bound!'
                        );
                }
                start() {
                    (this.nextErrorWaitInterval = this.lowerBound),
                        this.process(!0).catch(() => {});
                }
                stop() {
                    this.pending &&
                        (this.pending.reject('cancelled'),
                        (this.pending = null));
                }
                isRunning() {
                    return !!this.pending;
                }
                process(me) {
                    var Oe = this;
                    return (0, Y.Z)(function* () {
                        Oe.stop();
                        try {
                            (Oe.pending = new xe.BH()),
                                yield (function Bt(ve) {
                                    return new Promise((me) => {
                                        setTimeout(me, ve);
                                    });
                                })(Oe.getNextRun(me)),
                                Oe.pending.resolve(),
                                yield Oe.pending.promise,
                                (Oe.pending = new xe.BH()),
                                yield Oe.operation(),
                                Oe.pending.resolve(),
                                yield Oe.pending.promise,
                                Oe.process(!0).catch(() => {});
                        } catch (Ze) {
                            Oe.retryPolicy(Ze)
                                ? Oe.process(!1).catch(() => {})
                                : Oe.stop();
                        }
                    })();
                }
                getNextRun(me) {
                    if (me)
                        return (
                            (this.nextErrorWaitInterval = this.lowerBound),
                            this.getWaitDuration()
                        );
                    {
                        const Oe = this.nextErrorWaitInterval;
                        return (
                            (this.nextErrorWaitInterval *= 2),
                            this.nextErrorWaitInterval > this.upperBound &&
                                (this.nextErrorWaitInterval = this.upperBound),
                            Oe
                        );
                    }
                }
            }
            const mt = new xe.LL('appCheck', 'AppCheck', {
                'already-initialized':
                    'You have already called initializeAppCheck() for FirebaseApp {$appName} with different options. To avoid this error, call initializeAppCheck() with the same options as when it was originally called. This will return the already initialized instance.',
                'use-before-activation':
                    'App Check is being used before initializeAppCheck() is called for FirebaseApp {$appName}. Call initializeAppCheck() before instantiating other Firebase services.',
                'fetch-network-error':
                    'Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                'fetch-parse-error':
                    'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                'fetch-status-error':
                    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                'storage-open':
                    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                'storage-get':
                    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                'storage-set':
                    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                'recaptcha-error': 'ReCAPTCHA error.',
                throttled:
                    'Requests throttled due to {$httpStatus} error. Attempts allowed again after {$time}',
            });
            function dn(ve) {
                if (!le(ve).activated)
                    throw mt.create('use-before-activation', {
                        appName: ve.name,
                    });
            }
            function Hn(ve, me) {
                return Fe.apply(this, arguments);
            }
            function Fe() {
                return (Fe = (0, Y.Z)(function* ({ url: ve, body: me }, Oe) {
                    const Ze = { 'Content-Type': 'application/json' },
                        tt = Oe.getImmediate({ optional: !0 });
                    tt &&
                        (Ze['X-Firebase-Client'] = tt.getPlatformInfoString());
                    const Et = {
                        method: 'POST',
                        body: JSON.stringify(me),
                        headers: Ze,
                    };
                    let On, gn;
                    try {
                        On = yield fetch(ve, Et);
                    } catch (ti) {
                        throw mt.create('fetch-network-error', {
                            originalErrorMessage: ti.message,
                        });
                    }
                    if (200 !== On.status)
                        throw mt.create('fetch-status-error', {
                            httpStatus: On.status,
                        });
                    try {
                        gn = yield On.json();
                    } catch (ti) {
                        throw mt.create('fetch-parse-error', {
                            originalErrorMessage: ti.message,
                        });
                    }
                    const yn = gn.ttl.match(/^([\d.]+)(s)$/);
                    if (!yn || !yn[2] || isNaN(Number(yn[1])))
                        throw mt.create('fetch-parse-error', {
                            originalErrorMessage: `ttl field (timeToLive) is not in standard Protobuf Duration format: ${gn.ttl}`,
                        });
                    const Ar = 1e3 * Number(yn[1]),
                        di = Date.now();
                    return {
                        token: gn.attestationToken,
                        expireTimeMillis: di + Ar,
                        issuedAtTimeMillis: di,
                    };
                })).apply(this, arguments);
            }
            function Te(ve, me) {
                const { projectId: Oe, appId: Ze, apiKey: tt } = ve.options;
                return {
                    url: `https://content-firebaseappcheck.googleapis.com/v1beta/projects/${Oe}/apps/${Ze}:exchangeDebugToken?key=${tt}`,
                    body: { debug_token: me },
                };
            }
            const Rt = 'firebase-app-check-store';
            let xt = null;
            function nr() {
                return (
                    xt ||
                    ((xt = new Promise((ve, me) => {
                        try {
                            const Oe = indexedDB.open(
                                'firebase-app-check-database',
                                1
                            );
                            (Oe.onsuccess = (Ze) => {
                                ve(Ze.target.result);
                            }),
                                (Oe.onerror = (Ze) => {
                                    var tt;
                                    me(
                                        mt.create('storage-open', {
                                            originalErrorMessage:
                                                null ===
                                                    (tt = Ze.target.error) ||
                                                void 0 === tt
                                                    ? void 0
                                                    : tt.message,
                                        })
                                    );
                                }),
                                (Oe.onupgradeneeded = (Ze) => {
                                    0 === Ze.oldVersion &&
                                        Ze.target.result.createObjectStore(Rt, {
                                            keyPath: 'compositeKey',
                                        });
                                });
                        } catch (Oe) {
                            me(
                                mt.create('storage-open', {
                                    originalErrorMessage: Oe.message,
                                })
                            );
                        }
                    })),
                    xt)
                );
            }
            function Ft() {
                return (Ft = (0, Y.Z)(function* (ve, me) {
                    const Ze = (yield nr()).transaction(Rt, 'readwrite'),
                        Et = Ze.objectStore(Rt).put({
                            compositeKey: ve,
                            value: me,
                        });
                    return new Promise((On, gn) => {
                        (Et.onsuccess = (yn) => {
                            On();
                        }),
                            (Ze.onerror = (yn) => {
                                var Ar;
                                gn(
                                    mt.create('storage-set', {
                                        originalErrorMessage:
                                            null === (Ar = yn.target.error) ||
                                            void 0 === Ar
                                                ? void 0
                                                : Ar.message,
                                    })
                                );
                            });
                    });
                })).apply(this, arguments);
            }
            const sr = new $e.Yd('@firebase/app-check');
            function Jn(ve, me) {
                return (0, xe.hl)()
                    ? (function vt(ve, me) {
                          return (function fn(ve, me) {
                              return Ft.apply(this, arguments);
                          })(
                              (function Er(ve) {
                                  return `${ve.options.appId}-${ve.name}`;
                              })(ve),
                              me
                          );
                      })(ve, me).catch((Oe) => {
                          sr.warn(
                              `Failed to write token to IndexedDB. Error: ${Oe}`
                          );
                      })
                    : Promise.resolve();
            }
            function ce() {
                return be().enabled;
            }
            function oe() {
                return je.apply(this, arguments);
            }
            function je() {
                return (je = (0, Y.Z)(function* () {
                    const ve = be();
                    if (ve.enabled && ve.token) return ve.token.promise;
                    throw Error(
                        "\n            Can't get debug token in production mode.\n        "
                    );
                })).apply(this, arguments);
            }
            const ft = { error: 'UNKNOWN_ERROR' };
            function pe(ve) {
                return xe.US.encodeString(JSON.stringify(ve), !1);
            }
            function Ne(ve) {
                return Be.apply(this, arguments);
            }
            function Be() {
                return (Be = (0, Y.Z)(function* (ve, me = !1) {
                    const Oe = ve.app;
                    dn(Oe);
                    const Ze = le(Oe);
                    let Et,
                        tt = Ze.token;
                    if (!tt) {
                        const yn = yield Ze.cachedTokenPromise;
                        yn && Sn(yn) && (tt = yn);
                    }
                    if (!me && tt && Sn(tt)) return { token: tt.token };
                    let gn,
                        On = !1;
                    if (ce()) {
                        Ze.exchangeTokenPromise ||
                            ((Ze.exchangeTokenPromise = Hn(
                                Te(Oe, yield oe()),
                                ve.platformLoggerProvider
                            ).then(
                                (Ar) => ((Ze.exchangeTokenPromise = void 0), Ar)
                            )),
                            (On = !0));
                        const yn = yield Ze.exchangeTokenPromise;
                        return (
                            yield Jn(Oe, yn),
                            Me(
                                Oe,
                                Object.assign(Object.assign({}, Ze), {
                                    token: yn,
                                })
                            ),
                            { token: yn.token }
                        );
                    }
                    try {
                        Ze.exchangeTokenPromise ||
                            ((Ze.exchangeTokenPromise = Ze.provider
                                .getToken()
                                .then(
                                    (yn) => (
                                        (Ze.exchangeTokenPromise = void 0), yn
                                    )
                                )),
                            (On = !0)),
                            (tt = yield Ze.exchangeTokenPromise);
                    } catch (yn) {
                        'appCheck/throttled' === yn.code
                            ? sr.warn(yn.message)
                            : sr.error(yn),
                            (Et = yn);
                    }
                    return (
                        tt
                            ? ((gn = { token: tt.token }),
                              Me(
                                  Oe,
                                  Object.assign(Object.assign({}, Ze), {
                                      token: tt,
                                  })
                              ),
                              yield Jn(Oe, tt))
                            : (gn = bt(Et)),
                        On && on(Oe, gn),
                        gn
                    );
                })).apply(this, arguments);
            }
            function Ct(ve, me) {
                const Oe = le(ve),
                    Ze = Oe.tokenObservers.filter((tt) => tt.next !== me);
                0 === Ze.length &&
                    Oe.tokenRefresher &&
                    Oe.tokenRefresher.isRunning() &&
                    Oe.tokenRefresher.stop(),
                    Me(
                        ve,
                        Object.assign(Object.assign({}, Oe), {
                            tokenObservers: Ze,
                        })
                    );
            }
            function ct(ve) {
                const { app: me } = ve,
                    Oe = le(me);
                let Ze = Oe.tokenRefresher;
                Ze ||
                    ((Ze = (function en(ve) {
                        const { app: me } = ve;
                        return new un(
                            (0, Y.Z)(function* () {
                                let Ze;
                                if (
                                    ((Ze = le(me).token
                                        ? yield Ne(ve, !0)
                                        : yield Ne(ve)),
                                    Ze.error)
                                )
                                    throw Ze.error;
                            }),
                            () => !0,
                            () => {
                                const Oe = le(me);
                                if (Oe.token) {
                                    let Ze =
                                        Oe.token.issuedAtTimeMillis +
                                        0.5 *
                                            (Oe.token.expireTimeMillis -
                                                Oe.token.issuedAtTimeMillis) +
                                        3e5;
                                    return (
                                        (Ze = Math.min(
                                            Ze,
                                            Oe.token.expireTimeMillis - 3e5
                                        )),
                                        Math.max(0, Ze - Date.now())
                                    );
                                }
                                return 0;
                            },
                            3e4,
                            96e4
                        );
                    })(ve)),
                    Me(
                        me,
                        Object.assign(Object.assign({}, Oe), {
                            tokenRefresher: Ze,
                        })
                    )),
                    !Ze.isRunning() &&
                        Oe.isTokenAutoRefreshEnabled &&
                        Ze.start();
            }
            function on(ve, me) {
                const Oe = le(ve).tokenObservers;
                for (const Ze of Oe)
                    try {
                        'EXTERNAL' === Ze.type && null != me.error
                            ? Ze.error(me.error)
                            : Ze.next(me);
                    } catch (tt) {}
            }
            function Sn(ve) {
                return ve.expireTimeMillis - Date.now() > 0;
            }
            function bt(ve) {
                return { token: pe(ft), error: ve };
            }
            class Xn {
                constructor(me, Oe) {
                    (this.app = me), (this.platformLoggerProvider = Oe);
                }
                _delete() {
                    const { tokenObservers: me } = le(this.app);
                    for (const Oe of me) Ct(this.app, Oe.next);
                    return Promise.resolve();
                }
            }
            const $n = 'app-check-internal';
            !(function Dn() {
                (0, ie._registerComponent)(
                    new se.wA(
                        'app-check',
                        (ve) =>
                            (function Jt(ve, me) {
                                return new Xn(ve, me);
                            })(
                                ve.getProvider('app').getImmediate(),
                                ve.getProvider('platform-logger')
                            ),
                        'PUBLIC'
                    )
                        .setInstantiationMode('EXPLICIT')
                        .setInstanceCreatedCallback((ve, me, Oe) => {
                            ve.getProvider($n).initialize();
                        })
                ),
                    (0, ie._registerComponent)(
                        new se.wA(
                            $n,
                            (ve) =>
                                (function Zt(ve) {
                                    return {
                                        getToken: (me) => Ne(ve, me),
                                        addTokenListener: (me) =>
                                            (function Qe(ve, me, Oe, Ze) {
                                                const { app: tt } = ve,
                                                    Et = le(tt),
                                                    On = {
                                                        next: Oe,
                                                        error: Ze,
                                                        type: me,
                                                    };
                                                if (
                                                    (Me(
                                                        tt,
                                                        Object.assign(
                                                            Object.assign(
                                                                {},
                                                                Et
                                                            ),
                                                            {
                                                                tokenObservers:
                                                                    [
                                                                        ...Et.tokenObservers,
                                                                        On,
                                                                    ],
                                                            }
                                                        )
                                                    ),
                                                    Et.token && Sn(Et.token))
                                                ) {
                                                    const gn = Et.token;
                                                    Promise.resolve()
                                                        .then(() => {
                                                            Oe({
                                                                token: gn.token,
                                                            }),
                                                                ct(ve);
                                                        })
                                                        .catch(() => {});
                                                }
                                                Et.cachedTokenPromise.then(() =>
                                                    ct(ve)
                                                );
                                            })(ve, 'INTERNAL', me),
                                        removeTokenListener: (me) =>
                                            Ct(ve.app, me),
                                    };
                                })(ve.getProvider('app-check').getImmediate()),
                            'PUBLIC'
                        ).setInstantiationMode('EXPLICIT')
                    ),
                    (0, ie.registerVersion)('@firebase/app-check', '0.5.3');
            })();
            class Le {
                constructor() {
                    return (0, l.vb)('app-check');
                }
            }
            'undefined' != typeof window && window;
        },
        3385: (de, z, _) => {
            'use strict';
            _.d(z, { zQ: () => le, ww: () => Me });
            var l = _(5e3),
                w = _(7579),
                G = _(9646),
                j = _(8306),
                S = _(8996),
                x = _(6451),
                k = _(3900),
                W = _(576);
            function B(be, ye) {
                return (0, W.m)(ye)
                    ? (0, k.w)(() => be, ye)
                    : (0, k.w)(() => be);
            }
            var V = _(5363),
                U = _(4004),
                Q = _(4782),
                De = _(590),
                Ee = _(9468),
                _e = _(9300),
                Se = _(6351),
                Z = _(2011),
                X = _(9808),
                Ce = _(440),
                ae = _(127);
            const ie = new l.OlP('angularfire2.auth.use-emulator'),
                se = new l.OlP('angularfire2.auth.settings'),
                xe = new l.OlP('angularfire2.auth.tenant-id'),
                $e = new l.OlP('angularfire2.auth.langugage-code'),
                it = new l.OlP('angularfire2.auth.use-device-language'),
                ne = new l.OlP('angularfire.auth.persistence');
            let le = (() => {
                    class be {
                        constructor(
                            ut,
                            Pt,
                            ln,
                            nt,
                            st,
                            un,
                            Bt,
                            Gt,
                            mt,
                            wn,
                            dn,
                            Kt
                        ) {
                            const Nn = new w.x(),
                                qt = (0, G.of)(void 0).pipe(
                                    (0, V.Q)(st.outsideAngular),
                                    (0, k.w)(() =>
                                        nt.runOutsideAngular(() =>
                                            Promise.all([
                                                _.e(592),
                                                _.e(999),
                                            ]).then(_.bind(_, 8999))
                                        )
                                    ),
                                    (0, U.U)(() => (0, Z.on)(ut, nt, Pt)),
                                    (0, U.U)((Hn) =>
                                        ((be, ye, ut, Pt, ln, nt, st, un) =>
                                            (0, Z.cc)(
                                                `${be.name}.auth`,
                                                'AngularFireAuth',
                                                be.name,
                                                () => {
                                                    const Bt =
                                                        ye.runOutsideAngular(
                                                            () => be.auth()
                                                        );
                                                    if (
                                                        (ut &&
                                                            Bt.useEmulator(
                                                                ...ut
                                                            ),
                                                        Pt &&
                                                            (Bt.tenantId = Pt),
                                                        (Bt.languageCode = ln),
                                                        nt &&
                                                            Bt.useDeviceLanguage(),
                                                        st)
                                                    )
                                                        for (const [
                                                            Gt,
                                                            mt,
                                                        ] of Object.entries(st))
                                                            Bt.settings[Gt] =
                                                                mt;
                                                    return (
                                                        un &&
                                                            Bt.setPersistence(
                                                                un
                                                            ),
                                                        Bt
                                                    );
                                                },
                                                [ut, Pt, ln, nt, st, un]
                                            ))(Hn, nt, un, Gt, mt, wn, Bt, dn)
                                    ),
                                    (0, Q.d)({ bufferSize: 1, refCount: !1 })
                                );
                            if ((0, X.PM)(ln))
                                this.authState =
                                    this.user =
                                    this.idToken =
                                    this.idTokenResult =
                                    this.credential =
                                        (0, G.of)(null);
                            else {
                                qt.pipe((0, De.P)()).subscribe();
                                const Fe = qt.pipe(
                                        (0, k.w)((Te) =>
                                            Te.getRedirectResult().then(
                                                (ot) => ot,
                                                () => null
                                            )
                                        ),
                                        Se.iC,
                                        (0, Q.d)({
                                            bufferSize: 1,
                                            refCount: !1,
                                        })
                                    ),
                                    Ye = qt.pipe(
                                        (0, k.w)(
                                            (Te) =>
                                                new j.y((ot) => ({
                                                    unsubscribe:
                                                        nt.runOutsideAngular(
                                                            () =>
                                                                Te.onAuthStateChanged(
                                                                    (We) =>
                                                                        ot.next(
                                                                            We
                                                                        ),
                                                                    (We) =>
                                                                        ot.error(
                                                                            We
                                                                        ),
                                                                    () =>
                                                                        ot.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    ),
                                    q = qt.pipe(
                                        (0, k.w)(
                                            (Te) =>
                                                new j.y((ot) => ({
                                                    unsubscribe:
                                                        nt.runOutsideAngular(
                                                            () =>
                                                                Te.onIdTokenChanged(
                                                                    (We) =>
                                                                        ot.next(
                                                                            We
                                                                        ),
                                                                    (We) =>
                                                                        ot.error(
                                                                            We
                                                                        ),
                                                                    () =>
                                                                        ot.complete()
                                                                )
                                                        ),
                                                }))
                                        )
                                    );
                                (this.authState = Fe.pipe(
                                    B(Ye),
                                    (0, Ee.R)(st.outsideAngular),
                                    (0, V.Q)(st.insideAngular)
                                )),
                                    (this.user = Fe.pipe(
                                        B(q),
                                        (0, Ee.R)(st.outsideAngular),
                                        (0, V.Q)(st.insideAngular)
                                    )),
                                    (this.idToken = this.user.pipe(
                                        (0, k.w)((Te) =>
                                            Te
                                                ? (0, S.D)(Te.getIdToken())
                                                : (0, G.of)(null)
                                        )
                                    )),
                                    (this.idTokenResult = this.user.pipe(
                                        (0, k.w)((Te) =>
                                            Te
                                                ? (0, S.D)(
                                                      Te.getIdTokenResult()
                                                  )
                                                : (0, G.of)(null)
                                        )
                                    )),
                                    (this.credential = (0, x.T)(
                                        Fe,
                                        Nn,
                                        this.authState.pipe(
                                            (0, _e.h)((Te) => !Te)
                                        )
                                    ).pipe(
                                        (0, U.U)((Te) =>
                                            (null == Te ? void 0 : Te.user)
                                                ? Te
                                                : null
                                        ),
                                        (0, Ee.R)(st.outsideAngular),
                                        (0, V.Q)(st.insideAngular)
                                    ));
                            }
                            return (0, Z.pX)(this, qt, nt, {
                                spy: {
                                    apply: (Hn, Fe, Ye) => {
                                        (Hn.startsWith('signIn') ||
                                            Hn.startsWith('createUser')) &&
                                            Ye.then((q) => Nn.next(q));
                                    },
                                },
                            });
                        }
                    }
                    return (
                        (be.ɵfac = function (ut) {
                            return new (ut || be)(
                                l.LFG(Z.Dh),
                                l.LFG(Z.xv, 8),
                                l.LFG(l.Lbi),
                                l.LFG(l.R0b),
                                l.LFG(Se.HU),
                                l.LFG(ie, 8),
                                l.LFG(se, 8),
                                l.LFG(xe, 8),
                                l.LFG($e, 8),
                                l.LFG(it, 8),
                                l.LFG(ne, 8),
                                l.LFG(Ce.nm, 8)
                            );
                        }),
                        (be.ɵprov = l.Yz7({
                            token: be,
                            factory: be.ɵfac,
                            providedIn: 'any',
                        })),
                        be
                    );
                })(),
                Me = (() => {
                    class be {
                        constructor() {
                            ae.Z.registerVersion(
                                'angularfire',
                                Se.q4.full,
                                'auth-compat'
                            );
                        }
                    }
                    return (
                        (be.ɵfac = function (ut) {
                            return new (ut || be)();
                        }),
                        (be.ɵmod = l.oAB({ type: be })),
                        (be.ɵinj = l.cJS({ providers: [le] })),
                        be
                    );
                })();
        },
        2228: (de, z, _) => {
            'use strict';
            _.d(z, { l4: () => Se, Qv: () => Z, jQ: () => De, Wq: () => _e });
            var l = _(5e3),
                w = _(9646),
                G = _(8996),
                j = _(5363),
                S = _(3900),
                x = _(4004),
                k = _(4782),
                W = _(6351),
                B = _(2011),
                V = _(440),
                U = _(127);
            const De = new l.OlP('angularfire2.functions.origin'),
                Ee = new l.OlP('angularfire2.functions.region'),
                _e = new l.OlP('angularfire2.functions.use-emulator');
            let Se = (() => {
                    class X {
                        constructor(ae, Y, ie, se, xe, $e, it, ne) {
                            const Pe = it,
                                le = (0, w.of)(void 0).pipe(
                                    (0, j.Q)(se.outsideAngular),
                                    (0, S.w)(() =>
                                        _.e(568).then(_.bind(_, 7568))
                                    ),
                                    (0, x.U)(() => (0, B.on)(ae, ie, Y)),
                                    (0, x.U)((Me) =>
                                        (0, B.cc)(
                                            `${Me.name}.functions.${xe || $e}`,
                                            'AngularFireFunctions',
                                            Me.name,
                                            () => {
                                                let be;
                                                if (xe && $e)
                                                    throw new Error(
                                                        "REGION and ORIGIN can't be used at the same time."
                                                    );
                                                return (
                                                    (be = Me.functions(
                                                        xe || $e || void 0
                                                    )),
                                                    Pe && be.useEmulator(...Pe),
                                                    be
                                                );
                                            },
                                            [xe, $e, Pe]
                                        )
                                    ),
                                    (0, k.d)({ bufferSize: 1, refCount: !1 })
                                );
                            return (
                                (this.httpsCallable = (Me, be) => (ye) =>
                                    (0, G.D)(le).pipe(
                                        (0, j.Q)(se.insideAngular),
                                        (0, S.w)((ut) =>
                                            ut.httpsCallable(Me, be)(ye)
                                        ),
                                        (0, x.U)((ut) => ut.data)
                                    )),
                                (0, B.pX)(this, le, ie)
                            );
                        }
                    }
                    return (
                        (X.ɵfac = function (ae) {
                            return new (ae || X)(
                                l.LFG(B.Dh),
                                l.LFG(B.xv, 8),
                                l.LFG(l.R0b),
                                l.LFG(W.HU),
                                l.LFG(Ee, 8),
                                l.LFG(De, 8),
                                l.LFG(_e, 8),
                                l.LFG(V.nm, 8)
                            );
                        }),
                        (X.ɵprov = l.Yz7({
                            token: X,
                            factory: X.ɵfac,
                            providedIn: 'any',
                        })),
                        X
                    );
                })(),
                Z = (() => {
                    class X {
                        constructor() {
                            U.Z.registerVersion(
                                'angularfire',
                                W.q4.full,
                                'fn-compat'
                            );
                        }
                    }
                    return (
                        (X.ɵfac = function (ae) {
                            return new (ae || X)();
                        }),
                        (X.ɵmod = l.oAB({ type: X })),
                        (X.ɵinj = l.cJS({ providers: [Se] })),
                        X
                    );
                })();
        },
        2011: (de, z, _) => {
            'use strict';
            _.d(z, {
                hO: () => De,
                xv: () => B,
                Dh: () => W,
                GT: () => x,
                cc: () => Ee,
                on: () => V,
                pX: () => S,
            });
            var l = _(5e3),
                w = _(127),
                G = _(6351);
            de = _.hmd(de);
            const j = ['ngOnDestroy'],
                S = (X, Ce, ae, Y = {}) =>
                    new Proxy(X, {
                        get: (ie, se) =>
                            ae.runOutsideAngular(() => {
                                var xe;
                                if (X[se])
                                    return (
                                        (null ===
                                            (xe = null == Y ? void 0 : Y.spy) ||
                                        void 0 === xe
                                            ? void 0
                                            : xe.get) && Y.spy.get(se, X[se]),
                                        X[se]
                                    );
                                if (j.indexOf(se) > -1) return () => {};
                                const $e = Ce.toPromise().then((it) => {
                                    const ne = it && it[se];
                                    return 'function' == typeof ne
                                        ? ne.bind(it)
                                        : ne && ne.then
                                        ? ne.then((Pe) => ae.run(() => Pe))
                                        : ae.run(() => ne);
                                });
                                return new Proxy(() => {}, {
                                    get: (it, ne) => $e[ne],
                                    apply: (it, ne, Pe) =>
                                        $e.then((le) => {
                                            var Me;
                                            const be = le && le(...Pe);
                                            return (
                                                (null ===
                                                    (Me =
                                                        null == Y
                                                            ? void 0
                                                            : Y.spy) ||
                                                void 0 === Me
                                                    ? void 0
                                                    : Me.apply) &&
                                                    Y.spy.apply(se, Pe, be),
                                                be
                                            );
                                        }),
                                });
                            }),
                    }),
                x = (X, Ce) => {
                    Ce.forEach((ae) => {
                        Object.getOwnPropertyNames(ae.prototype || ae).forEach(
                            (Y) => {
                                Object.defineProperty(
                                    X.prototype,
                                    Y,
                                    Object.getOwnPropertyDescriptor(
                                        ae.prototype || ae,
                                        Y
                                    )
                                );
                            }
                        );
                    });
                };
            class k {
                constructor(Ce) {
                    return Ce;
                }
            }
            const W = new l.OlP('angularfire2.app.options'),
                B = new l.OlP('angularfire2.app.name');
            function V(X, Ce, ae) {
                const ie = ('object' == typeof ae && ae) || {};
                ie.name =
                    ie.name || ('string' == typeof ae && ae) || '[DEFAULT]';
                const xe =
                    w.Z.apps.filter(($e) => $e && $e.name === ie.name)[0] ||
                    Ce.runOutsideAngular(() => w.Z.initializeApp(X, ie));
                try {
                    JSON.stringify(X) !== JSON.stringify(xe.options) &&
                        U(
                            'error',
                            `${
                                xe.name
                            } Firebase App already initialized with different options${
                                de.hot
                                    ? ', you may need to reload as Firebase is not HMR aware.'
                                    : '.'
                            }`
                        );
                } catch ($e) {}
                return new k(xe);
            }
            const U = (X, ...Ce) => {
                    (0, l.X6Q)() &&
                        'undefined' != typeof console &&
                        console[X](...Ce);
                },
                Q = {
                    provide: k,
                    useFactory: V,
                    deps: [W, l.R0b, [new l.FiY(), B]],
                };
            let De = (() => {
                class X {
                    constructor(ae) {
                        w.Z.registerVersion('angularfire', G.q4.full, 'core'),
                            w.Z.registerVersion(
                                'angularfire',
                                G.q4.full,
                                'app-compat'
                            ),
                            w.Z.registerVersion(
                                'angular',
                                l.q4F.full,
                                ae.toString()
                            );
                    }
                    static initializeApp(ae, Y) {
                        return {
                            ngModule: X,
                            providers: [
                                { provide: W, useValue: ae },
                                { provide: B, useValue: Y },
                            ],
                        };
                    }
                }
                return (
                    (X.ɵfac = function (ae) {
                        return new (ae || X)(l.LFG(l.Lbi));
                    }),
                    (X.ɵmod = l.oAB({ type: X })),
                    (X.ɵinj = l.cJS({ providers: [Q] })),
                    X
                );
            })();
            function Ee(X, Ce, ae, Y, ie) {
                const [, se, xe] =
                    globalThis.ɵAngularfireInstanceCache.find(
                        ($e) => $e[0] === X
                    ) || [];
                if (se)
                    return (
                        (function _e(X, Ce) {
                            try {
                                return X.toString() === Ce.toString();
                            } catch (ae) {
                                return X === Ce;
                            }
                        })(ie, xe) ||
                            (Z(
                                'error',
                                `${Ce} was already initialized on the ${ae} Firebase App with different settings.${
                                    Se
                                        ? ' You may need to reload as Firebase is not HMR aware.'
                                        : ''
                                }`
                            ),
                            Z('warn', { is: ie, was: xe })),
                        se
                    );
                {
                    const $e = Y();
                    return (
                        globalThis.ɵAngularfireInstanceCache.push([X, $e, ie]),
                        $e
                    );
                }
            }
            const Se = !!de.hot,
                Z = (X, ...Ce) => {
                    (0, l.X6Q)() &&
                        'undefined' != typeof console &&
                        console[X](...Ce);
                };
            globalThis.ɵAngularfireInstanceCache ||
                (globalThis.ɵAngularfireInstanceCache = []);
        },
        6351: (de, z, _) => {
            'use strict';
            _.d(z, {
                q4: () => Zl,
                iC: () => na,
                HU: () => Ql,
                vb: () => Fa,
                JM: () => dl,
            });
            var l = _(5e3),
                w = _(5867),
                G = _(5861),
                j = _(9681),
                S = _(2090),
                x = _(4859),
                k = _(1877),
                W = _(2940);
            const B = '@firebase/installations',
                V = '0.5.5',
                Q = `w:${V}`,
                De = 'FIS_v2',
                Ce = new S.LL('installations', 'Installations', {
                    'missing-app-config-values':
                        'Missing App configuration value: "{$valueName}"',
                    'not-registered':
                        'Firebase Installation is not registered.',
                    'installation-not-found':
                        'Firebase Installation not found.',
                    'request-failed':
                        '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',
                    'app-offline':
                        'Could not process request. Application offline.',
                    'delete-pending-registration':
                        "Can't delete installation while there is a pending registration request.",
                });
            function ae(s) {
                return s instanceof S.ZR && s.code.includes('request-failed');
            }
            function Y({ projectId: s }) {
                return `https://firebaseinstallations.googleapis.com/v1/projects/${s}/installations`;
            }
            function ie(s) {
                return {
                    token: s.token,
                    requestStatus: 2,
                    expiresIn: le(s.expiresIn),
                    creationTime: Date.now(),
                };
            }
            function se(s, c) {
                return xe.apply(this, arguments);
            }
            function xe() {
                return (xe = (0, G.Z)(function* (s, c) {
                    const A = (yield c.json()).error;
                    return Ce.create('request-failed', {
                        requestName: s,
                        serverCode: A.code,
                        serverMessage: A.message,
                        serverStatus: A.status,
                    });
                })).apply(this, arguments);
            }
            function $e({ apiKey: s }) {
                return new Headers({
                    'Content-Type': 'application/json',
                    Accept: 'application/json',
                    'x-goog-api-key': s,
                });
            }
            function it(s, { refreshToken: c }) {
                const p = $e(s);
                return (
                    p.append(
                        'Authorization',
                        (function Me(s) {
                            return `${De} ${s}`;
                        })(c)
                    ),
                    p
                );
            }
            function ne(s) {
                return Pe.apply(this, arguments);
            }
            function Pe() {
                return (Pe = (0, G.Z)(function* (s) {
                    const c = yield s();
                    return c.status >= 500 && c.status < 600 ? s() : c;
                })).apply(this, arguments);
            }
            function le(s) {
                return Number(s.replace('s', '000'));
            }
            function be(s, c) {
                return ye.apply(this, arguments);
            }
            function ye() {
                return (ye = (0, G.Z)(function* (s, { fid: c }) {
                    const p = Y(s),
                        $ = {
                            method: 'POST',
                            headers: $e(s),
                            body: JSON.stringify({
                                fid: c,
                                authVersion: De,
                                appId: s.appId,
                                sdkVersion: Q,
                            }),
                        },
                        re = yield ne(() => fetch(p, $));
                    if (re.ok) {
                        const ke = yield re.json();
                        return {
                            fid: ke.fid || c,
                            registrationStatus: 2,
                            refreshToken: ke.refreshToken,
                            authToken: ie(ke.authToken),
                        };
                    }
                    throw yield se('Create Installation', re);
                })).apply(this, arguments);
            }
            function ut(s) {
                return new Promise((c) => {
                    setTimeout(c, s);
                });
            }
            const ln = /^[cdef][\w-]{21}$/;
            function st() {
                try {
                    const s = new Uint8Array(17);
                    (self.crypto || self.msCrypto).getRandomValues(s),
                        (s[0] = 112 + (s[0] % 16));
                    const p = (function un(s) {
                        return (function Pt(s) {
                            return btoa(String.fromCharCode(...s))
                                .replace(/\+/g, '-')
                                .replace(/\//g, '_');
                        })(s).substr(0, 22);
                    })(s);
                    return ln.test(p) ? p : '';
                } catch (s) {
                    return '';
                }
            }
            function Bt(s) {
                return `${s.appName}!${s.appId}`;
            }
            const Gt = new Map();
            function mt(s, c) {
                const p = Bt(s);
                Kt(p, c),
                    (function Nn(s, c) {
                        const p = (function Hn() {
                            return (
                                !qt &&
                                    'BroadcastChannel' in self &&
                                    ((qt = new BroadcastChannel(
                                        '[Firebase] FID Change'
                                    )),
                                    (qt.onmessage = (s) => {
                                        Kt(s.data.key, s.data.fid);
                                    })),
                                qt
                            );
                        })();
                        p && p.postMessage({ key: s, fid: c }),
                            (function Fe() {
                                0 === Gt.size &&
                                    qt &&
                                    (qt.close(), (qt = null));
                            })();
                    })(p, c);
            }
            function Kt(s, c) {
                const p = Gt.get(s);
                if (p) for (const A of p) A(c);
            }
            let qt = null;
            const Te = 'firebase-installations-store';
            let ot = null;
            function We() {
                return (
                    ot ||
                        (ot = (0, W.openDb)(
                            'firebase-installations-database',
                            1,
                            (s) => {
                                0 === s.oldVersion && s.createObjectStore(Te);
                            }
                        )),
                    ot
                );
            }
            function Rt(s, c) {
                return jt.apply(this, arguments);
            }
            function jt() {
                return (jt = (0, G.Z)(function* (s, c) {
                    const p = Bt(s),
                        P = (yield We()).transaction(Te, 'readwrite'),
                        $ = P.objectStore(Te),
                        re = yield $.get(p);
                    return (
                        yield $.put(c, p),
                        yield P.complete,
                        (!re || re.fid !== c.fid) && mt(s, c.fid),
                        c
                    );
                })).apply(this, arguments);
            }
            function xt(s) {
                return nr.apply(this, arguments);
            }
            function nr() {
                return (nr = (0, G.Z)(function* (s) {
                    const c = Bt(s),
                        A = (yield We()).transaction(Te, 'readwrite');
                    yield A.objectStore(Te).delete(c), yield A.complete;
                })).apply(this, arguments);
            }
            function At(s, c) {
                return vt.apply(this, arguments);
            }
            function vt() {
                return (vt = (0, G.Z)(function* (s, c) {
                    const p = Bt(s),
                        P = (yield We()).transaction(Te, 'readwrite'),
                        $ = P.objectStore(Te),
                        re = yield $.get(p),
                        ke = c(re);
                    return (
                        void 0 === ke ? yield $.delete(p) : yield $.put(ke, p),
                        yield P.complete,
                        ke && (!re || re.fid !== ke.fid) && mt(s, ke.fid),
                        ke
                    );
                })).apply(this, arguments);
            }
            function kt(s) {
                return ht.apply(this, arguments);
            }
            function ht() {
                return (ht = (0, G.Z)(function* (s) {
                    let c;
                    const p = yield At(s, (A) => {
                        const P = fn(A),
                            $ = Ft(s, P);
                        return (c = $.registrationPromise), $.installationEntry;
                    });
                    return '' === p.fid
                        ? { installationEntry: yield c }
                        : { installationEntry: p, registrationPromise: c };
                })).apply(this, arguments);
            }
            function fn(s) {
                return qn(s || { fid: st(), registrationStatus: 0 });
            }
            function Ft(s, c) {
                if (0 === c.registrationStatus) {
                    if (!navigator.onLine)
                        return {
                            installationEntry: c,
                            registrationPromise: Promise.reject(
                                Ce.create('app-offline')
                            ),
                        };
                    const p = {
                            fid: c.fid,
                            registrationStatus: 1,
                            registrationTime: Date.now(),
                        },
                        A = (function yt(s, c) {
                            return _t.apply(this, arguments);
                        })(s, p);
                    return { installationEntry: p, registrationPromise: A };
                }
                return 1 === c.registrationStatus
                    ? { installationEntry: c, registrationPromise: Er(s) }
                    : { installationEntry: c };
            }
            function _t() {
                return (_t = (0, G.Z)(function* (s, c) {
                    try {
                        return Rt(s, yield be(s, c));
                    } catch (p) {
                        throw (
                            (ae(p) && 409 === p.customData.serverCode
                                ? yield xt(s)
                                : yield Rt(s, {
                                      fid: c.fid,
                                      registrationStatus: 0,
                                  }),
                            p)
                        );
                    }
                })).apply(this, arguments);
            }
            function Er(s) {
                return sr.apply(this, arguments);
            }
            function sr() {
                return (sr = (0, G.Z)(function* (s) {
                    let c = yield nn(s);
                    for (; 1 === c.registrationStatus; )
                        yield ut(100), (c = yield nn(s));
                    if (0 === c.registrationStatus) {
                        const { installationEntry: p, registrationPromise: A } =
                            yield kt(s);
                        return A || p;
                    }
                    return c;
                })).apply(this, arguments);
            }
            function nn(s) {
                return At(s, (c) => {
                    if (!c) throw Ce.create('installation-not-found');
                    return qn(c);
                });
            }
            function qn(s) {
                return (function Jn(s) {
                    return (
                        1 === s.registrationStatus &&
                        s.registrationTime + 1e4 < Date.now()
                    );
                })(s)
                    ? { fid: s.fid, registrationStatus: 0 }
                    : s;
            }
            function Dr(s, c) {
                return te.apply(this, arguments);
            }
            function te() {
                return (te = (0, G.Z)(function* (
                    { appConfig: s, platformLoggerProvider: c },
                    p
                ) {
                    const A = ce(s, p),
                        P = it(s, p),
                        $ = c.getImmediate({ optional: !0 });
                    $ &&
                        P.append(
                            'x-firebase-client',
                            $.getPlatformInfoString()
                        );
                    const ke = {
                            method: 'POST',
                            headers: P,
                            body: JSON.stringify({
                                installation: { sdkVersion: Q },
                            }),
                        },
                        Ge = yield ne(() => fetch(A, ke));
                    if (Ge.ok) return ie(yield Ge.json());
                    throw yield se('Generate Auth Token', Ge);
                })).apply(this, arguments);
            }
            function ce(s, { fid: c }) {
                return `${Y(s)}/${c}/authTokens:generate`;
            }
            function oe(s) {
                return je.apply(this, arguments);
            }
            function je() {
                return (je = (0, G.Z)(function* (s, c = !1) {
                    let p;
                    const A = yield At(s.appConfig, ($) => {
                        if (!Qe($)) throw Ce.create('not-registered');
                        const re = $.authToken;
                        if (!c && Ct(re)) return $;
                        if (1 === re.requestStatus) return (p = Ie(s, c)), $;
                        {
                            if (!navigator.onLine)
                                throw Ce.create('app-offline');
                            const ke = en($);
                            return (p = Ne(s, ke)), ke;
                        }
                    });
                    return p ? yield p : A.authToken;
                })).apply(this, arguments);
            }
            function Ie(s, c) {
                return ft.apply(this, arguments);
            }
            function ft() {
                return (ft = (0, G.Z)(function* (s, c) {
                    let p = yield pe(s.appConfig);
                    for (; 1 === p.authToken.requestStatus; )
                        yield ut(100), (p = yield pe(s.appConfig));
                    const A = p.authToken;
                    return 0 === A.requestStatus ? oe(s, c) : A;
                })).apply(this, arguments);
            }
            function pe(s) {
                return At(s, (c) => {
                    if (!Qe(c)) throw Ce.create('not-registered');
                    return (function on(s) {
                        return (
                            1 === s.requestStatus &&
                            s.requestTime + 1e4 < Date.now()
                        );
                    })(c.authToken)
                        ? Object.assign(Object.assign({}, c), {
                              authToken: { requestStatus: 0 },
                          })
                        : c;
                });
            }
            function Ne(s, c) {
                return Be.apply(this, arguments);
            }
            function Be() {
                return (Be = (0, G.Z)(function* (s, c) {
                    try {
                        const p = yield Dr(s, c),
                            A = Object.assign(Object.assign({}, c), {
                                authToken: p,
                            });
                        return yield Rt(s.appConfig, A), p;
                    } catch (p) {
                        if (
                            !ae(p) ||
                            (401 !== p.customData.serverCode &&
                                404 !== p.customData.serverCode)
                        ) {
                            const A = Object.assign(Object.assign({}, c), {
                                authToken: { requestStatus: 0 },
                            });
                            yield Rt(s.appConfig, A);
                        } else yield xt(s.appConfig);
                        throw p;
                    }
                })).apply(this, arguments);
            }
            function Qe(s) {
                return void 0 !== s && 2 === s.registrationStatus;
            }
            function Ct(s) {
                return (
                    2 === s.requestStatus &&
                    !(function ct(s) {
                        const c = Date.now();
                        return (
                            c < s.creationTime ||
                            s.creationTime + s.expiresIn < c + 36e5
                        );
                    })(s)
                );
            }
            function en(s) {
                const c = { requestStatus: 1, requestTime: Date.now() };
                return Object.assign(Object.assign({}, s), { authToken: c });
            }
            function bt() {
                return (bt = (0, G.Z)(function* (s) {
                    const c = s,
                        { installationEntry: p, registrationPromise: A } =
                            yield kt(c.appConfig);
                    return (
                        A ? A.catch(console.error) : oe(c).catch(console.error),
                        p.fid
                    );
                })).apply(this, arguments);
            }
            function Jt() {
                return (Jt = (0, G.Z)(function* (s, c = !1) {
                    const p = s;
                    return yield Zt(p.appConfig), (yield oe(p, c)).token;
                })).apply(this, arguments);
            }
            function Zt(s) {
                return _n.apply(this, arguments);
            }
            function _n() {
                return (_n = (0, G.Z)(function* (s) {
                    const { registrationPromise: c } = yield kt(s);
                    c && (yield c);
                })).apply(this, arguments);
            }
            function or(s) {
                return Ce.create('missing-app-config-values', { valueName: s });
            }
            const Wn = 'installations',
                Ot = (s) => {
                    const c = s.getProvider('app').getImmediate(),
                        p = (function Ln(s) {
                            if (!s || !s.options) throw or('App Configuration');
                            if (!s.name) throw or('App Name');
                            const c = ['projectId', 'apiKey', 'appId'];
                            for (const p of c) if (!s.options[p]) throw or(p);
                            return {
                                appName: s.name,
                                projectId: s.options.projectId,
                                apiKey: s.options.apiKey,
                                appId: s.options.appId,
                            };
                        })(c);
                    return {
                        app: c,
                        appConfig: p,
                        platformLoggerProvider: (0, j._getProvider)(
                            c,
                            'platform-logger'
                        ),
                        _delete: () => Promise.resolve(),
                    };
                },
                pn = (s) => {
                    const c = s.getProvider('app').getImmediate(),
                        p = (0, j._getProvider)(c, Wn).getImmediate();
                    return {
                        getId: () =>
                            (function Sn(s) {
                                return bt.apply(this, arguments);
                            })(p),
                        getToken: (P) =>
                            (function Xn(s) {
                                return Jt.apply(this, arguments);
                            })(p, P),
                    };
                };
            (function zn() {
                (0, j._registerComponent)(new x.wA(Wn, Ot, 'PUBLIC')),
                    (0, j._registerComponent)(
                        new x.wA('installations-internal', pn, 'PRIVATE')
                    );
            })(),
                (0, j.registerVersion)(B, V),
                (0, j.registerVersion)(B, V, 'esm2017');
            const pr = '@firebase/remote-config',
                In = new S.LL('remoteconfig', 'Remote Config', {
                    'registration-window':
                        'Undefined window object. This SDK only supports usage in a browser environment.',
                    'registration-project-id':
                        'Undefined project identifier. Check Firebase app initialization.',
                    'registration-api-key':
                        'Undefined API key. Check Firebase app initialization.',
                    'registration-app-id':
                        'Undefined app identifier. Check Firebase app initialization.',
                    'storage-open':
                        'Error thrown when opening storage. Original error: {$originalErrorMessage}.',
                    'storage-get':
                        'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',
                    'storage-set':
                        'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',
                    'storage-delete':
                        'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',
                    'fetch-client-network':
                        'Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.',
                    'fetch-timeout':
                        'The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'fetch-client-parse':
                        'Fetch client could not parse response. Original error: {$originalErrorMessage}.',
                    'fetch-status':
                        'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',
                    'indexed-db-unavailable':
                        'Indexed DB is not supported by current browser',
                });
            class gr {
                constructor(c, p, A, P) {
                    (this.client = c),
                        (this.storage = p),
                        (this.storageCache = A),
                        (this.logger = P);
                }
                isCachedDataFresh(c, p) {
                    if (!p)
                        return (
                            this.logger.debug(
                                'Config fetch cache check. Cache unpopulated.'
                            ),
                            !1
                        );
                    const A = Date.now() - p,
                        P = A <= c;
                    return (
                        this.logger.debug(
                            `Config fetch cache check. Cache age millis: ${A}. Cache max age millis (minimumFetchIntervalMillis setting): ${c}. Is cache hit: ${P}.`
                        ),
                        P
                    );
                }
                fetch(c) {
                    var p = this;
                    return (0, G.Z)(function* () {
                        const [A, P] = yield Promise.all([
                            p.storage.getLastSuccessfulFetchTimestampMillis(),
                            p.storage.getLastSuccessfulFetchResponse(),
                        ]);
                        if (P && p.isCachedDataFresh(c.cacheMaxAgeMillis, A))
                            return P;
                        c.eTag = P && P.eTag;
                        const $ = yield p.client.fetch(c),
                            re = [
                                p.storageCache.setLastSuccessfulFetchTimestampMillis(
                                    Date.now()
                                ),
                            ];
                        return (
                            200 === $.status &&
                                re.push(
                                    p.storage.setLastSuccessfulFetchResponse($)
                                ),
                            yield Promise.all(re),
                            $
                        );
                    })();
                }
            }
            function Ur(s = navigator) {
                return (s.languages && s.languages[0]) || s.language;
            }
            class mr {
                constructor(c, p, A, P, $, re) {
                    (this.firebaseInstallations = c),
                        (this.sdkVersion = p),
                        (this.namespace = A),
                        (this.projectId = P),
                        (this.apiKey = $),
                        (this.appId = re);
                }
                fetch(c) {
                    var p = this;
                    return (0, G.Z)(function* () {
                        const [A, P] = yield Promise.all([
                                p.firebaseInstallations.getId(),
                                p.firebaseInstallations.getToken(),
                            ]),
                            re = `${
                                window.FIREBASE_REMOTE_CONFIG_URL_BASE ||
                                'https://firebaseremoteconfig.googleapis.com'
                            }/v1/projects/${p.projectId}/namespaces/${
                                p.namespace
                            }:fetch?key=${p.apiKey}`,
                            ke = {
                                'Content-Type': 'application/json',
                                'Content-Encoding': 'gzip',
                                'If-None-Match': c.eTag || '*',
                            },
                            Ge = {
                                sdk_version: p.sdkVersion,
                                app_instance_id: A,
                                app_instance_id_token: P,
                                app_id: p.appId,
                                language_code: Ur(),
                            },
                            at = {
                                method: 'POST',
                                headers: ke,
                                body: JSON.stringify(Ge),
                            },
                            et = fetch(re, at),
                            dt = new Promise((ir, wi) => {
                                c.signal.addEventListener(() => {
                                    const Si = new Error(
                                        'The operation was aborted.'
                                    );
                                    (Si.name = 'AbortError'), wi(Si);
                                });
                            });
                        let gt;
                        try {
                            yield Promise.race([et, dt]), (gt = yield et);
                        } catch (ir) {
                            let wi = 'fetch-client-network';
                            throw (
                                ('AbortError' === ir.name &&
                                    (wi = 'fetch-timeout'),
                                In.create(wi, {
                                    originalErrorMessage: ir.message,
                                }))
                            );
                        }
                        let zt = gt.status;
                        const bn = gt.headers.get('ETag') || void 0;
                        let er, rr;
                        if (200 === gt.status) {
                            let ir;
                            try {
                                ir = yield gt.json();
                            } catch (wi) {
                                throw In.create('fetch-client-parse', {
                                    originalErrorMessage: wi.message,
                                });
                            }
                            (er = ir.entries), (rr = ir.state);
                        }
                        if (
                            ('INSTANCE_STATE_UNSPECIFIED' === rr
                                ? (zt = 500)
                                : 'NO_CHANGE' === rr
                                ? (zt = 304)
                                : ('NO_TEMPLATE' === rr ||
                                      'EMPTY_CONFIG' === rr) &&
                                  (er = {}),
                            304 !== zt && 200 !== zt)
                        )
                            throw In.create('fetch-status', { httpStatus: zt });
                        return { status: zt, eTag: bn, config: er };
                    })();
                }
            }
            class ve {
                constructor(c, p) {
                    (this.client = c), (this.storage = p);
                }
                fetch(c) {
                    var p = this;
                    return (0, G.Z)(function* () {
                        const A = (yield p.storage.getThrottleMetadata()) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        };
                        return p.attemptFetch(c, A);
                    })();
                }
                attemptFetch(c, { throttleEndTimeMillis: p, backoffCount: A }) {
                    var P = this;
                    return (0, G.Z)(function* () {
                        yield (function Vi(s, c) {
                            return new Promise((p, A) => {
                                const P = Math.max(c - Date.now(), 0),
                                    $ = setTimeout(p, P);
                                s.addEventListener(() => {
                                    clearTimeout($),
                                        A(
                                            In.create('fetch-throttle', {
                                                throttleEndTimeMillis: c,
                                            })
                                        );
                                });
                            });
                        })(c.signal, p);
                        try {
                            const $ = yield P.client.fetch(c);
                            return yield P.storage.deleteThrottleMetadata(), $;
                        } catch ($) {
                            if (
                                !(function ci(s) {
                                    if (!(s instanceof S.ZR && s.customData))
                                        return !1;
                                    const c = Number(s.customData.httpStatus);
                                    return (
                                        429 === c ||
                                        500 === c ||
                                        503 === c ||
                                        504 === c
                                    );
                                })($)
                            )
                                throw $;
                            const re = {
                                throttleEndTimeMillis:
                                    Date.now() + (0, S.$s)(A),
                                backoffCount: A + 1,
                            };
                            return (
                                yield P.storage.setThrottleMetadata(re),
                                P.attemptFetch(c, re)
                            );
                        }
                    })();
                }
            }
            class Ze {
                constructor(c, p, A, P, $) {
                    (this.app = c),
                        (this._client = p),
                        (this._storageCache = A),
                        (this._storage = P),
                        (this._logger = $),
                        (this._isInitializationComplete = !1),
                        (this.settings = {
                            fetchTimeoutMillis: 6e4,
                            minimumFetchIntervalMillis: 432e5,
                        }),
                        (this.defaultConfig = {});
                }
                get fetchTimeMillis() {
                    return (
                        this._storageCache.getLastSuccessfulFetchTimestampMillis() ||
                        -1
                    );
                }
                get lastFetchStatus() {
                    return (
                        this._storageCache.getLastFetchStatus() ||
                        'no-fetch-yet'
                    );
                }
            }
            function tt(s, c) {
                const p = s.target.error || void 0;
                return In.create(c, { originalErrorMessage: p && p.message });
            }
            const Et = 'app_namespace_store';
            class Ar {
                constructor(
                    c,
                    p,
                    A,
                    P = (function yn() {
                        return new Promise((s, c) => {
                            try {
                                const p = indexedDB.open(
                                    'firebase_remote_config',
                                    1
                                );
                                (p.onerror = (A) => {
                                    c(tt(A, 'storage-open'));
                                }),
                                    (p.onsuccess = (A) => {
                                        s(A.target.result);
                                    }),
                                    (p.onupgradeneeded = (A) => {
                                        0 === A.oldVersion &&
                                            A.target.result.createObjectStore(
                                                Et,
                                                { keyPath: 'compositeKey' }
                                            );
                                    });
                            } catch (p) {
                                c(
                                    In.create('storage-open', {
                                        originalErrorMessage: p,
                                    })
                                );
                            }
                        });
                    })()
                ) {
                    (this.appId = c),
                        (this.appName = p),
                        (this.namespace = A),
                        (this.openDbPromise = P);
                }
                getLastFetchStatus() {
                    return this.get('last_fetch_status');
                }
                setLastFetchStatus(c) {
                    return this.set('last_fetch_status', c);
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.get('last_successful_fetch_timestamp_millis');
                }
                setLastSuccessfulFetchTimestampMillis(c) {
                    return this.set(
                        'last_successful_fetch_timestamp_millis',
                        c
                    );
                }
                getLastSuccessfulFetchResponse() {
                    return this.get('last_successful_fetch_response');
                }
                setLastSuccessfulFetchResponse(c) {
                    return this.set('last_successful_fetch_response', c);
                }
                getActiveConfig() {
                    return this.get('active_config');
                }
                setActiveConfig(c) {
                    return this.set('active_config', c);
                }
                getActiveConfigEtag() {
                    return this.get('active_config_etag');
                }
                setActiveConfigEtag(c) {
                    return this.set('active_config_etag', c);
                }
                getThrottleMetadata() {
                    return this.get('throttle_metadata');
                }
                setThrottleMetadata(c) {
                    return this.set('throttle_metadata', c);
                }
                deleteThrottleMetadata() {
                    return this.delete('throttle_metadata');
                }
                get(c) {
                    var p = this;
                    return (0, G.Z)(function* () {
                        const A = yield p.openDbPromise;
                        return new Promise((P, $) => {
                            const ke = A.transaction(
                                    [Et],
                                    'readonly'
                                ).objectStore(Et),
                                Ge = p.createCompositeKey(c);
                            try {
                                const at = ke.get(Ge);
                                (at.onerror = (et) => {
                                    $(tt(et, 'storage-get'));
                                }),
                                    (at.onsuccess = (et) => {
                                        const dt = et.target.result;
                                        P(dt ? dt.value : void 0);
                                    });
                            } catch (at) {
                                $(
                                    In.create('storage-get', {
                                        originalErrorMessage: at && at.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                set(c, p) {
                    var A = this;
                    return (0, G.Z)(function* () {
                        const P = yield A.openDbPromise;
                        return new Promise(($, re) => {
                            const Ge = P.transaction(
                                    [Et],
                                    'readwrite'
                                ).objectStore(Et),
                                at = A.createCompositeKey(c);
                            try {
                                const et = Ge.put({
                                    compositeKey: at,
                                    value: p,
                                });
                                (et.onerror = (dt) => {
                                    re(tt(dt, 'storage-set'));
                                }),
                                    (et.onsuccess = () => {
                                        $();
                                    });
                            } catch (et) {
                                re(
                                    In.create('storage-set', {
                                        originalErrorMessage: et && et.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                delete(c) {
                    var p = this;
                    return (0, G.Z)(function* () {
                        const A = yield p.openDbPromise;
                        return new Promise((P, $) => {
                            const ke = A.transaction(
                                    [Et],
                                    'readwrite'
                                ).objectStore(Et),
                                Ge = p.createCompositeKey(c);
                            try {
                                const at = ke.delete(Ge);
                                (at.onerror = (et) => {
                                    $(tt(et, 'storage-delete'));
                                }),
                                    (at.onsuccess = () => {
                                        P();
                                    });
                            } catch (at) {
                                $(
                                    In.create('storage-delete', {
                                        originalErrorMessage: at && at.message,
                                    })
                                );
                            }
                        });
                    })();
                }
                createCompositeKey(c) {
                    return [this.appId, this.appName, this.namespace, c].join();
                }
            }
            class di {
                constructor(c) {
                    this.storage = c;
                }
                getLastFetchStatus() {
                    return this.lastFetchStatus;
                }
                getLastSuccessfulFetchTimestampMillis() {
                    return this.lastSuccessfulFetchTimestampMillis;
                }
                getActiveConfig() {
                    return this.activeConfig;
                }
                loadFromStorage() {
                    var c = this;
                    return (0, G.Z)(function* () {
                        const p = c.storage.getLastFetchStatus(),
                            A =
                                c.storage.getLastSuccessfulFetchTimestampMillis(),
                            P = c.storage.getActiveConfig(),
                            $ = yield p;
                        $ && (c.lastFetchStatus = $);
                        const re = yield A;
                        re && (c.lastSuccessfulFetchTimestampMillis = re);
                        const ke = yield P;
                        ke && (c.activeConfig = ke);
                    })();
                }
                setLastFetchStatus(c) {
                    return (
                        (this.lastFetchStatus = c),
                        this.storage.setLastFetchStatus(c)
                    );
                }
                setLastSuccessfulFetchTimestampMillis(c) {
                    return (
                        (this.lastSuccessfulFetchTimestampMillis = c),
                        this.storage.setLastSuccessfulFetchTimestampMillis(c)
                    );
                }
                setActiveConfig(c) {
                    return (
                        (this.activeConfig = c), this.storage.setActiveConfig(c)
                    );
                }
            }
            function Oi() {
                return ni.apply(this, arguments);
            }
            function ni() {
                return (ni = (0, G.Z)(function* () {
                    if (!(0, S.hl)()) return !1;
                    try {
                        return yield (0, S.eu)();
                    } catch (s) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            !(function ti() {
                (0, j._registerComponent)(
                    new x.wA(
                        'remote-config',
                        function s(c, { instanceIdentifier: p }) {
                            const A = c.getProvider('app').getImmediate(),
                                P = c
                                    .getProvider('installations-internal')
                                    .getImmediate();
                            if ('undefined' == typeof window)
                                throw In.create('registration-window');
                            if (!(0, S.hl)())
                                throw In.create('indexed-db-unavailable');
                            const {
                                projectId: $,
                                apiKey: re,
                                appId: ke,
                            } = A.options;
                            if (!$) throw In.create('registration-project-id');
                            if (!re) throw In.create('registration-api-key');
                            if (!ke) throw In.create('registration-app-id');
                            const Ge = new Ar(
                                    ke,
                                    A.name,
                                    (p = p || 'firebase')
                                ),
                                at = new di(Ge),
                                et = new k.Yd(pr);
                            et.logLevel = k.in.ERROR;
                            const dt = new mr(P, j.SDK_VERSION, p, $, re, ke),
                                gt = new ve(dt, Ge),
                                zt = new gr(gt, Ge, at, et),
                                bn = new Ze(A, zt, at, Ge, et);
                            return (
                                (function ge(s) {
                                    const c = (0, S.m9)(s);
                                    c._initializePromise ||
                                        (c._initializePromise = c._storageCache
                                            .loadFromStorage()
                                            .then(() => {
                                                c._isInitializationComplete =
                                                    !0;
                                            }));
                                })(bn),
                                bn
                            );
                        },
                        'PUBLIC'
                    ).setMultipleInstances(!0)
                ),
                    (0, j.registerVersion)(pr, '0.3.4'),
                    (0, j.registerVersion)(pr, '0.3.4', 'esm2017');
            })();
            const ts = '/firebase-messaging-sw.js',
                ri = '/firebase-cloud-messaging-push-scope',
                fi =
                    'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4',
                wr = 'google.c.a.c_id',
                ms = 'google.c.a.c_l',
                Xr = 'google.c.a.ts',
                ns = 'google.c.a.e';
            var Hr = (() => {
                return (
                    ((s = Hr || (Hr = {})).PUSH_RECEIVED = 'push-received'),
                    (s.NOTIFICATION_CLICKED = 'notification-clicked'),
                    Hr
                );
                var s;
            })();
            function Nr(s) {
                const c = new Uint8Array(s);
                return btoa(String.fromCharCode(...c))
                    .replace(/=/g, '')
                    .replace(/\+/g, '-')
                    .replace(/\//g, '_');
            }
            function $r(s) {
                const p = (s + '='.repeat((4 - (s.length % 4)) % 4))
                        .replace(/\-/g, '+')
                        .replace(/_/g, '/'),
                    A = atob(p),
                    P = new Uint8Array(A.length);
                for (let $ = 0; $ < A.length; ++$) P[$] = A.charCodeAt($);
                return P;
            }
            const Qn = 'fcm_token_details_db',
                Yr = 'fcm_token_object_Store';
            function Pi(s) {
                return ji.apply(this, arguments);
            }
            function ji() {
                return (
                    (ji = (0, G.Z)(function* (s) {
                        if (
                            'databases' in indexedDB &&
                            !(yield indexedDB.databases())
                                .map(($) => $.name)
                                .includes(Qn)
                        )
                            return null;
                        let c = null;
                        return (
                            (yield (0, W.openDb)(
                                Qn,
                                5,
                                (function () {
                                    var A = (0, G.Z)(function* (P) {
                                        var $;
                                        if (
                                            P.oldVersion < 2 ||
                                            !P.objectStoreNames.contains(Yr)
                                        )
                                            return;
                                        const re =
                                                P.transaction.objectStore(Yr),
                                            ke = yield re
                                                .index('fcmSenderId')
                                                .get(s);
                                        if ((yield re.clear(), ke))
                                            if (2 === P.oldVersion) {
                                                const Ge = ke;
                                                if (
                                                    !Ge.auth ||
                                                    !Ge.p256dh ||
                                                    !Ge.endpoint
                                                )
                                                    return;
                                                c = {
                                                    token: Ge.fcmToken,
                                                    createTime:
                                                        null !==
                                                            ($ =
                                                                Ge.createTime) &&
                                                        void 0 !== $
                                                            ? $
                                                            : Date.now(),
                                                    subscriptionOptions: {
                                                        auth: Ge.auth,
                                                        p256dh: Ge.p256dh,
                                                        endpoint: Ge.endpoint,
                                                        swScope: Ge.swScope,
                                                        vapidKey:
                                                            'string' ==
                                                            typeof Ge.vapidKey
                                                                ? Ge.vapidKey
                                                                : Nr(
                                                                      Ge.vapidKey
                                                                  ),
                                                    },
                                                };
                                            } else if (3 === P.oldVersion) {
                                                const Ge = ke;
                                                c = {
                                                    token: Ge.fcmToken,
                                                    createTime: Ge.createTime,
                                                    subscriptionOptions: {
                                                        auth: Nr(Ge.auth),
                                                        p256dh: Nr(Ge.p256dh),
                                                        endpoint: Ge.endpoint,
                                                        swScope: Ge.swScope,
                                                        vapidKey: Nr(
                                                            Ge.vapidKey
                                                        ),
                                                    },
                                                };
                                            } else if (4 === P.oldVersion) {
                                                const Ge = ke;
                                                c = {
                                                    token: Ge.fcmToken,
                                                    createTime: Ge.createTime,
                                                    subscriptionOptions: {
                                                        auth: Nr(Ge.auth),
                                                        p256dh: Nr(Ge.p256dh),
                                                        endpoint: Ge.endpoint,
                                                        swScope: Ge.swScope,
                                                        vapidKey: Nr(
                                                            Ge.vapidKey
                                                        ),
                                                    },
                                                };
                                            }
                                    });
                                    return function (P) {
                                        return A.apply(this, arguments);
                                    };
                                })()
                            )).close(),
                            yield (0, W.deleteDb)(Qn),
                            yield (0, W.deleteDb)('fcm_vapid_details_db'),
                            yield (0, W.deleteDb)('undefined'),
                            ii(c) ? c : null
                        );
                    })),
                    ji.apply(this, arguments)
                );
            }
            function ii(s) {
                if (!s || !s.subscriptionOptions) return !1;
                const { subscriptionOptions: c } = s;
                return (
                    'number' == typeof s.createTime &&
                    s.createTime > 0 &&
                    'string' == typeof s.token &&
                    s.token.length > 0 &&
                    'string' == typeof c.auth &&
                    c.auth.length > 0 &&
                    'string' == typeof c.p256dh &&
                    c.p256dh.length > 0 &&
                    'string' == typeof c.endpoint &&
                    c.endpoint.length > 0 &&
                    'string' == typeof c.swScope &&
                    c.swScope.length > 0 &&
                    'string' == typeof c.vapidKey &&
                    c.vapidKey.length > 0
                );
            }
            const Lr = 'firebase-messaging-store';
            let xi = null;
            function rn() {
                return (
                    xi ||
                        (xi = (0, W.openDb)(
                            'firebase-messaging-database',
                            1,
                            (s) => {
                                0 === s.oldVersion && s.createObjectStore(Lr);
                            }
                        )),
                    xi
                );
            }
            function T(s) {
                return F.apply(this, arguments);
            }
            function F() {
                return (F = (0, G.Z)(function* (s) {
                    const c = Ke(s),
                        A = yield (yield rn())
                            .transaction(Lr)
                            .objectStore(Lr)
                            .get(c);
                    if (A) return A;
                    {
                        const P = yield Pi(s.appConfig.senderId);
                        if (P) return yield b(s, P), P;
                    }
                })).apply(this, arguments);
            }
            function b(s, c) {
                return H.apply(this, arguments);
            }
            function H() {
                return (H = (0, G.Z)(function* (s, c) {
                    const p = Ke(s),
                        P = (yield rn()).transaction(Lr, 'readwrite');
                    return (
                        yield P.objectStore(Lr).put(c, p), yield P.complete, c
                    );
                })).apply(this, arguments);
            }
            function fe(s) {
                return Ve.apply(this, arguments);
            }
            function Ve() {
                return (Ve = (0, G.Z)(function* (s) {
                    const c = Ke(s),
                        A = (yield rn()).transaction(Lr, 'readwrite');
                    yield A.objectStore(Lr).delete(c), yield A.complete;
                })).apply(this, arguments);
            }
            function Ke({ appConfig: s }) {
                return s.appId;
            }
            const Ut = new S.LL('messaging', 'Messaging', {
                'missing-app-config-values':
                    'Missing App configuration value: "{$valueName}"',
                'only-available-in-window':
                    'This method is available in a Window context.',
                'only-available-in-sw':
                    'This method is available in a service worker context.',
                'permission-default':
                    'The notification permission was not granted and dismissed instead.',
                'permission-blocked':
                    'The notification permission was not granted and blocked instead.',
                'unsupported-browser':
                    "This browser doesn't support the API's required to use the Firebase SDK.",
                'indexed-db-unsupported':
                    "This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)",
                'failed-service-worker-registration':
                    'We are unable to register the default service worker. {$browserErrorMessage}',
                'token-subscribe-failed':
                    'A problem occurred while subscribing the user to FCM: {$errorInfo}',
                'token-subscribe-no-token':
                    'FCM returned no token when subscribing the user to push.',
                'token-unsubscribe-failed':
                    'A problem occurred while unsubscribing the user from FCM: {$errorInfo}',
                'token-update-failed':
                    'A problem occurred while updating the user from FCM: {$errorInfo}',
                'token-update-no-token':
                    'FCM returned no token when updating the user to push.',
                'use-sw-after-get-token':
                    'The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.',
                'invalid-sw-registration':
                    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',
                'invalid-bg-handler':
                    'The input to setBackgroundMessageHandler() must be a function.',
                'invalid-vapid-key': 'The public VAPID key must be a string.',
                'use-vapid-key-after-get-token':
                    'The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.',
            });
            function Cn(s, c) {
                return tn.apply(this, arguments);
            }
            function tn() {
                return (tn = (0, G.Z)(function* (s, c) {
                    const p = yield Rr(s),
                        A = hi(c),
                        P = {
                            method: 'POST',
                            headers: p,
                            body: JSON.stringify(A),
                        };
                    let $;
                    try {
                        $ = yield (yield fetch(si(s.appConfig), P)).json();
                    } catch (re) {
                        throw Ut.create('token-subscribe-failed', {
                            errorInfo: re,
                        });
                    }
                    if ($.error)
                        throw Ut.create('token-subscribe-failed', {
                            errorInfo: $.error.message,
                        });
                    if (!$.token) throw Ut.create('token-subscribe-no-token');
                    return $.token;
                })).apply(this, arguments);
            }
            function sn(s, c) {
                return Kn.apply(this, arguments);
            }
            function Kn() {
                return (Kn = (0, G.Z)(function* (s, c) {
                    const p = yield Rr(s),
                        A = hi(c.subscriptionOptions),
                        P = {
                            method: 'PATCH',
                            headers: p,
                            body: JSON.stringify(A),
                        };
                    let $;
                    try {
                        $ = yield (yield fetch(
                            `${si(s.appConfig)}/${c.token}`,
                            P
                        )).json();
                    } catch (re) {
                        throw Ut.create('token-update-failed', {
                            errorInfo: re,
                        });
                    }
                    if ($.error)
                        throw Ut.create('token-update-failed', {
                            errorInfo: $.error.message,
                        });
                    if (!$.token) throw Ut.create('token-update-no-token');
                    return $.token;
                })).apply(this, arguments);
            }
            function Pn(s, c) {
                return Vn.apply(this, arguments);
            }
            function Vn() {
                return (Vn = (0, G.Z)(function* (s, c) {
                    const A = { method: 'DELETE', headers: yield Rr(s) };
                    try {
                        const $ = yield (yield fetch(
                            `${si(s.appConfig)}/${c}`,
                            A
                        )).json();
                        if ($.error)
                            throw Ut.create('token-unsubscribe-failed', {
                                errorInfo: $.error.message,
                            });
                    } catch (P) {
                        throw Ut.create('token-unsubscribe-failed', {
                            errorInfo: P,
                        });
                    }
                })).apply(this, arguments);
            }
            function si({ projectId: s }) {
                return `https://fcmregistrations.googleapis.com/v1/projects/${s}/registrations`;
            }
            function Rr(s) {
                return Lt.apply(this, arguments);
            }
            function Lt() {
                return (Lt = (0, G.Z)(function* ({
                    appConfig: s,
                    installations: c,
                }) {
                    const p = yield c.getToken();
                    return new Headers({
                        'Content-Type': 'application/json',
                        Accept: 'application/json',
                        'x-goog-api-key': s.apiKey,
                        'x-goog-firebase-installations-auth': `FIS ${p}`,
                    });
                })).apply(this, arguments);
            }
            function hi({ p256dh: s, auth: c, endpoint: p, vapidKey: A }) {
                const P = { web: { endpoint: p, auth: c, p256dh: s } };
                return A !== fi && (P.web.applicationPubKey = A), P;
            }
            const is = 6048e5;
            function I(s) {
                return D.apply(this, arguments);
            }
            function D() {
                return (D = (0, G.Z)(function* (s) {
                    const c = yield Rn(s.swRegistration, s.vapidKey),
                        p = {
                            vapidKey: s.vapidKey,
                            swScope: s.swRegistration.scope,
                            endpoint: c.endpoint,
                            auth: Nr(c.getKey('auth')),
                            p256dh: Nr(c.getKey('p256dh')),
                        },
                        A = yield T(s.firebaseDependencies);
                    if (A) {
                        if (pi(A.subscriptionOptions, p))
                            return Date.now() >= A.createTime + is
                                ? He(s, {
                                      token: A.token,
                                      createTime: Date.now(),
                                      subscriptionOptions: p,
                                  })
                                : A.token;
                        try {
                            yield Pn(s.firebaseDependencies, A.token);
                        } catch (P) {
                            console.warn(P);
                        }
                        return Tt(s.firebaseDependencies, p);
                    }
                    return Tt(s.firebaseDependencies, p);
                })).apply(this, arguments);
            }
            function E(s) {
                return N.apply(this, arguments);
            }
            function N() {
                return (N = (0, G.Z)(function* (s) {
                    const c = yield T(s.firebaseDependencies);
                    c &&
                        (yield Pn(s.firebaseDependencies, c.token),
                        yield fe(s.firebaseDependencies));
                    const p =
                        yield s.swRegistration.pushManager.getSubscription();
                    return !p || p.unsubscribe();
                })).apply(this, arguments);
            }
            function He(s, c) {
                return Ae.apply(this, arguments);
            }
            function Ae() {
                return (Ae = (0, G.Z)(function* (s, c) {
                    try {
                        const p = yield sn(s.firebaseDependencies, c),
                            A = Object.assign(Object.assign({}, c), {
                                token: p,
                                createTime: Date.now(),
                            });
                        return yield b(s.firebaseDependencies, A), p;
                    } catch (p) {
                        throw (yield E(s), p);
                    }
                })).apply(this, arguments);
            }
            function Tt(s, c) {
                return yr.apply(this, arguments);
            }
            function yr() {
                return (yr = (0, G.Z)(function* (s, c) {
                    const A = {
                        token: yield Cn(s, c),
                        createTime: Date.now(),
                        subscriptionOptions: c,
                    };
                    return yield b(s, A), A.token;
                })).apply(this, arguments);
            }
            function Rn(s, c) {
                return ei.apply(this, arguments);
            }
            function ei() {
                return (ei = (0, G.Z)(function* (s, c) {
                    return (
                        (yield s.pushManager.getSubscription()) ||
                        s.pushManager.subscribe({
                            userVisibleOnly: !0,
                            applicationServerKey: $r(c),
                        })
                    );
                })).apply(this, arguments);
            }
            function pi(s, c) {
                return (
                    c.vapidKey === s.vapidKey &&
                    c.endpoint === s.endpoint &&
                    c.auth === s.auth &&
                    c.p256dh === s.p256dh
                );
            }
            function Fn(s) {
                const c = {
                    from: s.from,
                    collapseKey: s.collapse_key,
                    messageId: s.fcmMessageId,
                };
                return (
                    (function $i(s, c) {
                        if (!c.notification) return;
                        s.notification = {};
                        const p = c.notification.title;
                        p && (s.notification.title = p);
                        const A = c.notification.body;
                        A && (s.notification.body = A);
                        const P = c.notification.image;
                        P && (s.notification.image = P);
                    })(c, s),
                    (function Gi(s, c) {
                        !c.data || (s.data = c.data);
                    })(c, s),
                    (function mo(s, c) {
                        if (!c.fcmOptions) return;
                        s.fcmOptions = {};
                        const p = c.fcmOptions.link;
                        p && (s.fcmOptions.link = p);
                        const A = c.fcmOptions.analytics_label;
                        A && (s.fcmOptions.analyticsLabel = A);
                    })(c, s),
                    c
                );
            }
            function Lo(s) {
                return 'object' == typeof s && !!s && wr in s;
            }
            function ys(s, c) {
                const p = [];
                for (let A = 0; A < s.length; A++)
                    p.push(s.charAt(A)), A < c.length && p.push(c.charAt(A));
                return p.join('');
            }
            function Sr(s) {
                return Ut.create('missing-app-config-values', { valueName: s });
            }
            ys(
                'hts/frbslgigp.ogepscmv/ieo/eaylg',
                'tp:/ieaeogn-agolai.o/1frlglgc/o'
            ),
                ys('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');
            class Di {
                constructor(c, p, A) {
                    (this.deliveryMetricsExportedToBigQueryEnabled = !1),
                        (this.onBackgroundMessageHandler = null),
                        (this.onMessageHandler = null),
                        (this.logEvents = []),
                        (this.isLogServiceStarted = !1);
                    const P = (function ss(s) {
                        if (!s || !s.options)
                            throw Sr('App Configuration Object');
                        if (!s.name) throw Sr('App Name');
                        const c = [
                                'projectId',
                                'apiKey',
                                'appId',
                                'messagingSenderId',
                            ],
                            { options: p } = s;
                        for (const A of c) if (!p[A]) throw Sr(A);
                        return {
                            appName: s.name,
                            projectId: p.projectId,
                            apiKey: p.apiKey,
                            appId: p.appId,
                            senderId: p.messagingSenderId,
                        };
                    })(c);
                    this.firebaseDependencies = {
                        app: c,
                        appConfig: P,
                        installations: p,
                        analyticsProvider: A,
                    };
                }
                _delete() {
                    return Promise.resolve();
                }
            }
            function os(s) {
                return Ci.apply(this, arguments);
            }
            function Ci() {
                return (Ci = (0, G.Z)(function* (s) {
                    try {
                        (s.swRegistration =
                            yield navigator.serviceWorker.register(ts, {
                                scope: ri,
                            })),
                            s.swRegistration.update().catch(() => {});
                    } catch (c) {
                        throw Ut.create('failed-service-worker-registration', {
                            browserErrorMessage: c.message,
                        });
                    }
                })).apply(this, arguments);
            }
            function gi(s, c) {
                return Ns.apply(this, arguments);
            }
            function Ns() {
                return (Ns = (0, G.Z)(function* (s, c) {
                    if (
                        (!c && !s.swRegistration && (yield os(s)),
                        c || !s.swRegistration)
                    ) {
                        if (!(c instanceof ServiceWorkerRegistration))
                            throw Ut.create('invalid-sw-registration');
                        s.swRegistration = c;
                    }
                })).apply(this, arguments);
            }
            function ro(s, c) {
                return Gr.apply(this, arguments);
            }
            function Gr() {
                return (Gr = (0, G.Z)(function* (s, c) {
                    c ? (s.vapidKey = c) : s.vapidKey || (s.vapidKey = fi);
                })).apply(this, arguments);
            }
            function as() {
                return (as = (0, G.Z)(function* (s, c) {
                    if (!navigator) throw Ut.create('only-available-in-window');
                    if (
                        ('default' === Notification.permission &&
                            (yield Notification.requestPermission()),
                        'granted' !== Notification.permission)
                    )
                        throw Ut.create('permission-blocked');
                    return (
                        yield ro(s, null == c ? void 0 : c.vapidKey),
                        yield gi(
                            s,
                            null == c ? void 0 : c.serviceWorkerRegistration
                        ),
                        I(s)
                    );
                })).apply(this, arguments);
            }
            function yo(s, c, p) {
                return ls.apply(this, arguments);
            }
            function ls() {
                return (ls = (0, G.Z)(function* (s, c, p) {
                    const A = Ls(c);
                    (yield s.firebaseDependencies.analyticsProvider.get()).logEvent(
                        A,
                        {
                            message_id: p[wr],
                            message_name: p[ms],
                            message_time: p[Xr],
                            message_device_time: Math.floor(Date.now() / 1e3),
                        }
                    );
                })).apply(this, arguments);
            }
            function Ls(s) {
                switch (s) {
                    case Hr.NOTIFICATION_CLICKED:
                        return 'notification_open';
                    case Hr.PUSH_RECEIVED:
                        return 'notification_foreground';
                    default:
                        throw new Error();
                }
            }
            function Fi() {
                return (Fi = (0, G.Z)(function* (s, c) {
                    const p = c.data;
                    if (!p.isFirebaseMessaging) return;
                    s.onMessageHandler &&
                        p.messageType === Hr.PUSH_RECEIVED &&
                        ('function' == typeof s.onMessageHandler
                            ? s.onMessageHandler(Fn(p))
                            : s.onMessageHandler.next(Fn(p)));
                    const A = p.data;
                    Lo(A) && '1' === A[ns] && (yield yo(s, p.messageType, A));
                })).apply(this, arguments);
            }
            const _s = '@firebase/messaging',
                ks = (s) => {
                    const c = new Di(
                        s.getProvider('app').getImmediate(),
                        s.getProvider('installations-internal').getImmediate(),
                        s.getProvider('analytics-internal')
                    );
                    return (
                        navigator.serviceWorker.addEventListener(
                            'message',
                            (p) =>
                                (function io(s, c) {
                                    return Fi.apply(this, arguments);
                                })(c, p)
                        ),
                        c
                    );
                },
                _o = (s) => {
                    const c = s.getProvider('messaging').getImmediate();
                    return {
                        getToken: (A) =>
                            (function Wi(s, c) {
                                return as.apply(this, arguments);
                            })(c, A),
                    };
                };
            function vs() {
                return Es.apply(this, arguments);
            }
            function Es() {
                return (Es = (0, G.Z)(function* () {
                    return (
                        'undefined' != typeof window &&
                        (0, S.hl)() &&
                        (yield (0, S.eu)()) &&
                        (0, S.zI)() &&
                        'serviceWorker' in navigator &&
                        'PushManager' in window &&
                        'Notification' in window &&
                        'fetch' in window &&
                        ServiceWorkerRegistration.prototype.hasOwnProperty(
                            'showNotification'
                        ) &&
                        PushSubscription.prototype.hasOwnProperty('getKey')
                    );
                })).apply(this, arguments);
            }
            !(function Bs() {
                (0, j._registerComponent)(new x.wA('messaging', ks, 'PUBLIC')),
                    (0, j._registerComponent)(
                        new x.wA('messaging-internal', _o, 'PRIVATE')
                    ),
                    (0, j.registerVersion)(_s, '0.9.7'),
                    (0, j.registerVersion)(_s, '0.9.7', 'esm2017');
            })();
            const Vs = 'analytics',
                Eo = 'firebase_id',
                Mr =
                    'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig',
                Ds = 'https://www.googletagmanager.com/gtag/js',
                lr = new k.Yd('@firebase/analytics');
            function Hs(s) {
                return Promise.all(s.map((c) => c.catch((p) => p)));
            }
            function oi(s, c) {
                const p = document.createElement('script');
                (p.src = `${Ds}?l=${s}&id=${c}`),
                    (p.async = !0),
                    document.head.appendChild(p);
            }
            function Do(s, c, p, A, P, $) {
                return $s.apply(this, arguments);
            }
            function $s() {
                return ($s = (0, G.Z)(function* (s, c, p, A, P, $) {
                    const re = A[P];
                    try {
                        if (re) yield c[re];
                        else {
                            const Ge = (yield Hs(p)).find(
                                (at) => at.measurementId === P
                            );
                            Ge && (yield c[Ge.appId]);
                        }
                    } catch (ke) {
                        lr.error(ke);
                    }
                    s('config', P, $);
                })).apply(this, arguments);
            }
            function Ni(s, c, p, A, P) {
                return Cs.apply(this, arguments);
            }
            function Cs() {
                return (Cs = (0, G.Z)(function* (s, c, p, A, P) {
                    try {
                        let $ = [];
                        if (P && P.send_to) {
                            let re = P.send_to;
                            Array.isArray(re) || (re = [re]);
                            const ke = yield Hs(p);
                            for (const Ge of re) {
                                const at = ke.find(
                                        (dt) => dt.measurementId === Ge
                                    ),
                                    et = at && c[at.appId];
                                if (!et) {
                                    $ = [];
                                    break;
                                }
                                $.push(et);
                            }
                        }
                        0 === $.length && ($ = Object.values(c)),
                            yield Promise.all($),
                            s('event', A, P || {});
                    } catch ($) {
                        lr.error($);
                    }
                })).apply(this, arguments);
            }
            function To() {
                const s = window.document.getElementsByTagName('script');
                for (const c of Object.values(s))
                    if (c.src && c.src.includes(Ds)) return c;
                return null;
            }
            const ur = new S.LL('analytics', 'Analytics', {
                    'already-exists':
                        'A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.',
                    'already-initialized':
                        'initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.',
                    'already-initialized-settings':
                        'Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.',
                    'interop-component-reg-failed':
                        'Firebase Analytics Interop Component failed to instantiate: {$reason}',
                    'invalid-analytics-context':
                        'Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'indexeddb-unavailable':
                        'IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}',
                    'fetch-throttle':
                        'The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',
                    'config-fetch-failed':
                        'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',
                    'no-api-key':
                        'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',
                    'no-app-id':
                        'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',
                }),
                Li = new (class us {
                    constructor(c = {}, p = 1e3) {
                        (this.throttleMetadata = c), (this.intervalMillis = p);
                    }
                    getThrottleMetadata(c) {
                        return this.throttleMetadata[c];
                    }
                    setThrottleMetadata(c, p) {
                        this.throttleMetadata[c] = p;
                    }
                    deleteThrottleMetadata(c) {
                        delete this.throttleMetadata[c];
                    }
                })();
            function uo(s) {
                return new Headers({
                    Accept: 'application/json',
                    'x-goog-api-key': s,
                });
            }
            function cs(s) {
                return co.apply(this, arguments);
            }
            function co() {
                return (co = (0, G.Z)(function* (s) {
                    var c;
                    const { appId: p, apiKey: A } = s,
                        P = { method: 'GET', headers: uo(A) },
                        $ = Mr.replace('{app-id}', p),
                        re = yield fetch($, P);
                    if (200 !== re.status && 304 !== re.status) {
                        let ke = '';
                        try {
                            const Ge = yield re.json();
                            (null === (c = Ge.error) || void 0 === c
                                ? void 0
                                : c.message) && (ke = Ge.error.message);
                        } catch (Ge) {}
                        throw ur.create('config-fetch-failed', {
                            httpStatus: re.status,
                            responseMessage: ke,
                        });
                    }
                    return re.json();
                })).apply(this, arguments);
            }
            function zi(s) {
                return bs.apply(this, arguments);
            }
            function bs() {
                return (bs = (0, G.Z)(function* (s, c = Li, p) {
                    const { appId: A, apiKey: P, measurementId: $ } = s.options;
                    if (!A) throw ur.create('no-app-id');
                    if (!P) {
                        if ($) return { measurementId: $, appId: A };
                        throw ur.create('no-api-key');
                    }
                    const re = c.getThrottleMetadata(A) || {
                            backoffCount: 0,
                            throttleEndTimeMillis: Date.now(),
                        },
                        ke = new Vo();
                    return (
                        setTimeout(
                            (0, G.Z)(function* () {
                                ke.abort();
                            }),
                            void 0 !== p ? p : 6e4
                        ),
                        Ts({ appId: A, apiKey: P, measurementId: $ }, re, ke, c)
                    );
                })).apply(this, arguments);
            }
            function Ts(s, c, p) {
                return Ao.apply(this, arguments);
            }
            function Ao() {
                return (Ao = (0, G.Z)(function* (
                    s,
                    { throttleEndTimeMillis: c, backoffCount: p },
                    A,
                    P = Li
                ) {
                    const { appId: $, measurementId: re } = s;
                    try {
                        yield Gs(A, c);
                    } catch (ke) {
                        if (re)
                            return (
                                lr.warn(
                                    `Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${re} provided in the "measurementId" field in the local Firebase config. [${ke.message}]`
                                ),
                                { appId: $, measurementId: re }
                            );
                        throw ke;
                    }
                    try {
                        const ke = yield cs(s);
                        return P.deleteThrottleMetadata($), ke;
                    } catch (ke) {
                        if (!wo(ke)) {
                            if ((P.deleteThrottleMetadata($), re))
                                return (
                                    lr.warn(
                                        `Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${re} provided in the "measurementId" field in the local Firebase config. [${ke.message}]`
                                    ),
                                    { appId: $, measurementId: re }
                                );
                            throw ke;
                        }
                        const Ge =
                                503 === Number(ke.customData.httpStatus)
                                    ? (0, S.$s)(p, P.intervalMillis, 30)
                                    : (0, S.$s)(p, P.intervalMillis),
                            at = {
                                throttleEndTimeMillis: Date.now() + Ge,
                                backoffCount: p + 1,
                            };
                        return (
                            P.setThrottleMetadata($, at),
                            lr.debug(
                                `Calling attemptFetch again in ${Ge} millis`
                            ),
                            Ts(s, at, A, P)
                        );
                    }
                })).apply(this, arguments);
            }
            function Gs(s, c) {
                return new Promise((p, A) => {
                    const P = Math.max(c - Date.now(), 0),
                        $ = setTimeout(p, P);
                    s.addEventListener(() => {
                        clearTimeout($),
                            A(
                                ur.create('fetch-throttle', {
                                    throttleEndTimeMillis: c,
                                })
                            );
                    });
                });
            }
            function wo(s) {
                if (!(s instanceof S.ZR && s.customData)) return !1;
                const c = Number(s.customData.httpStatus);
                return 429 === c || 500 === c || 503 === c || 504 === c;
            }
            class Vo {
                constructor() {
                    this.listeners = [];
                }
                addEventListener(c) {
                    this.listeners.push(c);
                }
                abort() {
                    this.listeners.forEach((c) => c());
                }
            }
            function Uo() {
                return Ki.apply(this, arguments);
            }
            function Ki() {
                return (Ki = (0, G.Z)(function* () {
                    if (!(0, S.hl)())
                        return (
                            lr.warn(
                                ur.create('indexeddb-unavailable', {
                                    errorInfo:
                                        'IndexedDB is not available in this environment.',
                                }).message
                            ),
                            !1
                        );
                    try {
                        yield (0, S.eu)();
                    } catch (s) {
                        return (
                            lr.warn(
                                ur.create('indexeddb-unavailable', {
                                    errorInfo: s,
                                }).message
                            ),
                            !1
                        );
                    }
                    return !0;
                })).apply(this, arguments);
            }
            function y() {
                return (y = (0, G.Z)(function* (s, c, p, A, P, $, re) {
                    var ke;
                    const Ge = zi(s);
                    Ge.then((zt) => {
                        (p[zt.measurementId] = zt.appId),
                            s.options.measurementId &&
                                zt.measurementId !== s.options.measurementId &&
                                lr.warn(
                                    `The measurement ID in the local Firebase config (${s.options.measurementId}) does not match the measurement ID fetched from the server (${zt.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`
                                );
                    }).catch((zt) => lr.error(zt)),
                        c.push(Ge);
                    const at = Uo().then((zt) => {
                            if (zt) return A.getId();
                        }),
                        [et, dt] = yield Promise.all([Ge, at]);
                    To() || oi($, et.measurementId), P('js', new Date());
                    const gt =
                        null !== (ke = null == re ? void 0 : re.config) &&
                        void 0 !== ke
                            ? ke
                            : {};
                    return (
                        (gt.origin = 'firebase'),
                        (gt.update = !0),
                        null != dt && (gt[Eo] = dt),
                        P('config', et.measurementId, gt),
                        et.measurementId
                    );
                })).apply(this, arguments);
            }
            class h {
                constructor(c) {
                    this.app = c;
                }
                _delete() {
                    return delete f[this.app.options.appId], Promise.resolve();
                }
            }
            let f = {},
                C = [];
            const M = {};
            let ue,
                Ue,
                L = 'dataLayer',
                Dt = !1;
            function Un(s, c, p) {
                !(function It() {
                    const s = [];
                    if (
                        ((0, S.ru)() &&
                            s.push('This is a browser extension environment.'),
                        (0, S.zI)() || s.push('Cookies are not available.'),
                        s.length > 0)
                    ) {
                        const c = s.map((A, P) => `(${P + 1}) ${A}`).join(' '),
                            p = ur.create('invalid-analytics-context', {
                                errorInfo: c,
                            });
                        lr.warn(p.message);
                    }
                })();
                const A = s.options.appId;
                if (!A) throw ur.create('no-app-id');
                if (!s.options.apiKey) {
                    if (!s.options.measurementId) throw ur.create('no-api-key');
                    lr.warn(
                        `The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${s.options.measurementId} provided in the "measurementId" field in the local Firebase config.`
                    );
                }
                if (null != f[A]) throw ur.create('already-exists', { id: A });
                if (!Dt) {
                    !(function Ti(s) {
                        let c = [];
                        Array.isArray(window[s])
                            ? (c = window[s])
                            : (window[s] = c);
                    })(L);
                    const { wrappedGtag: $, gtagCore: re } = (function bo(
                        s,
                        c,
                        p,
                        A,
                        P
                    ) {
                        let $ = function (...re) {
                            window[A].push(arguments);
                        };
                        return (
                            window[P] &&
                                'function' == typeof window[P] &&
                                ($ = window[P]),
                            (window[P] = (function Co(s, c, p, A) {
                                function $() {
                                    return ($ = (0, G.Z)(function* (
                                        re,
                                        ke,
                                        Ge
                                    ) {
                                        try {
                                            'event' === re
                                                ? yield Ni(s, c, p, ke, Ge)
                                                : 'config' === re
                                                ? yield Do(s, c, p, A, ke, Ge)
                                                : s('set', ke);
                                        } catch (at) {
                                            lr.error(at);
                                        }
                                    })).apply(this, arguments);
                                }
                                return function P(re, ke, Ge) {
                                    return $.apply(this, arguments);
                                };
                            })($, s, c, p)),
                            { gtagCore: $, wrappedGtag: window[P] }
                        );
                    })(f, C, M, L, 'gtag');
                    (Ue = $), (ue = re), (Dt = !0);
                }
                return (
                    (f[A] = (function So(s, c, p, A, P, $, re) {
                        return y.apply(this, arguments);
                    })(s, C, M, c, ue, L, p)),
                    new h(s)
                );
            }
            function ki() {
                return (ki = (0, G.Z)(function* (s, c, p, A, P) {
                    if (P && P.global) s('event', p, A);
                    else {
                        const $ = yield c;
                        s(
                            'event',
                            p,
                            Object.assign(Object.assign({}, A), { send_to: $ })
                        );
                    }
                })).apply(this, arguments);
            }
            function Io() {
                return fr.apply(this, arguments);
            }
            function fr() {
                return (fr = (0, G.Z)(function* () {
                    if ((0, S.ru)() || !(0, S.zI)() || !(0, S.hl)()) return !1;
                    try {
                        return yield (0, S.eu)();
                    } catch (s) {
                        return !1;
                    }
                })).apply(this, arguments);
            }
            const Oa = '@firebase/analytics';
            !(function ea() {
                (0, j._registerComponent)(
                    new x.wA(
                        Vs,
                        (c, { options: p }) =>
                            Un(
                                c.getProvider('app').getImmediate(),
                                c
                                    .getProvider('installations-internal')
                                    .getImmediate(),
                                p
                            ),
                        'PUBLIC'
                    )
                ),
                    (0, j._registerComponent)(
                        new x.wA(
                            'analytics-internal',
                            function s(c) {
                                try {
                                    const p = c.getProvider(Vs).getImmediate();
                                    return {
                                        logEvent: (A, P, $) =>
                                            (function Jo(s, c, p, A) {
                                                (s = (0, S.m9)(s)),
                                                    (function jn(
                                                        s,
                                                        c,
                                                        p,
                                                        A,
                                                        P
                                                    ) {
                                                        return ki.apply(
                                                            this,
                                                            arguments
                                                        );
                                                    })(
                                                        Ue,
                                                        f[s.app.options.appId],
                                                        c,
                                                        p,
                                                        A
                                                    ).catch((P) => lr.error(P));
                                            })(p, A, P, $),
                                    };
                                } catch (p) {
                                    throw ur.create(
                                        'interop-component-reg-failed',
                                        { reason: p }
                                    );
                                }
                            },
                            'PRIVATE'
                        )
                    ),
                    (0, j.registerVersion)(Oa, '0.7.5'),
                    (0, j.registerVersion)(Oa, '0.7.5', 'esm2017');
            })();
            var ho = _(233),
                Yl = _(4986),
                xr = _(8505),
                ta = _(9468),
                Mo = _(5363);
            const Zl = new l.GfV('7.2.0'),
                ai = '__angularfire_symbol__analyticsIsSupported',
                Oo = '__angularfire_symbol__remoteConfigIsSupported',
                Qi = '__angularfire_symbol__messagingIsSupported';
            function dl(s, c, p) {
                if (c) {
                    if (1 === c.length) return c[0];
                    const $ = c.filter((re) => re.app === p);
                    if (1 === $.length) return $[0];
                }
                return p.container
                    .getProvider(s)
                    .getImmediate({ optional: !0 });
            }
            globalThis[ai] ||
                (globalThis[ai] = Io().then(
                    (s) =>
                        (globalThis.__angularfire_symbol__analyticsIsSupportedValue =
                            s)
                )),
                globalThis[Qi] ||
                    (globalThis[Qi] = vs().then(
                        (s) =>
                            (globalThis.__angularfire_symbol__messagingIsSupportedValue =
                                s)
                    )),
                globalThis[Oo] ||
                    (globalThis[Oo] = Oi().then(
                        (s) =>
                            (globalThis.__angularfire_symbol__remoteConfigIsSupportedValue =
                                s)
                    ));
            const Fa = (s, c) => {
                const p = c ? [c] : (0, w.C6)(),
                    A = [];
                return (
                    p.forEach((P) => {
                        P.container.getProvider(s).instances.forEach((re) => {
                            A.includes(re) || A.push(re);
                        });
                    }),
                    A
                );
            };
            function Br() {}
            class Po {
                constructor(c, p = ho.N) {
                    (this.zone = c), (this.delegate = p);
                }
                now() {
                    return this.delegate.now();
                }
                schedule(c, p, A) {
                    const P = this.zone;
                    return this.delegate.schedule(
                        function (re) {
                            P.runGuarded(() => {
                                c.apply(this, [re]);
                            });
                        },
                        p,
                        A
                    );
                }
            }
            class Ys {
                constructor(c) {
                    (this.zone = c), (this.task = null);
                }
                call(c, p) {
                    const A = this.unscheduleTask.bind(this);
                    return (
                        (this.task = this.zone.run(() =>
                            Zone.current.scheduleMacroTask(
                                'firebaseZoneBlock',
                                Br,
                                {},
                                Br,
                                Br
                            )
                        )),
                        p
                            .pipe((0, xr.b)({ next: A, complete: A, error: A }))
                            .subscribe(c)
                            .add(A)
                    );
                }
                unscheduleTask() {
                    setTimeout(() => {
                        null != this.task &&
                            'scheduled' === this.task.state &&
                            (this.task.invoke(), (this.task = null));
                    }, 10);
                }
            }
            let Ql = (() => {
                class s {
                    constructor(p) {
                        (this.ngZone = p),
                            (this.outsideAngular = p.runOutsideAngular(
                                () => new Po(Zone.current)
                            )),
                            (this.insideAngular = p.run(
                                () => new Po(Zone.current, Yl.z)
                            )),
                            globalThis.ɵAngularFireScheduler ||
                                (globalThis.ɵAngularFireScheduler = this);
                    }
                }
                return (
                    (s.ɵfac = function (p) {
                        return new (p || s)(l.LFG(l.R0b));
                    }),
                    (s.ɵprov = l.Yz7({
                        token: s,
                        factory: s.ɵfac,
                        providedIn: 'root',
                    })),
                    s
                );
            })();
            function As() {
                const s = globalThis.ɵAngularFireScheduler;
                if (!s)
                    throw new Error(
                        "Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported)."
                    );
                return s;
            }
            function na(s) {
                return (
                    As(),
                    (function m(s) {
                        return function (p) {
                            return (p = p.lift(new Ys(s.ngZone))).pipe(
                                (0, ta.R)(s.outsideAngular),
                                (0, Mo.Q)(s.insideAngular)
                            );
                        };
                    })(As())(s)
                );
            }
        },
        2090: (de, z, _) => {
            'use strict';
            _.d(z, {
                BH: () => De,
                LL: () => ye,
                ZR: () => be,
                zI: () => Pe,
                US: () => x,
                tV: () => B,
                $s: () => nn,
                r3: () => wn,
                ne: () => ot,
                vZ: () => qt,
                ZB: () => U,
                pd: () => q,
                m9: () => Dr,
                z$: () => _e,
                jU: () => X,
                ru: () => Ce,
                xb: () => Kt,
                w1: () => ie,
                hl: () => it,
                uI: () => Se,
                UG: () => Z,
                b$: () => ae,
                xO: () => Fe,
                zd: () => Ye,
                eu: () => ne,
            });
            const x = {
                    byteToCharMap_: null,
                    charToByteMap_: null,
                    byteToCharMapWebSafe_: null,
                    charToByteMapWebSafe_: null,
                    ENCODED_VALS_BASE:
                        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
                    get ENCODED_VALS() {
                        return this.ENCODED_VALS_BASE + '+/=';
                    },
                    get ENCODED_VALS_WEBSAFE() {
                        return this.ENCODED_VALS_BASE + '-_.';
                    },
                    HAS_NATIVE_SUPPORT: 'function' == typeof atob,
                    encodeByteArray(te, ce) {
                        if (!Array.isArray(te))
                            throw Error(
                                'encodeByteArray takes an array as a parameter'
                            );
                        this.init_();
                        const oe = ce
                                ? this.byteToCharMapWebSafe_
                                : this.byteToCharMap_,
                            je = [];
                        for (let Ie = 0; Ie < te.length; Ie += 3) {
                            const ft = te[Ie],
                                pe = Ie + 1 < te.length,
                                Ne = pe ? te[Ie + 1] : 0,
                                Be = Ie + 2 < te.length,
                                Qe = Be ? te[Ie + 2] : 0;
                            let en = ((15 & Ne) << 2) | (Qe >> 6),
                                on = 63 & Qe;
                            Be || ((on = 64), pe || (en = 64)),
                                je.push(
                                    oe[ft >> 2],
                                    oe[((3 & ft) << 4) | (Ne >> 4)],
                                    oe[en],
                                    oe[on]
                                );
                        }
                        return je.join('');
                    },
                    encodeString(te, ce) {
                        return this.HAS_NATIVE_SUPPORT && !ce
                            ? btoa(te)
                            : this.encodeByteArray(
                                  (function (te) {
                                      const ce = [];
                                      let oe = 0;
                                      for (let je = 0; je < te.length; je++) {
                                          let Ie = te.charCodeAt(je);
                                          Ie < 128
                                              ? (ce[oe++] = Ie)
                                              : Ie < 2048
                                              ? ((ce[oe++] = (Ie >> 6) | 192),
                                                (ce[oe++] = (63 & Ie) | 128))
                                              : 55296 == (64512 & Ie) &&
                                                je + 1 < te.length &&
                                                56320 ==
                                                    (64512 &
                                                        te.charCodeAt(je + 1))
                                              ? ((Ie =
                                                    65536 +
                                                    ((1023 & Ie) << 10) +
                                                    (1023 &
                                                        te.charCodeAt(++je))),
                                                (ce[oe++] = (Ie >> 18) | 240),
                                                (ce[oe++] =
                                                    ((Ie >> 12) & 63) | 128),
                                                (ce[oe++] =
                                                    ((Ie >> 6) & 63) | 128),
                                                (ce[oe++] = (63 & Ie) | 128))
                                              : ((ce[oe++] = (Ie >> 12) | 224),
                                                (ce[oe++] =
                                                    ((Ie >> 6) & 63) | 128),
                                                (ce[oe++] = (63 & Ie) | 128));
                                      }
                                      return ce;
                                  })(te),
                                  ce
                              );
                    },
                    decodeString(te, ce) {
                        return this.HAS_NATIVE_SUPPORT && !ce
                            ? atob(te)
                            : (function (te) {
                                  const ce = [];
                                  let oe = 0,
                                      je = 0;
                                  for (; oe < te.length; ) {
                                      const Ie = te[oe++];
                                      if (Ie < 128)
                                          ce[je++] = String.fromCharCode(Ie);
                                      else if (Ie > 191 && Ie < 224) {
                                          const ft = te[oe++];
                                          ce[je++] = String.fromCharCode(
                                              ((31 & Ie) << 6) | (63 & ft)
                                          );
                                      } else if (Ie > 239 && Ie < 365) {
                                          const Be =
                                              (((7 & Ie) << 18) |
                                                  ((63 & te[oe++]) << 12) |
                                                  ((63 & te[oe++]) << 6) |
                                                  (63 & te[oe++])) -
                                              65536;
                                          (ce[je++] = String.fromCharCode(
                                              55296 + (Be >> 10)
                                          )),
                                              (ce[je++] = String.fromCharCode(
                                                  56320 + (1023 & Be)
                                              ));
                                      } else {
                                          const ft = te[oe++],
                                              pe = te[oe++];
                                          ce[je++] = String.fromCharCode(
                                              ((15 & Ie) << 12) |
                                                  ((63 & ft) << 6) |
                                                  (63 & pe)
                                          );
                                      }
                                  }
                                  return ce.join('');
                              })(this.decodeStringToByteArray(te, ce));
                    },
                    decodeStringToByteArray(te, ce) {
                        this.init_();
                        const oe = ce
                                ? this.charToByteMapWebSafe_
                                : this.charToByteMap_,
                            je = [];
                        for (let Ie = 0; Ie < te.length; ) {
                            const ft = oe[te.charAt(Ie++)],
                                Ne = Ie < te.length ? oe[te.charAt(Ie)] : 0;
                            ++Ie;
                            const Qe = Ie < te.length ? oe[te.charAt(Ie)] : 64;
                            ++Ie;
                            const ct = Ie < te.length ? oe[te.charAt(Ie)] : 64;
                            if (
                                (++Ie,
                                null == ft ||
                                    null == Ne ||
                                    null == Qe ||
                                    null == ct)
                            )
                                throw Error();
                            je.push((ft << 2) | (Ne >> 4)),
                                64 !== Qe &&
                                    (je.push(((Ne << 4) & 240) | (Qe >> 2)),
                                    64 !== ct &&
                                        je.push(((Qe << 6) & 192) | ct));
                        }
                        return je;
                    },
                    init_() {
                        if (!this.byteToCharMap_) {
                            (this.byteToCharMap_ = {}),
                                (this.charToByteMap_ = {}),
                                (this.byteToCharMapWebSafe_ = {}),
                                (this.charToByteMapWebSafe_ = {});
                            for (
                                let te = 0;
                                te < this.ENCODED_VALS.length;
                                te++
                            )
                                (this.byteToCharMap_[te] =
                                    this.ENCODED_VALS.charAt(te)),
                                    (this.charToByteMap_[
                                        this.byteToCharMap_[te]
                                    ] = te),
                                    (this.byteToCharMapWebSafe_[te] =
                                        this.ENCODED_VALS_WEBSAFE.charAt(te)),
                                    (this.charToByteMapWebSafe_[
                                        this.byteToCharMapWebSafe_[te]
                                    ] = te),
                                    te >= this.ENCODED_VALS_BASE.length &&
                                        ((this.charToByteMap_[
                                            this.ENCODED_VALS_WEBSAFE.charAt(te)
                                        ] = te),
                                        (this.charToByteMapWebSafe_[
                                            this.ENCODED_VALS.charAt(te)
                                        ] = te));
                        }
                    },
                },
                B = function (te) {
                    try {
                        return x.decodeString(te, !0);
                    } catch (ce) {
                        console.error('base64Decode failed: ', ce);
                    }
                    return null;
                };
            function U(te, ce) {
                if (!(ce instanceof Object)) return ce;
                switch (ce.constructor) {
                    case Date:
                        return new Date(ce.getTime());
                    case Object:
                        void 0 === te && (te = {});
                        break;
                    case Array:
                        te = [];
                        break;
                    default:
                        return ce;
                }
                for (const oe in ce)
                    !ce.hasOwnProperty(oe) ||
                        !Q(oe) ||
                        (te[oe] = U(te[oe], ce[oe]));
                return te;
            }
            function Q(te) {
                return '__proto__' !== te;
            }
            class De {
                constructor() {
                    (this.reject = () => {}),
                        (this.resolve = () => {}),
                        (this.promise = new Promise((ce, oe) => {
                            (this.resolve = ce), (this.reject = oe);
                        }));
                }
                wrapCallback(ce) {
                    return (oe, je) => {
                        oe ? this.reject(oe) : this.resolve(je),
                            'function' == typeof ce &&
                                (this.promise.catch(() => {}),
                                1 === ce.length ? ce(oe) : ce(oe, je));
                    };
                }
            }
            function _e() {
                return 'undefined' != typeof navigator &&
                    'string' == typeof navigator.userAgent
                    ? navigator.userAgent
                    : '';
            }
            function Se() {
                return (
                    'undefined' != typeof window &&
                    !!(window.cordova || window.phonegap || window.PhoneGap) &&
                    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(
                        _e()
                    )
                );
            }
            function Z() {
                try {
                    return (
                        '[object process]' ===
                        Object.prototype.toString.call(global.process)
                    );
                } catch (te) {
                    return !1;
                }
            }
            function X() {
                return 'object' == typeof self && self.self === self;
            }
            function Ce() {
                const te =
                    'object' == typeof chrome
                        ? chrome.runtime
                        : 'object' == typeof browser
                        ? browser.runtime
                        : void 0;
                return 'object' == typeof te && void 0 !== te.id;
            }
            function ae() {
                return (
                    'object' == typeof navigator &&
                    'ReactNative' === navigator.product
                );
            }
            function ie() {
                const te = _e();
                return te.indexOf('MSIE ') >= 0 || te.indexOf('Trident/') >= 0;
            }
            function it() {
                return 'object' == typeof indexedDB;
            }
            function ne() {
                return new Promise((te, ce) => {
                    try {
                        let oe = !0;
                        const je =
                                'validate-browser-context-for-indexeddb-analytics-module',
                            Ie = self.indexedDB.open(je);
                        (Ie.onsuccess = () => {
                            Ie.result.close(),
                                oe || self.indexedDB.deleteDatabase(je),
                                te(!0);
                        }),
                            (Ie.onupgradeneeded = () => {
                                oe = !1;
                            }),
                            (Ie.onerror = () => {
                                var ft;
                                ce(
                                    (null === (ft = Ie.error) || void 0 === ft
                                        ? void 0
                                        : ft.message) || ''
                                );
                            });
                    } catch (oe) {
                        ce(oe);
                    }
                });
            }
            function Pe() {
                return !(
                    'undefined' == typeof navigator || !navigator.cookieEnabled
                );
            }
            class be extends Error {
                constructor(ce, oe, je) {
                    super(oe),
                        (this.code = ce),
                        (this.customData = je),
                        (this.name = 'FirebaseError'),
                        Object.setPrototypeOf(this, be.prototype),
                        Error.captureStackTrace &&
                            Error.captureStackTrace(this, ye.prototype.create);
                }
            }
            class ye {
                constructor(ce, oe, je) {
                    (this.service = ce),
                        (this.serviceName = oe),
                        (this.errors = je);
                }
                create(ce, ...oe) {
                    const je = oe[0] || {},
                        Ie = `${this.service}/${ce}`,
                        ft = this.errors[ce],
                        pe = ft
                            ? (function ut(te, ce) {
                                  return te.replace(Pt, (oe, je) => {
                                      const Ie = ce[je];
                                      return null != Ie
                                          ? String(Ie)
                                          : `<${je}?>`;
                                  });
                              })(ft, je)
                            : 'Error';
                    return new be(
                        Ie,
                        `${this.serviceName}: ${pe} (${Ie}).`,
                        je
                    );
                }
            }
            const Pt = /\{\$([^}]+)}/g;
            function wn(te, ce) {
                return Object.prototype.hasOwnProperty.call(te, ce);
            }
            function Kt(te) {
                for (const ce in te)
                    if (Object.prototype.hasOwnProperty.call(te, ce)) return !1;
                return !0;
            }
            function qt(te, ce) {
                if (te === ce) return !0;
                const oe = Object.keys(te),
                    je = Object.keys(ce);
                for (const Ie of oe) {
                    if (!je.includes(Ie)) return !1;
                    const ft = te[Ie],
                        pe = ce[Ie];
                    if (Hn(ft) && Hn(pe)) {
                        if (!qt(ft, pe)) return !1;
                    } else if (ft !== pe) return !1;
                }
                for (const Ie of je) if (!oe.includes(Ie)) return !1;
                return !0;
            }
            function Hn(te) {
                return null !== te && 'object' == typeof te;
            }
            function Fe(te) {
                const ce = [];
                for (const [oe, je] of Object.entries(te))
                    Array.isArray(je)
                        ? je.forEach((Ie) => {
                              ce.push(
                                  encodeURIComponent(oe) +
                                      '=' +
                                      encodeURIComponent(Ie)
                              );
                          })
                        : ce.push(
                              encodeURIComponent(oe) +
                                  '=' +
                                  encodeURIComponent(je)
                          );
                return ce.length ? '&' + ce.join('&') : '';
            }
            function Ye(te) {
                const ce = {};
                return (
                    te
                        .replace(/^\?/, '')
                        .split('&')
                        .forEach((je) => {
                            if (je) {
                                const [Ie, ft] = je.split('=');
                                ce[decodeURIComponent(Ie)] =
                                    decodeURIComponent(ft);
                            }
                        }),
                    ce
                );
            }
            function q(te) {
                const ce = te.indexOf('?');
                if (!ce) return '';
                const oe = te.indexOf('#', ce);
                return te.substring(ce, oe > 0 ? oe : void 0);
            }
            function ot(te, ce) {
                const oe = new We(te, ce);
                return oe.subscribe.bind(oe);
            }
            class We {
                constructor(ce, oe) {
                    (this.observers = []),
                        (this.unsubscribes = []),
                        (this.observerCount = 0),
                        (this.task = Promise.resolve()),
                        (this.finalized = !1),
                        (this.onNoObservers = oe),
                        this.task
                            .then(() => {
                                ce(this);
                            })
                            .catch((je) => {
                                this.error(je);
                            });
                }
                next(ce) {
                    this.forEachObserver((oe) => {
                        oe.next(ce);
                    });
                }
                error(ce) {
                    this.forEachObserver((oe) => {
                        oe.error(ce);
                    }),
                        this.close(ce);
                }
                complete() {
                    this.forEachObserver((ce) => {
                        ce.complete();
                    }),
                        this.close();
                }
                subscribe(ce, oe, je) {
                    let Ie;
                    if (void 0 === ce && void 0 === oe && void 0 === je)
                        throw new Error('Missing Observer.');
                    (Ie = (function jt(te, ce) {
                        if ('object' != typeof te || null === te) return !1;
                        for (const oe of ce)
                            if (oe in te && 'function' == typeof te[oe])
                                return !0;
                        return !1;
                    })(ce, ['next', 'error', 'complete'])
                        ? ce
                        : { next: ce, error: oe, complete: je }),
                        void 0 === Ie.next && (Ie.next = xt),
                        void 0 === Ie.error && (Ie.error = xt),
                        void 0 === Ie.complete && (Ie.complete = xt);
                    const ft = this.unsubscribeOne.bind(
                        this,
                        this.observers.length
                    );
                    return (
                        this.finalized &&
                            this.task.then(() => {
                                try {
                                    this.finalError
                                        ? Ie.error(this.finalError)
                                        : Ie.complete();
                                } catch (pe) {}
                            }),
                        this.observers.push(Ie),
                        ft
                    );
                }
                unsubscribeOne(ce) {
                    void 0 === this.observers ||
                        void 0 === this.observers[ce] ||
                        (delete this.observers[ce],
                        (this.observerCount -= 1),
                        0 === this.observerCount &&
                            void 0 !== this.onNoObservers &&
                            this.onNoObservers(this));
                }
                forEachObserver(ce) {
                    if (!this.finalized)
                        for (let oe = 0; oe < this.observers.length; oe++)
                            this.sendOne(oe, ce);
                }
                sendOne(ce, oe) {
                    this.task.then(() => {
                        if (
                            void 0 !== this.observers &&
                            void 0 !== this.observers[ce]
                        )
                            try {
                                oe(this.observers[ce]);
                            } catch (je) {
                                'undefined' != typeof console &&
                                    console.error &&
                                    console.error(je);
                            }
                    });
                }
                close(ce) {
                    this.finalized ||
                        ((this.finalized = !0),
                        void 0 !== ce && (this.finalError = ce),
                        this.task.then(() => {
                            (this.observers = void 0),
                                (this.onNoObservers = void 0);
                        }));
                }
            }
            function xt() {}
            function nn(te, ce = 1e3, oe = 2) {
                const je = ce * Math.pow(oe, te),
                    Ie = Math.round(0.5 * je * (Math.random() - 0.5) * 2);
                return Math.min(144e5, je + Ie);
            }
            function Dr(te) {
                return te && te._delegate ? te._delegate : te;
            }
        },
        7556: (de, z, _) => {
            'use strict';
            var l = _(9808),
                w = _(5e3);
            class G extends l.w_ {
                constructor() {
                    super(...arguments), (this.supportsDOMEvents = !0);
                }
            }
            class j extends G {
                static makeCurrent() {
                    (0, l.HT)(new j());
                }
                onAndCancel(a, o, s) {
                    return (
                        a.addEventListener(o, s, !1),
                        () => {
                            a.removeEventListener(o, s, !1);
                        }
                    );
                }
                dispatchEvent(a, o) {
                    a.dispatchEvent(o);
                }
                remove(a) {
                    a.parentNode && a.parentNode.removeChild(a);
                }
                createElement(a, o) {
                    return (o = o || this.getDefaultDocument()).createElement(
                        a
                    );
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument(
                        'fakeTitle'
                    );
                }
                getDefaultDocument() {
                    return document;
                }
                isElementNode(a) {
                    return a.nodeType === Node.ELEMENT_NODE;
                }
                isShadowRoot(a) {
                    return a instanceof DocumentFragment;
                }
                getGlobalEventTarget(a, o) {
                    return 'window' === o
                        ? window
                        : 'document' === o
                        ? a
                        : 'body' === o
                        ? a.body
                        : null;
                }
                getBaseHref(a) {
                    const o = (function x() {
                        return (
                            (S = S || document.querySelector('base')),
                            S ? S.getAttribute('href') : null
                        );
                    })();
                    return null == o
                        ? null
                        : (function W(m) {
                              (k = k || document.createElement('a')),
                                  k.setAttribute('href', m);
                              const a = k.pathname;
                              return '/' === a.charAt(0) ? a : `/${a}`;
                          })(o);
                }
                resetBaseElement() {
                    S = null;
                }
                getUserAgent() {
                    return window.navigator.userAgent;
                }
                getCookie(a) {
                    return (0, l.Mx)(document.cookie, a);
                }
            }
            let k,
                S = null;
            const B = new w.OlP('TRANSITION_ID'),
                U = [
                    {
                        provide: w.ip1,
                        useFactory: function V(m, a, o) {
                            return () => {
                                o.get(w.CZH).donePromise.then(() => {
                                    const s = (0, l.q)(),
                                        c = a.querySelectorAll(
                                            `style[ng-transition="${m}"]`
                                        );
                                    for (let p = 0; p < c.length; p++)
                                        s.remove(c[p]);
                                });
                            };
                        },
                        deps: [B, l.K0, w.zs3],
                        multi: !0,
                    },
                ];
            class Q {
                static init() {
                    (0, w.VLi)(new Q());
                }
                addToWindow(a) {
                    (w.dqk.getAngularTestability = (s, c = !0) => {
                        const p = a.findTestabilityInTree(s, c);
                        if (null == p)
                            throw new Error(
                                'Could not find testability for element.'
                            );
                        return p;
                    }),
                        (w.dqk.getAllAngularTestabilities = () =>
                            a.getAllTestabilities()),
                        (w.dqk.getAllAngularRootElements = () =>
                            a.getAllRootElements()),
                        w.dqk.frameworkStabilizers ||
                            (w.dqk.frameworkStabilizers = []),
                        w.dqk.frameworkStabilizers.push((s) => {
                            const c = w.dqk.getAllAngularTestabilities();
                            let p = c.length,
                                A = !1;
                            const P = function ($) {
                                (A = A || $), p--, 0 == p && s(A);
                            };
                            c.forEach(function ($) {
                                $.whenStable(P);
                            });
                        });
                }
                findTestabilityInTree(a, o, s) {
                    if (null == o) return null;
                    const c = a.getTestability(o);
                    return null != c
                        ? c
                        : s
                        ? (0, l.q)().isShadowRoot(o)
                            ? this.findTestabilityInTree(a, o.host, !0)
                            : this.findTestabilityInTree(a, o.parentElement, !0)
                        : null;
                }
            }
            let De = (() => {
                class m {
                    build() {
                        return new XMLHttpRequest();
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)();
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            const Ee = new w.OlP('EventManagerPlugins');
            let _e = (() => {
                class m {
                    constructor(o, s) {
                        (this._zone = s),
                            (this._eventNameToPlugin = new Map()),
                            o.forEach((c) => (c.manager = this)),
                            (this._plugins = o.slice().reverse());
                    }
                    addEventListener(o, s, c) {
                        return this._findPluginFor(s).addEventListener(o, s, c);
                    }
                    addGlobalEventListener(o, s, c) {
                        return this._findPluginFor(s).addGlobalEventListener(
                            o,
                            s,
                            c
                        );
                    }
                    getZone() {
                        return this._zone;
                    }
                    _findPluginFor(o) {
                        const s = this._eventNameToPlugin.get(o);
                        if (s) return s;
                        const c = this._plugins;
                        for (let p = 0; p < c.length; p++) {
                            const A = c[p];
                            if (A.supports(o))
                                return this._eventNameToPlugin.set(o, A), A;
                        }
                        throw new Error(
                            `No event manager plugin found for event ${o}`
                        );
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(Ee), w.LFG(w.R0b));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            class Se {
                constructor(a) {
                    this._doc = a;
                }
                addGlobalEventListener(a, o, s) {
                    const c = (0, l.q)().getGlobalEventTarget(this._doc, a);
                    if (!c)
                        throw new Error(
                            `Unsupported event target ${c} for event ${o}`
                        );
                    return this.addEventListener(c, o, s);
                }
            }
            let Z = (() => {
                    class m {
                        constructor() {
                            this._stylesSet = new Set();
                        }
                        addStyles(o) {
                            const s = new Set();
                            o.forEach((c) => {
                                this._stylesSet.has(c) ||
                                    (this._stylesSet.add(c), s.add(c));
                            }),
                                this.onStylesAdded(s);
                        }
                        onStylesAdded(o) {}
                        getAllStyles() {
                            return Array.from(this._stylesSet);
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)();
                        }),
                        (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                        m
                    );
                })(),
                X = (() => {
                    class m extends Z {
                        constructor(o) {
                            super(),
                                (this._doc = o),
                                (this._hostNodes = new Map()),
                                this._hostNodes.set(o.head, []);
                        }
                        _addStylesToHost(o, s, c) {
                            o.forEach((p) => {
                                const A = this._doc.createElement('style');
                                (A.textContent = p), c.push(s.appendChild(A));
                            });
                        }
                        addHost(o) {
                            const s = [];
                            this._addStylesToHost(this._stylesSet, o, s),
                                this._hostNodes.set(o, s);
                        }
                        removeHost(o) {
                            const s = this._hostNodes.get(o);
                            s && s.forEach(Ce), this._hostNodes.delete(o);
                        }
                        onStylesAdded(o) {
                            this._hostNodes.forEach((s, c) => {
                                this._addStylesToHost(o, c, s);
                            });
                        }
                        ngOnDestroy() {
                            this._hostNodes.forEach((o) => o.forEach(Ce));
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)(w.LFG(l.K0));
                        }),
                        (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                        m
                    );
                })();
            function Ce(m) {
                (0, l.q)().remove(m);
            }
            const ae = {
                    svg: 'http://www.w3.org/2000/svg',
                    xhtml: 'http://www.w3.org/1999/xhtml',
                    xlink: 'http://www.w3.org/1999/xlink',
                    xml: 'http://www.w3.org/XML/1998/namespace',
                    xmlns: 'http://www.w3.org/2000/xmlns/',
                    math: 'http://www.w3.org/1998/MathML/',
                },
                Y = /%COMP%/g;
            function Pe(m, a, o) {
                for (let s = 0; s < a.length; s++) {
                    let c = a[s];
                    Array.isArray(c)
                        ? Pe(m, c, o)
                        : ((c = c.replace(Y, m)), o.push(c));
                }
                return o;
            }
            function le(m) {
                return (a) => {
                    if ('__ngUnwrap__' === a) return m;
                    !1 === m(a) && (a.preventDefault(), (a.returnValue = !1));
                };
            }
            let be = (() => {
                class m {
                    constructor(o, s, c) {
                        (this.eventManager = o),
                            (this.sharedStylesHost = s),
                            (this.appId = c),
                            (this.rendererByCompId = new Map()),
                            (this.defaultRenderer = new ye(o));
                    }
                    createRenderer(o, s) {
                        if (!o || !s) return this.defaultRenderer;
                        switch (s.encapsulation) {
                            case w.ifc.Emulated: {
                                let c = this.rendererByCompId.get(s.id);
                                return (
                                    c ||
                                        ((c = new ln(
                                            this.eventManager,
                                            this.sharedStylesHost,
                                            s,
                                            this.appId
                                        )),
                                        this.rendererByCompId.set(s.id, c)),
                                    c.applyToHost(o),
                                    c
                                );
                            }
                            case 1:
                            case w.ifc.ShadowDom:
                                return new nt(
                                    this.eventManager,
                                    this.sharedStylesHost,
                                    o,
                                    s
                                );
                            default:
                                if (!this.rendererByCompId.has(s.id)) {
                                    const c = Pe(s.id, s.styles, []);
                                    this.sharedStylesHost.addStyles(c),
                                        this.rendererByCompId.set(
                                            s.id,
                                            this.defaultRenderer
                                        );
                                }
                                return this.defaultRenderer;
                        }
                    }
                    begin() {}
                    end() {}
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(_e), w.LFG(X), w.LFG(w.AFp));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            class ye {
                constructor(a) {
                    (this.eventManager = a),
                        (this.data = Object.create(null)),
                        (this.destroyNode = null);
                }
                destroy() {}
                createElement(a, o) {
                    return o
                        ? document.createElementNS(ae[o] || o, a)
                        : document.createElement(a);
                }
                createComment(a) {
                    return document.createComment(a);
                }
                createText(a) {
                    return document.createTextNode(a);
                }
                appendChild(a, o) {
                    a.appendChild(o);
                }
                insertBefore(a, o, s) {
                    a && a.insertBefore(o, s);
                }
                removeChild(a, o) {
                    a && a.removeChild(o);
                }
                selectRootElement(a, o) {
                    let s =
                        'string' == typeof a ? document.querySelector(a) : a;
                    if (!s)
                        throw new Error(
                            `The selector "${a}" did not match any elements`
                        );
                    return o || (s.textContent = ''), s;
                }
                parentNode(a) {
                    return a.parentNode;
                }
                nextSibling(a) {
                    return a.nextSibling;
                }
                setAttribute(a, o, s, c) {
                    if (c) {
                        o = c + ':' + o;
                        const p = ae[c];
                        p ? a.setAttributeNS(p, o, s) : a.setAttribute(o, s);
                    } else a.setAttribute(o, s);
                }
                removeAttribute(a, o, s) {
                    if (s) {
                        const c = ae[s];
                        c
                            ? a.removeAttributeNS(c, o)
                            : a.removeAttribute(`${s}:${o}`);
                    } else a.removeAttribute(o);
                }
                addClass(a, o) {
                    a.classList.add(o);
                }
                removeClass(a, o) {
                    a.classList.remove(o);
                }
                setStyle(a, o, s, c) {
                    c & (w.JOm.DashCase | w.JOm.Important)
                        ? a.style.setProperty(
                              o,
                              s,
                              c & w.JOm.Important ? 'important' : ''
                          )
                        : (a.style[o] = s);
                }
                removeStyle(a, o, s) {
                    s & w.JOm.DashCase
                        ? a.style.removeProperty(o)
                        : (a.style[o] = '');
                }
                setProperty(a, o, s) {
                    a[o] = s;
                }
                setValue(a, o) {
                    a.nodeValue = o;
                }
                listen(a, o, s) {
                    return 'string' == typeof a
                        ? this.eventManager.addGlobalEventListener(a, o, le(s))
                        : this.eventManager.addEventListener(a, o, le(s));
                }
            }
            class ln extends ye {
                constructor(a, o, s, c) {
                    super(a), (this.component = s);
                    const p = Pe(c + '-' + s.id, s.styles, []);
                    o.addStyles(p),
                        (this.contentAttr = (function it(m) {
                            return '_ngcontent-%COMP%'.replace(Y, m);
                        })(c + '-' + s.id)),
                        (this.hostAttr = (function ne(m) {
                            return '_nghost-%COMP%'.replace(Y, m);
                        })(c + '-' + s.id));
                }
                applyToHost(a) {
                    super.setAttribute(a, this.hostAttr, '');
                }
                createElement(a, o) {
                    const s = super.createElement(a, o);
                    return super.setAttribute(s, this.contentAttr, ''), s;
                }
            }
            class nt extends ye {
                constructor(a, o, s, c) {
                    super(a),
                        (this.sharedStylesHost = o),
                        (this.hostEl = s),
                        (this.shadowRoot = s.attachShadow({ mode: 'open' })),
                        this.sharedStylesHost.addHost(this.shadowRoot);
                    const p = Pe(c.id, c.styles, []);
                    for (let A = 0; A < p.length; A++) {
                        const P = document.createElement('style');
                        (P.textContent = p[A]), this.shadowRoot.appendChild(P);
                    }
                }
                nodeOrShadowRoot(a) {
                    return a === this.hostEl ? this.shadowRoot : a;
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot);
                }
                appendChild(a, o) {
                    return super.appendChild(this.nodeOrShadowRoot(a), o);
                }
                insertBefore(a, o, s) {
                    return super.insertBefore(this.nodeOrShadowRoot(a), o, s);
                }
                removeChild(a, o) {
                    return super.removeChild(this.nodeOrShadowRoot(a), o);
                }
                parentNode(a) {
                    return this.nodeOrShadowRoot(
                        super.parentNode(this.nodeOrShadowRoot(a))
                    );
                }
            }
            let st = (() => {
                class m extends Se {
                    constructor(o) {
                        super(o);
                    }
                    supports(o) {
                        return !0;
                    }
                    addEventListener(o, s, c) {
                        return (
                            o.addEventListener(s, c, !1),
                            () => this.removeEventListener(o, s, c)
                        );
                    }
                    removeEventListener(o, s, c) {
                        return o.removeEventListener(s, c);
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(l.K0));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            const un = ['alt', 'control', 'meta', 'shift'],
                Gt = {
                    '\b': 'Backspace',
                    '\t': 'Tab',
                    '\x7f': 'Delete',
                    '\x1b': 'Escape',
                    Del: 'Delete',
                    Esc: 'Escape',
                    Left: 'ArrowLeft',
                    Right: 'ArrowRight',
                    Up: 'ArrowUp',
                    Down: 'ArrowDown',
                    Menu: 'ContextMenu',
                    Scroll: 'ScrollLock',
                    Win: 'OS',
                },
                mt = {
                    A: '1',
                    B: '2',
                    C: '3',
                    D: '4',
                    E: '5',
                    F: '6',
                    G: '7',
                    H: '8',
                    I: '9',
                    J: '*',
                    K: '+',
                    M: '-',
                    N: '.',
                    O: '/',
                    '`': '0',
                    '\x90': 'NumLock',
                },
                wn = {
                    alt: (m) => m.altKey,
                    control: (m) => m.ctrlKey,
                    meta: (m) => m.metaKey,
                    shift: (m) => m.shiftKey,
                };
            let dn = (() => {
                class m extends Se {
                    constructor(o) {
                        super(o);
                    }
                    supports(o) {
                        return null != m.parseEventName(o);
                    }
                    addEventListener(o, s, c) {
                        const p = m.parseEventName(s),
                            A = m.eventCallback(
                                p.fullKey,
                                c,
                                this.manager.getZone()
                            );
                        return this.manager
                            .getZone()
                            .runOutsideAngular(() =>
                                (0, l.q)().onAndCancel(o, p.domEventName, A)
                            );
                    }
                    static parseEventName(o) {
                        const s = o.toLowerCase().split('.'),
                            c = s.shift();
                        if (
                            0 === s.length ||
                            ('keydown' !== c && 'keyup' !== c)
                        )
                            return null;
                        const p = m._normalizeKey(s.pop());
                        let A = '';
                        if (
                            (un.forEach(($) => {
                                const re = s.indexOf($);
                                re > -1 && (s.splice(re, 1), (A += $ + '.'));
                            }),
                            (A += p),
                            0 != s.length || 0 === p.length)
                        )
                            return null;
                        const P = {};
                        return (P.domEventName = c), (P.fullKey = A), P;
                    }
                    static getEventFullKey(o) {
                        let s = '',
                            c = (function Kt(m) {
                                let a = m.key;
                                if (null == a) {
                                    if (((a = m.keyIdentifier), null == a))
                                        return 'Unidentified';
                                    a.startsWith('U+') &&
                                        ((a = String.fromCharCode(
                                            parseInt(a.substring(2), 16)
                                        )),
                                        3 === m.location &&
                                            mt.hasOwnProperty(a) &&
                                            (a = mt[a]));
                                }
                                return Gt[a] || a;
                            })(o);
                        return (
                            (c = c.toLowerCase()),
                            ' ' === c
                                ? (c = 'space')
                                : '.' === c && (c = 'dot'),
                            un.forEach((p) => {
                                p != c && wn[p](o) && (s += p + '.');
                            }),
                            (s += c),
                            s
                        );
                    }
                    static eventCallback(o, s, c) {
                        return (p) => {
                            m.getEventFullKey(p) === o &&
                                c.runGuarded(() => s(p));
                        };
                    }
                    static _normalizeKey(o) {
                        return 'esc' === o ? 'escape' : o;
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(l.K0));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            const Ye = (0, w.eFA)(w._c5, 'browser', [
                    { provide: w.Lbi, useValue: l.bD },
                    {
                        provide: w.g9A,
                        useValue: function Nn() {
                            j.makeCurrent(), Q.init();
                        },
                        multi: !0,
                    },
                    {
                        provide: l.K0,
                        useFactory: function Hn() {
                            return (0, w.RDi)(document), document;
                        },
                        deps: [],
                    },
                ]),
                q = [
                    { provide: w.zSh, useValue: 'root' },
                    {
                        provide: w.qLn,
                        useFactory: function qt() {
                            return new w.qLn();
                        },
                        deps: [],
                    },
                    {
                        provide: Ee,
                        useClass: st,
                        multi: !0,
                        deps: [l.K0, w.R0b, w.Lbi],
                    },
                    { provide: Ee, useClass: dn, multi: !0, deps: [l.K0] },
                    { provide: be, useClass: be, deps: [_e, X, w.AFp] },
                    { provide: w.FYo, useExisting: be },
                    { provide: Z, useExisting: X },
                    { provide: X, useClass: X, deps: [l.K0] },
                    { provide: w.dDg, useClass: w.dDg, deps: [w.R0b] },
                    { provide: _e, useClass: _e, deps: [Ee, w.R0b] },
                    { provide: l.JF, useClass: De, deps: [] },
                ];
            let Te = (() => {
                class m {
                    constructor(o) {
                        if (o)
                            throw new Error(
                                'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
                            );
                    }
                    static withServerTransition(o) {
                        return {
                            ngModule: m,
                            providers: [
                                { provide: w.AFp, useValue: o.appId },
                                { provide: B, useExisting: w.AFp },
                                U,
                            ],
                        };
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(m, 12));
                    }),
                    (m.ɵmod = w.oAB({ type: m })),
                    (m.ɵinj = w.cJS({ providers: q, imports: [l.ez, w.hGG] })),
                    m
                );
            })();
            'undefined' != typeof window && window;
            var bt = _(6115);
            let Xn = (() => {
                class m {}
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)();
                    }),
                    (m.ɵcmp = w.Xpm({
                        type: m,
                        selectors: [['sol-root']],
                        decls: 1,
                        vars: 0,
                        template: function (o, s) {
                            1 & o && w._UZ(0, 'router-outlet');
                        },
                        directives: [bt.lC],
                        styles: [''],
                        changeDetection: 0,
                    })),
                    m
                );
            })();
            var Jt = _(1777);
            function Zt() {
                return (
                    'undefined' != typeof window && void 0 !== window.document
                );
            }
            function _n() {
                return (
                    'undefined' != typeof process &&
                    '[object process]' === {}.toString.call(process)
                );
            }
            function an(m) {
                switch (m.length) {
                    case 0:
                        return new Jt.ZN();
                    case 1:
                        return m[0];
                    default:
                        return new Jt.ZE(m);
                }
            }
            function vn(m, a, o, s, c = {}, p = {}) {
                const A = [],
                    P = [];
                let $ = -1,
                    re = null;
                if (
                    (s.forEach((ke) => {
                        const Ge = ke.offset,
                            at = Ge == $,
                            et = (at && re) || {};
                        Object.keys(ke).forEach((dt) => {
                            let gt = dt,
                                zt = ke[dt];
                            if ('offset' !== dt)
                                switch (
                                    ((gt = a.normalizePropertyName(gt, A)), zt)
                                ) {
                                    case Jt.k1:
                                        zt = c[dt];
                                        break;
                                    case Jt.l3:
                                        zt = p[dt];
                                        break;
                                    default:
                                        zt = a.normalizeStyleValue(
                                            dt,
                                            gt,
                                            zt,
                                            A
                                        );
                                }
                            et[gt] = zt;
                        }),
                            at || P.push(et),
                            (re = et),
                            ($ = Ge);
                    }),
                    A.length)
                ) {
                    const ke = '\n - ';
                    throw new Error(
                        `Unable to animate due to the following errors:${ke}${A.join(
                            ke
                        )}`
                    );
                }
                return P;
            }
            function Gn(m, a, o, s) {
                switch (a) {
                    case 'start':
                        m.onStart(() => s(o && Pr(o, 'start', m)));
                        break;
                    case 'done':
                        m.onDone(() => s(o && Pr(o, 'done', m)));
                        break;
                    case 'destroy':
                        m.onDestroy(() => s(o && Pr(o, 'destroy', m)));
                }
            }
            function Pr(m, a, o) {
                const s = o.totalTime,
                    p = Zn(
                        m.element,
                        m.triggerName,
                        m.fromState,
                        m.toState,
                        a || m.phaseName,
                        null == s ? m.totalTime : s,
                        !!o.disabled
                    ),
                    A = m._data;
                return null != A && (p._data = A), p;
            }
            function Zn(m, a, o, s, c = '', p = 0, A) {
                return {
                    element: m,
                    triggerName: a,
                    fromState: o,
                    toState: s,
                    phaseName: c,
                    totalTime: p,
                    disabled: !!A,
                };
            }
            function Tn(m, a, o) {
                let s;
                return (
                    m instanceof Map
                        ? ((s = m.get(a)), s || m.set(a, (s = o)))
                        : ((s = m[a]), s || (s = m[a] = o)),
                    s
                );
            }
            function hr(m) {
                const a = m.indexOf(':');
                return [m.substring(1, a), m.substr(a + 1)];
            }
            let Ln = (m, a) => !1,
                or = (m, a, o) => [];
            (_n() || 'undefined' != typeof Element) &&
                ((Ln = Zt()
                    ? (m, a) => {
                          for (; a && a !== document.documentElement; ) {
                              if (a === m) return !0;
                              a = a.parentNode || a.host;
                          }
                          return !1;
                      }
                    : (m, a) => m.contains(a)),
                (or = (m, a, o) => {
                    if (o) return Array.from(m.querySelectorAll(a));
                    const s = m.querySelector(a);
                    return s ? [s] : [];
                }));
            let Ot = null,
                pn = !1;
            function zn(m) {
                Ot ||
                    ((Ot =
                        (function pr() {
                            return 'undefined' != typeof document
                                ? document.body
                                : null;
                        })() || {}),
                    (pn = !!Ot.style && 'WebkitAppearance' in Ot.style));
                let a = !0;
                return (
                    Ot.style &&
                        !(function rt(m) {
                            return 'ebkit' == m.substring(1, 6);
                        })(m) &&
                        ((a = m in Ot.style),
                        !a &&
                            pn &&
                            (a =
                                'Webkit' +
                                    m.charAt(0).toUpperCase() +
                                    m.substr(1) in
                                Ot.style)),
                    a
                );
            }
            const En = Ln,
                ar = or;
            let Cr = (() => {
                    class m {
                        validateStyleProperty(o) {
                            return zn(o);
                        }
                        matchesElement(o, s) {
                            return !1;
                        }
                        containsElement(o, s) {
                            return En(o, s);
                        }
                        query(o, s, c) {
                            return ar(o, s, c);
                        }
                        computeStyle(o, s, c) {
                            return c || '';
                        }
                        animate(o, s, c, p, A, P = [], $) {
                            return new Jt.ZN(c, p);
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)();
                        }),
                        (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                        m
                    );
                })(),
                In = (() => {
                    class m {}
                    return (m.NOOP = new Cr()), m;
                })();
            const Tr = 'ng-enter',
                $n = 'ng-leave',
                Dn = 'ng-trigger',
                dr = '.ng-trigger',
                ee = 'ng-animating',
                Le = '.ng-animating';
            function ge(m) {
                if ('number' == typeof m) return m;
                const a = m.match(/^(-?[\.\d]+)(m?s)/);
                return !a || a.length < 2 ? 0 : Re(parseFloat(a[1]), a[2]);
            }
            function Re(m, a) {
                return 's' === a ? 1e3 * m : m;
            }
            function Xe(m, a, o) {
                return m.hasOwnProperty('duration')
                    ? m
                    : (function Je(m, a, o) {
                          let c,
                              p = 0,
                              A = '';
                          if ('string' == typeof m) {
                              const P = m.match(
                                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                              );
                              if (null === P)
                                  return (
                                      a.push(
                                          `The provided timing value "${m}" is invalid.`
                                      ),
                                      { duration: 0, delay: 0, easing: '' }
                                  );
                              c = Re(parseFloat(P[1]), P[2]);
                              const $ = P[3];
                              null != $ && (p = Re(parseFloat($), P[4]));
                              const re = P[5];
                              re && (A = re);
                          } else c = m;
                          if (!o) {
                              let P = !1,
                                  $ = a.length;
                              c < 0 &&
                                  (a.push(
                                      'Duration values below 0 are not allowed for this animation step.'
                                  ),
                                  (P = !0)),
                                  p < 0 &&
                                      (a.push(
                                          'Delay values below 0 are not allowed for this animation step.'
                                      ),
                                      (P = !0)),
                                  P &&
                                      a.splice(
                                          $,
                                          0,
                                          `The provided timing value "${m}" is invalid.`
                                      );
                          }
                          return { duration: c, delay: p, easing: A };
                      })(m, a, o);
            }
            function Nt(m, a = {}) {
                return (
                    Object.keys(m).forEach((o) => {
                        a[o] = m[o];
                    }),
                    a
                );
            }
            function hn(m, a, o = {}) {
                if (a) for (let s in m) o[s] = m[s];
                else Nt(m, o);
                return o;
            }
            function kn(m, a, o) {
                return o ? a + ':' + o + ';' : '';
            }
            function Xt(m) {
                let a = '';
                for (let o = 0; o < m.style.length; o++) {
                    const s = m.style.item(o);
                    a += kn(0, s, m.style.getPropertyValue(s));
                }
                for (const o in m.style)
                    m.style.hasOwnProperty(o) &&
                        !o.startsWith('_') &&
                        (a += kn(0, tt(o), m.style[o]));
                m.setAttribute('style', a);
            }
            function Bn(m, a, o) {
                m.style &&
                    (Object.keys(a).forEach((s) => {
                        const c = Ze(s);
                        o && !o.hasOwnProperty(s) && (o[s] = m.style[c]),
                            (m.style[c] = a[s]);
                    }),
                    _n() && Xt(m));
            }
            function gr(m, a) {
                m.style &&
                    (Object.keys(a).forEach((o) => {
                        const s = Ze(o);
                        m.style[s] = '';
                    }),
                    _n() && Xt(m));
            }
            function Ur(m) {
                return Array.isArray(m)
                    ? 1 == m.length
                        ? m[0]
                        : (0, Jt.vP)(m)
                    : m;
            }
            const Vi = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
            function ci(m) {
                let a = [];
                if ('string' == typeof m) {
                    let o;
                    for (; (o = Vi.exec(m)); ) a.push(o[1]);
                    Vi.lastIndex = 0;
                }
                return a;
            }
            function ve(m, a, o) {
                const s = m.toString(),
                    c = s.replace(Vi, (p, A) => {
                        let P = a[A];
                        return (
                            a.hasOwnProperty(A) ||
                                (o.push(
                                    `Please provide a value for the animation param ${A}`
                                ),
                                (P = '')),
                            P.toString()
                        );
                    });
                return c == s ? m : c;
            }
            function me(m) {
                const a = [];
                let o = m.next();
                for (; !o.done; ) a.push(o.value), (o = m.next());
                return a;
            }
            const Oe = /-+([a-z0-9])/g;
            function Ze(m) {
                return m.replace(Oe, (...a) => a[1].toUpperCase());
            }
            function tt(m) {
                return m.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
            }
            function gn(m, a, o) {
                switch (a.type) {
                    case 7:
                        return m.visitTrigger(a, o);
                    case 0:
                        return m.visitState(a, o);
                    case 1:
                        return m.visitTransition(a, o);
                    case 2:
                        return m.visitSequence(a, o);
                    case 3:
                        return m.visitGroup(a, o);
                    case 4:
                        return m.visitAnimate(a, o);
                    case 5:
                        return m.visitKeyframes(a, o);
                    case 6:
                        return m.visitStyle(a, o);
                    case 8:
                        return m.visitReference(a, o);
                    case 9:
                        return m.visitAnimateChild(a, o);
                    case 10:
                        return m.visitAnimateRef(a, o);
                    case 11:
                        return m.visitQuery(a, o);
                    case 12:
                        return m.visitStagger(a, o);
                    default:
                        throw new Error(
                            `Unable to resolve animation metadata node #${a.type}`
                        );
                }
            }
            function di(m, a) {
                const o = [];
                return (
                    'string' == typeof m
                        ? m.split(/\s*,\s*/).forEach((s) =>
                              (function ti(m, a, o) {
                                  if (':' == m[0]) {
                                      const $ = (function Ui(m, a) {
                                          switch (m) {
                                              case ':enter':
                                                  return 'void => *';
                                              case ':leave':
                                                  return '* => void';
                                              case ':increment':
                                                  return (o, s) =>
                                                      parseFloat(s) >
                                                      parseFloat(o);
                                              case ':decrement':
                                                  return (o, s) =>
                                                      parseFloat(s) <
                                                      parseFloat(o);
                                              default:
                                                  return (
                                                      a.push(
                                                          `The transition alias value "${m}" is not supported`
                                                      ),
                                                      '* => *'
                                                  );
                                          }
                                      })(m, o);
                                      if ('function' == typeof $)
                                          return void a.push($);
                                      m = $;
                                  }
                                  const s = m.match(
                                      /^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/
                                  );
                                  if (null == s || s.length < 4)
                                      return (
                                          o.push(
                                              `The provided transition expression "${m}" is not supported`
                                          ),
                                          a
                                      );
                                  const c = s[1],
                                      p = s[2],
                                      A = s[3];
                                  a.push(ni(c, A));
                                  '<' == p[0] &&
                                      !('*' == c && '*' == A) &&
                                      a.push(ni(A, c));
                              })(s, o, a)
                          )
                        : o.push(m),
                    o
                );
            }
            const jr = new Set(['true', '1']),
                Oi = new Set(['false', '0']);
            function ni(m, a) {
                const o = jr.has(m) || Oi.has(m),
                    s = jr.has(a) || Oi.has(a);
                return (c, p) => {
                    let A = '*' == m || m == c,
                        P = '*' == a || a == p;
                    return (
                        !A &&
                            o &&
                            'boolean' == typeof c &&
                            (A = c ? jr.has(m) : Oi.has(m)),
                        !P &&
                            s &&
                            'boolean' == typeof p &&
                            (P = p ? jr.has(a) : Oi.has(a)),
                        A && P
                    );
                };
            }
            const ri = new RegExp('s*:selfs*,?', 'g');
            function fi(m, a, o) {
                return new wr(m).build(a, o);
            }
            class wr {
                constructor(a) {
                    this._driver = a;
                }
                build(a, o) {
                    const s = new ns(o);
                    return (
                        this._resetContextStyleTimingState(s),
                        gn(this, Ur(a), s)
                    );
                }
                _resetContextStyleTimingState(a) {
                    (a.currentQuerySelector = ''),
                        (a.collectedStyles = {}),
                        (a.collectedStyles[''] = {}),
                        (a.currentTime = 0);
                }
                visitTrigger(a, o) {
                    let s = (o.queryCount = 0),
                        c = (o.depCount = 0);
                    const p = [],
                        A = [];
                    return (
                        '@' == a.name.charAt(0) &&
                            o.errors.push(
                                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
                            ),
                        a.definitions.forEach((P) => {
                            if (
                                (this._resetContextStyleTimingState(o),
                                0 == P.type)
                            ) {
                                const $ = P,
                                    re = $.name;
                                re
                                    .toString()
                                    .split(/\s*,\s*/)
                                    .forEach((ke) => {
                                        ($.name = ke),
                                            p.push(this.visitState($, o));
                                    }),
                                    ($.name = re);
                            } else if (1 == P.type) {
                                const $ = this.visitTransition(P, o);
                                (s += $.queryCount),
                                    (c += $.depCount),
                                    A.push($);
                            } else
                                o.errors.push(
                                    'only state() and transition() definitions can sit inside of a trigger()'
                                );
                        }),
                        {
                            type: 7,
                            name: a.name,
                            states: p,
                            transitions: A,
                            queryCount: s,
                            depCount: c,
                            options: null,
                        }
                    );
                }
                visitState(a, o) {
                    const s = this.visitStyle(a.styles, o),
                        c = (a.options && a.options.params) || null;
                    if (s.containsDynamicStyles) {
                        const p = new Set(),
                            A = c || {};
                        if (
                            (s.styles.forEach((P) => {
                                if (Hr(P)) {
                                    const $ = P;
                                    Object.keys($).forEach((re) => {
                                        ci($[re]).forEach((ke) => {
                                            A.hasOwnProperty(ke) || p.add(ke);
                                        });
                                    });
                                }
                            }),
                            p.size)
                        ) {
                            const P = me(p.values());
                            o.errors.push(
                                `state("${
                                    a.name
                                }", ...) must define default values for all the following style substitutions: ${P.join(
                                    ', '
                                )}`
                            );
                        }
                    }
                    return {
                        type: 0,
                        name: a.name,
                        style: s,
                        options: c ? { params: c } : null,
                    };
                }
                visitTransition(a, o) {
                    (o.queryCount = 0), (o.depCount = 0);
                    const s = gn(this, Ur(a.animation), o);
                    return {
                        type: 1,
                        matchers: di(a.expr, o.errors),
                        animation: s,
                        queryCount: o.queryCount,
                        depCount: o.depCount,
                        options: $r(a.options),
                    };
                }
                visitSequence(a, o) {
                    return {
                        type: 2,
                        steps: a.steps.map((s) => gn(this, s, o)),
                        options: $r(a.options),
                    };
                }
                visitGroup(a, o) {
                    const s = o.currentTime;
                    let c = 0;
                    const p = a.steps.map((A) => {
                        o.currentTime = s;
                        const P = gn(this, A, o);
                        return (c = Math.max(c, o.currentTime)), P;
                    });
                    return (
                        (o.currentTime = c),
                        { type: 3, steps: p, options: $r(a.options) }
                    );
                }
                visitAnimate(a, o) {
                    const s = (function Nr(m, a) {
                        let o = null;
                        if (m.hasOwnProperty('duration')) o = m;
                        else if ('number' == typeof m)
                            return Qn(Xe(m, a).duration, 0, '');
                        const s = m;
                        if (
                            s
                                .split(/\s+/)
                                .some(
                                    (p) =>
                                        '{' == p.charAt(0) && '{' == p.charAt(1)
                                )
                        ) {
                            const p = Qn(0, 0, '');
                            return (p.dynamic = !0), (p.strValue = s), p;
                        }
                        return (
                            (o = o || Xe(s, a)),
                            Qn(o.duration, o.delay, o.easing)
                        );
                    })(a.timings, o.errors);
                    o.currentAnimateTimings = s;
                    let c,
                        p = a.styles ? a.styles : (0, Jt.oB)({});
                    if (5 == p.type) c = this.visitKeyframes(p, o);
                    else {
                        let A = a.styles,
                            P = !1;
                        if (!A) {
                            P = !0;
                            const re = {};
                            s.easing && (re.easing = s.easing),
                                (A = (0, Jt.oB)(re));
                        }
                        o.currentTime += s.duration + s.delay;
                        const $ = this.visitStyle(A, o);
                        ($.isEmptyStep = P), (c = $);
                    }
                    return (
                        (o.currentAnimateTimings = null),
                        { type: 4, timings: s, style: c, options: null }
                    );
                }
                visitStyle(a, o) {
                    const s = this._makeStyleAst(a, o);
                    return this._validateStyleAst(s, o), s;
                }
                _makeStyleAst(a, o) {
                    const s = [];
                    Array.isArray(a.styles)
                        ? a.styles.forEach((A) => {
                              'string' == typeof A
                                  ? A == Jt.l3
                                      ? s.push(A)
                                      : o.errors.push(
                                            `The provided style string value ${A} is not allowed.`
                                        )
                                  : s.push(A);
                          })
                        : s.push(a.styles);
                    let c = !1,
                        p = null;
                    return (
                        s.forEach((A) => {
                            if (Hr(A)) {
                                const P = A,
                                    $ = P.easing;
                                if (($ && ((p = $), delete P.easing), !c))
                                    for (let re in P)
                                        if (
                                            P[re].toString().indexOf('{{') >= 0
                                        ) {
                                            c = !0;
                                            break;
                                        }
                            }
                        }),
                        {
                            type: 6,
                            styles: s,
                            easing: p,
                            offset: a.offset,
                            containsDynamicStyles: c,
                            options: null,
                        }
                    );
                }
                _validateStyleAst(a, o) {
                    const s = o.currentAnimateTimings;
                    let c = o.currentTime,
                        p = o.currentTime;
                    s && p > 0 && (p -= s.duration + s.delay),
                        a.styles.forEach((A) => {
                            'string' != typeof A &&
                                Object.keys(A).forEach((P) => {
                                    if (!this._driver.validateStyleProperty(P))
                                        return void o.errors.push(
                                            `The provided animation property "${P}" is not a supported CSS property for animations`
                                        );
                                    const $ =
                                            o.collectedStyles[
                                                o.currentQuerySelector
                                            ],
                                        re = $[P];
                                    let ke = !0;
                                    re &&
                                        (p != c &&
                                            p >= re.startTime &&
                                            c <= re.endTime &&
                                            (o.errors.push(
                                                `The CSS property "${P}" that exists between the times of "${re.startTime}ms" and "${re.endTime}ms" is also being animated in a parallel animation between the times of "${p}ms" and "${c}ms"`
                                            ),
                                            (ke = !1)),
                                        (p = re.startTime)),
                                        ke &&
                                            ($[P] = {
                                                startTime: p,
                                                endTime: c,
                                            }),
                                        o.options &&
                                            (function mr(m, a, o) {
                                                const s = a.params || {},
                                                    c = ci(m);
                                                c.length &&
                                                    c.forEach((p) => {
                                                        s.hasOwnProperty(p) ||
                                                            o.push(
                                                                `Unable to resolve the local animation param ${p} in the given list of values`
                                                            );
                                                    });
                                            })(A[P], o.options, o.errors);
                                });
                        });
                }
                visitKeyframes(a, o) {
                    const s = { type: 5, styles: [], options: null };
                    if (!o.currentAnimateTimings)
                        return (
                            o.errors.push(
                                'keyframes() must be placed inside of a call to animate()'
                            ),
                            s
                        );
                    let p = 0;
                    const A = [];
                    let P = !1,
                        $ = !1,
                        re = 0;
                    const ke = a.steps.map((bn) => {
                        const er = this._makeStyleAst(bn, o);
                        let rr =
                                null != er.offset
                                    ? er.offset
                                    : (function rs(m) {
                                          if ('string' == typeof m) return null;
                                          let a = null;
                                          if (Array.isArray(m))
                                              m.forEach((o) => {
                                                  if (
                                                      Hr(o) &&
                                                      o.hasOwnProperty('offset')
                                                  ) {
                                                      const s = o;
                                                      (a = parseFloat(
                                                          s.offset
                                                      )),
                                                          delete s.offset;
                                                  }
                                              });
                                          else if (
                                              Hr(m) &&
                                              m.hasOwnProperty('offset')
                                          ) {
                                              const o = m;
                                              (a = parseFloat(o.offset)),
                                                  delete o.offset;
                                          }
                                          return a;
                                      })(er.styles),
                            ir = 0;
                        return (
                            null != rr && (p++, (ir = er.offset = rr)),
                            ($ = $ || ir < 0 || ir > 1),
                            (P = P || ir < re),
                            (re = ir),
                            A.push(ir),
                            er
                        );
                    });
                    $ &&
                        o.errors.push(
                            'Please ensure that all keyframe offsets are between 0 and 1'
                        ),
                        P &&
                            o.errors.push(
                                'Please ensure that all keyframe offsets are in order'
                            );
                    const Ge = a.steps.length;
                    let at = 0;
                    p > 0 && p < Ge
                        ? o.errors.push(
                              'Not all style() steps within the declared keyframes() contain offsets'
                          )
                        : 0 == p && (at = 1 / (Ge - 1));
                    const et = Ge - 1,
                        dt = o.currentTime,
                        gt = o.currentAnimateTimings,
                        zt = gt.duration;
                    return (
                        ke.forEach((bn, er) => {
                            const rr =
                                    at > 0 ? (er == et ? 1 : at * er) : A[er],
                                ir = rr * zt;
                            (o.currentTime = dt + gt.delay + ir),
                                (gt.duration = ir),
                                this._validateStyleAst(bn, o),
                                (bn.offset = rr),
                                s.styles.push(bn);
                        }),
                        s
                    );
                }
                visitReference(a, o) {
                    return {
                        type: 8,
                        animation: gn(this, Ur(a.animation), o),
                        options: $r(a.options),
                    };
                }
                visitAnimateChild(a, o) {
                    return o.depCount++, { type: 9, options: $r(a.options) };
                }
                visitAnimateRef(a, o) {
                    return {
                        type: 10,
                        animation: this.visitReference(a.animation, o),
                        options: $r(a.options),
                    };
                }
                visitQuery(a, o) {
                    const s = o.currentQuerySelector,
                        c = a.options || {};
                    o.queryCount++, (o.currentQuery = a);
                    const [p, A] = (function ms(m) {
                        const a = !!m
                            .split(/\s*,\s*/)
                            .find((o) => ':self' == o);
                        return (
                            a && (m = m.replace(ri, '')),
                            (m = m
                                .replace(/@\*/g, dr)
                                .replace(/@\w+/g, (o) => dr + '-' + o.substr(1))
                                .replace(/:animating/g, Le)),
                            [m, a]
                        );
                    })(a.selector);
                    (o.currentQuerySelector = s.length ? s + ' ' + p : p),
                        Tn(o.collectedStyles, o.currentQuerySelector, {});
                    const P = gn(this, Ur(a.animation), o);
                    return (
                        (o.currentQuery = null),
                        (o.currentQuerySelector = s),
                        {
                            type: 11,
                            selector: p,
                            limit: c.limit || 0,
                            optional: !!c.optional,
                            includeSelf: A,
                            animation: P,
                            originalSelector: a.selector,
                            options: $r(a.options),
                        }
                    );
                }
                visitStagger(a, o) {
                    o.currentQuery ||
                        o.errors.push(
                            'stagger() can only be used inside of query()'
                        );
                    const s =
                        'full' === a.timings
                            ? { duration: 0, delay: 0, easing: 'full' }
                            : Xe(a.timings, o.errors, !0);
                    return {
                        type: 12,
                        animation: gn(this, Ur(a.animation), o),
                        timings: s,
                        options: null,
                    };
                }
            }
            class ns {
                constructor(a) {
                    (this.errors = a),
                        (this.queryCount = 0),
                        (this.depCount = 0),
                        (this.currentTransition = null),
                        (this.currentQuery = null),
                        (this.currentQuerySelector = null),
                        (this.currentAnimateTimings = null),
                        (this.currentTime = 0),
                        (this.collectedStyles = {}),
                        (this.options = null);
                }
            }
            function Hr(m) {
                return !Array.isArray(m) && 'object' == typeof m;
            }
            function $r(m) {
                return (
                    m
                        ? (m = Nt(m)).params &&
                          (m.params = (function Xr(m) {
                              return m ? Nt(m) : null;
                          })(m.params))
                        : (m = {}),
                    m
                );
            }
            function Qn(m, a, o) {
                return { duration: m, delay: a, easing: o };
            }
            function Ei(m, a, o, s, c, p, A = null, P = !1) {
                return {
                    type: 1,
                    element: m,
                    keyframes: a,
                    preStyleProps: o,
                    postStyleProps: s,
                    duration: c,
                    delay: p,
                    totalTime: c + p,
                    easing: A,
                    subTimeline: P,
                };
            }
            class Yr {
                constructor() {
                    this._map = new Map();
                }
                get(a) {
                    return this._map.get(a) || [];
                }
                append(a, o) {
                    let s = this._map.get(a);
                    s || this._map.set(a, (s = [])), s.push(...o);
                }
                has(a) {
                    return this._map.has(a);
                }
                clear() {
                    this._map.clear();
                }
            }
            const ii = new RegExp(':enter', 'g'),
                Hi = new RegExp(':leave', 'g');
            function Lr(m, a, o, s, c, p = {}, A = {}, P, $, re = []) {
                return new xi().buildKeyframes(m, a, o, s, c, p, A, P, $, re);
            }
            class xi {
                buildKeyframes(a, o, s, c, p, A, P, $, re, ke = []) {
                    re = re || new Yr();
                    const Ge = new T(a, o, re, c, p, ke, []);
                    (Ge.options = $),
                        Ge.currentTimeline.setStyles([A], null, Ge.errors, $),
                        gn(this, s, Ge);
                    const at = Ge.timelines.filter((et) =>
                        et.containsAnimation()
                    );
                    if (Object.keys(P).length) {
                        let et;
                        for (let dt = at.length - 1; dt >= 0; dt--) {
                            const gt = at[dt];
                            if (gt.element === o) {
                                et = gt;
                                break;
                            }
                        }
                        et &&
                            !et.allowOnlyTimelineStyles() &&
                            et.setStyles([P], null, Ge.errors, $);
                    }
                    return at.length
                        ? at.map((et) => et.buildKeyframes())
                        : [Ei(o, [], [], [], 0, 0, '', !1)];
                }
                visitTrigger(a, o) {}
                visitState(a, o) {}
                visitTransition(a, o) {}
                visitAnimateChild(a, o) {
                    const s = o.subInstructions.get(o.element);
                    if (s) {
                        const c = o.createSubContext(a.options),
                            p = o.currentTimeline.currentTime,
                            A = this._visitSubInstructions(s, c, c.options);
                        p != A && o.transformIntoNewTimeline(A);
                    }
                    o.previousNode = a;
                }
                visitAnimateRef(a, o) {
                    const s = o.createSubContext(a.options);
                    s.transformIntoNewTimeline(),
                        this.visitReference(a.animation, s),
                        o.transformIntoNewTimeline(
                            s.currentTimeline.currentTime
                        ),
                        (o.previousNode = a);
                }
                _visitSubInstructions(a, o, s) {
                    let p = o.currentTimeline.currentTime;
                    const A = null != s.duration ? ge(s.duration) : null,
                        P = null != s.delay ? ge(s.delay) : null;
                    return (
                        0 !== A &&
                            a.forEach(($) => {
                                const re = o.appendInstructionToTimeline(
                                    $,
                                    A,
                                    P
                                );
                                p = Math.max(p, re.duration + re.delay);
                            }),
                        p
                    );
                }
                visitReference(a, o) {
                    o.updateOptions(a.options, !0),
                        gn(this, a.animation, o),
                        (o.previousNode = a);
                }
                visitSequence(a, o) {
                    const s = o.subContextCount;
                    let c = o;
                    const p = a.options;
                    if (
                        p &&
                        (p.params || p.delay) &&
                        ((c = o.createSubContext(p)),
                        c.transformIntoNewTimeline(),
                        null != p.delay)
                    ) {
                        6 == c.previousNode.type &&
                            (c.currentTimeline.snapshotCurrentStyles(),
                            (c.previousNode = rn));
                        const A = ge(p.delay);
                        c.delayNextStep(A);
                    }
                    a.steps.length &&
                        (a.steps.forEach((A) => gn(this, A, c)),
                        c.currentTimeline.applyStylesToKeyframe(),
                        c.subContextCount > s && c.transformIntoNewTimeline()),
                        (o.previousNode = a);
                }
                visitGroup(a, o) {
                    const s = [];
                    let c = o.currentTimeline.currentTime;
                    const p =
                        a.options && a.options.delay ? ge(a.options.delay) : 0;
                    a.steps.forEach((A) => {
                        const P = o.createSubContext(a.options);
                        p && P.delayNextStep(p),
                            gn(this, A, P),
                            (c = Math.max(c, P.currentTimeline.currentTime)),
                            s.push(P.currentTimeline);
                    }),
                        s.forEach((A) =>
                            o.currentTimeline.mergeTimelineCollectedStyles(A)
                        ),
                        o.transformIntoNewTimeline(c),
                        (o.previousNode = a);
                }
                _visitTiming(a, o) {
                    if (a.dynamic) {
                        const s = a.strValue;
                        return Xe(
                            o.params ? ve(s, o.params, o.errors) : s,
                            o.errors
                        );
                    }
                    return {
                        duration: a.duration,
                        delay: a.delay,
                        easing: a.easing,
                    };
                }
                visitAnimate(a, o) {
                    const s = (o.currentAnimateTimings = this._visitTiming(
                            a.timings,
                            o
                        )),
                        c = o.currentTimeline;
                    s.delay &&
                        (o.incrementTime(s.delay), c.snapshotCurrentStyles());
                    const p = a.style;
                    5 == p.type
                        ? this.visitKeyframes(p, o)
                        : (o.incrementTime(s.duration),
                          this.visitStyle(p, o),
                          c.applyStylesToKeyframe()),
                        (o.currentAnimateTimings = null),
                        (o.previousNode = a);
                }
                visitStyle(a, o) {
                    const s = o.currentTimeline,
                        c = o.currentAnimateTimings;
                    !c &&
                        s.getCurrentStyleProperties().length &&
                        s.forwardFrame();
                    const p = (c && c.easing) || a.easing;
                    a.isEmptyStep
                        ? s.applyEmptyStep(p)
                        : s.setStyles(a.styles, p, o.errors, o.options),
                        (o.previousNode = a);
                }
                visitKeyframes(a, o) {
                    const s = o.currentAnimateTimings,
                        c = o.currentTimeline.duration,
                        p = s.duration,
                        P = o.createSubContext().currentTimeline;
                    (P.easing = s.easing),
                        a.styles.forEach(($) => {
                            P.forwardTime(($.offset || 0) * p),
                                P.setStyles(
                                    $.styles,
                                    $.easing,
                                    o.errors,
                                    o.options
                                ),
                                P.applyStylesToKeyframe();
                        }),
                        o.currentTimeline.mergeTimelineCollectedStyles(P),
                        o.transformIntoNewTimeline(c + p),
                        (o.previousNode = a);
                }
                visitQuery(a, o) {
                    const s = o.currentTimeline.currentTime,
                        c = a.options || {},
                        p = c.delay ? ge(c.delay) : 0;
                    p &&
                        (6 === o.previousNode.type ||
                            (0 == s &&
                                o.currentTimeline.getCurrentStyleProperties()
                                    .length)) &&
                        (o.currentTimeline.snapshotCurrentStyles(),
                        (o.previousNode = rn));
                    let A = s;
                    const P = o.invokeQuery(
                        a.selector,
                        a.originalSelector,
                        a.limit,
                        a.includeSelf,
                        !!c.optional,
                        o.errors
                    );
                    o.currentQueryTotal = P.length;
                    let $ = null;
                    P.forEach((re, ke) => {
                        o.currentQueryIndex = ke;
                        const Ge = o.createSubContext(a.options, re);
                        p && Ge.delayNextStep(p),
                            re === o.element && ($ = Ge.currentTimeline),
                            gn(this, a.animation, Ge),
                            Ge.currentTimeline.applyStylesToKeyframe(),
                            (A = Math.max(A, Ge.currentTimeline.currentTime));
                    }),
                        (o.currentQueryIndex = 0),
                        (o.currentQueryTotal = 0),
                        o.transformIntoNewTimeline(A),
                        $ &&
                            (o.currentTimeline.mergeTimelineCollectedStyles($),
                            o.currentTimeline.snapshotCurrentStyles()),
                        (o.previousNode = a);
                }
                visitStagger(a, o) {
                    const s = o.parentContext,
                        c = o.currentTimeline,
                        p = a.timings,
                        A = Math.abs(p.duration),
                        P = A * (o.currentQueryTotal - 1);
                    let $ = A * o.currentQueryIndex;
                    switch (p.duration < 0 ? 'reverse' : p.easing) {
                        case 'reverse':
                            $ = P - $;
                            break;
                        case 'full':
                            $ = s.currentStaggerTime;
                    }
                    const ke = o.currentTimeline;
                    $ && ke.delayNextStep($);
                    const Ge = ke.currentTime;
                    gn(this, a.animation, o),
                        (o.previousNode = a),
                        (s.currentStaggerTime =
                            c.currentTime -
                            Ge +
                            (c.startTime - s.currentTimeline.startTime));
                }
            }
            const rn = {};
            class T {
                constructor(a, o, s, c, p, A, P, $) {
                    (this._driver = a),
                        (this.element = o),
                        (this.subInstructions = s),
                        (this._enterClassName = c),
                        (this._leaveClassName = p),
                        (this.errors = A),
                        (this.timelines = P),
                        (this.parentContext = null),
                        (this.currentAnimateTimings = null),
                        (this.previousNode = rn),
                        (this.subContextCount = 0),
                        (this.options = {}),
                        (this.currentQueryIndex = 0),
                        (this.currentQueryTotal = 0),
                        (this.currentStaggerTime = 0),
                        (this.currentTimeline = $ || new F(this._driver, o, 0)),
                        P.push(this.currentTimeline);
                }
                get params() {
                    return this.options.params;
                }
                updateOptions(a, o) {
                    if (!a) return;
                    const s = a;
                    let c = this.options;
                    null != s.duration && (c.duration = ge(s.duration)),
                        null != s.delay && (c.delay = ge(s.delay));
                    const p = s.params;
                    if (p) {
                        let A = c.params;
                        A || (A = this.options.params = {}),
                            Object.keys(p).forEach((P) => {
                                (!o || !A.hasOwnProperty(P)) &&
                                    (A[P] = ve(p[P], A, this.errors));
                            });
                    }
                }
                _copyOptions() {
                    const a = {};
                    if (this.options) {
                        const o = this.options.params;
                        if (o) {
                            const s = (a.params = {});
                            Object.keys(o).forEach((c) => {
                                s[c] = o[c];
                            });
                        }
                    }
                    return a;
                }
                createSubContext(a = null, o, s) {
                    const c = o || this.element,
                        p = new T(
                            this._driver,
                            c,
                            this.subInstructions,
                            this._enterClassName,
                            this._leaveClassName,
                            this.errors,
                            this.timelines,
                            this.currentTimeline.fork(c, s || 0)
                        );
                    return (
                        (p.previousNode = this.previousNode),
                        (p.currentAnimateTimings = this.currentAnimateTimings),
                        (p.options = this._copyOptions()),
                        p.updateOptions(a),
                        (p.currentQueryIndex = this.currentQueryIndex),
                        (p.currentQueryTotal = this.currentQueryTotal),
                        (p.parentContext = this),
                        this.subContextCount++,
                        p
                    );
                }
                transformIntoNewTimeline(a) {
                    return (
                        (this.previousNode = rn),
                        (this.currentTimeline = this.currentTimeline.fork(
                            this.element,
                            a
                        )),
                        this.timelines.push(this.currentTimeline),
                        this.currentTimeline
                    );
                }
                appendInstructionToTimeline(a, o, s) {
                    const c = {
                            duration: null != o ? o : a.duration,
                            delay:
                                this.currentTimeline.currentTime +
                                (null != s ? s : 0) +
                                a.delay,
                            easing: '',
                        },
                        p = new b(
                            this._driver,
                            a.element,
                            a.keyframes,
                            a.preStyleProps,
                            a.postStyleProps,
                            c,
                            a.stretchStartingKeyframe
                        );
                    return this.timelines.push(p), c;
                }
                incrementTime(a) {
                    this.currentTimeline.forwardTime(
                        this.currentTimeline.duration + a
                    );
                }
                delayNextStep(a) {
                    a > 0 && this.currentTimeline.delayNextStep(a);
                }
                invokeQuery(a, o, s, c, p, A) {
                    let P = [];
                    if ((c && P.push(this.element), a.length > 0)) {
                        a = (a = a.replace(
                            ii,
                            '.' + this._enterClassName
                        )).replace(Hi, '.' + this._leaveClassName);
                        let re = this._driver.query(this.element, a, 1 != s);
                        0 !== s &&
                            (re =
                                s < 0
                                    ? re.slice(re.length + s, re.length)
                                    : re.slice(0, s)),
                            P.push(...re);
                    }
                    return (
                        !p &&
                            0 == P.length &&
                            A.push(
                                `\`query("${o}")\` returned zero elements. (Use \`query("${o}", { optional: true })\` if you wish to allow this.)`
                            ),
                        P
                    );
                }
            }
            class F {
                constructor(a, o, s, c) {
                    (this._driver = a),
                        (this.element = o),
                        (this.startTime = s),
                        (this._elementTimelineStylesLookup = c),
                        (this.duration = 0),
                        (this._previousKeyframe = {}),
                        (this._currentKeyframe = {}),
                        (this._keyframes = new Map()),
                        (this._styleSummary = {}),
                        (this._pendingStyles = {}),
                        (this._backFill = {}),
                        (this._currentEmptyStepKeyframe = null),
                        this._elementTimelineStylesLookup ||
                            (this._elementTimelineStylesLookup = new Map()),
                        (this._localTimelineStyles = Object.create(
                            this._backFill,
                            {}
                        )),
                        (this._globalTimelineStyles =
                            this._elementTimelineStylesLookup.get(o)),
                        this._globalTimelineStyles ||
                            ((this._globalTimelineStyles =
                                this._localTimelineStyles),
                            this._elementTimelineStylesLookup.set(
                                o,
                                this._localTimelineStyles
                            )),
                        this._loadKeyframe();
                }
                containsAnimation() {
                    switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.getCurrentStyleProperties().length > 0;
                        default:
                            return !0;
                    }
                }
                getCurrentStyleProperties() {
                    return Object.keys(this._currentKeyframe);
                }
                get currentTime() {
                    return this.startTime + this.duration;
                }
                delayNextStep(a) {
                    const o =
                        1 == this._keyframes.size &&
                        Object.keys(this._pendingStyles).length;
                    this.duration || o
                        ? (this.forwardTime(this.currentTime + a),
                          o && this.snapshotCurrentStyles())
                        : (this.startTime += a);
                }
                fork(a, o) {
                    return (
                        this.applyStylesToKeyframe(),
                        new F(
                            this._driver,
                            a,
                            o || this.currentTime,
                            this._elementTimelineStylesLookup
                        )
                    );
                }
                _loadKeyframe() {
                    this._currentKeyframe &&
                        (this._previousKeyframe = this._currentKeyframe),
                        (this._currentKeyframe = this._keyframes.get(
                            this.duration
                        )),
                        this._currentKeyframe ||
                            ((this._currentKeyframe = Object.create(
                                this._backFill,
                                {}
                            )),
                            this._keyframes.set(
                                this.duration,
                                this._currentKeyframe
                            ));
                }
                forwardFrame() {
                    (this.duration += 1), this._loadKeyframe();
                }
                forwardTime(a) {
                    this.applyStylesToKeyframe(),
                        (this.duration = a),
                        this._loadKeyframe();
                }
                _updateStyle(a, o) {
                    (this._localTimelineStyles[a] = o),
                        (this._globalTimelineStyles[a] = o),
                        (this._styleSummary[a] = {
                            time: this.currentTime,
                            value: o,
                        });
                }
                allowOnlyTimelineStyles() {
                    return (
                        this._currentEmptyStepKeyframe !== this._currentKeyframe
                    );
                }
                applyEmptyStep(a) {
                    a && (this._previousKeyframe.easing = a),
                        Object.keys(this._globalTimelineStyles).forEach((o) => {
                            (this._backFill[o] =
                                this._globalTimelineStyles[o] || Jt.l3),
                                (this._currentKeyframe[o] = Jt.l3);
                        }),
                        (this._currentEmptyStepKeyframe =
                            this._currentKeyframe);
                }
                setStyles(a, o, s, c) {
                    o && (this._previousKeyframe.easing = o);
                    const p = (c && c.params) || {},
                        A = (function fe(m, a) {
                            const o = {};
                            let s;
                            return (
                                m.forEach((c) => {
                                    '*' === c
                                        ? ((s = s || Object.keys(a)),
                                          s.forEach((p) => {
                                              o[p] = Jt.l3;
                                          }))
                                        : hn(c, !1, o);
                                }),
                                o
                            );
                        })(a, this._globalTimelineStyles);
                    Object.keys(A).forEach((P) => {
                        const $ = ve(A[P], p, s);
                        (this._pendingStyles[P] = $),
                            this._localTimelineStyles.hasOwnProperty(P) ||
                                (this._backFill[P] =
                                    this._globalTimelineStyles.hasOwnProperty(P)
                                        ? this._globalTimelineStyles[P]
                                        : Jt.l3),
                            this._updateStyle(P, $);
                    });
                }
                applyStylesToKeyframe() {
                    const a = this._pendingStyles,
                        o = Object.keys(a);
                    0 != o.length &&
                        ((this._pendingStyles = {}),
                        o.forEach((s) => {
                            this._currentKeyframe[s] = a[s];
                        }),
                        Object.keys(this._localTimelineStyles).forEach((s) => {
                            this._currentKeyframe.hasOwnProperty(s) ||
                                (this._currentKeyframe[s] =
                                    this._localTimelineStyles[s]);
                        }));
                }
                snapshotCurrentStyles() {
                    Object.keys(this._localTimelineStyles).forEach((a) => {
                        const o = this._localTimelineStyles[a];
                        (this._pendingStyles[a] = o), this._updateStyle(a, o);
                    });
                }
                getFinalKeyframe() {
                    return this._keyframes.get(this.duration);
                }
                get properties() {
                    const a = [];
                    for (let o in this._currentKeyframe) a.push(o);
                    return a;
                }
                mergeTimelineCollectedStyles(a) {
                    Object.keys(a._styleSummary).forEach((o) => {
                        const s = this._styleSummary[o],
                            c = a._styleSummary[o];
                        (!s || c.time > s.time) &&
                            this._updateStyle(o, c.value);
                    });
                }
                buildKeyframes() {
                    this.applyStylesToKeyframe();
                    const a = new Set(),
                        o = new Set(),
                        s = 1 === this._keyframes.size && 0 === this.duration;
                    let c = [];
                    this._keyframes.forEach((P, $) => {
                        const re = hn(P, !0);
                        Object.keys(re).forEach((ke) => {
                            const Ge = re[ke];
                            Ge == Jt.k1 ? a.add(ke) : Ge == Jt.l3 && o.add(ke);
                        }),
                            s || (re.offset = $ / this.duration),
                            c.push(re);
                    });
                    const p = a.size ? me(a.values()) : [],
                        A = o.size ? me(o.values()) : [];
                    if (s) {
                        const P = c[0],
                            $ = Nt(P);
                        (P.offset = 0), ($.offset = 1), (c = [P, $]);
                    }
                    return Ei(
                        this.element,
                        c,
                        p,
                        A,
                        this.duration,
                        this.startTime,
                        this.easing,
                        !1
                    );
                }
            }
            class b extends F {
                constructor(a, o, s, c, p, A, P = !1) {
                    super(a, o, A.delay),
                        (this.keyframes = s),
                        (this.preStyleProps = c),
                        (this.postStyleProps = p),
                        (this._stretchStartingKeyframe = P),
                        (this.timings = {
                            duration: A.duration,
                            delay: A.delay,
                            easing: A.easing,
                        });
                }
                containsAnimation() {
                    return this.keyframes.length > 1;
                }
                buildKeyframes() {
                    let a = this.keyframes,
                        { delay: o, duration: s, easing: c } = this.timings;
                    if (this._stretchStartingKeyframe && o) {
                        const p = [],
                            A = s + o,
                            P = o / A,
                            $ = hn(a[0], !1);
                        ($.offset = 0), p.push($);
                        const re = hn(a[0], !1);
                        (re.offset = H(P)), p.push(re);
                        const ke = a.length - 1;
                        for (let Ge = 1; Ge <= ke; Ge++) {
                            let at = hn(a[Ge], !1);
                            (at.offset = H((o + at.offset * s) / A)),
                                p.push(at);
                        }
                        (s = A), (o = 0), (c = ''), (a = p);
                    }
                    return Ei(
                        this.element,
                        a,
                        this.preStyleProps,
                        this.postStyleProps,
                        s,
                        o,
                        c,
                        !0
                    );
                }
            }
            function H(m, a = 3) {
                const o = Math.pow(10, a - 1);
                return Math.round(m * o) / o;
            }
            class Ke {}
            class Ut extends Ke {
                normalizePropertyName(a, o) {
                    return Ze(a);
                }
                normalizeStyleValue(a, o, s, c) {
                    let p = '';
                    const A = s.toString().trim();
                    if (Cn[o] && 0 !== s && '0' !== s)
                        if ('number' == typeof s) p = 'px';
                        else {
                            const P = s.match(/^[+-]?[\d\.]+([a-z]*)$/);
                            P &&
                                0 == P[1].length &&
                                c.push(
                                    `Please provide a CSS unit value for ${a}:${s}`
                                );
                        }
                    return A + p;
                }
            }
            const Cn = (() =>
                (function tn(m) {
                    const a = {};
                    return m.forEach((o) => (a[o] = !0)), a;
                })(
                    'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
                        ','
                    )
                ))();
            function sn(m, a, o, s, c, p, A, P, $, re, ke, Ge, at) {
                return {
                    type: 0,
                    element: m,
                    triggerName: a,
                    isRemovalTransition: c,
                    fromState: o,
                    fromStyles: p,
                    toState: s,
                    toStyles: A,
                    timelines: P,
                    queriedElements: $,
                    preStyleProps: re,
                    postStyleProps: ke,
                    totalTime: Ge,
                    errors: at,
                };
            }
            const Kn = {};
            class Pn {
                constructor(a, o, s) {
                    (this._triggerName = a),
                        (this.ast = o),
                        (this._stateStyles = s);
                }
                match(a, o, s, c) {
                    return (function Vn(m, a, o, s, c) {
                        return m.some((p) => p(a, o, s, c));
                    })(this.ast.matchers, a, o, s, c);
                }
                buildStyles(a, o, s) {
                    const c = this._stateStyles['*'],
                        p = this._stateStyles[a],
                        A = c ? c.buildStyles(o, s) : {};
                    return p ? p.buildStyles(o, s) : A;
                }
                build(a, o, s, c, p, A, P, $, re, ke) {
                    const Ge = [],
                        at =
                            (this.ast.options && this.ast.options.params) || Kn,
                        dt = this.buildStyles(s, (P && P.params) || Kn, Ge),
                        gt = ($ && $.params) || Kn,
                        zt = this.buildStyles(c, gt, Ge),
                        bn = new Set(),
                        er = new Map(),
                        rr = new Map(),
                        ir = 'void' === c,
                        wi = {
                            params: Object.assign(Object.assign({}, at), gt),
                        },
                        Si = ke
                            ? []
                            : Lr(
                                  a,
                                  o,
                                  this.ast.animation,
                                  p,
                                  A,
                                  dt,
                                  zt,
                                  wi,
                                  re,
                                  Ge
                              );
                    let Vr = 0;
                    if (
                        (Si.forEach((qi) => {
                            Vr = Math.max(qi.duration + qi.delay, Vr);
                        }),
                        Ge.length)
                    )
                        return sn(
                            o,
                            this._triggerName,
                            s,
                            c,
                            ir,
                            dt,
                            zt,
                            [],
                            [],
                            er,
                            rr,
                            Vr,
                            Ge
                        );
                    Si.forEach((qi) => {
                        const mi = qi.element,
                            pl = Tn(er, mi, {});
                        qi.preStyleProps.forEach((ws) => (pl[ws] = !0));
                        const Ro = Tn(rr, mi, {});
                        qi.postStyleProps.forEach((ws) => (Ro[ws] = !0)),
                            mi !== o && bn.add(mi);
                    });
                    const li = me(bn.values());
                    return sn(
                        o,
                        this._triggerName,
                        s,
                        c,
                        ir,
                        dt,
                        zt,
                        Si,
                        li,
                        er,
                        rr,
                        Vr
                    );
                }
            }
            class si {
                constructor(a, o, s) {
                    (this.styles = a),
                        (this.defaultParams = o),
                        (this.normalizer = s);
                }
                buildStyles(a, o) {
                    const s = {},
                        c = Nt(this.defaultParams);
                    return (
                        Object.keys(a).forEach((p) => {
                            const A = a[p];
                            null != A && (c[p] = A);
                        }),
                        this.styles.styles.forEach((p) => {
                            if ('string' != typeof p) {
                                const A = p;
                                Object.keys(A).forEach((P) => {
                                    let $ = A[P];
                                    $.length > 1 && ($ = ve($, c, o));
                                    const re =
                                        this.normalizer.normalizePropertyName(
                                            P,
                                            o
                                        );
                                    ($ = this.normalizer.normalizeStyleValue(
                                        P,
                                        re,
                                        $,
                                        o
                                    )),
                                        (s[re] = $);
                                });
                            }
                        }),
                        s
                    );
                }
            }
            class Lt {
                constructor(a, o, s) {
                    (this.name = a),
                        (this.ast = o),
                        (this._normalizer = s),
                        (this.transitionFactories = []),
                        (this.states = {}),
                        o.states.forEach((c) => {
                            this.states[c.name] = new si(
                                c.style,
                                (c.options && c.options.params) || {},
                                s
                            );
                        }),
                        is(this.states, 'true', '1'),
                        is(this.states, 'false', '0'),
                        o.transitions.forEach((c) => {
                            this.transitionFactories.push(
                                new Pn(a, c, this.states)
                            );
                        }),
                        (this.fallbackTransition = (function hi(m, a, o) {
                            return new Pn(
                                m,
                                {
                                    type: 1,
                                    animation: {
                                        type: 2,
                                        steps: [],
                                        options: null,
                                    },
                                    matchers: [(A, P) => !0],
                                    options: null,
                                    queryCount: 0,
                                    depCount: 0,
                                },
                                a
                            );
                        })(a, this.states));
                }
                get containsQueries() {
                    return this.ast.queryCount > 0;
                }
                matchTransition(a, o, s, c) {
                    return (
                        this.transitionFactories.find((A) =>
                            A.match(a, o, s, c)
                        ) || null
                    );
                }
                matchStyles(a, o, s) {
                    return this.fallbackTransition.buildStyles(a, o, s);
                }
            }
            function is(m, a, o) {
                m.hasOwnProperty(a)
                    ? m.hasOwnProperty(o) || (m[o] = m[a])
                    : m.hasOwnProperty(o) && (m[a] = m[o]);
            }
            const I = new Yr();
            class D {
                constructor(a, o, s) {
                    (this.bodyNode = a),
                        (this._driver = o),
                        (this._normalizer = s),
                        (this._animations = {}),
                        (this._playersById = {}),
                        (this.players = []);
                }
                register(a, o) {
                    const s = [],
                        c = fi(this._driver, o, s);
                    if (s.length)
                        throw new Error(
                            `Unable to build the animation due to the following errors: ${s.join(
                                '\n'
                            )}`
                        );
                    this._animations[a] = c;
                }
                _buildPlayer(a, o, s) {
                    const c = a.element,
                        p = vn(0, this._normalizer, 0, a.keyframes, o, s);
                    return this._driver.animate(
                        c,
                        p,
                        a.duration,
                        a.delay,
                        a.easing,
                        [],
                        !0
                    );
                }
                create(a, o, s = {}) {
                    const c = [],
                        p = this._animations[a];
                    let A;
                    const P = new Map();
                    if (
                        (p
                            ? ((A = Lr(
                                  this._driver,
                                  o,
                                  p,
                                  Tr,
                                  $n,
                                  {},
                                  {},
                                  s,
                                  I,
                                  c
                              )),
                              A.forEach((ke) => {
                                  const Ge = Tn(P, ke.element, {});
                                  ke.postStyleProps.forEach(
                                      (at) => (Ge[at] = null)
                                  );
                              }))
                            : (c.push(
                                  "The requested animation doesn't exist or has already been destroyed"
                              ),
                              (A = [])),
                        c.length)
                    )
                        throw new Error(
                            `Unable to create the animation due to the following errors: ${c.join(
                                '\n'
                            )}`
                        );
                    P.forEach((ke, Ge) => {
                        Object.keys(ke).forEach((at) => {
                            ke[at] = this._driver.computeStyle(Ge, at, Jt.l3);
                        });
                    });
                    const re = an(
                        A.map((ke) => {
                            const Ge = P.get(ke.element);
                            return this._buildPlayer(ke, {}, Ge);
                        })
                    );
                    return (
                        (this._playersById[a] = re),
                        re.onDestroy(() => this.destroy(a)),
                        this.players.push(re),
                        re
                    );
                }
                destroy(a) {
                    const o = this._getPlayer(a);
                    o.destroy(), delete this._playersById[a];
                    const s = this.players.indexOf(o);
                    s >= 0 && this.players.splice(s, 1);
                }
                _getPlayer(a) {
                    const o = this._playersById[a];
                    if (!o)
                        throw new Error(
                            `Unable to find the timeline player referenced by ${a}`
                        );
                    return o;
                }
                listen(a, o, s, c) {
                    const p = Zn(o, '', '', '');
                    return Gn(this._getPlayer(a), s, p, c), () => {};
                }
                command(a, o, s, c) {
                    if ('register' == s) return void this.register(a, c[0]);
                    if ('create' == s)
                        return void this.create(a, o, c[0] || {});
                    const p = this._getPlayer(a);
                    switch (s) {
                        case 'play':
                            p.play();
                            break;
                        case 'pause':
                            p.pause();
                            break;
                        case 'reset':
                            p.reset();
                            break;
                        case 'restart':
                            p.restart();
                            break;
                        case 'finish':
                            p.finish();
                            break;
                        case 'init':
                            p.init();
                            break;
                        case 'setPosition':
                            p.setPosition(parseFloat(c[0]));
                            break;
                        case 'destroy':
                            this.destroy(a);
                    }
                }
            }
            const E = 'ng-animate-queued',
                He = 'ng-animate-disabled',
                Rn = [],
                ei = {
                    namespaceId: '',
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1,
                },
                pi = {
                    namespaceId: '',
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0,
                },
                Fn = '__ng_removed';
            class $i {
                constructor(a, o = '') {
                    this.namespaceId = o;
                    const s = a && a.hasOwnProperty('value');
                    if (
                        ((this.value = (function Di(m) {
                            return null != m ? m : null;
                        })(s ? a.value : a)),
                        s)
                    ) {
                        const p = Nt(a);
                        delete p.value, (this.options = p);
                    } else this.options = {};
                    this.options.params || (this.options.params = {});
                }
                get params() {
                    return this.options.params;
                }
                absorbOptions(a) {
                    const o = a.params;
                    if (o) {
                        const s = this.options.params;
                        Object.keys(o).forEach((c) => {
                            null == s[c] && (s[c] = o[c]);
                        });
                    }
                }
            }
            const Gi = 'void',
                mo = new $i(Gi);
            class Lo {
                constructor(a, o, s) {
                    (this.id = a),
                        (this.hostElement = o),
                        (this._engine = s),
                        (this.players = []),
                        (this._triggers = {}),
                        (this._queue = []),
                        (this._elementListeners = new Map()),
                        (this._hostClassName = 'ng-tns-' + a),
                        Gr(o, this._hostClassName);
                }
                listen(a, o, s, c) {
                    if (!this._triggers.hasOwnProperty(o))
                        throw new Error(
                            `Unable to listen on the animation trigger event "${s}" because the animation trigger "${o}" doesn't exist!`
                        );
                    if (null == s || 0 == s.length)
                        throw new Error(
                            `Unable to listen on the animation trigger "${o}" because the provided event is undefined!`
                        );
                    if (
                        !(function Ci(m) {
                            return 'start' == m || 'done' == m;
                        })(s)
                    )
                        throw new Error(
                            `The provided animation trigger event "${s}" for the animation trigger "${o}" is not supported!`
                        );
                    const p = Tn(this._elementListeners, a, []),
                        A = { name: o, phase: s, callback: c };
                    p.push(A);
                    const P = Tn(this._engine.statesByElement, a, {});
                    return (
                        P.hasOwnProperty(o) ||
                            (Gr(a, Dn), Gr(a, Dn + '-' + o), (P[o] = mo)),
                        () => {
                            this._engine.afterFlush(() => {
                                const $ = p.indexOf(A);
                                $ >= 0 && p.splice($, 1),
                                    this._triggers[o] || delete P[o];
                            });
                        }
                    );
                }
                register(a, o) {
                    return !this._triggers[a] && ((this._triggers[a] = o), !0);
                }
                _getTrigger(a) {
                    const o = this._triggers[a];
                    if (!o)
                        throw new Error(
                            `The provided animation trigger "${a}" has not been registered!`
                        );
                    return o;
                }
                trigger(a, o, s, c = !0) {
                    const p = this._getTrigger(o),
                        A = new ss(this.id, o, a);
                    let P = this._engine.statesByElement.get(a);
                    P ||
                        (Gr(a, Dn),
                        Gr(a, Dn + '-' + o),
                        this._engine.statesByElement.set(a, (P = {})));
                    let $ = P[o];
                    const re = new $i(s, this.id);
                    if (
                        (!(s && s.hasOwnProperty('value')) &&
                            $ &&
                            re.absorbOptions($.options),
                        (P[o] = re),
                        $ || ($ = mo),
                        re.value !== Gi && $.value === re.value)
                    ) {
                        if (
                            !(function Ls(m, a) {
                                const o = Object.keys(m),
                                    s = Object.keys(a);
                                if (o.length != s.length) return !1;
                                for (let c = 0; c < o.length; c++) {
                                    const p = o[c];
                                    if (!a.hasOwnProperty(p) || m[p] !== a[p])
                                        return !1;
                                }
                                return !0;
                            })($.params, re.params)
                        ) {
                            const gt = [],
                                zt = p.matchStyles($.value, $.params, gt),
                                bn = p.matchStyles(re.value, re.params, gt);
                            gt.length
                                ? this._engine.reportError(gt)
                                : this._engine.afterFlush(() => {
                                      gr(a, zt), Bn(a, bn);
                                  });
                        }
                        return;
                    }
                    const at = Tn(this._engine.playersByElement, a, []);
                    at.forEach((gt) => {
                        gt.namespaceId == this.id &&
                            gt.triggerName == o &&
                            gt.queued &&
                            gt.destroy();
                    });
                    let et = p.matchTransition($.value, re.value, a, re.params),
                        dt = !1;
                    if (!et) {
                        if (!c) return;
                        (et = p.fallbackTransition), (dt = !0);
                    }
                    return (
                        this._engine.totalQueuedPlayers++,
                        this._queue.push({
                            element: a,
                            triggerName: o,
                            transition: et,
                            fromState: $,
                            toState: re,
                            player: A,
                            isFallbackTransition: dt,
                        }),
                        dt ||
                            (Gr(a, E),
                            A.onStart(() => {
                                Wi(a, E);
                            })),
                        A.onDone(() => {
                            let gt = this.players.indexOf(A);
                            gt >= 0 && this.players.splice(gt, 1);
                            const zt = this._engine.playersByElement.get(a);
                            if (zt) {
                                let bn = zt.indexOf(A);
                                bn >= 0 && zt.splice(bn, 1);
                            }
                        }),
                        this.players.push(A),
                        at.push(A),
                        A
                    );
                }
                deregister(a) {
                    delete this._triggers[a],
                        this._engine.statesByElement.forEach((o, s) => {
                            delete o[a];
                        }),
                        this._elementListeners.forEach((o, s) => {
                            this._elementListeners.set(
                                s,
                                o.filter((c) => c.name != a)
                            );
                        });
                }
                clearElementCache(a) {
                    this._engine.statesByElement.delete(a),
                        this._elementListeners.delete(a);
                    const o = this._engine.playersByElement.get(a);
                    o &&
                        (o.forEach((s) => s.destroy()),
                        this._engine.playersByElement.delete(a));
                }
                _signalRemovalForInnerTriggers(a, o) {
                    const s = this._engine.driver.query(a, dr, !0);
                    s.forEach((c) => {
                        if (c[Fn]) return;
                        const p = this._engine.fetchNamespacesByElement(c);
                        p.size
                            ? p.forEach((A) =>
                                  A.triggerLeaveAnimation(c, o, !1, !0)
                              )
                            : this.clearElementCache(c);
                    }),
                        this._engine.afterFlushAnimationsDone(() =>
                            s.forEach((c) => this.clearElementCache(c))
                        );
                }
                triggerLeaveAnimation(a, o, s, c) {
                    const p = this._engine.statesByElement.get(a),
                        A = new Map();
                    if (p) {
                        const P = [];
                        if (
                            (Object.keys(p).forEach(($) => {
                                if ((A.set($, p[$].value), this._triggers[$])) {
                                    const re = this.trigger(a, $, Gi, c);
                                    re && P.push(re);
                                }
                            }),
                            P.length)
                        )
                            return (
                                this._engine.markElementAsRemoved(
                                    this.id,
                                    a,
                                    !0,
                                    o,
                                    A
                                ),
                                s &&
                                    an(P).onDone(() =>
                                        this._engine.processLeaveNode(a)
                                    ),
                                !0
                            );
                    }
                    return !1;
                }
                prepareLeaveAnimationListeners(a) {
                    const o = this._elementListeners.get(a),
                        s = this._engine.statesByElement.get(a);
                    if (o && s) {
                        const c = new Set();
                        o.forEach((p) => {
                            const A = p.name;
                            if (c.has(A)) return;
                            c.add(A);
                            const $ = this._triggers[A].fallbackTransition,
                                re = s[A] || mo,
                                ke = new $i(Gi),
                                Ge = new ss(this.id, A, a);
                            this._engine.totalQueuedPlayers++,
                                this._queue.push({
                                    element: a,
                                    triggerName: A,
                                    transition: $,
                                    fromState: re,
                                    toState: ke,
                                    player: Ge,
                                    isFallbackTransition: !0,
                                });
                        });
                    }
                }
                removeNode(a, o) {
                    const s = this._engine;
                    if (
                        (a.childElementCount &&
                            this._signalRemovalForInnerTriggers(a, o),
                        this.triggerLeaveAnimation(a, o, !0))
                    )
                        return;
                    let c = !1;
                    if (s.totalAnimations) {
                        const p = s.players.length
                            ? s.playersByQueriedElement.get(a)
                            : [];
                        if (p && p.length) c = !0;
                        else {
                            let A = a;
                            for (; (A = A.parentNode); )
                                if (s.statesByElement.get(A)) {
                                    c = !0;
                                    break;
                                }
                        }
                    }
                    if ((this.prepareLeaveAnimationListeners(a), c))
                        s.markElementAsRemoved(this.id, a, !1, o);
                    else {
                        const p = a[Fn];
                        (!p || p === ei) &&
                            (s.afterFlush(() => this.clearElementCache(a)),
                            s.destroyInnerAnimations(a),
                            s._onRemovalComplete(a, o));
                    }
                }
                insertNode(a, o) {
                    Gr(a, this._hostClassName);
                }
                drainQueuedTransitions(a) {
                    const o = [];
                    return (
                        this._queue.forEach((s) => {
                            const c = s.player;
                            if (c.destroyed) return;
                            const p = s.element,
                                A = this._elementListeners.get(p);
                            A &&
                                A.forEach((P) => {
                                    if (P.name == s.triggerName) {
                                        const $ = Zn(
                                            p,
                                            s.triggerName,
                                            s.fromState.value,
                                            s.toState.value
                                        );
                                        ($._data = a),
                                            Gn(
                                                s.player,
                                                P.phase,
                                                $,
                                                P.callback
                                            );
                                    }
                                }),
                                c.markedForDestroy
                                    ? this._engine.afterFlush(() => {
                                          c.destroy();
                                      })
                                    : o.push(s);
                        }),
                        (this._queue = []),
                        o.sort((s, c) => {
                            const p = s.transition.ast.depCount,
                                A = c.transition.ast.depCount;
                            return 0 == p || 0 == A
                                ? p - A
                                : this._engine.driver.containsElement(
                                      s.element,
                                      c.element
                                  )
                                ? 1
                                : -1;
                        })
                    );
                }
                destroy(a) {
                    this.players.forEach((o) => o.destroy()),
                        this._signalRemovalForInnerTriggers(
                            this.hostElement,
                            a
                        );
                }
                elementContainsData(a) {
                    let o = !1;
                    return (
                        this._elementListeners.has(a) && (o = !0),
                        (o = !!this._queue.find((s) => s.element === a) || o),
                        o
                    );
                }
            }
            class ys {
                constructor(a, o, s) {
                    (this.bodyNode = a),
                        (this.driver = o),
                        (this._normalizer = s),
                        (this.players = []),
                        (this.newHostElements = new Map()),
                        (this.playersByElement = new Map()),
                        (this.playersByQueriedElement = new Map()),
                        (this.statesByElement = new Map()),
                        (this.disabledNodes = new Set()),
                        (this.totalAnimations = 0),
                        (this.totalQueuedPlayers = 0),
                        (this._namespaceLookup = {}),
                        (this._namespaceList = []),
                        (this._flushFns = []),
                        (this._whenQuietFns = []),
                        (this.namespacesByHostElement = new Map()),
                        (this.collectedEnterElements = []),
                        (this.collectedLeaveElements = []),
                        (this.onRemovalComplete = (c, p) => {});
                }
                _onRemovalComplete(a, o) {
                    this.onRemovalComplete(a, o);
                }
                get queuedPlayers() {
                    const a = [];
                    return (
                        this._namespaceList.forEach((o) => {
                            o.players.forEach((s) => {
                                s.queued && a.push(s);
                            });
                        }),
                        a
                    );
                }
                createNamespace(a, o) {
                    const s = new Lo(a, o, this);
                    return (
                        this.bodyNode &&
                        this.driver.containsElement(this.bodyNode, o)
                            ? this._balanceNamespaceList(s, o)
                            : (this.newHostElements.set(o, s),
                              this.collectEnterElement(o)),
                        (this._namespaceLookup[a] = s)
                    );
                }
                _balanceNamespaceList(a, o) {
                    const s = this._namespaceList.length - 1;
                    if (s >= 0) {
                        let c = !1;
                        for (let p = s; p >= 0; p--)
                            if (
                                this.driver.containsElement(
                                    this._namespaceList[p].hostElement,
                                    o
                                )
                            ) {
                                this._namespaceList.splice(p + 1, 0, a),
                                    (c = !0);
                                break;
                            }
                        c || this._namespaceList.splice(0, 0, a);
                    } else this._namespaceList.push(a);
                    return this.namespacesByHostElement.set(o, a), a;
                }
                register(a, o) {
                    let s = this._namespaceLookup[a];
                    return s || (s = this.createNamespace(a, o)), s;
                }
                registerTrigger(a, o, s) {
                    let c = this._namespaceLookup[a];
                    c && c.register(o, s) && this.totalAnimations++;
                }
                destroy(a, o) {
                    if (!a) return;
                    const s = this._fetchNamespace(a);
                    this.afterFlush(() => {
                        this.namespacesByHostElement.delete(s.hostElement),
                            delete this._namespaceLookup[a];
                        const c = this._namespaceList.indexOf(s);
                        c >= 0 && this._namespaceList.splice(c, 1);
                    }),
                        this.afterFlushAnimationsDone(() => s.destroy(o));
                }
                _fetchNamespace(a) {
                    return this._namespaceLookup[a];
                }
                fetchNamespacesByElement(a) {
                    const o = new Set(),
                        s = this.statesByElement.get(a);
                    if (s) {
                        const c = Object.keys(s);
                        for (let p = 0; p < c.length; p++) {
                            const A = s[c[p]].namespaceId;
                            if (A) {
                                const P = this._fetchNamespace(A);
                                P && o.add(P);
                            }
                        }
                    }
                    return o;
                }
                trigger(a, o, s, c) {
                    if (os(o)) {
                        const p = this._fetchNamespace(a);
                        if (p) return p.trigger(o, s, c), !0;
                    }
                    return !1;
                }
                insertNode(a, o, s, c) {
                    if (!os(o)) return;
                    const p = o[Fn];
                    if (p && p.setForRemoval) {
                        (p.setForRemoval = !1), (p.setForMove = !0);
                        const A = this.collectedLeaveElements.indexOf(o);
                        A >= 0 && this.collectedLeaveElements.splice(A, 1);
                    }
                    if (a) {
                        const A = this._fetchNamespace(a);
                        A && A.insertNode(o, s);
                    }
                    c && this.collectEnterElement(o);
                }
                collectEnterElement(a) {
                    this.collectedEnterElements.push(a);
                }
                markElementAsDisabled(a, o) {
                    o
                        ? this.disabledNodes.has(a) ||
                          (this.disabledNodes.add(a), Gr(a, He))
                        : this.disabledNodes.has(a) &&
                          (this.disabledNodes.delete(a), Wi(a, He));
                }
                removeNode(a, o, s, c) {
                    if (os(o)) {
                        const p = a ? this._fetchNamespace(a) : null;
                        if (
                            (p
                                ? p.removeNode(o, c)
                                : this.markElementAsRemoved(a, o, !1, c),
                            s)
                        ) {
                            const A = this.namespacesByHostElement.get(o);
                            A && A.id !== a && A.removeNode(o, c);
                        }
                    } else this._onRemovalComplete(o, c);
                }
                markElementAsRemoved(a, o, s, c, p) {
                    this.collectedLeaveElements.push(o),
                        (o[Fn] = {
                            namespaceId: a,
                            setForRemoval: c,
                            hasAnimation: s,
                            removedBeforeQueried: !1,
                            previousTriggersValues: p,
                        });
                }
                listen(a, o, s, c, p) {
                    return os(o)
                        ? this._fetchNamespace(a).listen(o, s, c, p)
                        : () => {};
                }
                _buildInstruction(a, o, s, c, p) {
                    return a.transition.build(
                        this.driver,
                        a.element,
                        a.fromState.value,
                        a.toState.value,
                        s,
                        c,
                        a.fromState.options,
                        a.toState.options,
                        o,
                        p
                    );
                }
                destroyInnerAnimations(a) {
                    let o = this.driver.query(a, dr, !0);
                    o.forEach((s) => this.destroyActiveAnimationsForElement(s)),
                        0 != this.playersByQueriedElement.size &&
                            ((o = this.driver.query(a, Le, !0)),
                            o.forEach((s) =>
                                this.finishActiveQueriedAnimationOnElement(s)
                            ));
                }
                destroyActiveAnimationsForElement(a) {
                    const o = this.playersByElement.get(a);
                    o &&
                        o.forEach((s) => {
                            s.queued ? (s.markedForDestroy = !0) : s.destroy();
                        });
                }
                finishActiveQueriedAnimationOnElement(a) {
                    const o = this.playersByQueriedElement.get(a);
                    o && o.forEach((s) => s.finish());
                }
                whenRenderingDone() {
                    return new Promise((a) => {
                        if (this.players.length)
                            return an(this.players).onDone(() => a());
                        a();
                    });
                }
                processLeaveNode(a) {
                    var o;
                    const s = a[Fn];
                    if (s && s.setForRemoval) {
                        if (((a[Fn] = ei), s.namespaceId)) {
                            this.destroyInnerAnimations(a);
                            const c = this._fetchNamespace(s.namespaceId);
                            c && c.clearElementCache(a);
                        }
                        this._onRemovalComplete(a, s.setForRemoval);
                    }
                    (null === (o = a.classList) || void 0 === o
                        ? void 0
                        : o.contains(He)) && this.markElementAsDisabled(a, !1),
                        this.driver
                            .query(a, '.ng-animate-disabled', !0)
                            .forEach((c) => {
                                this.markElementAsDisabled(c, !1);
                            });
                }
                flush(a = -1) {
                    let o = [];
                    if (
                        (this.newHostElements.size &&
                            (this.newHostElements.forEach((s, c) =>
                                this._balanceNamespaceList(s, c)
                            ),
                            this.newHostElements.clear()),
                        this.totalAnimations &&
                            this.collectedEnterElements.length)
                    )
                        for (
                            let s = 0;
                            s < this.collectedEnterElements.length;
                            s++
                        )
                            Gr(
                                this.collectedEnterElements[s],
                                'ng-star-inserted'
                            );
                    if (
                        this._namespaceList.length &&
                        (this.totalQueuedPlayers ||
                            this.collectedLeaveElements.length)
                    ) {
                        const s = [];
                        try {
                            o = this._flushAnimations(s, a);
                        } finally {
                            for (let c = 0; c < s.length; c++) s[c]();
                        }
                    } else
                        for (
                            let s = 0;
                            s < this.collectedLeaveElements.length;
                            s++
                        )
                            this.processLeaveNode(
                                this.collectedLeaveElements[s]
                            );
                    if (
                        ((this.totalQueuedPlayers = 0),
                        (this.collectedEnterElements.length = 0),
                        (this.collectedLeaveElements.length = 0),
                        this._flushFns.forEach((s) => s()),
                        (this._flushFns = []),
                        this._whenQuietFns.length)
                    ) {
                        const s = this._whenQuietFns;
                        (this._whenQuietFns = []),
                            o.length
                                ? an(o).onDone(() => {
                                      s.forEach((c) => c());
                                  })
                                : s.forEach((c) => c());
                    }
                }
                reportError(a) {
                    throw new Error(
                        `Unable to process animations due to the following failed trigger transitions\n ${a.join(
                            '\n'
                        )}`
                    );
                }
                _flushAnimations(a, o) {
                    const s = new Yr(),
                        c = [],
                        p = new Map(),
                        A = [],
                        P = new Map(),
                        $ = new Map(),
                        re = new Map(),
                        ke = new Set();
                    this.disabledNodes.forEach((Mt) => {
                        ke.add(Mt);
                        const Ht = this.driver.query(
                            Mt,
                            '.ng-animate-queued',
                            !0
                        );
                        for (let Vt = 0; Vt < Ht.length; Vt++) ke.add(Ht[Vt]);
                    });
                    const Ge = this.bodyNode,
                        at = Array.from(this.statesByElement.keys()),
                        et = ro(at, this.collectedEnterElements),
                        dt = new Map();
                    let gt = 0;
                    et.forEach((Mt, Ht) => {
                        const Vt = Tr + gt++;
                        dt.set(Ht, Vt), Mt.forEach((An) => Gr(An, Vt));
                    });
                    const zt = [],
                        bn = new Set(),
                        er = new Set();
                    for (
                        let Mt = 0;
                        Mt < this.collectedLeaveElements.length;
                        Mt++
                    ) {
                        const Ht = this.collectedLeaveElements[Mt],
                            Vt = Ht[Fn];
                        Vt &&
                            Vt.setForRemoval &&
                            (zt.push(Ht),
                            bn.add(Ht),
                            Vt.hasAnimation
                                ? this.driver
                                      .query(Ht, '.ng-star-inserted', !0)
                                      .forEach((An) => bn.add(An))
                                : er.add(Ht));
                    }
                    const rr = new Map(),
                        ir = ro(at, Array.from(bn));
                    ir.forEach((Mt, Ht) => {
                        const Vt = $n + gt++;
                        rr.set(Ht, Vt), Mt.forEach((An) => Gr(An, Vt));
                    }),
                        a.push(() => {
                            et.forEach((Mt, Ht) => {
                                const Vt = dt.get(Ht);
                                Mt.forEach((An) => Wi(An, Vt));
                            }),
                                ir.forEach((Mt, Ht) => {
                                    const Vt = rr.get(Ht);
                                    Mt.forEach((An) => Wi(An, Vt));
                                }),
                                zt.forEach((Mt) => {
                                    this.processLeaveNode(Mt);
                                });
                        });
                    const wi = [],
                        Si = [];
                    for (let Mt = this._namespaceList.length - 1; Mt >= 0; Mt--)
                        this._namespaceList[Mt].drainQueuedTransitions(
                            o
                        ).forEach((Vt) => {
                            const An = Vt.player,
                                zr = Vt.element;
                            if (
                                (wi.push(An),
                                this.collectedEnterElements.length)
                            ) {
                                const ui = zr[Fn];
                                if (ui && ui.setForMove) {
                                    if (
                                        ui.previousTriggersValues &&
                                        ui.previousTriggersValues.has(
                                            Vt.triggerName
                                        )
                                    ) {
                                        const fs =
                                                ui.previousTriggersValues.get(
                                                    Vt.triggerName
                                                ),
                                            hs = this.statesByElement.get(
                                                Vt.element
                                            );
                                        hs &&
                                            hs[Vt.triggerName] &&
                                            (hs[Vt.triggerName].value = fs);
                                    }
                                    return void An.destroy();
                                }
                            }
                            const Ss =
                                    !Ge || !this.driver.containsElement(Ge, zr),
                                yi = rr.get(zr),
                                Zs = dt.get(zr),
                                vr = this._buildInstruction(Vt, s, Zs, yi, Ss);
                            if (vr.errors && vr.errors.length)
                                return void Si.push(vr);
                            if (Ss)
                                return (
                                    An.onStart(() => gr(zr, vr.fromStyles)),
                                    An.onDestroy(() => Bn(zr, vr.toStyles)),
                                    void c.push(An)
                                );
                            if (Vt.isFallbackTransition)
                                return (
                                    An.onStart(() => gr(zr, vr.fromStyles)),
                                    An.onDestroy(() => Bn(zr, vr.toStyles)),
                                    void c.push(An)
                                );
                            const gl = [];
                            vr.timelines.forEach((ui) => {
                                (ui.stretchStartingKeyframe = !0),
                                    this.disabledNodes.has(ui.element) ||
                                        gl.push(ui);
                            }),
                                (vr.timelines = gl),
                                s.append(zr, vr.timelines),
                                A.push({
                                    instruction: vr,
                                    player: An,
                                    element: zr,
                                }),
                                vr.queriedElements.forEach((ui) =>
                                    Tn(P, ui, []).push(An)
                                ),
                                vr.preStyleProps.forEach((ui, fs) => {
                                    const hs = Object.keys(ui);
                                    if (hs.length) {
                                        let Bi = $.get(fs);
                                        Bi || $.set(fs, (Bi = new Set())),
                                            hs.forEach((La) => Bi.add(La));
                                    }
                                }),
                                vr.postStyleProps.forEach((ui, fs) => {
                                    const hs = Object.keys(ui);
                                    let Bi = re.get(fs);
                                    Bi || re.set(fs, (Bi = new Set())),
                                        hs.forEach((La) => Bi.add(La));
                                });
                        });
                    if (Si.length) {
                        const Mt = [];
                        Si.forEach((Ht) => {
                            Mt.push(`@${Ht.triggerName} has failed due to:\n`),
                                Ht.errors.forEach((Vt) => Mt.push(`- ${Vt}\n`));
                        }),
                            wi.forEach((Ht) => Ht.destroy()),
                            this.reportError(Mt);
                    }
                    const Vr = new Map(),
                        li = new Map();
                    A.forEach((Mt) => {
                        const Ht = Mt.element;
                        s.has(Ht) &&
                            (li.set(Ht, Ht),
                            this._beforeAnimationBuild(
                                Mt.player.namespaceId,
                                Mt.instruction,
                                Vr
                            ));
                    }),
                        c.forEach((Mt) => {
                            const Ht = Mt.element;
                            this._getPreviousPlayers(
                                Ht,
                                !1,
                                Mt.namespaceId,
                                Mt.triggerName,
                                null
                            ).forEach((An) => {
                                Tn(Vr, Ht, []).push(An), An.destroy();
                            });
                        });
                    const qi = zt.filter((Mt) => io(Mt, $, re)),
                        mi = new Map();
                    Ns(mi, this.driver, er, re, Jt.l3).forEach((Mt) => {
                        io(Mt, $, re) && qi.push(Mt);
                    });
                    const Ro = new Map();
                    et.forEach((Mt, Ht) => {
                        Ns(Ro, this.driver, new Set(Mt), $, Jt.k1);
                    }),
                        qi.forEach((Mt) => {
                            const Ht = mi.get(Mt),
                                Vt = Ro.get(Mt);
                            mi.set(
                                Mt,
                                Object.assign(Object.assign({}, Ht), Vt)
                            );
                        });
                    const ws = [],
                        $o = [],
                        Na = {};
                    A.forEach((Mt) => {
                        const { element: Ht, player: Vt, instruction: An } = Mt;
                        if (s.has(Ht)) {
                            if (ke.has(Ht))
                                return (
                                    Vt.onDestroy(() => Bn(Ht, An.toStyles)),
                                    (Vt.disabled = !0),
                                    Vt.overrideTotalTime(An.totalTime),
                                    void c.push(Vt)
                                );
                            let zr = Na;
                            if (li.size > 1) {
                                let yi = Ht;
                                const Zs = [];
                                for (; (yi = yi.parentNode); ) {
                                    const vr = li.get(yi);
                                    if (vr) {
                                        zr = vr;
                                        break;
                                    }
                                    Zs.push(yi);
                                }
                                Zs.forEach((vr) => li.set(vr, zr));
                            }
                            const Ss = this._buildAnimation(
                                Vt.namespaceId,
                                An,
                                Vr,
                                p,
                                Ro,
                                mi
                            );
                            if ((Vt.setRealPlayer(Ss), zr === Na)) ws.push(Vt);
                            else {
                                const yi = this.playersByElement.get(zr);
                                yi && yi.length && (Vt.parentPlayer = an(yi)),
                                    c.push(Vt);
                            }
                        } else
                            gr(Ht, An.fromStyles),
                                Vt.onDestroy(() => Bn(Ht, An.toStyles)),
                                $o.push(Vt),
                                ke.has(Ht) && c.push(Vt);
                    }),
                        $o.forEach((Mt) => {
                            const Ht = p.get(Mt.element);
                            if (Ht && Ht.length) {
                                const Vt = an(Ht);
                                Mt.setRealPlayer(Vt);
                            }
                        }),
                        c.forEach((Mt) => {
                            Mt.parentPlayer
                                ? Mt.syncPlayerEvents(Mt.parentPlayer)
                                : Mt.destroy();
                        });
                    for (let Mt = 0; Mt < zt.length; Mt++) {
                        const Ht = zt[Mt],
                            Vt = Ht[Fn];
                        if ((Wi(Ht, $n), Vt && Vt.hasAnimation)) continue;
                        let An = [];
                        if (P.size) {
                            let Ss = P.get(Ht);
                            Ss && Ss.length && An.push(...Ss);
                            let yi = this.driver.query(Ht, Le, !0);
                            for (let Zs = 0; Zs < yi.length; Zs++) {
                                let vr = P.get(yi[Zs]);
                                vr && vr.length && An.push(...vr);
                            }
                        }
                        const zr = An.filter((Ss) => !Ss.destroyed);
                        zr.length
                            ? as(this, Ht, zr)
                            : this.processLeaveNode(Ht);
                    }
                    return (
                        (zt.length = 0),
                        ws.forEach((Mt) => {
                            this.players.push(Mt),
                                Mt.onDone(() => {
                                    Mt.destroy();
                                    const Ht = this.players.indexOf(Mt);
                                    this.players.splice(Ht, 1);
                                }),
                                Mt.play();
                        }),
                        ws
                    );
                }
                elementContainsData(a, o) {
                    let s = !1;
                    const c = o[Fn];
                    return (
                        c && c.setForRemoval && (s = !0),
                        this.playersByElement.has(o) && (s = !0),
                        this.playersByQueriedElement.has(o) && (s = !0),
                        this.statesByElement.has(o) && (s = !0),
                        this._fetchNamespace(a).elementContainsData(o) || s
                    );
                }
                afterFlush(a) {
                    this._flushFns.push(a);
                }
                afterFlushAnimationsDone(a) {
                    this._whenQuietFns.push(a);
                }
                _getPreviousPlayers(a, o, s, c, p) {
                    let A = [];
                    if (o) {
                        const P = this.playersByQueriedElement.get(a);
                        P && (A = P);
                    } else {
                        const P = this.playersByElement.get(a);
                        if (P) {
                            const $ = !p || p == Gi;
                            P.forEach((re) => {
                                re.queued ||
                                    (!$ && re.triggerName != c) ||
                                    A.push(re);
                            });
                        }
                    }
                    return (
                        (s || c) &&
                            (A = A.filter(
                                (P) =>
                                    !(
                                        (s && s != P.namespaceId) ||
                                        (c && c != P.triggerName)
                                    )
                            )),
                        A
                    );
                }
                _beforeAnimationBuild(a, o, s) {
                    const p = o.element,
                        A = o.isRemovalTransition ? void 0 : a,
                        P = o.isRemovalTransition ? void 0 : o.triggerName;
                    for (const $ of o.timelines) {
                        const re = $.element,
                            ke = re !== p,
                            Ge = Tn(s, re, []);
                        this._getPreviousPlayers(
                            re,
                            ke,
                            A,
                            P,
                            o.toState
                        ).forEach((et) => {
                            const dt = et.getRealPlayer();
                            dt.beforeDestroy && dt.beforeDestroy(),
                                et.destroy(),
                                Ge.push(et);
                        });
                    }
                    gr(p, o.fromStyles);
                }
                _buildAnimation(a, o, s, c, p, A) {
                    const P = o.triggerName,
                        $ = o.element,
                        re = [],
                        ke = new Set(),
                        Ge = new Set(),
                        at = o.timelines.map((dt) => {
                            const gt = dt.element;
                            ke.add(gt);
                            const zt = gt[Fn];
                            if (zt && zt.removedBeforeQueried)
                                return new Jt.ZN(dt.duration, dt.delay);
                            const bn = gt !== $,
                                er = (function yo(m) {
                                    const a = [];
                                    return ls(m, a), a;
                                })(
                                    (s.get(gt) || Rn).map((Vr) =>
                                        Vr.getRealPlayer()
                                    )
                                ).filter(
                                    (Vr) => !!Vr.element && Vr.element === gt
                                ),
                                rr = p.get(gt),
                                ir = A.get(gt),
                                wi = vn(
                                    0,
                                    this._normalizer,
                                    0,
                                    dt.keyframes,
                                    rr,
                                    ir
                                ),
                                Si = this._buildPlayer(dt, wi, er);
                            if ((dt.subTimeline && c && Ge.add(gt), bn)) {
                                const Vr = new ss(a, P, gt);
                                Vr.setRealPlayer(Si), re.push(Vr);
                            }
                            return Si;
                        });
                    re.forEach((dt) => {
                        Tn(this.playersByQueriedElement, dt.element, []).push(
                            dt
                        ),
                            dt.onDone(() =>
                                (function Sr(m, a, o) {
                                    let s;
                                    if (m instanceof Map) {
                                        if (((s = m.get(a)), s)) {
                                            if (s.length) {
                                                const c = s.indexOf(o);
                                                s.splice(c, 1);
                                            }
                                            0 == s.length && m.delete(a);
                                        }
                                    } else if (((s = m[a]), s)) {
                                        if (s.length) {
                                            const c = s.indexOf(o);
                                            s.splice(c, 1);
                                        }
                                        0 == s.length && delete m[a];
                                    }
                                    return s;
                                })(this.playersByQueriedElement, dt.element, dt)
                            );
                    }),
                        ke.forEach((dt) => Gr(dt, ee));
                    const et = an(at);
                    return (
                        et.onDestroy(() => {
                            ke.forEach((dt) => Wi(dt, ee)), Bn($, o.toStyles);
                        }),
                        Ge.forEach((dt) => {
                            Tn(c, dt, []).push(et);
                        }),
                        et
                    );
                }
                _buildPlayer(a, o, s) {
                    return o.length > 0
                        ? this.driver.animate(
                              a.element,
                              o,
                              a.duration,
                              a.delay,
                              a.easing,
                              s
                          )
                        : new Jt.ZN(a.duration, a.delay);
                }
            }
            class ss {
                constructor(a, o, s) {
                    (this.namespaceId = a),
                        (this.triggerName = o),
                        (this.element = s),
                        (this._player = new Jt.ZN()),
                        (this._containsRealPlayer = !1),
                        (this._queuedCallbacks = {}),
                        (this.destroyed = !1),
                        (this.markedForDestroy = !1),
                        (this.disabled = !1),
                        (this.queued = !0),
                        (this.totalTime = 0);
                }
                setRealPlayer(a) {
                    this._containsRealPlayer ||
                        ((this._player = a),
                        Object.keys(this._queuedCallbacks).forEach((o) => {
                            this._queuedCallbacks[o].forEach((s) =>
                                Gn(a, o, void 0, s)
                            );
                        }),
                        (this._queuedCallbacks = {}),
                        (this._containsRealPlayer = !0),
                        this.overrideTotalTime(a.totalTime),
                        (this.queued = !1));
                }
                getRealPlayer() {
                    return this._player;
                }
                overrideTotalTime(a) {
                    this.totalTime = a;
                }
                syncPlayerEvents(a) {
                    const o = this._player;
                    o.triggerCallback &&
                        a.onStart(() => o.triggerCallback('start')),
                        a.onDone(() => this.finish()),
                        a.onDestroy(() => this.destroy());
                }
                _queueEvent(a, o) {
                    Tn(this._queuedCallbacks, a, []).push(o);
                }
                onDone(a) {
                    this.queued && this._queueEvent('done', a),
                        this._player.onDone(a);
                }
                onStart(a) {
                    this.queued && this._queueEvent('start', a),
                        this._player.onStart(a);
                }
                onDestroy(a) {
                    this.queued && this._queueEvent('destroy', a),
                        this._player.onDestroy(a);
                }
                init() {
                    this._player.init();
                }
                hasStarted() {
                    return !this.queued && this._player.hasStarted();
                }
                play() {
                    !this.queued && this._player.play();
                }
                pause() {
                    !this.queued && this._player.pause();
                }
                restart() {
                    !this.queued && this._player.restart();
                }
                finish() {
                    this._player.finish();
                }
                destroy() {
                    (this.destroyed = !0), this._player.destroy();
                }
                reset() {
                    !this.queued && this._player.reset();
                }
                setPosition(a) {
                    this.queued || this._player.setPosition(a);
                }
                getPosition() {
                    return this.queued ? 0 : this._player.getPosition();
                }
                triggerCallback(a) {
                    const o = this._player;
                    o.triggerCallback && o.triggerCallback(a);
                }
            }
            function os(m) {
                return m && 1 === m.nodeType;
            }
            function gi(m, a) {
                const o = m.style.display;
                return (m.style.display = null != a ? a : 'none'), o;
            }
            function Ns(m, a, o, s, c) {
                const p = [];
                o.forEach(($) => p.push(gi($)));
                const A = [];
                s.forEach(($, re) => {
                    const ke = {};
                    $.forEach((Ge) => {
                        const at = (ke[Ge] = a.computeStyle(re, Ge, c));
                        (!at || 0 == at.length) && ((re[Fn] = pi), A.push(re));
                    }),
                        m.set(re, ke);
                });
                let P = 0;
                return o.forEach(($) => gi($, p[P++])), A;
            }
            function ro(m, a) {
                const o = new Map();
                if ((m.forEach((P) => o.set(P, [])), 0 == a.length)) return o;
                const c = new Set(a),
                    p = new Map();
                function A(P) {
                    if (!P) return 1;
                    let $ = p.get(P);
                    if ($) return $;
                    const re = P.parentNode;
                    return (
                        ($ = o.has(re) ? re : c.has(re) ? 1 : A(re)),
                        p.set(P, $),
                        $
                    );
                }
                return (
                    a.forEach((P) => {
                        const $ = A(P);
                        1 !== $ && o.get($).push(P);
                    }),
                    o
                );
            }
            function Gr(m, a) {
                var o;
                null === (o = m.classList) || void 0 === o || o.add(a);
            }
            function Wi(m, a) {
                var o;
                null === (o = m.classList) || void 0 === o || o.remove(a);
            }
            function as(m, a, o) {
                an(o).onDone(() => m.processLeaveNode(a));
            }
            function ls(m, a) {
                for (let o = 0; o < m.length; o++) {
                    const s = m[o];
                    s instanceof Jt.ZE ? ls(s.players, a) : a.push(s);
                }
            }
            function io(m, a, o) {
                const s = o.get(m);
                if (!s) return !1;
                let c = a.get(m);
                return (
                    c ? s.forEach((p) => c.add(p)) : a.set(m, s),
                    o.delete(m),
                    !0
                );
            }
            class Fi {
                constructor(a, o, s) {
                    (this.bodyNode = a),
                        (this._driver = o),
                        (this._normalizer = s),
                        (this._triggerCache = {}),
                        (this.onRemovalComplete = (c, p) => {}),
                        (this._transitionEngine = new ys(a, o, s)),
                        (this._timelineEngine = new D(a, o, s)),
                        (this._transitionEngine.onRemovalComplete = (c, p) =>
                            this.onRemovalComplete(c, p));
                }
                registerTrigger(a, o, s, c, p) {
                    const A = a + '-' + c;
                    let P = this._triggerCache[A];
                    if (!P) {
                        const $ = [],
                            re = fi(this._driver, p, $);
                        if ($.length)
                            throw new Error(
                                `The animation trigger "${c}" has failed to build due to the following errors:\n - ${$.join(
                                    '\n - '
                                )}`
                            );
                        (P = (function Rr(m, a, o) {
                            return new Lt(m, a, o);
                        })(c, re, this._normalizer)),
                            (this._triggerCache[A] = P);
                    }
                    this._transitionEngine.registerTrigger(o, c, P);
                }
                register(a, o) {
                    this._transitionEngine.register(a, o);
                }
                destroy(a, o) {
                    this._transitionEngine.destroy(a, o);
                }
                onInsert(a, o, s, c) {
                    this._transitionEngine.insertNode(a, o, s, c);
                }
                onRemove(a, o, s, c) {
                    this._transitionEngine.removeNode(a, o, c || !1, s);
                }
                disableAnimations(a, o) {
                    this._transitionEngine.markElementAsDisabled(a, o);
                }
                process(a, o, s, c) {
                    if ('@' == s.charAt(0)) {
                        const [p, A] = hr(s);
                        this._timelineEngine.command(p, o, A, c);
                    } else this._transitionEngine.trigger(a, o, s, c);
                }
                listen(a, o, s, c, p) {
                    if ('@' == s.charAt(0)) {
                        const [A, P] = hr(s);
                        return this._timelineEngine.listen(A, o, P, p);
                    }
                    return this._transitionEngine.listen(a, o, s, c, p);
                }
                flush(a = -1) {
                    this._transitionEngine.flush(a);
                }
                get players() {
                    return this._transitionEngine.players.concat(
                        this._timelineEngine.players
                    );
                }
                whenRenderingDone() {
                    return this._transitionEngine.whenRenderingDone();
                }
            }
            let Es = (() => {
                class m extends Jt._j {
                    constructor(o, s) {
                        super(),
                            (this._nextAnimationId = 0),
                            (this._renderer = o.createRenderer(s.body, {
                                id: '0',
                                encapsulation: w.ifc.None,
                                styles: [],
                                data: { animation: [] },
                            }));
                    }
                    build(o) {
                        const s = this._nextAnimationId.toString();
                        this._nextAnimationId++;
                        const c = Array.isArray(o) ? (0, Jt.vP)(o) : o;
                        return (
                            bi(this._renderer, null, s, 'register', [c]),
                            new ko(s, this._renderer)
                        );
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(w.FYo), w.LFG(l.K0));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            class ko extends Jt.LC {
                constructor(a, o) {
                    super(), (this._id = a), (this._renderer = o);
                }
                create(a, o) {
                    return new Ir(this._id, a, o || {}, this._renderer);
                }
            }
            class Ir {
                constructor(a, o, s, c) {
                    (this.id = a),
                        (this.element = o),
                        (this._renderer = c),
                        (this.parentPlayer = null),
                        (this._started = !1),
                        (this.totalTime = 0),
                        this._command('create', s);
                }
                _listen(a, o) {
                    return this._renderer.listen(
                        this.element,
                        `@@${this.id}:${a}`,
                        o
                    );
                }
                _command(a, ...o) {
                    return bi(this._renderer, this.element, this.id, a, o);
                }
                onDone(a) {
                    this._listen('done', a);
                }
                onStart(a) {
                    this._listen('start', a);
                }
                onDestroy(a) {
                    this._listen('destroy', a);
                }
                init() {
                    this._command('init');
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this._command('play'), (this._started = !0);
                }
                pause() {
                    this._command('pause');
                }
                restart() {
                    this._command('restart');
                }
                finish() {
                    this._command('finish');
                }
                destroy() {
                    this._command('destroy');
                }
                reset() {
                    this._command('reset'), (this._started = !1);
                }
                setPosition(a) {
                    this._command('setPosition', a);
                }
                getPosition() {
                    var a, o;
                    return null !==
                        (o =
                            null ===
                                (a = this._renderer.engine.players[+this.id]) ||
                            void 0 === a
                                ? void 0
                                : a.getPosition()) && void 0 !== o
                        ? o
                        : 0;
                }
            }
            function bi(m, a, o, s, c) {
                return m.setProperty(a, `@@${o}:${s}`, c);
            }
            const vo = '@.disabled';
            let oo = (() => {
                class m {
                    constructor(o, s, c) {
                        (this.delegate = o),
                            (this.engine = s),
                            (this._zone = c),
                            (this._currentId = 0),
                            (this._microtaskId = 1),
                            (this._animationCallbacksBuffer = []),
                            (this._rendererCache = new Map()),
                            (this._cdRecurDepth = 0),
                            (this.promise = Promise.resolve(0)),
                            (s.onRemovalComplete = (p, A) => {
                                const P = null == A ? void 0 : A.parentNode(p);
                                P && A.removeChild(P, p);
                            });
                    }
                    createRenderer(o, s) {
                        const p = this.delegate.createRenderer(o, s);
                        if (!(o && s && s.data && s.data.animation)) {
                            let ke = this._rendererCache.get(p);
                            return (
                                ke ||
                                    ((ke = new Bo('', p, this.engine)),
                                    this._rendererCache.set(p, ke)),
                                ke
                            );
                        }
                        const A = s.id,
                            P = s.id + '-' + this._currentId;
                        this._currentId++, this.engine.register(P, o);
                        const $ = (ke) => {
                            Array.isArray(ke)
                                ? ke.forEach($)
                                : this.engine.registerTrigger(
                                      A,
                                      P,
                                      o,
                                      ke.name,
                                      ke
                                  );
                        };
                        return (
                            s.data.animation.forEach($),
                            new Zo(this, P, p, this.engine)
                        );
                    }
                    begin() {
                        this._cdRecurDepth++,
                            this.delegate.begin && this.delegate.begin();
                    }
                    _scheduleCountTask() {
                        this.promise.then(() => {
                            this._microtaskId++;
                        });
                    }
                    scheduleListenerCallback(o, s, c) {
                        o >= 0 && o < this._microtaskId
                            ? this._zone.run(() => s(c))
                            : (0 == this._animationCallbacksBuffer.length &&
                                  Promise.resolve(null).then(() => {
                                      this._zone.run(() => {
                                          this._animationCallbacksBuffer.forEach(
                                              (p) => {
                                                  const [A, P] = p;
                                                  A(P);
                                              }
                                          ),
                                              (this._animationCallbacksBuffer =
                                                  []);
                                      });
                                  }),
                              this._animationCallbacksBuffer.push([s, c]));
                    }
                    end() {
                        this._cdRecurDepth--,
                            0 == this._cdRecurDepth &&
                                this._zone.runOutsideAngular(() => {
                                    this._scheduleCountTask(),
                                        this.engine.flush(this._microtaskId);
                                }),
                            this.delegate.end && this.delegate.end();
                    }
                    whenRenderingDone() {
                        return this.engine.whenRenderingDone();
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(
                            w.LFG(w.FYo),
                            w.LFG(Fi),
                            w.LFG(w.R0b)
                        );
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            class Bo {
                constructor(a, o, s) {
                    (this.namespaceId = a),
                        (this.delegate = o),
                        (this.engine = s),
                        (this.destroyNode = this.delegate.destroyNode
                            ? (c) => o.destroyNode(c)
                            : null);
                }
                get data() {
                    return this.delegate.data;
                }
                destroy() {
                    this.engine.destroy(this.namespaceId, this.delegate),
                        this.delegate.destroy();
                }
                createElement(a, o) {
                    return this.delegate.createElement(a, o);
                }
                createComment(a) {
                    return this.delegate.createComment(a);
                }
                createText(a) {
                    return this.delegate.createText(a);
                }
                appendChild(a, o) {
                    this.delegate.appendChild(a, o),
                        this.engine.onInsert(this.namespaceId, o, a, !1);
                }
                insertBefore(a, o, s, c = !0) {
                    this.delegate.insertBefore(a, o, s),
                        this.engine.onInsert(this.namespaceId, o, a, c);
                }
                removeChild(a, o, s) {
                    this.engine.onRemove(this.namespaceId, o, this.delegate, s);
                }
                selectRootElement(a, o) {
                    return this.delegate.selectRootElement(a, o);
                }
                parentNode(a) {
                    return this.delegate.parentNode(a);
                }
                nextSibling(a) {
                    return this.delegate.nextSibling(a);
                }
                setAttribute(a, o, s, c) {
                    this.delegate.setAttribute(a, o, s, c);
                }
                removeAttribute(a, o, s) {
                    this.delegate.removeAttribute(a, o, s);
                }
                addClass(a, o) {
                    this.delegate.addClass(a, o);
                }
                removeClass(a, o) {
                    this.delegate.removeClass(a, o);
                }
                setStyle(a, o, s, c) {
                    this.delegate.setStyle(a, o, s, c);
                }
                removeStyle(a, o, s) {
                    this.delegate.removeStyle(a, o, s);
                }
                setProperty(a, o, s) {
                    '@' == o.charAt(0) && o == vo
                        ? this.disableAnimations(a, !!s)
                        : this.delegate.setProperty(a, o, s);
                }
                setValue(a, o) {
                    this.delegate.setValue(a, o);
                }
                listen(a, o, s) {
                    return this.delegate.listen(a, o, s);
                }
                disableAnimations(a, o) {
                    this.engine.disableAnimations(a, o);
                }
            }
            class Zo extends Bo {
                constructor(a, o, s, c) {
                    super(o, s, c), (this.factory = a), (this.namespaceId = o);
                }
                setProperty(a, o, s) {
                    '@' == o.charAt(0)
                        ? '.' == o.charAt(1) && o == vo
                            ? this.disableAnimations(
                                  a,
                                  (s = void 0 === s || !!s)
                              )
                            : this.engine.process(
                                  this.namespaceId,
                                  a,
                                  o.substr(1),
                                  s
                              )
                        : this.delegate.setProperty(a, o, s);
                }
                listen(a, o, s) {
                    if ('@' == o.charAt(0)) {
                        const c = (function Vs(m) {
                            switch (m) {
                                case 'body':
                                    return document.body;
                                case 'document':
                                    return document;
                                case 'window':
                                    return window;
                                default:
                                    return m;
                            }
                        })(a);
                        let p = o.substr(1),
                            A = '';
                        return (
                            '@' != p.charAt(0) &&
                                ([p, A] = (function Eo(m) {
                                    const a = m.indexOf('.');
                                    return [m.substring(0, a), m.substr(a + 1)];
                                })(p)),
                            this.engine.listen(
                                this.namespaceId,
                                c,
                                p,
                                A,
                                (P) => {
                                    this.factory.scheduleListenerCallback(
                                        P._data || -1,
                                        s,
                                        P
                                    );
                                }
                            )
                        );
                    }
                    return this.delegate.listen(a, o, s);
                }
            }
            let Us = (() => {
                class m extends Fi {
                    constructor(o, s, c) {
                        super(o.body, s, c);
                    }
                    ngOnDestroy() {
                        this.flush();
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(l.K0), w.LFG(In), w.LFG(Ke));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            const oi = [
                { provide: In, useClass: Cr },
                {
                    provide: new w.OlP('AnimationModuleType'),
                    useValue: 'NoopAnimations',
                },
                ...[
                    { provide: Jt._j, useClass: Es },
                    {
                        provide: Ke,
                        useFactory: function js() {
                            return new Ut();
                        },
                    },
                    { provide: Fi, useClass: Us },
                    {
                        provide: w.FYo,
                        useFactory: function Mr(m, a, o) {
                            return new oo(m, a, o);
                        },
                        deps: [be, Fi, w.R0b],
                    },
                ],
            ];
            let Do = (() => {
                class m {}
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)();
                    }),
                    (m.ɵmod = w.oAB({ type: m })),
                    (m.ɵinj = w.cJS({ providers: oi, imports: [Te] })),
                    m
                );
            })();
            var $s = _(423),
                Ni = _(845),
                Cs = _(9783);
            function Co(m, a) {
                1 & m && w.GkF(0);
            }
            function bo(m, a) {
                if (
                    (1 & m &&
                        (w.TgZ(0, 'div', 3),
                        w.YNc(1, Co, 1, 0, 'ng-container', 4),
                        w.qZA()),
                    2 & m)
                ) {
                    const o = w.oxw();
                    w.xp6(1), w.Q6J('ngTemplateOutlet', o.leftTemplate);
                }
            }
            function To(m, a) {
                1 & m && w.GkF(0);
            }
            function Ma(m, a) {
                if (
                    (1 & m &&
                        (w.TgZ(0, 'div', 5),
                        w.YNc(1, To, 1, 0, 'ng-container', 4),
                        w.qZA()),
                    2 & m)
                ) {
                    const o = w.oxw();
                    w.xp6(1), w.Q6J('ngTemplateOutlet', o.rightTemplate);
                }
            }
            const ur = ['*'];
            let ao = (() => {
                    class m {
                        constructor(o) {
                            this.el = o;
                        }
                        getBlockableElement() {
                            return this.el.nativeElement.children[0];
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((o) => {
                                switch (o.getType()) {
                                    case 'left':
                                        this.leftTemplate = o.template;
                                        break;
                                    case 'right':
                                        this.rightTemplate = o.template;
                                }
                            });
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)(w.Y36(w.SBq));
                        }),
                        (m.ɵcmp = w.Xpm({
                            type: m,
                            selectors: [['p-toolbar']],
                            contentQueries: function (o, s, c) {
                                if ((1 & o && w.Suo(c, Cs.jx, 4), 2 & o)) {
                                    let p;
                                    w.iGM((p = w.CRH())) && (s.templates = p);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                style: 'style',
                                styleClass: 'styleClass',
                            },
                            ngContentSelectors: ur,
                            decls: 4,
                            vars: 6,
                            consts: [
                                ['role', 'toolbar', 3, 'ngClass', 'ngStyle'],
                                ['class', 'p-toolbar-group-left', 4, 'ngIf'],
                                ['class', 'p-toolbar-group-right', 4, 'ngIf'],
                                [1, 'p-toolbar-group-left'],
                                [4, 'ngTemplateOutlet'],
                                [1, 'p-toolbar-group-right'],
                            ],
                            template: function (o, s) {
                                1 & o &&
                                    (w.F$t(),
                                    w.TgZ(0, 'div', 0),
                                    w.Hsn(1),
                                    w.YNc(2, bo, 2, 1, 'div', 1),
                                    w.YNc(3, Ma, 2, 1, 'div', 2),
                                    w.qZA()),
                                    2 & o &&
                                        (w.Tol(s.styleClass),
                                        w.Q6J(
                                            'ngClass',
                                            'p-toolbar p-component'
                                        )('ngStyle', s.style),
                                        w.xp6(2),
                                        w.Q6J('ngIf', s.leftTemplate),
                                        w.xp6(1),
                                        w.Q6J('ngIf', s.rightTemplate));
                            },
                            directives: [l.mk, l.PC, l.O5, l.tP],
                            styles: [
                                '.p-toolbar{display:flex;align-items:center;justify-content:space-between;flex-wrap:wrap}.p-toolbar-group-left,.p-toolbar-group-right{display:flex;align-items:center}\n',
                            ],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        m
                    );
                })(),
                lo = (() => {
                    class m {}
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)();
                        }),
                        (m.ɵmod = w.oAB({ type: m })),
                        (m.ɵinj = w.cJS({ imports: [[l.ez]] })),
                        m
                    );
                })();
            var us = _(3385),
                Li = _(4004);
            let uo = (() => {
                    class m {
                        constructor(o) {
                            this.afAuth = o;
                        }
                        isLoggedIn() {
                            return this.afAuth.user.pipe((0, Li.U)((o) => !!o));
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)(w.LFG(us.zQ));
                        }),
                        (m.ɵprov = w.Yz7({
                            token: m,
                            factory: m.ɵfac,
                            providedIn: 'root',
                        })),
                        m
                    );
                })(),
                cs = (() => {
                    class m {}
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)();
                        }),
                        (m.ɵmod = w.oAB({ type: m })),
                        (m.ɵinj = w.cJS({
                            providers: [uo],
                            imports: [[l.ez, us.ww]],
                        })),
                        m
                    );
                })(),
                co = (() => {
                    class m {}
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)();
                        }),
                        (m.ɵmod = w.oAB({ type: m })),
                        (m.ɵinj = w.cJS({
                            imports: [
                                [
                                    l.ez,
                                    $s.UserButtonModule,
                                    bt.Bz,
                                    Ni.hJ,
                                    lo,
                                    cs,
                                ],
                            ],
                        })),
                        m
                    );
                })();
            var zi = _(2266),
                bs = _(9568);
            const Ts = function () {
                return { 'background-color': '#3B82F6', color: '#ffffff' };
            };
            function Ao(m, a) {
                if (1 & m) {
                    const o = w.EpF();
                    w.ynx(0),
                        w.TgZ(1, 'div', 2),
                        w.TgZ(2, 'p-avatar', 3),
                        w.NdJ('click', function (c) {
                            return w.CHM(o), w.MAs(4).toggle(c);
                        }),
                        w.qZA(),
                        w._UZ(3, 'p-menu', 4, 5),
                        w.qZA(),
                        w.BQk();
                }
                if (2 & m) {
                    const o = w.oxw();
                    w.xp6(2),
                        w.Akn(w.DdM(4, Ts)),
                        w.xp6(1),
                        w.Q6J('popup', !0)('model', o.menuItems);
                }
            }
            function Gs(m, a) {
                1 & m && w._UZ(0, 'p-button', 6);
            }
            let wo = (() => {
                class m {
                    constructor(o, s) {
                        (this.afAuth = o),
                            (this.router = s),
                            (this.menuItems = [
                                {
                                    label: 'Sign Out',
                                    icon: 'pi pi-sign-out',
                                    command: () => this.signOut(),
                                },
                            ]);
                    }
                    ngOnInit() {
                        this.email$ = this.afAuth.user.pipe(
                            (0, Li.U)((o) => (null == o ? void 0 : o.email))
                        );
                    }
                    signOut() {
                        this.afAuth.signOut(), this.router.navigate(['/']);
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.Y36(us.zQ), w.Y36(bt.F0));
                    }),
                    (m.ɵcmp = w.Xpm({
                        type: m,
                        selectors: [['sol-user-button']],
                        decls: 4,
                        vars: 4,
                        consts: [
                            [4, 'ngIf', 'ngIfElse'],
                            ['login', ''],
                            [2, 'cursor', 'pointer'],
                            [
                                'size',
                                'large',
                                'icon',
                                'pi pi-user',
                                'styleClass',
                                'mr-2',
                                3,
                                'click',
                            ],
                            [3, 'popup', 'model'],
                            ['menu', ''],
                            [
                                'routerLink',
                                '/user/login',
                                'label',
                                'Sign In',
                                'styleClass',
                                'p-button-md',
                            ],
                        ],
                        template: function (o, s) {
                            if (
                                (1 & o &&
                                    (w.YNc(0, Ao, 5, 5, 'ng-container', 0),
                                    w.ALo(1, 'async'),
                                    w.YNc(
                                        2,
                                        Gs,
                                        1,
                                        0,
                                        'ng-template',
                                        null,
                                        1,
                                        w.W1O
                                    )),
                                2 & o)
                            ) {
                                const c = w.MAs(3);
                                w.Q6J('ngIf', w.lcZ(1, 2, s.email$))(
                                    'ngIfElse',
                                    c
                                );
                            }
                        },
                        directives: [l.O5, zi.q, bs.v2, Ni.zx, bt.rH],
                        pipes: [l.Ov],
                        encapsulation: 2,
                        changeDetection: 0,
                    })),
                    m
                );
            })();
            function Vo(m, a) {
                1 & m &&
                    (w.ynx(0),
                    w.TgZ(1, 'div', 7),
                    w._UZ(2, 'p-button', 8),
                    w.qZA(),
                    w.TgZ(3, 'div', 9),
                    w._UZ(4, 'p-button', 10),
                    w.qZA(),
                    w.BQk());
            }
            const Ki = [
                {
                    path: '',
                    component: (() => {
                        class m {
                            constructor(o) {
                                (this.userService = o),
                                    (this.isLoggedIn$ =
                                        this.userService.isLoggedIn());
                            }
                        }
                        return (
                            (m.ɵfac = function (o) {
                                return new (o || m)(w.Y36(uo));
                            }),
                            (m.ɵcmp = w.Xpm({
                                type: m,
                                selectors: [['ng-component']],
                                decls: 11,
                                vars: 3,
                                consts: [
                                    [1, 'toolbarz'],
                                    ['styleClass', 'toolbar'],
                                    [1, 'p-toolbar-group-left'],
                                    [
                                        'routerLink',
                                        '/',
                                        2,
                                        'margin',
                                        '0',
                                        'cursor',
                                        'pointer',
                                    ],
                                    [1, 'p-toolbar-group-right'],
                                    [4, 'ngIf'],
                                    [2, 'padding', '1rem'],
                                    [2, 'margin-right', '1rem'],
                                    [
                                        'routerLink',
                                        '/calendar/classes',
                                        'label',
                                        'Calendar Demo',
                                        'styleClass',
                                        'p-button-success p-button-md',
                                    ],
                                    [2, 'margin-right', '3rem'],
                                    [
                                        'routerLink',
                                        '/report',
                                        'label',
                                        'Report Demo',
                                        'styleClass',
                                        'p-button-help p-button-md',
                                    ],
                                ],
                                template: function (o, s) {
                                    1 & o &&
                                        (w.TgZ(0, 'header', 0),
                                        w.TgZ(1, 'p-toolbar', 1),
                                        w.TgZ(2, 'div', 2),
                                        w.TgZ(3, 'h2', 3),
                                        w._uU(4, ' Mountain SOL School '),
                                        w.qZA(),
                                        w.qZA(),
                                        w.TgZ(5, 'div', 4),
                                        w.YNc(6, Vo, 5, 0, 'ng-container', 5),
                                        w.ALo(7, 'async'),
                                        w._UZ(8, 'sol-user-button'),
                                        w.qZA(),
                                        w.qZA(),
                                        w.qZA(),
                                        w.TgZ(9, 'div', 6),
                                        w._UZ(10, 'router-outlet'),
                                        w.qZA()),
                                        2 & o &&
                                            (w.xp6(6),
                                            w.Q6J(
                                                'ngIf',
                                                w.lcZ(7, 1, s.isLoggedIn$)
                                            ));
                                },
                                directives: [ao, bt.rH, l.O5, Ni.zx, wo, bt.lC],
                                pipes: [l.Ov],
                                styles: [
                                    '.toolbar[_ngcontent-%COMP%]{color:green}',
                                ],
                                changeDetection: 0,
                            })),
                            m
                        );
                    })(),
                    children: [
                        {
                            path: 'user',
                            loadChildren: () =>
                                Promise.resolve()
                                    .then(_.bind(_, 423))
                                    .then((m) => m.AuthLoginModule),
                        },
                        {
                            path: 'report',
                            loadChildren: () =>
                                Promise.all([_.e(592), _.e(5)])
                                    .then(_.bind(_, 5005))
                                    .then((m) => m.ReportComponentModule),
                        },
                        {
                            path: 'calendar',
                            loadChildren: () =>
                                Promise.all([_.e(592), _.e(655)])
                                    .then(_.bind(_, 3655))
                                    .then((m) => m.ClassesCalendarModule),
                        },
                    ],
                },
            ];
            let So = (() => {
                class m {}
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)();
                    }),
                    (m.ɵmod = w.oAB({ type: m })),
                    (m.ɵinj = w.cJS({ imports: [[bt.Bz.forRoot(Ki)], bt.Bz] })),
                    m
                );
            })();
            var y = _(2323),
                h = _(5573),
                f = _(2011),
                C = _(9565),
                M = _(9646),
                L = _(8306),
                J = _(4351),
                ue = _(9300);
            class Ue {}
            class Dt {}
            class Yt {
                constructor(a) {
                    (this.normalizedNames = new Map()),
                        (this.lazyUpdate = null),
                        a
                            ? (this.lazyInit =
                                  'string' == typeof a
                                      ? () => {
                                            (this.headers = new Map()),
                                                a.split('\n').forEach((o) => {
                                                    const s = o.indexOf(':');
                                                    if (s > 0) {
                                                        const c = o.slice(0, s),
                                                            p = c.toLowerCase(),
                                                            A = o
                                                                .slice(s + 1)
                                                                .trim();
                                                        this.maybeSetNormalizedName(
                                                            c,
                                                            p
                                                        ),
                                                            this.headers.has(p)
                                                                ? this.headers
                                                                      .get(p)
                                                                      .push(A)
                                                                : this.headers.set(
                                                                      p,
                                                                      [A]
                                                                  );
                                                    }
                                                });
                                        }
                                      : () => {
                                            (this.headers = new Map()),
                                                Object.keys(a).forEach((o) => {
                                                    let s = a[o];
                                                    const c = o.toLowerCase();
                                                    'string' == typeof s &&
                                                        (s = [s]),
                                                        s.length > 0 &&
                                                            (this.headers.set(
                                                                c,
                                                                s
                                                            ),
                                                            this.maybeSetNormalizedName(
                                                                o,
                                                                c
                                                            ));
                                                });
                                        })
                            : (this.headers = new Map());
                }
                has(a) {
                    return this.init(), this.headers.has(a.toLowerCase());
                }
                get(a) {
                    this.init();
                    const o = this.headers.get(a.toLowerCase());
                    return o && o.length > 0 ? o[0] : null;
                }
                keys() {
                    return (
                        this.init(), Array.from(this.normalizedNames.values())
                    );
                }
                getAll(a) {
                    return (
                        this.init(), this.headers.get(a.toLowerCase()) || null
                    );
                }
                append(a, o) {
                    return this.clone({ name: a, value: o, op: 'a' });
                }
                set(a, o) {
                    return this.clone({ name: a, value: o, op: 's' });
                }
                delete(a, o) {
                    return this.clone({ name: a, value: o, op: 'd' });
                }
                maybeSetNormalizedName(a, o) {
                    this.normalizedNames.has(o) ||
                        this.normalizedNames.set(o, a);
                }
                init() {
                    this.lazyInit &&
                        (this.lazyInit instanceof Yt
                            ? this.copyFrom(this.lazyInit)
                            : this.lazyInit(),
                        (this.lazyInit = null),
                        this.lazyUpdate &&
                            (this.lazyUpdate.forEach((a) =>
                                this.applyUpdate(a)
                            ),
                            (this.lazyUpdate = null)));
                }
                copyFrom(a) {
                    a.init(),
                        Array.from(a.headers.keys()).forEach((o) => {
                            this.headers.set(o, a.headers.get(o)),
                                this.normalizedNames.set(
                                    o,
                                    a.normalizedNames.get(o)
                                );
                        });
                }
                clone(a) {
                    const o = new Yt();
                    return (
                        (o.lazyInit =
                            this.lazyInit && this.lazyInit instanceof Yt
                                ? this.lazyInit
                                : this),
                        (o.lazyUpdate = (this.lazyUpdate || []).concat([a])),
                        o
                    );
                }
                applyUpdate(a) {
                    const o = a.name.toLowerCase();
                    switch (a.op) {
                        case 'a':
                        case 's':
                            let s = a.value;
                            if (
                                ('string' == typeof s && (s = [s]),
                                0 === s.length)
                            )
                                return;
                            this.maybeSetNormalizedName(a.name, o);
                            const c =
                                ('a' === a.op ? this.headers.get(o) : void 0) ||
                                [];
                            c.push(...s), this.headers.set(o, c);
                            break;
                        case 'd':
                            const p = a.value;
                            if (p) {
                                let A = this.headers.get(o);
                                if (!A) return;
                                (A = A.filter((P) => -1 === p.indexOf(P))),
                                    0 === A.length
                                        ? (this.headers.delete(o),
                                          this.normalizedNames.delete(o))
                                        : this.headers.set(o, A);
                            } else
                                this.headers.delete(o),
                                    this.normalizedNames.delete(o);
                    }
                }
                forEach(a) {
                    this.init(),
                        Array.from(this.normalizedNames.keys()).forEach((o) =>
                            a(this.normalizedNames.get(o), this.headers.get(o))
                        );
                }
            }
            class It {
                encodeKey(a) {
                    return kr(a);
                }
                encodeValue(a) {
                    return kr(a);
                }
                decodeKey(a) {
                    return decodeURIComponent(a);
                }
                decodeValue(a) {
                    return decodeURIComponent(a);
                }
            }
            const jn = /%(\d[a-f0-9])/gi,
                ki = {
                    40: '@',
                    '3A': ':',
                    24: '$',
                    '2C': ',',
                    '3B': ';',
                    '2B': '+',
                    '3D': '=',
                    '3F': '?',
                    '2F': '/',
                };
            function kr(m) {
                return encodeURIComponent(m).replace(jn, (a, o) => {
                    var s;
                    return null !== (s = ki[o]) && void 0 !== s ? s : a;
                });
            }
            function Zr(m) {
                return `${m}`;
            }
            class Or {
                constructor(a = {}) {
                    if (
                        ((this.updates = null),
                        (this.cloneFrom = null),
                        (this.encoder = a.encoder || new It()),
                        a.fromString)
                    ) {
                        if (a.fromObject)
                            throw new Error(
                                'Cannot specify both fromString and fromObject.'
                            );
                        this.map = (function Un(m, a) {
                            const o = new Map();
                            return (
                                m.length > 0 &&
                                    m
                                        .replace(/^\?/, '')
                                        .split('&')
                                        .forEach((c) => {
                                            const p = c.indexOf('='),
                                                [A, P] =
                                                    -1 == p
                                                        ? [a.decodeKey(c), '']
                                                        : [
                                                              a.decodeKey(
                                                                  c.slice(0, p)
                                                              ),
                                                              a.decodeValue(
                                                                  c.slice(p + 1)
                                                              ),
                                                          ],
                                                $ = o.get(A) || [];
                                            $.push(P), o.set(A, $);
                                        }),
                                o
                            );
                        })(a.fromString, this.encoder);
                    } else
                        a.fromObject
                            ? ((this.map = new Map()),
                              Object.keys(a.fromObject).forEach((o) => {
                                  const s = a.fromObject[o];
                                  this.map.set(o, Array.isArray(s) ? s : [s]);
                              }))
                            : (this.map = null);
                }
                has(a) {
                    return this.init(), this.map.has(a);
                }
                get(a) {
                    this.init();
                    const o = this.map.get(a);
                    return o ? o[0] : null;
                }
                getAll(a) {
                    return this.init(), this.map.get(a) || null;
                }
                keys() {
                    return this.init(), Array.from(this.map.keys());
                }
                append(a, o) {
                    return this.clone({ param: a, value: o, op: 'a' });
                }
                appendAll(a) {
                    const o = [];
                    return (
                        Object.keys(a).forEach((s) => {
                            const c = a[s];
                            Array.isArray(c)
                                ? c.forEach((p) => {
                                      o.push({ param: s, value: p, op: 'a' });
                                  })
                                : o.push({ param: s, value: c, op: 'a' });
                        }),
                        this.clone(o)
                    );
                }
                set(a, o) {
                    return this.clone({ param: a, value: o, op: 's' });
                }
                delete(a, o) {
                    return this.clone({ param: a, value: o, op: 'd' });
                }
                toString() {
                    return (
                        this.init(),
                        this.keys()
                            .map((a) => {
                                const o = this.encoder.encodeKey(a);
                                return this.map
                                    .get(a)
                                    .map(
                                        (s) =>
                                            o +
                                            '=' +
                                            this.encoder.encodeValue(s)
                                    )
                                    .join('&');
                            })
                            .filter((a) => '' !== a)
                            .join('&')
                    );
                }
                clone(a) {
                    const o = new Or({ encoder: this.encoder });
                    return (
                        (o.cloneFrom = this.cloneFrom || this),
                        (o.updates = (this.updates || []).concat(a)),
                        o
                    );
                }
                init() {
                    null === this.map && (this.map = new Map()),
                        null !== this.cloneFrom &&
                            (this.cloneFrom.init(),
                            this.cloneFrom
                                .keys()
                                .forEach((a) =>
                                    this.map.set(a, this.cloneFrom.map.get(a))
                                ),
                            this.updates.forEach((a) => {
                                switch (a.op) {
                                    case 'a':
                                    case 's':
                                        const o =
                                            ('a' === a.op
                                                ? this.map.get(a.param)
                                                : void 0) || [];
                                        o.push(Zr(a.value)),
                                            this.map.set(a.param, o);
                                        break;
                                    case 'd':
                                        if (void 0 === a.value) {
                                            this.map.delete(a.param);
                                            break;
                                        }
                                        {
                                            let s = this.map.get(a.param) || [];
                                            const c = s.indexOf(Zr(a.value));
                                            -1 !== c && s.splice(c, 1),
                                                s.length > 0
                                                    ? this.map.set(a.param, s)
                                                    : this.map.delete(a.param);
                                        }
                                }
                            }),
                            (this.cloneFrom = this.updates = null));
                }
            }
            class Wr {
                constructor() {
                    this.map = new Map();
                }
                set(a, o) {
                    return this.map.set(a, o), this;
                }
                get(a) {
                    return (
                        this.map.has(a) || this.map.set(a, a.defaultValue()),
                        this.map.get(a)
                    );
                }
                delete(a) {
                    return this.map.delete(a), this;
                }
                has(a) {
                    return this.map.has(a);
                }
                keys() {
                    return this.map.keys();
                }
            }
            function Zi(m) {
                return (
                    'undefined' != typeof ArrayBuffer &&
                    m instanceof ArrayBuffer
                );
            }
            function fo(m) {
                return 'undefined' != typeof Blob && m instanceof Blob;
            }
            function jo(m) {
                return 'undefined' != typeof FormData && m instanceof FormData;
            }
            class Io {
                constructor(a, o, s, c) {
                    let p;
                    if (
                        ((this.url = o),
                        (this.body = null),
                        (this.reportProgress = !1),
                        (this.withCredentials = !1),
                        (this.responseType = 'json'),
                        (this.method = a.toUpperCase()),
                        (function Qr(m) {
                            switch (m) {
                                case 'DELETE':
                                case 'GET':
                                case 'HEAD':
                                case 'OPTIONS':
                                case 'JSONP':
                                    return !1;
                                default:
                                    return !0;
                            }
                        })(this.method) || c
                            ? ((this.body = void 0 !== s ? s : null), (p = c))
                            : (p = s),
                        p &&
                            ((this.reportProgress = !!p.reportProgress),
                            (this.withCredentials = !!p.withCredentials),
                            p.responseType &&
                                (this.responseType = p.responseType),
                            p.headers && (this.headers = p.headers),
                            p.context && (this.context = p.context),
                            p.params && (this.params = p.params)),
                        this.headers || (this.headers = new Yt()),
                        this.context || (this.context = new Wr()),
                        this.params)
                    ) {
                        const A = this.params.toString();
                        if (0 === A.length) this.urlWithParams = o;
                        else {
                            const P = o.indexOf('?');
                            this.urlWithParams =
                                o +
                                (-1 === P ? '?' : P < o.length - 1 ? '&' : '') +
                                A;
                        }
                    } else (this.params = new Or()), (this.urlWithParams = o);
                }
                serializeBody() {
                    return null === this.body
                        ? null
                        : Zi(this.body) ||
                          fo(this.body) ||
                          jo(this.body) ||
                          (function Ws(m) {
                              return (
                                  'undefined' != typeof URLSearchParams &&
                                  m instanceof URLSearchParams
                              );
                          })(this.body) ||
                          'string' == typeof this.body
                        ? this.body
                        : this.body instanceof Or
                        ? this.body.toString()
                        : 'object' == typeof this.body ||
                          'boolean' == typeof this.body ||
                          Array.isArray(this.body)
                        ? JSON.stringify(this.body)
                        : this.body.toString();
                }
                detectContentTypeHeader() {
                    return null === this.body || jo(this.body)
                        ? null
                        : fo(this.body)
                        ? this.body.type || null
                        : Zi(this.body)
                        ? null
                        : 'string' == typeof this.body
                        ? 'text/plain'
                        : this.body instanceof Or
                        ? 'application/x-www-form-urlencoded;charset=UTF-8'
                        : 'object' == typeof this.body ||
                          'number' == typeof this.body ||
                          'boolean' == typeof this.body
                        ? 'application/json'
                        : null;
                }
                clone(a = {}) {
                    var o;
                    const s = a.method || this.method,
                        c = a.url || this.url,
                        p = a.responseType || this.responseType,
                        A = void 0 !== a.body ? a.body : this.body,
                        P =
                            void 0 !== a.withCredentials
                                ? a.withCredentials
                                : this.withCredentials,
                        $ =
                            void 0 !== a.reportProgress
                                ? a.reportProgress
                                : this.reportProgress;
                    let re = a.headers || this.headers,
                        ke = a.params || this.params;
                    const Ge =
                        null !== (o = a.context) && void 0 !== o
                            ? o
                            : this.context;
                    return (
                        void 0 !== a.setHeaders &&
                            (re = Object.keys(a.setHeaders).reduce(
                                (at, et) => at.set(et, a.setHeaders[et]),
                                re
                            )),
                        a.setParams &&
                            (ke = Object.keys(a.setParams).reduce(
                                (at, et) => at.set(et, a.setParams[et]),
                                ke
                            )),
                        new Io(s, c, A, {
                            params: ke,
                            headers: re,
                            context: Ge,
                            reportProgress: $,
                            responseType: p,
                            withCredentials: P,
                        })
                    );
                }
            }
            var fr = (() => (
                ((fr = fr || {})[(fr.Sent = 0)] = 'Sent'),
                (fr[(fr.UploadProgress = 1)] = 'UploadProgress'),
                (fr[(fr.ResponseHeader = 2)] = 'ResponseHeader'),
                (fr[(fr.DownloadProgress = 3)] = 'DownloadProgress'),
                (fr[(fr.Response = 4)] = 'Response'),
                (fr[(fr.User = 5)] = 'User'),
                fr
            ))();
            class cr {
                constructor(a, o = 200, s = 'OK') {
                    (this.headers = a.headers || new Yt()),
                        (this.status = void 0 !== a.status ? a.status : o),
                        (this.statusText = a.statusText || s),
                        (this.url = a.url || null),
                        (this.ok = this.status >= 200 && this.status < 300);
                }
            }
            class Qo extends cr {
                constructor(a = {}) {
                    super(a), (this.type = fr.ResponseHeader);
                }
                clone(a = {}) {
                    return new Qo({
                        headers: a.headers || this.headers,
                        status: void 0 !== a.status ? a.status : this.status,
                        statusText: a.statusText || this.statusText,
                        url: a.url || this.url || void 0,
                    });
                }
            }
            class qo extends cr {
                constructor(a = {}) {
                    super(a),
                        (this.type = fr.Response),
                        (this.body = void 0 !== a.body ? a.body : null);
                }
                clone(a = {}) {
                    return new qo({
                        body: void 0 !== a.body ? a.body : this.body,
                        headers: a.headers || this.headers,
                        status: void 0 !== a.status ? a.status : this.status,
                        statusText: a.statusText || this.statusText,
                        url: a.url || this.url || void 0,
                    });
                }
            }
            class ul extends cr {
                constructor(a) {
                    super(a, 0, 'Unknown Error'),
                        (this.name = 'HttpErrorResponse'),
                        (this.ok = !1),
                        (this.message =
                            this.status >= 200 && this.status < 300
                                ? `Http failure during parsing for ${
                                      a.url || '(unknown url)'
                                  }`
                                : `Http failure response for ${
                                      a.url || '(unknown url)'
                                  }: ${a.status} ${a.statusText}`),
                        (this.error = a.error || null);
                }
            }
            function Jo(m, a) {
                return {
                    body: a,
                    headers: m.headers,
                    context: m.context,
                    observe: m.observe,
                    params: m.params,
                    reportProgress: m.reportProgress,
                    responseType: m.responseType,
                    withCredentials: m.withCredentials,
                };
            }
            let Oa = (() => {
                class m {
                    constructor(o) {
                        this.handler = o;
                    }
                    request(o, s, c = {}) {
                        let p;
                        if (o instanceof Io) p = o;
                        else {
                            let $, re;
                            ($ =
                                c.headers instanceof Yt
                                    ? c.headers
                                    : new Yt(c.headers)),
                                c.params &&
                                    (re =
                                        c.params instanceof Or
                                            ? c.params
                                            : new Or({ fromObject: c.params })),
                                (p = new Io(
                                    o,
                                    s,
                                    void 0 !== c.body ? c.body : null,
                                    {
                                        headers: $,
                                        context: c.context,
                                        params: re,
                                        reportProgress: c.reportProgress,
                                        responseType: c.responseType || 'json',
                                        withCredentials: c.withCredentials,
                                    }
                                ));
                        }
                        const A = (0, M.of)(p).pipe(
                            (0, J.b)(($) => this.handler.handle($))
                        );
                        if (o instanceof Io || 'events' === c.observe) return A;
                        const P = A.pipe((0, ue.h)(($) => $ instanceof qo));
                        switch (c.observe || 'body') {
                            case 'body':
                                switch (p.responseType) {
                                    case 'arraybuffer':
                                        return P.pipe(
                                            (0, Li.U)(($) => {
                                                if (
                                                    null !== $.body &&
                                                    !(
                                                        $.body instanceof
                                                        ArrayBuffer
                                                    )
                                                )
                                                    throw new Error(
                                                        'Response is not an ArrayBuffer.'
                                                    );
                                                return $.body;
                                            })
                                        );
                                    case 'blob':
                                        return P.pipe(
                                            (0, Li.U)(($) => {
                                                if (
                                                    null !== $.body &&
                                                    !($.body instanceof Blob)
                                                )
                                                    throw new Error(
                                                        'Response is not a Blob.'
                                                    );
                                                return $.body;
                                            })
                                        );
                                    case 'text':
                                        return P.pipe(
                                            (0, Li.U)(($) => {
                                                if (
                                                    null !== $.body &&
                                                    'string' != typeof $.body
                                                )
                                                    throw new Error(
                                                        'Response is not a string.'
                                                    );
                                                return $.body;
                                            })
                                        );
                                    default:
                                        return P.pipe((0, Li.U)(($) => $.body));
                                }
                            case 'response':
                                return P;
                            default:
                                throw new Error(
                                    `Unreachable: unhandled observe type ${c.observe}}`
                                );
                        }
                    }
                    delete(o, s = {}) {
                        return this.request('DELETE', o, s);
                    }
                    get(o, s = {}) {
                        return this.request('GET', o, s);
                    }
                    head(o, s = {}) {
                        return this.request('HEAD', o, s);
                    }
                    jsonp(o, s) {
                        return this.request('JSONP', o, {
                            params: new Or().append(s, 'JSONP_CALLBACK'),
                            observe: 'body',
                            responseType: 'json',
                        });
                    }
                    options(o, s = {}) {
                        return this.request('OPTIONS', o, s);
                    }
                    patch(o, s, c = {}) {
                        return this.request('PATCH', o, Jo(c, s));
                    }
                    post(o, s, c = {}) {
                        return this.request('POST', o, Jo(c, s));
                    }
                    put(o, s, c = {}) {
                        return this.request('PUT', o, Jo(c, s));
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(Ue));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            class Xo {
                constructor(a, o) {
                    (this.next = a), (this.interceptor = o);
                }
                handle(a) {
                    return this.interceptor.intercept(a, this.next);
                }
            }
            const ea = new w.OlP('HTTP_INTERCEPTORS');
            let ho = (() => {
                class m {
                    intercept(o, s) {
                        return s.handle(o);
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)();
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            const Ai = /^\)\]\}',?\n/;
            let zs = (() => {
                class m {
                    constructor(o) {
                        this.xhrFactory = o;
                    }
                    handle(o) {
                        if ('JSONP' === o.method)
                            throw new Error(
                                'Attempted to construct Jsonp request without HttpClientJsonpModule installed.'
                            );
                        return new L.y((s) => {
                            const c = this.xhrFactory.build();
                            if (
                                (c.open(o.method, o.urlWithParams),
                                o.withCredentials && (c.withCredentials = !0),
                                o.headers.forEach((et, dt) =>
                                    c.setRequestHeader(et, dt.join(','))
                                ),
                                o.headers.has('Accept') ||
                                    c.setRequestHeader(
                                        'Accept',
                                        'application/json, text/plain, */*'
                                    ),
                                !o.headers.has('Content-Type'))
                            ) {
                                const et = o.detectContentTypeHeader();
                                null !== et &&
                                    c.setRequestHeader('Content-Type', et);
                            }
                            if (o.responseType) {
                                const et = o.responseType.toLowerCase();
                                c.responseType = 'json' !== et ? et : 'text';
                            }
                            const p = o.serializeBody();
                            let A = null;
                            const P = () => {
                                    if (null !== A) return A;
                                    const et =
                                            1223 === c.status ? 204 : c.status,
                                        dt = c.statusText || 'OK',
                                        gt = new Yt(c.getAllResponseHeaders()),
                                        zt =
                                            (function Oo(m) {
                                                return 'responseURL' in m &&
                                                    m.responseURL
                                                    ? m.responseURL
                                                    : /^X-Request-URL:/m.test(
                                                          m.getAllResponseHeaders()
                                                      )
                                                    ? m.getResponseHeader(
                                                          'X-Request-URL'
                                                      )
                                                    : null;
                                            })(c) || o.url;
                                    return (
                                        (A = new Qo({
                                            headers: gt,
                                            status: et,
                                            statusText: dt,
                                            url: zt,
                                        })),
                                        A
                                    );
                                },
                                $ = () => {
                                    let {
                                            headers: et,
                                            status: dt,
                                            statusText: gt,
                                            url: zt,
                                        } = P(),
                                        bn = null;
                                    204 !== dt &&
                                        (bn =
                                            void 0 === c.response
                                                ? c.responseText
                                                : c.response),
                                        0 === dt && (dt = bn ? 200 : 0);
                                    let er = dt >= 200 && dt < 300;
                                    if (
                                        'json' === o.responseType &&
                                        'string' == typeof bn
                                    ) {
                                        const rr = bn;
                                        bn = bn.replace(Ai, '');
                                        try {
                                            bn =
                                                '' !== bn
                                                    ? JSON.parse(bn)
                                                    : null;
                                        } catch (ir) {
                                            (bn = rr),
                                                er &&
                                                    ((er = !1),
                                                    (bn = {
                                                        error: ir,
                                                        text: bn,
                                                    }));
                                        }
                                    }
                                    er
                                        ? (s.next(
                                              new qo({
                                                  body: bn,
                                                  headers: et,
                                                  status: dt,
                                                  statusText: gt,
                                                  url: zt || void 0,
                                              })
                                          ),
                                          s.complete())
                                        : s.error(
                                              new ul({
                                                  error: bn,
                                                  headers: et,
                                                  status: dt,
                                                  statusText: gt,
                                                  url: zt || void 0,
                                              })
                                          );
                                },
                                re = (et) => {
                                    const { url: dt } = P(),
                                        gt = new ul({
                                            error: et,
                                            status: c.status || 0,
                                            statusText:
                                                c.statusText || 'Unknown Error',
                                            url: dt || void 0,
                                        });
                                    s.error(gt);
                                };
                            let ke = !1;
                            const Ge = (et) => {
                                    ke || (s.next(P()), (ke = !0));
                                    let dt = {
                                        type: fr.DownloadProgress,
                                        loaded: et.loaded,
                                    };
                                    et.lengthComputable &&
                                        (dt.total = et.total),
                                        'text' === o.responseType &&
                                            !!c.responseText &&
                                            (dt.partialText = c.responseText),
                                        s.next(dt);
                                },
                                at = (et) => {
                                    let dt = {
                                        type: fr.UploadProgress,
                                        loaded: et.loaded,
                                    };
                                    et.lengthComputable &&
                                        (dt.total = et.total),
                                        s.next(dt);
                                };
                            return (
                                c.addEventListener('load', $),
                                c.addEventListener('error', re),
                                c.addEventListener('timeout', re),
                                c.addEventListener('abort', re),
                                o.reportProgress &&
                                    (c.addEventListener('progress', Ge),
                                    null !== p &&
                                        c.upload &&
                                        c.upload.addEventListener(
                                            'progress',
                                            at
                                        )),
                                c.send(p),
                                s.next({ type: fr.Sent }),
                                () => {
                                    c.removeEventListener('error', re),
                                        c.removeEventListener('abort', re),
                                        c.removeEventListener('load', $),
                                        c.removeEventListener('timeout', re),
                                        o.reportProgress &&
                                            (c.removeEventListener(
                                                'progress',
                                                Ge
                                            ),
                                            null !== p &&
                                                c.upload &&
                                                c.upload.removeEventListener(
                                                    'progress',
                                                    at
                                                )),
                                        c.readyState !== c.DONE && c.abort();
                                }
                            );
                        });
                    }
                }
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)(w.LFG(l.JF));
                    }),
                    (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                    m
                );
            })();
            const Qi = new w.OlP('XSRF_COOKIE_NAME'),
                Ks = new w.OlP('XSRF_HEADER_NAME');
            class Ra {}
            let cl = (() => {
                    class m {
                        constructor(o, s, c) {
                            (this.doc = o),
                                (this.platform = s),
                                (this.cookieName = c),
                                (this.lastCookieString = ''),
                                (this.lastToken = null),
                                (this.parseCount = 0);
                        }
                        getToken() {
                            if ('server' === this.platform) return null;
                            const o = this.doc.cookie || '';
                            return (
                                o !== this.lastCookieString &&
                                    (this.parseCount++,
                                    (this.lastToken = (0, l.Mx)(
                                        o,
                                        this.cookieName
                                    )),
                                    (this.lastCookieString = o)),
                                this.lastToken
                            );
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)(
                                w.LFG(l.K0),
                                w.LFG(w.Lbi),
                                w.LFG(Qi)
                            );
                        }),
                        (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                        m
                    );
                })(),
                xa = (() => {
                    class m {
                        constructor(o, s) {
                            (this.tokenService = o), (this.headerName = s);
                        }
                        intercept(o, s) {
                            const c = o.url.toLowerCase();
                            if (
                                'GET' === o.method ||
                                'HEAD' === o.method ||
                                c.startsWith('http://') ||
                                c.startsWith('https://')
                            )
                                return s.handle(o);
                            const p = this.tokenService.getToken();
                            return (
                                null !== p &&
                                    !o.headers.has(this.headerName) &&
                                    (o = o.clone({
                                        headers: o.headers.set(
                                            this.headerName,
                                            p
                                        ),
                                    })),
                                s.handle(o)
                            );
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)(w.LFG(Ra), w.LFG(Ks));
                        }),
                        (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                        m
                    );
                })(),
                dl = (() => {
                    class m {
                        constructor(o, s) {
                            (this.backend = o),
                                (this.injector = s),
                                (this.chain = null);
                        }
                        handle(o) {
                            if (null === this.chain) {
                                const s = this.injector.get(ea, []);
                                this.chain = s.reduceRight(
                                    (c, p) => new Xo(c, p),
                                    this.backend
                                );
                            }
                            return this.chain.handle(o);
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)(w.LFG(Dt), w.LFG(w.zs3));
                        }),
                        (m.ɵprov = w.Yz7({ token: m, factory: m.ɵfac })),
                        m
                    );
                })(),
                Po = (() => {
                    class m {
                        static disable() {
                            return {
                                ngModule: m,
                                providers: [{ provide: xa, useClass: ho }],
                            };
                        }
                        static withOptions(o = {}) {
                            return {
                                ngModule: m,
                                providers: [
                                    o.cookieName
                                        ? {
                                              provide: Qi,
                                              useValue: o.cookieName,
                                          }
                                        : [],
                                    o.headerName
                                        ? {
                                              provide: Ks,
                                              useValue: o.headerName,
                                          }
                                        : [],
                                ],
                            };
                        }
                    }
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)();
                        }),
                        (m.ɵmod = w.oAB({ type: m })),
                        (m.ɵinj = w.cJS({
                            providers: [
                                xa,
                                { provide: ea, useExisting: xa, multi: !0 },
                                { provide: Ra, useClass: cl },
                                { provide: Qi, useValue: 'XSRF-TOKEN' },
                                { provide: Ks, useValue: 'X-XSRF-TOKEN' },
                            ],
                        })),
                        m
                    );
                })(),
                Ys = (() => {
                    class m {}
                    return (
                        (m.ɵfac = function (o) {
                            return new (o || m)();
                        }),
                        (m.ɵmod = w.oAB({ type: m })),
                        (m.ɵinj = w.cJS({
                            providers: [
                                Oa,
                                { provide: Ue, useClass: dl },
                                zs,
                                { provide: Dt, useExisting: zs },
                            ],
                            imports: [
                                [
                                    Po.withOptions({
                                        cookieName: 'XSRF-TOKEN',
                                        headerName: 'X-XSRF-TOKEN',
                                    }),
                                ],
                            ],
                        })),
                        m
                    );
                })();
            var Ho = _(2228);
            const fl = [
                    { provide: ea, useClass: $s.AuthInterceptor, multi: !0 },
                ],
                hl = {
                    provide: Ho.jQ,
                    useValue: 'https://mountain-sol-platform.web.app',
                };
            let na = (() => {
                class m {}
                return (
                    (m.ɵfac = function (o) {
                        return new (o || m)();
                    }),
                    (m.ɵmod = w.oAB({ type: m, bootstrap: [Xn] })),
                    (m.ɵinj = w.cJS({
                        providers: [fl, hl],
                        imports: [
                            [
                                f.hO.initializeApp({
                                    apiKey: 'AIzaSyBxv66X_Ye4MXI5lt8Sjc1xz88rdWJJ0ho',
                                    authDomain: 'mountain-sol-platform.web.app',
                                    projectId: 'mountain-sol-platform',
                                    storageBucket:
                                        'mountain-sol-platform.appspot.com',
                                    messagingSenderId: '319228048592',
                                    appId: '1:319228048592:web:2d418795ca948ba2665ad5',
                                    measurementId: 'G-QN03ENCDDC',
                                }),
                                Te,
                                Do,
                                So,
                                co,
                                y.Aw.forRoot({}, {}),
                                C.FT.instrument({ maxAge: 25, autoPause: !0 }),
                                h.sQ.forRoot([]),
                                Ho.Qv,
                                Ys,
                            ],
                        ],
                    })),
                    m
                );
            })();
            (0, w.G48)(),
                Ye()
                    .bootstrapModule(na, {
                        defaultEncapsulation: w.ifc.ShadowDom,
                    })
                    .catch((m) => console.error(m));
        },
        423: (de, z, _) => {
            'use strict';
            _.r(z),
                _.d(z, {
                    AuthInterceptor: () => Pe,
                    AuthLoginModule: () => xe,
                    AuthLoginRoutingModule: () => se,
                    UserButtonModule: () => ne,
                });
            var l = _(9808),
                w = _(8996),
                G = _(8505),
                j = _(5e3),
                S = _(3385),
                x = _(6115);
            let k = (() => {
                    class le {
                        constructor(be, ye) {
                            (this.afAuth = be), (this.router = ye);
                        }
                        login(be, ye) {
                            return (0, w.D)(
                                this.afAuth.signInWithEmailAndPassword(be, ye)
                            );
                        }
                        emailSignup(be, ye) {
                            (0, w.D)(
                                this.afAuth.createUserWithEmailAndPassword(
                                    be,
                                    ye
                                )
                            ).pipe(
                                (0, G.b)(() =>
                                    this.router.navigateByUrl('/profile')
                                )
                            );
                        }
                        logout() {
                            (0, w.D)(this.afAuth.signOut()).pipe(
                                (0, G.b)(() => this.router.navigate(['/']))
                            );
                        }
                    }
                    return (
                        (le.ɵfac = function (be) {
                            return new (be || le)(j.LFG(S.zQ), j.LFG(x.F0));
                        }),
                        (le.ɵprov = j.Yz7({ token: le, factory: le.ɵfac })),
                        le
                    );
                })(),
                W = (() => {
                    class le {}
                    return (
                        (le.ɵfac = function (be) {
                            return new (be || le)();
                        }),
                        (le.ɵmod = j.oAB({ type: le })),
                        (le.ɵinj = j.cJS({
                            providers: [k],
                            imports: [[l.ez, S.ww]],
                        })),
                        le
                    );
                })();
            var B = _(2382),
                V = _(5573),
                U = _(2323);
            (0, U.PH)('[Go to Login Button] Visit Login Intent');
            const De = (0, U.PH)('[Login Service] Login Intent', (0, U.Ky)()),
                Ee = (0, U.PH)('[Login Effects] Login Success');
            var _e = _(3900),
                Se = _(4004),
                Z = _(9300);
            let X = (() => {
                class le {
                    constructor(be, ye, ut) {
                        (this.actions$ = be),
                            (this.authService = ye),
                            (this.router = ut),
                            (this.login$ = (0, V.GW)(() =>
                                this.actions$.pipe(
                                    (0, V.l4)(De),
                                    (0, _e.w)(({ email: Pt, password: ln }) =>
                                        this.authService.login(Pt, ln).pipe(
                                            (0, Se.U)(({ user: nt }) => nt),
                                            (0, Z.h)((nt) => !!nt),
                                            (0, Se.U)(() => Ee())
                                        )
                                    ),
                                    (0, G.b)(() => this.router.navigate(['/']))
                                )
                            ));
                    }
                }
                return (
                    (le.ɵfac = function (be) {
                        return new (be || le)(
                            j.LFG(V.eX),
                            j.LFG(k),
                            j.LFG(x.F0)
                        );
                    }),
                    (le.ɵprov = j.Yz7({
                        token: le,
                        factory: le.ɵfac,
                        providedIn: 'root',
                    })),
                    le
                );
            })();
            var Ce = _(1424),
                ae = _(845);
            const ie = [
                {
                    path: 'login',
                    component: (() => {
                        class le {
                            constructor(be, ye) {
                                (this.formBuilder = be),
                                    (this.store = ye),
                                    (this.loginForm = this.formBuilder.group({
                                        email: [],
                                        password: [],
                                    }));
                            }
                            loginClick() {
                                var be, ye;
                                this.store.dispatch(
                                    De({
                                        email:
                                            null === (be = this.loginForm) ||
                                            void 0 === be
                                                ? void 0
                                                : be.value.email,
                                        password:
                                            null === (ye = this.loginForm) ||
                                            void 0 === ye
                                                ? void 0
                                                : ye.value.password,
                                    })
                                );
                            }
                        }
                        return (
                            (le.ɵfac = function (be) {
                                return new (be || le)(j.Y36(B.qu), j.Y36(U.yh));
                            }),
                            (le.ɵcmp = j.Xpm({
                                type: le,
                                selectors: [['ng-component']],
                                decls: 16,
                                vars: 1,
                                consts: [
                                    [1, 'p-fluid', 3, 'formGroup'],
                                    [1, 'field'],
                                    ['for', 'email'],
                                    [1, 'p-inputgroup'],
                                    [1, 'p-inputgroup-addon'],
                                    [1, 'pi', 'pi-user'],
                                    [
                                        'id',
                                        'email',
                                        'type',
                                        'text',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'email',
                                        'placeholder',
                                        'somebody@email.com',
                                    ],
                                    [1, 'pi', 'pi-lock'],
                                    [
                                        'type',
                                        'password',
                                        'pInputText',
                                        '',
                                        'formControlName',
                                        'password',
                                    ],
                                    ['label', 'Submit', 3, 'click'],
                                ],
                                template: function (be, ye) {
                                    1 & be &&
                                        (j.TgZ(0, 'div', 0),
                                        j.TgZ(1, 'div', 1),
                                        j.TgZ(2, 'label', 2),
                                        j._uU(3, 'Email'),
                                        j.qZA(),
                                        j.TgZ(4, 'div', 3),
                                        j.TgZ(5, 'span', 4),
                                        j._UZ(6, 'i', 5),
                                        j.qZA(),
                                        j._UZ(7, 'input', 6),
                                        j.qZA(),
                                        j.qZA(),
                                        j.TgZ(8, 'div', 1),
                                        j.TgZ(9, 'label', 2),
                                        j._uU(10, 'Password'),
                                        j.qZA(),
                                        j.TgZ(11, 'div', 3),
                                        j.TgZ(12, 'span', 4),
                                        j._UZ(13, 'i', 7),
                                        j.qZA(),
                                        j._UZ(14, 'input', 8),
                                        j.qZA(),
                                        j.qZA(),
                                        j.qZA(),
                                        j.TgZ(15, 'p-button', 9),
                                        j.NdJ('click', function () {
                                            return ye.loginClick();
                                        }),
                                        j.qZA()),
                                        2 & be &&
                                            j.Q6J('formGroup', ye.loginForm);
                                },
                                directives: [
                                    B.JL,
                                    B.sg,
                                    B.Fj,
                                    Ce.o,
                                    B.JJ,
                                    B.u,
                                    ae.zx,
                                ],
                                encapsulation: 2,
                                changeDetection: 0,
                            })),
                            le
                        );
                    })(),
                    children: [],
                },
            ];
            let se = (() => {
                    class le {}
                    return (
                        (le.ɵfac = function (be) {
                            return new (be || le)();
                        }),
                        (le.ɵmod = j.oAB({ type: le })),
                        (le.ɵinj = j.cJS({
                            imports: [[x.Bz.forChild(ie)], x.Bz],
                        })),
                        le
                    );
                })(),
                xe = (() => {
                    class le {}
                    return (
                        (le.ɵfac = function (be) {
                            return new (be || le)();
                        }),
                        (le.ɵmod = j.oAB({ type: le })),
                        (le.ɵinj = j.cJS({
                            imports: [
                                [
                                    l.ez,
                                    se,
                                    B.UX,
                                    ae.hJ,
                                    Ce.j,
                                    W,
                                    V.sQ.forFeature([X]),
                                ],
                            ],
                        })),
                        le
                    );
                })();
            var $e = _(2266),
                it = _(9568);
            let ne = (() => {
                    class le {}
                    return (
                        (le.ɵfac = function (be) {
                            return new (be || le)();
                        }),
                        (le.ɵmod = j.oAB({ type: le })),
                        (le.ɵinj = j.cJS({
                            imports: [[l.ez, ae.hJ, $e.F, x.Bz, it.$9]],
                        })),
                        le
                    );
                })(),
                Pe = (() => {
                    class le {
                        constructor(be) {
                            this.afAuth = be;
                        }
                        intercept(be, ye) {
                            return this.afAuth.user.pipe(
                                (0, _e.w)((ut) =>
                                    ut
                                        ? (0, w.D)(ut.getIdToken()).pipe(
                                              (0, Se.U)((Pt) =>
                                                  be.clone({
                                                      headers:
                                                          be.headers.append(
                                                              'Authorization',
                                                              `Bearer ${Pt}`
                                                          ),
                                                  })
                                              ),
                                              (0, _e.w)((Pt) => ye.handle(Pt))
                                          )
                                        : ye.handle(be)
                                )
                            );
                        }
                    }
                    return (
                        (le.ɵfac = function (be) {
                            return new (be || le)(j.LFG(S.zQ));
                        }),
                        (le.ɵprov = j.Yz7({ token: le, factory: le.ɵfac })),
                        le
                    );
                })();
        },
        5867: (de, z, _) => {
            'use strict';
            _.d(z, { Mq: () => l.getApp, C6: () => l.getApps });
            var l = _(9681);
            (0, l.registerVersion)('firebase', '9.6.5', 'app');
        },
        127: (de, z, _) => {
            'use strict';
            _.d(z, { Z: () => l.Z });
            var l = _(3942);
            l.Z.registerVersion('firebase', '9.6.5', 'app-compat');
        },
        2940: function (de, z) {
            !(function (_) {
                'use strict';
                function l(Z) {
                    return Array.prototype.slice.call(Z);
                }
                function w(Z) {
                    return new Promise(function (X, Ce) {
                        (Z.onsuccess = function () {
                            X(Z.result);
                        }),
                            (Z.onerror = function () {
                                Ce(Z.error);
                            });
                    });
                }
                function G(Z, X, Ce) {
                    var ae,
                        Y = new Promise(function (ie, se) {
                            w((ae = Z[X].apply(Z, Ce))).then(ie, se);
                        });
                    return (Y.request = ae), Y;
                }
                function j(Z, X, Ce) {
                    var ae = G(Z, X, Ce);
                    return ae.then(function (Y) {
                        if (Y) return new V(Y, ae.request);
                    });
                }
                function S(Z, X, Ce) {
                    Ce.forEach(function (ae) {
                        Object.defineProperty(Z.prototype, ae, {
                            get: function () {
                                return this[X][ae];
                            },
                            set: function (Y) {
                                this[X][ae] = Y;
                            },
                        });
                    });
                }
                function x(Z, X, Ce, ae) {
                    ae.forEach(function (Y) {
                        Y in Ce.prototype &&
                            (Z.prototype[Y] = function () {
                                return G(this[X], Y, arguments);
                            });
                    });
                }
                function k(Z, X, Ce, ae) {
                    ae.forEach(function (Y) {
                        Y in Ce.prototype &&
                            (Z.prototype[Y] = function () {
                                return this[X][Y].apply(this[X], arguments);
                            });
                    });
                }
                function W(Z, X, Ce, ae) {
                    ae.forEach(function (Y) {
                        Y in Ce.prototype &&
                            (Z.prototype[Y] = function () {
                                return j(this[X], Y, arguments);
                            });
                    });
                }
                function B(Z) {
                    this._index = Z;
                }
                function V(Z, X) {
                    (this._cursor = Z), (this._request = X);
                }
                function U(Z) {
                    this._store = Z;
                }
                function Q(Z) {
                    (this._tx = Z),
                        (this.complete = new Promise(function (X, Ce) {
                            (Z.oncomplete = function () {
                                X();
                            }),
                                (Z.onerror = function () {
                                    Ce(Z.error);
                                }),
                                (Z.onabort = function () {
                                    Ce(Z.error);
                                });
                        }));
                }
                function De(Z, X, Ce) {
                    (this._db = Z),
                        (this.oldVersion = X),
                        (this.transaction = new Q(Ce));
                }
                function Ee(Z) {
                    this._db = Z;
                }
                S(B, '_index', ['name', 'keyPath', 'multiEntry', 'unique']),
                    x(B, '_index', IDBIndex, [
                        'get',
                        'getKey',
                        'getAll',
                        'getAllKeys',
                        'count',
                    ]),
                    W(B, '_index', IDBIndex, ['openCursor', 'openKeyCursor']),
                    S(V, '_cursor', [
                        'direction',
                        'key',
                        'primaryKey',
                        'value',
                    ]),
                    x(V, '_cursor', IDBCursor, ['update', 'delete']),
                    ['advance', 'continue', 'continuePrimaryKey'].forEach(
                        function (Z) {
                            Z in IDBCursor.prototype &&
                                (V.prototype[Z] = function () {
                                    var X = this,
                                        Ce = arguments;
                                    return Promise.resolve().then(function () {
                                        return (
                                            X._cursor[Z].apply(X._cursor, Ce),
                                            w(X._request).then(function (ae) {
                                                if (ae)
                                                    return new V(
                                                        ae,
                                                        X._request
                                                    );
                                            })
                                        );
                                    });
                                });
                        }
                    ),
                    (U.prototype.createIndex = function () {
                        return new B(
                            this._store.createIndex.apply(
                                this._store,
                                arguments
                            )
                        );
                    }),
                    (U.prototype.index = function () {
                        return new B(
                            this._store.index.apply(this._store, arguments)
                        );
                    }),
                    S(U, '_store', [
                        'name',
                        'keyPath',
                        'indexNames',
                        'autoIncrement',
                    ]),
                    x(U, '_store', IDBObjectStore, [
                        'put',
                        'add',
                        'delete',
                        'clear',
                        'get',
                        'getAll',
                        'getKey',
                        'getAllKeys',
                        'count',
                    ]),
                    W(U, '_store', IDBObjectStore, [
                        'openCursor',
                        'openKeyCursor',
                    ]),
                    k(U, '_store', IDBObjectStore, ['deleteIndex']),
                    (Q.prototype.objectStore = function () {
                        return new U(
                            this._tx.objectStore.apply(this._tx, arguments)
                        );
                    }),
                    S(Q, '_tx', ['objectStoreNames', 'mode']),
                    k(Q, '_tx', IDBTransaction, ['abort']),
                    (De.prototype.createObjectStore = function () {
                        return new U(
                            this._db.createObjectStore.apply(
                                this._db,
                                arguments
                            )
                        );
                    }),
                    S(De, '_db', ['name', 'version', 'objectStoreNames']),
                    k(De, '_db', IDBDatabase, ['deleteObjectStore', 'close']),
                    (Ee.prototype.transaction = function () {
                        return new Q(
                            this._db.transaction.apply(this._db, arguments)
                        );
                    }),
                    S(Ee, '_db', ['name', 'version', 'objectStoreNames']),
                    k(Ee, '_db', IDBDatabase, ['close']),
                    ['openCursor', 'openKeyCursor'].forEach(function (Z) {
                        [U, B].forEach(function (X) {
                            Z in X.prototype &&
                                (X.prototype[Z.replace('open', 'iterate')] =
                                    function () {
                                        var Ce = l(arguments),
                                            ae = Ce[Ce.length - 1],
                                            Y = this._store || this._index,
                                            ie = Y[Z].apply(Y, Ce.slice(0, -1));
                                        ie.onsuccess = function () {
                                            ae(ie.result);
                                        };
                                    });
                        });
                    }),
                    [B, U].forEach(function (Z) {
                        Z.prototype.getAll ||
                            (Z.prototype.getAll = function (X, Ce) {
                                var ae = this,
                                    Y = [];
                                return new Promise(function (ie) {
                                    ae.iterateCursor(X, function (se) {
                                        se
                                            ? (Y.push(se.value),
                                              void 0 === Ce || Y.length != Ce
                                                  ? se.continue()
                                                  : ie(Y))
                                            : ie(Y);
                                    });
                                });
                            });
                    }),
                    (_.openDb = function _e(Z, X, Ce) {
                        var ae = G(indexedDB, 'open', [Z, X]),
                            Y = ae.request;
                        return (
                            Y &&
                                (Y.onupgradeneeded = function (ie) {
                                    Ce &&
                                        Ce(
                                            new De(
                                                Y.result,
                                                ie.oldVersion,
                                                Y.transaction
                                            )
                                        );
                                }),
                            ae.then(function (ie) {
                                return new Ee(ie);
                            })
                        );
                    }),
                    (_.deleteDb = function Se(Z) {
                        return G(indexedDB, 'deleteDatabase', [Z]);
                    }),
                    Object.defineProperty(_, '__esModule', { value: !0 });
            })(z);
        },
        1135: (de, z, _) => {
            'use strict';
            _.d(z, { X: () => w });
            var l = _(7579);
            class w extends l.x {
                constructor(j) {
                    super(), (this._value = j);
                }
                get value() {
                    return this.getValue();
                }
                _subscribe(j) {
                    const S = super._subscribe(j);
                    return !S.closed && j.next(this._value), S;
                }
                getValue() {
                    const { hasError: j, thrownError: S, _value: x } = this;
                    if (j) throw S;
                    return this._throwIfClosed(), x;
                }
                next(j) {
                    super.next((this._value = j));
                }
            }
        },
        8306: (de, z, _) => {
            'use strict';
            _.d(z, { y: () => V });
            var l = _(930),
                w = _(727),
                G = _(8822),
                j = _(4671);
            var k = _(2416),
                W = _(576),
                B = _(2806);
            let V = (() => {
                class Ee {
                    constructor(Se) {
                        Se && (this._subscribe = Se);
                    }
                    lift(Se) {
                        const Z = new Ee();
                        return (Z.source = this), (Z.operator = Se), Z;
                    }
                    subscribe(Se, Z, X) {
                        const Ce = (function De(Ee) {
                            return (
                                (Ee && Ee instanceof l.Lv) ||
                                ((function Q(Ee) {
                                    return (
                                        Ee &&
                                        (0, W.m)(Ee.next) &&
                                        (0, W.m)(Ee.error) &&
                                        (0, W.m)(Ee.complete)
                                    );
                                })(Ee) &&
                                    (0, w.Nn)(Ee))
                            );
                        })(Se)
                            ? Se
                            : new l.Hp(Se, Z, X);
                        return (
                            (0, B.x)(() => {
                                const { operator: ae, source: Y } = this;
                                Ce.add(
                                    ae
                                        ? ae.call(Ce, Y)
                                        : Y
                                        ? this._subscribe(Ce)
                                        : this._trySubscribe(Ce)
                                );
                            }),
                            Ce
                        );
                    }
                    _trySubscribe(Se) {
                        try {
                            return this._subscribe(Se);
                        } catch (Z) {
                            Se.error(Z);
                        }
                    }
                    forEach(Se, Z) {
                        return new (Z = U(Z))((X, Ce) => {
                            let ae;
                            ae = this.subscribe(
                                (Y) => {
                                    try {
                                        Se(Y);
                                    } catch (ie) {
                                        Ce(ie), null == ae || ae.unsubscribe();
                                    }
                                },
                                Ce,
                                X
                            );
                        });
                    }
                    _subscribe(Se) {
                        var Z;
                        return null === (Z = this.source) || void 0 === Z
                            ? void 0
                            : Z.subscribe(Se);
                    }
                    [G.L]() {
                        return this;
                    }
                    pipe(...Se) {
                        return (function x(Ee) {
                            return 0 === Ee.length
                                ? j.y
                                : 1 === Ee.length
                                ? Ee[0]
                                : function (Se) {
                                      return Ee.reduce((Z, X) => X(Z), Se);
                                  };
                        })(Se)(this);
                    }
                    toPromise(Se) {
                        return new (Se = U(Se))((Z, X) => {
                            let Ce;
                            this.subscribe(
                                (ae) => (Ce = ae),
                                (ae) => X(ae),
                                () => Z(Ce)
                            );
                        });
                    }
                }
                return (Ee.create = (_e) => new Ee(_e)), Ee;
            })();
            function U(Ee) {
                var _e;
                return null !== (_e = null != Ee ? Ee : k.v.Promise) &&
                    void 0 !== _e
                    ? _e
                    : Promise;
            }
        },
        4707: (de, z, _) => {
            'use strict';
            _.d(z, { t: () => G });
            var l = _(7579),
                w = _(6063);
            class G extends l.x {
                constructor(S = 1 / 0, x = 1 / 0, k = w.l) {
                    super(),
                        (this._bufferSize = S),
                        (this._windowTime = x),
                        (this._timestampProvider = k),
                        (this._buffer = []),
                        (this._infiniteTimeWindow = !0),
                        (this._infiniteTimeWindow = x === 1 / 0),
                        (this._bufferSize = Math.max(1, S)),
                        (this._windowTime = Math.max(1, x));
                }
                next(S) {
                    const {
                        isStopped: x,
                        _buffer: k,
                        _infiniteTimeWindow: W,
                        _timestampProvider: B,
                        _windowTime: V,
                    } = this;
                    x || (k.push(S), !W && k.push(B.now() + V)),
                        this._trimBuffer(),
                        super.next(S);
                }
                _subscribe(S) {
                    this._throwIfClosed(), this._trimBuffer();
                    const x = this._innerSubscribe(S),
                        { _infiniteTimeWindow: k, _buffer: W } = this,
                        B = W.slice();
                    for (let V = 0; V < B.length && !S.closed; V += k ? 1 : 2)
                        S.next(B[V]);
                    return this._checkFinalizedStatuses(S), x;
                }
                _trimBuffer() {
                    const {
                            _bufferSize: S,
                            _timestampProvider: x,
                            _buffer: k,
                            _infiniteTimeWindow: W,
                        } = this,
                        B = (W ? 1 : 2) * S;
                    if (
                        (S < 1 / 0 && B < k.length && k.splice(0, k.length - B),
                        !W)
                    ) {
                        const V = x.now();
                        let U = 0;
                        for (let Q = 1; Q < k.length && k[Q] <= V; Q += 2)
                            U = Q;
                        U && k.splice(0, U + 1);
                    }
                }
            }
        },
        7579: (de, z, _) => {
            'use strict';
            _.d(z, { x: () => k });
            var l = _(8306),
                w = _(727);
            const j = (0, _(3888).d)(
                (B) =>
                    function () {
                        B(this),
                            (this.name = 'ObjectUnsubscribedError'),
                            (this.message = 'object unsubscribed');
                    }
            );
            var S = _(8737),
                x = _(2806);
            let k = (() => {
                class B extends l.y {
                    constructor() {
                        super(),
                            (this.closed = !1),
                            (this.observers = []),
                            (this.isStopped = !1),
                            (this.hasError = !1),
                            (this.thrownError = null);
                    }
                    lift(U) {
                        const Q = new W(this, this);
                        return (Q.operator = U), Q;
                    }
                    _throwIfClosed() {
                        if (this.closed) throw new j();
                    }
                    next(U) {
                        (0, x.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                const Q = this.observers.slice();
                                for (const De of Q) De.next(U);
                            }
                        });
                    }
                    error(U) {
                        (0, x.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                (this.hasError = this.isStopped = !0),
                                    (this.thrownError = U);
                                const { observers: Q } = this;
                                for (; Q.length; ) Q.shift().error(U);
                            }
                        });
                    }
                    complete() {
                        (0, x.x)(() => {
                            if ((this._throwIfClosed(), !this.isStopped)) {
                                this.isStopped = !0;
                                const { observers: U } = this;
                                for (; U.length; ) U.shift().complete();
                            }
                        });
                    }
                    unsubscribe() {
                        (this.isStopped = this.closed = !0),
                            (this.observers = null);
                    }
                    get observed() {
                        var U;
                        return (
                            (null === (U = this.observers) || void 0 === U
                                ? void 0
                                : U.length) > 0
                        );
                    }
                    _trySubscribe(U) {
                        return this._throwIfClosed(), super._trySubscribe(U);
                    }
                    _subscribe(U) {
                        return (
                            this._throwIfClosed(),
                            this._checkFinalizedStatuses(U),
                            this._innerSubscribe(U)
                        );
                    }
                    _innerSubscribe(U) {
                        const {
                            hasError: Q,
                            isStopped: De,
                            observers: Ee,
                        } = this;
                        return Q || De
                            ? w.Lc
                            : (Ee.push(U), new w.w0(() => (0, S.P)(Ee, U)));
                    }
                    _checkFinalizedStatuses(U) {
                        const {
                            hasError: Q,
                            thrownError: De,
                            isStopped: Ee,
                        } = this;
                        Q ? U.error(De) : Ee && U.complete();
                    }
                    asObservable() {
                        const U = new l.y();
                        return (U.source = this), U;
                    }
                }
                return (B.create = (V, U) => new W(V, U)), B;
            })();
            class W extends k {
                constructor(V, U) {
                    super(), (this.destination = V), (this.source = U);
                }
                next(V) {
                    var U, Q;
                    null ===
                        (Q =
                            null === (U = this.destination) || void 0 === U
                                ? void 0
                                : U.next) ||
                        void 0 === Q ||
                        Q.call(U, V);
                }
                error(V) {
                    var U, Q;
                    null ===
                        (Q =
                            null === (U = this.destination) || void 0 === U
                                ? void 0
                                : U.error) ||
                        void 0 === Q ||
                        Q.call(U, V);
                }
                complete() {
                    var V, U;
                    null ===
                        (U =
                            null === (V = this.destination) || void 0 === V
                                ? void 0
                                : V.complete) ||
                        void 0 === U ||
                        U.call(V);
                }
                _subscribe(V) {
                    var U, Q;
                    return null !==
                        (Q =
                            null === (U = this.source) || void 0 === U
                                ? void 0
                                : U.subscribe(V)) && void 0 !== Q
                        ? Q
                        : w.Lc;
                }
            }
        },
        930: (de, z, _) => {
            'use strict';
            _.d(z, { Hp: () => De, Lv: () => Q });
            var l = _(576),
                w = _(727),
                G = _(2416),
                j = _(7849),
                S = _(5032);
            const x = B('C', void 0, void 0);
            function B(X, Ce, ae) {
                return { kind: X, value: Ce, error: ae };
            }
            var V = _(3410),
                U = _(2806);
            class Q extends w.w0 {
                constructor(Ce) {
                    super(),
                        (this.isStopped = !1),
                        Ce
                            ? ((this.destination = Ce),
                              (0, w.Nn)(Ce) && Ce.add(this))
                            : (this.destination = Z);
                }
                static create(Ce, ae, Y) {
                    return new De(Ce, ae, Y);
                }
                next(Ce) {
                    this.isStopped
                        ? Se(
                              (function W(X) {
                                  return B('N', X, void 0);
                              })(Ce),
                              this
                          )
                        : this._next(Ce);
                }
                error(Ce) {
                    this.isStopped
                        ? Se(
                              (function k(X) {
                                  return B('E', void 0, X);
                              })(Ce),
                              this
                          )
                        : ((this.isStopped = !0), this._error(Ce));
                }
                complete() {
                    this.isStopped
                        ? Se(x, this)
                        : ((this.isStopped = !0), this._complete());
                }
                unsubscribe() {
                    this.closed ||
                        ((this.isStopped = !0),
                        super.unsubscribe(),
                        (this.destination = null));
                }
                _next(Ce) {
                    this.destination.next(Ce);
                }
                _error(Ce) {
                    try {
                        this.destination.error(Ce);
                    } finally {
                        this.unsubscribe();
                    }
                }
                _complete() {
                    try {
                        this.destination.complete();
                    } finally {
                        this.unsubscribe();
                    }
                }
            }
            class De extends Q {
                constructor(Ce, ae, Y) {
                    let ie;
                    if ((super(), (0, l.m)(Ce))) ie = Ce;
                    else if (Ce) {
                        let se;
                        ({ next: ie, error: ae, complete: Y } = Ce),
                            this && G.v.useDeprecatedNextContext
                                ? ((se = Object.create(Ce)),
                                  (se.unsubscribe = () => this.unsubscribe()))
                                : (se = Ce),
                            (ie = null == ie ? void 0 : ie.bind(se)),
                            (ae = null == ae ? void 0 : ae.bind(se)),
                            (Y = null == Y ? void 0 : Y.bind(se));
                    }
                    this.destination = {
                        next: ie ? Ee(ie) : S.Z,
                        error: Ee(null != ae ? ae : _e),
                        complete: Y ? Ee(Y) : S.Z,
                    };
                }
            }
            function Ee(X, Ce) {
                return (...ae) => {
                    try {
                        X(...ae);
                    } catch (Y) {
                        G.v.useDeprecatedSynchronousErrorHandling
                            ? (0, U.O)(Y)
                            : (0, j.h)(Y);
                    }
                };
            }
            function _e(X) {
                throw X;
            }
            function Se(X, Ce) {
                const { onStoppedNotification: ae } = G.v;
                ae && V.z.setTimeout(() => ae(X, Ce));
            }
            const Z = { closed: !0, next: S.Z, error: _e, complete: S.Z };
        },
        727: (de, z, _) => {
            'use strict';
            _.d(z, { Lc: () => x, w0: () => S, Nn: () => k });
            var l = _(576);
            const G = (0, _(3888).d)(
                (B) =>
                    function (U) {
                        B(this),
                            (this.message = U
                                ? `${
                                      U.length
                                  } errors occurred during unsubscription:\n${U.map(
                                      (Q, De) => `${De + 1}) ${Q.toString()}`
                                  ).join('\n  ')}`
                                : ''),
                            (this.name = 'UnsubscriptionError'),
                            (this.errors = U);
                    }
            );
            var j = _(8737);
            class S {
                constructor(V) {
                    (this.initialTeardown = V),
                        (this.closed = !1),
                        (this._parentage = null),
                        (this._teardowns = null);
                }
                unsubscribe() {
                    let V;
                    if (!this.closed) {
                        this.closed = !0;
                        const { _parentage: U } = this;
                        if (U)
                            if (((this._parentage = null), Array.isArray(U)))
                                for (const Ee of U) Ee.remove(this);
                            else U.remove(this);
                        const { initialTeardown: Q } = this;
                        if ((0, l.m)(Q))
                            try {
                                Q();
                            } catch (Ee) {
                                V = Ee instanceof G ? Ee.errors : [Ee];
                            }
                        const { _teardowns: De } = this;
                        if (De) {
                            this._teardowns = null;
                            for (const Ee of De)
                                try {
                                    W(Ee);
                                } catch (_e) {
                                    (V = null != V ? V : []),
                                        _e instanceof G
                                            ? (V = [...V, ..._e.errors])
                                            : V.push(_e);
                                }
                        }
                        if (V) throw new G(V);
                    }
                }
                add(V) {
                    var U;
                    if (V && V !== this)
                        if (this.closed) W(V);
                        else {
                            if (V instanceof S) {
                                if (V.closed || V._hasParent(this)) return;
                                V._addParent(this);
                            }
                            (this._teardowns =
                                null !== (U = this._teardowns) && void 0 !== U
                                    ? U
                                    : []).push(V);
                        }
                }
                _hasParent(V) {
                    const { _parentage: U } = this;
                    return U === V || (Array.isArray(U) && U.includes(V));
                }
                _addParent(V) {
                    const { _parentage: U } = this;
                    this._parentage = Array.isArray(U)
                        ? (U.push(V), U)
                        : U
                        ? [U, V]
                        : V;
                }
                _removeParent(V) {
                    const { _parentage: U } = this;
                    U === V
                        ? (this._parentage = null)
                        : Array.isArray(U) && (0, j.P)(U, V);
                }
                remove(V) {
                    const { _teardowns: U } = this;
                    U && (0, j.P)(U, V),
                        V instanceof S && V._removeParent(this);
                }
            }
            S.EMPTY = (() => {
                const B = new S();
                return (B.closed = !0), B;
            })();
            const x = S.EMPTY;
            function k(B) {
                return (
                    B instanceof S ||
                    (B &&
                        'closed' in B &&
                        (0, l.m)(B.remove) &&
                        (0, l.m)(B.add) &&
                        (0, l.m)(B.unsubscribe))
                );
            }
            function W(B) {
                (0, l.m)(B) ? B() : B.unsubscribe();
            }
        },
        2416: (de, z, _) => {
            'use strict';
            _.d(z, { v: () => l });
            const l = {
                onUnhandledError: null,
                onStoppedNotification: null,
                Promise: void 0,
                useDeprecatedSynchronousErrorHandling: !1,
                useDeprecatedNextContext: !1,
            };
        },
        7272: (de, z, _) => {
            'use strict';
            _.d(z, { z: () => S });
            var l = _(8189),
                G = _(7669),
                j = _(8996);
            function S(...x) {
                return (function w() {
                    return (0, l.J)(1);
                })()((0, j.D)(x, (0, G.yG)(x)));
            }
        },
        515: (de, z, _) => {
            'use strict';
            _.d(z, { E: () => w });
            const w = new (_(8306).y)((S) => S.complete());
        },
        8996: (de, z, _) => {
            'use strict';
            _.d(z, { D: () => ie });
            var l = _(8421),
                w = _(5363),
                G = _(9468),
                x = _(8306),
                W = _(2202),
                B = _(576),
                V = _(9672);
            function Q(se, xe) {
                if (!se) throw new Error('Iterable cannot be null');
                return new x.y(($e) => {
                    (0, V.f)($e, xe, () => {
                        const it = se[Symbol.asyncIterator]();
                        (0, V.f)(
                            $e,
                            xe,
                            () => {
                                it.next().then((ne) => {
                                    ne.done ? $e.complete() : $e.next(ne.value);
                                });
                            },
                            0,
                            !0
                        );
                    });
                });
            }
            var De = _(3670),
                Ee = _(8239),
                _e = _(1144),
                Se = _(6495),
                Z = _(2206),
                X = _(4532),
                Ce = _(3260);
            function ie(se, xe) {
                return xe
                    ? (function Y(se, xe) {
                          if (null != se) {
                              if ((0, De.c)(se))
                                  return (function j(se, xe) {
                                      return (0, l.Xf)(se).pipe(
                                          (0, G.R)(xe),
                                          (0, w.Q)(xe)
                                      );
                                  })(se, xe);
                              if ((0, _e.z)(se))
                                  return (function k(se, xe) {
                                      return new x.y(($e) => {
                                          let it = 0;
                                          return xe.schedule(function () {
                                              it === se.length
                                                  ? $e.complete()
                                                  : ($e.next(se[it++]),
                                                    $e.closed ||
                                                        this.schedule());
                                          });
                                      });
                                  })(se, xe);
                              if ((0, Ee.t)(se))
                                  return (function S(se, xe) {
                                      return (0, l.Xf)(se).pipe(
                                          (0, G.R)(xe),
                                          (0, w.Q)(xe)
                                      );
                                  })(se, xe);
                              if ((0, Z.D)(se)) return Q(se, xe);
                              if ((0, Se.T)(se))
                                  return (function U(se, xe) {
                                      return new x.y(($e) => {
                                          let it;
                                          return (
                                              (0, V.f)($e, xe, () => {
                                                  (it = se[W.h]()),
                                                      (0, V.f)(
                                                          $e,
                                                          xe,
                                                          () => {
                                                              let ne, Pe;
                                                              try {
                                                                  ({
                                                                      value: ne,
                                                                      done: Pe,
                                                                  } =
                                                                      it.next());
                                                              } catch (le) {
                                                                  return void $e.error(
                                                                      le
                                                                  );
                                                              }
                                                              Pe
                                                                  ? $e.complete()
                                                                  : $e.next(ne);
                                                          },
                                                          0,
                                                          !0
                                                      );
                                              }),
                                              () =>
                                                  (0, B.m)(
                                                      null == it
                                                          ? void 0
                                                          : it.return
                                                  ) && it.return()
                                          );
                                      });
                                  })(se, xe);
                              if ((0, Ce.L)(se))
                                  return (function ae(se, xe) {
                                      return Q((0, Ce.Q)(se), xe);
                                  })(se, xe);
                          }
                          throw (0, X.z)(se);
                      })(se, xe)
                    : (0, l.Xf)(se);
            }
        },
        8421: (de, z, _) => {
            'use strict';
            _.d(z, { Xf: () => De });
            var l = _(5987),
                w = _(1144),
                G = _(8239),
                j = _(8306),
                S = _(3670),
                x = _(2206),
                k = _(4532),
                W = _(6495),
                B = _(3260),
                V = _(576),
                U = _(7849),
                Q = _(8822);
            function De(Y) {
                if (Y instanceof j.y) return Y;
                if (null != Y) {
                    if ((0, S.c)(Y))
                        return (function Ee(Y) {
                            return new j.y((ie) => {
                                const se = Y[Q.L]();
                                if ((0, V.m)(se.subscribe))
                                    return se.subscribe(ie);
                                throw new TypeError(
                                    'Provided object does not correctly implement Symbol.observable'
                                );
                            });
                        })(Y);
                    if ((0, w.z)(Y))
                        return (function _e(Y) {
                            return new j.y((ie) => {
                                for (
                                    let se = 0;
                                    se < Y.length && !ie.closed;
                                    se++
                                )
                                    ie.next(Y[se]);
                                ie.complete();
                            });
                        })(Y);
                    if ((0, G.t)(Y))
                        return (function Se(Y) {
                            return new j.y((ie) => {
                                Y.then(
                                    (se) => {
                                        ie.closed ||
                                            (ie.next(se), ie.complete());
                                    },
                                    (se) => ie.error(se)
                                ).then(null, U.h);
                            });
                        })(Y);
                    if ((0, x.D)(Y)) return X(Y);
                    if ((0, W.T)(Y))
                        return (function Z(Y) {
                            return new j.y((ie) => {
                                for (const se of Y)
                                    if ((ie.next(se), ie.closed)) return;
                                ie.complete();
                            });
                        })(Y);
                    if ((0, B.L)(Y))
                        return (function Ce(Y) {
                            return X((0, B.Q)(Y));
                        })(Y);
                }
                throw (0, k.z)(Y);
            }
            function X(Y) {
                return new j.y((ie) => {
                    (function ae(Y, ie) {
                        var se, xe, $e, it;
                        return (0, l.mG)(this, void 0, void 0, function* () {
                            try {
                                for (
                                    se = (0, l.KL)(Y);
                                    !(xe = yield se.next()).done;

                                )
                                    if ((ie.next(xe.value), ie.closed)) return;
                            } catch (ne) {
                                $e = { error: ne };
                            } finally {
                                try {
                                    xe &&
                                        !xe.done &&
                                        (it = se.return) &&
                                        (yield it.call(se));
                                } finally {
                                    if ($e) throw $e.error;
                                }
                            }
                            ie.complete();
                        });
                    })(Y, ie).catch((se) => ie.error(se));
                });
            }
        },
        6451: (de, z, _) => {
            'use strict';
            _.d(z, { T: () => x });
            var l = _(8189),
                w = _(8421),
                G = _(515),
                j = _(7669),
                S = _(8996);
            function x(...k) {
                const W = (0, j.yG)(k),
                    B = (0, j._6)(k, 1 / 0),
                    V = k;
                return V.length
                    ? 1 === V.length
                        ? (0, w.Xf)(V[0])
                        : (0, l.J)(B)((0, S.D)(V, W))
                    : G.E;
            }
        },
        9646: (de, z, _) => {
            'use strict';
            _.d(z, { of: () => G });
            var l = _(7669),
                w = _(8996);
            function G(...j) {
                const S = (0, l.yG)(j);
                return (0, w.D)(j, S);
            }
        },
        5403: (de, z, _) => {
            'use strict';
            _.d(z, { Q: () => w });
            var l = _(930);
            class w extends l.Lv {
                constructor(j, S, x, k, W) {
                    super(j),
                        (this.onFinalize = W),
                        (this._next = S
                            ? function (B) {
                                  try {
                                      S(B);
                                  } catch (V) {
                                      j.error(V);
                                  }
                              }
                            : super._next),
                        (this._error = k
                            ? function (B) {
                                  try {
                                      k(B);
                                  } catch (V) {
                                      j.error(V);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._error),
                        (this._complete = x
                            ? function () {
                                  try {
                                      x();
                                  } catch (B) {
                                      j.error(B);
                                  } finally {
                                      this.unsubscribe();
                                  }
                              }
                            : super._complete);
                }
                unsubscribe() {
                    var j;
                    const { closed: S } = this;
                    super.unsubscribe(),
                        !S &&
                            (null === (j = this.onFinalize) ||
                                void 0 === j ||
                                j.call(this));
                }
            }
        },
        262: (de, z, _) => {
            'use strict';
            _.d(z, { K: () => j });
            var l = _(8421),
                w = _(5403),
                G = _(4482);
            function j(S) {
                return (0, G.e)((x, k) => {
                    let V,
                        W = null,
                        B = !1;
                    (W = x.subscribe(
                        new w.Q(k, void 0, void 0, (U) => {
                            (V = (0, l.Xf)(S(U, j(S)(x)))),
                                W
                                    ? (W.unsubscribe(),
                                      (W = null),
                                      V.subscribe(k))
                                    : (B = !0);
                        })
                    )),
                        B && (W.unsubscribe(), (W = null), V.subscribe(k));
                });
            }
        },
        4351: (de, z, _) => {
            'use strict';
            _.d(z, { b: () => G });
            var l = _(5577),
                w = _(576);
            function G(j, S) {
                return (0, w.m)(S) ? (0, l.z)(j, S, 1) : (0, l.z)(j, 1);
            }
        },
        8372: (de, z, _) => {
            'use strict';
            _.d(z, { b: () => j });
            var l = _(4986),
                w = _(4482),
                G = _(5403);
            function j(S, x = l.z) {
                return (0, w.e)((k, W) => {
                    let B = null,
                        V = null,
                        U = null;
                    const Q = () => {
                        if (B) {
                            B.unsubscribe(), (B = null);
                            const Ee = V;
                            (V = null), W.next(Ee);
                        }
                    };
                    function De() {
                        const Ee = U + S,
                            _e = x.now();
                        if (_e < Ee)
                            return (
                                (B = this.schedule(void 0, Ee - _e)),
                                void W.add(B)
                            );
                        Q();
                    }
                    k.subscribe(
                        new G.Q(
                            W,
                            (Ee) => {
                                (V = Ee),
                                    (U = x.now()),
                                    B || ((B = x.schedule(De, S)), W.add(B));
                            },
                            () => {
                                Q(), W.complete();
                            },
                            void 0,
                            () => {
                                V = B = null;
                            }
                        )
                    );
                });
            }
        },
        6590: (de, z, _) => {
            'use strict';
            _.d(z, { d: () => G });
            var l = _(4482),
                w = _(5403);
            function G(j) {
                return (0, l.e)((S, x) => {
                    let k = !1;
                    S.subscribe(
                        new w.Q(
                            x,
                            (W) => {
                                (k = !0), x.next(W);
                            },
                            () => {
                                k || x.next(j), x.complete();
                            }
                        )
                    );
                });
            }
        },
        9300: (de, z, _) => {
            'use strict';
            _.d(z, { h: () => G });
            var l = _(4482),
                w = _(5403);
            function G(j, S) {
                return (0, l.e)((x, k) => {
                    let W = 0;
                    x.subscribe(
                        new w.Q(k, (B) => j.call(S, B, W++) && k.next(B))
                    );
                });
            }
        },
        590: (de, z, _) => {
            'use strict';
            _.d(z, { P: () => k });
            var l = _(6805),
                w = _(9300),
                G = _(5698),
                j = _(6590),
                S = _(8068),
                x = _(4671);
            function k(W, B) {
                const V = arguments.length >= 2;
                return (U) =>
                    U.pipe(
                        W ? (0, w.h)((Q, De) => W(Q, De, U)) : x.y,
                        (0, G.q)(1),
                        V ? (0, j.d)(B) : (0, S.T)(() => new l.K())
                    );
            }
        },
        4004: (de, z, _) => {
            'use strict';
            _.d(z, { U: () => G });
            var l = _(4482),
                w = _(5403);
            function G(j, S) {
                return (0, l.e)((x, k) => {
                    let W = 0;
                    x.subscribe(
                        new w.Q(k, (B) => {
                            k.next(j.call(S, B, W++));
                        })
                    );
                });
            }
        },
        8189: (de, z, _) => {
            'use strict';
            _.d(z, { J: () => G });
            var l = _(5577),
                w = _(4671);
            function G(j = 1 / 0) {
                return (0, l.z)(w.y, j);
            }
        },
        5577: (de, z, _) => {
            'use strict';
            _.d(z, { z: () => W });
            var l = _(4004),
                w = _(8421),
                G = _(4482),
                j = _(9672),
                S = _(5403),
                k = _(576);
            function W(B, V, U = 1 / 0) {
                return (0, k.m)(V)
                    ? W(
                          (Q, De) =>
                              (0, l.U)((Ee, _e) => V(Q, Ee, De, _e))(
                                  (0, w.Xf)(B(Q, De))
                              ),
                          U
                      )
                    : ('number' == typeof V && (U = V),
                      (0, G.e)((Q, De) =>
                          (function x(B, V, U, Q, De, Ee, _e, Se) {
                              const Z = [];
                              let X = 0,
                                  Ce = 0,
                                  ae = !1;
                              const Y = () => {
                                      ae && !Z.length && !X && V.complete();
                                  },
                                  ie = (xe) => (X < Q ? se(xe) : Z.push(xe)),
                                  se = (xe) => {
                                      Ee && V.next(xe), X++;
                                      let $e = !1;
                                      (0, w.Xf)(U(xe, Ce++)).subscribe(
                                          new S.Q(
                                              V,
                                              (it) => {
                                                  null == De || De(it),
                                                      Ee ? ie(it) : V.next(it);
                                              },
                                              () => {
                                                  $e = !0;
                                              },
                                              void 0,
                                              () => {
                                                  if ($e)
                                                      try {
                                                          for (
                                                              X--;
                                                              Z.length && X < Q;

                                                          ) {
                                                              const it =
                                                                  Z.shift();
                                                              _e
                                                                  ? (0, j.f)(
                                                                        V,
                                                                        _e,
                                                                        () =>
                                                                            se(
                                                                                it
                                                                            )
                                                                    )
                                                                  : se(it);
                                                          }
                                                          Y();
                                                      } catch (it) {
                                                          V.error(it);
                                                      }
                                              }
                                          )
                                      );
                                  };
                              return (
                                  B.subscribe(
                                      new S.Q(V, ie, () => {
                                          (ae = !0), Y();
                                      })
                                  ),
                                  () => {
                                      null == Se || Se();
                                  }
                              );
                          })(Q, De, B, U)
                      ));
            }
        },
        5363: (de, z, _) => {
            'use strict';
            _.d(z, { Q: () => j });
            var l = _(9672),
                w = _(4482),
                G = _(5403);
            function j(S, x = 0) {
                return (0, w.e)((k, W) => {
                    k.subscribe(
                        new G.Q(
                            W,
                            (B) => (0, l.f)(W, S, () => W.next(B), x),
                            () => (0, l.f)(W, S, () => W.complete(), x),
                            (B) => (0, l.f)(W, S, () => W.error(B), x)
                        )
                    );
                });
            }
        },
        5026: (de, z, _) => {
            'use strict';
            _.d(z, { R: () => j });
            var l = _(4482),
                w = _(5403);
            function G(S, x, k, W, B) {
                return (V, U) => {
                    let Q = k,
                        De = x,
                        Ee = 0;
                    V.subscribe(
                        new w.Q(
                            U,
                            (_e) => {
                                const Se = Ee++;
                                (De = Q ? S(De, _e, Se) : ((Q = !0), _e)),
                                    W && U.next(De);
                            },
                            B &&
                                (() => {
                                    Q && U.next(De), U.complete();
                                })
                        )
                    );
                };
            }
            function j(S, x) {
                return (0, l.e)(G(S, x, arguments.length >= 2, !0));
            }
        },
        3099: (de, z, _) => {
            'use strict';
            _.d(z, { B: () => x });
            var l = _(8996),
                w = _(5698),
                G = _(7579),
                j = _(930),
                S = _(4482);
            function x(W = {}) {
                const {
                    connector: B = () => new G.x(),
                    resetOnError: V = !0,
                    resetOnComplete: U = !0,
                    resetOnRefCountZero: Q = !0,
                } = W;
                return (De) => {
                    let Ee = null,
                        _e = null,
                        Se = null,
                        Z = 0,
                        X = !1,
                        Ce = !1;
                    const ae = () => {
                            null == _e || _e.unsubscribe(), (_e = null);
                        },
                        Y = () => {
                            ae(), (Ee = Se = null), (X = Ce = !1);
                        },
                        ie = () => {
                            const se = Ee;
                            Y(), null == se || se.unsubscribe();
                        };
                    return (0, S.e)((se, xe) => {
                        Z++, !Ce && !X && ae();
                        const $e = (Se = null != Se ? Se : B());
                        xe.add(() => {
                            Z--, 0 === Z && !Ce && !X && (_e = k(ie, Q));
                        }),
                            $e.subscribe(xe),
                            Ee ||
                                ((Ee = new j.Hp({
                                    next: (it) => $e.next(it),
                                    error: (it) => {
                                        (Ce = !0),
                                            ae(),
                                            (_e = k(Y, V, it)),
                                            $e.error(it);
                                    },
                                    complete: () => {
                                        (X = !0),
                                            ae(),
                                            (_e = k(Y, U)),
                                            $e.complete();
                                    },
                                })),
                                (0, l.D)(se).subscribe(Ee));
                    })(De);
                };
            }
            function k(W, B, ...V) {
                return !0 === B
                    ? (W(), null)
                    : !1 === B
                    ? null
                    : B(...V)
                          .pipe((0, w.q)(1))
                          .subscribe(() => W());
            }
        },
        4782: (de, z, _) => {
            'use strict';
            _.d(z, { d: () => G });
            var l = _(4707),
                w = _(3099);
            function G(j, S, x) {
                var k, W;
                let B,
                    V = !1;
                return (
                    j && 'object' == typeof j
                        ? ((B =
                              null !== (k = j.bufferSize) && void 0 !== k
                                  ? k
                                  : 1 / 0),
                          (S =
                              null !== (W = j.windowTime) && void 0 !== W
                                  ? W
                                  : 1 / 0),
                          (V = !!j.refCount),
                          (x = j.scheduler))
                        : (B = null != j ? j : 1 / 0),
                    (0, w.B)({
                        connector: () => new l.t(B, S, x),
                        resetOnError: !0,
                        resetOnComplete: !1,
                        resetOnRefCountZero: V,
                    })
                );
            }
        },
        5684: (de, z, _) => {
            'use strict';
            _.d(z, { T: () => w });
            var l = _(9300);
            function w(G) {
                return (0, l.h)((j, S) => G <= S);
            }
        },
        8675: (de, z, _) => {
            'use strict';
            _.d(z, { O: () => j });
            var l = _(7272),
                w = _(7669),
                G = _(4482);
            function j(...S) {
                const x = (0, w.yG)(S);
                return (0, G.e)((k, W) => {
                    (x ? (0, l.z)(S, k, x) : (0, l.z)(S, k)).subscribe(W);
                });
            }
        },
        9468: (de, z, _) => {
            'use strict';
            _.d(z, { R: () => w });
            var l = _(4482);
            function w(G, j = 0) {
                return (0, l.e)((S, x) => {
                    x.add(G.schedule(() => S.subscribe(x), j));
                });
            }
        },
        3900: (de, z, _) => {
            'use strict';
            _.d(z, { w: () => j });
            var l = _(8421),
                w = _(4482),
                G = _(5403);
            function j(S, x) {
                return (0, w.e)((k, W) => {
                    let B = null,
                        V = 0,
                        U = !1;
                    const Q = () => U && !B && W.complete();
                    k.subscribe(
                        new G.Q(
                            W,
                            (De) => {
                                null == B || B.unsubscribe();
                                let Ee = 0;
                                const _e = V++;
                                (0, l.Xf)(S(De, _e)).subscribe(
                                    (B = new G.Q(
                                        W,
                                        (Se) =>
                                            W.next(
                                                x ? x(De, Se, _e, Ee++) : Se
                                            ),
                                        () => {
                                            (B = null), Q();
                                        }
                                    ))
                                );
                            },
                            () => {
                                (U = !0), Q();
                            }
                        )
                    );
                });
            }
        },
        5698: (de, z, _) => {
            'use strict';
            _.d(z, { q: () => j });
            var l = _(515),
                w = _(4482),
                G = _(5403);
            function j(S) {
                return S <= 0
                    ? () => l.E
                    : (0, w.e)((x, k) => {
                          let W = 0;
                          x.subscribe(
                              new G.Q(k, (B) => {
                                  ++W <= S &&
                                      (k.next(B), S <= W && k.complete());
                              })
                          );
                      });
            }
        },
        2722: (de, z, _) => {
            'use strict';
            _.d(z, { R: () => S });
            var l = _(4482),
                w = _(5403),
                G = _(8421),
                j = _(5032);
            function S(x) {
                return (0, l.e)((k, W) => {
                    (0, G.Xf)(x).subscribe(new w.Q(W, () => W.complete(), j.Z)),
                        !W.closed && k.subscribe(W);
                });
            }
        },
        8505: (de, z, _) => {
            'use strict';
            _.d(z, { b: () => S });
            var l = _(576),
                w = _(4482),
                G = _(5403),
                j = _(4671);
            function S(x, k, W) {
                const B =
                    (0, l.m)(x) || k || W
                        ? { next: x, error: k, complete: W }
                        : x;
                return B
                    ? (0, w.e)((V, U) => {
                          var Q;
                          null === (Q = B.subscribe) ||
                              void 0 === Q ||
                              Q.call(B);
                          let De = !0;
                          V.subscribe(
                              new G.Q(
                                  U,
                                  (Ee) => {
                                      var _e;
                                      null === (_e = B.next) ||
                                          void 0 === _e ||
                                          _e.call(B, Ee),
                                          U.next(Ee);
                                  },
                                  () => {
                                      var Ee;
                                      (De = !1),
                                          null === (Ee = B.complete) ||
                                              void 0 === Ee ||
                                              Ee.call(B),
                                          U.complete();
                                  },
                                  (Ee) => {
                                      var _e;
                                      (De = !1),
                                          null === (_e = B.error) ||
                                              void 0 === _e ||
                                              _e.call(B, Ee),
                                          U.error(Ee);
                                  },
                                  () => {
                                      var Ee, _e;
                                      De &&
                                          (null === (Ee = B.unsubscribe) ||
                                              void 0 === Ee ||
                                              Ee.call(B)),
                                          null === (_e = B.finalize) ||
                                              void 0 === _e ||
                                              _e.call(B);
                                  }
                              )
                          );
                      })
                    : j.y;
            }
        },
        8068: (de, z, _) => {
            'use strict';
            _.d(z, { T: () => j });
            var l = _(6805),
                w = _(4482),
                G = _(5403);
            function j(x = S) {
                return (0, w.e)((k, W) => {
                    let B = !1;
                    k.subscribe(
                        new G.Q(
                            W,
                            (V) => {
                                (B = !0), W.next(V);
                            },
                            () => (B ? W.complete() : W.error(x()))
                        )
                    );
                });
            }
            function S() {
                return new l.K();
            }
        },
        1749: (de, z, _) => {
            'use strict';
            _.d(z, { V: () => B });
            var l = _(4986),
                G = _(4482),
                j = _(8421),
                S = _(3888),
                x = _(5403),
                k = _(9672);
            const W = (0, S.d)(
                (U) =>
                    function (De = null) {
                        U(this),
                            (this.message = 'Timeout has occurred'),
                            (this.name = 'TimeoutError'),
                            (this.info = De);
                    }
            );
            function B(U, Q) {
                const {
                    first: De,
                    each: Ee,
                    with: _e = V,
                    scheduler: Se = null != Q ? Q : l.z,
                    meta: Z = null,
                } = (function w(U) {
                    return U instanceof Date && !isNaN(U);
                })(U)
                    ? { first: U }
                    : 'number' == typeof U
                    ? { each: U }
                    : U;
                if (null == De && null == Ee)
                    throw new TypeError('No timeout provided.');
                return (0, G.e)((X, Ce) => {
                    let ae,
                        Y,
                        ie = null,
                        se = 0;
                    const xe = ($e) => {
                        Y = (0, k.f)(
                            Ce,
                            Se,
                            () => {
                                try {
                                    ae.unsubscribe(),
                                        (0, j.Xf)(
                                            _e({
                                                meta: Z,
                                                lastValue: ie,
                                                seen: se,
                                            })
                                        ).subscribe(Ce);
                                } catch (it) {
                                    Ce.error(it);
                                }
                            },
                            $e
                        );
                    };
                    (ae = X.subscribe(
                        new x.Q(
                            Ce,
                            ($e) => {
                                null == Y || Y.unsubscribe(),
                                    se++,
                                    Ce.next((ie = $e)),
                                    Ee > 0 && xe(Ee);
                            },
                            void 0,
                            void 0,
                            () => {
                                (null == Y ? void 0 : Y.closed) ||
                                    null == Y ||
                                    Y.unsubscribe(),
                                    (ie = null);
                            }
                        )
                    )),
                        xe(
                            null != De
                                ? 'number' == typeof De
                                    ? De
                                    : +De - Se.now()
                                : Ee
                        );
                });
            }
            function V(U) {
                throw new W(U);
            }
        },
        1365: (de, z, _) => {
            'use strict';
            _.d(z, { M: () => k });
            var l = _(4482),
                w = _(5403),
                G = _(8421),
                j = _(4671),
                S = _(5032),
                x = _(7669);
            function k(...W) {
                const B = (0, x.jO)(W);
                return (0, l.e)((V, U) => {
                    const Q = W.length,
                        De = new Array(Q);
                    let Ee = W.map(() => !1),
                        _e = !1;
                    for (let Se = 0; Se < Q; Se++)
                        (0, G.Xf)(W[Se]).subscribe(
                            new w.Q(
                                U,
                                (Z) => {
                                    (De[Se] = Z),
                                        !_e &&
                                            !Ee[Se] &&
                                            ((Ee[Se] = !0),
                                            (_e = Ee.every(j.y)) &&
                                                (Ee = null));
                                },
                                S.Z
                            )
                        );
                    V.subscribe(
                        new w.Q(U, (Se) => {
                            if (_e) {
                                const Z = [Se, ...De];
                                U.next(B ? B(...Z) : Z);
                            }
                        })
                    );
                });
            }
        },
        4408: (de, z, _) => {
            'use strict';
            _.d(z, { o: () => S });
            var l = _(727);
            class w extends l.w0 {
                constructor(k, W) {
                    super();
                }
                schedule(k, W = 0) {
                    return this;
                }
            }
            const G = {
                setInterval(...x) {
                    const { delegate: k } = G;
                    return (
                        (null == k ? void 0 : k.setInterval) || setInterval
                    )(...x);
                },
                clearInterval(x) {
                    const { delegate: k } = G;
                    return (
                        (null == k ? void 0 : k.clearInterval) || clearInterval
                    )(x);
                },
                delegate: void 0,
            };
            var j = _(8737);
            class S extends w {
                constructor(k, W) {
                    super(k, W),
                        (this.scheduler = k),
                        (this.work = W),
                        (this.pending = !1);
                }
                schedule(k, W = 0) {
                    if (this.closed) return this;
                    this.state = k;
                    const B = this.id,
                        V = this.scheduler;
                    return (
                        null != B && (this.id = this.recycleAsyncId(V, B, W)),
                        (this.pending = !0),
                        (this.delay = W),
                        (this.id =
                            this.id || this.requestAsyncId(V, this.id, W)),
                        this
                    );
                }
                requestAsyncId(k, W, B = 0) {
                    return G.setInterval(k.flush.bind(k, this), B);
                }
                recycleAsyncId(k, W, B = 0) {
                    if (null != B && this.delay === B && !1 === this.pending)
                        return W;
                    G.clearInterval(W);
                }
                execute(k, W) {
                    if (this.closed)
                        return new Error('executing a cancelled action');
                    this.pending = !1;
                    const B = this._execute(k, W);
                    if (B) return B;
                    !1 === this.pending &&
                        null != this.id &&
                        (this.id = this.recycleAsyncId(
                            this.scheduler,
                            this.id,
                            null
                        ));
                }
                _execute(k, W) {
                    let V,
                        B = !1;
                    try {
                        this.work(k);
                    } catch (U) {
                        (B = !0),
                            (V =
                                U ||
                                new Error(
                                    'Scheduled action threw falsy error'
                                ));
                    }
                    if (B) return this.unsubscribe(), V;
                }
                unsubscribe() {
                    if (!this.closed) {
                        const { id: k, scheduler: W } = this,
                            { actions: B } = W;
                        (this.work = this.state = this.scheduler = null),
                            (this.pending = !1),
                            (0, j.P)(B, this),
                            null != k &&
                                (this.id = this.recycleAsyncId(W, k, null)),
                            (this.delay = null),
                            super.unsubscribe();
                    }
                }
            }
        },
        7565: (de, z, _) => {
            'use strict';
            _.d(z, { v: () => G });
            var l = _(6063);
            class w {
                constructor(S, x = w.now) {
                    (this.schedulerActionCtor = S), (this.now = x);
                }
                schedule(S, x = 0, k) {
                    return new this.schedulerActionCtor(this, S).schedule(k, x);
                }
            }
            w.now = l.l.now;
            class G extends w {
                constructor(S, x = w.now) {
                    super(S, x),
                        (this.actions = []),
                        (this._active = !1),
                        (this._scheduled = void 0);
                }
                flush(S) {
                    const { actions: x } = this;
                    if (this._active) return void x.push(S);
                    let k;
                    this._active = !0;
                    do {
                        if ((k = S.execute(S.state, S.delay))) break;
                    } while ((S = x.shift()));
                    if (((this._active = !1), k)) {
                        for (; (S = x.shift()); ) S.unsubscribe();
                        throw k;
                    }
                }
            }
        },
        4986: (de, z, _) => {
            'use strict';
            _.d(z, { z: () => G });
            var l = _(4408);
            const G = new (_(7565).v)(l.o);
        },
        6063: (de, z, _) => {
            'use strict';
            _.d(z, { l: () => l });
            const l = {
                now: () => (l.delegate || Date).now(),
                delegate: void 0,
            };
        },
        233: (de, z, _) => {
            'use strict';
            _.d(z, { N: () => S });
            var l = _(4408),
                G = _(7565);
            const S = new (class j extends G.v {})(
                class w extends l.o {
                    constructor(W, B) {
                        super(W, B), (this.scheduler = W), (this.work = B);
                    }
                    schedule(W, B = 0) {
                        return B > 0
                            ? super.schedule(W, B)
                            : ((this.delay = B),
                              (this.state = W),
                              this.scheduler.flush(this),
                              this);
                    }
                    execute(W, B) {
                        return B > 0 || this.closed
                            ? super.execute(W, B)
                            : this._execute(W, B);
                    }
                    requestAsyncId(W, B, V = 0) {
                        return (null != V && V > 0) ||
                            (null == V && this.delay > 0)
                            ? super.requestAsyncId(W, B, V)
                            : W.flush(this);
                    }
                }
            );
        },
        3410: (de, z, _) => {
            'use strict';
            _.d(z, { z: () => l });
            const l = {
                setTimeout(...w) {
                    const { delegate: G } = l;
                    return ((null == G ? void 0 : G.setTimeout) || setTimeout)(
                        ...w
                    );
                },
                clearTimeout(w) {
                    const { delegate: G } = l;
                    return (
                        (null == G ? void 0 : G.clearTimeout) || clearTimeout
                    )(w);
                },
                delegate: void 0,
            };
        },
        2202: (de, z, _) => {
            'use strict';
            _.d(z, { h: () => w });
            const w = (function l() {
                return 'function' == typeof Symbol && Symbol.iterator
                    ? Symbol.iterator
                    : '@@iterator';
            })();
        },
        8822: (de, z, _) => {
            'use strict';
            _.d(z, { L: () => l });
            const l =
                ('function' == typeof Symbol && Symbol.observable) ||
                '@@observable';
        },
        6805: (de, z, _) => {
            'use strict';
            _.d(z, { K: () => w });
            const w = (0, _(3888).d)(
                (G) =>
                    function () {
                        G(this),
                            (this.name = 'EmptyError'),
                            (this.message = 'no elements in sequence');
                    }
            );
        },
        7669: (de, z, _) => {
            'use strict';
            _.d(z, { _6: () => x, jO: () => j, yG: () => S });
            var l = _(576);
            function G(k) {
                return k[k.length - 1];
            }
            function j(k) {
                return (0, l.m)(G(k)) ? k.pop() : void 0;
            }
            function S(k) {
                return (function w(k) {
                    return k && (0, l.m)(k.schedule);
                })(G(k))
                    ? k.pop()
                    : void 0;
            }
            function x(k, W) {
                return 'number' == typeof G(k) ? k.pop() : W;
            }
        },
        4742: (de, z, _) => {
            'use strict';
            _.d(z, { D: () => S });
            const { isArray: l } = Array,
                { getPrototypeOf: w, prototype: G, keys: j } = Object;
            function S(k) {
                if (1 === k.length) {
                    const W = k[0];
                    if (l(W)) return { args: W, keys: null };
                    if (
                        (function x(k) {
                            return k && 'object' == typeof k && w(k) === G;
                        })(W)
                    ) {
                        const B = j(W);
                        return { args: B.map((V) => W[V]), keys: B };
                    }
                }
                return { args: k, keys: null };
            }
        },
        8737: (de, z, _) => {
            'use strict';
            function l(w, G) {
                if (w) {
                    const j = w.indexOf(G);
                    0 <= j && w.splice(j, 1);
                }
            }
            _.d(z, { P: () => l });
        },
        3888: (de, z, _) => {
            'use strict';
            function l(w) {
                const j = w((S) => {
                    Error.call(S), (S.stack = new Error().stack);
                });
                return (
                    (j.prototype = Object.create(Error.prototype)),
                    (j.prototype.constructor = j),
                    j
                );
            }
            _.d(z, { d: () => l });
        },
        1810: (de, z, _) => {
            'use strict';
            function l(w, G) {
                return w.reduce((j, S, x) => ((j[S] = G[x]), j), {});
            }
            _.d(z, { n: () => l });
        },
        2806: (de, z, _) => {
            'use strict';
            _.d(z, { x: () => G, O: () => j });
            var l = _(2416);
            let w = null;
            function G(S) {
                if (l.v.useDeprecatedSynchronousErrorHandling) {
                    const x = !w;
                    if ((x && (w = { errorThrown: !1, error: null }), S(), x)) {
                        const { errorThrown: k, error: W } = w;
                        if (((w = null), k)) throw W;
                    }
                } else S();
            }
            function j(S) {
                l.v.useDeprecatedSynchronousErrorHandling &&
                    w &&
                    ((w.errorThrown = !0), (w.error = S));
            }
        },
        9672: (de, z, _) => {
            'use strict';
            function l(w, G, j, S = 0, x = !1) {
                const k = G.schedule(function () {
                    j(), x ? w.add(this.schedule(null, S)) : this.unsubscribe();
                }, S);
                if ((w.add(k), !x)) return k;
            }
            _.d(z, { f: () => l });
        },
        4671: (de, z, _) => {
            'use strict';
            function l(w) {
                return w;
            }
            _.d(z, { y: () => l });
        },
        1144: (de, z, _) => {
            'use strict';
            _.d(z, { z: () => l });
            const l = (w) =>
                w && 'number' == typeof w.length && 'function' != typeof w;
        },
        2206: (de, z, _) => {
            'use strict';
            _.d(z, { D: () => w });
            var l = _(576);
            function w(G) {
                return (
                    Symbol.asyncIterator &&
                    (0, l.m)(null == G ? void 0 : G[Symbol.asyncIterator])
                );
            }
        },
        576: (de, z, _) => {
            'use strict';
            function l(w) {
                return 'function' == typeof w;
            }
            _.d(z, { m: () => l });
        },
        3670: (de, z, _) => {
            'use strict';
            _.d(z, { c: () => G });
            var l = _(8822),
                w = _(576);
            function G(j) {
                return (0, w.m)(j[l.L]);
            }
        },
        6495: (de, z, _) => {
            'use strict';
            _.d(z, { T: () => G });
            var l = _(2202),
                w = _(576);
            function G(j) {
                return (0, w.m)(null == j ? void 0 : j[l.h]);
            }
        },
        8239: (de, z, _) => {
            'use strict';
            _.d(z, { t: () => w });
            var l = _(576);
            function w(G) {
                return (0, l.m)(null == G ? void 0 : G.then);
            }
        },
        3260: (de, z, _) => {
            'use strict';
            _.d(z, { Q: () => G, L: () => j });
            var l = _(5987),
                w = _(576);
            function G(S) {
                return (0, l.FC)(this, arguments, function* () {
                    const k = S.getReader();
                    try {
                        for (;;) {
                            const { value: W, done: B } = yield (0, l.qq)(
                                k.read()
                            );
                            if (B) return yield (0, l.qq)(void 0);
                            yield yield (0, l.qq)(W);
                        }
                    } finally {
                        k.releaseLock();
                    }
                });
            }
            function j(S) {
                return (0, w.m)(null == S ? void 0 : S.getReader);
            }
        },
        4482: (de, z, _) => {
            'use strict';
            _.d(z, { A: () => w, e: () => G });
            var l = _(576);
            function w(j) {
                return (0, l.m)(null == j ? void 0 : j.lift);
            }
            function G(j) {
                return (S) => {
                    if (w(S))
                        return S.lift(function (x) {
                            try {
                                return j(x, this);
                            } catch (k) {
                                this.error(k);
                            }
                        });
                    throw new TypeError(
                        'Unable to lift unknown Observable type'
                    );
                };
            }
        },
        3268: (de, z, _) => {
            'use strict';
            _.d(z, { Z: () => j });
            var l = _(4004);
            const { isArray: w } = Array;
            function j(S) {
                return (0, l.U)((x) =>
                    (function G(S, x) {
                        return w(x) ? S(...x) : S(x);
                    })(S, x)
                );
            }
        },
        5032: (de, z, _) => {
            'use strict';
            function l() {}
            _.d(z, { Z: () => l });
        },
        7849: (de, z, _) => {
            'use strict';
            _.d(z, { h: () => G });
            var l = _(2416),
                w = _(3410);
            function G(j) {
                w.z.setTimeout(() => {
                    const { onUnhandledError: S } = l.v;
                    if (!S) throw j;
                    S(j);
                });
            }
        },
        4532: (de, z, _) => {
            'use strict';
            function l(w) {
                return new TypeError(
                    `You provided ${
                        null !== w && 'object' == typeof w
                            ? 'an invalid object'
                            : `'${w}'`
                    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
                );
            }
            _.d(z, { z: () => l });
        },
        5987: (de, z, _) => {
            'use strict';
            function W(ne, Pe, le, Me) {
                return new (le || (le = Promise))(function (ye, ut) {
                    function Pt(st) {
                        try {
                            nt(Me.next(st));
                        } catch (un) {
                            ut(un);
                        }
                    }
                    function ln(st) {
                        try {
                            nt(Me.throw(st));
                        } catch (un) {
                            ut(un);
                        }
                    }
                    function nt(st) {
                        st.done
                            ? ye(st.value)
                            : (function be(ye) {
                                  return ye instanceof le
                                      ? ye
                                      : new le(function (ut) {
                                            ut(ye);
                                        });
                              })(st.value).then(Pt, ln);
                    }
                    nt((Me = Me.apply(ne, Pe || [])).next());
                });
            }
            function Z(ne) {
                return this instanceof Z ? ((this.v = ne), this) : new Z(ne);
            }
            function X(ne, Pe, le) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var be,
                    Me = le.apply(ne, Pe || []),
                    ye = [];
                return (
                    (be = {}),
                    ut('next'),
                    ut('throw'),
                    ut('return'),
                    (be[Symbol.asyncIterator] = function () {
                        return this;
                    }),
                    be
                );
                function ut(Bt) {
                    Me[Bt] &&
                        (be[Bt] = function (Gt) {
                            return new Promise(function (mt, wn) {
                                ye.push([Bt, Gt, mt, wn]) > 1 || Pt(Bt, Gt);
                            });
                        });
                }
                function Pt(Bt, Gt) {
                    try {
                        !(function ln(Bt) {
                            Bt.value instanceof Z
                                ? Promise.resolve(Bt.value.v).then(nt, st)
                                : un(ye[0][2], Bt);
                        })(Me[Bt](Gt));
                    } catch (mt) {
                        un(ye[0][3], mt);
                    }
                }
                function nt(Bt) {
                    Pt('next', Bt);
                }
                function st(Bt) {
                    Pt('throw', Bt);
                }
                function un(Bt, Gt) {
                    Bt(Gt), ye.shift(), ye.length && Pt(ye[0][0], ye[0][1]);
                }
            }
            function ae(ne) {
                if (!Symbol.asyncIterator)
                    throw new TypeError('Symbol.asyncIterator is not defined.');
                var le,
                    Pe = ne[Symbol.asyncIterator];
                return Pe
                    ? Pe.call(ne)
                    : ((ne = (function Q(ne) {
                          var Pe =
                                  'function' == typeof Symbol &&
                                  Symbol.iterator,
                              le = Pe && ne[Pe],
                              Me = 0;
                          if (le) return le.call(ne);
                          if (ne && 'number' == typeof ne.length)
                              return {
                                  next: function () {
                                      return (
                                          ne &&
                                              Me >= ne.length &&
                                              (ne = void 0),
                                          { value: ne && ne[Me++], done: !ne }
                                      );
                                  },
                              };
                          throw new TypeError(
                              Pe
                                  ? 'Object is not iterable.'
                                  : 'Symbol.iterator is not defined.'
                          );
                      })(ne)),
                      (le = {}),
                      Me('next'),
                      Me('throw'),
                      Me('return'),
                      (le[Symbol.asyncIterator] = function () {
                          return this;
                      }),
                      le);
                function Me(ye) {
                    le[ye] =
                        ne[ye] &&
                        function (ut) {
                            return new Promise(function (Pt, ln) {
                                !(function be(ye, ut, Pt, ln) {
                                    Promise.resolve(ln).then(function (nt) {
                                        ye({ value: nt, done: Pt });
                                    }, ut);
                                })(Pt, ln, (ut = ne[ye](ut)).done, ut.value);
                            });
                        };
                }
            }
            _.d(z, { mG: () => W, qq: () => Z, FC: () => X, KL: () => ae });
        },
        1777: (de, z, _) => {
            'use strict';
            _.d(z, {
                l3: () => G,
                _j: () => l,
                LC: () => w,
                ZN: () => X,
                jt: () => S,
                vP: () => k,
                oB: () => W,
                eR: () => U,
                X$: () => j,
                ZE: () => Ce,
                k1: () => ae,
            });
            class l {}
            class w {}
            const G = '*';
            function j(Y, ie) {
                return { type: 7, name: Y, definitions: ie, options: {} };
            }
            function S(Y, ie = null) {
                return { type: 4, styles: ie, timings: Y };
            }
            function k(Y, ie = null) {
                return { type: 2, steps: Y, options: ie };
            }
            function W(Y) {
                return { type: 6, styles: Y, offset: null };
            }
            function U(Y, ie, se = null) {
                return { type: 1, expr: Y, animation: ie, options: se };
            }
            function Z(Y) {
                Promise.resolve(null).then(Y);
            }
            class X {
                constructor(ie = 0, se = 0) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._onDestroyFns = []),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._position = 0),
                        (this.parentPlayer = null),
                        (this.totalTime = ie + se);
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((ie) => ie()),
                        (this._onDoneFns = []));
                }
                onStart(ie) {
                    this._onStartFns.push(ie);
                }
                onDone(ie) {
                    this._onDoneFns.push(ie);
                }
                onDestroy(ie) {
                    this._onDestroyFns.push(ie);
                }
                hasStarted() {
                    return this._started;
                }
                init() {}
                play() {
                    this.hasStarted() ||
                        (this._onStart(), this.triggerMicrotask()),
                        (this._started = !0);
                }
                triggerMicrotask() {
                    Z(() => this._onFinish());
                }
                _onStart() {
                    this._onStartFns.forEach((ie) => ie()),
                        (this._onStartFns = []);
                }
                pause() {}
                restart() {}
                finish() {
                    this._onFinish();
                }
                destroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this.hasStarted() || this._onStart(),
                        this.finish(),
                        this._onDestroyFns.forEach((ie) => ie()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this._started = !1;
                }
                setPosition(ie) {
                    this._position = this.totalTime ? ie * this.totalTime : 1;
                }
                getPosition() {
                    return this.totalTime ? this._position / this.totalTime : 1;
                }
                triggerCallback(ie) {
                    const se =
                        'start' == ie ? this._onStartFns : this._onDoneFns;
                    se.forEach((xe) => xe()), (se.length = 0);
                }
            }
            class Ce {
                constructor(ie) {
                    (this._onDoneFns = []),
                        (this._onStartFns = []),
                        (this._finished = !1),
                        (this._started = !1),
                        (this._destroyed = !1),
                        (this._onDestroyFns = []),
                        (this.parentPlayer = null),
                        (this.totalTime = 0),
                        (this.players = ie);
                    let se = 0,
                        xe = 0,
                        $e = 0;
                    const it = this.players.length;
                    0 == it
                        ? Z(() => this._onFinish())
                        : this.players.forEach((ne) => {
                              ne.onDone(() => {
                                  ++se == it && this._onFinish();
                              }),
                                  ne.onDestroy(() => {
                                      ++xe == it && this._onDestroy();
                                  }),
                                  ne.onStart(() => {
                                      ++$e == it && this._onStart();
                                  });
                          }),
                        (this.totalTime = this.players.reduce(
                            (ne, Pe) => Math.max(ne, Pe.totalTime),
                            0
                        ));
                }
                _onFinish() {
                    this._finished ||
                        ((this._finished = !0),
                        this._onDoneFns.forEach((ie) => ie()),
                        (this._onDoneFns = []));
                }
                init() {
                    this.players.forEach((ie) => ie.init());
                }
                onStart(ie) {
                    this._onStartFns.push(ie);
                }
                _onStart() {
                    this.hasStarted() ||
                        ((this._started = !0),
                        this._onStartFns.forEach((ie) => ie()),
                        (this._onStartFns = []));
                }
                onDone(ie) {
                    this._onDoneFns.push(ie);
                }
                onDestroy(ie) {
                    this._onDestroyFns.push(ie);
                }
                hasStarted() {
                    return this._started;
                }
                play() {
                    this.parentPlayer || this.init(),
                        this._onStart(),
                        this.players.forEach((ie) => ie.play());
                }
                pause() {
                    this.players.forEach((ie) => ie.pause());
                }
                restart() {
                    this.players.forEach((ie) => ie.restart());
                }
                finish() {
                    this._onFinish(), this.players.forEach((ie) => ie.finish());
                }
                destroy() {
                    this._onDestroy();
                }
                _onDestroy() {
                    this._destroyed ||
                        ((this._destroyed = !0),
                        this._onFinish(),
                        this.players.forEach((ie) => ie.destroy()),
                        this._onDestroyFns.forEach((ie) => ie()),
                        (this._onDestroyFns = []));
                }
                reset() {
                    this.players.forEach((ie) => ie.reset()),
                        (this._destroyed = !1),
                        (this._finished = !1),
                        (this._started = !1);
                }
                setPosition(ie) {
                    const se = ie * this.totalTime;
                    this.players.forEach((xe) => {
                        const $e = xe.totalTime
                            ? Math.min(1, se / xe.totalTime)
                            : 1;
                        xe.setPosition($e);
                    });
                }
                getPosition() {
                    const ie = this.players.reduce(
                        (se, xe) =>
                            null === se || xe.totalTime > se.totalTime
                                ? xe
                                : se,
                        null
                    );
                    return null != ie ? ie.getPosition() : 0;
                }
                beforeDestroy() {
                    this.players.forEach((ie) => {
                        ie.beforeDestroy && ie.beforeDestroy();
                    });
                }
                triggerCallback(ie) {
                    const se =
                        'start' == ie ? this._onStartFns : this._onDoneFns;
                    se.forEach((xe) => xe()), (se.length = 0);
                }
            }
            const ae = '!';
        },
        9808: (de, z, _) => {
            'use strict';
            _.d(z, {
                mr: () => Ce,
                Ov: () => Oe,
                ez: () => ns,
                K0: () => k,
                Do: () => Y,
                V_: () => V,
                Ye: () => ie,
                S$: () => Z,
                mk: () => _r,
                sg: () => Dn,
                O5: () => Le,
                PC: () => Bn,
                tP: () => gr,
                b0: () => ae,
                lw: () => W,
                EM: () => ii,
                JF: () => rn,
                PM: () => Ei,
                w_: () => x,
                bD: () => rs,
                q: () => G,
                Mx: () => br,
                HT: () => S,
            });
            var l = _(5e3);
            let w = null;
            function G() {
                return w;
            }
            function S(T) {
                w || (w = T);
            }
            class x {}
            const k = new l.OlP('DocumentToken');
            let W = (() => {
                class T {
                    historyGo(b) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (T.ɵfac = function (b) {
                        return new (b || T)();
                    }),
                    (T.ɵprov = l.Yz7({
                        token: T,
                        factory: function () {
                            return (function B() {
                                return (0, l.LFG)(U);
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    T
                );
            })();
            const V = new l.OlP('Location Initialized');
            let U = (() => {
                class T extends W {
                    constructor(b) {
                        super(), (this._doc = b), this._init();
                    }
                    _init() {
                        (this.location = window.location),
                            (this._history = window.history);
                    }
                    getBaseHrefFromDOM() {
                        return G().getBaseHref(this._doc);
                    }
                    onPopState(b) {
                        const H = G().getGlobalEventTarget(this._doc, 'window');
                        return (
                            H.addEventListener('popstate', b, !1),
                            () => H.removeEventListener('popstate', b)
                        );
                    }
                    onHashChange(b) {
                        const H = G().getGlobalEventTarget(this._doc, 'window');
                        return (
                            H.addEventListener('hashchange', b, !1),
                            () => H.removeEventListener('hashchange', b)
                        );
                    }
                    get href() {
                        return this.location.href;
                    }
                    get protocol() {
                        return this.location.protocol;
                    }
                    get hostname() {
                        return this.location.hostname;
                    }
                    get port() {
                        return this.location.port;
                    }
                    get pathname() {
                        return this.location.pathname;
                    }
                    get search() {
                        return this.location.search;
                    }
                    get hash() {
                        return this.location.hash;
                    }
                    set pathname(b) {
                        this.location.pathname = b;
                    }
                    pushState(b, H, fe) {
                        Q()
                            ? this._history.pushState(b, H, fe)
                            : (this.location.hash = fe);
                    }
                    replaceState(b, H, fe) {
                        Q()
                            ? this._history.replaceState(b, H, fe)
                            : (this.location.hash = fe);
                    }
                    forward() {
                        this._history.forward();
                    }
                    back() {
                        this._history.back();
                    }
                    historyGo(b = 0) {
                        this._history.go(b);
                    }
                    getState() {
                        return this._history.state;
                    }
                }
                return (
                    (T.ɵfac = function (b) {
                        return new (b || T)(l.LFG(k));
                    }),
                    (T.ɵprov = l.Yz7({
                        token: T,
                        factory: function () {
                            return (function De() {
                                return new U((0, l.LFG)(k));
                            })();
                        },
                        providedIn: 'platform',
                    })),
                    T
                );
            })();
            function Q() {
                return !!window.history.pushState;
            }
            function Ee(T, F) {
                if (0 == T.length) return F;
                if (0 == F.length) return T;
                let b = 0;
                return (
                    T.endsWith('/') && b++,
                    F.startsWith('/') && b++,
                    2 == b ? T + F.substring(1) : 1 == b ? T + F : T + '/' + F
                );
            }
            function _e(T) {
                const F = T.match(/#|\?|$/),
                    b = (F && F.index) || T.length;
                return T.slice(0, b - ('/' === T[b - 1] ? 1 : 0)) + T.slice(b);
            }
            function Se(T) {
                return T && '?' !== T[0] ? '?' + T : T;
            }
            let Z = (() => {
                class T {
                    historyGo(b) {
                        throw new Error('Not implemented');
                    }
                }
                return (
                    (T.ɵfac = function (b) {
                        return new (b || T)();
                    }),
                    (T.ɵprov = l.Yz7({
                        token: T,
                        factory: function () {
                            return (function X(T) {
                                const F = (0, l.LFG)(k).location;
                                return new ae(
                                    (0, l.LFG)(W),
                                    (F && F.origin) || ''
                                );
                            })();
                        },
                        providedIn: 'root',
                    })),
                    T
                );
            })();
            const Ce = new l.OlP('appBaseHref');
            let ae = (() => {
                    class T extends Z {
                        constructor(b, H) {
                            if (
                                (super(),
                                (this._platformLocation = b),
                                (this._removeListenerFns = []),
                                null == H &&
                                    (H =
                                        this._platformLocation.getBaseHrefFromDOM()),
                                null == H)
                            )
                                throw new Error(
                                    'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                                );
                            this._baseHref = H;
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(b) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(b),
                                this._platformLocation.onHashChange(b)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        prepareExternalUrl(b) {
                            return Ee(this._baseHref, b);
                        }
                        path(b = !1) {
                            const H =
                                    this._platformLocation.pathname +
                                    Se(this._platformLocation.search),
                                fe = this._platformLocation.hash;
                            return fe && b ? `${H}${fe}` : H;
                        }
                        pushState(b, H, fe, Ve) {
                            const Ke = this.prepareExternalUrl(fe + Se(Ve));
                            this._platformLocation.pushState(b, H, Ke);
                        }
                        replaceState(b, H, fe, Ve) {
                            const Ke = this.prepareExternalUrl(fe + Se(Ve));
                            this._platformLocation.replaceState(b, H, Ke);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(b = 0) {
                            var H, fe;
                            null ===
                                (fe = (H = this._platformLocation).historyGo) ||
                                void 0 === fe ||
                                fe.call(H, b);
                        }
                    }
                    return (
                        (T.ɵfac = function (b) {
                            return new (b || T)(l.LFG(W), l.LFG(Ce, 8));
                        }),
                        (T.ɵprov = l.Yz7({ token: T, factory: T.ɵfac })),
                        T
                    );
                })(),
                Y = (() => {
                    class T extends Z {
                        constructor(b, H) {
                            super(),
                                (this._platformLocation = b),
                                (this._baseHref = ''),
                                (this._removeListenerFns = []),
                                null != H && (this._baseHref = H);
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length; )
                                this._removeListenerFns.pop()();
                        }
                        onPopState(b) {
                            this._removeListenerFns.push(
                                this._platformLocation.onPopState(b),
                                this._platformLocation.onHashChange(b)
                            );
                        }
                        getBaseHref() {
                            return this._baseHref;
                        }
                        path(b = !1) {
                            let H = this._platformLocation.hash;
                            return (
                                null == H && (H = '#'),
                                H.length > 0 ? H.substring(1) : H
                            );
                        }
                        prepareExternalUrl(b) {
                            const H = Ee(this._baseHref, b);
                            return H.length > 0 ? '#' + H : H;
                        }
                        pushState(b, H, fe, Ve) {
                            let Ke = this.prepareExternalUrl(fe + Se(Ve));
                            0 == Ke.length &&
                                (Ke = this._platformLocation.pathname),
                                this._platformLocation.pushState(b, H, Ke);
                        }
                        replaceState(b, H, fe, Ve) {
                            let Ke = this.prepareExternalUrl(fe + Se(Ve));
                            0 == Ke.length &&
                                (Ke = this._platformLocation.pathname),
                                this._platformLocation.replaceState(b, H, Ke);
                        }
                        forward() {
                            this._platformLocation.forward();
                        }
                        back() {
                            this._platformLocation.back();
                        }
                        historyGo(b = 0) {
                            var H, fe;
                            null ===
                                (fe = (H = this._platformLocation).historyGo) ||
                                void 0 === fe ||
                                fe.call(H, b);
                        }
                    }
                    return (
                        (T.ɵfac = function (b) {
                            return new (b || T)(l.LFG(W), l.LFG(Ce, 8));
                        }),
                        (T.ɵprov = l.Yz7({ token: T, factory: T.ɵfac })),
                        T
                    );
                })(),
                ie = (() => {
                    class T {
                        constructor(b, H) {
                            (this._subject = new l.vpe()),
                                (this._urlChangeListeners = []),
                                (this._platformStrategy = b);
                            const fe = this._platformStrategy.getBaseHref();
                            (this._platformLocation = H),
                                (this._baseHref = _e($e(fe))),
                                this._platformStrategy.onPopState((Ve) => {
                                    this._subject.emit({
                                        url: this.path(!0),
                                        pop: !0,
                                        state: Ve.state,
                                        type: Ve.type,
                                    });
                                });
                        }
                        path(b = !1) {
                            return this.normalize(
                                this._platformStrategy.path(b)
                            );
                        }
                        getState() {
                            return this._platformLocation.getState();
                        }
                        isCurrentPathEqualTo(b, H = '') {
                            return this.path() == this.normalize(b + Se(H));
                        }
                        normalize(b) {
                            return T.stripTrailingSlash(
                                (function xe(T, F) {
                                    return T && F.startsWith(T)
                                        ? F.substring(T.length)
                                        : F;
                                })(this._baseHref, $e(b))
                            );
                        }
                        prepareExternalUrl(b) {
                            return (
                                b && '/' !== b[0] && (b = '/' + b),
                                this._platformStrategy.prepareExternalUrl(b)
                            );
                        }
                        go(b, H = '', fe = null) {
                            this._platformStrategy.pushState(fe, '', b, H),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(b + Se(H)),
                                    fe
                                );
                        }
                        replaceState(b, H = '', fe = null) {
                            this._platformStrategy.replaceState(fe, '', b, H),
                                this._notifyUrlChangeListeners(
                                    this.prepareExternalUrl(b + Se(H)),
                                    fe
                                );
                        }
                        forward() {
                            this._platformStrategy.forward();
                        }
                        back() {
                            this._platformStrategy.back();
                        }
                        historyGo(b = 0) {
                            var H, fe;
                            null ===
                                (fe = (H = this._platformStrategy).historyGo) ||
                                void 0 === fe ||
                                fe.call(H, b);
                        }
                        onUrlChange(b) {
                            this._urlChangeListeners.push(b),
                                this._urlChangeSubscription ||
                                    (this._urlChangeSubscription =
                                        this.subscribe((H) => {
                                            this._notifyUrlChangeListeners(
                                                H.url,
                                                H.state
                                            );
                                        }));
                        }
                        _notifyUrlChangeListeners(b = '', H) {
                            this._urlChangeListeners.forEach((fe) => fe(b, H));
                        }
                        subscribe(b, H, fe) {
                            return this._subject.subscribe({
                                next: b,
                                error: H,
                                complete: fe,
                            });
                        }
                    }
                    return (
                        (T.normalizeQueryParams = Se),
                        (T.joinWithSlash = Ee),
                        (T.stripTrailingSlash = _e),
                        (T.ɵfac = function (b) {
                            return new (b || T)(l.LFG(Z), l.LFG(W));
                        }),
                        (T.ɵprov = l.Yz7({
                            token: T,
                            factory: function () {
                                return (function se() {
                                    return new ie((0, l.LFG)(Z), (0, l.LFG)(W));
                                })();
                            },
                            providedIn: 'root',
                        })),
                        T
                    );
                })();
            function $e(T) {
                return T.replace(/\/index.html$/, '');
            }
            var Pe = (() => (
                ((Pe = Pe || {})[(Pe.Zero = 0)] = 'Zero'),
                (Pe[(Pe.One = 1)] = 'One'),
                (Pe[(Pe.Two = 2)] = 'Two'),
                (Pe[(Pe.Few = 3)] = 'Few'),
                (Pe[(Pe.Many = 4)] = 'Many'),
                (Pe[(Pe.Other = 5)] = 'Other'),
                Pe
            ))();
            const q = l.kL8;
            class mn {}
            let In = (() => {
                class T extends mn {
                    constructor(b) {
                        super(), (this.locale = b);
                    }
                    getPluralCategory(b, H) {
                        switch (q(H || this.locale)(b)) {
                            case Pe.Zero:
                                return 'zero';
                            case Pe.One:
                                return 'one';
                            case Pe.Two:
                                return 'two';
                            case Pe.Few:
                                return 'few';
                            case Pe.Many:
                                return 'many';
                            default:
                                return 'other';
                        }
                    }
                }
                return (
                    (T.ɵfac = function (b) {
                        return new (b || T)(l.LFG(l.soG));
                    }),
                    (T.ɵprov = l.Yz7({ token: T, factory: T.ɵfac })),
                    T
                );
            })();
            function br(T, F) {
                F = encodeURIComponent(F);
                for (const b of T.split(';')) {
                    const H = b.indexOf('='),
                        [fe, Ve] =
                            -1 == H ? [b, ''] : [b.slice(0, H), b.slice(H + 1)];
                    if (fe.trim() === F) return decodeURIComponent(Ve);
                }
                return null;
            }
            let _r = (() => {
                class T {
                    constructor(b, H, fe, Ve) {
                        (this._iterableDiffers = b),
                            (this._keyValueDiffers = H),
                            (this._ngEl = fe),
                            (this._renderer = Ve),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._initialClasses = []),
                            (this._rawClass = null);
                    }
                    set klass(b) {
                        this._removeClasses(this._initialClasses),
                            (this._initialClasses =
                                'string' == typeof b ? b.split(/\s+/) : []),
                            this._applyClasses(this._initialClasses),
                            this._applyClasses(this._rawClass);
                    }
                    set ngClass(b) {
                        this._removeClasses(this._rawClass),
                            this._applyClasses(this._initialClasses),
                            (this._iterableDiffer = null),
                            (this._keyValueDiffer = null),
                            (this._rawClass =
                                'string' == typeof b ? b.split(/\s+/) : b),
                            this._rawClass &&
                                ((0, l.sIi)(this._rawClass)
                                    ? (this._iterableDiffer =
                                          this._iterableDiffers
                                              .find(this._rawClass)
                                              .create())
                                    : (this._keyValueDiffer =
                                          this._keyValueDiffers
                                              .find(this._rawClass)
                                              .create()));
                    }
                    ngDoCheck() {
                        if (this._iterableDiffer) {
                            const b = this._iterableDiffer.diff(this._rawClass);
                            b && this._applyIterableChanges(b);
                        } else if (this._keyValueDiffer) {
                            const b = this._keyValueDiffer.diff(this._rawClass);
                            b && this._applyKeyValueChanges(b);
                        }
                    }
                    _applyKeyValueChanges(b) {
                        b.forEachAddedItem((H) =>
                            this._toggleClass(H.key, H.currentValue)
                        ),
                            b.forEachChangedItem((H) =>
                                this._toggleClass(H.key, H.currentValue)
                            ),
                            b.forEachRemovedItem((H) => {
                                H.previousValue && this._toggleClass(H.key, !1);
                            });
                    }
                    _applyIterableChanges(b) {
                        b.forEachAddedItem((H) => {
                            if ('string' != typeof H.item)
                                throw new Error(
                                    `NgClass can only toggle CSS classes expressed as strings, got ${(0,
                                    l.AaK)(H.item)}`
                                );
                            this._toggleClass(H.item, !0);
                        }),
                            b.forEachRemovedItem((H) =>
                                this._toggleClass(H.item, !1)
                            );
                    }
                    _applyClasses(b) {
                        b &&
                            (Array.isArray(b) || b instanceof Set
                                ? b.forEach((H) => this._toggleClass(H, !0))
                                : Object.keys(b).forEach((H) =>
                                      this._toggleClass(H, !!b[H])
                                  ));
                    }
                    _removeClasses(b) {
                        b &&
                            (Array.isArray(b) || b instanceof Set
                                ? b.forEach((H) => this._toggleClass(H, !1))
                                : Object.keys(b).forEach((H) =>
                                      this._toggleClass(H, !1)
                                  ));
                    }
                    _toggleClass(b, H) {
                        (b = b.trim()) &&
                            b.split(/\s+/g).forEach((fe) => {
                                H
                                    ? this._renderer.addClass(
                                          this._ngEl.nativeElement,
                                          fe
                                      )
                                    : this._renderer.removeClass(
                                          this._ngEl.nativeElement,
                                          fe
                                      );
                            });
                    }
                }
                return (
                    (T.ɵfac = function (b) {
                        return new (b || T)(
                            l.Y36(l.ZZ4),
                            l.Y36(l.aQg),
                            l.Y36(l.SBq),
                            l.Y36(l.Qsj)
                        );
                    }),
                    (T.ɵdir = l.lG2({
                        type: T,
                        selectors: [['', 'ngClass', '']],
                        inputs: {
                            klass: ['class', 'klass'],
                            ngClass: 'ngClass',
                        },
                    })),
                    T
                );
            })();
            class $n {
                constructor(F, b, H, fe) {
                    (this.$implicit = F),
                        (this.ngForOf = b),
                        (this.index = H),
                        (this.count = fe);
                }
                get first() {
                    return 0 === this.index;
                }
                get last() {
                    return this.index === this.count - 1;
                }
                get even() {
                    return this.index % 2 == 0;
                }
                get odd() {
                    return !this.even;
                }
            }
            let Dn = (() => {
                class T {
                    constructor(b, H, fe) {
                        (this._viewContainer = b),
                            (this._template = H),
                            (this._differs = fe),
                            (this._ngForOf = null),
                            (this._ngForOfDirty = !0),
                            (this._differ = null);
                    }
                    set ngForOf(b) {
                        (this._ngForOf = b), (this._ngForOfDirty = !0);
                    }
                    set ngForTrackBy(b) {
                        this._trackByFn = b;
                    }
                    get ngForTrackBy() {
                        return this._trackByFn;
                    }
                    set ngForTemplate(b) {
                        b && (this._template = b);
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const b = this._ngForOf;
                            !this._differ &&
                                b &&
                                (this._differ = this._differs
                                    .find(b)
                                    .create(this.ngForTrackBy));
                        }
                        if (this._differ) {
                            const b = this._differ.diff(this._ngForOf);
                            b && this._applyChanges(b);
                        }
                    }
                    _applyChanges(b) {
                        const H = this._viewContainer;
                        b.forEachOperation((fe, Ve, Ke) => {
                            if (null == fe.previousIndex)
                                H.createEmbeddedView(
                                    this._template,
                                    new $n(fe.item, this._ngForOf, -1, -1),
                                    null === Ke ? void 0 : Ke
                                );
                            else if (null == Ke)
                                H.remove(null === Ve ? void 0 : Ve);
                            else if (null !== Ve) {
                                const wt = H.get(Ve);
                                H.move(wt, Ke), dr(wt, fe);
                            }
                        });
                        for (let fe = 0, Ve = H.length; fe < Ve; fe++) {
                            const wt = H.get(fe).context;
                            (wt.index = fe),
                                (wt.count = Ve),
                                (wt.ngForOf = this._ngForOf);
                        }
                        b.forEachIdentityChange((fe) => {
                            dr(H.get(fe.currentIndex), fe);
                        });
                    }
                    static ngTemplateContextGuard(b, H) {
                        return !0;
                    }
                }
                return (
                    (T.ɵfac = function (b) {
                        return new (b || T)(
                            l.Y36(l.s_b),
                            l.Y36(l.Rgc),
                            l.Y36(l.ZZ4)
                        );
                    }),
                    (T.ɵdir = l.lG2({
                        type: T,
                        selectors: [['', 'ngFor', '', 'ngForOf', '']],
                        inputs: {
                            ngForOf: 'ngForOf',
                            ngForTrackBy: 'ngForTrackBy',
                            ngForTemplate: 'ngForTemplate',
                        },
                    })),
                    T
                );
            })();
            function dr(T, F) {
                T.context.$implicit = F.item;
            }
            let Le = (() => {
                class T {
                    constructor(b, H) {
                        (this._viewContainer = b),
                            (this._context = new ge()),
                            (this._thenTemplateRef = null),
                            (this._elseTemplateRef = null),
                            (this._thenViewRef = null),
                            (this._elseViewRef = null),
                            (this._thenTemplateRef = H);
                    }
                    set ngIf(b) {
                        (this._context.$implicit = this._context.ngIf = b),
                            this._updateView();
                    }
                    set ngIfThen(b) {
                        Re('ngIfThen', b),
                            (this._thenTemplateRef = b),
                            (this._thenViewRef = null),
                            this._updateView();
                    }
                    set ngIfElse(b) {
                        Re('ngIfElse', b),
                            (this._elseTemplateRef = b),
                            (this._elseViewRef = null),
                            this._updateView();
                    }
                    _updateView() {
                        this._context.$implicit
                            ? this._thenViewRef ||
                              (this._viewContainer.clear(),
                              (this._elseViewRef = null),
                              this._thenTemplateRef &&
                                  (this._thenViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._thenTemplateRef,
                                          this._context
                                      )))
                            : this._elseViewRef ||
                              (this._viewContainer.clear(),
                              (this._thenViewRef = null),
                              this._elseTemplateRef &&
                                  (this._elseViewRef =
                                      this._viewContainer.createEmbeddedView(
                                          this._elseTemplateRef,
                                          this._context
                                      )));
                    }
                    static ngTemplateContextGuard(b, H) {
                        return !0;
                    }
                }
                return (
                    (T.ɵfac = function (b) {
                        return new (b || T)(l.Y36(l.s_b), l.Y36(l.Rgc));
                    }),
                    (T.ɵdir = l.lG2({
                        type: T,
                        selectors: [['', 'ngIf', '']],
                        inputs: {
                            ngIf: 'ngIf',
                            ngIfThen: 'ngIfThen',
                            ngIfElse: 'ngIfElse',
                        },
                    })),
                    T
                );
            })();
            class ge {
                constructor() {
                    (this.$implicit = null), (this.ngIf = null);
                }
            }
            function Re(T, F) {
                if (F && !F.createEmbeddedView)
                    throw new Error(
                        `${T} must be a TemplateRef, but received '${(0, l.AaK)(
                            F
                        )}'.`
                    );
            }
            let Bn = (() => {
                    class T {
                        constructor(b, H, fe) {
                            (this._ngEl = b),
                                (this._differs = H),
                                (this._renderer = fe),
                                (this._ngStyle = null),
                                (this._differ = null);
                        }
                        set ngStyle(b) {
                            (this._ngStyle = b),
                                !this._differ &&
                                    b &&
                                    (this._differ = this._differs
                                        .find(b)
                                        .create());
                        }
                        ngDoCheck() {
                            if (this._differ) {
                                const b = this._differ.diff(this._ngStyle);
                                b && this._applyChanges(b);
                            }
                        }
                        _setStyle(b, H) {
                            const [fe, Ve] = b.split('.');
                            null != (H = null != H && Ve ? `${H}${Ve}` : H)
                                ? this._renderer.setStyle(
                                      this._ngEl.nativeElement,
                                      fe,
                                      H
                                  )
                                : this._renderer.removeStyle(
                                      this._ngEl.nativeElement,
                                      fe
                                  );
                        }
                        _applyChanges(b) {
                            b.forEachRemovedItem((H) =>
                                this._setStyle(H.key, null)
                            ),
                                b.forEachAddedItem((H) =>
                                    this._setStyle(H.key, H.currentValue)
                                ),
                                b.forEachChangedItem((H) =>
                                    this._setStyle(H.key, H.currentValue)
                                );
                        }
                    }
                    return (
                        (T.ɵfac = function (b) {
                            return new (b || T)(
                                l.Y36(l.SBq),
                                l.Y36(l.aQg),
                                l.Y36(l.Qsj)
                            );
                        }),
                        (T.ɵdir = l.lG2({
                            type: T,
                            selectors: [['', 'ngStyle', '']],
                            inputs: { ngStyle: 'ngStyle' },
                        })),
                        T
                    );
                })(),
                gr = (() => {
                    class T {
                        constructor(b) {
                            (this._viewContainerRef = b),
                                (this._viewRef = null),
                                (this.ngTemplateOutletContext = null),
                                (this.ngTemplateOutlet = null);
                        }
                        ngOnChanges(b) {
                            if (b.ngTemplateOutlet) {
                                const H = this._viewContainerRef;
                                this._viewRef &&
                                    H.remove(H.indexOf(this._viewRef)),
                                    (this._viewRef = this.ngTemplateOutlet
                                        ? H.createEmbeddedView(
                                              this.ngTemplateOutlet,
                                              this.ngTemplateOutletContext
                                          )
                                        : null);
                            } else
                                this._viewRef &&
                                    b.ngTemplateOutletContext &&
                                    this.ngTemplateOutletContext &&
                                    (this._viewRef.context =
                                        this.ngTemplateOutletContext);
                        }
                    }
                    return (
                        (T.ɵfac = function (b) {
                            return new (b || T)(l.Y36(l.s_b));
                        }),
                        (T.ɵdir = l.lG2({
                            type: T,
                            selectors: [['', 'ngTemplateOutlet', '']],
                            inputs: {
                                ngTemplateOutletContext:
                                    'ngTemplateOutletContext',
                                ngTemplateOutlet: 'ngTemplateOutlet',
                            },
                            features: [l.TTD],
                        })),
                        T
                    );
                })();
            class Vi {
                createSubscription(F, b) {
                    return F.subscribe({
                        next: b,
                        error: (H) => {
                            throw H;
                        },
                    });
                }
                dispose(F) {
                    F.unsubscribe();
                }
                onDestroy(F) {
                    F.unsubscribe();
                }
            }
            class ci {
                createSubscription(F, b) {
                    return F.then(b, (H) => {
                        throw H;
                    });
                }
                dispose(F) {}
                onDestroy(F) {}
            }
            const ve = new ci(),
                me = new Vi();
            let Oe = (() => {
                    class T {
                        constructor(b) {
                            (this._ref = b),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null),
                                (this._strategy = null);
                        }
                        ngOnDestroy() {
                            this._subscription && this._dispose();
                        }
                        transform(b) {
                            return this._obj
                                ? b !== this._obj
                                    ? (this._dispose(), this.transform(b))
                                    : this._latestValue
                                : (b && this._subscribe(b), this._latestValue);
                        }
                        _subscribe(b) {
                            (this._obj = b),
                                (this._strategy = this._selectStrategy(b)),
                                (this._subscription =
                                    this._strategy.createSubscription(b, (H) =>
                                        this._updateLatestValue(b, H)
                                    ));
                        }
                        _selectStrategy(b) {
                            if ((0, l.QGY)(b)) return ve;
                            if ((0, l.F4k)(b)) return me;
                            throw (function mr(T, F) {
                                return new l.vHH(2100, '');
                            })();
                        }
                        _dispose() {
                            this._strategy.dispose(this._subscription),
                                (this._latestValue = null),
                                (this._subscription = null),
                                (this._obj = null);
                        }
                        _updateLatestValue(b, H) {
                            b === this._obj &&
                                ((this._latestValue = H),
                                this._ref.markForCheck());
                        }
                    }
                    return (
                        (T.ɵfac = function (b) {
                            return new (b || T)(l.Y36(l.sBO, 16));
                        }),
                        (T.ɵpipe = l.Yjl({ name: 'async', type: T, pure: !1 })),
                        T
                    );
                })(),
                ns = (() => {
                    class T {}
                    return (
                        (T.ɵfac = function (b) {
                            return new (b || T)();
                        }),
                        (T.ɵmod = l.oAB({ type: T })),
                        (T.ɵinj = l.cJS({
                            providers: [{ provide: mn, useClass: In }],
                        })),
                        T
                    );
                })();
            const rs = 'browser';
            function Ei(T) {
                return 'server' === T;
            }
            let ii = (() => {
                class T {}
                return (
                    (T.ɵprov = (0, l.Yz7)({
                        token: T,
                        providedIn: 'root',
                        factory: () => new Ri((0, l.LFG)(k), window),
                    })),
                    T
                );
            })();
            class Ri {
                constructor(F, b) {
                    (this.document = F),
                        (this.window = b),
                        (this.offset = () => [0, 0]);
                }
                setOffset(F) {
                    this.offset = Array.isArray(F) ? () => F : F;
                }
                getScrollPosition() {
                    return this.supportsScrolling()
                        ? [this.window.pageXOffset, this.window.pageYOffset]
                        : [0, 0];
                }
                scrollToPosition(F) {
                    this.supportsScrolling() &&
                        this.window.scrollTo(F[0], F[1]);
                }
                scrollToAnchor(F) {
                    if (!this.supportsScrolling()) return;
                    const b = (function Lr(T, F) {
                        const b =
                            T.getElementById(F) || T.getElementsByName(F)[0];
                        if (b) return b;
                        if (
                            'function' == typeof T.createTreeWalker &&
                            T.body &&
                            (T.body.createShadowRoot || T.body.attachShadow)
                        ) {
                            const H = T.createTreeWalker(
                                T.body,
                                NodeFilter.SHOW_ELEMENT
                            );
                            let fe = H.currentNode;
                            for (; fe; ) {
                                const Ve = fe.shadowRoot;
                                if (Ve) {
                                    const Ke =
                                        Ve.getElementById(F) ||
                                        Ve.querySelector(`[name="${F}"]`);
                                    if (Ke) return Ke;
                                }
                                fe = H.nextNode();
                            }
                        }
                        return null;
                    })(this.document, F);
                    b && (this.scrollToElement(b), b.focus());
                }
                setHistoryScrollRestoration(F) {
                    if (this.supportScrollRestoration()) {
                        const b = this.window.history;
                        b && b.scrollRestoration && (b.scrollRestoration = F);
                    }
                }
                scrollToElement(F) {
                    const b = F.getBoundingClientRect(),
                        H = b.left + this.window.pageXOffset,
                        fe = b.top + this.window.pageYOffset,
                        Ve = this.offset();
                    this.window.scrollTo(H - Ve[0], fe - Ve[1]);
                }
                supportScrollRestoration() {
                    try {
                        if (!this.supportsScrolling()) return !1;
                        const F =
                            Hi(this.window.history) ||
                            Hi(Object.getPrototypeOf(this.window.history));
                        return !(!F || (!F.writable && !F.set));
                    } catch (F) {
                        return !1;
                    }
                }
                supportsScrolling() {
                    try {
                        return (
                            !!this.window &&
                            !!this.window.scrollTo &&
                            'pageXOffset' in this.window
                        );
                    } catch (F) {
                        return !1;
                    }
                }
            }
            function Hi(T) {
                return Object.getOwnPropertyDescriptor(T, 'scrollRestoration');
            }
            class rn {}
        },
        5e3: (de, z, _) => {
            'use strict';
            _.d(z, {
                deG: () => Qo,
                tb: () => zg,
                AFp: () => $g,
                ip1: () => kc,
                CZH: () => Ia,
                hGG: () => e0,
                z2F: () => ll,
                sBO: () => OC,
                Sil: () => Vc,
                _Vd: () => tl,
                EJc: () => Yg,
                SBq: () => nl,
                qLn: () => ja,
                vpe: () => no,
                tBr: () => Vr,
                XFs: () => We,
                OlP: () => cr,
                zs3: () => ps,
                ZZ4: () => zl,
                aQg: () => Kl,
                soG: () => Gl,
                YKP: () => Jp,
                h0i: () => Aa,
                PXZ: () => CC,
                R0b: () => Xi,
                FiY: () => li,
                Lbi: () => Wg,
                g9A: () => Gg,
                Qsj: () => uD,
                FYo: () => Kp,
                JOm: () => Js,
                PiD: () => qi,
                tp0: () => mi,
                Rgc: () => ol,
                dDg: () => qg,
                q4F: () => Zp,
                GfV: () => Yp,
                s_b: () => Ul,
                ifc: () => Ft,
                eFA: () => em,
                G48: () => MC,
                Gpc: () => U,
                X6Q: () => IC,
                _c5: () => KC,
                VLi: () => vC,
                c2e: () => Kg,
                zSh: () => Hu,
                wAp: () => Qt,
                vHH: () => _e,
                cg1: () => pc,
                kL8: () => yp,
                dqk: () => nn,
                sIi: () => Ka,
                CqO: () => Eh,
                QGY: () => ac,
                F4k: () => vh,
                RDi: () => Hi,
                AaK: () => W,
                qOj: () => Ku,
                TTD: () => Jr,
                _Bn: () => Gp,
                xp6: () => Zd,
                uIk: () => Qu,
                Tol: () => Gh,
                ekj: () => dc,
                Suo: () => Dg,
                Xpm: () => Be,
                lG2: () => Xn,
                Yz7: () => mt,
                cJS: () => dn,
                oAB: () => on,
                Yjl: () => Jt,
                Y36: () => Za,
                _UZ: () => mh,
                GkF: () => yh,
                BQk: () => oc,
                ynx: () => sc,
                qZA: () => ic,
                TgZ: () => rc,
                EpF: () => _h,
                n5z: () => Zr,
                LFG: () => gt,
                $8M: () => Yi,
                $Z: () => gh,
                NdJ: () => lc,
                CRH: () => Cg,
                oxw: () => Th,
                ALo: () => fg,
                lcZ: () => hg,
                Hsn: () => wh,
                F$t: () => Ah,
                Q6J: () => tc,
                DdM: () => ng,
                VKq: () => rg,
                WLB: () => ig,
                l5B: () => sg,
                qbA: () => og,
                iGM: () => vg,
                MAs: () => ih,
                CHM: () => yr,
                oJD: () => gd,
                LSH: () => ru,
                kYT: () => Sn,
                Akn: () => Ps,
                YNc: () => rh,
                W1O: () => wg,
                _uU: () => qh,
                Oqu: () => hc,
                hij: () => Rl,
                Gf: () => Eg,
            });
            var l = _(7579),
                w = _(727),
                G = _(8306),
                j = _(6451),
                S = _(3099);
            function x(e) {
                for (let t in e) if (e[t] === x) return t;
                throw Error(
                    'Could not find renamed property on target object.'
                );
            }
            function k(e, t) {
                for (const n in t)
                    t.hasOwnProperty(n) &&
                        !e.hasOwnProperty(n) &&
                        (e[n] = t[n]);
            }
            function W(e) {
                if ('string' == typeof e) return e;
                if (Array.isArray(e)) return '[' + e.map(W).join(', ') + ']';
                if (null == e) return '' + e;
                if (e.overriddenName) return `${e.overriddenName}`;
                if (e.name) return `${e.name}`;
                const t = e.toString();
                if (null == t) return '' + t;
                const n = t.indexOf('\n');
                return -1 === n ? t : t.substring(0, n);
            }
            function B(e, t) {
                return null == e || '' === e
                    ? null === t
                        ? ''
                        : t
                    : null == t || '' === t
                    ? e
                    : e + ' ' + t;
            }
            const V = x({ __forward_ref__: x });
            function U(e) {
                return (
                    (e.__forward_ref__ = U),
                    (e.toString = function () {
                        return W(this());
                    }),
                    e
                );
            }
            function Q(e) {
                return De(e) ? e() : e;
            }
            function De(e) {
                return (
                    'function' == typeof e &&
                    e.hasOwnProperty(V) &&
                    e.__forward_ref__ === U
                );
            }
            class _e extends Error {
                constructor(t, n) {
                    super(
                        (function Se(e, t) {
                            return `NG0${Math.abs(e)}${t ? ': ' + t : ''}`;
                        })(t, n)
                    ),
                        (this.code = t);
                }
            }
            function Z(e) {
                return 'string' == typeof e ? e : null == e ? '' : String(e);
            }
            function X(e) {
                return 'function' == typeof e
                    ? e.name || e.toString()
                    : 'object' == typeof e &&
                      null != e &&
                      'function' == typeof e.type
                    ? e.type.name || e.type.toString()
                    : Z(e);
            }
            function ie(e, t) {
                const n = t ? ` in ${t}` : '';
                throw new _e(-201, `No provider for ${X(e)} found${n}`);
            }
            function nt(e, t) {
                null == e &&
                    (function st(e, t, n, r) {
                        throw new Error(
                            `ASSERTION ERROR: ${e}` +
                                (null == r
                                    ? ''
                                    : ` [Expected=> ${n} ${r} ${t} <=Actual]`)
                        );
                    })(t, e, null, '!=');
            }
            function mt(e) {
                return {
                    token: e.token,
                    providedIn: e.providedIn || null,
                    factory: e.factory,
                    value: void 0,
                };
            }
            function dn(e) {
                return {
                    providers: e.providers || [],
                    imports: e.imports || [],
                };
            }
            function Kt(e) {
                return Nn(e, Ye) || Nn(e, Te);
            }
            function Nn(e, t) {
                return e.hasOwnProperty(t) ? e[t] : null;
            }
            function Fe(e) {
                return e && (e.hasOwnProperty(q) || e.hasOwnProperty(ot))
                    ? e[q]
                    : null;
            }
            const Ye = x({ ɵprov: x }),
                q = x({ ɵinj: x }),
                Te = x({ ngInjectableDef: x }),
                ot = x({ ngInjectorDef: x });
            var We = (() => (
                ((We = We || {})[(We.Default = 0)] = 'Default'),
                (We[(We.Host = 1)] = 'Host'),
                (We[(We.Self = 2)] = 'Self'),
                (We[(We.SkipSelf = 4)] = 'SkipSelf'),
                (We[(We.Optional = 8)] = 'Optional'),
                We
            ))();
            let Rt;
            function xt(e) {
                const t = Rt;
                return (Rt = e), t;
            }
            function nr(e, t, n) {
                const r = Kt(e);
                return r && 'root' == r.providedIn
                    ? void 0 === r.value
                        ? (r.value = r.factory())
                        : r.value
                    : n & We.Optional
                    ? null
                    : void 0 !== t
                    ? t
                    : void ie(W(e), 'Injector');
            }
            function vt(e) {
                return { toString: e }.toString();
            }
            var kt = (() => (
                    ((kt = kt || {})[(kt.OnPush = 0)] = 'OnPush'),
                    (kt[(kt.Default = 1)] = 'Default'),
                    kt
                ))(),
                Ft = (() => {
                    return (
                        ((e = Ft || (Ft = {}))[(e.Emulated = 0)] = 'Emulated'),
                        (e[(e.None = 2)] = 'None'),
                        (e[(e.ShadowDom = 3)] = 'ShadowDom'),
                        Ft
                    );
                    var e;
                })();
            const yt = 'undefined' != typeof globalThis && globalThis,
                _t = 'undefined' != typeof window && window,
                Er =
                    'undefined' != typeof self &&
                    'undefined' != typeof WorkerGlobalScope &&
                    self instanceof WorkerGlobalScope &&
                    self,
                nn = yt || ('undefined' != typeof global && global) || _t || Er,
                Dr = {},
                te = [],
                ce = x({ ɵcmp: x }),
                oe = x({ ɵdir: x }),
                je = x({ ɵpipe: x }),
                Ie = x({ ɵmod: x }),
                ft = x({ ɵfac: x }),
                pe = x({ __NG_ELEMENT_ID__: x });
            let Ne = 0;
            function Be(e) {
                return vt(() => {
                    const n = {},
                        r = {
                            type: e.type,
                            providersResolver: null,
                            decls: e.decls,
                            vars: e.vars,
                            factory: null,
                            template: e.template || null,
                            consts: e.consts || null,
                            ngContentSelectors: e.ngContentSelectors,
                            hostBindings: e.hostBindings || null,
                            hostVars: e.hostVars || 0,
                            hostAttrs: e.hostAttrs || null,
                            contentQueries: e.contentQueries || null,
                            declaredInputs: n,
                            inputs: null,
                            outputs: null,
                            exportAs: e.exportAs || null,
                            onPush: e.changeDetection === kt.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            selectors: e.selectors || te,
                            viewQuery: e.viewQuery || null,
                            features: e.features || null,
                            data: e.data || {},
                            encapsulation: e.encapsulation || Ft.Emulated,
                            id: 'c',
                            styles: e.styles || te,
                            _: null,
                            setInput: null,
                            schemas: e.schemas || null,
                            tView: null,
                        },
                        i = e.directives,
                        u = e.features,
                        d = e.pipes;
                    return (
                        (r.id += Ne++),
                        (r.inputs = bt(e.inputs, n)),
                        (r.outputs = bt(e.outputs)),
                        u && u.forEach((g) => g(r)),
                        (r.directiveDefs = i
                            ? () => ('function' == typeof i ? i() : i).map(Ct)
                            : null),
                        (r.pipeDefs = d
                            ? () => ('function' == typeof d ? d() : d).map(ct)
                            : null),
                        r
                    );
                });
            }
            function Ct(e) {
                return (
                    Zt(e) ||
                    (function _n(e) {
                        return e[oe] || null;
                    })(e)
                );
            }
            function ct(e) {
                return (function an(e) {
                    return e[je] || null;
                })(e);
            }
            const en = {};
            function on(e) {
                return vt(() => {
                    const t = {
                        type: e.type,
                        bootstrap: e.bootstrap || te,
                        declarations: e.declarations || te,
                        imports: e.imports || te,
                        exports: e.exports || te,
                        transitiveCompileScopes: null,
                        schemas: e.schemas || null,
                        id: e.id || null,
                    };
                    return null != e.id && (en[e.id] = e.type), t;
                });
            }
            function Sn(e, t) {
                return vt(() => {
                    const n = vn(e, !0);
                    (n.declarations = t.declarations || te),
                        (n.imports = t.imports || te),
                        (n.exports = t.exports || te);
                });
            }
            function bt(e, t) {
                if (null == e) return Dr;
                const n = {};
                for (const r in e)
                    if (e.hasOwnProperty(r)) {
                        let i = e[r],
                            u = i;
                        Array.isArray(i) && ((u = i[1]), (i = i[0])),
                            (n[i] = r),
                            t && (t[i] = u);
                    }
                return n;
            }
            const Xn = Be;
            function Jt(e) {
                return {
                    type: e.type,
                    name: e.name,
                    factory: null,
                    pure: !1 !== e.pure,
                    onDestroy: e.type.prototype.ngOnDestroy || null,
                };
            }
            function Zt(e) {
                return e[ce] || null;
            }
            function vn(e, t) {
                const n = e[Ie] || null;
                if (!n && !0 === t)
                    throw new Error(
                        `Type ${W(e)} does not have '\u0275mod' property.`
                    );
                return n;
            }
            function Je(e) {
                return Array.isArray(e) && 'object' == typeof e[1];
            }
            function Nt(e) {
                return Array.isArray(e) && !0 === e[1];
            }
            function Mn(e) {
                return 0 != (8 & e.flags);
            }
            function hn(e) {
                return 2 == (2 & e.flags);
            }
            function kn(e) {
                return 1 == (1 & e.flags);
            }
            function Xt(e) {
                return null !== e.template;
            }
            function Bn(e) {
                return 0 != (512 & e[2]);
            }
            function ri(e, t) {
                return e.hasOwnProperty(ft) ? e[ft] : null;
            }
            class fi {
                constructor(t, n, r) {
                    (this.previousValue = t),
                        (this.currentValue = n),
                        (this.firstChange = r);
                }
                isFirstChange() {
                    return this.firstChange;
                }
            }
            function Jr() {
                return wr;
            }
            function wr(e) {
                return e.type.prototype.ngOnChanges && (e.setInput = Xr), ms;
            }
            function ms() {
                const e = rs(this),
                    t = null == e ? void 0 : e.current;
                if (t) {
                    const n = e.previous;
                    if (n === Dr) e.previous = t;
                    else for (let r in t) n[r] = t[r];
                    (e.current = null), this.ngOnChanges(t);
                }
            }
            function Xr(e, t, n, r) {
                const i =
                        rs(e) ||
                        (function Hr(e, t) {
                            return (e[ns] = t);
                        })(e, { previous: Dr, current: null }),
                    u = i.current || (i.current = {}),
                    d = i.previous,
                    g = this.declaredInputs[n],
                    v = d[g];
                (u[g] = new fi(v && v.currentValue, t, d === Dr)), (e[r] = t);
            }
            Jr.ngInherit = !0;
            const ns = '__ngSimpleChanges__';
            function rs(e) {
                return e[ns] || null;
            }
            let Ri;
            function Hi(e) {
                Ri = e;
            }
            function Lr() {
                return void 0 !== Ri
                    ? Ri
                    : 'undefined' != typeof document
                    ? document
                    : void 0;
            }
            function rn(e) {
                return !!e.listen;
            }
            const T = { createRenderer: (e, t) => Lr() };
            function b(e) {
                for (; Array.isArray(e); ) e = e[0];
                return e;
            }
            function Ve(e, t) {
                return b(t[e]);
            }
            function Ke(e, t) {
                return b(t[e.index]);
            }
            function Ut(e, t) {
                return e.data[t];
            }
            function Cn(e, t) {
                return e[t];
            }
            function tn(e, t) {
                const n = t[e];
                return Je(n) ? n : n[0];
            }
            function sn(e) {
                return 4 == (4 & e[2]);
            }
            function Kn(e) {
                return 128 == (128 & e[2]);
            }
            function Vn(e, t) {
                return null == t ? null : e[t];
            }
            function si(e) {
                e[18] = 0;
            }
            function Rr(e, t) {
                e[5] += t;
                let n = e,
                    r = e[3];
                for (
                    ;
                    null !== r &&
                    ((1 === t && 1 === n[5]) || (-1 === t && 0 === n[5]));

                )
                    (r[5] += t), (n = r), (r = r[3]);
            }
            const Lt = {
                lFrame: ks(null),
                bindingsEnabled: !0,
                isInCheckNoChangesMode: !1,
            };
            function E() {
                return Lt.bindingsEnabled;
            }
            function Ae() {
                return Lt.lFrame.lView;
            }
            function Tt() {
                return Lt.lFrame.tView;
            }
            function yr(e) {
                return (Lt.lFrame.contextLView = e), e[8];
            }
            function Rn() {
                let e = ei();
                for (; null !== e && 64 === e.type; ) e = e.parent;
                return e;
            }
            function ei() {
                return Lt.lFrame.currentTNode;
            }
            function Fn(e, t) {
                const n = Lt.lFrame;
                (n.currentTNode = e), (n.isParent = t);
            }
            function $i() {
                return Lt.lFrame.isParent;
            }
            function Gi() {
                Lt.lFrame.isParent = !1;
            }
            function ys() {
                return Lt.isInCheckNoChangesMode;
            }
            function ss(e) {
                Lt.isInCheckNoChangesMode = e;
            }
            function Sr() {
                const e = Lt.lFrame;
                let t = e.bindingRootIndex;
                return (
                    -1 === t &&
                        (t = e.bindingRootIndex = e.tView.bindingStartIndex),
                    t
                );
            }
            function Ci() {
                return Lt.lFrame.bindingIndex++;
            }
            function gi(e) {
                const t = Lt.lFrame,
                    n = t.bindingIndex;
                return (t.bindingIndex = t.bindingIndex + e), n;
            }
            function Gr(e, t) {
                const n = Lt.lFrame;
                (n.bindingIndex = n.bindingRootIndex = e), as(t);
            }
            function as(e) {
                Lt.lFrame.currentDirectiveIndex = e;
            }
            function ls() {
                return Lt.lFrame.currentQueryIndex;
            }
            function Ls(e) {
                Lt.lFrame.currentQueryIndex = e;
            }
            function io(e) {
                const t = e[1];
                return 2 === t.type ? t.declTNode : 1 === t.type ? e[6] : null;
            }
            function Fi(e, t, n) {
                if (n & We.SkipSelf) {
                    let i = t,
                        u = e;
                    for (
                        ;
                        !((i = i.parent),
                        null !== i ||
                            n & We.Host ||
                            ((i = io(u)),
                            null === i || ((u = u[15]), 10 & i.type)));

                    );
                    if (null === i) return !1;
                    (t = i), (e = u);
                }
                const r = (Lt.lFrame = so());
                return (r.currentTNode = t), (r.lView = e), !0;
            }
            function _s(e) {
                const t = so(),
                    n = e[1];
                (Lt.lFrame = t),
                    (t.currentTNode = n.firstChild),
                    (t.lView = e),
                    (t.tView = n),
                    (t.contextLView = e),
                    (t.bindingIndex = n.bindingStartIndex),
                    (t.inI18n = !1);
            }
            function so() {
                const e = Lt.lFrame,
                    t = null === e ? null : e.child;
                return null === t ? ks(e) : t;
            }
            function ks(e) {
                const t = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: e,
                    child: null,
                    inI18n: !1,
                };
                return null !== e && (e.child = t), t;
            }
            function _o() {
                const e = Lt.lFrame;
                return (
                    (Lt.lFrame = e.parent),
                    (e.currentTNode = null),
                    (e.lView = null),
                    e
                );
            }
            const Bs = _o;
            function vs() {
                const e = _o();
                (e.isParent = !0),
                    (e.tView = null),
                    (e.selectedIndex = -1),
                    (e.contextLView = null),
                    (e.elementDepthCount = 0),
                    (e.currentDirectiveIndex = -1),
                    (e.currentNamespace = null),
                    (e.bindingRootIndex = -1),
                    (e.bindingIndex = -1),
                    (e.currentQueryIndex = 0);
            }
            function Ir() {
                return Lt.lFrame.selectedIndex;
            }
            function bi(e) {
                Lt.lFrame.selectedIndex = e;
            }
            function Yn() {
                const e = Lt.lFrame;
                return Ut(e.tView, e.selectedIndex);
            }
            function Us(e, t) {
                for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) {
                    const u = e.data[n].type.prototype,
                        {
                            ngAfterContentInit: d,
                            ngAfterContentChecked: g,
                            ngAfterViewInit: v,
                            ngAfterViewChecked: O,
                            ngOnDestroy: R,
                        } = u;
                    d && (e.contentHooks || (e.contentHooks = [])).push(-n, d),
                        g &&
                            ((e.contentHooks || (e.contentHooks = [])).push(
                                n,
                                g
                            ),
                            (
                                e.contentCheckHooks ||
                                (e.contentCheckHooks = [])
                            ).push(n, g)),
                        v && (e.viewHooks || (e.viewHooks = [])).push(-n, v),
                        O &&
                            ((e.viewHooks || (e.viewHooks = [])).push(n, O),
                            (e.viewCheckHooks || (e.viewCheckHooks = [])).push(
                                n,
                                O
                            )),
                        null != R &&
                            (e.destroyHooks || (e.destroyHooks = [])).push(
                                n,
                                R
                            );
                }
            }
            function js(e, t, n) {
                lr(e, t, 3, n);
            }
            function Mr(e, t, n, r) {
                (3 & e[2]) === n && lr(e, t, n, r);
            }
            function Ds(e, t) {
                let n = e[2];
                (3 & n) === t && ((n &= 2047), (n += 1), (e[2] = n));
            }
            function lr(e, t, n, r) {
                const u = null != r ? r : -1,
                    d = t.length - 1;
                let g = 0;
                for (let v = void 0 !== r ? 65535 & e[18] : 0; v < d; v++)
                    if ('number' == typeof t[v + 1]) {
                        if (((g = t[v]), null != r && g >= r)) break;
                    } else
                        t[v] < 0 && (e[18] += 65536),
                            (g < u || -1 == u) &&
                                (Hs(e, n, t, v),
                                (e[18] = (4294901760 & e[18]) + v + 2)),
                            v++;
            }
            function Hs(e, t, n, r) {
                const i = n[r] < 0,
                    u = n[r + 1],
                    g = e[i ? -n[r] : n[r]];
                if (i) {
                    if (e[2] >> 11 < e[18] >> 16 && (3 & e[2]) === t) {
                        e[2] += 2048;
                        try {
                            u.call(g);
                        } finally {
                        }
                    }
                } else
                    try {
                        u.call(g);
                    } finally {
                    }
            }
            class Ti {
                constructor(t, n, r) {
                    (this.factory = t),
                        (this.resolving = !1),
                        (this.canSeeViewProviders = n),
                        (this.injectImpl = r);
                }
            }
            function ur(e, t, n) {
                const r = rn(e);
                let i = 0;
                for (; i < n.length; ) {
                    const u = n[i];
                    if ('number' == typeof u) {
                        if (0 !== u) break;
                        i++;
                        const d = n[i++],
                            g = n[i++],
                            v = n[i++];
                        r
                            ? e.setAttribute(t, g, v, d)
                            : t.setAttributeNS(d, g, v);
                    } else {
                        const d = u,
                            g = n[++i];
                        lo(d)
                            ? r && e.setProperty(t, d, g)
                            : r
                            ? e.setAttribute(t, d, g)
                            : t.setAttribute(d, g),
                            i++;
                    }
                }
                return i;
            }
            function ao(e) {
                return 3 === e || 4 === e || 6 === e;
            }
            function lo(e) {
                return 64 === e.charCodeAt(0);
            }
            function us(e, t) {
                if (null !== t && 0 !== t.length)
                    if (null === e || 0 === e.length) e = t.slice();
                    else {
                        let n = -1;
                        for (let r = 0; r < t.length; r++) {
                            const i = t[r];
                            'number' == typeof i
                                ? (n = i)
                                : 0 === n ||
                                  Li(
                                      e,
                                      n,
                                      i,
                                      null,
                                      -1 === n || 2 === n ? t[++r] : null
                                  );
                        }
                    }
                return e;
            }
            function Li(e, t, n, r, i) {
                let u = 0,
                    d = e.length;
                if (-1 === t) d = -1;
                else
                    for (; u < e.length; ) {
                        const g = e[u++];
                        if ('number' == typeof g) {
                            if (g === t) {
                                d = -1;
                                break;
                            }
                            if (g > t) {
                                d = u - 1;
                                break;
                            }
                        }
                    }
                for (; u < e.length; ) {
                    const g = e[u];
                    if ('number' == typeof g) break;
                    if (g === n) {
                        if (null === r)
                            return void (null !== i && (e[u + 1] = i));
                        if (r === e[u + 1]) return void (e[u + 2] = i);
                    }
                    u++, null !== r && u++, null !== i && u++;
                }
                -1 !== d && (e.splice(d, 0, t), (u = d + 1)),
                    e.splice(u++, 0, n),
                    null !== r && e.splice(u++, 0, r),
                    null !== i && e.splice(u++, 0, i);
            }
            function uo(e) {
                return -1 !== e;
            }
            function cs(e) {
                return 32767 & e;
            }
            function zi(e, t) {
                let n = (function co(e) {
                        return e >> 16;
                    })(e),
                    r = t;
                for (; n > 0; ) (r = r[15]), n--;
                return r;
            }
            let bs = !0;
            function Ts(e) {
                const t = bs;
                return (bs = e), t;
            }
            let Vo = 0;
            function Ki(e, t) {
                const n = y(e, t);
                if (-1 !== n) return n;
                const r = t[1];
                r.firstCreatePass &&
                    ((e.injectorIndex = t.length),
                    So(r.data, e),
                    So(t, null),
                    So(r.blueprint, null));
                const i = h(e, t),
                    u = e.injectorIndex;
                if (uo(i)) {
                    const d = cs(i),
                        g = zi(i, t),
                        v = g[1].data;
                    for (let O = 0; O < 8; O++) t[u + O] = g[d + O] | v[d + O];
                }
                return (t[u + 8] = i), u;
            }
            function So(e, t) {
                e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
            }
            function y(e, t) {
                return -1 === e.injectorIndex ||
                    (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
                    null === t[e.injectorIndex + 8]
                    ? -1
                    : e.injectorIndex;
            }
            function h(e, t) {
                if (e.parent && -1 !== e.parent.injectorIndex)
                    return e.parent.injectorIndex;
                let n = 0,
                    r = null,
                    i = t;
                for (; null !== i; ) {
                    const u = i[1],
                        d = u.type;
                    if (
                        ((r = 2 === d ? u.declTNode : 1 === d ? i[6] : null),
                        null === r)
                    )
                        return -1;
                    if ((n++, (i = i[15]), -1 !== r.injectorIndex))
                        return r.injectorIndex | (n << 16);
                }
                return -1;
            }
            function f(e, t, n) {
                !(function Uo(e, t, n) {
                    let r;
                    'string' == typeof n
                        ? (r = n.charCodeAt(0) || 0)
                        : n.hasOwnProperty(pe) && (r = n[pe]),
                        null == r && (r = n[pe] = Vo++);
                    const i = 255 & r;
                    t.data[e + (i >> 5)] |= 1 << i;
                })(e, t, n);
            }
            function M(e, t, n) {
                if (n & We.Optional) return e;
                ie(t, 'NodeInjector');
            }
            function L(e, t, n, r) {
                if (
                    (n & We.Optional && void 0 === r && (r = null),
                    0 == (n & (We.Self | We.Host)))
                ) {
                    const i = e[9],
                        u = xt(void 0);
                    try {
                        return i
                            ? i.get(t, r, n & We.Optional)
                            : nr(t, r, n & We.Optional);
                    } finally {
                        xt(u);
                    }
                }
                return M(r, t, n);
            }
            function J(e, t, n, r = We.Default, i) {
                if (null !== e) {
                    const u = (function Un(e) {
                        if ('string' == typeof e) return e.charCodeAt(0) || 0;
                        const t = e.hasOwnProperty(pe) ? e[pe] : void 0;
                        return 'number' == typeof t
                            ? t >= 0
                                ? 255 & t
                                : Ue
                            : t;
                    })(n);
                    if ('function' == typeof u) {
                        if (!Fi(t, e, r))
                            return r & We.Host ? M(i, n, r) : L(t, n, r, i);
                        try {
                            const d = u(r);
                            if (null != d || r & We.Optional) return d;
                            ie(n);
                        } finally {
                            Bs();
                        }
                    } else if ('number' == typeof u) {
                        let d = null,
                            g = y(e, t),
                            v = -1,
                            O = r & We.Host ? t[16][6] : null;
                        for (
                            (-1 === g || r & We.SkipSelf) &&
                            ((v = -1 === g ? h(e, t) : t[g + 8]),
                            -1 !== v && ki(r, !1)
                                ? ((d = t[1]), (g = cs(v)), (t = zi(v, t)))
                                : (g = -1));
                            -1 !== g;

                        ) {
                            const R = t[1];
                            if (jn(u, g, R.data)) {
                                const K = Dt(g, t, n, d, r, O);
                                if (K !== ue) return K;
                            }
                            (v = t[g + 8]),
                                -1 !== v &&
                                ki(r, t[1].data[g + 8] === O) &&
                                jn(u, g, t)
                                    ? ((d = R), (g = cs(v)), (t = zi(v, t)))
                                    : (g = -1);
                        }
                    }
                }
                return L(t, n, r, i);
            }
            const ue = {};
            function Ue() {
                return new kr(Rn(), Ae());
            }
            function Dt(e, t, n, r, i, u) {
                const d = t[1],
                    g = d.data[e + 8],
                    R = Yt(
                        g,
                        d,
                        n,
                        null == r ? hn(g) && bs : r != d && 0 != (3 & g.type),
                        i & We.Host && u === g
                    );
                return null !== R ? It(t, d, R, g) : ue;
            }
            function Yt(e, t, n, r, i) {
                const u = e.providerIndexes,
                    d = t.data,
                    g = 1048575 & u,
                    v = e.directiveStart,
                    R = u >> 20,
                    he = i ? g + R : e.directiveEnd;
                for (let we = r ? g : g + R; we < he; we++) {
                    const ze = d[we];
                    if ((we < v && n === ze) || (we >= v && ze.type === n))
                        return we;
                }
                if (i) {
                    const we = d[v];
                    if (we && Xt(we) && we.type === n) return v;
                }
                return null;
            }
            function It(e, t, n, r) {
                let i = e[n];
                const u = t.data;
                if (
                    (function Do(e) {
                        return e instanceof Ti;
                    })(i)
                ) {
                    const d = i;
                    d.resolving &&
                        (function Ce(e, t) {
                            const n = t
                                ? `. Dependency path: ${t.join(' > ')} > ${e}`
                                : '';
                            throw new _e(
                                -200,
                                `Circular dependency in DI detected for ${e}${n}`
                            );
                        })(X(u[n]));
                    const g = Ts(d.canSeeViewProviders);
                    d.resolving = !0;
                    const v = d.injectImpl ? xt(d.injectImpl) : null;
                    Fi(e, r, We.Default);
                    try {
                        (i = e[n] = d.factory(void 0, u, e, r)),
                            t.firstCreatePass &&
                                n >= r.directiveStart &&
                                (function Eo(e, t, n) {
                                    const {
                                        ngOnChanges: r,
                                        ngOnInit: i,
                                        ngDoCheck: u,
                                    } = t.type.prototype;
                                    if (r) {
                                        const d = wr(t);
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(e, d),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, d);
                                    }
                                    i &&
                                        (
                                            n.preOrderHooks ||
                                            (n.preOrderHooks = [])
                                        ).push(0 - e, i),
                                        u &&
                                            ((
                                                n.preOrderHooks ||
                                                (n.preOrderHooks = [])
                                            ).push(e, u),
                                            (
                                                n.preOrderCheckHooks ||
                                                (n.preOrderCheckHooks = [])
                                            ).push(e, u));
                                })(n, u[n], t);
                    } finally {
                        null !== v && xt(v), Ts(g), (d.resolving = !1), Bs();
                    }
                }
                return i;
            }
            function jn(e, t, n) {
                return !!(n[t + (e >> 5)] & (1 << e));
            }
            function ki(e, t) {
                return !(e & We.Self || (e & We.Host && t));
            }
            class kr {
                constructor(t, n) {
                    (this._tNode = t), (this._lView = n);
                }
                get(t, n, r) {
                    return J(this._tNode, this._lView, t, r, n);
                }
            }
            function Zr(e) {
                return vt(() => {
                    const t = e.prototype.constructor,
                        n = t[ft] || Or(t),
                        r = Object.prototype;
                    let i = Object.getPrototypeOf(e.prototype).constructor;
                    for (; i && i !== r; ) {
                        const u = i[ft] || Or(i);
                        if (u && u !== n) return u;
                        i = Object.getPrototypeOf(i);
                    }
                    return (u) => new u();
                });
            }
            function Or(e) {
                return De(e)
                    ? () => {
                          const t = Or(Q(e));
                          return t && t();
                      }
                    : ri(e);
            }
            function Yi(e) {
                return (function C(e, t) {
                    if ('class' === t) return e.classes;
                    if ('style' === t) return e.styles;
                    const n = e.attrs;
                    if (n) {
                        const r = n.length;
                        let i = 0;
                        for (; i < r; ) {
                            const u = n[i];
                            if (ao(u)) break;
                            if (0 === u) i += 2;
                            else if ('number' == typeof u)
                                for (i++; i < r && 'string' == typeof n[i]; )
                                    i++;
                            else {
                                if (u === t) return n[i + 1];
                                i += 2;
                            }
                        }
                    }
                    return null;
                })(Rn(), e);
            }
            const Qr = '__parameters__';
            function Ws(e, t, n) {
                return vt(() => {
                    const r = (function jo(e) {
                        return function (...n) {
                            if (e) {
                                const r = e(...n);
                                for (const i in r) this[i] = r[i];
                            }
                        };
                    })(t);
                    function i(...u) {
                        if (this instanceof i) return r.apply(this, u), this;
                        const d = new i(...u);
                        return (g.annotation = d), g;
                        function g(v, O, R) {
                            const K = v.hasOwnProperty(Qr)
                                ? v[Qr]
                                : Object.defineProperty(v, Qr, { value: [] })[
                                      Qr
                                  ];
                            for (; K.length <= R; ) K.push(null);
                            return (K[R] = K[R] || []).push(d), v;
                        }
                    }
                    return (
                        n && (i.prototype = Object.create(n.prototype)),
                        (i.prototype.ngMetadataName = e),
                        (i.annotationCls = i),
                        i
                    );
                });
            }
            class cr {
                constructor(t, n) {
                    (this._desc = t),
                        (this.ngMetadataName = 'InjectionToken'),
                        (this.ɵprov = void 0),
                        'number' == typeof n
                            ? (this.__NG_ELEMENT_ID__ = n)
                            : void 0 !== n &&
                              (this.ɵprov = mt({
                                  token: this,
                                  providedIn: n.providedIn || 'root',
                                  factory: n.factory,
                              }));
                }
                toString() {
                    return `InjectionToken ${this._desc}`;
                }
            }
            const Qo = new cr('AnalyzeForEntryComponents');
            function ai(e, t) {
                void 0 === t && (t = e);
                for (let n = 0; n < e.length; n++) {
                    let r = e[n];
                    Array.isArray(r)
                        ? (t === e && (t = e.slice(0, n)), ai(r, t))
                        : t !== e && t.push(r);
                }
                return t;
            }
            function Ai(e, t) {
                e.forEach((n) => (Array.isArray(n) ? Ai(n, t) : t(n)));
            }
            function Oo(e, t, n) {
                t >= e.length ? e.push(n) : e.splice(t, 0, n);
            }
            function zs(e, t) {
                return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
            }
            function Qi(e, t) {
                const n = [];
                for (let r = 0; r < e; r++) n.push(t);
                return n;
            }
            function Br(e, t, n) {
                let r = Ys(e, t);
                return (
                    r >= 0
                        ? (e[1 | r] = n)
                        : ((r = ~r),
                          (function cl(e, t, n, r) {
                              let i = e.length;
                              if (i == t) e.push(n, r);
                              else if (1 === i) e.push(r, e[0]), (e[0] = n);
                              else {
                                  for (i--, e.push(e[i - 1], e[i]); i > t; )
                                      (e[i] = e[i - 2]), i--;
                                  (e[t] = n), (e[t + 1] = r);
                              }
                          })(e, r, t, n)),
                    r
                );
            }
            function Po(e, t) {
                const n = Ys(e, t);
                if (n >= 0) return e[1 | n];
            }
            function Ys(e, t) {
                return (function As(e, t, n) {
                    let r = 0,
                        i = e.length >> n;
                    for (; i !== r; ) {
                        const u = r + ((i - r) >> 1),
                            d = e[u << n];
                        if (t === d) return u << n;
                        d > t ? (i = u) : (r = u + 1);
                    }
                    return ~(i << n);
                })(e, t, 1);
            }
            const c = {},
                p = '__NG_DI_FLAG__',
                A = 'ngTempTokenPath',
                $ = /\n/gm,
                ke = '__source',
                Ge = x({ provide: String, useValue: x });
            let at;
            function et(e) {
                const t = at;
                return (at = e), t;
            }
            function dt(e, t = We.Default) {
                if (void 0 === at) throw new _e(203, '');
                return null === at
                    ? nr(e, void 0, t)
                    : at.get(e, t & We.Optional ? null : void 0, t);
            }
            function gt(e, t = We.Default) {
                return (
                    (function jt() {
                        return Rt;
                    })() || dt
                )(Q(e), t);
            }
            function er(e) {
                const t = [];
                for (let n = 0; n < e.length; n++) {
                    const r = Q(e[n]);
                    if (Array.isArray(r)) {
                        if (0 === r.length) throw new _e(900, '');
                        let i,
                            u = We.Default;
                        for (let d = 0; d < r.length; d++) {
                            const g = r[d],
                                v = ir(g);
                            'number' == typeof v
                                ? -1 === v
                                    ? (i = g.token)
                                    : (u |= v)
                                : (i = g);
                        }
                        t.push(gt(i, u));
                    } else t.push(gt(r));
                }
                return t;
            }
            function rr(e, t) {
                return (e[p] = t), (e.prototype[p] = t), e;
            }
            function ir(e) {
                return e[p];
            }
            const Vr = rr(
                    Ws('Inject', (e) => ({ token: e })),
                    -1
                ),
                li = rr(Ws('Optional'), 8),
                qi = rr(Ws('Self'), 2),
                mi = rr(Ws('SkipSelf'), 4);
            let fs, ml;
            function Bi(e) {
                var t;
                return (
                    (null ===
                        (t = (function hs() {
                            if (void 0 === fs && ((fs = null), nn.trustedTypes))
                                try {
                                    fs = nn.trustedTypes.createPolicy(
                                        'angular',
                                        {
                                            createHTML: (e) => e,
                                            createScript: (e) => e,
                                            createScriptURL: (e) => e,
                                        }
                                    );
                                } catch (e) {}
                            return fs;
                        })()) || void 0 === t
                        ? void 0
                        : t.createHTML(e)) || e
                );
            }
            function id(e) {
                var t;
                return (
                    (null ===
                        (t = (function Jl() {
                            if (void 0 === ml && ((ml = null), nn.trustedTypes))
                                try {
                                    ml = nn.trustedTypes.createPolicy(
                                        'angular#unsafe-bypass',
                                        {
                                            createHTML: (e) => e,
                                            createScript: (e) => e,
                                            createScriptURL: (e) => e,
                                        }
                                    );
                                } catch (e) {}
                            return ml;
                        })()) || void 0 === t
                        ? void 0
                        : t.createHTML(e)) || e
                );
            }
            class ad {
                constructor(t) {
                    this.changingThisBreaksApplicationSecurity = t;
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
                }
            }
            function xo(e) {
                return e instanceof ad
                    ? e.changingThisBreaksApplicationSecurity
                    : e;
            }
            function ka(e, t) {
                const n = (function Tm(e) {
                    return (e instanceof ad && e.getTypeName()) || null;
                })(e);
                if (null != n && n !== t) {
                    if ('ResourceURL' === n && 'URL' === t) return !0;
                    throw new Error(
                        `Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`
                    );
                }
                return n === t;
            }
            class Am {
                constructor(t) {
                    this.inertDocumentHelper = t;
                }
                getInertBodyElement(t) {
                    t = '<body><remove></remove>' + t;
                    try {
                        const n = new window.DOMParser().parseFromString(
                            Bi(t),
                            'text/html'
                        ).body;
                        return null === n
                            ? this.inertDocumentHelper.getInertBodyElement(t)
                            : (n.removeChild(n.firstChild), n);
                    } catch (n) {
                        return null;
                    }
                }
            }
            class wm {
                constructor(t) {
                    if (
                        ((this.defaultDoc = t),
                        (this.inertDocument =
                            this.defaultDoc.implementation.createHTMLDocument(
                                'sanitization-inert'
                            )),
                        null == this.inertDocument.body)
                    ) {
                        const n = this.inertDocument.createElement('html');
                        this.inertDocument.appendChild(n);
                        const r = this.inertDocument.createElement('body');
                        n.appendChild(r);
                    }
                }
                getInertBodyElement(t) {
                    const n = this.inertDocument.createElement('template');
                    if ('content' in n) return (n.innerHTML = Bi(t)), n;
                    const r = this.inertDocument.createElement('body');
                    return (
                        (r.innerHTML = Bi(t)),
                        this.defaultDoc.documentMode &&
                            this.stripCustomNsAttrs(r),
                        r
                    );
                }
                stripCustomNsAttrs(t) {
                    const n = t.attributes;
                    for (let i = n.length - 1; 0 < i; i--) {
                        const d = n.item(i).name;
                        ('xmlns:ns1' === d || 0 === d.indexOf('ns1:')) &&
                            t.removeAttribute(d);
                    }
                    let r = t.firstChild;
                    for (; r; )
                        r.nodeType === Node.ELEMENT_NODE &&
                            this.stripCustomNsAttrs(r),
                            (r = r.nextSibling);
                }
            }
            const Im =
                    /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
                Mm =
                    /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
            function yl(e) {
                return (e = String(e)).match(Im) || e.match(Mm)
                    ? e
                    : 'unsafe:' + e;
            }
            function Qs(e) {
                const t = {};
                for (const n of e.split(',')) t[n] = !0;
                return t;
            }
            function Ba(...e) {
                const t = {};
                for (const n of e)
                    for (const r in n) n.hasOwnProperty(r) && (t[r] = !0);
                return t;
            }
            const cd = Qs('area,br,col,hr,img,wbr'),
                dd = Qs('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
                fd = Qs('rp,rt'),
                Xl = Ba(
                    cd,
                    Ba(
                        dd,
                        Qs(
                            'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'
                        )
                    ),
                    Ba(
                        fd,
                        Qs(
                            'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'
                        )
                    ),
                    Ba(fd, dd)
                ),
                eu = Qs(
                    'background,cite,href,itemtype,longdesc,poster,src,xlink:href'
                ),
                tu = Qs('srcset'),
                hd = Ba(
                    eu,
                    tu,
                    Qs(
                        'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width'
                    ),
                    Qs(
                        'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'
                    )
                ),
                Om = Qs('script,style,template');
            class Pm {
                constructor() {
                    (this.sanitizedSomething = !1), (this.buf = []);
                }
                sanitizeChildren(t) {
                    let n = t.firstChild,
                        r = !0;
                    for (; n; )
                        if (
                            (n.nodeType === Node.ELEMENT_NODE
                                ? (r = this.startElement(n))
                                : n.nodeType === Node.TEXT_NODE
                                ? this.chars(n.nodeValue)
                                : (this.sanitizedSomething = !0),
                            r && n.firstChild)
                        )
                            n = n.firstChild;
                        else
                            for (; n; ) {
                                n.nodeType === Node.ELEMENT_NODE &&
                                    this.endElement(n);
                                let i = this.checkClobberedElement(
                                    n,
                                    n.nextSibling
                                );
                                if (i) {
                                    n = i;
                                    break;
                                }
                                n = this.checkClobberedElement(n, n.parentNode);
                            }
                    return this.buf.join('');
                }
                startElement(t) {
                    const n = t.nodeName.toLowerCase();
                    if (!Xl.hasOwnProperty(n))
                        return (
                            (this.sanitizedSomething = !0),
                            !Om.hasOwnProperty(n)
                        );
                    this.buf.push('<'), this.buf.push(n);
                    const r = t.attributes;
                    for (let i = 0; i < r.length; i++) {
                        const u = r.item(i),
                            d = u.name,
                            g = d.toLowerCase();
                        if (!hd.hasOwnProperty(g)) {
                            this.sanitizedSomething = !0;
                            continue;
                        }
                        let v = u.value;
                        eu[g] && (v = yl(v)),
                            tu[g] &&
                                ((e = v),
                                (v = (e = String(e))
                                    .split(',')
                                    .map((t) => yl(t.trim()))
                                    .join(', '))),
                            this.buf.push(' ', d, '="', pd(v), '"');
                    }
                    var e;
                    return this.buf.push('>'), !0;
                }
                endElement(t) {
                    const n = t.nodeName.toLowerCase();
                    Xl.hasOwnProperty(n) &&
                        !cd.hasOwnProperty(n) &&
                        (this.buf.push('</'),
                        this.buf.push(n),
                        this.buf.push('>'));
                }
                chars(t) {
                    this.buf.push(pd(t));
                }
                checkClobberedElement(t, n) {
                    if (
                        n &&
                        (t.compareDocumentPosition(n) &
                            Node.DOCUMENT_POSITION_CONTAINED_BY) ===
                            Node.DOCUMENT_POSITION_CONTAINED_BY
                    )
                        throw new Error(
                            `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`
                        );
                    return n;
                }
            }
            const Rm = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                xm = /([^\#-~ |!])/g;
            function pd(e) {
                return e
                    .replace(/&/g, '&amp;')
                    .replace(Rm, function (t) {
                        return (
                            '&#' +
                            (1024 * (t.charCodeAt(0) - 55296) +
                                (t.charCodeAt(1) - 56320) +
                                65536) +
                            ';'
                        );
                    })
                    .replace(xm, function (t) {
                        return '&#' + t.charCodeAt(0) + ';';
                    })
                    .replace(/</g, '&lt;')
                    .replace(/>/g, '&gt;');
            }
            let _l;
            function nu(e) {
                return 'content' in e &&
                    (function Nm(e) {
                        return (
                            e.nodeType === Node.ELEMENT_NODE &&
                            'TEMPLATE' === e.nodeName
                        );
                    })(e)
                    ? e.content
                    : null;
            }
            var Kr = (() => (
                ((Kr = Kr || {})[(Kr.NONE = 0)] = 'NONE'),
                (Kr[(Kr.HTML = 1)] = 'HTML'),
                (Kr[(Kr.STYLE = 2)] = 'STYLE'),
                (Kr[(Kr.SCRIPT = 3)] = 'SCRIPT'),
                (Kr[(Kr.URL = 4)] = 'URL'),
                (Kr[(Kr.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
                Kr
            ))();
            function gd(e) {
                const t = Va();
                return t
                    ? id(t.sanitize(Kr.HTML, e) || '')
                    : ka(e, 'HTML')
                    ? id(xo(e))
                    : (function Fm(e, t) {
                          let n = null;
                          try {
                              _l =
                                  _l ||
                                  (function ld(e) {
                                      const t = new wm(e);
                                      return (function Sm() {
                                          try {
                                              return !!new window.DOMParser().parseFromString(
                                                  Bi(''),
                                                  'text/html'
                                              );
                                          } catch (e) {
                                              return !1;
                                          }
                                      })()
                                          ? new Am(t)
                                          : t;
                                  })(e);
                              let r = t ? String(t) : '';
                              n = _l.getInertBodyElement(r);
                              let i = 5,
                                  u = r;
                              do {
                                  if (0 === i)
                                      throw new Error(
                                          'Failed to sanitize html because the input is unstable'
                                      );
                                  i--,
                                      (r = u),
                                      (u = n.innerHTML),
                                      (n = _l.getInertBodyElement(r));
                              } while (r !== u);
                              return Bi(new Pm().sanitizeChildren(nu(n) || n));
                          } finally {
                              if (n) {
                                  const r = nu(n) || n;
                                  for (; r.firstChild; )
                                      r.removeChild(r.firstChild);
                              }
                          }
                      })(Lr(), Z(e));
            }
            function ru(e) {
                const t = Va();
                return t
                    ? t.sanitize(Kr.URL, e) || ''
                    : ka(e, 'URL')
                    ? xo(e)
                    : yl(Z(e));
            }
            function Va() {
                const e = Ae();
                return e && e[12];
            }
            const _d = '__ngContext__';
            function _i(e, t) {
                e[_d] = t;
            }
            function su(e) {
                const t = (function Ua(e) {
                    return e[_d] || null;
                })(e);
                return t ? (Array.isArray(t) ? t : t.lView) : null;
            }
            function au(e) {
                return e.ngOriginalError;
            }
            function qm(e, ...t) {
                e.error(...t);
            }
            class ja {
                constructor() {
                    this._console = console;
                }
                handleError(t) {
                    const n = this._findOriginalError(t),
                        r = (function Qm(e) {
                            return (e && e.ngErrorLogger) || qm;
                        })(t);
                    r(this._console, 'ERROR', t),
                        n && r(this._console, 'ORIGINAL ERROR', n);
                }
                _findOriginalError(t) {
                    let n = t && au(t);
                    for (; n && au(n); ) n = au(n);
                    return n || null;
                }
            }
            const bd = (() =>
                (
                    ('undefined' != typeof requestAnimationFrame &&
                        requestAnimationFrame) ||
                    setTimeout
                ).bind(nn))();
            function qs(e) {
                return e instanceof Function ? e() : e;
            }
            var Js = (() => (
                ((Js = Js || {})[(Js.Important = 1)] = 'Important'),
                (Js[(Js.DashCase = 2)] = 'DashCase'),
                Js
            ))();
            function uu(e, t) {
                return undefined(e, t);
            }
            function Ha(e) {
                const t = e[3];
                return Nt(t) ? t[3] : t;
            }
            function cu(e) {
                return Id(e[13]);
            }
            function du(e) {
                return Id(e[4]);
            }
            function Id(e) {
                for (; null !== e && !Nt(e); ) e = e[4];
                return e;
            }
            function ia(e, t, n, r, i) {
                if (null != r) {
                    let u,
                        d = !1;
                    Nt(r) ? (u = r) : Je(r) && ((d = !0), (r = r[0]));
                    const g = b(r);
                    0 === e && null !== n
                        ? null == i
                            ? Fd(t, n, g)
                            : Go(t, n, g, i || null, !0)
                        : 1 === e && null !== n
                        ? Go(t, n, g, i || null, !0)
                        : 2 === e
                        ? (function jd(e, t, n) {
                              const r = vl(e, t);
                              r &&
                                  (function Ey(e, t, n, r) {
                                      rn(e)
                                          ? e.removeChild(t, n, r)
                                          : t.removeChild(n);
                                  })(e, r, t, n);
                          })(t, g, d)
                        : 3 === e && t.destroyNode(g),
                        null != u &&
                            (function by(e, t, n, r, i) {
                                const u = n[7];
                                u !== b(n) && ia(t, e, r, u, i);
                                for (let g = 10; g < n.length; g++) {
                                    const v = n[g];
                                    $a(v[1], v, e, t, r, u);
                                }
                            })(t, e, u, n, i);
                }
            }
            function hu(e, t, n) {
                if (rn(e)) return e.createElement(t, n);
                {
                    const r =
                        null !== n
                            ? (function ii(e) {
                                  const t = e.toLowerCase();
                                  return 'svg' === t
                                      ? 'http://www.w3.org/2000/svg'
                                      : 'math' === t
                                      ? 'http://www.w3.org/1998/MathML/'
                                      : null;
                              })(n)
                            : null;
                    return null === r
                        ? e.createElement(t)
                        : e.createElementNS(r, t);
                }
            }
            function Od(e, t) {
                const n = e[9],
                    r = n.indexOf(t),
                    i = t[3];
                1024 & t[2] && ((t[2] &= -1025), Rr(i, -1)), n.splice(r, 1);
            }
            function pu(e, t) {
                if (e.length <= 10) return;
                const n = 10 + t,
                    r = e[n];
                if (r) {
                    const i = r[17];
                    null !== i && i !== e && Od(i, r),
                        t > 0 && (e[n - 1][4] = r[4]);
                    const u = zs(e, 10 + t);
                    !(function fy(e, t) {
                        $a(e, t, t[11], 2, null, null),
                            (t[0] = null),
                            (t[6] = null);
                    })(r[1], r);
                    const d = u[19];
                    null !== d && d.detachView(u[1]),
                        (r[3] = null),
                        (r[4] = null),
                        (r[2] &= -129);
                }
                return r;
            }
            function Pd(e, t) {
                if (!(256 & t[2])) {
                    const n = t[11];
                    rn(n) && n.destroyNode && $a(e, t, n, 3, null, null),
                        (function gy(e) {
                            let t = e[13];
                            if (!t) return gu(e[1], e);
                            for (; t; ) {
                                let n = null;
                                if (Je(t)) n = t[13];
                                else {
                                    const r = t[10];
                                    r && (n = r);
                                }
                                if (!n) {
                                    for (; t && !t[4] && t !== e; )
                                        Je(t) && gu(t[1], t), (t = t[3]);
                                    null === t && (t = e),
                                        Je(t) && gu(t[1], t),
                                        (n = t && t[4]);
                                }
                                t = n;
                            }
                        })(t);
                }
            }
            function gu(e, t) {
                if (!(256 & t[2])) {
                    (t[2] &= -129),
                        (t[2] |= 256),
                        (function vy(e, t) {
                            let n;
                            if (null != e && null != (n = e.destroyHooks))
                                for (let r = 0; r < n.length; r += 2) {
                                    const i = t[n[r]];
                                    if (!(i instanceof Ti)) {
                                        const u = n[r + 1];
                                        if (Array.isArray(u))
                                            for (
                                                let d = 0;
                                                d < u.length;
                                                d += 2
                                            ) {
                                                const g = i[u[d]],
                                                    v = u[d + 1];
                                                try {
                                                    v.call(g);
                                                } finally {
                                                }
                                            }
                                        else
                                            try {
                                                u.call(i);
                                            } finally {
                                            }
                                    }
                                }
                        })(e, t),
                        (function _y(e, t) {
                            const n = e.cleanup,
                                r = t[7];
                            let i = -1;
                            if (null !== n)
                                for (let u = 0; u < n.length - 1; u += 2)
                                    if ('string' == typeof n[u]) {
                                        const d = n[u + 1],
                                            g =
                                                'function' == typeof d
                                                    ? d(t)
                                                    : b(t[d]),
                                            v = r[(i = n[u + 2])],
                                            O = n[u + 3];
                                        'boolean' == typeof O
                                            ? g.removeEventListener(n[u], v, O)
                                            : O >= 0
                                            ? r[(i = O)]()
                                            : r[(i = -O)].unsubscribe(),
                                            (u += 2);
                                    } else {
                                        const d = r[(i = n[u + 1])];
                                        n[u].call(d);
                                    }
                            if (null !== r) {
                                for (let u = i + 1; u < r.length; u++) r[u]();
                                t[7] = null;
                            }
                        })(e, t),
                        1 === t[1].type && rn(t[11]) && t[11].destroy();
                    const n = t[17];
                    if (null !== n && Nt(t[3])) {
                        n !== t[3] && Od(n, t);
                        const r = t[19];
                        null !== r && r.detachView(e);
                    }
                }
            }
            function Rd(e, t, n) {
                return (function xd(e, t, n) {
                    let r = t;
                    for (; null !== r && 40 & r.type; ) r = (t = r).parent;
                    if (null === r) return n[0];
                    if (2 & r.flags) {
                        const i = e.data[r.directiveStart].encapsulation;
                        if (i === Ft.None || i === Ft.Emulated) return null;
                    }
                    return Ke(r, n);
                })(e, t.parent, n);
            }
            function Go(e, t, n, r, i) {
                rn(e) ? e.insertBefore(t, n, r, i) : t.insertBefore(n, r, i);
            }
            function Fd(e, t, n) {
                rn(e) ? e.appendChild(t, n) : t.appendChild(n);
            }
            function Nd(e, t, n, r, i) {
                null !== r ? Go(e, t, n, r, i) : Fd(e, t, n);
            }
            function vl(e, t) {
                return rn(e) ? e.parentNode(t) : t.parentNode;
            }
            function Ld(e, t, n) {
                return Bd(e, t, n);
            }
            let Bd = function kd(e, t, n) {
                return 40 & e.type ? Ke(e, n) : null;
            };
            function El(e, t, n, r) {
                const i = Rd(e, r, t),
                    u = t[11],
                    g = Ld(r.parent || t[6], r, t);
                if (null != i)
                    if (Array.isArray(n))
                        for (let v = 0; v < n.length; v++)
                            Nd(u, i, n[v], g, !1);
                    else Nd(u, i, n, g, !1);
            }
            function Dl(e, t) {
                if (null !== t) {
                    const n = t.type;
                    if (3 & n) return Ke(t, e);
                    if (4 & n) return yu(-1, e[t.index]);
                    if (8 & n) {
                        const r = t.child;
                        if (null !== r) return Dl(e, r);
                        {
                            const i = e[t.index];
                            return Nt(i) ? yu(-1, i) : b(i);
                        }
                    }
                    if (32 & n) return uu(t, e)() || b(e[t.index]);
                    {
                        const r = Ud(e, t);
                        return null !== r
                            ? Array.isArray(r)
                                ? r[0]
                                : Dl(Ha(e[16]), r)
                            : Dl(e, t.next);
                    }
                }
                return null;
            }
            function Ud(e, t) {
                return null !== t ? e[16][6].projection[t.projection] : null;
            }
            function yu(e, t) {
                const n = 10 + e + 1;
                if (n < t.length) {
                    const r = t[n],
                        i = r[1].firstChild;
                    if (null !== i) return Dl(r, i);
                }
                return t[7];
            }
            function _u(e, t, n, r, i, u, d) {
                for (; null != n; ) {
                    const g = r[n.index],
                        v = n.type;
                    if (
                        (d && 0 === t && (g && _i(b(g), r), (n.flags |= 4)),
                        64 != (64 & n.flags))
                    )
                        if (8 & v)
                            _u(e, t, n.child, r, i, u, !1), ia(t, e, i, g, u);
                        else if (32 & v) {
                            const O = uu(n, r);
                            let R;
                            for (; (R = O()); ) ia(t, e, i, R, u);
                            ia(t, e, i, g, u);
                        } else
                            16 & v ? Hd(e, t, r, n, i, u) : ia(t, e, i, g, u);
                    n = d ? n.projectionNext : n.next;
                }
            }
            function $a(e, t, n, r, i, u) {
                _u(n, r, e.firstChild, t, i, u, !1);
            }
            function Hd(e, t, n, r, i, u) {
                const d = n[16],
                    v = d[6].projection[r.projection];
                if (Array.isArray(v))
                    for (let O = 0; O < v.length; O++) ia(t, e, i, v[O], u);
                else _u(e, t, v, d[3], i, u, !0);
            }
            function $d(e, t, n) {
                rn(e) ? e.setAttribute(t, 'style', n) : (t.style.cssText = n);
            }
            function vu(e, t, n) {
                rn(e)
                    ? '' === n
                        ? e.removeAttribute(t, 'class')
                        : e.setAttribute(t, 'class', n)
                    : (t.className = n);
            }
            function Gd(e, t, n) {
                let r = e.length;
                for (;;) {
                    const i = e.indexOf(t, n);
                    if (-1 === i) return i;
                    if (0 === i || e.charCodeAt(i - 1) <= 32) {
                        const u = t.length;
                        if (i + u === r || e.charCodeAt(i + u) <= 32) return i;
                    }
                    n = i + 1;
                }
            }
            const Wd = 'ng-template';
            function Ay(e, t, n) {
                let r = 0;
                for (; r < e.length; ) {
                    let i = e[r++];
                    if (n && 'class' === i) {
                        if (((i = e[r]), -1 !== Gd(i.toLowerCase(), t, 0)))
                            return !0;
                    } else if (1 === i) {
                        for (
                            ;
                            r < e.length && 'string' == typeof (i = e[r++]);

                        )
                            if (i.toLowerCase() === t) return !0;
                        return !1;
                    }
                }
                return !1;
            }
            function zd(e) {
                return 4 === e.type && e.value !== Wd;
            }
            function wy(e, t, n) {
                return t === (4 !== e.type || n ? e.value : Wd);
            }
            function Sy(e, t, n) {
                let r = 4;
                const i = e.attrs || [],
                    u = (function Oy(e) {
                        for (let t = 0; t < e.length; t++)
                            if (ao(e[t])) return t;
                        return e.length;
                    })(i);
                let d = !1;
                for (let g = 0; g < t.length; g++) {
                    const v = t[g];
                    if ('number' != typeof v) {
                        if (!d)
                            if (4 & r) {
                                if (
                                    ((r = 2 | (1 & r)),
                                    ('' !== v && !wy(e, v, n)) ||
                                        ('' === v && 1 === t.length))
                                ) {
                                    if (Is(r)) return !1;
                                    d = !0;
                                }
                            } else {
                                const O = 8 & r ? v : t[++g];
                                if (8 & r && null !== e.attrs) {
                                    if (!Ay(e.attrs, O, n)) {
                                        if (Is(r)) return !1;
                                        d = !0;
                                    }
                                    continue;
                                }
                                const K = Iy(8 & r ? 'class' : v, i, zd(e), n);
                                if (-1 === K) {
                                    if (Is(r)) return !1;
                                    d = !0;
                                    continue;
                                }
                                if ('' !== O) {
                                    let he;
                                    he = K > u ? '' : i[K + 1].toLowerCase();
                                    const we = 8 & r ? he : null;
                                    if (
                                        (we && -1 !== Gd(we, O, 0)) ||
                                        (2 & r && O !== he)
                                    ) {
                                        if (Is(r)) return !1;
                                        d = !0;
                                    }
                                }
                            }
                    } else {
                        if (!d && !Is(r) && !Is(v)) return !1;
                        if (d && Is(v)) continue;
                        (d = !1), (r = v | (1 & r));
                    }
                }
                return Is(r) || d;
            }
            function Is(e) {
                return 0 == (1 & e);
            }
            function Iy(e, t, n, r) {
                if (null === t) return -1;
                let i = 0;
                if (r || !n) {
                    let u = !1;
                    for (; i < t.length; ) {
                        const d = t[i];
                        if (d === e) return i;
                        if (3 === d || 6 === d) u = !0;
                        else {
                            if (1 === d || 2 === d) {
                                let g = t[++i];
                                for (; 'string' == typeof g; ) g = t[++i];
                                continue;
                            }
                            if (4 === d) break;
                            if (0 === d) {
                                i += 4;
                                continue;
                            }
                        }
                        i += u ? 1 : 2;
                    }
                    return -1;
                }
                return (function Py(e, t) {
                    let n = e.indexOf(4);
                    if (n > -1)
                        for (n++; n < e.length; ) {
                            const r = e[n];
                            if ('number' == typeof r) return -1;
                            if (r === t) return n;
                            n++;
                        }
                    return -1;
                })(t, e);
            }
            function Kd(e, t, n = !1) {
                for (let r = 0; r < t.length; r++)
                    if (Sy(e, t[r], n)) return !0;
                return !1;
            }
            function Ry(e, t) {
                e: for (let n = 0; n < t.length; n++) {
                    const r = t[n];
                    if (e.length === r.length) {
                        for (let i = 0; i < e.length; i++)
                            if (e[i] !== r[i]) continue e;
                        return !0;
                    }
                }
                return !1;
            }
            function Yd(e, t) {
                return e ? ':not(' + t.trim() + ')' : t;
            }
            function xy(e) {
                let t = e[0],
                    n = 1,
                    r = 2,
                    i = '',
                    u = !1;
                for (; n < e.length; ) {
                    let d = e[n];
                    if ('string' == typeof d)
                        if (2 & r) {
                            const g = e[++n];
                            i +=
                                '[' +
                                d +
                                (g.length > 0 ? '="' + g + '"' : '') +
                                ']';
                        } else 8 & r ? (i += '.' + d) : 4 & r && (i += ' ' + d);
                    else
                        '' !== i && !Is(d) && ((t += Yd(u, i)), (i = '')),
                            (r = d),
                            (u = u || !Is(r));
                    n++;
                }
                return '' !== i && (t += Yd(u, i)), t;
            }
            const cn = {};
            function Zd(e) {
                Qd(Tt(), Ae(), Ir() + e, ys());
            }
            function Qd(e, t, n, r) {
                if (!r)
                    if (3 == (3 & t[2])) {
                        const u = e.preOrderCheckHooks;
                        null !== u && js(t, u, n);
                    } else {
                        const u = e.preOrderHooks;
                        null !== u && Mr(t, u, 0, n);
                    }
                bi(n);
            }
            function Cl(e, t) {
                return (e << 17) | (t << 2);
            }
            function Ms(e) {
                return (e >> 17) & 32767;
            }
            function Eu(e) {
                return 2 | e;
            }
            function po(e) {
                return (131068 & e) >> 2;
            }
            function Du(e, t) {
                return (-131069 & e) | (t << 2);
            }
            function Cu(e) {
                return 1 | e;
            }
            function uf(e, t) {
                const n = e.contentQueries;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2) {
                        const i = n[r],
                            u = n[r + 1];
                        if (-1 !== u) {
                            const d = e.data[u];
                            Ls(i), d.contentQueries(2, t[u], u);
                        }
                    }
            }
            function Ga(e, t, n, r, i, u, d, g, v, O) {
                const R = t.blueprint.slice();
                return (
                    (R[0] = i),
                    (R[2] = 140 | r),
                    si(R),
                    (R[3] = R[15] = e),
                    (R[8] = n),
                    (R[10] = d || (e && e[10])),
                    (R[11] = g || (e && e[11])),
                    (R[12] = v || (e && e[12]) || null),
                    (R[9] = O || (e && e[9]) || null),
                    (R[6] = u),
                    (R[16] = 2 == t.type ? e[16] : R),
                    R
                );
            }
            function sa(e, t, n, r, i) {
                let u = e.data[t];
                if (null === u)
                    (u = (function Pu(e, t, n, r, i) {
                        const u = ei(),
                            d = $i(),
                            v = (e.data[t] = (function qy(e, t, n, r, i, u) {
                                return {
                                    type: n,
                                    index: r,
                                    insertBeforeIndex: null,
                                    injectorIndex: t ? t.injectorIndex : -1,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    propertyBindings: null,
                                    flags: 0,
                                    providerIndexes: 0,
                                    value: i,
                                    attrs: u,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tViews: null,
                                    next: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: t,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0,
                                };
                            })(0, d ? u : u && u.parent, n, t, r, i));
                        return (
                            null === e.firstChild && (e.firstChild = v),
                            null !== u &&
                                (d
                                    ? null == u.child &&
                                      null !== v.parent &&
                                      (u.child = v)
                                    : null === u.next && (u.next = v)),
                            v
                        );
                    })(e, t, n, r, i)),
                        (function Ns() {
                            return Lt.lFrame.inI18n;
                        })() && (u.flags |= 64);
                else if (64 & u.type) {
                    (u.type = n), (u.value = r), (u.attrs = i);
                    const d = (function pi() {
                        const e = Lt.lFrame,
                            t = e.currentTNode;
                        return e.isParent ? t : t.parent;
                    })();
                    u.injectorIndex = null === d ? -1 : d.injectorIndex;
                }
                return Fn(u, !0), u;
            }
            function oa(e, t, n, r) {
                if (0 === n) return -1;
                const i = t.length;
                for (let u = 0; u < n; u++)
                    t.push(r), e.blueprint.push(r), e.data.push(null);
                return i;
            }
            function Wa(e, t, n) {
                _s(t);
                try {
                    const r = e.viewQuery;
                    null !== r && Uu(1, r, n);
                    const i = e.template;
                    null !== i && cf(e, t, i, 1, n),
                        e.firstCreatePass && (e.firstCreatePass = !1),
                        e.staticContentQueries && uf(e, t),
                        e.staticViewQueries && Uu(2, e.viewQuery, n);
                    const u = e.components;
                    null !== u &&
                        (function Yy(e, t) {
                            for (let n = 0; n < t.length; n++) g_(e, t[n]);
                        })(t, u);
                } catch (r) {
                    throw (
                        (e.firstCreatePass &&
                            ((e.incompleteFirstPass = !0),
                            (e.firstCreatePass = !1)),
                        r)
                    );
                } finally {
                    (t[2] &= -5), vs();
                }
            }
            function aa(e, t, n, r) {
                const i = t[2];
                if (256 == (256 & i)) return;
                _s(t);
                const u = ys();
                try {
                    si(t),
                        (function os(e) {
                            return (Lt.lFrame.bindingIndex = e);
                        })(e.bindingStartIndex),
                        null !== n && cf(e, t, n, 2, r);
                    const d = 3 == (3 & i);
                    if (!u)
                        if (d) {
                            const O = e.preOrderCheckHooks;
                            null !== O && js(t, O, null);
                        } else {
                            const O = e.preOrderHooks;
                            null !== O && Mr(t, O, 0, null), Ds(t, 0);
                        }
                    if (
                        ((function h_(e) {
                            for (let t = cu(e); null !== t; t = du(t)) {
                                if (!t[2]) continue;
                                const n = t[9];
                                for (let r = 0; r < n.length; r++) {
                                    const i = n[r],
                                        u = i[3];
                                    0 == (1024 & i[2]) && Rr(u, 1),
                                        (i[2] |= 1024);
                                }
                            }
                        })(t),
                        (function f_(e) {
                            for (let t = cu(e); null !== t; t = du(t))
                                for (let n = 10; n < t.length; n++) {
                                    const r = t[n],
                                        i = r[1];
                                    Kn(r) && aa(i, r, i.template, r[8]);
                                }
                        })(t),
                        null !== e.contentQueries && uf(e, t),
                        !u)
                    )
                        if (d) {
                            const O = e.contentCheckHooks;
                            null !== O && js(t, O);
                        } else {
                            const O = e.contentHooks;
                            null !== O && Mr(t, O, 1), Ds(t, 1);
                        }
                    !(function zy(e, t) {
                        const n = e.hostBindingOpCodes;
                        if (null !== n)
                            try {
                                for (let r = 0; r < n.length; r++) {
                                    const i = n[r];
                                    if (i < 0) bi(~i);
                                    else {
                                        const u = i,
                                            d = n[++r],
                                            g = n[++r];
                                        Gr(d, u), g(2, t[u]);
                                    }
                                }
                            } finally {
                                bi(-1);
                            }
                    })(e, t);
                    const g = e.components;
                    null !== g &&
                        (function Ky(e, t) {
                            for (let n = 0; n < t.length; n++) p_(e, t[n]);
                        })(t, g);
                    const v = e.viewQuery;
                    if ((null !== v && Uu(2, v, r), !u))
                        if (d) {
                            const O = e.viewCheckHooks;
                            null !== O && js(t, O);
                        } else {
                            const O = e.viewHooks;
                            null !== O && Mr(t, O, 2), Ds(t, 2);
                        }
                    !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
                        u || (t[2] &= -73),
                        1024 & t[2] && ((t[2] &= -1025), Rr(t[3], -1));
                } finally {
                    vs();
                }
            }
            function Zy(e, t, n, r) {
                const i = t[10],
                    u = !ys(),
                    d = sn(t);
                try {
                    u && !d && i.begin && i.begin(),
                        d && Wa(e, t, r),
                        aa(e, t, n, r);
                } finally {
                    u && !d && i.end && i.end();
                }
            }
            function cf(e, t, n, r, i) {
                const u = Ir(),
                    d = 2 & r;
                try {
                    bi(-1), d && t.length > 20 && Qd(e, t, 20, ys()), n(r, i);
                } finally {
                    bi(u);
                }
            }
            function df(e, t, n) {
                if (Mn(t)) {
                    const i = t.directiveEnd;
                    for (let u = t.directiveStart; u < i; u++) {
                        const d = e.data[u];
                        d.contentQueries && d.contentQueries(1, n[u], u);
                    }
                }
            }
            function Ru(e, t, n) {
                !E() ||
                    ((function i_(e, t, n, r) {
                        const i = n.directiveStart,
                            u = n.directiveEnd;
                        e.firstCreatePass || Ki(n, t), _i(r, t);
                        const d = n.initialInputs;
                        for (let g = i; g < u; g++) {
                            const v = e.data[g],
                                O = Xt(v);
                            O && u_(t, n, v);
                            const R = It(t, e, g, n);
                            _i(R, t),
                                null !== d && c_(0, g - i, R, v, 0, d),
                                O && (tn(n.index, t)[8] = R);
                        }
                    })(e, t, n, Ke(n, t)),
                    128 == (128 & n.flags) &&
                        (function s_(e, t, n) {
                            const r = n.directiveStart,
                                i = n.directiveEnd,
                                d = n.index,
                                g = (function Wi() {
                                    return Lt.lFrame.currentDirectiveIndex;
                                })();
                            try {
                                bi(d);
                                for (let v = r; v < i; v++) {
                                    const O = e.data[v],
                                        R = t[v];
                                    as(v),
                                        (null !== O.hostBindings ||
                                            0 !== O.hostVars ||
                                            null !== O.hostAttrs) &&
                                            vf(O, R);
                                }
                            } finally {
                                bi(-1), as(g);
                            }
                        })(e, t, n));
            }
            function xu(e, t, n = Ke) {
                const r = t.localNames;
                if (null !== r) {
                    let i = t.index + 1;
                    for (let u = 0; u < r.length; u += 2) {
                        const d = r[u + 1],
                            g = -1 === d ? n(t, e) : e[d];
                        e[i++] = g;
                    }
                }
            }
            function ff(e) {
                const t = e.tView;
                return null === t || t.incompleteFirstPass
                    ? (e.tView = Al(
                          1,
                          null,
                          e.template,
                          e.decls,
                          e.vars,
                          e.directiveDefs,
                          e.pipeDefs,
                          e.viewQuery,
                          e.schemas,
                          e.consts
                      ))
                    : t;
            }
            function Al(e, t, n, r, i, u, d, g, v, O) {
                const R = 20 + r,
                    K = R + i,
                    he = (function Qy(e, t) {
                        const n = [];
                        for (let r = 0; r < t; r++) n.push(r < e ? null : cn);
                        return n;
                    })(R, K),
                    we = 'function' == typeof O ? O() : O;
                return (he[1] = {
                    type: e,
                    blueprint: he,
                    template: n,
                    queries: null,
                    viewQuery: g,
                    declTNode: t,
                    data: he.slice().fill(null, R),
                    bindingStartIndex: R,
                    expandoStartIndex: K,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: 'function' == typeof u ? u() : u,
                    pipeRegistry: 'function' == typeof d ? d() : d,
                    firstChild: null,
                    schemas: v,
                    consts: we,
                    incompleteFirstPass: !1,
                });
            }
            function gf(e, t, n, r) {
                const i = Af(t);
                null === n
                    ? i.push(r)
                    : (i.push(n),
                      e.firstCreatePass && wf(e).push(r, i.length - 1));
            }
            function mf(e, t, n) {
                for (let r in e)
                    if (e.hasOwnProperty(r)) {
                        const i = e[r];
                        (n = null === n ? {} : n).hasOwnProperty(r)
                            ? n[r].push(t, i)
                            : (n[r] = [t, i]);
                    }
                return n;
            }
            function Fu(e, t, n, r) {
                let i = !1;
                if (E()) {
                    const u = (function o_(e, t, n) {
                            const r = e.directiveRegistry;
                            let i = null;
                            if (r)
                                for (let u = 0; u < r.length; u++) {
                                    const d = r[u];
                                    Kd(n, d.selectors, !1) &&
                                        (i || (i = []),
                                        f(Ki(n, t), e, d.type),
                                        Xt(d)
                                            ? (Ef(e, n), i.unshift(d))
                                            : i.push(d));
                                }
                            return i;
                        })(e, t, n),
                        d = null === r ? null : { '': -1 };
                    if (null !== u) {
                        (i = !0), Df(n, e.data.length, u.length);
                        for (let R = 0; R < u.length; R++) {
                            const K = u[R];
                            K.providersResolver && K.providersResolver(K);
                        }
                        let g = !1,
                            v = !1,
                            O = oa(e, t, u.length, null);
                        for (let R = 0; R < u.length; R++) {
                            const K = u[R];
                            (n.mergedAttrs = us(n.mergedAttrs, K.hostAttrs)),
                                Cf(e, n, t, O, K),
                                l_(O, K, d),
                                null !== K.contentQueries && (n.flags |= 8),
                                (null !== K.hostBindings ||
                                    null !== K.hostAttrs ||
                                    0 !== K.hostVars) &&
                                    (n.flags |= 128);
                            const he = K.type.prototype;
                            !g &&
                                (he.ngOnChanges ||
                                    he.ngOnInit ||
                                    he.ngDoCheck) &&
                                ((
                                    e.preOrderHooks || (e.preOrderHooks = [])
                                ).push(n.index),
                                (g = !0)),
                                !v &&
                                    (he.ngOnChanges || he.ngDoCheck) &&
                                    ((
                                        e.preOrderCheckHooks ||
                                        (e.preOrderCheckHooks = [])
                                    ).push(n.index),
                                    (v = !0)),
                                O++;
                        }
                        !(function Jy(e, t) {
                            const r = t.directiveEnd,
                                i = e.data,
                                u = t.attrs,
                                d = [];
                            let g = null,
                                v = null;
                            for (let O = t.directiveStart; O < r; O++) {
                                const R = i[O],
                                    K = R.inputs,
                                    he = null === u || zd(t) ? null : d_(K, u);
                                d.push(he),
                                    (g = mf(K, O, g)),
                                    (v = mf(R.outputs, O, v));
                            }
                            null !== g &&
                                (g.hasOwnProperty('class') && (t.flags |= 16),
                                g.hasOwnProperty('style') && (t.flags |= 32)),
                                (t.initialInputs = d),
                                (t.inputs = g),
                                (t.outputs = v);
                        })(e, n);
                    }
                    d &&
                        (function a_(e, t, n) {
                            if (t) {
                                const r = (e.localNames = []);
                                for (let i = 0; i < t.length; i += 2) {
                                    const u = n[t[i + 1]];
                                    if (null == u) throw new _e(-301, !1);
                                    r.push(t[i], u);
                                }
                            }
                        })(n, r, d);
                }
                return (n.mergedAttrs = us(n.mergedAttrs, n.attrs)), i;
            }
            function _f(e, t, n, r, i, u) {
                const d = u.hostBindings;
                if (d) {
                    let g = e.hostBindingOpCodes;
                    null === g && (g = e.hostBindingOpCodes = []);
                    const v = ~t.index;
                    (function r_(e) {
                        let t = e.length;
                        for (; t > 0; ) {
                            const n = e[--t];
                            if ('number' == typeof n && n < 0) return n;
                        }
                        return 0;
                    })(g) != v && g.push(v),
                        g.push(r, i, d);
                }
            }
            function vf(e, t) {
                null !== e.hostBindings && e.hostBindings(1, t);
            }
            function Ef(e, t) {
                (t.flags |= 2),
                    (e.components || (e.components = [])).push(t.index);
            }
            function l_(e, t, n) {
                if (n) {
                    if (t.exportAs)
                        for (let r = 0; r < t.exportAs.length; r++)
                            n[t.exportAs[r]] = e;
                    Xt(t) && (n[''] = e);
                }
            }
            function Df(e, t, n) {
                (e.flags |= 1),
                    (e.directiveStart = t),
                    (e.directiveEnd = t + n),
                    (e.providerIndexes = t);
            }
            function Cf(e, t, n, r, i) {
                e.data[r] = i;
                const u = i.factory || (i.factory = ri(i.type)),
                    d = new Ti(u, Xt(i), null);
                (e.blueprint[r] = d),
                    (n[r] = d),
                    _f(e, t, 0, r, oa(e, n, i.hostVars, cn), i);
            }
            function u_(e, t, n) {
                const r = Ke(t, e),
                    i = ff(n),
                    u = e[10],
                    d = wl(
                        e,
                        Ga(
                            e,
                            i,
                            null,
                            n.onPush ? 64 : 16,
                            r,
                            t,
                            u,
                            u.createRenderer(r, n),
                            null,
                            null
                        )
                    );
                e[t.index] = d;
            }
            function Xs(e, t, n, r, i, u) {
                const d = Ke(e, t);
                !(function Nu(e, t, n, r, i, u, d) {
                    if (null == u)
                        rn(e)
                            ? e.removeAttribute(t, i, n)
                            : t.removeAttribute(i);
                    else {
                        const g = null == d ? Z(u) : d(u, r || '', i);
                        rn(e)
                            ? e.setAttribute(t, i, g, n)
                            : n
                            ? t.setAttributeNS(n, i, g)
                            : t.setAttribute(i, g);
                    }
                })(t[11], d, u, e.value, n, r, i);
            }
            function c_(e, t, n, r, i, u) {
                const d = u[t];
                if (null !== d) {
                    const g = r.setInput;
                    for (let v = 0; v < d.length; ) {
                        const O = d[v++],
                            R = d[v++],
                            K = d[v++];
                        null !== g ? r.setInput(n, K, O, R) : (n[R] = K);
                    }
                }
            }
            function d_(e, t) {
                let n = null,
                    r = 0;
                for (; r < t.length; ) {
                    const i = t[r];
                    if (0 !== i)
                        if (5 !== i) {
                            if ('number' == typeof i) break;
                            e.hasOwnProperty(i) &&
                                (null === n && (n = []),
                                n.push(i, e[i], t[r + 1])),
                                (r += 2);
                        } else r += 2;
                    else r += 4;
                }
                return n;
            }
            function bf(e, t, n, r) {
                return new Array(e, !0, !1, t, null, 0, r, n, null, null);
            }
            function p_(e, t) {
                const n = tn(t, e);
                if (Kn(n)) {
                    const r = n[1];
                    80 & n[2] ? aa(r, n, r.template, n[8]) : n[5] > 0 && Lu(n);
                }
            }
            function Lu(e) {
                for (let r = cu(e); null !== r; r = du(r))
                    for (let i = 10; i < r.length; i++) {
                        const u = r[i];
                        if (1024 & u[2]) {
                            const d = u[1];
                            aa(d, u, d.template, u[8]);
                        } else u[5] > 0 && Lu(u);
                    }
                const n = e[1].components;
                if (null !== n)
                    for (let r = 0; r < n.length; r++) {
                        const i = tn(n[r], e);
                        Kn(i) && i[5] > 0 && Lu(i);
                    }
            }
            function g_(e, t) {
                const n = tn(t, e),
                    r = n[1];
                (function m_(e, t) {
                    for (let n = t.length; n < e.blueprint.length; n++)
                        t.push(e.blueprint[n]);
                })(r, n),
                    Wa(r, n, n[8]);
            }
            function wl(e, t) {
                return e[13] ? (e[14][4] = t) : (e[13] = t), (e[14] = t), t;
            }
            function ku(e) {
                for (; e; ) {
                    e[2] |= 64;
                    const t = Ha(e);
                    if (Bn(e) && !t) return e;
                    e = t;
                }
                return null;
            }
            function Vu(e, t, n) {
                const r = t[10];
                r.begin && r.begin();
                try {
                    aa(e, t, e.template, n);
                } catch (i) {
                    throw (If(t, i), i);
                } finally {
                    r.end && r.end();
                }
            }
            function Tf(e) {
                !(function Bu(e) {
                    for (let t = 0; t < e.components.length; t++) {
                        const n = e.components[t],
                            r = su(n),
                            i = r[1];
                        Zy(i, r, i.template, n);
                    }
                })(e[8]);
            }
            function Uu(e, t, n) {
                Ls(0), t(e, n);
            }
            const E_ = (() => Promise.resolve(null))();
            function Af(e) {
                return e[7] || (e[7] = []);
            }
            function wf(e) {
                return e.cleanup || (e.cleanup = []);
            }
            function If(e, t) {
                const n = e[9],
                    r = n ? n.get(ja, null) : null;
                r && r.handleError(t);
            }
            function Mf(e, t, n, r, i) {
                for (let u = 0; u < n.length; ) {
                    const d = n[u++],
                        g = n[u++],
                        v = t[d],
                        O = e.data[d];
                    null !== O.setInput ? O.setInput(v, i, r, g) : (v[g] = i);
                }
            }
            function go(e, t, n) {
                const r = Ve(t, e);
                !(function Md(e, t, n) {
                    rn(e) ? e.setValue(t, n) : (t.textContent = n);
                })(e[11], r, n);
            }
            function Sl(e, t, n) {
                let r = n ? e.styles : null,
                    i = n ? e.classes : null,
                    u = 0;
                if (null !== t)
                    for (let d = 0; d < t.length; d++) {
                        const g = t[d];
                        'number' == typeof g
                            ? (u = g)
                            : 1 == u
                            ? (i = B(i, g))
                            : 2 == u && (r = B(r, g + ': ' + t[++d] + ';'));
                    }
                n ? (e.styles = r) : (e.stylesWithoutHost = r),
                    n ? (e.classes = i) : (e.classesWithoutHost = i);
            }
            const ju = new cr('INJECTOR', -1);
            class Of {
                get(t, n = c) {
                    if (n === c) {
                        const r = new Error(
                            `NullInjectorError: No provider for ${W(t)}!`
                        );
                        throw ((r.name = 'NullInjectorError'), r);
                    }
                    return n;
                }
            }
            const Hu = new cr('Set Injector scope.'),
                za = {},
                b_ = {};
            let $u;
            function Pf() {
                return void 0 === $u && ($u = new Of()), $u;
            }
            function Rf(e, t = null, n = null, r) {
                const i = xf(e, t, n, r);
                return i._resolveInjectorDefTypes(), i;
            }
            function xf(e, t = null, n = null, r) {
                return new T_(e, n, t || Pf(), r);
            }
            class T_ {
                constructor(t, n, r, i = null) {
                    (this.parent = r),
                        (this.records = new Map()),
                        (this.injectorDefTypes = new Set()),
                        (this.onDestroy = new Set()),
                        (this._destroyed = !1);
                    const u = [];
                    n && Ai(n, (g) => this.processProvider(g, t, n)),
                        Ai([t], (g) => this.processInjectorType(g, [], u)),
                        this.records.set(ju, la(void 0, this));
                    const d = this.records.get(Hu);
                    (this.scope = null != d ? d.value : null),
                        (this.source =
                            i || ('object' == typeof t ? null : W(t)));
                }
                get destroyed() {
                    return this._destroyed;
                }
                destroy() {
                    this.assertNotDestroyed(), (this._destroyed = !0);
                    try {
                        this.onDestroy.forEach((t) => t.ngOnDestroy());
                    } finally {
                        this.records.clear(),
                            this.onDestroy.clear(),
                            this.injectorDefTypes.clear();
                    }
                }
                get(t, n = c, r = We.Default) {
                    this.assertNotDestroyed();
                    const i = et(this),
                        u = xt(void 0);
                    try {
                        if (!(r & We.SkipSelf)) {
                            let g = this.records.get(t);
                            if (void 0 === g) {
                                const v =
                                    (function R_(e) {
                                        return (
                                            'function' == typeof e ||
                                            ('object' == typeof e &&
                                                e instanceof cr)
                                        );
                                    })(t) && Kt(t);
                                (g =
                                    v && this.injectableDefInScope(v)
                                        ? la(Gu(t), za)
                                        : null),
                                    this.records.set(t, g);
                            }
                            if (null != g) return this.hydrate(t, g);
                        }
                        return (r & We.Self ? Pf() : this.parent).get(
                            t,
                            (n = r & We.Optional && n === c ? null : n)
                        );
                    } catch (d) {
                        if ('NullInjectorError' === d.name) {
                            if (((d[A] = d[A] || []).unshift(W(t)), i)) throw d;
                            return (function wi(e, t, n, r) {
                                const i = e[A];
                                throw (
                                    (t[ke] && i.unshift(t[ke]),
                                    (e.message = (function Si(
                                        e,
                                        t,
                                        n,
                                        r = null
                                    ) {
                                        e =
                                            e &&
                                            '\n' === e.charAt(0) &&
                                            '\u0275' == e.charAt(1)
                                                ? e.substr(2)
                                                : e;
                                        let i = W(t);
                                        if (Array.isArray(t))
                                            i = t.map(W).join(' -> ');
                                        else if ('object' == typeof t) {
                                            let u = [];
                                            for (let d in t)
                                                if (t.hasOwnProperty(d)) {
                                                    let g = t[d];
                                                    u.push(
                                                        d +
                                                            ':' +
                                                            ('string' ==
                                                            typeof g
                                                                ? JSON.stringify(
                                                                      g
                                                                  )
                                                                : W(g))
                                                    );
                                                }
                                            i = `{${u.join(', ')}}`;
                                        }
                                        return `${n}${
                                            r ? '(' + r + ')' : ''
                                        }[${i}]: ${e.replace($, '\n  ')}`;
                                    })('\n' + e.message, i, n, r)),
                                    (e.ngTokenPath = i),
                                    (e[A] = null),
                                    e)
                                );
                            })(d, t, 'R3InjectorError', this.source);
                        }
                        throw d;
                    } finally {
                        xt(u), et(i);
                    }
                }
                _resolveInjectorDefTypes() {
                    this.injectorDefTypes.forEach((t) => this.get(t));
                }
                toString() {
                    const t = [];
                    return (
                        this.records.forEach((r, i) => t.push(W(i))),
                        `R3Injector[${t.join(', ')}]`
                    );
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new _e(205, !1);
                }
                processInjectorType(t, n, r) {
                    if (!(t = Q(t))) return !1;
                    let i = Fe(t);
                    const u = (null == i && t.ngModule) || void 0,
                        d = void 0 === u ? t : u,
                        g = -1 !== r.indexOf(d);
                    if ((void 0 !== u && (i = Fe(u)), null == i)) return !1;
                    if (null != i.imports && !g) {
                        let R;
                        r.push(d);
                        try {
                            Ai(i.imports, (K) => {
                                this.processInjectorType(K, n, r) &&
                                    (void 0 === R && (R = []), R.push(K));
                            });
                        } finally {
                        }
                        if (void 0 !== R)
                            for (let K = 0; K < R.length; K++) {
                                const { ngModule: he, providers: we } = R[K];
                                Ai(we, (ze) =>
                                    this.processProvider(ze, he, we || te)
                                );
                            }
                    }
                    this.injectorDefTypes.add(d);
                    const v = ri(d) || (() => new d());
                    this.records.set(d, la(v, za));
                    const O = i.providers;
                    if (null != O && !g) {
                        const R = t;
                        Ai(O, (K) => this.processProvider(K, R, O));
                    }
                    return void 0 !== u && void 0 !== t.providers;
                }
                processProvider(t, n, r) {
                    let i = ua((t = Q(t))) ? t : Q(t && t.provide);
                    const u = (function w_(e, t, n) {
                        return Nf(e) ? la(void 0, e.useValue) : la(Ff(e), za);
                    })(t);
                    if (ua(t) || !0 !== t.multi) this.records.get(i);
                    else {
                        let d = this.records.get(i);
                        d ||
                            ((d = la(void 0, za, !0)),
                            (d.factory = () => er(d.multi)),
                            this.records.set(i, d)),
                            (i = t),
                            d.multi.push(t);
                    }
                    this.records.set(i, u);
                }
                hydrate(t, n) {
                    return (
                        n.value === za &&
                            ((n.value = b_), (n.value = n.factory())),
                        'object' == typeof n.value &&
                            n.value &&
                            (function P_(e) {
                                return (
                                    null !== e &&
                                    'object' == typeof e &&
                                    'function' == typeof e.ngOnDestroy
                                );
                            })(n.value) &&
                            this.onDestroy.add(n.value),
                        n.value
                    );
                }
                injectableDefInScope(t) {
                    if (!t.providedIn) return !1;
                    const n = Q(t.providedIn);
                    return 'string' == typeof n
                        ? 'any' === n || n === this.scope
                        : this.injectorDefTypes.has(n);
                }
            }
            function Gu(e) {
                const t = Kt(e),
                    n = null !== t ? t.factory : ri(e);
                if (null !== n) return n;
                if (e instanceof cr) throw new _e(204, !1);
                if (e instanceof Function)
                    return (function A_(e) {
                        const t = e.length;
                        if (t > 0) throw (Qi(t, '?'), new _e(204, !1));
                        const n = (function qt(e) {
                            const t = e && (e[Ye] || e[Te]);
                            if (t) {
                                const n = (function Hn(e) {
                                    if (e.hasOwnProperty('name')) return e.name;
                                    const t = ('' + e).match(
                                        /^function\s*([^\s(]+)/
                                    );
                                    return null === t ? '' : t[1];
                                })(e);
                                return (
                                    console.warn(
                                        `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`
                                    ),
                                    t
                                );
                            }
                            return null;
                        })(e);
                        return null !== n ? () => n.factory(e) : () => new e();
                    })(e);
                throw new _e(204, !1);
            }
            function Ff(e, t, n) {
                let r;
                if (ua(e)) {
                    const i = Q(e);
                    return ri(i) || Gu(i);
                }
                if (Nf(e)) r = () => Q(e.useValue);
                else if (
                    (function I_(e) {
                        return !(!e || !e.useFactory);
                    })(e)
                )
                    r = () => e.useFactory(...er(e.deps || []));
                else if (
                    (function S_(e) {
                        return !(!e || !e.useExisting);
                    })(e)
                )
                    r = () => gt(Q(e.useExisting));
                else {
                    const i = Q(e && (e.useClass || e.provide));
                    if (
                        !(function O_(e) {
                            return !!e.deps;
                        })(e)
                    )
                        return ri(i) || Gu(i);
                    r = () => new i(...er(e.deps));
                }
                return r;
            }
            function la(e, t, n = !1) {
                return { factory: e, value: t, multi: n ? [] : void 0 };
            }
            function Nf(e) {
                return null !== e && 'object' == typeof e && Ge in e;
            }
            function ua(e) {
                return 'function' == typeof e;
            }
            let ps = (() => {
                class e {
                    static create(n, r) {
                        var i;
                        if (Array.isArray(n)) return Rf({ name: '' }, r, n, '');
                        {
                            const u =
                                null !== (i = n.name) && void 0 !== i ? i : '';
                            return Rf({ name: u }, n.parent, n.providers, u);
                        }
                    }
                }
                return (
                    (e.THROW_IF_NOT_FOUND = c),
                    (e.NULL = new Of()),
                    (e.ɵprov = mt({
                        token: e,
                        providedIn: 'any',
                        factory: () => gt(ju),
                    })),
                    (e.__NG_ELEMENT_ID__ = -1),
                    e
                );
            })();
            function U_(e, t) {
                Us(su(e)[1], Rn());
            }
            function Ku(e) {
                let t = (function Kf(e) {
                        return Object.getPrototypeOf(e.prototype).constructor;
                    })(e.type),
                    n = !0;
                const r = [e];
                for (; t; ) {
                    let i;
                    if (Xt(e)) i = t.ɵcmp || t.ɵdir;
                    else {
                        if (t.ɵcmp) throw new _e(903, '');
                        i = t.ɵdir;
                    }
                    if (i) {
                        if (n) {
                            r.push(i);
                            const d = e;
                            (d.inputs = Yu(e.inputs)),
                                (d.declaredInputs = Yu(e.declaredInputs)),
                                (d.outputs = Yu(e.outputs));
                            const g = i.hostBindings;
                            g && G_(e, g);
                            const v = i.viewQuery,
                                O = i.contentQueries;
                            if (
                                (v && H_(e, v),
                                O && $_(e, O),
                                k(e.inputs, i.inputs),
                                k(e.declaredInputs, i.declaredInputs),
                                k(e.outputs, i.outputs),
                                Xt(i) && i.data.animation)
                            ) {
                                const R = e.data;
                                R.animation = (R.animation || []).concat(
                                    i.data.animation
                                );
                            }
                        }
                        const u = i.features;
                        if (u)
                            for (let d = 0; d < u.length; d++) {
                                const g = u[d];
                                g && g.ngInherit && g(e), g === Ku && (n = !1);
                            }
                    }
                    t = Object.getPrototypeOf(t);
                }
                !(function j_(e) {
                    let t = 0,
                        n = null;
                    for (let r = e.length - 1; r >= 0; r--) {
                        const i = e[r];
                        (i.hostVars = t += i.hostVars),
                            (i.hostAttrs = us(
                                i.hostAttrs,
                                (n = us(n, i.hostAttrs))
                            ));
                    }
                })(r);
            }
            function Yu(e) {
                return e === Dr ? {} : e === te ? [] : e;
            }
            function H_(e, t) {
                const n = e.viewQuery;
                e.viewQuery = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            function $_(e, t) {
                const n = e.contentQueries;
                e.contentQueries = n
                    ? (r, i, u) => {
                          t(r, i, u), n(r, i, u);
                      }
                    : t;
            }
            function G_(e, t) {
                const n = e.hostBindings;
                e.hostBindings = n
                    ? (r, i) => {
                          t(r, i), n(r, i);
                      }
                    : t;
            }
            let Il = null;
            function ca() {
                if (!Il) {
                    const e = nn.Symbol;
                    if (e && e.iterator) Il = e.iterator;
                    else {
                        const t = Object.getOwnPropertyNames(Map.prototype);
                        for (let n = 0; n < t.length; ++n) {
                            const r = t[n];
                            'entries' !== r &&
                                'size' !== r &&
                                Map.prototype[r] === Map.prototype.entries &&
                                (Il = r);
                        }
                    }
                }
                return Il;
            }
            function Ka(e) {
                return (
                    !!Zu(e) &&
                    (Array.isArray(e) || (!(e instanceof Map) && ca() in e))
                );
            }
            function Zu(e) {
                return (
                    null !== e &&
                    ('function' == typeof e || 'object' == typeof e)
                );
            }
            function eo(e, t, n) {
                return (e[t] = n);
            }
            function Ya(e, t) {
                return e[t];
            }
            function vi(e, t, n) {
                return !Object.is(e[t], n) && ((e[t] = n), !0);
            }
            function Wo(e, t, n, r) {
                const i = vi(e, t, n);
                return vi(e, t + 1, r) || i;
            }
            function gs(e, t, n, r, i, u) {
                const d = Wo(e, t, n, r);
                return Wo(e, t + 2, i, u) || d;
            }
            function Qu(e, t, n, r) {
                const i = Ae();
                return vi(i, Ci(), t) && (Tt(), Xs(Yn(), i, e, t, n, r)), Qu;
            }
            function rh(e, t, n, r, i, u, d, g) {
                const v = Ae(),
                    O = Tt(),
                    R = e + 20,
                    K = O.firstCreatePass
                        ? (function q_(e, t, n, r, i, u, d, g, v) {
                              const O = t.consts,
                                  R = sa(t, e, 4, d || null, Vn(O, g));
                              Fu(t, n, R, Vn(O, v)), Us(t, R);
                              const K = (R.tViews = Al(
                                  2,
                                  R,
                                  r,
                                  i,
                                  u,
                                  t.directiveRegistry,
                                  t.pipeRegistry,
                                  null,
                                  t.schemas,
                                  O
                              ));
                              return (
                                  null !== t.queries &&
                                      (t.queries.template(t, R),
                                      (K.queries = t.queries.embeddedTView(R))),
                                  R
                              );
                          })(R, O, v, t, n, r, i, u, d)
                        : O.data[R];
                Fn(K, !1);
                const he = v[11].createComment('');
                El(O, v, he, K),
                    _i(he, v),
                    wl(v, (v[R] = bf(he, v, he, K))),
                    kn(K) && Ru(O, v, K),
                    null != d && xu(v, K, g);
            }
            function ih(e) {
                return Cn(
                    (function Lo() {
                        return Lt.lFrame.contextLView;
                    })(),
                    20 + e
                );
            }
            function Za(e, t = We.Default) {
                const n = Ae();
                return null === n ? gt(e, t) : J(Rn(), n, Q(e), t);
            }
            function gh() {
                throw new Error('invalid');
            }
            function tc(e, t, n) {
                const r = Ae();
                return (
                    vi(r, Ci(), t) &&
                        (function Ji(e, t, n, r, i, u, d, g) {
                            const v = Ke(t, n);
                            let R,
                                O = t.inputs;
                            !g && null != O && (R = O[r])
                                ? (Mf(e, n, R, r, i),
                                  hn(t) &&
                                      (function e_(e, t) {
                                          const n = tn(t, e);
                                          16 & n[2] || (n[2] |= 64);
                                      })(n, t.index))
                                : 3 & t.type &&
                                  ((r = (function Xy(e) {
                                      return 'class' === e
                                          ? 'className'
                                          : 'for' === e
                                          ? 'htmlFor'
                                          : 'formaction' === e
                                          ? 'formAction'
                                          : 'innerHtml' === e
                                          ? 'innerHTML'
                                          : 'readonly' === e
                                          ? 'readOnly'
                                          : 'tabindex' === e
                                          ? 'tabIndex'
                                          : e;
                                  })(r)),
                                  (i = null != d ? d(i, t.value || '', r) : i),
                                  rn(u)
                                      ? u.setProperty(v, r, i)
                                      : lo(r) ||
                                        (v.setProperty
                                            ? v.setProperty(r, i)
                                            : (v[r] = i)));
                        })(Tt(), Yn(), r, e, t, r[11], n, !1),
                    tc
                );
            }
            function nc(e, t, n, r, i) {
                const d = i ? 'class' : 'style';
                Mf(e, n, t.inputs[d], d, r);
            }
            function rc(e, t, n, r) {
                const i = Ae(),
                    u = Tt(),
                    d = 20 + e,
                    g = i[11],
                    v = (i[d] = hu(
                        g,
                        t,
                        (function Vs() {
                            return Lt.lFrame.currentNamespace;
                        })()
                    )),
                    O = u.firstCreatePass
                        ? (function _v(e, t, n, r, i, u, d) {
                              const g = t.consts,
                                  O = sa(t, e, 2, i, Vn(g, u));
                              return (
                                  Fu(t, n, O, Vn(g, d)),
                                  null !== O.attrs && Sl(O, O.attrs, !1),
                                  null !== O.mergedAttrs &&
                                      Sl(O, O.mergedAttrs, !0),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, O),
                                  O
                              );
                          })(d, u, i, 0, t, n, r)
                        : u.data[d];
                Fn(O, !0);
                const R = O.mergedAttrs;
                null !== R && ur(g, v, R);
                const K = O.classes;
                null !== K && vu(g, v, K);
                const he = O.styles;
                null !== he && $d(g, v, he),
                    64 != (64 & O.flags) && El(u, i, v, O),
                    0 ===
                        (function is() {
                            return Lt.lFrame.elementDepthCount;
                        })() && _i(v, i),
                    (function I() {
                        Lt.lFrame.elementDepthCount++;
                    })(),
                    kn(O) && (Ru(u, i, O), df(u, O, i)),
                    null !== r && xu(i, O);
            }
            function ic() {
                let e = Rn();
                $i() ? Gi() : ((e = e.parent), Fn(e, !1));
                const t = e;
                !(function D() {
                    Lt.lFrame.elementDepthCount--;
                })();
                const n = Tt();
                n.firstCreatePass &&
                    (Us(n, e), Mn(e) && n.queries.elementEnd(e)),
                    null != t.classesWithoutHost &&
                        (function Co(e) {
                            return 0 != (16 & e.flags);
                        })(t) &&
                        nc(n, t, Ae(), t.classesWithoutHost, !0),
                    null != t.stylesWithoutHost &&
                        (function bo(e) {
                            return 0 != (32 & e.flags);
                        })(t) &&
                        nc(n, t, Ae(), t.stylesWithoutHost, !1);
            }
            function mh(e, t, n, r) {
                rc(e, t, n, r), ic();
            }
            function sc(e, t, n) {
                const r = Ae(),
                    i = Tt(),
                    u = e + 20,
                    d = i.firstCreatePass
                        ? (function vv(e, t, n, r, i) {
                              const u = t.consts,
                                  d = Vn(u, r),
                                  g = sa(t, e, 8, 'ng-container', d);
                              return (
                                  null !== d && Sl(g, d, !0),
                                  Fu(t, n, g, Vn(u, i)),
                                  null !== t.queries &&
                                      t.queries.elementStart(t, g),
                                  g
                              );
                          })(u, i, r, t, n)
                        : i.data[u];
                Fn(d, !0);
                const g = (r[u] = r[11].createComment(''));
                El(i, r, g, d),
                    _i(g, r),
                    kn(d) && (Ru(i, r, d), df(i, d, r)),
                    null != n && xu(r, d);
            }
            function oc() {
                let e = Rn();
                const t = Tt();
                $i() ? Gi() : ((e = e.parent), Fn(e, !1)),
                    t.firstCreatePass &&
                        (Us(t, e), Mn(e) && t.queries.elementEnd(e));
            }
            function yh(e, t, n) {
                sc(e, t, n), oc();
            }
            function _h() {
                return Ae();
            }
            function ac(e) {
                return !!e && 'function' == typeof e.then;
            }
            function vh(e) {
                return !!e && 'function' == typeof e.subscribe;
            }
            const Eh = vh;
            function lc(e, t, n, r) {
                const i = Ae(),
                    u = Tt(),
                    d = Rn();
                return (
                    (function Ch(e, t, n, r, i, u, d, g) {
                        const v = kn(r),
                            R = e.firstCreatePass && wf(e),
                            K = t[8],
                            he = Af(t);
                        let we = !0;
                        if (3 & r.type || g) {
                            const pt = Ke(r, t),
                                St = g ? g(pt) : pt,
                                qe = he.length,
                                $t = g ? (xn) => g(b(xn[r.index])) : r.index;
                            if (rn(n)) {
                                let xn = null;
                                if (
                                    (!g &&
                                        v &&
                                        (xn = (function Ev(e, t, n, r) {
                                            const i = e.cleanup;
                                            if (null != i)
                                                for (
                                                    let u = 0;
                                                    u < i.length - 1;
                                                    u += 2
                                                ) {
                                                    const d = i[u];
                                                    if (
                                                        d === n &&
                                                        i[u + 1] === r
                                                    ) {
                                                        const g = t[7],
                                                            v = i[u + 2];
                                                        return g.length > v
                                                            ? g[v]
                                                            : null;
                                                    }
                                                    'string' == typeof d &&
                                                        (u += 2);
                                                }
                                            return null;
                                        })(e, t, i, r.index)),
                                    null !== xn)
                                )
                                    ((
                                        xn.__ngLastListenerFn__ || xn
                                    ).__ngNextListenerFn__ = u),
                                        (xn.__ngLastListenerFn__ = u),
                                        (we = !1);
                                else {
                                    u = uc(r, t, K, u, !1);
                                    const tr = n.listen(St, i, u);
                                    he.push(u, tr),
                                        R && R.push(i, $t, qe, qe + 1);
                                }
                            } else
                                (u = uc(r, t, K, u, !0)),
                                    St.addEventListener(i, u, d),
                                    he.push(u),
                                    R && R.push(i, $t, qe, d);
                        } else u = uc(r, t, K, u, !1);
                        const ze = r.outputs;
                        let lt;
                        if (we && null !== ze && (lt = ze[i])) {
                            const pt = lt.length;
                            if (pt)
                                for (let St = 0; St < pt; St += 2) {
                                    const es =
                                            t[lt[St]][lt[St + 1]].subscribe(u),
                                        Yo = he.length;
                                    he.push(u, es),
                                        R && R.push(i, r.index, Yo, -(Yo + 1));
                                }
                        }
                    })(u, i, i[11], d, e, t, !!n, r),
                    lc
                );
            }
            function bh(e, t, n, r) {
                try {
                    return !1 !== n(r);
                } catch (i) {
                    return If(e, i), !1;
                }
            }
            function uc(e, t, n, r, i) {
                return function u(d) {
                    if (d === Function) return r;
                    const g = 2 & e.flags ? tn(e.index, t) : t;
                    0 == (32 & t[2]) && ku(g);
                    let v = bh(t, 0, r, d),
                        O = u.__ngNextListenerFn__;
                    for (; O; )
                        (v = bh(t, 0, O, d) && v), (O = O.__ngNextListenerFn__);
                    return (
                        i &&
                            !1 === v &&
                            (d.preventDefault(), (d.returnValue = !1)),
                        v
                    );
                };
            }
            function Th(e = 1) {
                return (function Es(e) {
                    return (Lt.lFrame.contextLView = (function ko(e, t) {
                        for (; e > 0; ) (t = t[15]), e--;
                        return t;
                    })(e, Lt.lFrame.contextLView))[8];
                })(e);
            }
            function Dv(e, t) {
                let n = null;
                const r = (function My(e) {
                    const t = e.attrs;
                    if (null != t) {
                        const n = t.indexOf(5);
                        if (0 == (1 & n)) return t[n + 1];
                    }
                    return null;
                })(e);
                for (let i = 0; i < t.length; i++) {
                    const u = t[i];
                    if ('*' !== u) {
                        if (null === r ? Kd(e, u, !0) : Ry(r, u)) return i;
                    } else n = i;
                }
                return n;
            }
            function Ah(e) {
                const t = Ae()[16][6];
                if (!t.projection) {
                    const r = (t.projection = Qi(e ? e.length : 1, null)),
                        i = r.slice();
                    let u = t.child;
                    for (; null !== u; ) {
                        const d = e ? Dv(u, e) : 0;
                        null !== d &&
                            (i[d] ? (i[d].projectionNext = u) : (r[d] = u),
                            (i[d] = u)),
                            (u = u.next);
                    }
                }
            }
            function wh(e, t = 0, n) {
                const r = Ae(),
                    i = Tt(),
                    u = sa(i, 20 + e, 16, null, n || null);
                null === u.projection && (u.projection = t),
                    Gi(),
                    64 != (64 & u.flags) &&
                        (function Cy(e, t, n) {
                            Hd(
                                t[11],
                                0,
                                t,
                                n,
                                Rd(e, n, t),
                                Ld(n.parent || t[6], n, t)
                            );
                        })(i, r, u);
            }
            function Lh(e, t, n, r, i) {
                const u = e[n + 1],
                    d = null === t;
                let g = r ? Ms(u) : po(u),
                    v = !1;
                for (; 0 !== g && (!1 === v || d); ) {
                    const R = e[g + 1];
                    Tv(e[g], t) && ((v = !0), (e[g + 1] = r ? Cu(R) : Eu(R))),
                        (g = r ? Ms(R) : po(R));
                }
                v && (e[n + 1] = r ? Eu(u) : Cu(u));
            }
            function Tv(e, t) {
                return (
                    null === e ||
                    null == t ||
                    (Array.isArray(e) ? e[1] : e) === t ||
                    (!(!Array.isArray(e) || 'string' != typeof t) &&
                        Ys(e, t) >= 0)
                );
            }
            const qr = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
            function kh(e) {
                return e.substring(qr.key, qr.keyEnd);
            }
            function Av(e) {
                return e.substring(qr.value, qr.valueEnd);
            }
            function Bh(e, t) {
                const n = qr.textEnd;
                return n === t
                    ? -1
                    : ((t = qr.keyEnd =
                          (function Iv(e, t, n) {
                              for (; t < n && e.charCodeAt(t) > 32; ) t++;
                              return t;
                          })(e, (qr.key = t), n)),
                      Da(e, t, n));
            }
            function Vh(e, t) {
                const n = qr.textEnd;
                let r = (qr.key = Da(e, t, n));
                return n === r
                    ? -1
                    : ((r = qr.keyEnd =
                          (function Mv(e, t, n) {
                              let r;
                              for (
                                  ;
                                  t < n &&
                                  (45 === (r = e.charCodeAt(t)) ||
                                      95 === r ||
                                      ((-33 & r) >= 65 && (-33 & r) <= 90) ||
                                      (r >= 48 && r <= 57));

                              )
                                  t++;
                              return t;
                          })(e, r, n)),
                      (r = jh(e, r, n)),
                      (r = qr.value = Da(e, r, n)),
                      (r = qr.valueEnd =
                          (function Ov(e, t, n) {
                              let r = -1,
                                  i = -1,
                                  u = -1,
                                  d = t,
                                  g = d;
                              for (; d < n; ) {
                                  const v = e.charCodeAt(d++);
                                  if (59 === v) return g;
                                  34 === v || 39 === v
                                      ? (g = d = Hh(e, v, d, n))
                                      : t === d - 4 &&
                                        85 === u &&
                                        82 === i &&
                                        76 === r &&
                                        40 === v
                                      ? (g = d = Hh(e, 41, d, n))
                                      : v > 32 && (g = d),
                                      (u = i),
                                      (i = r),
                                      (r = -33 & v);
                              }
                              return g;
                          })(e, r, n)),
                      jh(e, r, n));
            }
            function Uh(e) {
                (qr.key = 0),
                    (qr.keyEnd = 0),
                    (qr.value = 0),
                    (qr.valueEnd = 0),
                    (qr.textEnd = e.length);
            }
            function Da(e, t, n) {
                for (; t < n && e.charCodeAt(t) <= 32; ) t++;
                return t;
            }
            function jh(e, t, n, r) {
                return (t = Da(e, t, n)) < n && t++, t;
            }
            function Hh(e, t, n, r) {
                let i = -1,
                    u = n;
                for (; u < r; ) {
                    const d = e.charCodeAt(u++);
                    if (d == t && 92 !== i) return u;
                    i = 92 == d && 92 === i ? 0 : d;
                }
                throw new Error();
            }
            function dc(e, t) {
                return (
                    (function Rs(e, t, n, r) {
                        const i = Ae(),
                            u = Tt(),
                            d = gi(2);
                        u.firstUpdatePass && zh(u, e, d, r),
                            t !== cn &&
                                vi(i, d, t) &&
                                Yh(
                                    u,
                                    u.data[Ir()],
                                    i,
                                    i[11],
                                    e,
                                    (i[d + 1] = (function Bv(e, t) {
                                        return (
                                            null == e ||
                                                ('string' == typeof t
                                                    ? (e += t)
                                                    : 'object' == typeof e &&
                                                      (e = W(xo(e)))),
                                            e
                                        );
                                    })(t, n)),
                                    r,
                                    d
                                );
                    })(e, t, null, !0),
                    dc
                );
            }
            function Ps(e) {
                xs(Kh, Pv, e, !1);
            }
            function Pv(e, t) {
                for (
                    let n = (function Sv(e) {
                        return Uh(e), Vh(e, Da(e, 0, qr.textEnd));
                    })(t);
                    n >= 0;
                    n = Vh(t, n)
                )
                    Kh(e, kh(t), Av(t));
            }
            function Gh(e) {
                xs(Br, to, e, !0);
            }
            function to(e, t) {
                for (
                    let n = (function wv(e) {
                        return Uh(e), Bh(e, Da(e, 0, qr.textEnd));
                    })(t);
                    n >= 0;
                    n = Bh(t, n)
                )
                    Br(e, kh(t), !0);
            }
            function xs(e, t, n, r) {
                const i = Tt(),
                    u = gi(2);
                i.firstUpdatePass && zh(i, null, u, r);
                const d = Ae();
                if (n !== cn && vi(d, u, n)) {
                    const g = i.data[Ir()];
                    if (Qh(g, r) && !Wh(i, u)) {
                        let v = r ? g.classesWithoutHost : g.stylesWithoutHost;
                        null !== v && (n = B(v, n || '')), nc(i, g, d, n, r);
                    } else
                        !(function kv(e, t, n, r, i, u, d, g) {
                            i === cn && (i = te);
                            let v = 0,
                                O = 0,
                                R = 0 < i.length ? i[0] : null,
                                K = 0 < u.length ? u[0] : null;
                            for (; null !== R || null !== K; ) {
                                const he = v < i.length ? i[v + 1] : void 0,
                                    we = O < u.length ? u[O + 1] : void 0;
                                let lt,
                                    ze = null;
                                R === K
                                    ? ((v += 2),
                                      (O += 2),
                                      he !== we && ((ze = K), (lt = we)))
                                    : null === K || (null !== R && R < K)
                                    ? ((v += 2), (ze = R))
                                    : ((O += 2), (ze = K), (lt = we)),
                                    null !== ze && Yh(e, t, n, r, ze, lt, d, g),
                                    (R = v < i.length ? i[v] : null),
                                    (K = O < u.length ? u[O] : null);
                            }
                        })(
                            i,
                            g,
                            d,
                            d[11],
                            d[u + 1],
                            (d[u + 1] = (function Lv(e, t, n) {
                                if (null == n || '' === n) return te;
                                const r = [],
                                    i = xo(n);
                                if (Array.isArray(i))
                                    for (let u = 0; u < i.length; u++)
                                        e(r, i[u], !0);
                                else if ('object' == typeof i)
                                    for (const u in i)
                                        i.hasOwnProperty(u) && e(r, u, i[u]);
                                else 'string' == typeof i && t(r, i);
                                return r;
                            })(e, t, n)),
                            r,
                            u
                        );
                }
            }
            function Wh(e, t) {
                return t >= e.expandoStartIndex;
            }
            function zh(e, t, n, r) {
                const i = e.data;
                if (null === i[n + 1]) {
                    const u = i[Ir()],
                        d = Wh(e, n);
                    Qh(u, r) && null === t && !d && (t = !1),
                        (t = (function Rv(e, t, n, r) {
                            const i = (function yo(e) {
                                const t = Lt.lFrame.currentDirectiveIndex;
                                return -1 === t ? null : e[t];
                            })(e);
                            let u = r ? t.residualClasses : t.residualStyles;
                            if (null === i)
                                0 === (r ? t.classBindings : t.styleBindings) &&
                                    ((n = Qa(
                                        (n = fc(null, e, t, n, r)),
                                        t.attrs,
                                        r
                                    )),
                                    (u = null));
                            else {
                                const d = t.directiveStylingLast;
                                if (-1 === d || e[d] !== i)
                                    if (((n = fc(i, e, t, n, r)), null === u)) {
                                        let v = (function xv(e, t, n) {
                                            const r = n
                                                ? t.classBindings
                                                : t.styleBindings;
                                            if (0 !== po(r)) return e[Ms(r)];
                                        })(e, t, r);
                                        void 0 !== v &&
                                            Array.isArray(v) &&
                                            ((v = fc(null, e, t, v[1], r)),
                                            (v = Qa(v, t.attrs, r)),
                                            (function Fv(e, t, n, r) {
                                                e[
                                                    Ms(
                                                        n
                                                            ? t.classBindings
                                                            : t.styleBindings
                                                    )
                                                ] = r;
                                            })(e, t, r, v));
                                    } else
                                        u = (function Nv(e, t, n) {
                                            let r;
                                            const i = t.directiveEnd;
                                            for (
                                                let u =
                                                    1 + t.directiveStylingLast;
                                                u < i;
                                                u++
                                            )
                                                r = Qa(r, e[u].hostAttrs, n);
                                            return Qa(r, t.attrs, n);
                                        })(e, t, r);
                            }
                            return (
                                void 0 !== u &&
                                    (r
                                        ? (t.residualClasses = u)
                                        : (t.residualStyles = u)),
                                n
                            );
                        })(i, u, t, r)),
                        (function Cv(e, t, n, r, i, u) {
                            let d = u ? t.classBindings : t.styleBindings,
                                g = Ms(d),
                                v = po(d);
                            e[r] = n;
                            let R,
                                O = !1;
                            if (Array.isArray(n)) {
                                const K = n;
                                (R = K[1]),
                                    (null === R || Ys(K, R) > 0) && (O = !0);
                            } else R = n;
                            if (i)
                                if (0 !== v) {
                                    const he = Ms(e[g + 1]);
                                    (e[r + 1] = Cl(he, g)),
                                        0 !== he &&
                                            (e[he + 1] = Du(e[he + 1], r)),
                                        (e[g + 1] = (function Ly(e, t) {
                                            return (131071 & e) | (t << 17);
                                        })(e[g + 1], r));
                                } else
                                    (e[r + 1] = Cl(g, 0)),
                                        0 !== g && (e[g + 1] = Du(e[g + 1], r)),
                                        (g = r);
                            else
                                (e[r + 1] = Cl(v, 0)),
                                    0 === g
                                        ? (g = r)
                                        : (e[v + 1] = Du(e[v + 1], r)),
                                    (v = r);
                            O && (e[r + 1] = Eu(e[r + 1])),
                                Lh(e, R, r, !0),
                                Lh(e, R, r, !1),
                                (function bv(e, t, n, r, i) {
                                    const u = i
                                        ? e.residualClasses
                                        : e.residualStyles;
                                    null != u &&
                                        'string' == typeof t &&
                                        Ys(u, t) >= 0 &&
                                        (n[r + 1] = Cu(n[r + 1]));
                                })(t, R, e, r, u),
                                (d = Cl(g, v)),
                                u
                                    ? (t.classBindings = d)
                                    : (t.styleBindings = d);
                        })(i, u, t, n, d, r);
                }
            }
            function fc(e, t, n, r, i) {
                let u = null;
                const d = n.directiveEnd;
                let g = n.directiveStylingLast;
                for (
                    -1 === g ? (g = n.directiveStart) : g++;
                    g < d && ((u = t[g]), (r = Qa(r, u.hostAttrs, i)), u !== e);

                )
                    g++;
                return null !== e && (n.directiveStylingLast = g), r;
            }
            function Qa(e, t, n) {
                const r = n ? 1 : 2;
                let i = -1;
                if (null !== t)
                    for (let u = 0; u < t.length; u++) {
                        const d = t[u];
                        'number' == typeof d
                            ? (i = d)
                            : i === r &&
                              (Array.isArray(e) ||
                                  (e = void 0 === e ? [] : ['', e]),
                              Br(e, d, !!n || t[++u]));
                    }
                return void 0 === e ? null : e;
            }
            function Kh(e, t, n) {
                Br(e, t, xo(n));
            }
            function Yh(e, t, n, r, i, u, d, g) {
                if (!(3 & t.type)) return;
                const v = e.data,
                    O = v[g + 1];
                Pl(
                    (function Xd(e) {
                        return 1 == (1 & e);
                    })(O)
                        ? Zh(v, t, n, i, po(O), d)
                        : void 0
                ) ||
                    (Pl(u) ||
                        ((function Jd(e) {
                            return 2 == (2 & e);
                        })(O) &&
                            (u = Zh(v, null, n, i, g, d))),
                    (function Ty(e, t, n, r, i) {
                        const u = rn(e);
                        if (t)
                            i
                                ? u
                                    ? e.addClass(n, r)
                                    : n.classList.add(r)
                                : u
                                ? e.removeClass(n, r)
                                : n.classList.remove(r);
                        else {
                            let d =
                                -1 === r.indexOf('-') ? void 0 : Js.DashCase;
                            if (null == i)
                                u
                                    ? e.removeStyle(n, r, d)
                                    : n.style.removeProperty(r);
                            else {
                                const g =
                                    'string' == typeof i &&
                                    i.endsWith('!important');
                                g &&
                                    ((i = i.slice(0, -10)),
                                    (d |= Js.Important)),
                                    u
                                        ? e.setStyle(n, r, i, d)
                                        : n.style.setProperty(
                                              r,
                                              i,
                                              g ? 'important' : ''
                                          );
                            }
                        }
                    })(r, d, Ve(Ir(), n), i, u));
            }
            function Zh(e, t, n, r, i, u) {
                const d = null === t;
                let g;
                for (; i > 0; ) {
                    const v = e[i],
                        O = Array.isArray(v),
                        R = O ? v[1] : v,
                        K = null === R;
                    let he = n[i + 1];
                    he === cn && (he = K ? te : void 0);
                    let we = K ? Po(he, r) : R === r ? he : void 0;
                    if (
                        (O && !Pl(we) && (we = Po(v, r)),
                        Pl(we) && ((g = we), d))
                    )
                        return g;
                    const ze = e[i + 1];
                    i = d ? Ms(ze) : po(ze);
                }
                if (null !== t) {
                    let v = u ? t.residualClasses : t.residualStyles;
                    null != v && (g = Po(v, r));
                }
                return g;
            }
            function Pl(e) {
                return void 0 !== e;
            }
            function Qh(e, t) {
                return 0 != (e.flags & (t ? 16 : 32));
            }
            function qh(e, t = '') {
                const n = Ae(),
                    r = Tt(),
                    i = e + 20,
                    u = r.firstCreatePass ? sa(r, i, 1, t, null) : r.data[i],
                    d = (n[i] = (function fu(e, t) {
                        return rn(e) ? e.createText(t) : e.createTextNode(t);
                    })(n[11], t));
                El(r, n, d, u), Fn(u, !1);
            }
            function hc(e) {
                return Rl('', e, ''), hc;
            }
            function Rl(e, t, n) {
                const r = Ae(),
                    i = (function fa(e, t, n, r) {
                        return vi(e, Ci(), n) ? t + Z(n) + r : cn;
                    })(r, e, t, n);
                return i !== cn && go(r, Ir(), i), Rl;
            }
            const zo = void 0;
            var iE = [
                'en',
                [['a', 'p'], ['AM', 'PM'], zo],
                [['AM', 'PM'], zo, zo],
                [
                    ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
                    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                    [
                        'Sunday',
                        'Monday',
                        'Tuesday',
                        'Wednesday',
                        'Thursday',
                        'Friday',
                        'Saturday',
                    ],
                    ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                ],
                zo,
                [
                    [
                        'J',
                        'F',
                        'M',
                        'A',
                        'M',
                        'J',
                        'J',
                        'A',
                        'S',
                        'O',
                        'N',
                        'D',
                    ],
                    [
                        'Jan',
                        'Feb',
                        'Mar',
                        'Apr',
                        'May',
                        'Jun',
                        'Jul',
                        'Aug',
                        'Sep',
                        'Oct',
                        'Nov',
                        'Dec',
                    ],
                    [
                        'January',
                        'February',
                        'March',
                        'April',
                        'May',
                        'June',
                        'July',
                        'August',
                        'September',
                        'October',
                        'November',
                        'December',
                    ],
                ],
                zo,
                [
                    ['B', 'A'],
                    ['BC', 'AD'],
                    ['Before Christ', 'Anno Domini'],
                ],
                0,
                [6, 0],
                ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
                ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
                ['{1}, {0}', zo, "{1} 'at' {0}", zo],
                [
                    '.',
                    ',',
                    ';',
                    '%',
                    '+',
                    '-',
                    'E',
                    '\xd7',
                    '\u2030',
                    '\u221e',
                    'NaN',
                    ':',
                ],
                ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
                'USD',
                '$',
                'US Dollar',
                {},
                'ltr',
                function rE(e) {
                    const n = Math.floor(Math.abs(e)),
                        r = e.toString().replace(/^[^.]*\.?/, '').length;
                    return 1 === n && 0 === r ? 1 : 5;
                },
            ];
            let Ca = {};
            function pc(e) {
                const t = (function sE(e) {
                    return e.toLowerCase().replace(/_/g, '-');
                })(e);
                let n = _p(t);
                if (n) return n;
                const r = t.split('-')[0];
                if (((n = _p(r)), n)) return n;
                if ('en' === r) return iE;
                throw new Error(`Missing locale data for the locale "${e}".`);
            }
            function yp(e) {
                return pc(e)[Qt.PluralCase];
            }
            function _p(e) {
                return (
                    e in Ca ||
                        (Ca[e] =
                            nn.ng &&
                            nn.ng.common &&
                            nn.ng.common.locales &&
                            nn.ng.common.locales[e]),
                    Ca[e]
                );
            }
            var Qt = (() => (
                ((Qt = Qt || {})[(Qt.LocaleId = 0)] = 'LocaleId'),
                (Qt[(Qt.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
                (Qt[(Qt.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
                (Qt[(Qt.DaysFormat = 3)] = 'DaysFormat'),
                (Qt[(Qt.DaysStandalone = 4)] = 'DaysStandalone'),
                (Qt[(Qt.MonthsFormat = 5)] = 'MonthsFormat'),
                (Qt[(Qt.MonthsStandalone = 6)] = 'MonthsStandalone'),
                (Qt[(Qt.Eras = 7)] = 'Eras'),
                (Qt[(Qt.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
                (Qt[(Qt.WeekendRange = 9)] = 'WeekendRange'),
                (Qt[(Qt.DateFormat = 10)] = 'DateFormat'),
                (Qt[(Qt.TimeFormat = 11)] = 'TimeFormat'),
                (Qt[(Qt.DateTimeFormat = 12)] = 'DateTimeFormat'),
                (Qt[(Qt.NumberSymbols = 13)] = 'NumberSymbols'),
                (Qt[(Qt.NumberFormats = 14)] = 'NumberFormats'),
                (Qt[(Qt.CurrencyCode = 15)] = 'CurrencyCode'),
                (Qt[(Qt.CurrencySymbol = 16)] = 'CurrencySymbol'),
                (Qt[(Qt.CurrencyName = 17)] = 'CurrencyName'),
                (Qt[(Qt.Currencies = 18)] = 'Currencies'),
                (Qt[(Qt.Directionality = 19)] = 'Directionality'),
                (Qt[(Qt.PluralCase = 20)] = 'PluralCase'),
                (Qt[(Qt.ExtraData = 21)] = 'ExtraData'),
                Qt
            ))();
            const xl = 'en-US';
            let vp = xl;
            function yc(e, t, n, r, i) {
                if (((e = Q(e)), Array.isArray(e)))
                    for (let u = 0; u < e.length; u++) yc(e[u], t, n, r, i);
                else {
                    const u = Tt(),
                        d = Ae();
                    let g = ua(e) ? e : Q(e.provide),
                        v = Ff(e);
                    const O = Rn(),
                        R = 1048575 & O.providerIndexes,
                        K = O.directiveStart,
                        he = O.providerIndexes >> 20;
                    if (ua(e) || !e.multi) {
                        const we = new Ti(v, i, Za),
                            ze = vc(g, t, i ? R : R + he, K);
                        -1 === ze
                            ? (f(Ki(O, d), u, g),
                              _c(u, e, t.length),
                              t.push(g),
                              O.directiveStart++,
                              O.directiveEnd++,
                              i && (O.providerIndexes += 1048576),
                              n.push(we),
                              d.push(we))
                            : ((n[ze] = we), (d[ze] = we));
                    } else {
                        const we = vc(g, t, R + he, K),
                            ze = vc(g, t, R, R + he),
                            lt = we >= 0 && n[we],
                            pt = ze >= 0 && n[ze];
                        if ((i && !pt) || (!i && !lt)) {
                            f(Ki(O, d), u, g);
                            const St = (function rD(e, t, n, r, i) {
                                const u = new Ti(e, n, Za);
                                return (
                                    (u.multi = []),
                                    (u.index = t),
                                    (u.componentProviders = 0),
                                    $p(u, i, r && !n),
                                    u
                                );
                            })(i ? nD : tD, n.length, i, r, v);
                            !i && pt && (n[ze].providerFactory = St),
                                _c(u, e, t.length, 0),
                                t.push(g),
                                O.directiveStart++,
                                O.directiveEnd++,
                                i && (O.providerIndexes += 1048576),
                                n.push(St),
                                d.push(St);
                        } else
                            _c(
                                u,
                                e,
                                we > -1 ? we : ze,
                                $p(n[i ? ze : we], v, !i && r)
                            );
                        !i && r && pt && n[ze].componentProviders++;
                    }
                }
            }
            function _c(e, t, n, r) {
                const i = ua(t),
                    u = (function M_(e) {
                        return !!e.useClass;
                    })(t);
                if (i || u) {
                    const v = (u ? Q(t.useClass) : t).prototype.ngOnDestroy;
                    if (v) {
                        const O = e.destroyHooks || (e.destroyHooks = []);
                        if (!i && t.multi) {
                            const R = O.indexOf(n);
                            -1 === R ? O.push(n, [r, v]) : O[R + 1].push(r, v);
                        } else O.push(n, v);
                    }
                }
            }
            function $p(e, t, n) {
                return n && e.componentProviders++, e.multi.push(t) - 1;
            }
            function vc(e, t, n, r) {
                for (let i = n; i < r; i++) if (t[i] === e) return i;
                return -1;
            }
            function tD(e, t, n, r) {
                return Ec(this.multi, []);
            }
            function nD(e, t, n, r) {
                const i = this.multi;
                let u;
                if (this.providerFactory) {
                    const d = this.providerFactory.componentProviders,
                        g = It(n, n[1], this.providerFactory.index, r);
                    (u = g.slice(0, d)), Ec(i, u);
                    for (let v = d; v < g.length; v++) u.push(g[v]);
                } else (u = []), Ec(i, u);
                return u;
            }
            function Ec(e, t) {
                for (let n = 0; n < e.length; n++) t.push((0, e[n])());
                return t;
            }
            function Gp(e, t = []) {
                return (n) => {
                    n.providersResolver = (r, i) =>
                        (function eD(e, t, n) {
                            const r = Tt();
                            if (r.firstCreatePass) {
                                const i = Xt(e);
                                yc(n, r.data, r.blueprint, i, !0),
                                    yc(t, r.data, r.blueprint, i, !1);
                            }
                        })(r, i ? i(e) : e, t);
                };
            }
            class Wp {}
            class oD {
                resolveComponentFactory(t) {
                    throw (function sD(e) {
                        const t = Error(
                            `No component factory found for ${W(
                                e
                            )}. Did you add it to @NgModule.entryComponents?`
                        );
                        return (t.ngComponent = e), t;
                    })(t);
                }
            }
            let tl = (() => {
                class e {}
                return (e.NULL = new oD()), e;
            })();
            function aD() {
                return Ta(Rn(), Ae());
            }
            function Ta(e, t) {
                return new nl(Ke(e, t));
            }
            let nl = (() => {
                class e {
                    constructor(n) {
                        this.nativeElement = n;
                    }
                }
                return (e.__NG_ELEMENT_ID__ = aD), e;
            })();
            function lD(e) {
                return e instanceof nl ? e.nativeElement : e;
            }
            class Kp {}
            let uD = (() => {
                    class e {}
                    return (
                        (e.__NG_ELEMENT_ID__ = () =>
                            (function dD() {
                                const e = Ae(),
                                    n = tn(Rn().index, e);
                                return (function cD(e) {
                                    return e[11];
                                })(Je(n) ? n : e);
                            })()),
                        e
                    );
                })(),
                fD = (() => {
                    class e {}
                    return (
                        (e.ɵprov = mt({
                            token: e,
                            providedIn: 'root',
                            factory: () => null,
                        })),
                        e
                    );
                })();
            class Yp {
                constructor(t) {
                    (this.full = t),
                        (this.major = t.split('.')[0]),
                        (this.minor = t.split('.')[1]),
                        (this.patch = t.split('.').slice(2).join('.'));
                }
            }
            const Zp = new Yp('13.2.1'),
                Dc = {};
            function Bl(e, t, n, r, i = !1) {
                for (; null !== n; ) {
                    const u = t[n.index];
                    if ((null !== u && r.push(b(u)), Nt(u)))
                        for (let g = 10; g < u.length; g++) {
                            const v = u[g],
                                O = v[1].firstChild;
                            null !== O && Bl(v[1], v, O, r);
                        }
                    const d = n.type;
                    if (8 & d) Bl(e, t, n.child, r);
                    else if (32 & d) {
                        const g = uu(n, t);
                        let v;
                        for (; (v = g()); ) r.push(v);
                    } else if (16 & d) {
                        const g = Ud(t, n);
                        if (Array.isArray(g)) r.push(...g);
                        else {
                            const v = Ha(t[16]);
                            Bl(v[1], v, g, r, !0);
                        }
                    }
                    n = i ? n.projectionNext : n.next;
                }
                return r;
            }
            class rl {
                constructor(t, n) {
                    (this._lView = t),
                        (this._cdRefInjectingView = n),
                        (this._appRef = null),
                        (this._attachedToViewContainer = !1);
                }
                get rootNodes() {
                    const t = this._lView,
                        n = t[1];
                    return Bl(n, t, n.firstChild, []);
                }
                get context() {
                    return this._lView[8];
                }
                set context(t) {
                    this._lView[8] = t;
                }
                get destroyed() {
                    return 256 == (256 & this._lView[2]);
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const t = this._lView[3];
                        if (Nt(t)) {
                            const n = t[8],
                                r = n ? n.indexOf(this) : -1;
                            r > -1 && (pu(t, r), zs(n, r));
                        }
                        this._attachedToViewContainer = !1;
                    }
                    Pd(this._lView[1], this._lView);
                }
                onDestroy(t) {
                    gf(this._lView[1], this._lView, null, t);
                }
                markForCheck() {
                    ku(this._cdRefInjectingView || this._lView);
                }
                detach() {
                    this._lView[2] &= -129;
                }
                reattach() {
                    this._lView[2] |= 128;
                }
                detectChanges() {
                    Vu(this._lView[1], this._lView, this.context);
                }
                checkNoChanges() {
                    !(function __(e, t, n) {
                        ss(!0);
                        try {
                            Vu(e, t, n);
                        } finally {
                            ss(!1);
                        }
                    })(this._lView[1], this._lView, this.context);
                }
                attachToViewContainerRef() {
                    if (this._appRef) throw new _e(902, '');
                    this._attachedToViewContainer = !0;
                }
                detachFromAppRef() {
                    (this._appRef = null),
                        (function py(e, t) {
                            $a(e, t, t[11], 2, null, null);
                        })(this._lView[1], this._lView);
                }
                attachToAppRef(t) {
                    if (this._attachedToViewContainer) throw new _e(902, '');
                    this._appRef = t;
                }
            }
            class hD extends rl {
                constructor(t) {
                    super(t), (this._view = t);
                }
                detectChanges() {
                    Tf(this._view);
                }
                checkNoChanges() {
                    !(function v_(e) {
                        ss(!0);
                        try {
                            Tf(e);
                        } finally {
                            ss(!1);
                        }
                    })(this._view);
                }
                get context() {
                    return null;
                }
            }
            class Qp extends tl {
                constructor(t) {
                    super(), (this.ngModule = t);
                }
                resolveComponentFactory(t) {
                    const n = Zt(t);
                    return new Cc(n, this.ngModule);
                }
            }
            function qp(e) {
                const t = [];
                for (let n in e)
                    e.hasOwnProperty(n) &&
                        t.push({ propName: e[n], templateName: n });
                return t;
            }
            const gD = new cr('SCHEDULER_TOKEN', {
                providedIn: 'root',
                factory: () => bd,
            });
            class Cc extends Wp {
                constructor(t, n) {
                    super(),
                        (this.componentDef = t),
                        (this.ngModule = n),
                        (this.componentType = t.type),
                        (this.selector = (function Fy(e) {
                            return e.map(xy).join(',');
                        })(t.selectors)),
                        (this.ngContentSelectors = t.ngContentSelectors
                            ? t.ngContentSelectors
                            : []),
                        (this.isBoundToModule = !!n);
                }
                get inputs() {
                    return qp(this.componentDef.inputs);
                }
                get outputs() {
                    return qp(this.componentDef.outputs);
                }
                create(t, n, r, i) {
                    const u = (i = i || this.ngModule)
                            ? (function mD(e, t) {
                                  return {
                                      get: (n, r, i) => {
                                          const u = e.get(n, Dc, i);
                                          return u !== Dc || r === Dc
                                              ? u
                                              : t.get(n, r, i);
                                      },
                                  };
                              })(t, i.injector)
                            : t,
                        d = u.get(Kp, T),
                        g = u.get(fD, null),
                        v = d.createRenderer(null, this.componentDef),
                        O = this.componentDef.selectors[0][0] || 'div',
                        R = r
                            ? (function pf(e, t, n) {
                                  if (rn(e))
                                      return e.selectRootElement(
                                          t,
                                          n === Ft.ShadowDom
                                      );
                                  let r =
                                      'string' == typeof t
                                          ? e.querySelector(t)
                                          : t;
                                  return (r.textContent = ''), r;
                              })(v, r, this.componentDef.encapsulation)
                            : hu(
                                  d.createRenderer(null, this.componentDef),
                                  O,
                                  (function pD(e) {
                                      const t = e.toLowerCase();
                                      return 'svg' === t
                                          ? 'svg'
                                          : 'math' === t
                                          ? 'math'
                                          : null;
                                  })(O)
                              ),
                        K = this.componentDef.onPush ? 576 : 528,
                        he = (function zf(e, t) {
                            return {
                                components: [],
                                scheduler: e || bd,
                                clean: E_,
                                playerHandler: t || null,
                                flags: 0,
                            };
                        })(),
                        we = Al(
                            0,
                            null,
                            null,
                            1,
                            0,
                            null,
                            null,
                            null,
                            null,
                            null
                        ),
                        ze = Ga(null, we, he, K, null, null, d, v, g, u);
                    let lt, pt;
                    _s(ze);
                    try {
                        const St = (function Gf(e, t, n, r, i, u) {
                            const d = n[1];
                            n[20] = e;
                            const v = sa(d, 20, 2, '#host', null),
                                O = (v.mergedAttrs = t.hostAttrs);
                            null !== O &&
                                (Sl(v, O, !0),
                                null !== e &&
                                    (ur(i, e, O),
                                    null !== v.classes && vu(i, e, v.classes),
                                    null !== v.styles && $d(i, e, v.styles)));
                            const R = r.createRenderer(e, t),
                                K = Ga(
                                    n,
                                    ff(t),
                                    null,
                                    t.onPush ? 64 : 16,
                                    n[20],
                                    v,
                                    r,
                                    R,
                                    u || null,
                                    null
                                );
                            return (
                                d.firstCreatePass &&
                                    (f(Ki(v, n), d, t.type),
                                    Ef(d, v),
                                    Df(v, n.length, 1)),
                                wl(n, K),
                                (n[20] = K)
                            );
                        })(R, this.componentDef, ze, d, v);
                        if (R)
                            if (r) ur(v, R, ['ng-version', Zp.full]);
                            else {
                                const { attrs: qe, classes: $t } = (function Ny(
                                    e
                                ) {
                                    const t = [],
                                        n = [];
                                    let r = 1,
                                        i = 2;
                                    for (; r < e.length; ) {
                                        let u = e[r];
                                        if ('string' == typeof u)
                                            2 === i
                                                ? '' !== u && t.push(u, e[++r])
                                                : 8 === i && n.push(u);
                                        else {
                                            if (!Is(i)) break;
                                            i = u;
                                        }
                                        r++;
                                    }
                                    return { attrs: t, classes: n };
                                })(this.componentDef.selectors[0]);
                                qe && ur(v, R, qe),
                                    $t &&
                                        $t.length > 0 &&
                                        vu(v, R, $t.join(' '));
                            }
                        if (((pt = Ut(we, 20)), void 0 !== n)) {
                            const qe = (pt.projection = []);
                            for (
                                let $t = 0;
                                $t < this.ngContentSelectors.length;
                                $t++
                            ) {
                                const xn = n[$t];
                                qe.push(null != xn ? Array.from(xn) : null);
                            }
                        }
                        (lt = (function Wf(e, t, n, r, i) {
                            const u = n[1],
                                d = (function n_(e, t, n) {
                                    const r = Rn();
                                    e.firstCreatePass &&
                                        (n.providersResolver &&
                                            n.providersResolver(n),
                                        Cf(e, r, t, oa(e, t, 1, null), n));
                                    const i = It(t, e, r.directiveStart, r);
                                    _i(i, t);
                                    const u = Ke(r, t);
                                    return u && _i(u, t), i;
                                })(u, n, t);
                            if (
                                (r.components.push(d),
                                (e[8] = d),
                                i && i.forEach((v) => v(d, t)),
                                t.contentQueries)
                            ) {
                                const v = Rn();
                                t.contentQueries(1, d, v.directiveStart);
                            }
                            const g = Rn();
                            return (
                                !u.firstCreatePass ||
                                    (null === t.hostBindings &&
                                        null === t.hostAttrs) ||
                                    (bi(g.index),
                                    _f(
                                        n[1],
                                        g,
                                        0,
                                        g.directiveStart,
                                        g.directiveEnd,
                                        t
                                    ),
                                    vf(t, d)),
                                d
                            );
                        })(St, this.componentDef, ze, he, [U_])),
                            Wa(we, ze, null);
                    } finally {
                        vs();
                    }
                    return new _D(this.componentType, lt, Ta(pt, ze), ze, pt);
                }
            }
            class _D extends class iD {} {
                constructor(t, n, r, i, u) {
                    super(),
                        (this.location = r),
                        (this._rootLView = i),
                        (this._tNode = u),
                        (this.instance = n),
                        (this.hostView = this.changeDetectorRef = new hD(i)),
                        (this.componentType = t);
                }
                get injector() {
                    return new kr(this._tNode, this._rootLView);
                }
                destroy() {
                    this.hostView.destroy();
                }
                onDestroy(t) {
                    this.hostView.onDestroy(t);
                }
            }
            class Aa {}
            class Jp {}
            const wa = new Map();
            class tg extends Aa {
                constructor(t, n) {
                    super(),
                        (this._parent = n),
                        (this._bootstrapComponents = []),
                        (this.injector = this),
                        (this.destroyCbs = []),
                        (this.componentFactoryResolver = new Qp(this));
                    const r = vn(t);
                    (this._bootstrapComponents = qs(r.bootstrap)),
                        (this._r3Injector = xf(
                            t,
                            n,
                            [
                                { provide: Aa, useValue: this },
                                {
                                    provide: tl,
                                    useValue: this.componentFactoryResolver,
                                },
                            ],
                            W(t)
                        )),
                        this._r3Injector._resolveInjectorDefTypes(),
                        (this.instance = this.get(t));
                }
                get(t, n = ps.THROW_IF_NOT_FOUND, r = We.Default) {
                    return t === ps || t === Aa || t === ju
                        ? this
                        : this._r3Injector.get(t, n, r);
                }
                destroy() {
                    const t = this._r3Injector;
                    !t.destroyed && t.destroy(),
                        this.destroyCbs.forEach((n) => n()),
                        (this.destroyCbs = null);
                }
                onDestroy(t) {
                    this.destroyCbs.push(t);
                }
            }
            class bc extends Jp {
                constructor(t) {
                    super(),
                        (this.moduleType = t),
                        null !== vn(t) &&
                            (function ED(e) {
                                const t = new Set();
                                !(function n(r) {
                                    const i = vn(r, !0),
                                        u = i.id;
                                    null !== u &&
                                        ((function Xp(e, t, n) {
                                            if (t && t !== n)
                                                throw new Error(
                                                    `Duplicate module registered for ${e} - ${W(
                                                        t
                                                    )} vs ${W(t.name)}`
                                                );
                                        })(u, wa.get(u), r),
                                        wa.set(u, r));
                                    const d = qs(i.imports);
                                    for (const g of d)
                                        t.has(g) || (t.add(g), n(g));
                                })(e);
                            })(t);
                }
                create(t) {
                    return new tg(this.moduleType, t);
                }
            }
            function ng(e, t, n) {
                const r = Sr() + e,
                    i = Ae();
                return i[r] === cn ? eo(i, r, n ? t.call(n) : t()) : Ya(i, r);
            }
            function rg(e, t, n, r) {
                return ag(Ae(), Sr(), e, t, n, r);
            }
            function ig(e, t, n, r, i) {
                return (function lg(e, t, n, r, i, u, d) {
                    const g = t + n;
                    return Wo(e, g, i, u)
                        ? eo(e, g + 2, d ? r.call(d, i, u) : r(i, u))
                        : il(e, g + 2);
                })(Ae(), Sr(), e, t, n, r, i);
            }
            function sg(e, t, n, r, i, u, d) {
                return (function cg(e, t, n, r, i, u, d, g, v) {
                    const O = t + n;
                    return gs(e, O, i, u, d, g)
                        ? eo(
                              e,
                              O + 4,
                              v ? r.call(v, i, u, d, g) : r(i, u, d, g)
                          )
                        : il(e, O + 4);
                })(Ae(), Sr(), e, t, n, r, i, u, d);
            }
            function og(e, t, n, r, i, u, d, g) {
                const v = Sr() + e,
                    O = Ae(),
                    R = gs(O, v, n, r, i, u);
                return vi(O, v + 4, d) || R
                    ? eo(
                          O,
                          v + 5,
                          g ? t.call(g, n, r, i, u, d) : t(n, r, i, u, d)
                      )
                    : Ya(O, v + 5);
            }
            function il(e, t) {
                const n = e[t];
                return n === cn ? void 0 : n;
            }
            function ag(e, t, n, r, i, u) {
                const d = t + n;
                return vi(e, d, i)
                    ? eo(e, d + 1, u ? r.call(u, i) : r(i))
                    : il(e, d + 1);
            }
            function fg(e, t) {
                const n = Tt();
                let r;
                const i = e + 20;
                n.firstCreatePass
                    ? ((r = (function wD(e, t) {
                          if (t)
                              for (let n = t.length - 1; n >= 0; n--) {
                                  const r = t[n];
                                  if (e === r.name) return r;
                              }
                      })(t, n.pipeRegistry)),
                      (n.data[i] = r),
                      r.onDestroy &&
                          (n.destroyHooks || (n.destroyHooks = [])).push(
                              i,
                              r.onDestroy
                          ))
                    : (r = n.data[i]);
                const u = r.factory || (r.factory = ri(r.type)),
                    d = xt(Za);
                try {
                    const g = Ts(!1),
                        v = u();
                    return (
                        Ts(g),
                        (function J_(e, t, n, r) {
                            n >= e.data.length &&
                                ((e.data[n] = null), (e.blueprint[n] = null)),
                                (t[n] = r);
                        })(n, Ae(), i, v),
                        v
                    );
                } finally {
                    xt(d);
                }
            }
            function hg(e, t, n) {
                const r = e + 20,
                    i = Ae(),
                    u = Cn(i, r);
                return (function sl(e, t) {
                    return e[1].data[t].pure;
                })(i, r)
                    ? ag(i, Sr(), t, u.transform, n, u)
                    : u.transform(n);
            }
            function Tc(e) {
                return (t) => {
                    setTimeout(e, void 0, t);
                };
            }
            const no = class PD extends l.x {
                constructor(t = !1) {
                    super(), (this.__isAsync = t);
                }
                emit(t) {
                    super.next(t);
                }
                subscribe(t, n, r) {
                    var i, u, d;
                    let g = t,
                        v = n || (() => null),
                        O = r;
                    if (t && 'object' == typeof t) {
                        const K = t;
                        (g =
                            null === (i = K.next) || void 0 === i
                                ? void 0
                                : i.bind(K)),
                            (v =
                                null === (u = K.error) || void 0 === u
                                    ? void 0
                                    : u.bind(K)),
                            (O =
                                null === (d = K.complete) || void 0 === d
                                    ? void 0
                                    : d.bind(K));
                    }
                    this.__isAsync &&
                        ((v = Tc(v)), g && (g = Tc(g)), O && (O = Tc(O)));
                    const R = super.subscribe({
                        next: g,
                        error: v,
                        complete: O,
                    });
                    return t instanceof w.w0 && t.add(R), R;
                }
            };
            function RD() {
                return this._results[ca()]();
            }
            class Ac {
                constructor(t = !1) {
                    (this._emitDistinctChangesOnly = t),
                        (this.dirty = !0),
                        (this._results = []),
                        (this._changesDetected = !1),
                        (this._changes = null),
                        (this.length = 0),
                        (this.first = void 0),
                        (this.last = void 0);
                    const n = ca(),
                        r = Ac.prototype;
                    r[n] || (r[n] = RD);
                }
                get changes() {
                    return this._changes || (this._changes = new no());
                }
                get(t) {
                    return this._results[t];
                }
                map(t) {
                    return this._results.map(t);
                }
                filter(t) {
                    return this._results.filter(t);
                }
                find(t) {
                    return this._results.find(t);
                }
                reduce(t, n) {
                    return this._results.reduce(t, n);
                }
                forEach(t) {
                    this._results.forEach(t);
                }
                some(t) {
                    return this._results.some(t);
                }
                toArray() {
                    return this._results.slice();
                }
                toString() {
                    return this._results.toString();
                }
                reset(t, n) {
                    const r = this;
                    r.dirty = !1;
                    const i = ai(t);
                    (this._changesDetected = !(function Pa(e, t, n) {
                        if (e.length !== t.length) return !1;
                        for (let r = 0; r < e.length; r++) {
                            let i = e[r],
                                u = t[r];
                            if ((n && ((i = n(i)), (u = n(u))), u !== i))
                                return !1;
                        }
                        return !0;
                    })(r._results, i, n)) &&
                        ((r._results = i),
                        (r.length = i.length),
                        (r.last = i[this.length - 1]),
                        (r.first = i[0]));
                }
                notifyOnChanges() {
                    this._changes &&
                        (this._changesDetected ||
                            !this._emitDistinctChangesOnly) &&
                        this._changes.emit(this);
                }
                setDirty() {
                    this.dirty = !0;
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe();
                }
            }
            Symbol;
            let ol = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = ND), e;
            })();
            const xD = ol,
                FD = class extends xD {
                    constructor(t, n, r) {
                        super(),
                            (this._declarationLView = t),
                            (this._declarationTContainer = n),
                            (this.elementRef = r);
                    }
                    createEmbeddedView(t) {
                        const n = this._declarationTContainer.tViews,
                            r = Ga(
                                this._declarationLView,
                                n,
                                t,
                                16,
                                null,
                                n.declTNode,
                                null,
                                null,
                                null,
                                null
                            );
                        r[17] =
                            this._declarationLView[
                                this._declarationTContainer.index
                            ];
                        const u = this._declarationLView[19];
                        return (
                            null !== u && (r[19] = u.createEmbeddedView(n)),
                            Wa(n, r, t),
                            new rl(r)
                        );
                    }
                };
            function ND() {
                return Vl(Rn(), Ae());
            }
            function Vl(e, t) {
                return 4 & e.type ? new FD(t, e, Ta(e, t)) : null;
            }
            let Ul = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = LD), e;
            })();
            function LD() {
                return mg(Rn(), Ae());
            }
            const kD = Ul,
                pg = class extends kD {
                    constructor(t, n, r) {
                        super(),
                            (this._lContainer = t),
                            (this._hostTNode = n),
                            (this._hostLView = r);
                    }
                    get element() {
                        return Ta(this._hostTNode, this._hostLView);
                    }
                    get injector() {
                        return new kr(this._hostTNode, this._hostLView);
                    }
                    get parentInjector() {
                        const t = h(this._hostTNode, this._hostLView);
                        if (uo(t)) {
                            const n = zi(t, this._hostLView),
                                r = cs(t);
                            return new kr(n[1].data[r + 8], n);
                        }
                        return new kr(null, this._hostLView);
                    }
                    clear() {
                        for (; this.length > 0; ) this.remove(this.length - 1);
                    }
                    get(t) {
                        const n = gg(this._lContainer);
                        return (null !== n && n[t]) || null;
                    }
                    get length() {
                        return this._lContainer.length - 10;
                    }
                    createEmbeddedView(t, n, r) {
                        const i = t.createEmbeddedView(n || {});
                        return this.insert(i, r), i;
                    }
                    createComponent(t, n, r, i, u) {
                        const d =
                            t &&
                            !(function Mo(e) {
                                return 'function' == typeof e;
                            })(t);
                        let g;
                        if (d) g = n;
                        else {
                            const K = n || {};
                            (g = K.index),
                                (r = K.injector),
                                (i = K.projectableNodes),
                                (u = K.ngModuleRef);
                        }
                        const v = d ? t : new Cc(Zt(t)),
                            O = r || this.parentInjector;
                        if (!u && null == v.ngModule && O) {
                            const K = O.get(Aa, null);
                            K && (u = K);
                        }
                        const R = v.create(O, i, void 0, u);
                        return this.insert(R.hostView, g), R;
                    }
                    insert(t, n) {
                        const r = t._lView,
                            i = r[1];
                        if (
                            (function Pn(e) {
                                return Nt(e[3]);
                            })(r)
                        ) {
                            const R = this.indexOf(t);
                            if (-1 !== R) this.detach(R);
                            else {
                                const K = r[3],
                                    he = new pg(K, K[6], K[3]);
                                he.detach(he.indexOf(t));
                            }
                        }
                        const u = this._adjustIndex(n),
                            d = this._lContainer;
                        !(function my(e, t, n, r) {
                            const i = 10 + r,
                                u = n.length;
                            r > 0 && (n[i - 1][4] = t),
                                r < u - 10
                                    ? ((t[4] = n[i]), Oo(n, 10 + r, t))
                                    : (n.push(t), (t[4] = null)),
                                (t[3] = n);
                            const d = t[17];
                            null !== d &&
                                n !== d &&
                                (function yy(e, t) {
                                    const n = e[9];
                                    t[16] !== t[3][3][16] && (e[2] = !0),
                                        null === n ? (e[9] = [t]) : n.push(t);
                                })(d, t);
                            const g = t[19];
                            null !== g && g.insertView(e), (t[2] |= 128);
                        })(i, r, d, u);
                        const g = yu(u, d),
                            v = r[11],
                            O = vl(v, d[7]);
                        return (
                            null !== O &&
                                (function hy(e, t, n, r, i, u) {
                                    (r[0] = i),
                                        (r[6] = t),
                                        $a(e, r, n, 1, i, u);
                                })(i, d[6], v, r, O, g),
                            t.attachToViewContainerRef(),
                            Oo(wc(d), u, t),
                            t
                        );
                    }
                    move(t, n) {
                        return this.insert(t, n);
                    }
                    indexOf(t) {
                        const n = gg(this._lContainer);
                        return null !== n ? n.indexOf(t) : -1;
                    }
                    remove(t) {
                        const n = this._adjustIndex(t, -1),
                            r = pu(this._lContainer, n);
                        r && (zs(wc(this._lContainer), n), Pd(r[1], r));
                    }
                    detach(t) {
                        const n = this._adjustIndex(t, -1),
                            r = pu(this._lContainer, n);
                        return r && null != zs(wc(this._lContainer), n)
                            ? new rl(r)
                            : null;
                    }
                    _adjustIndex(t, n = 0) {
                        return null == t ? this.length + n : t;
                    }
                };
            function gg(e) {
                return e[8];
            }
            function wc(e) {
                return e[8] || (e[8] = []);
            }
            function mg(e, t) {
                let n;
                const r = t[e.index];
                if (Nt(r)) n = r;
                else {
                    let i;
                    if (8 & e.type) i = b(r);
                    else {
                        const u = t[11];
                        i = u.createComment('');
                        const d = Ke(e, t);
                        Go(
                            u,
                            vl(u, d),
                            i,
                            (function Dy(e, t) {
                                return rn(e) ? e.nextSibling(t) : t.nextSibling;
                            })(u, d),
                            !1
                        );
                    }
                    (t[e.index] = n = bf(r, t, i, e)), wl(t, n);
                }
                return new pg(n, e, t);
            }
            class Sc {
                constructor(t) {
                    (this.queryList = t), (this.matches = null);
                }
                clone() {
                    return new Sc(this.queryList);
                }
                setDirty() {
                    this.queryList.setDirty();
                }
            }
            class Ic {
                constructor(t = []) {
                    this.queries = t;
                }
                createEmbeddedView(t) {
                    const n = t.queries;
                    if (null !== n) {
                        const r =
                                null !== t.contentQueries
                                    ? t.contentQueries[0]
                                    : n.length,
                            i = [];
                        for (let u = 0; u < r; u++) {
                            const d = n.getByIndex(u);
                            i.push(
                                this.queries[d.indexInDeclarationView].clone()
                            );
                        }
                        return new Ic(i);
                    }
                    return null;
                }
                insertView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                detachView(t) {
                    this.dirtyQueriesWithMatches(t);
                }
                dirtyQueriesWithMatches(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        null !== Ag(t, n).matches && this.queries[n].setDirty();
                }
            }
            class yg {
                constructor(t, n, r = null) {
                    (this.predicate = t), (this.flags = n), (this.read = r);
                }
            }
            class Mc {
                constructor(t = []) {
                    this.queries = t;
                }
                elementStart(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].elementStart(t, n);
                }
                elementEnd(t) {
                    for (let n = 0; n < this.queries.length; n++)
                        this.queries[n].elementEnd(t);
                }
                embeddedTView(t) {
                    let n = null;
                    for (let r = 0; r < this.length; r++) {
                        const i = null !== n ? n.length : 0,
                            u = this.getByIndex(r).embeddedTView(t, i);
                        u &&
                            ((u.indexInDeclarationView = r),
                            null !== n ? n.push(u) : (n = [u]));
                    }
                    return null !== n ? new Mc(n) : null;
                }
                template(t, n) {
                    for (let r = 0; r < this.queries.length; r++)
                        this.queries[r].template(t, n);
                }
                getByIndex(t) {
                    return this.queries[t];
                }
                get length() {
                    return this.queries.length;
                }
                track(t) {
                    this.queries.push(t);
                }
            }
            class Oc {
                constructor(t, n = -1) {
                    (this.metadata = t),
                        (this.matches = null),
                        (this.indexInDeclarationView = -1),
                        (this.crossesNgTemplate = !1),
                        (this._appliesToNextNode = !0),
                        (this._declarationNodeIndex = n);
                }
                elementStart(t, n) {
                    this.isApplyingToNode(n) && this.matchTNode(t, n);
                }
                elementEnd(t) {
                    this._declarationNodeIndex === t.index &&
                        (this._appliesToNextNode = !1);
                }
                template(t, n) {
                    this.elementStart(t, n);
                }
                embeddedTView(t, n) {
                    return this.isApplyingToNode(t)
                        ? ((this.crossesNgTemplate = !0),
                          this.addMatch(-t.index, n),
                          new Oc(this.metadata))
                        : null;
                }
                isApplyingToNode(t) {
                    if (
                        this._appliesToNextNode &&
                        1 != (1 & this.metadata.flags)
                    ) {
                        const n = this._declarationNodeIndex;
                        let r = t.parent;
                        for (; null !== r && 8 & r.type && r.index !== n; )
                            r = r.parent;
                        return n === (null !== r ? r.index : -1);
                    }
                    return this._appliesToNextNode;
                }
                matchTNode(t, n) {
                    const r = this.metadata.predicate;
                    if (Array.isArray(r))
                        for (let i = 0; i < r.length; i++) {
                            const u = r[i];
                            this.matchTNodeWithReadOption(t, n, UD(n, u)),
                                this.matchTNodeWithReadOption(
                                    t,
                                    n,
                                    Yt(n, t, u, !1, !1)
                                );
                        }
                    else
                        r === ol
                            ? 4 & n.type &&
                              this.matchTNodeWithReadOption(t, n, -1)
                            : this.matchTNodeWithReadOption(
                                  t,
                                  n,
                                  Yt(n, t, r, !1, !1)
                              );
                }
                matchTNodeWithReadOption(t, n, r) {
                    if (null !== r) {
                        const i = this.metadata.read;
                        if (null !== i)
                            if (
                                i === nl ||
                                i === Ul ||
                                (i === ol && 4 & n.type)
                            )
                                this.addMatch(n.index, -2);
                            else {
                                const u = Yt(n, t, i, !1, !1);
                                null !== u && this.addMatch(n.index, u);
                            }
                        else this.addMatch(n.index, r);
                    }
                }
                addMatch(t, n) {
                    null === this.matches
                        ? (this.matches = [t, n])
                        : this.matches.push(t, n);
                }
            }
            function UD(e, t) {
                const n = e.localNames;
                if (null !== n)
                    for (let r = 0; r < n.length; r += 2)
                        if (n[r] === t) return n[r + 1];
                return null;
            }
            function HD(e, t, n, r) {
                return -1 === n
                    ? (function jD(e, t) {
                          return 11 & e.type
                              ? Ta(e, t)
                              : 4 & e.type
                              ? Vl(e, t)
                              : null;
                      })(t, e)
                    : -2 === n
                    ? (function $D(e, t, n) {
                          return n === nl
                              ? Ta(t, e)
                              : n === ol
                              ? Vl(t, e)
                              : n === Ul
                              ? mg(t, e)
                              : void 0;
                      })(e, t, r)
                    : It(e, e[1], n, t);
            }
            function _g(e, t, n, r) {
                const i = t[19].queries[r];
                if (null === i.matches) {
                    const u = e.data,
                        d = n.matches,
                        g = [];
                    for (let v = 0; v < d.length; v += 2) {
                        const O = d[v];
                        g.push(
                            O < 0
                                ? null
                                : HD(t, u[O], d[v + 1], n.metadata.read)
                        );
                    }
                    i.matches = g;
                }
                return i.matches;
            }
            function Pc(e, t, n, r) {
                const i = e.queries.getByIndex(n),
                    u = i.matches;
                if (null !== u) {
                    const d = _g(e, t, i, n);
                    for (let g = 0; g < u.length; g += 2) {
                        const v = u[g];
                        if (v > 0) r.push(d[g / 2]);
                        else {
                            const O = u[g + 1],
                                R = t[-v];
                            for (let K = 10; K < R.length; K++) {
                                const he = R[K];
                                he[17] === he[3] && Pc(he[1], he, O, r);
                            }
                            if (null !== R[9]) {
                                const K = R[9];
                                for (let he = 0; he < K.length; he++) {
                                    const we = K[he];
                                    Pc(we[1], we, O, r);
                                }
                            }
                        }
                    }
                }
                return r;
            }
            function vg(e) {
                const t = Ae(),
                    n = Tt(),
                    r = ls();
                Ls(r + 1);
                const i = Ag(n, r);
                if (e.dirty && sn(t) === (2 == (2 & i.metadata.flags))) {
                    if (null === i.matches) e.reset([]);
                    else {
                        const u = i.crossesNgTemplate
                            ? Pc(n, t, r, [])
                            : _g(n, t, i, r);
                        e.reset(u, lD), e.notifyOnChanges();
                    }
                    return !0;
                }
                return !1;
            }
            function Eg(e, t, n) {
                const r = Tt();
                r.firstCreatePass &&
                    (Tg(r, new yg(e, t, n), -1),
                    2 == (2 & t) && (r.staticViewQueries = !0)),
                    bg(r, Ae(), t);
            }
            function Dg(e, t, n, r) {
                const i = Tt();
                if (i.firstCreatePass) {
                    const u = Rn();
                    Tg(i, new yg(t, n, r), u.index),
                        (function WD(e, t) {
                            const n =
                                e.contentQueries || (e.contentQueries = []);
                            t !== (n.length ? n[n.length - 1] : -1) &&
                                n.push(e.queries.length - 1, t);
                        })(i, e),
                        2 == (2 & n) && (i.staticContentQueries = !0);
                }
                bg(i, Ae(), n);
            }
            function Cg() {
                return (function GD(e, t) {
                    return e[19].queries[t].queryList;
                })(Ae(), ls());
            }
            function bg(e, t, n) {
                const r = new Ac(4 == (4 & n));
                gf(e, t, r, r.destroy),
                    null === t[19] && (t[19] = new Ic()),
                    t[19].queries.push(new Sc(r));
            }
            function Tg(e, t, n) {
                null === e.queries && (e.queries = new Mc()),
                    e.queries.track(new Oc(t, n));
            }
            function Ag(e, t) {
                return e.queries.getByIndex(t);
            }
            function wg(e, t) {
                return Vl(e, t);
            }
            function $l(...e) {}
            const kc = new cr('Application Initializer');
            let Ia = (() => {
                class e {
                    constructor(n) {
                        (this.appInits = n),
                            (this.resolve = $l),
                            (this.reject = $l),
                            (this.initialized = !1),
                            (this.done = !1),
                            (this.donePromise = new Promise((r, i) => {
                                (this.resolve = r), (this.reject = i);
                            }));
                    }
                    runInitializers() {
                        if (this.initialized) return;
                        const n = [],
                            r = () => {
                                (this.done = !0), this.resolve();
                            };
                        if (this.appInits)
                            for (let i = 0; i < this.appInits.length; i++) {
                                const u = this.appInits[i]();
                                if (ac(u)) n.push(u);
                                else if (Eh(u)) {
                                    const d = new Promise((g, v) => {
                                        u.subscribe({ complete: g, error: v });
                                    });
                                    n.push(d);
                                }
                            }
                        Promise.all(n)
                            .then(() => {
                                r();
                            })
                            .catch((i) => {
                                this.reject(i);
                            }),
                            0 === n.length && r(),
                            (this.initialized = !0);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(gt(kc, 8));
                    }),
                    (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const $g = new cr('AppId'),
                uC = {
                    provide: $g,
                    useFactory: function lC() {
                        return `${Bc()}${Bc()}${Bc()}`;
                    },
                    deps: [],
                };
            function Bc() {
                return String.fromCharCode(97 + Math.floor(25 * Math.random()));
            }
            const Gg = new cr('Platform Initializer'),
                Wg = new cr('Platform ID'),
                zg = new cr('appBootstrapListener');
            let Kg = (() => {
                class e {
                    log(n) {
                        console.log(n);
                    }
                    warn(n) {
                        console.warn(n);
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const Gl = new cr('LocaleId'),
                Yg = new cr('DefaultCurrencyCode');
            class cC {
                constructor(t, n) {
                    (this.ngModuleFactory = t), (this.componentFactories = n);
                }
            }
            let Vc = (() => {
                class e {
                    compileModuleSync(n) {
                        return new bc(n);
                    }
                    compileModuleAsync(n) {
                        return Promise.resolve(this.compileModuleSync(n));
                    }
                    compileModuleAndAllComponentsSync(n) {
                        const r = this.compileModuleSync(n),
                            u = qs(vn(n).declarations).reduce((d, g) => {
                                const v = Zt(g);
                                return v && d.push(new Cc(v)), d;
                            }, []);
                        return new cC(r, u);
                    }
                    compileModuleAndAllComponentsAsync(n) {
                        return Promise.resolve(
                            this.compileModuleAndAllComponentsSync(n)
                        );
                    }
                    clearCache() {}
                    clearCacheFor(n) {}
                    getModuleId(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)();
                    }),
                    (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            const fC = (() => Promise.resolve(0))();
            function Uc(e) {
                'undefined' == typeof Zone
                    ? fC.then(() => {
                          e && e.apply(null, null);
                      })
                    : Zone.current.scheduleMicroTask('scheduleMicrotask', e);
            }
            class Xi {
                constructor({
                    enableLongStackTrace: t = !1,
                    shouldCoalesceEventChangeDetection: n = !1,
                    shouldCoalesceRunChangeDetection: r = !1,
                }) {
                    if (
                        ((this.hasPendingMacrotasks = !1),
                        (this.hasPendingMicrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new no(!1)),
                        (this.onMicrotaskEmpty = new no(!1)),
                        (this.onStable = new no(!1)),
                        (this.onError = new no(!1)),
                        'undefined' == typeof Zone)
                    )
                        throw new Error(
                            'In this configuration Angular requires Zone.js'
                        );
                    Zone.assertZonePatched();
                    const i = this;
                    (i._nesting = 0),
                        (i._outer = i._inner = Zone.current),
                        Zone.TaskTrackingZoneSpec &&
                            (i._inner = i._inner.fork(
                                new Zone.TaskTrackingZoneSpec()
                            )),
                        t &&
                            Zone.longStackTraceZoneSpec &&
                            (i._inner = i._inner.fork(
                                Zone.longStackTraceZoneSpec
                            )),
                        (i.shouldCoalesceEventChangeDetection = !r && n),
                        (i.shouldCoalesceRunChangeDetection = r),
                        (i.lastRequestAnimationFrameId = -1),
                        (i.nativeRequestAnimationFrame = (function hC() {
                            let e = nn.requestAnimationFrame,
                                t = nn.cancelAnimationFrame;
                            if ('undefined' != typeof Zone && e && t) {
                                const n =
                                    e[Zone.__symbol__('OriginalDelegate')];
                                n && (e = n);
                                const r =
                                    t[Zone.__symbol__('OriginalDelegate')];
                                r && (t = r);
                            }
                            return {
                                nativeRequestAnimationFrame: e,
                                nativeCancelAnimationFrame: t,
                            };
                        })().nativeRequestAnimationFrame),
                        (function mC(e) {
                            const t = () => {
                                !(function gC(e) {
                                    e.isCheckStableRunning ||
                                        -1 !== e.lastRequestAnimationFrameId ||
                                        ((e.lastRequestAnimationFrameId =
                                            e.nativeRequestAnimationFrame.call(
                                                nn,
                                                () => {
                                                    e.fakeTopEventTask ||
                                                        (e.fakeTopEventTask =
                                                            Zone.root.scheduleEventTask(
                                                                'fakeTopEventTask',
                                                                () => {
                                                                    (e.lastRequestAnimationFrameId =
                                                                        -1),
                                                                        Hc(e),
                                                                        (e.isCheckStableRunning =
                                                                            !0),
                                                                        jc(e),
                                                                        (e.isCheckStableRunning =
                                                                            !1);
                                                                },
                                                                void 0,
                                                                () => {},
                                                                () => {}
                                                            )),
                                                        e.fakeTopEventTask.invoke();
                                                }
                                            )),
                                        Hc(e));
                                })(e);
                            };
                            e._inner = e._inner.fork({
                                name: 'angular',
                                properties: { isAngularZone: !0 },
                                onInvokeTask: (n, r, i, u, d, g) => {
                                    try {
                                        return Zg(e), n.invokeTask(i, u, d, g);
                                    } finally {
                                        ((e.shouldCoalesceEventChangeDetection &&
                                            'eventTask' === u.type) ||
                                            e.shouldCoalesceRunChangeDetection) &&
                                            t(),
                                            Qg(e);
                                    }
                                },
                                onInvoke: (n, r, i, u, d, g, v) => {
                                    try {
                                        return Zg(e), n.invoke(i, u, d, g, v);
                                    } finally {
                                        e.shouldCoalesceRunChangeDetection &&
                                            t(),
                                            Qg(e);
                                    }
                                },
                                onHasTask: (n, r, i, u) => {
                                    n.hasTask(i, u),
                                        r === i &&
                                            ('microTask' == u.change
                                                ? ((e._hasPendingMicrotasks =
                                                      u.microTask),
                                                  Hc(e),
                                                  jc(e))
                                                : 'macroTask' == u.change &&
                                                  (e.hasPendingMacrotasks =
                                                      u.macroTask));
                                },
                                onHandleError: (n, r, i, u) => (
                                    n.handleError(i, u),
                                    e.runOutsideAngular(() =>
                                        e.onError.emit(u)
                                    ),
                                    !1
                                ),
                            });
                        })(i);
                }
                static isInAngularZone() {
                    return (
                        'undefined' != typeof Zone &&
                        !0 === Zone.current.get('isAngularZone')
                    );
                }
                static assertInAngularZone() {
                    if (!Xi.isInAngularZone())
                        throw new Error(
                            'Expected to be in Angular Zone, but it is not!'
                        );
                }
                static assertNotInAngularZone() {
                    if (Xi.isInAngularZone())
                        throw new Error(
                            'Expected to not be in Angular Zone, but it is!'
                        );
                }
                run(t, n, r) {
                    return this._inner.run(t, n, r);
                }
                runTask(t, n, r, i) {
                    const u = this._inner,
                        d = u.scheduleEventTask(
                            'NgZoneEvent: ' + i,
                            t,
                            pC,
                            $l,
                            $l
                        );
                    try {
                        return u.runTask(d, n, r);
                    } finally {
                        u.cancelTask(d);
                    }
                }
                runGuarded(t, n, r) {
                    return this._inner.runGuarded(t, n, r);
                }
                runOutsideAngular(t) {
                    return this._outer.run(t);
                }
            }
            const pC = {};
            function jc(e) {
                if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
                    try {
                        e._nesting++, e.onMicrotaskEmpty.emit(null);
                    } finally {
                        if ((e._nesting--, !e.hasPendingMicrotasks))
                            try {
                                e.runOutsideAngular(() =>
                                    e.onStable.emit(null)
                                );
                            } finally {
                                e.isStable = !0;
                            }
                    }
            }
            function Hc(e) {
                e.hasPendingMicrotasks = !!(
                    e._hasPendingMicrotasks ||
                    ((e.shouldCoalesceEventChangeDetection ||
                        e.shouldCoalesceRunChangeDetection) &&
                        -1 !== e.lastRequestAnimationFrameId)
                );
            }
            function Zg(e) {
                e._nesting++,
                    e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
            }
            function Qg(e) {
                e._nesting--, jc(e);
            }
            class yC {
                constructor() {
                    (this.hasPendingMicrotasks = !1),
                        (this.hasPendingMacrotasks = !1),
                        (this.isStable = !0),
                        (this.onUnstable = new no()),
                        (this.onMicrotaskEmpty = new no()),
                        (this.onStable = new no()),
                        (this.onError = new no());
                }
                run(t, n, r) {
                    return t.apply(n, r);
                }
                runGuarded(t, n, r) {
                    return t.apply(n, r);
                }
                runOutsideAngular(t) {
                    return t();
                }
                runTask(t, n, r, i) {
                    return t.apply(n, r);
                }
            }
            let qg = (() => {
                    class e {
                        constructor(n) {
                            (this._ngZone = n),
                                (this._pendingCount = 0),
                                (this._isZoneStable = !0),
                                (this._didWork = !1),
                                (this._callbacks = []),
                                (this.taskTrackingZone = null),
                                this._watchAngularEvents(),
                                n.run(() => {
                                    this.taskTrackingZone =
                                        'undefined' == typeof Zone
                                            ? null
                                            : Zone.current.get(
                                                  'TaskTrackingZone'
                                              );
                                });
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    (this._didWork = !0),
                                        (this._isZoneStable = !1);
                                },
                            }),
                                this._ngZone.runOutsideAngular(() => {
                                    this._ngZone.onStable.subscribe({
                                        next: () => {
                                            Xi.assertNotInAngularZone(),
                                                Uc(() => {
                                                    (this._isZoneStable = !0),
                                                        this._runCallbacksIfReady();
                                                });
                                        },
                                    });
                                });
                        }
                        increasePendingRequestCount() {
                            return (
                                (this._pendingCount += 1),
                                (this._didWork = !0),
                                this._pendingCount
                            );
                        }
                        decreasePendingRequestCount() {
                            if (
                                ((this._pendingCount -= 1),
                                this._pendingCount < 0)
                            )
                                throw new Error(
                                    'pending async requests below zero'
                                );
                            return (
                                this._runCallbacksIfReady(), this._pendingCount
                            );
                        }
                        isStable() {
                            return (
                                this._isZoneStable &&
                                0 === this._pendingCount &&
                                !this._ngZone.hasPendingMacrotasks
                            );
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable())
                                Uc(() => {
                                    for (; 0 !== this._callbacks.length; ) {
                                        let n = this._callbacks.pop();
                                        clearTimeout(n.timeoutId),
                                            n.doneCb(this._didWork);
                                    }
                                    this._didWork = !1;
                                });
                            else {
                                let n = this.getPendingTasks();
                                (this._callbacks = this._callbacks.filter(
                                    (r) =>
                                        !r.updateCb ||
                                        !r.updateCb(n) ||
                                        (clearTimeout(r.timeoutId), !1)
                                )),
                                    (this._didWork = !0);
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone
                                ? this.taskTrackingZone.macroTasks.map((n) => ({
                                      source: n.source,
                                      creationLocation: n.creationLocation,
                                      data: n.data,
                                  }))
                                : [];
                        }
                        addCallback(n, r, i) {
                            let u = -1;
                            r &&
                                r > 0 &&
                                (u = setTimeout(() => {
                                    (this._callbacks = this._callbacks.filter(
                                        (d) => d.timeoutId !== u
                                    )),
                                        n(
                                            this._didWork,
                                            this.getPendingTasks()
                                        );
                                }, r)),
                                this._callbacks.push({
                                    doneCb: n,
                                    timeoutId: u,
                                    updateCb: i,
                                });
                        }
                        whenStable(n, r, i) {
                            if (i && !this.taskTrackingZone)
                                throw new Error(
                                    'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                                );
                            this.addCallback(n, r, i),
                                this._runCallbacksIfReady();
                        }
                        getPendingRequestCount() {
                            return this._pendingCount;
                        }
                        findProviders(n, r, i) {
                            return [];
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)(gt(Xi));
                        }),
                        (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                        e
                    );
                })(),
                Jg = (() => {
                    class e {
                        constructor() {
                            (this._applications = new Map()),
                                $c.addToWindow(this);
                        }
                        registerApplication(n, r) {
                            this._applications.set(n, r);
                        }
                        unregisterApplication(n) {
                            this._applications.delete(n);
                        }
                        unregisterAllApplications() {
                            this._applications.clear();
                        }
                        getTestability(n) {
                            return this._applications.get(n) || null;
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values());
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys());
                        }
                        findTestabilityInTree(n, r = !0) {
                            return $c.findTestabilityInTree(this, n, r);
                        }
                    }
                    return (
                        (e.ɵfac = function (n) {
                            return new (n || e)();
                        }),
                        (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                        e
                    );
                })();
            class _C {
                addToWindow(t) {}
                findTestabilityInTree(t, n, r) {
                    return null;
                }
            }
            function vC(e) {
                $c = e;
            }
            let Fs,
                $c = new _C();
            const Xg = new cr('AllowMultipleToken');
            class CC {
                constructor(t, n) {
                    (this.name = t), (this.token = n);
                }
            }
            function em(e, t, n = []) {
                const r = `Platform: ${t}`,
                    i = new cr(r);
                return (u = []) => {
                    let d = tm();
                    if (!d || d.injector.get(Xg, !1))
                        if (e)
                            e(n.concat(u).concat({ provide: i, useValue: !0 }));
                        else {
                            const g = n
                                .concat(u)
                                .concat(
                                    { provide: i, useValue: !0 },
                                    { provide: Hu, useValue: 'platform' }
                                );
                            !(function bC(e) {
                                if (
                                    Fs &&
                                    !Fs.destroyed &&
                                    !Fs.injector.get(Xg, !1)
                                )
                                    throw new _e(400, '');
                                Fs = e.get(nm);
                                const t = e.get(Gg, null);
                                t && t.forEach((n) => n());
                            })(ps.create({ providers: g, name: r }));
                        }
                    return (function TC(e) {
                        const t = tm();
                        if (!t) throw new _e(401, '');
                        return t;
                    })();
                };
            }
            function tm() {
                return Fs && !Fs.destroyed ? Fs : null;
            }
            let nm = (() => {
                class e {
                    constructor(n) {
                        (this._injector = n),
                            (this._modules = []),
                            (this._destroyListeners = []),
                            (this._destroyed = !1);
                    }
                    bootstrapModuleFactory(n, r) {
                        const g = (function AC(e, t) {
                                let n;
                                return (
                                    (n =
                                        'noop' === e
                                            ? new yC()
                                            : ('zone.js' === e ? void 0 : e) ||
                                              new Xi({
                                                  enableLongStackTrace: !1,
                                                  shouldCoalesceEventChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneEventCoalescing),
                                                  shouldCoalesceRunChangeDetection:
                                                      !!(null == t
                                                          ? void 0
                                                          : t.ngZoneRunCoalescing),
                                              })),
                                    n
                                );
                            })(r ? r.ngZone : void 0, {
                                ngZoneEventCoalescing:
                                    (r && r.ngZoneEventCoalescing) || !1,
                                ngZoneRunCoalescing:
                                    (r && r.ngZoneRunCoalescing) || !1,
                            }),
                            v = [{ provide: Xi, useValue: g }];
                        return g.run(() => {
                            const O = ps.create({
                                    providers: v,
                                    parent: this.injector,
                                    name: n.moduleType.name,
                                }),
                                R = n.create(O),
                                K = R.injector.get(ja, null);
                            if (!K) throw new _e(402, '');
                            return (
                                g.runOutsideAngular(() => {
                                    const he = g.onError.subscribe({
                                        next: (we) => {
                                            K.handleError(we);
                                        },
                                    });
                                    R.onDestroy(() => {
                                        Gc(this._modules, R), he.unsubscribe();
                                    });
                                }),
                                (function wC(e, t, n) {
                                    try {
                                        const r = n();
                                        return ac(r)
                                            ? r.catch((i) => {
                                                  throw (
                                                      (t.runOutsideAngular(() =>
                                                          e.handleError(i)
                                                      ),
                                                      i)
                                                  );
                                              })
                                            : r;
                                    } catch (r) {
                                        throw (
                                            (t.runOutsideAngular(() =>
                                                e.handleError(r)
                                            ),
                                            r)
                                        );
                                    }
                                })(K, g, () => {
                                    const he = R.injector.get(Ia);
                                    return (
                                        he.runInitializers(),
                                        he.donePromise.then(
                                            () => (
                                                (function uE(e) {
                                                    nt(
                                                        e,
                                                        'Expected localeId to be defined'
                                                    ),
                                                        'string' == typeof e &&
                                                            (vp = e
                                                                .toLowerCase()
                                                                .replace(
                                                                    /_/g,
                                                                    '-'
                                                                ));
                                                })(
                                                    R.injector.get(Gl, xl) || xl
                                                ),
                                                this._moduleDoBootstrap(R),
                                                R
                                            )
                                        )
                                    );
                                })
                            );
                        });
                    }
                    bootstrapModule(n, r = []) {
                        const i = rm({}, r);
                        return (function EC(e, t, n) {
                            const r = new bc(n);
                            return Promise.resolve(r);
                        })(0, 0, n).then((u) =>
                            this.bootstrapModuleFactory(u, i)
                        );
                    }
                    _moduleDoBootstrap(n) {
                        const r = n.injector.get(ll);
                        if (n._bootstrapComponents.length > 0)
                            n._bootstrapComponents.forEach((i) =>
                                r.bootstrap(i)
                            );
                        else {
                            if (!n.instance.ngDoBootstrap)
                                throw new _e(403, '');
                            n.instance.ngDoBootstrap(r);
                        }
                        this._modules.push(n);
                    }
                    onDestroy(n) {
                        this._destroyListeners.push(n);
                    }
                    get injector() {
                        return this._injector;
                    }
                    destroy() {
                        if (this._destroyed) throw new _e(404, '');
                        this._modules.slice().forEach((n) => n.destroy()),
                            this._destroyListeners.forEach((n) => n()),
                            (this._destroyed = !0);
                    }
                    get destroyed() {
                        return this._destroyed;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(gt(ps));
                    }),
                    (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            function rm(e, t) {
                return Array.isArray(t)
                    ? t.reduce(rm, e)
                    : Object.assign(Object.assign({}, e), t);
            }
            let ll = (() => {
                class e {
                    constructor(n, r, i, u, d) {
                        (this._zone = n),
                            (this._injector = r),
                            (this._exceptionHandler = i),
                            (this._componentFactoryResolver = u),
                            (this._initStatus = d),
                            (this._bootstrapListeners = []),
                            (this._views = []),
                            (this._runningTick = !1),
                            (this._stable = !0),
                            (this.componentTypes = []),
                            (this.components = []),
                            (this._onMicrotaskEmptySubscription =
                                this._zone.onMicrotaskEmpty.subscribe({
                                    next: () => {
                                        this._zone.run(() => {
                                            this.tick();
                                        });
                                    },
                                }));
                        const g = new G.y((O) => {
                                (this._stable =
                                    this._zone.isStable &&
                                    !this._zone.hasPendingMacrotasks &&
                                    !this._zone.hasPendingMicrotasks),
                                    this._zone.runOutsideAngular(() => {
                                        O.next(this._stable), O.complete();
                                    });
                            }),
                            v = new G.y((O) => {
                                let R;
                                this._zone.runOutsideAngular(() => {
                                    R = this._zone.onStable.subscribe(() => {
                                        Xi.assertNotInAngularZone(),
                                            Uc(() => {
                                                !this._stable &&
                                                    !this._zone
                                                        .hasPendingMacrotasks &&
                                                    !this._zone
                                                        .hasPendingMicrotasks &&
                                                    ((this._stable = !0),
                                                    O.next(!0));
                                            });
                                    });
                                });
                                const K = this._zone.onUnstable.subscribe(
                                    () => {
                                        Xi.assertInAngularZone(),
                                            this._stable &&
                                                ((this._stable = !1),
                                                this._zone.runOutsideAngular(
                                                    () => {
                                                        O.next(!1);
                                                    }
                                                ));
                                    }
                                );
                                return () => {
                                    R.unsubscribe(), K.unsubscribe();
                                };
                            });
                        this.isStable = (0, j.T)(g, v.pipe((0, S.B)()));
                    }
                    bootstrap(n, r) {
                        if (!this._initStatus.done) throw new _e(405, '');
                        let i;
                        (i =
                            n instanceof Wp
                                ? n
                                : this._componentFactoryResolver.resolveComponentFactory(
                                      n
                                  )),
                            this.componentTypes.push(i.componentType);
                        const u = (function DC(e) {
                                return e.isBoundToModule;
                            })(i)
                                ? void 0
                                : this._injector.get(Aa),
                            g = i.create(ps.NULL, [], r || i.selector, u),
                            v = g.location.nativeElement,
                            O = g.injector.get(qg, null),
                            R = O && g.injector.get(Jg);
                        return (
                            O && R && R.registerApplication(v, O),
                            g.onDestroy(() => {
                                this.detachView(g.hostView),
                                    Gc(this.components, g),
                                    R && R.unregisterApplication(v);
                            }),
                            this._loadComponent(g),
                            g
                        );
                    }
                    tick() {
                        if (this._runningTick) throw new _e(101, '');
                        try {
                            this._runningTick = !0;
                            for (let n of this._views) n.detectChanges();
                        } catch (n) {
                            this._zone.runOutsideAngular(() =>
                                this._exceptionHandler.handleError(n)
                            );
                        } finally {
                            this._runningTick = !1;
                        }
                    }
                    attachView(n) {
                        const r = n;
                        this._views.push(r), r.attachToAppRef(this);
                    }
                    detachView(n) {
                        const r = n;
                        Gc(this._views, r), r.detachFromAppRef();
                    }
                    _loadComponent(n) {
                        this.attachView(n.hostView),
                            this.tick(),
                            this.components.push(n),
                            this._injector
                                .get(zg, [])
                                .concat(this._bootstrapListeners)
                                .forEach((i) => i(n));
                    }
                    ngOnDestroy() {
                        this._views.slice().forEach((n) => n.destroy()),
                            this._onMicrotaskEmptySubscription.unsubscribe();
                    }
                    get viewCount() {
                        return this._views.length;
                    }
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(
                            gt(Xi),
                            gt(ps),
                            gt(ja),
                            gt(tl),
                            gt(Ia)
                        );
                    }),
                    (e.ɵprov = mt({ token: e, factory: e.ɵfac })),
                    e
                );
            })();
            function Gc(e, t) {
                const n = e.indexOf(t);
                n > -1 && e.splice(n, 1);
            }
            let sm = !0,
                om = !1;
            function IC() {
                return (om = !0), sm;
            }
            function MC() {
                if (om)
                    throw new Error(
                        'Cannot enable prod mode after platform setup.'
                    );
                sm = !1;
            }
            let OC = (() => {
                class e {}
                return (e.__NG_ELEMENT_ID__ = PC), e;
            })();
            function PC(e) {
                return (function RC(e, t, n) {
                    if (hn(e) && !n) {
                        const r = tn(e.index, t);
                        return new rl(r, r);
                    }
                    return 47 & e.type ? new rl(t[16], t) : null;
                })(Rn(), Ae(), 16 == (16 & e));
            }
            class fm {
                constructor() {}
                supports(t) {
                    return Ka(t);
                }
                create(t) {
                    return new BC(t);
                }
            }
            const kC = (e, t) => t;
            class BC {
                constructor(t) {
                    (this.length = 0),
                        (this._linkedRecords = null),
                        (this._unlinkedRecords = null),
                        (this._previousItHead = null),
                        (this._itHead = null),
                        (this._itTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._movesHead = null),
                        (this._movesTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null),
                        (this._identityChangesHead = null),
                        (this._identityChangesTail = null),
                        (this._trackByFn = t || kC);
                }
                forEachItem(t) {
                    let n;
                    for (n = this._itHead; null !== n; n = n._next) t(n);
                }
                forEachOperation(t) {
                    let n = this._itHead,
                        r = this._removalsHead,
                        i = 0,
                        u = null;
                    for (; n || r; ) {
                        const d =
                                !r || (n && n.currentIndex < pm(r, i, u))
                                    ? n
                                    : r,
                            g = pm(d, i, u),
                            v = d.currentIndex;
                        if (d === r) i--, (r = r._nextRemoved);
                        else if (((n = n._next), null == d.previousIndex)) i++;
                        else {
                            u || (u = []);
                            const O = g - i,
                                R = v - i;
                            if (O != R) {
                                for (let he = 0; he < O; he++) {
                                    const we =
                                            he < u.length ? u[he] : (u[he] = 0),
                                        ze = we + he;
                                    R <= ze && ze < O && (u[he] = we + 1);
                                }
                                u[d.previousIndex] = R - O;
                            }
                        }
                        g !== v && t(d, g, v);
                    }
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousItHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachMovedItem(t) {
                    let n;
                    for (n = this._movesHead; null !== n; n = n._nextMoved)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                forEachIdentityChange(t) {
                    let n;
                    for (
                        n = this._identityChangesHead;
                        null !== n;
                        n = n._nextIdentityChange
                    )
                        t(n);
                }
                diff(t) {
                    if ((null == t && (t = []), !Ka(t))) throw new _e(900, '');
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let i,
                        u,
                        d,
                        n = this._itHead,
                        r = !1;
                    if (Array.isArray(t)) {
                        this.length = t.length;
                        for (let g = 0; g < this.length; g++)
                            (u = t[g]),
                                (d = this._trackByFn(g, u)),
                                null !== n && Object.is(n.trackById, d)
                                    ? (r &&
                                          (n = this._verifyReinsertion(
                                              n,
                                              u,
                                              d,
                                              g
                                          )),
                                      Object.is(n.item, u) ||
                                          this._addIdentityChange(n, u))
                                    : ((n = this._mismatch(n, u, d, g)),
                                      (r = !0)),
                                (n = n._next);
                    } else
                        (i = 0),
                            (function Q_(e, t) {
                                if (Array.isArray(e))
                                    for (let n = 0; n < e.length; n++) t(e[n]);
                                else {
                                    const n = e[ca()]();
                                    let r;
                                    for (; !(r = n.next()).done; ) t(r.value);
                                }
                            })(t, (g) => {
                                (d = this._trackByFn(i, g)),
                                    null !== n && Object.is(n.trackById, d)
                                        ? (r &&
                                              (n = this._verifyReinsertion(
                                                  n,
                                                  g,
                                                  d,
                                                  i
                                              )),
                                          Object.is(n.item, g) ||
                                              this._addIdentityChange(n, g))
                                        : ((n = this._mismatch(n, g, d, i)),
                                          (r = !0)),
                                    (n = n._next),
                                    i++;
                            }),
                            (this.length = i);
                    return (
                        this._truncate(n), (this.collection = t), this.isDirty
                    );
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._movesHead ||
                        null !== this._removalsHead ||
                        null !== this._identityChangesHead
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            t = this._previousItHead = this._itHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._additionsHead;
                            null !== t;
                            t = t._nextAdded
                        )
                            t.previousIndex = t.currentIndex;
                        for (
                            this._additionsHead = this._additionsTail = null,
                                t = this._movesHead;
                            null !== t;
                            t = t._nextMoved
                        )
                            t.previousIndex = t.currentIndex;
                        (this._movesHead = this._movesTail = null),
                            (this._removalsHead = this._removalsTail = null),
                            (this._identityChangesHead =
                                this._identityChangesTail =
                                    null);
                    }
                }
                _mismatch(t, n, r, i) {
                    let u;
                    return (
                        null === t
                            ? (u = this._itTail)
                            : ((u = t._prev), this._remove(t)),
                        null !==
                        (t =
                            null === this._unlinkedRecords
                                ? null
                                : this._unlinkedRecords.get(r, null))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._reinsertAfter(t, u, i))
                            : null !==
                              (t =
                                  null === this._linkedRecords
                                      ? null
                                      : this._linkedRecords.get(r, i))
                            ? (Object.is(t.item, n) ||
                                  this._addIdentityChange(t, n),
                              this._moveAfter(t, u, i))
                            : (t = this._addAfter(new VC(n, r), u, i)),
                        t
                    );
                }
                _verifyReinsertion(t, n, r, i) {
                    let u =
                        null === this._unlinkedRecords
                            ? null
                            : this._unlinkedRecords.get(r, null);
                    return (
                        null !== u
                            ? (t = this._reinsertAfter(u, t._prev, i))
                            : t.currentIndex != i &&
                              ((t.currentIndex = i), this._addToMoves(t, i)),
                        t
                    );
                }
                _truncate(t) {
                    for (; null !== t; ) {
                        const n = t._next;
                        this._addToRemovals(this._unlink(t)), (t = n);
                    }
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.clear(),
                        null !== this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        null !== this._movesTail &&
                            (this._movesTail._nextMoved = null),
                        null !== this._itTail && (this._itTail._next = null),
                        null !== this._removalsTail &&
                            (this._removalsTail._nextRemoved = null),
                        null !== this._identityChangesTail &&
                            (this._identityChangesTail._nextIdentityChange =
                                null);
                }
                _reinsertAfter(t, n, r) {
                    null !== this._unlinkedRecords &&
                        this._unlinkedRecords.remove(t);
                    const i = t._prevRemoved,
                        u = t._nextRemoved;
                    return (
                        null === i
                            ? (this._removalsHead = u)
                            : (i._nextRemoved = u),
                        null === u
                            ? (this._removalsTail = i)
                            : (u._prevRemoved = i),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _moveAfter(t, n, r) {
                    return (
                        this._unlink(t),
                        this._insertAfter(t, n, r),
                        this._addToMoves(t, r),
                        t
                    );
                }
                _addAfter(t, n, r) {
                    return (
                        this._insertAfter(t, n, r),
                        (this._additionsTail =
                            null === this._additionsTail
                                ? (this._additionsHead = t)
                                : (this._additionsTail._nextAdded = t)),
                        t
                    );
                }
                _insertAfter(t, n, r) {
                    const i = null === n ? this._itHead : n._next;
                    return (
                        (t._next = i),
                        (t._prev = n),
                        null === i ? (this._itTail = t) : (i._prev = t),
                        null === n ? (this._itHead = t) : (n._next = t),
                        null === this._linkedRecords &&
                            (this._linkedRecords = new hm()),
                        this._linkedRecords.put(t),
                        (t.currentIndex = r),
                        t
                    );
                }
                _remove(t) {
                    return this._addToRemovals(this._unlink(t));
                }
                _unlink(t) {
                    null !== this._linkedRecords &&
                        this._linkedRecords.remove(t);
                    const n = t._prev,
                        r = t._next;
                    return (
                        null === n ? (this._itHead = r) : (n._next = r),
                        null === r ? (this._itTail = n) : (r._prev = n),
                        t
                    );
                }
                _addToMoves(t, n) {
                    return (
                        t.previousIndex === n ||
                            (this._movesTail =
                                null === this._movesTail
                                    ? (this._movesHead = t)
                                    : (this._movesTail._nextMoved = t)),
                        t
                    );
                }
                _addToRemovals(t) {
                    return (
                        null === this._unlinkedRecords &&
                            (this._unlinkedRecords = new hm()),
                        this._unlinkedRecords.put(t),
                        (t.currentIndex = null),
                        (t._nextRemoved = null),
                        null === this._removalsTail
                            ? ((this._removalsTail = this._removalsHead = t),
                              (t._prevRemoved = null))
                            : ((t._prevRemoved = this._removalsTail),
                              (this._removalsTail =
                                  this._removalsTail._nextRemoved =
                                      t)),
                        t
                    );
                }
                _addIdentityChange(t, n) {
                    return (
                        (t.item = n),
                        (this._identityChangesTail =
                            null === this._identityChangesTail
                                ? (this._identityChangesHead = t)
                                : (this._identityChangesTail._nextIdentityChange =
                                      t)),
                        t
                    );
                }
            }
            class VC {
                constructor(t, n) {
                    (this.item = t),
                        (this.trackById = n),
                        (this.currentIndex = null),
                        (this.previousIndex = null),
                        (this._nextPrevious = null),
                        (this._prev = null),
                        (this._next = null),
                        (this._prevDup = null),
                        (this._nextDup = null),
                        (this._prevRemoved = null),
                        (this._nextRemoved = null),
                        (this._nextAdded = null),
                        (this._nextMoved = null),
                        (this._nextIdentityChange = null);
                }
            }
            class UC {
                constructor() {
                    (this._head = null), (this._tail = null);
                }
                add(t) {
                    null === this._head
                        ? ((this._head = this._tail = t),
                          (t._nextDup = null),
                          (t._prevDup = null))
                        : ((this._tail._nextDup = t),
                          (t._prevDup = this._tail),
                          (t._nextDup = null),
                          (this._tail = t));
                }
                get(t, n) {
                    let r;
                    for (r = this._head; null !== r; r = r._nextDup)
                        if (
                            (null === n || n <= r.currentIndex) &&
                            Object.is(r.trackById, t)
                        )
                            return r;
                    return null;
                }
                remove(t) {
                    const n = t._prevDup,
                        r = t._nextDup;
                    return (
                        null === n ? (this._head = r) : (n._nextDup = r),
                        null === r ? (this._tail = n) : (r._prevDup = n),
                        null === this._head
                    );
                }
            }
            class hm {
                constructor() {
                    this.map = new Map();
                }
                put(t) {
                    const n = t.trackById;
                    let r = this.map.get(n);
                    r || ((r = new UC()), this.map.set(n, r)), r.add(t);
                }
                get(t, n) {
                    const i = this.map.get(t);
                    return i ? i.get(t, n) : null;
                }
                remove(t) {
                    const n = t.trackById;
                    return this.map.get(n).remove(t) && this.map.delete(n), t;
                }
                get isEmpty() {
                    return 0 === this.map.size;
                }
                clear() {
                    this.map.clear();
                }
            }
            function pm(e, t, n) {
                const r = e.previousIndex;
                if (null === r) return r;
                let i = 0;
                return n && r < n.length && (i = n[r]), r + t + i;
            }
            class gm {
                constructor() {}
                supports(t) {
                    return t instanceof Map || Zu(t);
                }
                create() {
                    return new jC();
                }
            }
            class jC {
                constructor() {
                    (this._records = new Map()),
                        (this._mapHead = null),
                        (this._appendAfter = null),
                        (this._previousMapHead = null),
                        (this._changesHead = null),
                        (this._changesTail = null),
                        (this._additionsHead = null),
                        (this._additionsTail = null),
                        (this._removalsHead = null),
                        (this._removalsTail = null);
                }
                get isDirty() {
                    return (
                        null !== this._additionsHead ||
                        null !== this._changesHead ||
                        null !== this._removalsHead
                    );
                }
                forEachItem(t) {
                    let n;
                    for (n = this._mapHead; null !== n; n = n._next) t(n);
                }
                forEachPreviousItem(t) {
                    let n;
                    for (
                        n = this._previousMapHead;
                        null !== n;
                        n = n._nextPrevious
                    )
                        t(n);
                }
                forEachChangedItem(t) {
                    let n;
                    for (n = this._changesHead; null !== n; n = n._nextChanged)
                        t(n);
                }
                forEachAddedItem(t) {
                    let n;
                    for (n = this._additionsHead; null !== n; n = n._nextAdded)
                        t(n);
                }
                forEachRemovedItem(t) {
                    let n;
                    for (n = this._removalsHead; null !== n; n = n._nextRemoved)
                        t(n);
                }
                diff(t) {
                    if (t) {
                        if (!(t instanceof Map || Zu(t))) throw new _e(900, '');
                    } else t = new Map();
                    return this.check(t) ? this : null;
                }
                onDestroy() {}
                check(t) {
                    this._reset();
                    let n = this._mapHead;
                    if (
                        ((this._appendAfter = null),
                        this._forEach(t, (r, i) => {
                            if (n && n.key === i)
                                this._maybeAddToChanges(n, r),
                                    (this._appendAfter = n),
                                    (n = n._next);
                            else {
                                const u = this._getOrCreateRecordForKey(i, r);
                                n = this._insertBeforeOrAppend(n, u);
                            }
                        }),
                        n)
                    ) {
                        n._prev && (n._prev._next = null),
                            (this._removalsHead = n);
                        for (let r = n; null !== r; r = r._nextRemoved)
                            r === this._mapHead && (this._mapHead = null),
                                this._records.delete(r.key),
                                (r._nextRemoved = r._next),
                                (r.previousValue = r.currentValue),
                                (r.currentValue = null),
                                (r._prev = null),
                                (r._next = null);
                    }
                    return (
                        this._changesTail &&
                            (this._changesTail._nextChanged = null),
                        this._additionsTail &&
                            (this._additionsTail._nextAdded = null),
                        this.isDirty
                    );
                }
                _insertBeforeOrAppend(t, n) {
                    if (t) {
                        const r = t._prev;
                        return (
                            (n._next = t),
                            (n._prev = r),
                            (t._prev = n),
                            r && (r._next = n),
                            t === this._mapHead && (this._mapHead = n),
                            (this._appendAfter = t),
                            t
                        );
                    }
                    return (
                        this._appendAfter
                            ? ((this._appendAfter._next = n),
                              (n._prev = this._appendAfter))
                            : (this._mapHead = n),
                        (this._appendAfter = n),
                        null
                    );
                }
                _getOrCreateRecordForKey(t, n) {
                    if (this._records.has(t)) {
                        const i = this._records.get(t);
                        this._maybeAddToChanges(i, n);
                        const u = i._prev,
                            d = i._next;
                        return (
                            u && (u._next = d),
                            d && (d._prev = u),
                            (i._next = null),
                            (i._prev = null),
                            i
                        );
                    }
                    const r = new HC(t);
                    return (
                        this._records.set(t, r),
                        (r.currentValue = n),
                        this._addToAdditions(r),
                        r
                    );
                }
                _reset() {
                    if (this.isDirty) {
                        let t;
                        for (
                            this._previousMapHead = this._mapHead,
                                t = this._previousMapHead;
                            null !== t;
                            t = t._next
                        )
                            t._nextPrevious = t._next;
                        for (
                            t = this._changesHead;
                            null !== t;
                            t = t._nextChanged
                        )
                            t.previousValue = t.currentValue;
                        for (
                            t = this._additionsHead;
                            null != t;
                            t = t._nextAdded
                        )
                            t.previousValue = t.currentValue;
                        (this._changesHead = this._changesTail = null),
                            (this._additionsHead = this._additionsTail = null),
                            (this._removalsHead = null);
                    }
                }
                _maybeAddToChanges(t, n) {
                    Object.is(n, t.currentValue) ||
                        ((t.previousValue = t.currentValue),
                        (t.currentValue = n),
                        this._addToChanges(t));
                }
                _addToAdditions(t) {
                    null === this._additionsHead
                        ? (this._additionsHead = this._additionsTail = t)
                        : ((this._additionsTail._nextAdded = t),
                          (this._additionsTail = t));
                }
                _addToChanges(t) {
                    null === this._changesHead
                        ? (this._changesHead = this._changesTail = t)
                        : ((this._changesTail._nextChanged = t),
                          (this._changesTail = t));
                }
                _forEach(t, n) {
                    t instanceof Map
                        ? t.forEach(n)
                        : Object.keys(t).forEach((r) => n(t[r], r));
                }
            }
            class HC {
                constructor(t) {
                    (this.key = t),
                        (this.previousValue = null),
                        (this.currentValue = null),
                        (this._nextPrevious = null),
                        (this._next = null),
                        (this._prev = null),
                        (this._nextAdded = null),
                        (this._nextRemoved = null),
                        (this._nextChanged = null);
                }
            }
            function mm() {
                return new zl([new fm()]);
            }
            let zl = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (null != r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || mm()),
                            deps: [[e, new mi(), new li()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((i) => i.supports(n));
                        if (null != r) return r;
                        throw new _e(901, '');
                    }
                }
                return (
                    (e.ɵprov = mt({
                        token: e,
                        providedIn: 'root',
                        factory: mm,
                    })),
                    e
                );
            })();
            function ym() {
                return new Kl([new gm()]);
            }
            let Kl = (() => {
                class e {
                    constructor(n) {
                        this.factories = n;
                    }
                    static create(n, r) {
                        if (r) {
                            const i = r.factories.slice();
                            n = n.concat(i);
                        }
                        return new e(n);
                    }
                    static extend(n) {
                        return {
                            provide: e,
                            useFactory: (r) => e.create(n, r || ym()),
                            deps: [[e, new mi(), new li()]],
                        };
                    }
                    find(n) {
                        const r = this.factories.find((u) => u.supports(n));
                        if (r) return r;
                        throw new _e(901, '');
                    }
                }
                return (
                    (e.ɵprov = mt({
                        token: e,
                        providedIn: 'root',
                        factory: ym,
                    })),
                    e
                );
            })();
            const $C = [new gm()],
                WC = new zl([new fm()]),
                zC = new Kl($C),
                KC = em(null, 'core', [
                    { provide: Wg, useValue: 'unknown' },
                    { provide: nm, deps: [ps] },
                    { provide: Jg, deps: [] },
                    { provide: Kg, deps: [] },
                ]),
                JC = [
                    { provide: ll, useClass: ll, deps: [Xi, ps, ja, tl, Ia] },
                    {
                        provide: gD,
                        deps: [Xi],
                        useFactory: function XC(e) {
                            let t = [];
                            return (
                                e.onStable.subscribe(() => {
                                    for (; t.length; ) t.pop()();
                                }),
                                function (n) {
                                    t.push(n);
                                }
                            );
                        },
                    },
                    { provide: Ia, useClass: Ia, deps: [[new li(), kc]] },
                    { provide: Vc, useClass: Vc, deps: [] },
                    uC,
                    {
                        provide: zl,
                        useFactory: function YC() {
                            return WC;
                        },
                        deps: [],
                    },
                    {
                        provide: Kl,
                        useFactory: function ZC() {
                            return zC;
                        },
                        deps: [],
                    },
                    {
                        provide: Gl,
                        useFactory: function QC(e) {
                            return (
                                e ||
                                (function qC() {
                                    return (
                                        ('undefined' != typeof $localize &&
                                            $localize.locale) ||
                                        xl
                                    );
                                })()
                            );
                        },
                        deps: [[new Vr(Gl), new li(), new mi()]],
                    },
                    { provide: Yg, useValue: 'USD' },
                ];
            let e0 = (() => {
                class e {
                    constructor(n) {}
                }
                return (
                    (e.ɵfac = function (n) {
                        return new (n || e)(gt(ll));
                    }),
                    (e.ɵmod = on({ type: e })),
                    (e.ɵinj = dn({ providers: JC })),
                    e
                );
            })();
        },
        2382: (de, z, _) => {
            'use strict';
            _.d(z, {
                Fj: () => Y,
                qu: () => hi,
                u: () => fi,
                sg: () => ti,
                JJ: () => kt,
                JL: () => ht,
                On: () => Ur,
                UX: () => Rr,
            });
            var l = _(5e3),
                w = _(9808),
                G = _(8306),
                j = _(4742),
                S = _(8421),
                x = _(7669),
                k = _(5403),
                W = _(3268),
                B = _(1810),
                U = _(8996),
                Q = _(4004);
            let De = (() => {
                    class I {
                        constructor(E, N) {
                            (this._renderer = E),
                                (this._elementRef = N),
                                (this.onChange = (He) => {}),
                                (this.onTouched = () => {});
                        }
                        setProperty(E, N) {
                            this._renderer.setProperty(
                                this._elementRef.nativeElement,
                                E,
                                N
                            );
                        }
                        registerOnTouched(E) {
                            this.onTouched = E;
                        }
                        registerOnChange(E) {
                            this.onChange = E;
                        }
                        setDisabledState(E) {
                            this.setProperty('disabled', E);
                        }
                    }
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)(l.Y36(l.Qsj), l.Y36(l.SBq));
                        }),
                        (I.ɵdir = l.lG2({ type: I })),
                        I
                    );
                })(),
                Ee = (() => {
                    class I extends De {}
                    return (
                        (I.ɵfac = (function () {
                            let D;
                            return function (N) {
                                return (D || (D = l.n5z(I)))(N || I);
                            };
                        })()),
                        (I.ɵdir = l.lG2({ type: I, features: [l.qOj] })),
                        I
                    );
                })();
            const _e = new l.OlP('NgValueAccessor'),
                X = {
                    provide: _e,
                    useExisting: (0, l.Gpc)(() => Y),
                    multi: !0,
                },
                ae = new l.OlP('CompositionEventMode');
            let Y = (() => {
                class I extends De {
                    constructor(E, N, He) {
                        super(E, N),
                            (this._compositionMode = He),
                            (this._composing = !1),
                            null == this._compositionMode &&
                                (this._compositionMode = !(function Ce() {
                                    const I = (0, w.q)()
                                        ? (0, w.q)().getUserAgent()
                                        : '';
                                    return /android (\d+)/.test(
                                        I.toLowerCase()
                                    );
                                })());
                    }
                    writeValue(E) {
                        this.setProperty('value', null == E ? '' : E);
                    }
                    _handleInput(E) {
                        (!this._compositionMode ||
                            (this._compositionMode && !this._composing)) &&
                            this.onChange(E);
                    }
                    _compositionStart() {
                        this._composing = !0;
                    }
                    _compositionEnd(E) {
                        (this._composing = !1),
                            this._compositionMode && this.onChange(E);
                    }
                }
                return (
                    (I.ɵfac = function (E) {
                        return new (E || I)(
                            l.Y36(l.Qsj),
                            l.Y36(l.SBq),
                            l.Y36(ae, 8)
                        );
                    }),
                    (I.ɵdir = l.lG2({
                        type: I,
                        selectors: [
                            [
                                'input',
                                'formControlName',
                                '',
                                3,
                                'type',
                                'checkbox',
                            ],
                            ['textarea', 'formControlName', ''],
                            ['input', 'formControl', '', 3, 'type', 'checkbox'],
                            ['textarea', 'formControl', ''],
                            ['input', 'ngModel', '', 3, 'type', 'checkbox'],
                            ['textarea', 'ngModel', ''],
                            ['', 'ngDefaultControl', ''],
                        ],
                        hostBindings: function (E, N) {
                            1 & E &&
                                l.NdJ('input', function (Ae) {
                                    return N._handleInput(Ae.target.value);
                                })('blur', function () {
                                    return N.onTouched();
                                })('compositionstart', function () {
                                    return N._compositionStart();
                                })('compositionend', function (Ae) {
                                    return N._compositionEnd(Ae.target.value);
                                });
                        },
                        features: [l._Bn([X]), l.qOj],
                    })),
                    I
                );
            })();
            const xe = new l.OlP('NgValidators'),
                $e = new l.OlP('NgAsyncValidators');
            function st(I) {
                return null != I;
            }
            function un(I) {
                const D = (0, l.QGY)(I) ? (0, U.D)(I) : I;
                return (0, l.CqO)(D), D;
            }
            function Bt(I) {
                let D = {};
                return (
                    I.forEach((E) => {
                        D =
                            null != E
                                ? Object.assign(Object.assign({}, D), E)
                                : D;
                    }),
                    0 === Object.keys(D).length ? null : D
                );
            }
            function Gt(I, D) {
                return D.map((E) => E(I));
            }
            function wn(I) {
                return I.map((D) =>
                    (function mt(I) {
                        return !I.validate;
                    })(D)
                        ? D
                        : (E) => D.validate(E)
                );
            }
            function Kt(I) {
                return null != I
                    ? (function dn(I) {
                          if (!I) return null;
                          const D = I.filter(st);
                          return 0 == D.length
                              ? null
                              : function (E) {
                                    return Bt(Gt(E, D));
                                };
                      })(wn(I))
                    : null;
            }
            function qt(I) {
                return null != I
                    ? (function Nn(I) {
                          if (!I) return null;
                          const D = I.filter(st);
                          return 0 == D.length
                              ? null
                              : function (E) {
                                    return (function V(...I) {
                                        const D = (0, x.jO)(I),
                                            { args: E, keys: N } = (0, j.D)(I),
                                            He = new G.y((Ae) => {
                                                const { length: Tt } = E;
                                                if (!Tt)
                                                    return void Ae.complete();
                                                const yr = new Array(Tt);
                                                let Rn = Tt,
                                                    ei = Tt;
                                                for (
                                                    let pi = 0;
                                                    pi < Tt;
                                                    pi++
                                                ) {
                                                    let Fn = !1;
                                                    (0, S.Xf)(E[pi]).subscribe(
                                                        new k.Q(
                                                            Ae,
                                                            ($i) => {
                                                                Fn ||
                                                                    ((Fn = !0),
                                                                    ei--),
                                                                    (yr[pi] =
                                                                        $i);
                                                            },
                                                            () => Rn--,
                                                            void 0,
                                                            () => {
                                                                (!Rn || !Fn) &&
                                                                    (ei ||
                                                                        Ae.next(
                                                                            N
                                                                                ? (0,
                                                                                  B.n)(
                                                                                      N,
                                                                                      yr
                                                                                  )
                                                                                : yr
                                                                        ),
                                                                    Ae.complete());
                                                            }
                                                        )
                                                    );
                                                }
                                            });
                                        return D ? He.pipe((0, W.Z)(D)) : He;
                                    })(Gt(E, D).map(un)).pipe((0, Q.U)(Bt));
                                };
                      })(wn(I))
                    : null;
            }
            function Hn(I, D) {
                return null === I ? [D] : Array.isArray(I) ? [...I, D] : [I, D];
            }
            function Fe(I) {
                return I._rawValidators;
            }
            function Ye(I) {
                return I._rawAsyncValidators;
            }
            function q(I) {
                return I ? (Array.isArray(I) ? I : [I]) : [];
            }
            function Te(I, D) {
                return Array.isArray(I) ? I.includes(D) : I === D;
            }
            function ot(I, D) {
                const E = q(D);
                return (
                    q(I).forEach((He) => {
                        Te(E, He) || E.push(He);
                    }),
                    E
                );
            }
            function We(I, D) {
                return q(D).filter((E) => !Te(I, E));
            }
            class Rt {
                constructor() {
                    (this._rawValidators = []),
                        (this._rawAsyncValidators = []),
                        (this._onDestroyCallbacks = []);
                }
                get value() {
                    return this.control ? this.control.value : null;
                }
                get valid() {
                    return this.control ? this.control.valid : null;
                }
                get invalid() {
                    return this.control ? this.control.invalid : null;
                }
                get pending() {
                    return this.control ? this.control.pending : null;
                }
                get disabled() {
                    return this.control ? this.control.disabled : null;
                }
                get enabled() {
                    return this.control ? this.control.enabled : null;
                }
                get errors() {
                    return this.control ? this.control.errors : null;
                }
                get pristine() {
                    return this.control ? this.control.pristine : null;
                }
                get dirty() {
                    return this.control ? this.control.dirty : null;
                }
                get touched() {
                    return this.control ? this.control.touched : null;
                }
                get status() {
                    return this.control ? this.control.status : null;
                }
                get untouched() {
                    return this.control ? this.control.untouched : null;
                }
                get statusChanges() {
                    return this.control ? this.control.statusChanges : null;
                }
                get valueChanges() {
                    return this.control ? this.control.valueChanges : null;
                }
                get path() {
                    return null;
                }
                _setValidators(D) {
                    (this._rawValidators = D || []),
                        (this._composedValidatorFn = Kt(this._rawValidators));
                }
                _setAsyncValidators(D) {
                    (this._rawAsyncValidators = D || []),
                        (this._composedAsyncValidatorFn = qt(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn || null;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn || null;
                }
                _registerOnDestroy(D) {
                    this._onDestroyCallbacks.push(D);
                }
                _invokeOnDestroyCallbacks() {
                    this._onDestroyCallbacks.forEach((D) => D()),
                        (this._onDestroyCallbacks = []);
                }
                reset(D) {
                    this.control && this.control.reset(D);
                }
                hasError(D, E) {
                    return !!this.control && this.control.hasError(D, E);
                }
                getError(D, E) {
                    return this.control ? this.control.getError(D, E) : null;
                }
            }
            class jt extends Rt {
                constructor() {
                    super(...arguments),
                        (this._parent = null),
                        (this.name = null),
                        (this.valueAccessor = null);
                }
            }
            class xt extends Rt {
                get formDirective() {
                    return null;
                }
                get path() {
                    return null;
                }
            }
            class nr {
                constructor(D) {
                    this._cd = D;
                }
                is(D) {
                    var E, N, He;
                    return 'submitted' === D
                        ? !!(null === (E = this._cd) || void 0 === E
                              ? void 0
                              : E.submitted)
                        : !!(null ===
                              (He =
                                  null === (N = this._cd) || void 0 === N
                                      ? void 0
                                      : N.control) || void 0 === He
                              ? void 0
                              : He[D]);
                }
            }
            let kt = (() => {
                    class I extends nr {
                        constructor(E) {
                            super(E);
                        }
                    }
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)(l.Y36(jt, 2));
                        }),
                        (I.ɵdir = l.lG2({
                            type: I,
                            selectors: [
                                ['', 'formControlName', ''],
                                ['', 'ngModel', ''],
                                ['', 'formControl', ''],
                            ],
                            hostVars: 14,
                            hostBindings: function (E, N) {
                                2 & E &&
                                    l.ekj('ng-untouched', N.is('untouched'))(
                                        'ng-touched',
                                        N.is('touched')
                                    )('ng-pristine', N.is('pristine'))(
                                        'ng-dirty',
                                        N.is('dirty')
                                    )('ng-valid', N.is('valid'))(
                                        'ng-invalid',
                                        N.is('invalid')
                                    )('ng-pending', N.is('pending'));
                            },
                            features: [l.qOj],
                        })),
                        I
                    );
                })(),
                ht = (() => {
                    class I extends nr {
                        constructor(E) {
                            super(E);
                        }
                    }
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)(l.Y36(xt, 10));
                        }),
                        (I.ɵdir = l.lG2({
                            type: I,
                            selectors: [
                                ['', 'formGroupName', ''],
                                ['', 'formArrayName', ''],
                                ['', 'ngModelGroup', ''],
                                ['', 'formGroup', ''],
                                ['form', 3, 'ngNoForm', ''],
                                ['', 'ngForm', ''],
                            ],
                            hostVars: 16,
                            hostBindings: function (E, N) {
                                2 & E &&
                                    l.ekj('ng-untouched', N.is('untouched'))(
                                        'ng-touched',
                                        N.is('touched')
                                    )('ng-pristine', N.is('pristine'))(
                                        'ng-dirty',
                                        N.is('dirty')
                                    )('ng-valid', N.is('valid'))(
                                        'ng-invalid',
                                        N.is('invalid')
                                    )('ng-pending', N.is('pending'))(
                                        'ng-submitted',
                                        N.is('submitted')
                                    );
                            },
                            features: [l.qOj],
                        })),
                        I
                    );
                })();
            function pe(I, D) {
                return [...D.path, I];
            }
            function Ne(I, D) {
                ct(I, D),
                    D.valueAccessor.writeValue(I.value),
                    (function on(I, D) {
                        D.valueAccessor.registerOnChange((E) => {
                            (I._pendingValue = E),
                                (I._pendingChange = !0),
                                (I._pendingDirty = !0),
                                'change' === I.updateOn && bt(I, D);
                        });
                    })(I, D),
                    (function Xn(I, D) {
                        const E = (N, He) => {
                            D.valueAccessor.writeValue(N),
                                He && D.viewToModelUpdate(N);
                        };
                        I.registerOnChange(E),
                            D._registerOnDestroy(() => {
                                I._unregisterOnChange(E);
                            });
                    })(I, D),
                    (function Sn(I, D) {
                        D.valueAccessor.registerOnTouched(() => {
                            (I._pendingTouched = !0),
                                'blur' === I.updateOn &&
                                    I._pendingChange &&
                                    bt(I, D),
                                'submit' !== I.updateOn && I.markAsTouched();
                        });
                    })(I, D),
                    (function Ct(I, D) {
                        if (D.valueAccessor.setDisabledState) {
                            const E = (N) => {
                                D.valueAccessor.setDisabledState(N);
                            };
                            I.registerOnDisabledChange(E),
                                D._registerOnDestroy(() => {
                                    I._unregisterOnDisabledChange(E);
                                });
                        }
                    })(I, D);
            }
            function Be(I, D, E = !0) {
                const N = () => {};
                D.valueAccessor &&
                    (D.valueAccessor.registerOnChange(N),
                    D.valueAccessor.registerOnTouched(N)),
                    en(I, D),
                    I &&
                        (D._invokeOnDestroyCallbacks(),
                        I._registerOnCollectionChange(() => {}));
            }
            function Qe(I, D) {
                I.forEach((E) => {
                    E.registerOnValidatorChange &&
                        E.registerOnValidatorChange(D);
                });
            }
            function ct(I, D) {
                const E = Fe(I);
                null !== D.validator
                    ? I.setValidators(Hn(E, D.validator))
                    : 'function' == typeof E && I.setValidators([E]);
                const N = Ye(I);
                null !== D.asyncValidator
                    ? I.setAsyncValidators(Hn(N, D.asyncValidator))
                    : 'function' == typeof N && I.setAsyncValidators([N]);
                const He = () => I.updateValueAndValidity();
                Qe(D._rawValidators, He), Qe(D._rawAsyncValidators, He);
            }
            function en(I, D) {
                let E = !1;
                if (null !== I) {
                    if (null !== D.validator) {
                        const He = Fe(I);
                        if (Array.isArray(He) && He.length > 0) {
                            const Ae = He.filter((Tt) => Tt !== D.validator);
                            Ae.length !== He.length &&
                                ((E = !0), I.setValidators(Ae));
                        }
                    }
                    if (null !== D.asyncValidator) {
                        const He = Ye(I);
                        if (Array.isArray(He) && He.length > 0) {
                            const Ae = He.filter(
                                (Tt) => Tt !== D.asyncValidator
                            );
                            Ae.length !== He.length &&
                                ((E = !0), I.setAsyncValidators(Ae));
                        }
                    }
                }
                const N = () => {};
                return Qe(D._rawValidators, N), Qe(D._rawAsyncValidators, N), E;
            }
            function bt(I, D) {
                I._pendingDirty && I.markAsDirty(),
                    I.setValue(I._pendingValue, { emitModelToViewChange: !1 }),
                    D.viewToModelUpdate(I._pendingValue),
                    (I._pendingChange = !1);
            }
            function vn(I, D) {
                if (!I.hasOwnProperty('model')) return !1;
                const E = I.model;
                return !!E.isFirstChange() || !Object.is(D, E.currentValue);
            }
            function Zn(I, D) {
                if (!D) return null;
                let E, N, He;
                return (
                    Array.isArray(D),
                    D.forEach((Ae) => {
                        Ae.constructor === Y
                            ? (E = Ae)
                            : (function Gn(I) {
                                  return (
                                      Object.getPrototypeOf(I.constructor) ===
                                      Ee
                                  );
                              })(Ae)
                            ? (N = Ae)
                            : (He = Ae);
                    }),
                    He || N || E || null
                );
            }
            function Tn(I, D) {
                const E = I.indexOf(D);
                E > -1 && I.splice(E, 1);
            }
            const or = 'VALID',
                Wn = 'INVALID',
                rt = 'PENDING',
                Ot = 'DISABLED';
            function zn(I) {
                return (mn(I) ? I.validators : I) || null;
            }
            function pr(I) {
                return Array.isArray(I) ? Kt(I) : I || null;
            }
            function En(I, D) {
                return (mn(D) ? D.asyncValidators : I) || null;
            }
            function ar(I) {
                return Array.isArray(I) ? qt(I) : I || null;
            }
            function mn(I) {
                return null != I && !Array.isArray(I) && 'object' == typeof I;
            }
            const Cr = (I) => I instanceof Dn,
                In = (I) => I instanceof dr,
                Wt = (I) => I instanceof ee;
            function br(I) {
                return Cr(I) ? I.value : I.getRawValue();
            }
            function _r(I, D) {
                const E = In(I),
                    N = I.controls;
                if (!(E ? Object.keys(N) : N).length) throw new l.vHH(1e3, '');
                if (!N[D]) throw new l.vHH(1001, '');
            }
            function Tr(I, D) {
                In(I),
                    I._forEachChild((N, He) => {
                        if (void 0 === D[He]) throw new l.vHH(1002, '');
                    });
            }
            class $n {
                constructor(D, E) {
                    (this._pendingDirty = !1),
                        (this._hasOwnPendingAsyncValidator = !1),
                        (this._pendingTouched = !1),
                        (this._onCollectionChange = () => {}),
                        (this._parent = null),
                        (this.pristine = !0),
                        (this.touched = !1),
                        (this._onDisabledChange = []),
                        (this._rawValidators = D),
                        (this._rawAsyncValidators = E),
                        (this._composedValidatorFn = pr(this._rawValidators)),
                        (this._composedAsyncValidatorFn = ar(
                            this._rawAsyncValidators
                        ));
                }
                get validator() {
                    return this._composedValidatorFn;
                }
                set validator(D) {
                    this._rawValidators = this._composedValidatorFn = D;
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn;
                }
                set asyncValidator(D) {
                    this._rawAsyncValidators = this._composedAsyncValidatorFn =
                        D;
                }
                get parent() {
                    return this._parent;
                }
                get valid() {
                    return this.status === or;
                }
                get invalid() {
                    return this.status === Wn;
                }
                get pending() {
                    return this.status == rt;
                }
                get disabled() {
                    return this.status === Ot;
                }
                get enabled() {
                    return this.status !== Ot;
                }
                get dirty() {
                    return !this.pristine;
                }
                get untouched() {
                    return !this.touched;
                }
                get updateOn() {
                    return this._updateOn
                        ? this._updateOn
                        : this.parent
                        ? this.parent.updateOn
                        : 'change';
                }
                setValidators(D) {
                    (this._rawValidators = D),
                        (this._composedValidatorFn = pr(D));
                }
                setAsyncValidators(D) {
                    (this._rawAsyncValidators = D),
                        (this._composedAsyncValidatorFn = ar(D));
                }
                addValidators(D) {
                    this.setValidators(ot(D, this._rawValidators));
                }
                addAsyncValidators(D) {
                    this.setAsyncValidators(ot(D, this._rawAsyncValidators));
                }
                removeValidators(D) {
                    this.setValidators(We(D, this._rawValidators));
                }
                removeAsyncValidators(D) {
                    this.setAsyncValidators(We(D, this._rawAsyncValidators));
                }
                hasValidator(D) {
                    return Te(this._rawValidators, D);
                }
                hasAsyncValidator(D) {
                    return Te(this._rawAsyncValidators, D);
                }
                clearValidators() {
                    this.validator = null;
                }
                clearAsyncValidators() {
                    this.asyncValidator = null;
                }
                markAsTouched(D = {}) {
                    (this.touched = !0),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.markAsTouched(D);
                }
                markAllAsTouched() {
                    this.markAsTouched({ onlySelf: !0 }),
                        this._forEachChild((D) => D.markAllAsTouched());
                }
                markAsUntouched(D = {}) {
                    (this.touched = !1),
                        (this._pendingTouched = !1),
                        this._forEachChild((E) => {
                            E.markAsUntouched({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updateTouched(D);
                }
                markAsDirty(D = {}) {
                    (this.pristine = !1),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.markAsDirty(D);
                }
                markAsPristine(D = {}) {
                    (this.pristine = !0),
                        (this._pendingDirty = !1),
                        this._forEachChild((E) => {
                            E.markAsPristine({ onlySelf: !0 });
                        }),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updatePristine(D);
                }
                markAsPending(D = {}) {
                    (this.status = rt),
                        !1 !== D.emitEvent &&
                            this.statusChanges.emit(this.status),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.markAsPending(D);
                }
                disable(D = {}) {
                    const E = this._parentMarkedDirty(D.onlySelf);
                    (this.status = Ot),
                        (this.errors = null),
                        this._forEachChild((N) => {
                            N.disable(
                                Object.assign(Object.assign({}, D), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this._updateValue(),
                        !1 !== D.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, D), {
                                skipPristineCheck: E,
                            })
                        ),
                        this._onDisabledChange.forEach((N) => N(!0));
                }
                enable(D = {}) {
                    const E = this._parentMarkedDirty(D.onlySelf);
                    (this.status = or),
                        this._forEachChild((N) => {
                            N.enable(
                                Object.assign(Object.assign({}, D), {
                                    onlySelf: !0,
                                })
                            );
                        }),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: D.emitEvent,
                        }),
                        this._updateAncestors(
                            Object.assign(Object.assign({}, D), {
                                skipPristineCheck: E,
                            })
                        ),
                        this._onDisabledChange.forEach((N) => N(!1));
                }
                _updateAncestors(D) {
                    this._parent &&
                        !D.onlySelf &&
                        (this._parent.updateValueAndValidity(D),
                        D.skipPristineCheck || this._parent._updatePristine(),
                        this._parent._updateTouched());
                }
                setParent(D) {
                    this._parent = D;
                }
                updateValueAndValidity(D = {}) {
                    this._setInitialStatus(),
                        this._updateValue(),
                        this.enabled &&
                            (this._cancelExistingSubscription(),
                            (this.errors = this._runValidator()),
                            (this.status = this._calculateStatus()),
                            (this.status === or || this.status === rt) &&
                                this._runAsyncValidator(D.emitEvent)),
                        !1 !== D.emitEvent &&
                            (this.valueChanges.emit(this.value),
                            this.statusChanges.emit(this.status)),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent.updateValueAndValidity(D);
                }
                _updateTreeValidity(D = { emitEvent: !0 }) {
                    this._forEachChild((E) => E._updateTreeValidity(D)),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: D.emitEvent,
                        });
                }
                _setInitialStatus() {
                    this.status = this._allControlsDisabled() ? Ot : or;
                }
                _runValidator() {
                    return this.validator ? this.validator(this) : null;
                }
                _runAsyncValidator(D) {
                    if (this.asyncValidator) {
                        (this.status = rt),
                            (this._hasOwnPendingAsyncValidator = !0);
                        const E = un(this.asyncValidator(this));
                        this._asyncValidationSubscription = E.subscribe((N) => {
                            (this._hasOwnPendingAsyncValidator = !1),
                                this.setErrors(N, { emitEvent: D });
                        });
                    }
                }
                _cancelExistingSubscription() {
                    this._asyncValidationSubscription &&
                        (this._asyncValidationSubscription.unsubscribe(),
                        (this._hasOwnPendingAsyncValidator = !1));
                }
                setErrors(D, E = {}) {
                    (this.errors = D),
                        this._updateControlsErrors(!1 !== E.emitEvent);
                }
                get(D) {
                    return (function pn(I, D, E) {
                        if (
                            null == D ||
                            (Array.isArray(D) || (D = D.split(E)),
                            Array.isArray(D) && 0 === D.length)
                        )
                            return null;
                        let N = I;
                        return (
                            D.forEach((He) => {
                                N = In(N)
                                    ? N.controls.hasOwnProperty(He)
                                        ? N.controls[He]
                                        : null
                                    : (Wt(N) && N.at(He)) || null;
                            }),
                            N
                        );
                    })(this, D, '.');
                }
                getError(D, E) {
                    const N = E ? this.get(E) : this;
                    return N && N.errors ? N.errors[D] : null;
                }
                hasError(D, E) {
                    return !!this.getError(D, E);
                }
                get root() {
                    let D = this;
                    for (; D._parent; ) D = D._parent;
                    return D;
                }
                _updateControlsErrors(D) {
                    (this.status = this._calculateStatus()),
                        D && this.statusChanges.emit(this.status),
                        this._parent && this._parent._updateControlsErrors(D);
                }
                _initObservables() {
                    (this.valueChanges = new l.vpe()),
                        (this.statusChanges = new l.vpe());
                }
                _calculateStatus() {
                    return this._allControlsDisabled()
                        ? Ot
                        : this.errors
                        ? Wn
                        : this._hasOwnPendingAsyncValidator ||
                          this._anyControlsHaveStatus(rt)
                        ? rt
                        : this._anyControlsHaveStatus(Wn)
                        ? Wn
                        : or;
                }
                _anyControlsHaveStatus(D) {
                    return this._anyControls((E) => E.status === D);
                }
                _anyControlsDirty() {
                    return this._anyControls((D) => D.dirty);
                }
                _anyControlsTouched() {
                    return this._anyControls((D) => D.touched);
                }
                _updatePristine(D = {}) {
                    (this.pristine = !this._anyControlsDirty()),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updatePristine(D);
                }
                _updateTouched(D = {}) {
                    (this.touched = this._anyControlsTouched()),
                        this._parent &&
                            !D.onlySelf &&
                            this._parent._updateTouched(D);
                }
                _isBoxedValue(D) {
                    return (
                        'object' == typeof D &&
                        null !== D &&
                        2 === Object.keys(D).length &&
                        'value' in D &&
                        'disabled' in D
                    );
                }
                _registerOnCollectionChange(D) {
                    this._onCollectionChange = D;
                }
                _setUpdateStrategy(D) {
                    mn(D) &&
                        null != D.updateOn &&
                        (this._updateOn = D.updateOn);
                }
                _parentMarkedDirty(D) {
                    return (
                        !D &&
                        !(!this._parent || !this._parent.dirty) &&
                        !this._parent._anyControlsDirty()
                    );
                }
            }
            class Dn extends $n {
                constructor(D = null, E, N) {
                    super(zn(E), En(N, E)),
                        (this.defaultValue = null),
                        (this._onChange = []),
                        (this._pendingChange = !1),
                        this._applyFormState(D),
                        this._setUpdateStrategy(E),
                        this._initObservables(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        }),
                        mn(E) &&
                            E.initialValueIsDefault &&
                            (this.defaultValue = this._isBoxedValue(D)
                                ? D.value
                                : D);
                }
                setValue(D, E = {}) {
                    (this.value = this._pendingValue = D),
                        this._onChange.length &&
                            !1 !== E.emitModelToViewChange &&
                            this._onChange.forEach((N) =>
                                N(this.value, !1 !== E.emitViewToModelChange)
                            ),
                        this.updateValueAndValidity(E);
                }
                patchValue(D, E = {}) {
                    this.setValue(D, E);
                }
                reset(D = this.defaultValue, E = {}) {
                    this._applyFormState(D),
                        this.markAsPristine(E),
                        this.markAsUntouched(E),
                        this.setValue(this.value, E),
                        (this._pendingChange = !1);
                }
                _updateValue() {}
                _anyControls(D) {
                    return !1;
                }
                _allControlsDisabled() {
                    return this.disabled;
                }
                registerOnChange(D) {
                    this._onChange.push(D);
                }
                _unregisterOnChange(D) {
                    Tn(this._onChange, D);
                }
                registerOnDisabledChange(D) {
                    this._onDisabledChange.push(D);
                }
                _unregisterOnDisabledChange(D) {
                    Tn(this._onDisabledChange, D);
                }
                _forEachChild(D) {}
                _syncPendingControls() {
                    return !(
                        'submit' !== this.updateOn ||
                        (this._pendingDirty && this.markAsDirty(),
                        this._pendingTouched && this.markAsTouched(),
                        !this._pendingChange) ||
                        (this.setValue(this._pendingValue, {
                            onlySelf: !0,
                            emitModelToViewChange: !1,
                        }),
                        0)
                    );
                }
                _applyFormState(D) {
                    this._isBoxedValue(D)
                        ? ((this.value = this._pendingValue = D.value),
                          D.disabled
                              ? this.disable({ onlySelf: !0, emitEvent: !1 })
                              : this.enable({ onlySelf: !0, emitEvent: !1 }))
                        : (this.value = this._pendingValue = D);
                }
            }
            class dr extends $n {
                constructor(D, E, N) {
                    super(zn(E), En(N, E)),
                        (this.controls = D),
                        this._initObservables(),
                        this._setUpdateStrategy(E),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                registerControl(D, E) {
                    return this.controls[D]
                        ? this.controls[D]
                        : ((this.controls[D] = E),
                          E.setParent(this),
                          E._registerOnCollectionChange(
                              this._onCollectionChange
                          ),
                          E);
                }
                addControl(D, E, N = {}) {
                    this.registerControl(D, E),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent }),
                        this._onCollectionChange();
                }
                removeControl(D, E = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        delete this.controls[D],
                        this.updateValueAndValidity({ emitEvent: E.emitEvent }),
                        this._onCollectionChange();
                }
                setControl(D, E, N = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        delete this.controls[D],
                        E && this.registerControl(D, E),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent }),
                        this._onCollectionChange();
                }
                contains(D) {
                    return (
                        this.controls.hasOwnProperty(D) &&
                        this.controls[D].enabled
                    );
                }
                setValue(D, E = {}) {
                    Tr(this, D),
                        Object.keys(D).forEach((N) => {
                            _r(this, N),
                                this.controls[N].setValue(D[N], {
                                    onlySelf: !0,
                                    emitEvent: E.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(E);
                }
                patchValue(D, E = {}) {
                    null != D &&
                        (Object.keys(D).forEach((N) => {
                            this.controls[N] &&
                                this.controls[N].patchValue(D[N], {
                                    onlySelf: !0,
                                    emitEvent: E.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(E));
                }
                reset(D = {}, E = {}) {
                    this._forEachChild((N, He) => {
                        N.reset(D[He], {
                            onlySelf: !0,
                            emitEvent: E.emitEvent,
                        });
                    }),
                        this._updatePristine(E),
                        this._updateTouched(E),
                        this.updateValueAndValidity(E);
                }
                getRawValue() {
                    return this._reduceChildren(
                        {},
                        (D, E, N) => ((D[N] = br(E)), D)
                    );
                }
                _syncPendingControls() {
                    let D = this._reduceChildren(
                        !1,
                        (E, N) => !!N._syncPendingControls() || E
                    );
                    return (
                        D && this.updateValueAndValidity({ onlySelf: !0 }), D
                    );
                }
                _forEachChild(D) {
                    Object.keys(this.controls).forEach((E) => {
                        const N = this.controls[E];
                        N && D(N, E);
                    });
                }
                _setUpControls() {
                    this._forEachChild((D) => {
                        D.setParent(this),
                            D._registerOnCollectionChange(
                                this._onCollectionChange
                            );
                    });
                }
                _updateValue() {
                    this.value = this._reduceValue();
                }
                _anyControls(D) {
                    for (const E of Object.keys(this.controls)) {
                        const N = this.controls[E];
                        if (this.contains(E) && D(N)) return !0;
                    }
                    return !1;
                }
                _reduceValue() {
                    return this._reduceChildren(
                        {},
                        (D, E, N) => (
                            (E.enabled || this.disabled) && (D[N] = E.value), D
                        )
                    );
                }
                _reduceChildren(D, E) {
                    let N = D;
                    return (
                        this._forEachChild((He, Ae) => {
                            N = E(N, He, Ae);
                        }),
                        N
                    );
                }
                _allControlsDisabled() {
                    for (const D of Object.keys(this.controls))
                        if (this.controls[D].enabled) return !1;
                    return (
                        Object.keys(this.controls).length > 0 || this.disabled
                    );
                }
            }
            class ee extends $n {
                constructor(D, E, N) {
                    super(zn(E), En(N, E)),
                        (this.controls = D),
                        this._initObservables(),
                        this._setUpdateStrategy(E),
                        this._setUpControls(),
                        this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator,
                        });
                }
                at(D) {
                    return this.controls[D];
                }
                push(D, E = {}) {
                    this.controls.push(D),
                        this._registerControl(D),
                        this.updateValueAndValidity({ emitEvent: E.emitEvent }),
                        this._onCollectionChange();
                }
                insert(D, E, N = {}) {
                    this.controls.splice(D, 0, E),
                        this._registerControl(E),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent });
                }
                removeAt(D, E = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        this.controls.splice(D, 1),
                        this.updateValueAndValidity({ emitEvent: E.emitEvent });
                }
                setControl(D, E, N = {}) {
                    this.controls[D] &&
                        this.controls[D]._registerOnCollectionChange(() => {}),
                        this.controls.splice(D, 1),
                        E &&
                            (this.controls.splice(D, 0, E),
                            this._registerControl(E)),
                        this.updateValueAndValidity({ emitEvent: N.emitEvent }),
                        this._onCollectionChange();
                }
                get length() {
                    return this.controls.length;
                }
                setValue(D, E = {}) {
                    Tr(this, D),
                        D.forEach((N, He) => {
                            _r(this, He),
                                this.at(He).setValue(N, {
                                    onlySelf: !0,
                                    emitEvent: E.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(E);
                }
                patchValue(D, E = {}) {
                    null != D &&
                        (D.forEach((N, He) => {
                            this.at(He) &&
                                this.at(He).patchValue(N, {
                                    onlySelf: !0,
                                    emitEvent: E.emitEvent,
                                });
                        }),
                        this.updateValueAndValidity(E));
                }
                reset(D = [], E = {}) {
                    this._forEachChild((N, He) => {
                        N.reset(D[He], {
                            onlySelf: !0,
                            emitEvent: E.emitEvent,
                        });
                    }),
                        this._updatePristine(E),
                        this._updateTouched(E),
                        this.updateValueAndValidity(E);
                }
                getRawValue() {
                    return this.controls.map((D) => br(D));
                }
                clear(D = {}) {
                    this.controls.length < 1 ||
                        (this._forEachChild((E) =>
                            E._registerOnCollectionChange(() => {})
                        ),
                        this.controls.splice(0),
                        this.updateValueAndValidity({
                            emitEvent: D.emitEvent,
                        }));
                }
                _syncPendingControls() {
                    let D = this.controls.reduce(
                        (E, N) => !!N._syncPendingControls() || E,
                        !1
                    );
                    return (
                        D && this.updateValueAndValidity({ onlySelf: !0 }), D
                    );
                }
                _forEachChild(D) {
                    this.controls.forEach((E, N) => {
                        D(E, N);
                    });
                }
                _updateValue() {
                    this.value = this.controls
                        .filter((D) => D.enabled || this.disabled)
                        .map((D) => D.value);
                }
                _anyControls(D) {
                    return this.controls.some((E) => E.enabled && D(E));
                }
                _setUpControls() {
                    this._forEachChild((D) => this._registerControl(D));
                }
                _allControlsDisabled() {
                    for (const D of this.controls) if (D.enabled) return !1;
                    return this.controls.length > 0 || this.disabled;
                }
                _registerControl(D) {
                    D.setParent(this),
                        D._registerOnCollectionChange(this._onCollectionChange);
                }
            }
            const Bn = { provide: jt, useExisting: (0, l.Gpc)(() => Ur) },
                gr = (() => Promise.resolve(null))();
            let Ur = (() => {
                    class I extends jt {
                        constructor(E, N, He, Ae, Tt) {
                            super(),
                                (this._changeDetectorRef = Tt),
                                (this.control = new Dn()),
                                (this._registered = !1),
                                (this.update = new l.vpe()),
                                (this._parent = E),
                                this._setValidators(N),
                                this._setAsyncValidators(He),
                                (this.valueAccessor = Zn(0, Ae));
                        }
                        ngOnChanges(E) {
                            this._checkForErrors(),
                                this._registered || this._setUpControl(),
                                'isDisabled' in E && this._updateDisabled(E),
                                vn(E, this.viewModel) &&
                                    (this._updateValue(this.model),
                                    (this.viewModel = this.model));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        get path() {
                            return this._parent
                                ? pe(this.name, this._parent)
                                : [this.name];
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        viewToModelUpdate(E) {
                            (this.viewModel = E), this.update.emit(E);
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(),
                                this._isStandalone()
                                    ? this._setUpStandalone()
                                    : this.formDirective.addControl(this),
                                (this._registered = !0);
                        }
                        _setUpdateStrategy() {
                            this.options &&
                                null != this.options.updateOn &&
                                (this.control._updateOn =
                                    this.options.updateOn);
                        }
                        _isStandalone() {
                            return (
                                !this._parent ||
                                !(!this.options || !this.options.standalone)
                            );
                        }
                        _setUpStandalone() {
                            Ne(this.control, this),
                                this.control.updateValueAndValidity({
                                    emitEvent: !1,
                                });
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(),
                                this._checkName();
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options &&
                                this.options.name &&
                                (this.name = this.options.name),
                                this._isStandalone();
                        }
                        _updateValue(E) {
                            gr.then(() => {
                                var N;
                                this.control.setValue(E, {
                                    emitViewToModelChange: !1,
                                }),
                                    null === (N = this._changeDetectorRef) ||
                                        void 0 === N ||
                                        N.markForCheck();
                            });
                        }
                        _updateDisabled(E) {
                            const N = E.isDisabled.currentValue,
                                He = '' === N || (N && 'false' !== N);
                            gr.then(() => {
                                var Ae;
                                He && !this.control.disabled
                                    ? this.control.disable()
                                    : !He &&
                                      this.control.disabled &&
                                      this.control.enable(),
                                    null === (Ae = this._changeDetectorRef) ||
                                        void 0 === Ae ||
                                        Ae.markForCheck();
                            });
                        }
                    }
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)(
                                l.Y36(xt, 9),
                                l.Y36(xe, 10),
                                l.Y36($e, 10),
                                l.Y36(_e, 10),
                                l.Y36(l.sBO, 8)
                            );
                        }),
                        (I.ɵdir = l.lG2({
                            type: I,
                            selectors: [
                                [
                                    '',
                                    'ngModel',
                                    '',
                                    3,
                                    'formControlName',
                                    '',
                                    3,
                                    'formControl',
                                    '',
                                ],
                            ],
                            inputs: {
                                name: 'name',
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                                options: ['ngModelOptions', 'options'],
                            },
                            outputs: { update: 'ngModelChange' },
                            exportAs: ['ngModel'],
                            features: [l._Bn([Bn]), l.qOj, l.TTD],
                        })),
                        I
                    );
                })(),
                Oe = (() => {
                    class I {}
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)();
                        }),
                        (I.ɵmod = l.oAB({ type: I })),
                        (I.ɵinj = l.cJS({})),
                        I
                    );
                })();
            const gn = new l.OlP('NgModelWithFormControlWarning'),
                di = { provide: xt, useExisting: (0, l.Gpc)(() => ti) };
            let ti = (() => {
                class I extends xt {
                    constructor(E, N) {
                        super(),
                            (this.validators = E),
                            (this.asyncValidators = N),
                            (this.submitted = !1),
                            (this._onCollectionChange = () =>
                                this._updateDomValue()),
                            (this.directives = []),
                            (this.form = null),
                            (this.ngSubmit = new l.vpe()),
                            this._setValidators(E),
                            this._setAsyncValidators(N);
                    }
                    ngOnChanges(E) {
                        this._checkFormPresent(),
                            E.hasOwnProperty('form') &&
                                (this._updateValidators(),
                                this._updateDomValue(),
                                this._updateRegistrations(),
                                (this._oldForm = this.form));
                    }
                    ngOnDestroy() {
                        this.form &&
                            (en(this.form, this),
                            this.form._onCollectionChange ===
                                this._onCollectionChange &&
                                this.form._registerOnCollectionChange(
                                    () => {}
                                ));
                    }
                    get formDirective() {
                        return this;
                    }
                    get control() {
                        return this.form;
                    }
                    get path() {
                        return [];
                    }
                    addControl(E) {
                        const N = this.form.get(E.path);
                        return (
                            Ne(N, E),
                            N.updateValueAndValidity({ emitEvent: !1 }),
                            this.directives.push(E),
                            N
                        );
                    }
                    getControl(E) {
                        return this.form.get(E.path);
                    }
                    removeControl(E) {
                        Be(E.control || null, E, !1), Tn(this.directives, E);
                    }
                    addFormGroup(E) {
                        this._setUpFormContainer(E);
                    }
                    removeFormGroup(E) {
                        this._cleanUpFormContainer(E);
                    }
                    getFormGroup(E) {
                        return this.form.get(E.path);
                    }
                    addFormArray(E) {
                        this._setUpFormContainer(E);
                    }
                    removeFormArray(E) {
                        this._cleanUpFormContainer(E);
                    }
                    getFormArray(E) {
                        return this.form.get(E.path);
                    }
                    updateModel(E, N) {
                        this.form.get(E.path).setValue(N);
                    }
                    onSubmit(E) {
                        return (
                            (this.submitted = !0),
                            (function Pr(I, D) {
                                I._syncPendingControls(),
                                    D.forEach((E) => {
                                        const N = E.control;
                                        'submit' === N.updateOn &&
                                            N._pendingChange &&
                                            (E.viewToModelUpdate(
                                                N._pendingValue
                                            ),
                                            (N._pendingChange = !1));
                                    });
                            })(this.form, this.directives),
                            this.ngSubmit.emit(E),
                            !1
                        );
                    }
                    onReset() {
                        this.resetForm();
                    }
                    resetForm(E) {
                        this.form.reset(E), (this.submitted = !1);
                    }
                    _updateDomValue() {
                        this.directives.forEach((E) => {
                            const N = E.control,
                                He = this.form.get(E.path);
                            N !== He &&
                                (Be(N || null, E),
                                Cr(He) && (Ne(He, E), (E.control = He)));
                        }),
                            this.form._updateTreeValidity({ emitEvent: !1 });
                    }
                    _setUpFormContainer(E) {
                        const N = this.form.get(E.path);
                        (function Jt(I, D) {
                            ct(I, D);
                        })(N, E),
                            N.updateValueAndValidity({ emitEvent: !1 });
                    }
                    _cleanUpFormContainer(E) {
                        if (this.form) {
                            const N = this.form.get(E.path);
                            N &&
                                (function Zt(I, D) {
                                    return en(I, D);
                                })(N, E) &&
                                N.updateValueAndValidity({ emitEvent: !1 });
                        }
                    }
                    _updateRegistrations() {
                        this.form._registerOnCollectionChange(
                            this._onCollectionChange
                        ),
                            this._oldForm &&
                                this._oldForm._registerOnCollectionChange(
                                    () => {}
                                );
                    }
                    _updateValidators() {
                        ct(this.form, this),
                            this._oldForm && en(this._oldForm, this);
                    }
                    _checkFormPresent() {}
                }
                return (
                    (I.ɵfac = function (E) {
                        return new (E || I)(l.Y36(xe, 10), l.Y36($e, 10));
                    }),
                    (I.ɵdir = l.lG2({
                        type: I,
                        selectors: [['', 'formGroup', '']],
                        hostBindings: function (E, N) {
                            1 & E &&
                                l.NdJ('submit', function (Ae) {
                                    return N.onSubmit(Ae);
                                })('reset', function () {
                                    return N.onReset();
                                });
                        },
                        inputs: { form: ['formGroup', 'form'] },
                        outputs: { ngSubmit: 'ngSubmit' },
                        exportAs: ['ngForm'],
                        features: [l._Bn([di]), l.qOj, l.TTD],
                    })),
                    I
                );
            })();
            const ri = { provide: jt, useExisting: (0, l.Gpc)(() => fi) };
            let fi = (() => {
                    class I extends jt {
                        constructor(E, N, He, Ae, Tt) {
                            super(),
                                (this._ngModelWarningConfig = Tt),
                                (this._added = !1),
                                (this.update = new l.vpe()),
                                (this._ngModelWarningSent = !1),
                                (this._parent = E),
                                this._setValidators(N),
                                this._setAsyncValidators(He),
                                (this.valueAccessor = Zn(0, Ae));
                        }
                        set isDisabled(E) {}
                        ngOnChanges(E) {
                            this._added || this._setUpControl(),
                                vn(E, this.viewModel) &&
                                    ((this.viewModel = this.model),
                                    this.formDirective.updateModel(
                                        this,
                                        this.model
                                    ));
                        }
                        ngOnDestroy() {
                            this.formDirective &&
                                this.formDirective.removeControl(this);
                        }
                        viewToModelUpdate(E) {
                            (this.viewModel = E), this.update.emit(E);
                        }
                        get path() {
                            return pe(
                                null == this.name
                                    ? this.name
                                    : this.name.toString(),
                                this._parent
                            );
                        }
                        get formDirective() {
                            return this._parent
                                ? this._parent.formDirective
                                : null;
                        }
                        _checkParentType() {}
                        _setUpControl() {
                            this._checkParentType(),
                                (this.control =
                                    this.formDirective.addControl(this)),
                                this.control.disabled &&
                                    this.valueAccessor.setDisabledState &&
                                    this.valueAccessor.setDisabledState(!0),
                                (this._added = !0);
                        }
                    }
                    return (
                        (I._ngModelWarningSentOnce = !1),
                        (I.ɵfac = function (E) {
                            return new (E || I)(
                                l.Y36(xt, 13),
                                l.Y36(xe, 10),
                                l.Y36($e, 10),
                                l.Y36(_e, 10),
                                l.Y36(gn, 8)
                            );
                        }),
                        (I.ɵdir = l.lG2({
                            type: I,
                            selectors: [['', 'formControlName', '']],
                            inputs: {
                                name: ['formControlName', 'name'],
                                isDisabled: ['disabled', 'isDisabled'],
                                model: ['ngModel', 'model'],
                            },
                            outputs: { update: 'ngModelChange' },
                            features: [l._Bn([ri]), l.qOj, l.TTD],
                        })),
                        I
                    );
                })(),
                Vn = (() => {
                    class I {}
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)();
                        }),
                        (I.ɵmod = l.oAB({ type: I })),
                        (I.ɵinj = l.cJS({ imports: [[Oe]] })),
                        I
                    );
                })(),
                Rr = (() => {
                    class I {
                        static withConfig(E) {
                            return {
                                ngModule: I,
                                providers: [
                                    {
                                        provide: gn,
                                        useValue:
                                            E.warnOnNgModelWithFormControl,
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)();
                        }),
                        (I.ɵmod = l.oAB({ type: I })),
                        (I.ɵinj = l.cJS({ imports: [Vn] })),
                        I
                    );
                })(),
                hi = (() => {
                    class I {
                        group(E, N = null) {
                            const He = this._reduceControls(E);
                            let yr,
                                Ae = null,
                                Tt = null;
                            return (
                                null != N &&
                                    ((function Lt(I) {
                                        return (
                                            void 0 !== I.asyncValidators ||
                                            void 0 !== I.validators ||
                                            void 0 !== I.updateOn
                                        );
                                    })(N)
                                        ? ((Ae =
                                              null != N.validators
                                                  ? N.validators
                                                  : null),
                                          (Tt =
                                              null != N.asyncValidators
                                                  ? N.asyncValidators
                                                  : null),
                                          (yr =
                                              null != N.updateOn
                                                  ? N.updateOn
                                                  : void 0))
                                        : ((Ae =
                                              null != N.validator
                                                  ? N.validator
                                                  : null),
                                          (Tt =
                                              null != N.asyncValidator
                                                  ? N.asyncValidator
                                                  : null))),
                                new dr(He, {
                                    asyncValidators: Tt,
                                    updateOn: yr,
                                    validators: Ae,
                                })
                            );
                        }
                        control(E, N, He) {
                            return new Dn(E, N, He);
                        }
                        array(E, N, He) {
                            const Ae = E.map((Tt) => this._createControl(Tt));
                            return new ee(Ae, N, He);
                        }
                        _reduceControls(E) {
                            const N = {};
                            return (
                                Object.keys(E).forEach((He) => {
                                    N[He] = this._createControl(E[He]);
                                }),
                                N
                            );
                        }
                        _createControl(E) {
                            return Cr(E) || In(E) || Wt(E)
                                ? E
                                : Array.isArray(E)
                                ? this.control(
                                      E[0],
                                      E.length > 1 ? E[1] : null,
                                      E.length > 2 ? E[2] : null
                                  )
                                : this.control(E);
                        }
                    }
                    return (
                        (I.ɵfac = function (E) {
                            return new (E || I)();
                        }),
                        (I.ɵprov = l.Yz7({
                            token: I,
                            factory: I.ɵfac,
                            providedIn: Rr,
                        })),
                        I
                    );
                })();
        },
        6115: (de, z, _) => {
            'use strict';
            _.d(z, {
                F0: () => Mr,
                rH: () => Hs,
                Od: () => Do,
                yS: () => oi,
                Bz: () => Li,
                lC: () => Pi,
            });
            var l = _(5e3),
                w = _(8306),
                G = _(4742),
                j = _(8996),
                S = _(4671),
                x = _(3268),
                k = _(7669),
                W = _(1810),
                B = _(5403),
                V = _(9672);
            function De(y, h, f) {
                y ? (0, V.f)(f, y, h) : h();
            }
            var Ee = _(8421);
            function _e(y) {
                return new w.y((h) => {
                    (0, Ee.Xf)(y()).subscribe(h);
                });
            }
            var Se = _(727),
                Z = _(4482);
            function X() {
                return (0, Z.e)((y, h) => {
                    let f = null;
                    y._refCount++;
                    const C = new B.Q(h, void 0, void 0, void 0, () => {
                        if (!y || y._refCount <= 0 || 0 < --y._refCount)
                            return void (f = null);
                        const M = y._connection,
                            L = f;
                        (f = null),
                            M && (!L || M === L) && M.unsubscribe(),
                            h.unsubscribe();
                    });
                    y.subscribe(C), C.closed || (f = y.connect());
                });
            }
            class Ce extends w.y {
                constructor(h, f) {
                    super(),
                        (this.source = h),
                        (this.subjectFactory = f),
                        (this._subject = null),
                        (this._refCount = 0),
                        (this._connection = null),
                        (0, Z.A)(h) && (this.lift = h.lift);
                }
                _subscribe(h) {
                    return this.getSubject().subscribe(h);
                }
                getSubject() {
                    const h = this._subject;
                    return (
                        (!h || h.isStopped) &&
                            (this._subject = this.subjectFactory()),
                        this._subject
                    );
                }
                _teardown() {
                    this._refCount = 0;
                    const { _connection: h } = this;
                    (this._subject = this._connection = null),
                        null == h || h.unsubscribe();
                }
                connect() {
                    let h = this._connection;
                    if (!h) {
                        h = this._connection = new Se.w0();
                        const f = this.getSubject();
                        h.add(
                            this.source.subscribe(
                                new B.Q(
                                    f,
                                    void 0,
                                    () => {
                                        this._teardown(), f.complete();
                                    },
                                    (C) => {
                                        this._teardown(), f.error(C);
                                    },
                                    () => this._teardown()
                                )
                            )
                        ),
                            h.closed &&
                                ((this._connection = null), (h = Se.w0.EMPTY));
                    }
                    return h;
                }
                refCount() {
                    return X()(this);
                }
            }
            var ae = _(9646),
                Y = _(1135),
                ie = _(6805),
                se = _(7272),
                xe = _(515),
                $e = _(7579),
                it = _(9300);
            function ne(y) {
                return y <= 0
                    ? () => xe.E
                    : (0, Z.e)((h, f) => {
                          let C = [];
                          h.subscribe(
                              new B.Q(
                                  f,
                                  (M) => {
                                      C.push(M), y < C.length && C.shift();
                                  },
                                  () => {
                                      for (const M of C) f.next(M);
                                      f.complete();
                                  },
                                  void 0,
                                  () => {
                                      C = null;
                                  }
                              )
                          );
                      });
            }
            var Pe = _(8068),
                le = _(6590),
                ye = _(4004),
                ut = _(3900),
                Pt = _(5698),
                ln = _(8675),
                nt = _(5026),
                st = _(262),
                un = _(4351),
                Bt = _(590),
                Gt = _(5577),
                mt = _(8505),
                wn = _(8189),
                dn = _(9808);
            class Kt {
                constructor(h, f) {
                    (this.id = h), (this.url = f);
                }
            }
            class Nn extends Kt {
                constructor(h, f, C = 'imperative', M = null) {
                    super(h, f),
                        (this.navigationTrigger = C),
                        (this.restoredState = M);
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class qt extends Kt {
                constructor(h, f, C) {
                    super(h, f), (this.urlAfterRedirects = C);
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
                }
            }
            class Hn extends Kt {
                constructor(h, f, C) {
                    super(h, f), (this.reason = C);
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
                }
            }
            class Fe extends Kt {
                constructor(h, f, C) {
                    super(h, f), (this.error = C);
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
                }
            }
            class Ye extends Kt {
                constructor(h, f, C, M) {
                    super(h, f), (this.urlAfterRedirects = C), (this.state = M);
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class q extends Kt {
                constructor(h, f, C, M) {
                    super(h, f), (this.urlAfterRedirects = C), (this.state = M);
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Te extends Kt {
                constructor(h, f, C, M, L) {
                    super(h, f),
                        (this.urlAfterRedirects = C),
                        (this.state = M),
                        (this.shouldActivate = L);
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
                }
            }
            class ot extends Kt {
                constructor(h, f, C, M) {
                    super(h, f), (this.urlAfterRedirects = C), (this.state = M);
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class We extends Kt {
                constructor(h, f, C, M) {
                    super(h, f), (this.urlAfterRedirects = C), (this.state = M);
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
                }
            }
            class Rt {
                constructor(h) {
                    this.route = h;
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`;
                }
            }
            class jt {
                constructor(h) {
                    this.route = h;
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`;
                }
            }
            class xt {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ChildActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class nr {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ChildActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class At {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ActivationStart(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class vt {
                constructor(h) {
                    this.snapshot = h;
                }
                toString() {
                    return `ActivationEnd(path: '${
                        (this.snapshot.routeConfig &&
                            this.snapshot.routeConfig.path) ||
                        ''
                    }')`;
                }
            }
            class kt {
                constructor(h, f, C) {
                    (this.routerEvent = h),
                        (this.position = f),
                        (this.anchor = C);
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${
                        this.position
                            ? `${this.position[0]}, ${this.position[1]}`
                            : null
                    }')`;
                }
            }
            const ht = 'primary';
            class fn {
                constructor(h) {
                    this.params = h || {};
                }
                has(h) {
                    return Object.prototype.hasOwnProperty.call(this.params, h);
                }
                get(h) {
                    if (this.has(h)) {
                        const f = this.params[h];
                        return Array.isArray(f) ? f[0] : f;
                    }
                    return null;
                }
                getAll(h) {
                    if (this.has(h)) {
                        const f = this.params[h];
                        return Array.isArray(f) ? f : [f];
                    }
                    return [];
                }
                get keys() {
                    return Object.keys(this.params);
                }
            }
            function Ft(y) {
                return new fn(y);
            }
            const yt = 'ngNavigationCancelingError';
            function _t(y) {
                const h = Error('NavigationCancelingError: ' + y);
                return (h[yt] = !0), h;
            }
            function sr(y, h, f) {
                const C = f.path.split('/');
                if (
                    C.length > y.length ||
                    ('full' === f.pathMatch &&
                        (h.hasChildren() || C.length < y.length))
                )
                    return null;
                const M = {};
                for (let L = 0; L < C.length; L++) {
                    const J = C[L],
                        ue = y[L];
                    if (J.startsWith(':')) M[J.substring(1)] = ue;
                    else if (J !== ue.path) return null;
                }
                return { consumed: y.slice(0, C.length), posParams: M };
            }
            function qn(y, h) {
                const f = y ? Object.keys(y) : void 0,
                    C = h ? Object.keys(h) : void 0;
                if (!f || !C || f.length != C.length) return !1;
                let M;
                for (let L = 0; L < f.length; L++)
                    if (((M = f[L]), !Jn(y[M], h[M]))) return !1;
                return !0;
            }
            function Jn(y, h) {
                if (Array.isArray(y) && Array.isArray(h)) {
                    if (y.length !== h.length) return !1;
                    const f = [...y].sort(),
                        C = [...h].sort();
                    return f.every((M, L) => C[L] === M);
                }
                return y === h;
            }
            function Dr(y) {
                return Array.prototype.concat.apply([], y);
            }
            function te(y) {
                return y.length > 0 ? y[y.length - 1] : null;
            }
            function oe(y, h) {
                for (const f in y) y.hasOwnProperty(f) && h(y[f], f);
            }
            function je(y) {
                return (0, l.CqO)(y)
                    ? y
                    : (0, l.QGY)(y)
                    ? (0, j.D)(Promise.resolve(y))
                    : (0, ae.of)(y);
            }
            const ft = {
                    exact: function Qe(y, h, f) {
                        if (
                            !Zt(y.segments, h.segments) ||
                            !on(y.segments, h.segments, f) ||
                            y.numberOfChildren !== h.numberOfChildren
                        )
                            return !1;
                        for (const C in h.children)
                            if (
                                !y.children[C] ||
                                !Qe(y.children[C], h.children[C], f)
                            )
                                return !1;
                        return !0;
                    },
                    subset: ct,
                },
                pe = {
                    exact: function Be(y, h) {
                        return qn(y, h);
                    },
                    subset: function Ct(y, h) {
                        return (
                            Object.keys(h).length <= Object.keys(y).length &&
                            Object.keys(h).every((f) => Jn(y[f], h[f]))
                        );
                    },
                    ignored: () => !0,
                };
            function Ne(y, h, f) {
                return (
                    ft[f.paths](y.root, h.root, f.matrixParams) &&
                    pe[f.queryParams](y.queryParams, h.queryParams) &&
                    !('exact' === f.fragment && y.fragment !== h.fragment)
                );
            }
            function ct(y, h, f) {
                return en(y, h, h.segments, f);
            }
            function en(y, h, f, C) {
                if (y.segments.length > f.length) {
                    const M = y.segments.slice(0, f.length);
                    return !(!Zt(M, f) || h.hasChildren() || !on(M, f, C));
                }
                if (y.segments.length === f.length) {
                    if (!Zt(y.segments, f) || !on(y.segments, f, C)) return !1;
                    for (const M in h.children)
                        if (
                            !y.children[M] ||
                            !ct(y.children[M], h.children[M], C)
                        )
                            return !1;
                    return !0;
                }
                {
                    const M = f.slice(0, y.segments.length),
                        L = f.slice(y.segments.length);
                    return (
                        !!(
                            Zt(y.segments, M) &&
                            on(y.segments, M, C) &&
                            y.children[ht]
                        ) && en(y.children[ht], h, L, C)
                    );
                }
            }
            function on(y, h, f) {
                return h.every((C, M) => pe[f](y[M].parameters, C.parameters));
            }
            class Sn {
                constructor(h, f, C) {
                    (this.root = h),
                        (this.queryParams = f),
                        (this.fragment = C);
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = Ft(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return Gn.serialize(this);
                }
            }
            class bt {
                constructor(h, f) {
                    (this.segments = h),
                        (this.children = f),
                        (this.parent = null),
                        oe(f, (C, M) => (C.parent = this));
                }
                hasChildren() {
                    return this.numberOfChildren > 0;
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length;
                }
                toString() {
                    return Pr(this);
                }
            }
            class Xn {
                constructor(h, f) {
                    (this.path = h), (this.parameters = f);
                }
                get parameterMap() {
                    return (
                        this._parameterMap ||
                            (this._parameterMap = Ft(this.parameters)),
                        this._parameterMap
                    );
                }
                toString() {
                    return Ot(this);
                }
            }
            function Zt(y, h) {
                return (
                    y.length === h.length &&
                    y.every((f, C) => f.path === h[C].path)
                );
            }
            class an {}
            class vn {
                parse(h) {
                    const f = new Wt(h);
                    return new Sn(
                        f.parseRootSegment(),
                        f.parseQueryParams(),
                        f.parseFragment()
                    );
                }
                serialize(h) {
                    const f = `/${Zn(h.root, !0)}`,
                        C = (function zn(y) {
                            const h = Object.keys(y)
                                .map((f) => {
                                    const C = y[f];
                                    return Array.isArray(C)
                                        ? C.map(
                                              (M) => `${hr(f)}=${hr(M)}`
                                          ).join('&')
                                        : `${hr(f)}=${hr(C)}`;
                                })
                                .filter((f) => !!f);
                            return h.length ? `?${h.join('&')}` : '';
                        })(h.queryParams);
                    return `${f}${C}${
                        'string' == typeof h.fragment
                            ? `#${(function Ln(y) {
                                  return encodeURI(y);
                              })(h.fragment)}`
                            : ''
                    }`;
                }
            }
            const Gn = new vn();
            function Pr(y) {
                return y.segments.map((h) => Ot(h)).join('/');
            }
            function Zn(y, h) {
                if (!y.hasChildren()) return Pr(y);
                if (h) {
                    const f = y.children[ht] ? Zn(y.children[ht], !1) : '',
                        C = [];
                    return (
                        oe(y.children, (M, L) => {
                            L !== ht && C.push(`${L}:${Zn(M, !1)}`);
                        }),
                        C.length > 0 ? `${f}(${C.join('//')})` : f
                    );
                }
                {
                    const f = (function _n(y, h) {
                        let f = [];
                        return (
                            oe(y.children, (C, M) => {
                                M === ht && (f = f.concat(h(C, M)));
                            }),
                            oe(y.children, (C, M) => {
                                M !== ht && (f = f.concat(h(C, M)));
                            }),
                            f
                        );
                    })(y, (C, M) =>
                        M === ht
                            ? [Zn(y.children[ht], !1)]
                            : [`${M}:${Zn(C, !1)}`]
                    );
                    return 1 === Object.keys(y.children).length &&
                        null != y.children[ht]
                        ? `${Pr(y)}/${f[0]}`
                        : `${Pr(y)}/(${f.join('//')})`;
                }
            }
            function Tn(y) {
                return encodeURIComponent(y)
                    .replace(/%40/g, '@')
                    .replace(/%3A/gi, ':')
                    .replace(/%24/g, '$')
                    .replace(/%2C/gi, ',');
            }
            function hr(y) {
                return Tn(y).replace(/%3B/gi, ';');
            }
            function or(y) {
                return Tn(y)
                    .replace(/\(/g, '%28')
                    .replace(/\)/g, '%29')
                    .replace(/%26/gi, '&');
            }
            function Wn(y) {
                return decodeURIComponent(y);
            }
            function rt(y) {
                return Wn(y.replace(/\+/g, '%20'));
            }
            function Ot(y) {
                return `${or(y.path)}${(function pn(y) {
                    return Object.keys(y)
                        .map((h) => `;${or(h)}=${or(y[h])}`)
                        .join('');
                })(y.parameters)}`;
            }
            const pr = /^[^\/()?;=#]+/;
            function En(y) {
                const h = y.match(pr);
                return h ? h[0] : '';
            }
            const ar = /^[^=?&#]+/,
                Cr = /^[^&#]+/;
            class Wt {
                constructor(h) {
                    (this.url = h), (this.remaining = h);
                }
                parseRootSegment() {
                    return (
                        this.consumeOptional('/'),
                        '' === this.remaining ||
                        this.peekStartsWith('?') ||
                        this.peekStartsWith('#')
                            ? new bt([], {})
                            : new bt([], this.parseChildren())
                    );
                }
                parseQueryParams() {
                    const h = {};
                    if (this.consumeOptional('?'))
                        do {
                            this.parseQueryParam(h);
                        } while (this.consumeOptional('&'));
                    return h;
                }
                parseFragment() {
                    return this.consumeOptional('#')
                        ? decodeURIComponent(this.remaining)
                        : null;
                }
                parseChildren() {
                    if ('' === this.remaining) return {};
                    this.consumeOptional('/');
                    const h = [];
                    for (
                        this.peekStartsWith('(') || h.push(this.parseSegment());
                        this.peekStartsWith('/') &&
                        !this.peekStartsWith('//') &&
                        !this.peekStartsWith('/(');

                    )
                        this.capture('/'), h.push(this.parseSegment());
                    let f = {};
                    this.peekStartsWith('/(') &&
                        (this.capture('/'), (f = this.parseParens(!0)));
                    let C = {};
                    return (
                        this.peekStartsWith('(') && (C = this.parseParens(!1)),
                        (h.length > 0 || Object.keys(f).length > 0) &&
                            (C[ht] = new bt(h, f)),
                        C
                    );
                }
                parseSegment() {
                    const h = En(this.remaining);
                    if ('' === h && this.peekStartsWith(';'))
                        throw new Error(
                            `Empty path url segment cannot have parameters: '${this.remaining}'.`
                        );
                    return (
                        this.capture(h), new Xn(Wn(h), this.parseMatrixParams())
                    );
                }
                parseMatrixParams() {
                    const h = {};
                    for (; this.consumeOptional(';'); ) this.parseParam(h);
                    return h;
                }
                parseParam(h) {
                    const f = En(this.remaining);
                    if (!f) return;
                    this.capture(f);
                    let C = '';
                    if (this.consumeOptional('=')) {
                        const M = En(this.remaining);
                        M && ((C = M), this.capture(C));
                    }
                    h[Wn(f)] = Wn(C);
                }
                parseQueryParam(h) {
                    const f = (function mn(y) {
                        const h = y.match(ar);
                        return h ? h[0] : '';
                    })(this.remaining);
                    if (!f) return;
                    this.capture(f);
                    let C = '';
                    if (this.consumeOptional('=')) {
                        const J = (function In(y) {
                            const h = y.match(Cr);
                            return h ? h[0] : '';
                        })(this.remaining);
                        J && ((C = J), this.capture(C));
                    }
                    const M = rt(f),
                        L = rt(C);
                    if (h.hasOwnProperty(M)) {
                        let J = h[M];
                        Array.isArray(J) || ((J = [J]), (h[M] = J)), J.push(L);
                    } else h[M] = L;
                }
                parseParens(h) {
                    const f = {};
                    for (
                        this.capture('(');
                        !this.consumeOptional(')') && this.remaining.length > 0;

                    ) {
                        const C = En(this.remaining),
                            M = this.remaining[C.length];
                        if ('/' !== M && ')' !== M && ';' !== M)
                            throw new Error(`Cannot parse url '${this.url}'`);
                        let L;
                        C.indexOf(':') > -1
                            ? ((L = C.substr(0, C.indexOf(':'))),
                              this.capture(L),
                              this.capture(':'))
                            : h && (L = ht);
                        const J = this.parseChildren();
                        (f[L] =
                            1 === Object.keys(J).length
                                ? J[ht]
                                : new bt([], J)),
                            this.consumeOptional('//');
                    }
                    return f;
                }
                peekStartsWith(h) {
                    return this.remaining.startsWith(h);
                }
                consumeOptional(h) {
                    return (
                        !!this.peekStartsWith(h) &&
                        ((this.remaining = this.remaining.substring(h.length)),
                        !0)
                    );
                }
                capture(h) {
                    if (!this.consumeOptional(h))
                        throw new Error(`Expected "${h}".`);
                }
            }
            class br {
                constructor(h) {
                    this._root = h;
                }
                get root() {
                    return this._root.value;
                }
                parent(h) {
                    const f = this.pathFromRoot(h);
                    return f.length > 1 ? f[f.length - 2] : null;
                }
                children(h) {
                    const f = _r(h, this._root);
                    return f ? f.children.map((C) => C.value) : [];
                }
                firstChild(h) {
                    const f = _r(h, this._root);
                    return f && f.children.length > 0
                        ? f.children[0].value
                        : null;
                }
                siblings(h) {
                    const f = Tr(h, this._root);
                    return f.length < 2
                        ? []
                        : f[f.length - 2].children
                              .map((M) => M.value)
                              .filter((M) => M !== h);
                }
                pathFromRoot(h) {
                    return Tr(h, this._root).map((f) => f.value);
                }
            }
            function _r(y, h) {
                if (y === h.value) return h;
                for (const f of h.children) {
                    const C = _r(y, f);
                    if (C) return C;
                }
                return null;
            }
            function Tr(y, h) {
                if (y === h.value) return [h];
                for (const f of h.children) {
                    const C = Tr(y, f);
                    if (C.length) return C.unshift(h), C;
                }
                return [];
            }
            class $n {
                constructor(h, f) {
                    (this.value = h), (this.children = f);
                }
                toString() {
                    return `TreeNode(${this.value})`;
                }
            }
            function Dn(y) {
                const h = {};
                return (
                    y && y.children.forEach((f) => (h[f.value.outlet] = f)), h
                );
            }
            class dr extends br {
                constructor(h, f) {
                    super(h), (this.snapshot = f), Mn(this, h);
                }
                toString() {
                    return this.snapshot.toString();
                }
            }
            function ee(y, h) {
                const f = (function Le(y, h) {
                        const J = new Je(
                            [],
                            {},
                            {},
                            '',
                            {},
                            ht,
                            h,
                            null,
                            y.root,
                            -1,
                            {}
                        );
                        return new Nt('', new $n(J, []));
                    })(y, h),
                    C = new Y.X([new Xn('', {})]),
                    M = new Y.X({}),
                    L = new Y.X({}),
                    J = new Y.X({}),
                    ue = new Y.X(''),
                    Ue = new ge(C, M, J, ue, L, ht, h, f.root);
                return (Ue.snapshot = f.root), new dr(new $n(Ue, []), f);
            }
            class ge {
                constructor(h, f, C, M, L, J, ue, Ue) {
                    (this.url = h),
                        (this.params = f),
                        (this.queryParams = C),
                        (this.fragment = M),
                        (this.data = L),
                        (this.outlet = J),
                        (this.component = ue),
                        (this._futureSnapshot = Ue);
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig;
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap ||
                            (this._paramMap = this.params.pipe(
                                (0, ye.U)((h) => Ft(h))
                            )),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = this.queryParams.pipe(
                                (0, ye.U)((h) => Ft(h))
                            )),
                        this._queryParamMap
                    );
                }
                toString() {
                    return this.snapshot
                        ? this.snapshot.toString()
                        : `Future(${this._futureSnapshot})`;
                }
            }
            function Re(y, h = 'emptyOnly') {
                const f = y.pathFromRoot;
                let C = 0;
                if ('always' !== h)
                    for (C = f.length - 1; C >= 1; ) {
                        const M = f[C],
                            L = f[C - 1];
                        if (M.routeConfig && '' === M.routeConfig.path) C--;
                        else {
                            if (L.component) break;
                            C--;
                        }
                    }
                return (function Xe(y) {
                    return y.reduce(
                        (h, f) => ({
                            params: Object.assign(
                                Object.assign({}, h.params),
                                f.params
                            ),
                            data: Object.assign(
                                Object.assign({}, h.data),
                                f.data
                            ),
                            resolve: Object.assign(
                                Object.assign({}, h.resolve),
                                f._resolvedData
                            ),
                        }),
                        { params: {}, data: {}, resolve: {} }
                    );
                })(f.slice(C));
            }
            class Je {
                constructor(h, f, C, M, L, J, ue, Ue, Dt, Yt, It) {
                    (this.url = h),
                        (this.params = f),
                        (this.queryParams = C),
                        (this.fragment = M),
                        (this.data = L),
                        (this.outlet = J),
                        (this.component = ue),
                        (this.routeConfig = Ue),
                        (this._urlSegment = Dt),
                        (this._lastPathIndex = Yt),
                        (this._resolve = It);
                }
                get root() {
                    return this._routerState.root;
                }
                get parent() {
                    return this._routerState.parent(this);
                }
                get firstChild() {
                    return this._routerState.firstChild(this);
                }
                get children() {
                    return this._routerState.children(this);
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this);
                }
                get paramMap() {
                    return (
                        this._paramMap || (this._paramMap = Ft(this.params)),
                        this._paramMap
                    );
                }
                get queryParamMap() {
                    return (
                        this._queryParamMap ||
                            (this._queryParamMap = Ft(this.queryParams)),
                        this._queryParamMap
                    );
                }
                toString() {
                    return `Route(url:'${this.url
                        .map((C) => C.toString())
                        .join('/')}', path:'${
                        this.routeConfig ? this.routeConfig.path : ''
                    }')`;
                }
            }
            class Nt extends br {
                constructor(h, f) {
                    super(f), (this.url = h), Mn(this, f);
                }
                toString() {
                    return hn(this._root);
                }
            }
            function Mn(y, h) {
                (h.value._routerState = y), h.children.forEach((f) => Mn(y, f));
            }
            function hn(y) {
                const h =
                    y.children.length > 0
                        ? ` { ${y.children.map(hn).join(', ')} } `
                        : '';
                return `${y.value}${h}`;
            }
            function kn(y) {
                if (y.snapshot) {
                    const h = y.snapshot,
                        f = y._futureSnapshot;
                    (y.snapshot = f),
                        qn(h.queryParams, f.queryParams) ||
                            y.queryParams.next(f.queryParams),
                        h.fragment !== f.fragment &&
                            y.fragment.next(f.fragment),
                        qn(h.params, f.params) || y.params.next(f.params),
                        (function nn(y, h) {
                            if (y.length !== h.length) return !1;
                            for (let f = 0; f < y.length; ++f)
                                if (!qn(y[f], h[f])) return !1;
                            return !0;
                        })(h.url, f.url) || y.url.next(f.url),
                        qn(h.data, f.data) || y.data.next(f.data);
                } else
                    (y.snapshot = y._futureSnapshot),
                        y.data.next(y._futureSnapshot.data);
            }
            function Xt(y, h) {
                const f =
                    qn(y.params, h.params) &&
                    (function Jt(y, h) {
                        return (
                            Zt(y, h) &&
                            y.every((f, C) => qn(f.parameters, h[C].parameters))
                        );
                    })(y.url, h.url);
                return (
                    f &&
                    !(!y.parent != !h.parent) &&
                    (!y.parent || Xt(y.parent, h.parent))
                );
            }
            function gr(y, h, f) {
                if (f && y.shouldReuseRoute(h.value, f.value.snapshot)) {
                    const C = f.value;
                    C._futureSnapshot = h.value;
                    const M = (function Ur(y, h, f) {
                        return h.children.map((C) => {
                            for (const M of f.children)
                                if (
                                    y.shouldReuseRoute(
                                        C.value,
                                        M.value.snapshot
                                    )
                                )
                                    return gr(y, C, M);
                            return gr(y, C);
                        });
                    })(y, h, f);
                    return new $n(C, M);
                }
                {
                    if (y.shouldAttach(h.value)) {
                        const L = y.retrieve(h.value);
                        if (null !== L) {
                            const J = L.route;
                            return (
                                (J.value._futureSnapshot = h.value),
                                (J.children = h.children.map((ue) =>
                                    gr(y, ue)
                                )),
                                J
                            );
                        }
                    }
                    const C = (function mr(y) {
                            return new ge(
                                new Y.X(y.url),
                                new Y.X(y.params),
                                new Y.X(y.queryParams),
                                new Y.X(y.fragment),
                                new Y.X(y.data),
                                y.outlet,
                                y.component,
                                y
                            );
                        })(h.value),
                        M = h.children.map((L) => gr(y, L));
                    return new $n(C, M);
                }
            }
            function ci(y) {
                return (
                    'object' == typeof y &&
                    null != y &&
                    !y.outlets &&
                    !y.segmentPath
                );
            }
            function ve(y) {
                return 'object' == typeof y && null != y && y.outlets;
            }
            function me(y, h, f, C, M) {
                let L = {};
                return (
                    C &&
                        oe(C, (J, ue) => {
                            L[ue] = Array.isArray(J)
                                ? J.map((Ue) => `${Ue}`)
                                : `${J}`;
                        }),
                    new Sn(f.root === y ? h : Oe(f.root, y, h), L, M)
                );
            }
            function Oe(y, h, f) {
                const C = {};
                return (
                    oe(y.children, (M, L) => {
                        C[L] = M === h ? f : Oe(M, h, f);
                    }),
                    new bt(y.segments, C)
                );
            }
            class Ze {
                constructor(h, f, C) {
                    if (
                        ((this.isAbsolute = h),
                        (this.numberOfDoubleDots = f),
                        (this.commands = C),
                        h && C.length > 0 && ci(C[0]))
                    )
                        throw new Error(
                            'Root segment cannot have matrix parameters'
                        );
                    const M = C.find(ve);
                    if (M && M !== te(C))
                        throw new Error(
                            '{outlets:{}} has to be the last command'
                        );
                }
                toRoot() {
                    return (
                        this.isAbsolute &&
                        1 === this.commands.length &&
                        '/' == this.commands[0]
                    );
                }
            }
            class Et {
                constructor(h, f, C) {
                    (this.segmentGroup = h),
                        (this.processChildren = f),
                        (this.index = C);
                }
            }
            function Ar(y, h, f) {
                if (
                    (y || (y = new bt([], {})),
                    0 === y.segments.length && y.hasChildren())
                )
                    return di(y, h, f);
                const C = (function ti(y, h, f) {
                        let C = 0,
                            M = h;
                        const L = { match: !1, pathIndex: 0, commandIndex: 0 };
                        for (; M < y.segments.length; ) {
                            if (C >= f.length) return L;
                            const J = y.segments[M],
                                ue = f[C];
                            if (ve(ue)) break;
                            const Ue = `${ue}`,
                                Dt = C < f.length - 1 ? f[C + 1] : null;
                            if (M > 0 && void 0 === Ue) break;
                            if (
                                Ue &&
                                Dt &&
                                'object' == typeof Dt &&
                                void 0 === Dt.outlets
                            ) {
                                if (!ni(Ue, Dt, J)) return L;
                                C += 2;
                            } else {
                                if (!ni(Ue, {}, J)) return L;
                                C++;
                            }
                            M++;
                        }
                        return { match: !0, pathIndex: M, commandIndex: C };
                    })(y, h, f),
                    M = f.slice(C.commandIndex);
                if (C.match && C.pathIndex < y.segments.length) {
                    const L = new bt(y.segments.slice(0, C.pathIndex), {});
                    return (
                        (L.children[ht] = new bt(
                            y.segments.slice(C.pathIndex),
                            y.children
                        )),
                        di(L, 0, M)
                    );
                }
                return C.match && 0 === M.length
                    ? new bt(y.segments, {})
                    : C.match && !y.hasChildren()
                    ? Ui(y, h, f)
                    : C.match
                    ? di(y, 0, M)
                    : Ui(y, h, f);
            }
            function di(y, h, f) {
                if (0 === f.length) return new bt(y.segments, {});
                {
                    const C = (function yn(y) {
                            return ve(y[0]) ? y[0].outlets : { [ht]: y };
                        })(f),
                        M = {};
                    return (
                        oe(C, (L, J) => {
                            'string' == typeof L && (L = [L]),
                                null !== L && (M[J] = Ar(y.children[J], h, L));
                        }),
                        oe(y.children, (L, J) => {
                            void 0 === C[J] && (M[J] = L);
                        }),
                        new bt(y.segments, M)
                    );
                }
            }
            function Ui(y, h, f) {
                const C = y.segments.slice(0, h);
                let M = 0;
                for (; M < f.length; ) {
                    const L = f[M];
                    if (ve(L)) {
                        const Ue = jr(L.outlets);
                        return new bt(C, Ue);
                    }
                    if (0 === M && ci(f[0])) {
                        C.push(new Xn(y.segments[h].path, Oi(f[0]))), M++;
                        continue;
                    }
                    const J = ve(L) ? L.outlets[ht] : `${L}`,
                        ue = M < f.length - 1 ? f[M + 1] : null;
                    J && ue && ci(ue)
                        ? (C.push(new Xn(J, Oi(ue))), (M += 2))
                        : (C.push(new Xn(J, {})), M++);
                }
                return new bt(C, {});
            }
            function jr(y) {
                const h = {};
                return (
                    oe(y, (f, C) => {
                        'string' == typeof f && (f = [f]),
                            null !== f && (h[C] = Ui(new bt([], {}), 0, f));
                    }),
                    h
                );
            }
            function Oi(y) {
                const h = {};
                return oe(y, (f, C) => (h[C] = `${f}`)), h;
            }
            function ni(y, h, f) {
                return y == f.path && qn(h, f.parameters);
            }
            class ri {
                constructor(h, f, C, M) {
                    (this.routeReuseStrategy = h),
                        (this.futureState = f),
                        (this.currState = C),
                        (this.forwardEvent = M);
                }
                activate(h) {
                    const f = this.futureState._root,
                        C = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(f, C, h),
                        kn(this.futureState.root),
                        this.activateChildRoutes(f, C, h);
                }
                deactivateChildRoutes(h, f, C) {
                    const M = Dn(f);
                    h.children.forEach((L) => {
                        const J = L.value.outlet;
                        this.deactivateRoutes(L, M[J], C), delete M[J];
                    }),
                        oe(M, (L, J) => {
                            this.deactivateRouteAndItsChildren(L, C);
                        });
                }
                deactivateRoutes(h, f, C) {
                    const M = h.value,
                        L = f ? f.value : null;
                    if (M === L)
                        if (M.component) {
                            const J = C.getContext(M.outlet);
                            J && this.deactivateChildRoutes(h, f, J.children);
                        } else this.deactivateChildRoutes(h, f, C);
                    else L && this.deactivateRouteAndItsChildren(f, C);
                }
                deactivateRouteAndItsChildren(h, f) {
                    h.value.component &&
                    this.routeReuseStrategy.shouldDetach(h.value.snapshot)
                        ? this.detachAndStoreRouteSubtree(h, f)
                        : this.deactivateRouteAndOutlet(h, f);
                }
                detachAndStoreRouteSubtree(h, f) {
                    const C = f.getContext(h.value.outlet),
                        M = C && h.value.component ? C.children : f,
                        L = Dn(h);
                    for (const J of Object.keys(L))
                        this.deactivateRouteAndItsChildren(L[J], M);
                    if (C && C.outlet) {
                        const J = C.outlet.detach(),
                            ue = C.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(h.value.snapshot, {
                            componentRef: J,
                            route: h,
                            contexts: ue,
                        });
                    }
                }
                deactivateRouteAndOutlet(h, f) {
                    const C = f.getContext(h.value.outlet),
                        M = C && h.value.component ? C.children : f,
                        L = Dn(h);
                    for (const J of Object.keys(L))
                        this.deactivateRouteAndItsChildren(L[J], M);
                    C &&
                        C.outlet &&
                        (C.outlet.deactivate(),
                        C.children.onOutletDeactivated(),
                        (C.attachRef = null),
                        (C.resolver = null),
                        (C.route = null));
                }
                activateChildRoutes(h, f, C) {
                    const M = Dn(f);
                    h.children.forEach((L) => {
                        this.activateRoutes(L, M[L.value.outlet], C),
                            this.forwardEvent(new vt(L.value.snapshot));
                    }),
                        h.children.length &&
                            this.forwardEvent(new nr(h.value.snapshot));
                }
                activateRoutes(h, f, C) {
                    const M = h.value,
                        L = f ? f.value : null;
                    if ((kn(M), M === L))
                        if (M.component) {
                            const J = C.getOrCreateContext(M.outlet);
                            this.activateChildRoutes(h, f, J.children);
                        } else this.activateChildRoutes(h, f, C);
                    else if (M.component) {
                        const J = C.getOrCreateContext(M.outlet);
                        if (this.routeReuseStrategy.shouldAttach(M.snapshot)) {
                            const ue = this.routeReuseStrategy.retrieve(
                                M.snapshot
                            );
                            this.routeReuseStrategy.store(M.snapshot, null),
                                J.children.onOutletReAttached(ue.contexts),
                                (J.attachRef = ue.componentRef),
                                (J.route = ue.route.value),
                                J.outlet &&
                                    J.outlet.attach(
                                        ue.componentRef,
                                        ue.route.value
                                    ),
                                kn(ue.route.value),
                                this.activateChildRoutes(h, null, J.children);
                        } else {
                            const ue = (function fi(y) {
                                    for (let h = y.parent; h; h = h.parent) {
                                        const f = h.routeConfig;
                                        if (f && f._loadedConfig)
                                            return f._loadedConfig;
                                        if (f && f.component) return null;
                                    }
                                    return null;
                                })(M.snapshot),
                                Ue = ue
                                    ? ue.module.componentFactoryResolver
                                    : null;
                            (J.attachRef = null),
                                (J.route = M),
                                (J.resolver = Ue),
                                J.outlet && J.outlet.activateWith(M, Ue),
                                this.activateChildRoutes(h, null, J.children);
                        }
                    } else this.activateChildRoutes(h, null, C);
                }
            }
            class Jr {
                constructor(h, f) {
                    (this.routes = h), (this.module = f);
                }
            }
            function wr(y) {
                return 'function' == typeof y;
            }
            function Xr(y) {
                return y instanceof Sn;
            }
            const $r = Symbol('INITIAL_VALUE');
            function Qn() {
                return (0, ut.w)((y) =>
                    (function U(...y) {
                        const h = (0, k.yG)(y),
                            f = (0, k.jO)(y),
                            { args: C, keys: M } = (0, G.D)(y);
                        if (0 === C.length) return (0, j.D)([], h);
                        const L = new w.y(
                            (function Q(y, h, f = S.y) {
                                return (C) => {
                                    De(
                                        h,
                                        () => {
                                            const { length: M } = y,
                                                L = new Array(M);
                                            let J = M,
                                                ue = M;
                                            for (let Ue = 0; Ue < M; Ue++)
                                                De(
                                                    h,
                                                    () => {
                                                        const Dt = (0, j.D)(
                                                            y[Ue],
                                                            h
                                                        );
                                                        let Yt = !1;
                                                        Dt.subscribe(
                                                            new B.Q(
                                                                C,
                                                                (It) => {
                                                                    (L[Ue] =
                                                                        It),
                                                                        Yt ||
                                                                            ((Yt =
                                                                                !0),
                                                                            ue--),
                                                                        ue ||
                                                                            C.next(
                                                                                f(
                                                                                    L.slice()
                                                                                )
                                                                            );
                                                                },
                                                                () => {
                                                                    --J ||
                                                                        C.complete();
                                                                }
                                                            )
                                                        );
                                                    },
                                                    C
                                                );
                                        },
                                        C
                                    );
                                };
                            })(C, h, M ? (J) => (0, W.n)(M, J) : S.y)
                        );
                        return f ? L.pipe((0, x.Z)(f)) : L;
                    })(y.map((h) => h.pipe((0, Pt.q)(1), (0, ln.O)($r)))).pipe(
                        (0, nt.R)((h, f) => {
                            let C = !1;
                            return f.reduce(
                                (M, L, J) =>
                                    M !== $r
                                        ? M
                                        : (L === $r && (C = !0),
                                          C ||
                                          (!1 !== L &&
                                              J !== f.length - 1 &&
                                              !Xr(L))
                                              ? M
                                              : L),
                                h
                            );
                        }, $r),
                        (0, it.h)((h) => h !== $r),
                        (0, ye.U)((h) => (Xr(h) ? h : !0 === h)),
                        (0, Pt.q)(1)
                    )
                );
            }
            class Ei {
                constructor() {
                    (this.outlet = null),
                        (this.route = null),
                        (this.resolver = null),
                        (this.children = new Yr()),
                        (this.attachRef = null);
                }
            }
            class Yr {
                constructor() {
                    this.contexts = new Map();
                }
                onChildOutletCreated(h, f) {
                    const C = this.getOrCreateContext(h);
                    (C.outlet = f), this.contexts.set(h, C);
                }
                onChildOutletDestroyed(h) {
                    const f = this.getContext(h);
                    f && ((f.outlet = null), (f.attachRef = null));
                }
                onOutletDeactivated() {
                    const h = this.contexts;
                    return (this.contexts = new Map()), h;
                }
                onOutletReAttached(h) {
                    this.contexts = h;
                }
                getOrCreateContext(h) {
                    let f = this.getContext(h);
                    return f || ((f = new Ei()), this.contexts.set(h, f)), f;
                }
                getContext(h) {
                    return this.contexts.get(h) || null;
                }
            }
            let Pi = (() => {
                class y {
                    constructor(f, C, M, L, J) {
                        (this.parentContexts = f),
                            (this.location = C),
                            (this.resolver = M),
                            (this.changeDetector = J),
                            (this.activated = null),
                            (this._activatedRoute = null),
                            (this.activateEvents = new l.vpe()),
                            (this.deactivateEvents = new l.vpe()),
                            (this.attachEvents = new l.vpe()),
                            (this.detachEvents = new l.vpe()),
                            (this.name = L || ht),
                            f.onChildOutletCreated(this.name, this);
                    }
                    ngOnDestroy() {
                        this.parentContexts.onChildOutletDestroyed(this.name);
                    }
                    ngOnInit() {
                        if (!this.activated) {
                            const f = this.parentContexts.getContext(this.name);
                            f &&
                                f.route &&
                                (f.attachRef
                                    ? this.attach(f.attachRef, f.route)
                                    : this.activateWith(
                                          f.route,
                                          f.resolver || null
                                      ));
                        }
                    }
                    get isActivated() {
                        return !!this.activated;
                    }
                    get component() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this.activated.instance;
                    }
                    get activatedRoute() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        return this._activatedRoute;
                    }
                    get activatedRouteData() {
                        return this._activatedRoute
                            ? this._activatedRoute.snapshot.data
                            : {};
                    }
                    detach() {
                        if (!this.activated)
                            throw new Error('Outlet is not activated');
                        this.location.detach();
                        const f = this.activated;
                        return (
                            (this.activated = null),
                            (this._activatedRoute = null),
                            this.detachEvents.emit(f.instance),
                            f
                        );
                    }
                    attach(f, C) {
                        (this.activated = f),
                            (this._activatedRoute = C),
                            this.location.insert(f.hostView),
                            this.attachEvents.emit(f.instance);
                    }
                    deactivate() {
                        if (this.activated) {
                            const f = this.component;
                            this.activated.destroy(),
                                (this.activated = null),
                                (this._activatedRoute = null),
                                this.deactivateEvents.emit(f);
                        }
                    }
                    activateWith(f, C) {
                        if (this.isActivated)
                            throw new Error(
                                'Cannot activate an already activated outlet'
                            );
                        this._activatedRoute = f;
                        const J = (C =
                                C || this.resolver).resolveComponentFactory(
                                f._futureSnapshot.routeConfig.component
                            ),
                            ue = this.parentContexts.getOrCreateContext(
                                this.name
                            ).children,
                            Ue = new ji(f, ue, this.location.injector);
                        (this.activated = this.location.createComponent(
                            J,
                            this.location.length,
                            Ue
                        )),
                            this.changeDetector.markForCheck(),
                            this.activateEvents.emit(this.activated.instance);
                    }
                }
                return (
                    (y.ɵfac = function (f) {
                        return new (f || y)(
                            l.Y36(Yr),
                            l.Y36(l.s_b),
                            l.Y36(l._Vd),
                            l.$8M('name'),
                            l.Y36(l.sBO)
                        );
                    }),
                    (y.ɵdir = l.lG2({
                        type: y,
                        selectors: [['router-outlet']],
                        outputs: {
                            activateEvents: 'activate',
                            deactivateEvents: 'deactivate',
                            attachEvents: 'attach',
                            detachEvents: 'detach',
                        },
                        exportAs: ['outlet'],
                    })),
                    y
                );
            })();
            class ji {
                constructor(h, f, C) {
                    (this.route = h),
                        (this.childContexts = f),
                        (this.parent = C);
                }
                get(h, f) {
                    return h === ge
                        ? this.route
                        : h === Yr
                        ? this.childContexts
                        : this.parent.get(h, f);
                }
            }
            let ii = (() => {
                class y {}
                return (
                    (y.ɵfac = function (f) {
                        return new (f || y)();
                    }),
                    (y.ɵcmp = l.Xpm({
                        type: y,
                        selectors: [['ng-component']],
                        decls: 1,
                        vars: 0,
                        template: function (f, C) {
                            1 & f && l._UZ(0, 'router-outlet');
                        },
                        directives: [Pi],
                        encapsulation: 2,
                    })),
                    y
                );
            })();
            function Ri(y, h = '') {
                for (let f = 0; f < y.length; f++) {
                    const C = y[f];
                    Hi(C, Lr(h, C));
                }
            }
            function Hi(y, h) {
                y.children && Ri(y.children, h);
            }
            function Lr(y, h) {
                return h
                    ? y || h.path
                        ? y && !h.path
                            ? `${y}/`
                            : !y && h.path
                            ? h.path
                            : `${y}/${h.path}`
                        : ''
                    : y;
            }
            function xi(y) {
                const h = y.children && y.children.map(xi),
                    f = h
                        ? Object.assign(Object.assign({}, y), { children: h })
                        : Object.assign({}, y);
                return (
                    !f.component &&
                        (h || f.loadChildren) &&
                        f.outlet &&
                        f.outlet !== ht &&
                        (f.component = ii),
                    f
                );
            }
            function rn(y) {
                return y.outlet || ht;
            }
            function T(y, h) {
                const f = y.filter((C) => rn(C) === h);
                return f.push(...y.filter((C) => rn(C) !== h)), f;
            }
            const F = {
                matched: !1,
                consumedSegments: [],
                lastChild: 0,
                parameters: {},
                positionalParamSegments: {},
            };
            function b(y, h, f) {
                var C;
                if ('' === h.path)
                    return 'full' === h.pathMatch &&
                        (y.hasChildren() || f.length > 0)
                        ? Object.assign({}, F)
                        : {
                              matched: !0,
                              consumedSegments: [],
                              lastChild: 0,
                              parameters: {},
                              positionalParamSegments: {},
                          };
                const L = (h.matcher || sr)(f, y, h);
                if (!L) return Object.assign({}, F);
                const J = {};
                oe(L.posParams, (Ue, Dt) => {
                    J[Dt] = Ue.path;
                });
                const ue =
                    L.consumed.length > 0
                        ? Object.assign(
                              Object.assign({}, J),
                              L.consumed[L.consumed.length - 1].parameters
                          )
                        : J;
                return {
                    matched: !0,
                    consumedSegments: L.consumed,
                    lastChild: L.consumed.length,
                    parameters: ue,
                    positionalParamSegments:
                        null !== (C = L.posParams) && void 0 !== C ? C : {},
                };
            }
            function H(y, h, f, C, M = 'corrected') {
                if (
                    f.length > 0 &&
                    (function Ke(y, h, f) {
                        return f.some((C) => Ut(y, h, C) && rn(C) !== ht);
                    })(y, f, C)
                ) {
                    const J = new bt(
                        h,
                        (function Ve(y, h, f, C) {
                            const M = {};
                            (M[ht] = C),
                                (C._sourceSegment = y),
                                (C._segmentIndexShift = h.length);
                            for (const L of f)
                                if ('' === L.path && rn(L) !== ht) {
                                    const J = new bt([], {});
                                    (J._sourceSegment = y),
                                        (J._segmentIndexShift = h.length),
                                        (M[rn(L)] = J);
                                }
                            return M;
                        })(y, h, C, new bt(f, y.children))
                    );
                    return (
                        (J._sourceSegment = y),
                        (J._segmentIndexShift = h.length),
                        { segmentGroup: J, slicedSegments: [] }
                    );
                }
                if (
                    0 === f.length &&
                    (function wt(y, h, f) {
                        return f.some((C) => Ut(y, h, C));
                    })(y, f, C)
                ) {
                    const J = new bt(
                        y.segments,
                        (function fe(y, h, f, C, M, L) {
                            const J = {};
                            for (const ue of C)
                                if (Ut(y, f, ue) && !M[rn(ue)]) {
                                    const Ue = new bt([], {});
                                    (Ue._sourceSegment = y),
                                        (Ue._segmentIndexShift =
                                            'legacy' === L
                                                ? y.segments.length
                                                : h.length),
                                        (J[rn(ue)] = Ue);
                                }
                            return Object.assign(Object.assign({}, M), J);
                        })(y, h, f, C, y.children, M)
                    );
                    return (
                        (J._sourceSegment = y),
                        (J._segmentIndexShift = h.length),
                        { segmentGroup: J, slicedSegments: f }
                    );
                }
                const L = new bt(y.segments, y.children);
                return (
                    (L._sourceSegment = y),
                    (L._segmentIndexShift = h.length),
                    { segmentGroup: L, slicedSegments: f }
                );
            }
            function Ut(y, h, f) {
                return (
                    (!(y.hasChildren() || h.length > 0) ||
                        'full' !== f.pathMatch) &&
                    '' === f.path
                );
            }
            function Cn(y, h, f, C) {
                return (
                    !!(rn(y) === C || (C !== ht && Ut(h, f, y))) &&
                    ('**' === y.path || b(h, y, f).matched)
                );
            }
            function tn(y, h, f) {
                return 0 === h.length && !y.children[f];
            }
            class sn {
                constructor(h) {
                    this.segmentGroup = h || null;
                }
            }
            class Kn {
                constructor(h) {
                    this.urlTree = h;
                }
            }
            function Pn(y) {
                return new w.y((h) => h.error(new sn(y)));
            }
            function Vn(y) {
                return new w.y((h) => h.error(new Kn(y)));
            }
            function si(y) {
                return new w.y((h) =>
                    h.error(
                        new Error(
                            `Only absolute redirects can have named outlets. redirectTo: '${y}'`
                        )
                    )
                );
            }
            class hi {
                constructor(h, f, C, M, L) {
                    (this.configLoader = f),
                        (this.urlSerializer = C),
                        (this.urlTree = M),
                        (this.config = L),
                        (this.allowRedirects = !0),
                        (this.ngModule = h.get(l.h0i));
                }
                apply() {
                    const h = H(
                            this.urlTree.root,
                            [],
                            [],
                            this.config
                        ).segmentGroup,
                        f = new bt(h.segments, h.children);
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        f,
                        ht
                    )
                        .pipe(
                            (0, ye.U)((L) =>
                                this.createUrlTree(
                                    I(L),
                                    this.urlTree.queryParams,
                                    this.urlTree.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, st.K)((L) => {
                                if (L instanceof Kn)
                                    return (
                                        (this.allowRedirects = !1),
                                        this.match(L.urlTree)
                                    );
                                throw L instanceof sn
                                    ? this.noMatchError(L)
                                    : L;
                            })
                        );
                }
                match(h) {
                    return this.expandSegmentGroup(
                        this.ngModule,
                        this.config,
                        h.root,
                        ht
                    )
                        .pipe(
                            (0, ye.U)((M) =>
                                this.createUrlTree(
                                    I(M),
                                    h.queryParams,
                                    h.fragment
                                )
                            )
                        )
                        .pipe(
                            (0, st.K)((M) => {
                                throw M instanceof sn
                                    ? this.noMatchError(M)
                                    : M;
                            })
                        );
                }
                noMatchError(h) {
                    return new Error(
                        `Cannot match any routes. URL Segment: '${h.segmentGroup}'`
                    );
                }
                createUrlTree(h, f, C) {
                    const M =
                        h.segments.length > 0 ? new bt([], { [ht]: h }) : h;
                    return new Sn(M, f, C);
                }
                expandSegmentGroup(h, f, C, M) {
                    return 0 === C.segments.length && C.hasChildren()
                        ? this.expandChildren(h, f, C).pipe(
                              (0, ye.U)((L) => new bt([], L))
                          )
                        : this.expandSegment(h, C, f, C.segments, M, !0);
                }
                expandChildren(h, f, C) {
                    const M = [];
                    for (const L of Object.keys(C.children))
                        'primary' === L ? M.unshift(L) : M.push(L);
                    return (0, j.D)(M).pipe(
                        (0, un.b)((L) => {
                            const J = C.children[L],
                                ue = T(f, L);
                            return this.expandSegmentGroup(h, ue, J, L).pipe(
                                (0, ye.U)((Ue) => ({ segment: Ue, outlet: L }))
                            );
                        }),
                        (0, nt.R)((L, J) => ((L[J.outlet] = J.segment), L), {}),
                        (function Me(y, h) {
                            const f = arguments.length >= 2;
                            return (C) =>
                                C.pipe(
                                    y ? (0, it.h)((M, L) => y(M, L, C)) : S.y,
                                    ne(1),
                                    f
                                        ? (0, le.d)(h)
                                        : (0, Pe.T)(() => new ie.K())
                                );
                        })()
                    );
                }
                expandSegment(h, f, C, M, L, J) {
                    return (0, j.D)(C).pipe(
                        (0, un.b)((ue) =>
                            this.expandSegmentAgainstRoute(
                                h,
                                f,
                                C,
                                ue,
                                M,
                                L,
                                J
                            ).pipe(
                                (0, st.K)((Dt) => {
                                    if (Dt instanceof sn)
                                        return (0, ae.of)(null);
                                    throw Dt;
                                })
                            )
                        ),
                        (0, Bt.P)((ue) => !!ue),
                        (0, st.K)((ue, Ue) => {
                            if (
                                ue instanceof ie.K ||
                                'EmptyError' === ue.name
                            ) {
                                if (tn(f, M, L))
                                    return (0, ae.of)(new bt([], {}));
                                throw new sn(f);
                            }
                            throw ue;
                        })
                    );
                }
                expandSegmentAgainstRoute(h, f, C, M, L, J, ue) {
                    return Cn(M, f, L, J)
                        ? void 0 === M.redirectTo
                            ? this.matchSegmentAgainstRoute(h, f, M, L, J)
                            : ue && this.allowRedirects
                            ? this.expandSegmentAgainstRouteUsingRedirect(
                                  h,
                                  f,
                                  C,
                                  M,
                                  L,
                                  J
                              )
                            : Pn(f)
                        : Pn(f);
                }
                expandSegmentAgainstRouteUsingRedirect(h, f, C, M, L, J) {
                    return '**' === M.path
                        ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(
                              h,
                              C,
                              M,
                              J
                          )
                        : this.expandRegularSegmentAgainstRouteUsingRedirect(
                              h,
                              f,
                              C,
                              M,
                              L,
                              J
                          );
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(h, f, C, M) {
                    const L = this.applyRedirectCommands([], C.redirectTo, {});
                    return C.redirectTo.startsWith('/')
                        ? Vn(L)
                        : this.lineralizeSegments(C, L).pipe(
                              (0, Gt.z)((J) => {
                                  const ue = new bt(J, {});
                                  return this.expandSegment(h, ue, f, J, M, !1);
                              })
                          );
                }
                expandRegularSegmentAgainstRouteUsingRedirect(
                    h,
                    f,
                    C,
                    M,
                    L,
                    J
                ) {
                    const {
                        matched: ue,
                        consumedSegments: Ue,
                        lastChild: Dt,
                        positionalParamSegments: Yt,
                    } = b(f, M, L);
                    if (!ue) return Pn(f);
                    const It = this.applyRedirectCommands(Ue, M.redirectTo, Yt);
                    return M.redirectTo.startsWith('/')
                        ? Vn(It)
                        : this.lineralizeSegments(M, It).pipe(
                              (0, Gt.z)((Un) =>
                                  this.expandSegment(
                                      h,
                                      f,
                                      C,
                                      Un.concat(L.slice(Dt)),
                                      J,
                                      !1
                                  )
                              )
                          );
                }
                matchSegmentAgainstRoute(h, f, C, M, L) {
                    if ('**' === C.path)
                        return C.loadChildren
                            ? (C._loadedConfig
                                  ? (0, ae.of)(C._loadedConfig)
                                  : this.configLoader.load(h.injector, C)
                              ).pipe(
                                  (0, ye.U)(
                                      (Un) => (
                                          (C._loadedConfig = Un), new bt(M, {})
                                      )
                                  )
                              )
                            : (0, ae.of)(new bt(M, {}));
                    const {
                        matched: J,
                        consumedSegments: ue,
                        lastChild: Ue,
                    } = b(f, C, M);
                    if (!J) return Pn(f);
                    const Dt = M.slice(Ue);
                    return this.getChildConfig(h, C, M).pipe(
                        (0, Gt.z)((It) => {
                            const Un = It.module,
                                jn = It.routes,
                                { segmentGroup: ki, slicedSegments: kr } = H(
                                    f,
                                    ue,
                                    Dt,
                                    jn
                                ),
                                Zr = new bt(ki.segments, ki.children);
                            if (0 === kr.length && Zr.hasChildren())
                                return this.expandChildren(Un, jn, Zr).pipe(
                                    (0, ye.U)((Qr) => new bt(ue, Qr))
                                );
                            if (0 === jn.length && 0 === kr.length)
                                return (0, ae.of)(new bt(ue, {}));
                            const Or = rn(C) === L;
                            return this.expandSegment(
                                Un,
                                Zr,
                                jn,
                                kr,
                                Or ? ht : L,
                                !0
                            ).pipe(
                                (0, ye.U)(
                                    (Wr) =>
                                        new bt(
                                            ue.concat(Wr.segments),
                                            Wr.children
                                        )
                                )
                            );
                        })
                    );
                }
                getChildConfig(h, f, C) {
                    return f.children
                        ? (0, ae.of)(new Jr(f.children, h))
                        : f.loadChildren
                        ? void 0 !== f._loadedConfig
                            ? (0, ae.of)(f._loadedConfig)
                            : this.runCanLoadGuards(h.injector, f, C).pipe(
                                  (0, Gt.z)((M) =>
                                      M
                                          ? this.configLoader
                                                .load(h.injector, f)
                                                .pipe(
                                                    (0, ye.U)(
                                                        (L) => (
                                                            (f._loadedConfig =
                                                                L),
                                                            L
                                                        )
                                                    )
                                                )
                                          : (function Rr(y) {
                                                return new w.y((h) =>
                                                    h.error(
                                                        _t(
                                                            `Cannot load children because the guard of the route "path: '${y.path}'" returned false`
                                                        )
                                                    )
                                                );
                                            })(f)
                                  )
                              )
                        : (0, ae.of)(new Jr([], h));
                }
                runCanLoadGuards(h, f, C) {
                    const M = f.canLoad;
                    if (!M || 0 === M.length) return (0, ae.of)(!0);
                    const L = M.map((J) => {
                        const ue = h.get(J);
                        let Ue;
                        if (
                            (function ns(y) {
                                return y && wr(y.canLoad);
                            })(ue)
                        )
                            Ue = ue.canLoad(f, C);
                        else {
                            if (!wr(ue))
                                throw new Error('Invalid CanLoad guard');
                            Ue = ue(f, C);
                        }
                        return je(Ue);
                    });
                    return (0, ae.of)(L).pipe(
                        Qn(),
                        (0, mt.b)((J) => {
                            if (!Xr(J)) return;
                            const ue = _t(
                                `Redirecting to "${this.urlSerializer.serialize(
                                    J
                                )}"`
                            );
                            throw ((ue.url = J), ue);
                        }),
                        (0, ye.U)((J) => !0 === J)
                    );
                }
                lineralizeSegments(h, f) {
                    let C = [],
                        M = f.root;
                    for (;;) {
                        if (
                            ((C = C.concat(M.segments)),
                            0 === M.numberOfChildren)
                        )
                            return (0, ae.of)(C);
                        if (M.numberOfChildren > 1 || !M.children[ht])
                            return si(h.redirectTo);
                        M = M.children[ht];
                    }
                }
                applyRedirectCommands(h, f, C) {
                    return this.applyRedirectCreatreUrlTree(
                        f,
                        this.urlSerializer.parse(f),
                        h,
                        C
                    );
                }
                applyRedirectCreatreUrlTree(h, f, C, M) {
                    const L = this.createSegmentGroup(h, f.root, C, M);
                    return new Sn(
                        L,
                        this.createQueryParams(
                            f.queryParams,
                            this.urlTree.queryParams
                        ),
                        f.fragment
                    );
                }
                createQueryParams(h, f) {
                    const C = {};
                    return (
                        oe(h, (M, L) => {
                            if ('string' == typeof M && M.startsWith(':')) {
                                const ue = M.substring(1);
                                C[L] = f[ue];
                            } else C[L] = M;
                        }),
                        C
                    );
                }
                createSegmentGroup(h, f, C, M) {
                    const L = this.createSegments(h, f.segments, C, M);
                    let J = {};
                    return (
                        oe(f.children, (ue, Ue) => {
                            J[Ue] = this.createSegmentGroup(h, ue, C, M);
                        }),
                        new bt(L, J)
                    );
                }
                createSegments(h, f, C, M) {
                    return f.map((L) =>
                        L.path.startsWith(':')
                            ? this.findPosParam(h, L, M)
                            : this.findOrReturn(L, C)
                    );
                }
                findPosParam(h, f, C) {
                    const M = C[f.path.substring(1)];
                    if (!M)
                        throw new Error(
                            `Cannot redirect to '${h}'. Cannot find '${f.path}'.`
                        );
                    return M;
                }
                findOrReturn(h, f) {
                    let C = 0;
                    for (const M of f) {
                        if (M.path === h.path) return f.splice(C), M;
                        C++;
                    }
                    return h;
                }
            }
            function I(y) {
                const h = {};
                for (const C of Object.keys(y.children)) {
                    const L = I(y.children[C]);
                    (L.segments.length > 0 || L.hasChildren()) && (h[C] = L);
                }
                return (function is(y) {
                    if (1 === y.numberOfChildren && y.children[ht]) {
                        const h = y.children[ht];
                        return new bt(
                            y.segments.concat(h.segments),
                            h.children
                        );
                    }
                    return y;
                })(new bt(y.segments, h));
            }
            class E {
                constructor(h) {
                    (this.path = h),
                        (this.route = this.path[this.path.length - 1]);
                }
            }
            class N {
                constructor(h, f) {
                    (this.component = h), (this.route = f);
                }
            }
            function He(y, h, f) {
                const C = y._root;
                return Rn(C, h ? h._root : null, f, [C.value]);
            }
            function Tt(y, h, f) {
                const C = (function yr(y) {
                    if (!y) return null;
                    for (let h = y.parent; h; h = h.parent) {
                        const f = h.routeConfig;
                        if (f && f._loadedConfig) return f._loadedConfig;
                    }
                    return null;
                })(h);
                return (C ? C.module.injector : f).get(y);
            }
            function Rn(
                y,
                h,
                f,
                C,
                M = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
                const L = Dn(h);
                return (
                    y.children.forEach((J) => {
                        (function ei(
                            y,
                            h,
                            f,
                            C,
                            M = {
                                canDeactivateChecks: [],
                                canActivateChecks: [],
                            }
                        ) {
                            const L = y.value,
                                J = h ? h.value : null,
                                ue = f ? f.getContext(y.value.outlet) : null;
                            if (J && L.routeConfig === J.routeConfig) {
                                const Ue = (function pi(y, h, f) {
                                    if ('function' == typeof f) return f(y, h);
                                    switch (f) {
                                        case 'pathParamsChange':
                                            return !Zt(y.url, h.url);
                                        case 'pathParamsOrQueryParamsChange':
                                            return (
                                                !Zt(y.url, h.url) ||
                                                !qn(
                                                    y.queryParams,
                                                    h.queryParams
                                                )
                                            );
                                        case 'always':
                                            return !0;
                                        case 'paramsOrQueryParamsChange':
                                            return (
                                                !Xt(y, h) ||
                                                !qn(
                                                    y.queryParams,
                                                    h.queryParams
                                                )
                                            );
                                        default:
                                            return !Xt(y, h);
                                    }
                                })(J, L, L.routeConfig.runGuardsAndResolvers);
                                Ue
                                    ? M.canActivateChecks.push(new E(C))
                                    : ((L.data = J.data),
                                      (L._resolvedData = J._resolvedData)),
                                    Rn(
                                        y,
                                        h,
                                        L.component
                                            ? ue
                                                ? ue.children
                                                : null
                                            : f,
                                        C,
                                        M
                                    ),
                                    Ue &&
                                        ue &&
                                        ue.outlet &&
                                        ue.outlet.isActivated &&
                                        M.canDeactivateChecks.push(
                                            new N(ue.outlet.component, J)
                                        );
                            } else
                                J && Fn(h, ue, M),
                                    M.canActivateChecks.push(new E(C)),
                                    Rn(
                                        y,
                                        null,
                                        L.component
                                            ? ue
                                                ? ue.children
                                                : null
                                            : f,
                                        C,
                                        M
                                    );
                        })(J, L[J.value.outlet], f, C.concat([J.value]), M),
                            delete L[J.value.outlet];
                    }),
                    oe(L, (J, ue) => Fn(J, f.getContext(ue), M)),
                    M
                );
            }
            function Fn(y, h, f) {
                const C = Dn(y),
                    M = y.value;
                oe(C, (L, J) => {
                    Fn(
                        L,
                        M.component ? (h ? h.children.getContext(J) : null) : h,
                        f
                    );
                }),
                    f.canDeactivateChecks.push(
                        new N(
                            M.component && h && h.outlet && h.outlet.isActivated
                                ? h.outlet.component
                                : null,
                            M
                        )
                    );
            }
            class os {}
            function Ci(y) {
                return new w.y((h) => h.error(y));
            }
            class Ns {
                constructor(h, f, C, M, L, J) {
                    (this.rootComponentType = h),
                        (this.config = f),
                        (this.urlTree = C),
                        (this.url = M),
                        (this.paramsInheritanceStrategy = L),
                        (this.relativeLinkResolution = J);
                }
                recognize() {
                    const h = H(
                            this.urlTree.root,
                            [],
                            [],
                            this.config.filter((J) => void 0 === J.redirectTo),
                            this.relativeLinkResolution
                        ).segmentGroup,
                        f = this.processSegmentGroup(this.config, h, ht);
                    if (null === f) return null;
                    const C = new Je(
                            [],
                            Object.freeze({}),
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            {},
                            ht,
                            this.rootComponentType,
                            null,
                            this.urlTree.root,
                            -1,
                            {}
                        ),
                        M = new $n(C, f),
                        L = new Nt(this.url, M);
                    return this.inheritParamsAndData(L._root), L;
                }
                inheritParamsAndData(h) {
                    const f = h.value,
                        C = Re(f, this.paramsInheritanceStrategy);
                    (f.params = Object.freeze(C.params)),
                        (f.data = Object.freeze(C.data)),
                        h.children.forEach((M) => this.inheritParamsAndData(M));
                }
                processSegmentGroup(h, f, C) {
                    return 0 === f.segments.length && f.hasChildren()
                        ? this.processChildren(h, f)
                        : this.processSegment(h, f, f.segments, C);
                }
                processChildren(h, f) {
                    const C = [];
                    for (const L of Object.keys(f.children)) {
                        const J = f.children[L],
                            ue = T(h, L),
                            Ue = this.processSegmentGroup(ue, J, L);
                        if (null === Ue) return null;
                        C.push(...Ue);
                    }
                    const M = as(C);
                    return (
                        (function ro(y) {
                            y.sort((h, f) =>
                                h.value.outlet === ht
                                    ? -1
                                    : f.value.outlet === ht
                                    ? 1
                                    : h.value.outlet.localeCompare(
                                          f.value.outlet
                                      )
                            );
                        })(M),
                        M
                    );
                }
                processSegment(h, f, C, M) {
                    for (const L of h) {
                        const J = this.processSegmentAgainstRoute(L, f, C, M);
                        if (null !== J) return J;
                    }
                    return tn(f, C, M) ? [] : null;
                }
                processSegmentAgainstRoute(h, f, C, M) {
                    if (h.redirectTo || !Cn(h, f, C, M)) return null;
                    let L,
                        J = [],
                        ue = [];
                    if ('**' === h.path) {
                        const jn = C.length > 0 ? te(C).parameters : {};
                        L = new Je(
                            C,
                            jn,
                            Object.freeze(
                                Object.assign({}, this.urlTree.queryParams)
                            ),
                            this.urlTree.fragment,
                            io(h),
                            rn(h),
                            h.component,
                            h,
                            ls(f),
                            Ls(f) + C.length,
                            Fi(h)
                        );
                    } else {
                        const jn = b(f, h, C);
                        if (!jn.matched) return null;
                        (J = jn.consumedSegments),
                            (ue = C.slice(jn.lastChild)),
                            (L = new Je(
                                J,
                                jn.parameters,
                                Object.freeze(
                                    Object.assign({}, this.urlTree.queryParams)
                                ),
                                this.urlTree.fragment,
                                io(h),
                                rn(h),
                                h.component,
                                h,
                                ls(f),
                                Ls(f) + J.length,
                                Fi(h)
                            ));
                    }
                    const Ue = (function Gr(y) {
                            return y.children
                                ? y.children
                                : y.loadChildren
                                ? y._loadedConfig.routes
                                : [];
                        })(h),
                        { segmentGroup: Dt, slicedSegments: Yt } = H(
                            f,
                            J,
                            ue,
                            Ue.filter((jn) => void 0 === jn.redirectTo),
                            this.relativeLinkResolution
                        );
                    if (0 === Yt.length && Dt.hasChildren()) {
                        const jn = this.processChildren(Ue, Dt);
                        return null === jn ? null : [new $n(L, jn)];
                    }
                    if (0 === Ue.length && 0 === Yt.length)
                        return [new $n(L, [])];
                    const It = rn(h) === M,
                        Un = this.processSegment(Ue, Dt, Yt, It ? ht : M);
                    return null === Un ? null : [new $n(L, Un)];
                }
            }
            function Wi(y) {
                const h = y.value.routeConfig;
                return h && '' === h.path && void 0 === h.redirectTo;
            }
            function as(y) {
                const h = [],
                    f = new Set();
                for (const C of y) {
                    if (!Wi(C)) {
                        h.push(C);
                        continue;
                    }
                    const M = h.find(
                        (L) => C.value.routeConfig === L.value.routeConfig
                    );
                    void 0 !== M
                        ? (M.children.push(...C.children), f.add(M))
                        : h.push(C);
                }
                for (const C of f) {
                    const M = as(C.children);
                    h.push(new $n(C.value, M));
                }
                return h.filter((C) => !f.has(C));
            }
            function ls(y) {
                let h = y;
                for (; h._sourceSegment; ) h = h._sourceSegment;
                return h;
            }
            function Ls(y) {
                let h = y,
                    f = h._segmentIndexShift ? h._segmentIndexShift : 0;
                for (; h._sourceSegment; )
                    (h = h._sourceSegment),
                        (f += h._segmentIndexShift ? h._segmentIndexShift : 0);
                return f - 1;
            }
            function io(y) {
                return y.data || {};
            }
            function Fi(y) {
                return y.resolve || {};
            }
            function Bs(y) {
                return [...Object.keys(y), ...Object.getOwnPropertySymbols(y)];
            }
            function Es(y) {
                return (0, ut.w)((h) => {
                    const f = y(h);
                    return f
                        ? (0, j.D)(f).pipe((0, ye.U)(() => h))
                        : (0, ae.of)(h);
                });
            }
            class bi extends class Ir {
                shouldDetach(h) {
                    return !1;
                }
                store(h, f) {}
                shouldAttach(h) {
                    return !1;
                }
                retrieve(h) {
                    return null;
                }
                shouldReuseRoute(h, f) {
                    return h.routeConfig === f.routeConfig;
                }
            } {}
            const Yn = new l.OlP('ROUTES');
            class vo {
                constructor(h, f, C, M) {
                    (this.injector = h),
                        (this.compiler = f),
                        (this.onLoadStartListener = C),
                        (this.onLoadEndListener = M);
                }
                load(h, f) {
                    if (f._loader$) return f._loader$;
                    this.onLoadStartListener && this.onLoadStartListener(f);
                    const M = this.loadModuleFactory(f.loadChildren).pipe(
                        (0, ye.U)((L) => {
                            this.onLoadEndListener && this.onLoadEndListener(f);
                            const J = L.create(h);
                            return new Jr(
                                Dr(
                                    J.injector.get(
                                        Yn,
                                        void 0,
                                        l.XFs.Self | l.XFs.Optional
                                    )
                                ).map(xi),
                                J
                            );
                        }),
                        (0, st.K)((L) => {
                            throw ((f._loader$ = void 0), L);
                        })
                    );
                    return (
                        (f._loader$ = new Ce(M, () => new $e.x()).pipe(X())),
                        f._loader$
                    );
                }
                loadModuleFactory(h) {
                    return je(h()).pipe(
                        (0, Gt.z)((f) =>
                            f instanceof l.YKP
                                ? (0, ae.of)(f)
                                : (0, j.D)(this.compiler.compileModuleAsync(f))
                        )
                    );
                }
            }
            class Bo {
                shouldProcessUrl(h) {
                    return !0;
                }
                extract(h) {
                    return h;
                }
                merge(h, f) {
                    return h;
                }
            }
            function Zo(y) {
                throw y;
            }
            function Vs(y, h, f) {
                return h.parse('/');
            }
            function Eo(y, h) {
                return (0, ae.of)(null);
            }
            const Us = {
                    paths: 'exact',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'exact',
                },
                js = {
                    paths: 'subset',
                    fragment: 'ignored',
                    matrixParams: 'ignored',
                    queryParams: 'subset',
                };
            let Mr = (() => {
                class y {
                    constructor(f, C, M, L, J, ue, Ue) {
                        (this.rootComponentType = f),
                            (this.urlSerializer = C),
                            (this.rootContexts = M),
                            (this.location = L),
                            (this.config = Ue),
                            (this.lastSuccessfulNavigation = null),
                            (this.currentNavigation = null),
                            (this.disposed = !1),
                            (this.navigationId = 0),
                            (this.currentPageId = 0),
                            (this.isNgZoneEnabled = !1),
                            (this.events = new $e.x()),
                            (this.errorHandler = Zo),
                            (this.malformedUriErrorHandler = Vs),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1),
                            (this.hooks = {
                                beforePreactivation: Eo,
                                afterPreactivation: Eo,
                            }),
                            (this.urlHandlingStrategy = new Bo()),
                            (this.routeReuseStrategy = new bi()),
                            (this.onSameUrlNavigation = 'ignore'),
                            (this.paramsInheritanceStrategy = 'emptyOnly'),
                            (this.urlUpdateStrategy = 'deferred'),
                            (this.relativeLinkResolution = 'corrected'),
                            (this.canceledNavigationResolution = 'replace'),
                            (this.ngModule = J.get(l.h0i)),
                            (this.console = J.get(l.c2e));
                        const It = J.get(l.R0b);
                        (this.isNgZoneEnabled =
                            It instanceof l.R0b && l.R0b.isInAngularZone()),
                            this.resetConfig(Ue),
                            (this.currentUrlTree = (function Ie() {
                                return new Sn(new bt([], {}), {}, null);
                            })()),
                            (this.rawUrlTree = this.currentUrlTree),
                            (this.browserUrlTree = this.currentUrlTree),
                            (this.configLoader = new vo(
                                J,
                                ue,
                                (Un) => this.triggerEvent(new Rt(Un)),
                                (Un) => this.triggerEvent(new jt(Un))
                            )),
                            (this.routerState = ee(
                                this.currentUrlTree,
                                this.rootComponentType
                            )),
                            (this.transitions = new Y.X({
                                id: 0,
                                targetPageId: 0,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.currentUrlTree,
                                extractedUrl: this.urlHandlingStrategy.extract(
                                    this.currentUrlTree
                                ),
                                urlAfterRedirects:
                                    this.urlHandlingStrategy.extract(
                                        this.currentUrlTree
                                    ),
                                rawUrl: this.currentUrlTree,
                                extras: {},
                                resolve: null,
                                reject: null,
                                promise: Promise.resolve(!0),
                                source: 'imperative',
                                restoredState: null,
                                currentSnapshot: this.routerState.snapshot,
                                targetSnapshot: null,
                                currentRouterState: this.routerState,
                                targetRouterState: null,
                                guards: {
                                    canActivateChecks: [],
                                    canDeactivateChecks: [],
                                },
                                guardsResult: null,
                            })),
                            (this.navigations = this.setupNavigations(
                                this.transitions
                            )),
                            this.processNavigations();
                    }
                    get browserPageId() {
                        var f;
                        return null === (f = this.location.getState()) ||
                            void 0 === f
                            ? void 0
                            : f.ɵrouterPageId;
                    }
                    setupNavigations(f) {
                        const C = this.events;
                        return f.pipe(
                            (0, it.h)((M) => 0 !== M.id),
                            (0, ye.U)((M) =>
                                Object.assign(Object.assign({}, M), {
                                    extractedUrl:
                                        this.urlHandlingStrategy.extract(
                                            M.rawUrl
                                        ),
                                })
                            ),
                            (0, ut.w)((M) => {
                                let L = !1,
                                    J = !1;
                                return (0, ae.of)(M).pipe(
                                    (0, mt.b)((ue) => {
                                        this.currentNavigation = {
                                            id: ue.id,
                                            initialUrl: ue.currentRawUrl,
                                            extractedUrl: ue.extractedUrl,
                                            trigger: ue.source,
                                            extras: ue.extras,
                                            previousNavigation: this
                                                .lastSuccessfulNavigation
                                                ? Object.assign(
                                                      Object.assign(
                                                          {},
                                                          this
                                                              .lastSuccessfulNavigation
                                                      ),
                                                      {
                                                          previousNavigation:
                                                              null,
                                                      }
                                                  )
                                                : null,
                                        };
                                    }),
                                    (0, ut.w)((ue) => {
                                        const Ue =
                                                this.browserUrlTree.toString(),
                                            Dt =
                                                !this.navigated ||
                                                ue.extractedUrl.toString() !==
                                                    Ue ||
                                                Ue !==
                                                    this.currentUrlTree.toString();
                                        if (
                                            ('reload' ===
                                                this.onSameUrlNavigation ||
                                                Dt) &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                ue.rawUrl
                                            )
                                        )
                                            return (
                                                lr(ue.source) &&
                                                    (this.browserUrlTree =
                                                        ue.extractedUrl),
                                                (0, ae.of)(ue).pipe(
                                                    (0, ut.w)((It) => {
                                                        const Un =
                                                            this.transitions.getValue();
                                                        return (
                                                            C.next(
                                                                new Nn(
                                                                    It.id,
                                                                    this.serializeUrl(
                                                                        It.extractedUrl
                                                                    ),
                                                                    It.source,
                                                                    It.restoredState
                                                                )
                                                            ),
                                                            Un !==
                                                            this.transitions.getValue()
                                                                ? xe.E
                                                                : Promise.resolve(
                                                                      It
                                                                  )
                                                        );
                                                    }),
                                                    (function D(y, h, f, C) {
                                                        return (0, ut.w)((M) =>
                                                            (function Lt(
                                                                y,
                                                                h,
                                                                f,
                                                                C,
                                                                M
                                                            ) {
                                                                return new hi(
                                                                    y,
                                                                    h,
                                                                    f,
                                                                    C,
                                                                    M
                                                                ).apply();
                                                            })(
                                                                y,
                                                                h,
                                                                f,
                                                                M.extractedUrl,
                                                                C
                                                            ).pipe(
                                                                (0, ye.U)((L) =>
                                                                    Object.assign(
                                                                        Object.assign(
                                                                            {},
                                                                            M
                                                                        ),
                                                                        {
                                                                            urlAfterRedirects:
                                                                                L,
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.ngModule.injector,
                                                        this.configLoader,
                                                        this.urlSerializer,
                                                        this.config
                                                    ),
                                                    (0, mt.b)((It) => {
                                                        this.currentNavigation =
                                                            Object.assign(
                                                                Object.assign(
                                                                    {},
                                                                    this
                                                                        .currentNavigation
                                                                ),
                                                                {
                                                                    finalUrl:
                                                                        It.urlAfterRedirects,
                                                                }
                                                            );
                                                    }),
                                                    (function _s(
                                                        y,
                                                        h,
                                                        f,
                                                        C,
                                                        M
                                                    ) {
                                                        return (0, Gt.z)((L) =>
                                                            (function gi(
                                                                y,
                                                                h,
                                                                f,
                                                                C,
                                                                M = 'emptyOnly',
                                                                L = 'legacy'
                                                            ) {
                                                                try {
                                                                    const J =
                                                                        new Ns(
                                                                            y,
                                                                            h,
                                                                            f,
                                                                            C,
                                                                            M,
                                                                            L
                                                                        ).recognize();
                                                                    return null ===
                                                                        J
                                                                        ? Ci(
                                                                              new os()
                                                                          )
                                                                        : (0,
                                                                          ae.of)(
                                                                              J
                                                                          );
                                                                } catch (J) {
                                                                    return Ci(
                                                                        J
                                                                    );
                                                                }
                                                            })(
                                                                y,
                                                                h,
                                                                L.urlAfterRedirects,
                                                                f(
                                                                    L.urlAfterRedirects
                                                                ),
                                                                C,
                                                                M
                                                            ).pipe(
                                                                (0, ye.U)((J) =>
                                                                    Object.assign(
                                                                        Object.assign(
                                                                            {},
                                                                            L
                                                                        ),
                                                                        {
                                                                            targetSnapshot:
                                                                                J,
                                                                        }
                                                                    )
                                                                )
                                                            )
                                                        );
                                                    })(
                                                        this.rootComponentType,
                                                        this.config,
                                                        (It) =>
                                                            this.serializeUrl(
                                                                It
                                                            ),
                                                        this
                                                            .paramsInheritanceStrategy,
                                                        this
                                                            .relativeLinkResolution
                                                    ),
                                                    (0, mt.b)((It) => {
                                                        if (
                                                            'eager' ===
                                                            this
                                                                .urlUpdateStrategy
                                                        ) {
                                                            if (
                                                                !It.extras
                                                                    .skipLocationChange
                                                            ) {
                                                                const jn =
                                                                    this.urlHandlingStrategy.merge(
                                                                        It.urlAfterRedirects,
                                                                        It.rawUrl
                                                                    );
                                                                this.setBrowserUrl(
                                                                    jn,
                                                                    It
                                                                );
                                                            }
                                                            this.browserUrlTree =
                                                                It.urlAfterRedirects;
                                                        }
                                                        const Un = new Ye(
                                                            It.id,
                                                            this.serializeUrl(
                                                                It.extractedUrl
                                                            ),
                                                            this.serializeUrl(
                                                                It.urlAfterRedirects
                                                            ),
                                                            It.targetSnapshot
                                                        );
                                                        C.next(Un);
                                                    })
                                                )
                                            );
                                        if (
                                            Dt &&
                                            this.rawUrlTree &&
                                            this.urlHandlingStrategy.shouldProcessUrl(
                                                this.rawUrlTree
                                            )
                                        ) {
                                            const {
                                                    id: Un,
                                                    extractedUrl: jn,
                                                    source: ki,
                                                    restoredState: kr,
                                                    extras: Zr,
                                                } = ue,
                                                Or = new Nn(
                                                    Un,
                                                    this.serializeUrl(jn),
                                                    ki,
                                                    kr
                                                );
                                            C.next(Or);
                                            const Yi = ee(
                                                jn,
                                                this.rootComponentType
                                            ).snapshot;
                                            return (0, ae.of)(
                                                Object.assign(
                                                    Object.assign({}, ue),
                                                    {
                                                        targetSnapshot: Yi,
                                                        urlAfterRedirects: jn,
                                                        extras: Object.assign(
                                                            Object.assign(
                                                                {},
                                                                Zr
                                                            ),
                                                            {
                                                                skipLocationChange:
                                                                    !1,
                                                                replaceUrl: !1,
                                                            }
                                                        ),
                                                    }
                                                )
                                            );
                                        }
                                        return (
                                            (this.rawUrlTree = ue.rawUrl),
                                            ue.resolve(null),
                                            xe.E
                                        );
                                    }),
                                    Es((ue) => {
                                        const {
                                            targetSnapshot: Ue,
                                            id: Dt,
                                            extractedUrl: Yt,
                                            rawUrl: It,
                                            extras: {
                                                skipLocationChange: Un,
                                                replaceUrl: jn,
                                            },
                                        } = ue;
                                        return this.hooks.beforePreactivation(
                                            Ue,
                                            {
                                                navigationId: Dt,
                                                appliedUrlTree: Yt,
                                                rawUrlTree: It,
                                                skipLocationChange: !!Un,
                                                replaceUrl: !!jn,
                                            }
                                        );
                                    }),
                                    (0, mt.b)((ue) => {
                                        const Ue = new q(
                                            ue.id,
                                            this.serializeUrl(ue.extractedUrl),
                                            this.serializeUrl(
                                                ue.urlAfterRedirects
                                            ),
                                            ue.targetSnapshot
                                        );
                                        this.triggerEvent(Ue);
                                    }),
                                    (0, ye.U)((ue) =>
                                        Object.assign(Object.assign({}, ue), {
                                            guards: He(
                                                ue.targetSnapshot,
                                                ue.currentSnapshot,
                                                this.rootContexts
                                            ),
                                        })
                                    ),
                                    (function $i(y, h) {
                                        return (0, Gt.z)((f) => {
                                            const {
                                                targetSnapshot: C,
                                                currentSnapshot: M,
                                                guards: {
                                                    canActivateChecks: L,
                                                    canDeactivateChecks: J,
                                                },
                                            } = f;
                                            return 0 === J.length &&
                                                0 === L.length
                                                ? (0, ae.of)(
                                                      Object.assign(
                                                          Object.assign({}, f),
                                                          { guardsResult: !0 }
                                                      )
                                                  )
                                                : (function Gi(y, h, f, C) {
                                                      return (0, j.D)(y).pipe(
                                                          (0, Gt.z)((M) =>
                                                              (function Di(
                                                                  y,
                                                                  h,
                                                                  f,
                                                                  C,
                                                                  M
                                                              ) {
                                                                  const L =
                                                                      h &&
                                                                      h.routeConfig
                                                                          ? h
                                                                                .routeConfig
                                                                                .canDeactivate
                                                                          : null;
                                                                  if (
                                                                      !L ||
                                                                      0 ===
                                                                          L.length
                                                                  )
                                                                      return (0,
                                                                      ae.of)(
                                                                          !0
                                                                      );
                                                                  const J =
                                                                      L.map(
                                                                          (
                                                                              ue
                                                                          ) => {
                                                                              const Ue =
                                                                                  Tt(
                                                                                      ue,
                                                                                      h,
                                                                                      M
                                                                                  );
                                                                              let Dt;
                                                                              if (
                                                                                  (function Nr(
                                                                                      y
                                                                                  ) {
                                                                                      return (
                                                                                          y &&
                                                                                          wr(
                                                                                              y.canDeactivate
                                                                                          )
                                                                                      );
                                                                                  })(
                                                                                      Ue
                                                                                  )
                                                                              )
                                                                                  Dt =
                                                                                      je(
                                                                                          Ue.canDeactivate(
                                                                                              y,
                                                                                              h,
                                                                                              f,
                                                                                              C
                                                                                          )
                                                                                      );
                                                                              else {
                                                                                  if (
                                                                                      !wr(
                                                                                          Ue
                                                                                      )
                                                                                  )
                                                                                      throw new Error(
                                                                                          'Invalid CanDeactivate guard'
                                                                                      );
                                                                                  Dt =
                                                                                      je(
                                                                                          Ue(
                                                                                              y,
                                                                                              h,
                                                                                              f,
                                                                                              C
                                                                                          )
                                                                                      );
                                                                              }
                                                                              return Dt.pipe(
                                                                                  (0,
                                                                                  Bt.P)()
                                                                              );
                                                                          }
                                                                      );
                                                                  return (0,
                                                                  ae.of)(
                                                                      J
                                                                  ).pipe(Qn());
                                                              })(
                                                                  M.component,
                                                                  M.route,
                                                                  f,
                                                                  h,
                                                                  C
                                                              )
                                                          ),
                                                          (0, Bt.P)(
                                                              (M) => !0 !== M,
                                                              !0
                                                          )
                                                      );
                                                  })(J, C, M, y).pipe(
                                                      (0, Gt.z)((ue) =>
                                                          ue &&
                                                          (function ms(y) {
                                                              return (
                                                                  'boolean' ==
                                                                  typeof y
                                                              );
                                                          })(ue)
                                                              ? (function mo(
                                                                    y,
                                                                    h,
                                                                    f,
                                                                    C
                                                                ) {
                                                                    return (0,
                                                                    j.D)(
                                                                        h
                                                                    ).pipe(
                                                                        (0,
                                                                        un.b)(
                                                                            (
                                                                                M
                                                                            ) =>
                                                                                (0,
                                                                                se.z)(
                                                                                    (function ys(
                                                                                        y,
                                                                                        h
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                y &&
                                                                                                h &&
                                                                                                h(
                                                                                                    new xt(
                                                                                                        y
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            ae.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        M
                                                                                            .route
                                                                                            .parent,
                                                                                        C
                                                                                    ),
                                                                                    (function Lo(
                                                                                        y,
                                                                                        h
                                                                                    ) {
                                                                                        return (
                                                                                            null !==
                                                                                                y &&
                                                                                                h &&
                                                                                                h(
                                                                                                    new At(
                                                                                                        y
                                                                                                    )
                                                                                                ),
                                                                                            (0,
                                                                                            ae.of)(
                                                                                                !0
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        M.route,
                                                                                        C
                                                                                    ),
                                                                                    (function Sr(
                                                                                        y,
                                                                                        h,
                                                                                        f
                                                                                    ) {
                                                                                        const C =
                                                                                                h[
                                                                                                    h.length -
                                                                                                        1
                                                                                                ],
                                                                                            L =
                                                                                                h
                                                                                                    .slice(
                                                                                                        0,
                                                                                                        h.length -
                                                                                                            1
                                                                                                    )
                                                                                                    .reverse()
                                                                                                    .map(
                                                                                                        (
                                                                                                            J
                                                                                                        ) =>
                                                                                                            (function Ae(
                                                                                                                y
                                                                                                            ) {
                                                                                                                const h =
                                                                                                                    y.routeConfig
                                                                                                                        ? y
                                                                                                                              .routeConfig
                                                                                                                              .canActivateChild
                                                                                                                        : null;
                                                                                                                return h &&
                                                                                                                    0 !==
                                                                                                                        h.length
                                                                                                                    ? {
                                                                                                                          node: y,
                                                                                                                          guards: h,
                                                                                                                      }
                                                                                                                    : null;
                                                                                                            })(
                                                                                                                J
                                                                                                            )
                                                                                                    )
                                                                                                    .filter(
                                                                                                        (
                                                                                                            J
                                                                                                        ) =>
                                                                                                            null !==
                                                                                                            J
                                                                                                    )
                                                                                                    .map(
                                                                                                        (
                                                                                                            J
                                                                                                        ) =>
                                                                                                            _e(
                                                                                                                () => {
                                                                                                                    const ue =
                                                                                                                        J.guards.map(
                                                                                                                            (
                                                                                                                                Ue
                                                                                                                            ) => {
                                                                                                                                const Dt =
                                                                                                                                    Tt(
                                                                                                                                        Ue,
                                                                                                                                        J.node,
                                                                                                                                        f
                                                                                                                                    );
                                                                                                                                let Yt;
                                                                                                                                if (
                                                                                                                                    (function Hr(
                                                                                                                                        y
                                                                                                                                    ) {
                                                                                                                                        return (
                                                                                                                                            y &&
                                                                                                                                            wr(
                                                                                                                                                y.canActivateChild
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                    })(
                                                                                                                                        Dt
                                                                                                                                    )
                                                                                                                                )
                                                                                                                                    Yt =
                                                                                                                                        je(
                                                                                                                                            Dt.canActivateChild(
                                                                                                                                                C,
                                                                                                                                                y
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                else {
                                                                                                                                    if (
                                                                                                                                        !wr(
                                                                                                                                            Dt
                                                                                                                                        )
                                                                                                                                    )
                                                                                                                                        throw new Error(
                                                                                                                                            'Invalid CanActivateChild guard'
                                                                                                                                        );
                                                                                                                                    Yt =
                                                                                                                                        je(
                                                                                                                                            Dt(
                                                                                                                                                C,
                                                                                                                                                y
                                                                                                                                            )
                                                                                                                                        );
                                                                                                                                }
                                                                                                                                return Yt.pipe(
                                                                                                                                    (0,
                                                                                                                                    Bt.P)()
                                                                                                                                );
                                                                                                                            }
                                                                                                                        );
                                                                                                                    return (0,
                                                                                                                    ae.of)(
                                                                                                                        ue
                                                                                                                    ).pipe(
                                                                                                                        Qn()
                                                                                                                    );
                                                                                                                }
                                                                                                            )
                                                                                                    );
                                                                                        return (0,
                                                                                        ae.of)(
                                                                                            L
                                                                                        ).pipe(
                                                                                            Qn()
                                                                                        );
                                                                                    })(
                                                                                        y,
                                                                                        M.path,
                                                                                        f
                                                                                    ),
                                                                                    (function ss(
                                                                                        y,
                                                                                        h,
                                                                                        f
                                                                                    ) {
                                                                                        const C =
                                                                                            h.routeConfig
                                                                                                ? h
                                                                                                      .routeConfig
                                                                                                      .canActivate
                                                                                                : null;
                                                                                        if (
                                                                                            !C ||
                                                                                            0 ===
                                                                                                C.length
                                                                                        )
                                                                                            return (0,
                                                                                            ae.of)(
                                                                                                !0
                                                                                            );
                                                                                        const M =
                                                                                            C.map(
                                                                                                (
                                                                                                    L
                                                                                                ) =>
                                                                                                    _e(
                                                                                                        () => {
                                                                                                            const J =
                                                                                                                Tt(
                                                                                                                    L,
                                                                                                                    h,
                                                                                                                    f
                                                                                                                );
                                                                                                            let ue;
                                                                                                            if (
                                                                                                                (function rs(
                                                                                                                    y
                                                                                                                ) {
                                                                                                                    return (
                                                                                                                        y &&
                                                                                                                        wr(
                                                                                                                            y.canActivate
                                                                                                                        )
                                                                                                                    );
                                                                                                                })(
                                                                                                                    J
                                                                                                                )
                                                                                                            )
                                                                                                                ue =
                                                                                                                    je(
                                                                                                                        J.canActivate(
                                                                                                                            h,
                                                                                                                            y
                                                                                                                        )
                                                                                                                    );
                                                                                                            else {
                                                                                                                if (
                                                                                                                    !wr(
                                                                                                                        J
                                                                                                                    )
                                                                                                                )
                                                                                                                    throw new Error(
                                                                                                                        'Invalid CanActivate guard'
                                                                                                                    );
                                                                                                                ue =
                                                                                                                    je(
                                                                                                                        J(
                                                                                                                            h,
                                                                                                                            y
                                                                                                                        )
                                                                                                                    );
                                                                                                            }
                                                                                                            return ue.pipe(
                                                                                                                (0,
                                                                                                                Bt.P)()
                                                                                                            );
                                                                                                        }
                                                                                                    )
                                                                                            );
                                                                                        return (0,
                                                                                        ae.of)(
                                                                                            M
                                                                                        ).pipe(
                                                                                            Qn()
                                                                                        );
                                                                                    })(
                                                                                        y,
                                                                                        M.route,
                                                                                        f
                                                                                    )
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        Bt.P)(
                                                                            (
                                                                                M
                                                                            ) =>
                                                                                !0 !==
                                                                                M,
                                                                            !0
                                                                        )
                                                                    );
                                                                })(C, L, y, h)
                                                              : (0, ae.of)(ue)
                                                      ),
                                                      (0, ye.U)((ue) =>
                                                          Object.assign(
                                                              Object.assign(
                                                                  {},
                                                                  f
                                                              ),
                                                              {
                                                                  guardsResult:
                                                                      ue,
                                                              }
                                                          )
                                                      )
                                                  );
                                        });
                                    })(this.ngModule.injector, (ue) =>
                                        this.triggerEvent(ue)
                                    ),
                                    (0, mt.b)((ue) => {
                                        if (Xr(ue.guardsResult)) {
                                            const Dt = _t(
                                                `Redirecting to "${this.serializeUrl(
                                                    ue.guardsResult
                                                )}"`
                                            );
                                            throw (
                                                ((Dt.url = ue.guardsResult), Dt)
                                            );
                                        }
                                        const Ue = new Te(
                                            ue.id,
                                            this.serializeUrl(ue.extractedUrl),
                                            this.serializeUrl(
                                                ue.urlAfterRedirects
                                            ),
                                            ue.targetSnapshot,
                                            !!ue.guardsResult
                                        );
                                        this.triggerEvent(Ue);
                                    }),
                                    (0, it.h)(
                                        (ue) =>
                                            !!ue.guardsResult ||
                                            (this.restoreHistory(ue),
                                            this.cancelNavigationTransition(
                                                ue,
                                                ''
                                            ),
                                            !1)
                                    ),
                                    Es((ue) => {
                                        if (ue.guards.canActivateChecks.length)
                                            return (0, ae.of)(ue).pipe(
                                                (0, mt.b)((Ue) => {
                                                    const Dt = new ot(
                                                        Ue.id,
                                                        this.serializeUrl(
                                                            Ue.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            Ue.urlAfterRedirects
                                                        ),
                                                        Ue.targetSnapshot
                                                    );
                                                    this.triggerEvent(Dt);
                                                }),
                                                (0, ut.w)((Ue) => {
                                                    let Dt = !1;
                                                    return (0, ae.of)(Ue).pipe(
                                                        (function so(y, h) {
                                                            return (0, Gt.z)(
                                                                (f) => {
                                                                    const {
                                                                        targetSnapshot:
                                                                            C,
                                                                        guards: {
                                                                            canActivateChecks:
                                                                                M,
                                                                        },
                                                                    } = f;
                                                                    if (
                                                                        !M.length
                                                                    )
                                                                        return (0,
                                                                        ae.of)(
                                                                            f
                                                                        );
                                                                    let L = 0;
                                                                    return (0,
                                                                    j.D)(
                                                                        M
                                                                    ).pipe(
                                                                        (0,
                                                                        un.b)(
                                                                            (
                                                                                J
                                                                            ) =>
                                                                                (function ks(
                                                                                    y,
                                                                                    h,
                                                                                    f,
                                                                                    C
                                                                                ) {
                                                                                    return (function _o(
                                                                                        y,
                                                                                        h,
                                                                                        f,
                                                                                        C
                                                                                    ) {
                                                                                        const M =
                                                                                            Bs(
                                                                                                y
                                                                                            );
                                                                                        if (
                                                                                            0 ===
                                                                                            M.length
                                                                                        )
                                                                                            return (0,
                                                                                            ae.of)(
                                                                                                {}
                                                                                            );
                                                                                        const L =
                                                                                            {};
                                                                                        return (0,
                                                                                        j.D)(
                                                                                            M
                                                                                        ).pipe(
                                                                                            (0,
                                                                                            Gt.z)(
                                                                                                (
                                                                                                    J
                                                                                                ) =>
                                                                                                    (function vs(
                                                                                                        y,
                                                                                                        h,
                                                                                                        f,
                                                                                                        C
                                                                                                    ) {
                                                                                                        const M =
                                                                                                            Tt(
                                                                                                                y,
                                                                                                                h,
                                                                                                                C
                                                                                                            );
                                                                                                        return je(
                                                                                                            M.resolve
                                                                                                                ? M.resolve(
                                                                                                                      h,
                                                                                                                      f
                                                                                                                  )
                                                                                                                : M(
                                                                                                                      h,
                                                                                                                      f
                                                                                                                  )
                                                                                                        );
                                                                                                    })(
                                                                                                        y[
                                                                                                            J
                                                                                                        ],
                                                                                                        h,
                                                                                                        f,
                                                                                                        C
                                                                                                    ).pipe(
                                                                                                        (0,
                                                                                                        mt.b)(
                                                                                                            (
                                                                                                                ue
                                                                                                            ) => {
                                                                                                                L[
                                                                                                                    J
                                                                                                                ] =
                                                                                                                    ue;
                                                                                                            }
                                                                                                        )
                                                                                                    )
                                                                                            ),
                                                                                            ne(
                                                                                                1
                                                                                            ),
                                                                                            (0,
                                                                                            Gt.z)(
                                                                                                () =>
                                                                                                    Bs(
                                                                                                        L
                                                                                                    )
                                                                                                        .length ===
                                                                                                    M.length
                                                                                                        ? (0,
                                                                                                          ae.of)(
                                                                                                              L
                                                                                                          )
                                                                                                        : xe.E
                                                                                            )
                                                                                        );
                                                                                    })(
                                                                                        y._resolve,
                                                                                        y,
                                                                                        h,
                                                                                        C
                                                                                    ).pipe(
                                                                                        (0,
                                                                                        ye.U)(
                                                                                            (
                                                                                                L
                                                                                            ) => (
                                                                                                (y._resolvedData =
                                                                                                    L),
                                                                                                (y.data =
                                                                                                    Object.assign(
                                                                                                        Object.assign(
                                                                                                            {},
                                                                                                            y.data
                                                                                                        ),
                                                                                                        Re(
                                                                                                            y,
                                                                                                            f
                                                                                                        )
                                                                                                            .resolve
                                                                                                    )),
                                                                                                null
                                                                                            )
                                                                                        )
                                                                                    );
                                                                                })(
                                                                                    J.route,
                                                                                    C,
                                                                                    y,
                                                                                    h
                                                                                )
                                                                        ),
                                                                        (0,
                                                                        mt.b)(
                                                                            () =>
                                                                                L++
                                                                        ),
                                                                        ne(1),
                                                                        (0,
                                                                        Gt.z)(
                                                                            (
                                                                                J
                                                                            ) =>
                                                                                L ===
                                                                                M.length
                                                                                    ? (0,
                                                                                      ae.of)(
                                                                                          f
                                                                                      )
                                                                                    : xe.E
                                                                        )
                                                                    );
                                                                }
                                                            );
                                                        })(
                                                            this
                                                                .paramsInheritanceStrategy,
                                                            this.ngModule
                                                                .injector
                                                        ),
                                                        (0, mt.b)({
                                                            next: () =>
                                                                (Dt = !0),
                                                            complete: () => {
                                                                Dt ||
                                                                    (this.restoreHistory(
                                                                        Ue
                                                                    ),
                                                                    this.cancelNavigationTransition(
                                                                        Ue,
                                                                        "At least one route resolver didn't emit any value."
                                                                    ));
                                                            },
                                                        })
                                                    );
                                                }),
                                                (0, mt.b)((Ue) => {
                                                    const Dt = new We(
                                                        Ue.id,
                                                        this.serializeUrl(
                                                            Ue.extractedUrl
                                                        ),
                                                        this.serializeUrl(
                                                            Ue.urlAfterRedirects
                                                        ),
                                                        Ue.targetSnapshot
                                                    );
                                                    this.triggerEvent(Dt);
                                                })
                                            );
                                    }),
                                    Es((ue) => {
                                        const {
                                            targetSnapshot: Ue,
                                            id: Dt,
                                            extractedUrl: Yt,
                                            rawUrl: It,
                                            extras: {
                                                skipLocationChange: Un,
                                                replaceUrl: jn,
                                            },
                                        } = ue;
                                        return this.hooks.afterPreactivation(
                                            Ue,
                                            {
                                                navigationId: Dt,
                                                appliedUrlTree: Yt,
                                                rawUrlTree: It,
                                                skipLocationChange: !!Un,
                                                replaceUrl: !!jn,
                                            }
                                        );
                                    }),
                                    (0, ye.U)((ue) => {
                                        const Ue = (function Bn(y, h, f) {
                                            const C = gr(
                                                y,
                                                h._root,
                                                f ? f._root : void 0
                                            );
                                            return new dr(C, h);
                                        })(
                                            this.routeReuseStrategy,
                                            ue.targetSnapshot,
                                            ue.currentRouterState
                                        );
                                        return Object.assign(
                                            Object.assign({}, ue),
                                            { targetRouterState: Ue }
                                        );
                                    }),
                                    (0, mt.b)((ue) => {
                                        (this.currentUrlTree =
                                            ue.urlAfterRedirects),
                                            (this.rawUrlTree =
                                                this.urlHandlingStrategy.merge(
                                                    ue.urlAfterRedirects,
                                                    ue.rawUrl
                                                )),
                                            (this.routerState =
                                                ue.targetRouterState),
                                            'deferred' ===
                                                this.urlUpdateStrategy &&
                                                (ue.extras.skipLocationChange ||
                                                    this.setBrowserUrl(
                                                        this.rawUrlTree,
                                                        ue
                                                    ),
                                                (this.browserUrlTree =
                                                    ue.urlAfterRedirects));
                                    }),
                                    ((y, h, f) =>
                                        (0, ye.U)(
                                            (C) => (
                                                new ri(
                                                    h,
                                                    C.targetRouterState,
                                                    C.currentRouterState,
                                                    f
                                                ).activate(y),
                                                C
                                            )
                                        ))(
                                        this.rootContexts,
                                        this.routeReuseStrategy,
                                        (ue) => this.triggerEvent(ue)
                                    ),
                                    (0, mt.b)({
                                        next() {
                                            L = !0;
                                        },
                                        complete() {
                                            L = !0;
                                        },
                                    }),
                                    (function be(y) {
                                        return (0, Z.e)((h, f) => {
                                            try {
                                                h.subscribe(f);
                                            } finally {
                                                f.add(y);
                                            }
                                        });
                                    })(() => {
                                        var ue;
                                        L ||
                                            J ||
                                            this.cancelNavigationTransition(
                                                M,
                                                `Navigation ID ${M.id} is not equal to the current navigation id ${this.navigationId}`
                                            ),
                                            (null ===
                                                (ue = this.currentNavigation) ||
                                            void 0 === ue
                                                ? void 0
                                                : ue.id) === M.id &&
                                                (this.currentNavigation = null);
                                    }),
                                    (0, st.K)((ue) => {
                                        if (
                                            ((J = !0),
                                            (function Er(y) {
                                                return y && y[yt];
                                            })(ue))
                                        ) {
                                            const Ue = Xr(ue.url);
                                            Ue ||
                                                ((this.navigated = !0),
                                                this.restoreHistory(M, !0));
                                            const Dt = new Hn(
                                                M.id,
                                                this.serializeUrl(
                                                    M.extractedUrl
                                                ),
                                                ue.message
                                            );
                                            C.next(Dt),
                                                Ue
                                                    ? setTimeout(() => {
                                                          const Yt =
                                                                  this.urlHandlingStrategy.merge(
                                                                      ue.url,
                                                                      this
                                                                          .rawUrlTree
                                                                  ),
                                                              It = {
                                                                  skipLocationChange:
                                                                      M.extras
                                                                          .skipLocationChange,
                                                                  replaceUrl:
                                                                      'eager' ===
                                                                          this
                                                                              .urlUpdateStrategy ||
                                                                      lr(
                                                                          M.source
                                                                      ),
                                                              };
                                                          this.scheduleNavigation(
                                                              Yt,
                                                              'imperative',
                                                              null,
                                                              It,
                                                              {
                                                                  resolve:
                                                                      M.resolve,
                                                                  reject: M.reject,
                                                                  promise:
                                                                      M.promise,
                                                              }
                                                          );
                                                      }, 0)
                                                    : M.resolve(!1);
                                        } else {
                                            this.restoreHistory(M, !0);
                                            const Ue = new Fe(
                                                M.id,
                                                this.serializeUrl(
                                                    M.extractedUrl
                                                ),
                                                ue
                                            );
                                            C.next(Ue);
                                            try {
                                                M.resolve(
                                                    this.errorHandler(ue)
                                                );
                                            } catch (Dt) {
                                                M.reject(Dt);
                                            }
                                        }
                                        return xe.E;
                                    })
                                );
                            })
                        );
                    }
                    resetRootComponentType(f) {
                        (this.rootComponentType = f),
                            (this.routerState.root.component =
                                this.rootComponentType);
                    }
                    setTransition(f) {
                        this.transitions.next(
                            Object.assign(
                                Object.assign({}, this.transitions.value),
                                f
                            )
                        );
                    }
                    initialNavigation() {
                        this.setUpLocationChangeListener(),
                            0 === this.navigationId &&
                                this.navigateByUrl(this.location.path(!0), {
                                    replaceUrl: !0,
                                });
                    }
                    setUpLocationChangeListener() {
                        this.locationSubscription ||
                            (this.locationSubscription =
                                this.location.subscribe((f) => {
                                    const C =
                                        'popstate' === f.type
                                            ? 'popstate'
                                            : 'hashchange';
                                    'popstate' === C &&
                                        setTimeout(() => {
                                            var M;
                                            const L = { replaceUrl: !0 },
                                                J = (
                                                    null === (M = f.state) ||
                                                    void 0 === M
                                                        ? void 0
                                                        : M.navigationId
                                                )
                                                    ? f.state
                                                    : null;
                                            if (J) {
                                                const Ue = Object.assign({}, J);
                                                delete Ue.navigationId,
                                                    delete Ue.ɵrouterPageId,
                                                    0 !==
                                                        Object.keys(Ue)
                                                            .length &&
                                                        (L.state = Ue);
                                            }
                                            const ue = this.parseUrl(f.url);
                                            this.scheduleNavigation(
                                                ue,
                                                C,
                                                J,
                                                L
                                            );
                                        }, 0);
                                }));
                    }
                    get url() {
                        return this.serializeUrl(this.currentUrlTree);
                    }
                    getCurrentNavigation() {
                        return this.currentNavigation;
                    }
                    triggerEvent(f) {
                        this.events.next(f);
                    }
                    resetConfig(f) {
                        Ri(f),
                            (this.config = f.map(xi)),
                            (this.navigated = !1),
                            (this.lastSuccessfulId = -1);
                    }
                    ngOnDestroy() {
                        this.dispose();
                    }
                    dispose() {
                        this.transitions.complete(),
                            this.locationSubscription &&
                                (this.locationSubscription.unsubscribe(),
                                (this.locationSubscription = void 0)),
                            (this.disposed = !0);
                    }
                    createUrlTree(f, C = {}) {
                        const {
                                relativeTo: M,
                                queryParams: L,
                                fragment: J,
                                queryParamsHandling: ue,
                                preserveFragment: Ue,
                            } = C,
                            Dt = M || this.routerState.root,
                            Yt = Ue ? this.currentUrlTree.fragment : J;
                        let It = null;
                        switch (ue) {
                            case 'merge':
                                It = Object.assign(
                                    Object.assign(
                                        {},
                                        this.currentUrlTree.queryParams
                                    ),
                                    L
                                );
                                break;
                            case 'preserve':
                                It = this.currentUrlTree.queryParams;
                                break;
                            default:
                                It = L || null;
                        }
                        return (
                            null !== It && (It = this.removeEmptyProps(It)),
                            (function Vi(y, h, f, C, M) {
                                if (0 === f.length)
                                    return me(h.root, h.root, h, C, M);
                                const L = (function tt(y) {
                                    if (
                                        'string' == typeof y[0] &&
                                        1 === y.length &&
                                        '/' === y[0]
                                    )
                                        return new Ze(!0, 0, y);
                                    let h = 0,
                                        f = !1;
                                    const C = y.reduce((M, L, J) => {
                                        if ('object' == typeof L && null != L) {
                                            if (L.outlets) {
                                                const ue = {};
                                                return (
                                                    oe(L.outlets, (Ue, Dt) => {
                                                        ue[Dt] =
                                                            'string' ==
                                                            typeof Ue
                                                                ? Ue.split('/')
                                                                : Ue;
                                                    }),
                                                    [...M, { outlets: ue }]
                                                );
                                            }
                                            if (L.segmentPath)
                                                return [...M, L.segmentPath];
                                        }
                                        return 'string' != typeof L
                                            ? [...M, L]
                                            : 0 === J
                                            ? (L.split('/').forEach(
                                                  (ue, Ue) => {
                                                      (0 == Ue && '.' === ue) ||
                                                          (0 == Ue && '' === ue
                                                              ? (f = !0)
                                                              : '..' === ue
                                                              ? h++
                                                              : '' != ue &&
                                                                M.push(ue));
                                                  }
                                              ),
                                              M)
                                            : [...M, L];
                                    }, []);
                                    return new Ze(f, h, C);
                                })(f);
                                if (L.toRoot())
                                    return me(h.root, new bt([], {}), h, C, M);
                                const J = (function On(y, h, f) {
                                        if (y.isAbsolute)
                                            return new Et(h.root, !0, 0);
                                        if (-1 === f.snapshot._lastPathIndex) {
                                            const L = f.snapshot._urlSegment;
                                            return new Et(L, L === h.root, 0);
                                        }
                                        const C = ci(y.commands[0]) ? 0 : 1;
                                        return (function gn(y, h, f) {
                                            let C = y,
                                                M = h,
                                                L = f;
                                            for (; L > M; ) {
                                                if (
                                                    ((L -= M),
                                                    (C = C.parent),
                                                    !C)
                                                )
                                                    throw new Error(
                                                        "Invalid number of '../'"
                                                    );
                                                M = C.segments.length;
                                            }
                                            return new Et(C, !1, M - L);
                                        })(
                                            f.snapshot._urlSegment,
                                            f.snapshot._lastPathIndex + C,
                                            y.numberOfDoubleDots
                                        );
                                    })(L, h, y),
                                    ue = J.processChildren
                                        ? di(
                                              J.segmentGroup,
                                              J.index,
                                              L.commands
                                          )
                                        : Ar(
                                              J.segmentGroup,
                                              J.index,
                                              L.commands
                                          );
                                return me(J.segmentGroup, ue, h, C, M);
                            })(
                                Dt,
                                this.currentUrlTree,
                                f,
                                It,
                                null != Yt ? Yt : null
                            )
                        );
                    }
                    navigateByUrl(f, C = { skipLocationChange: !1 }) {
                        const M = Xr(f) ? f : this.parseUrl(f),
                            L = this.urlHandlingStrategy.merge(
                                M,
                                this.rawUrlTree
                            );
                        return this.scheduleNavigation(
                            L,
                            'imperative',
                            null,
                            C
                        );
                    }
                    navigate(f, C = { skipLocationChange: !1 }) {
                        return (
                            (function Ds(y) {
                                for (let h = 0; h < y.length; h++) {
                                    const f = y[h];
                                    if (null == f)
                                        throw new Error(
                                            `The requested path contains ${f} segment at index ${h}`
                                        );
                                }
                            })(f),
                            this.navigateByUrl(this.createUrlTree(f, C), C)
                        );
                    }
                    serializeUrl(f) {
                        return this.urlSerializer.serialize(f);
                    }
                    parseUrl(f) {
                        let C;
                        try {
                            C = this.urlSerializer.parse(f);
                        } catch (M) {
                            C = this.malformedUriErrorHandler(
                                M,
                                this.urlSerializer,
                                f
                            );
                        }
                        return C;
                    }
                    isActive(f, C) {
                        let M;
                        if (
                            ((M =
                                !0 === C
                                    ? Object.assign({}, Us)
                                    : !1 === C
                                    ? Object.assign({}, js)
                                    : C),
                            Xr(f))
                        )
                            return Ne(this.currentUrlTree, f, M);
                        const L = this.parseUrl(f);
                        return Ne(this.currentUrlTree, L, M);
                    }
                    removeEmptyProps(f) {
                        return Object.keys(f).reduce((C, M) => {
                            const L = f[M];
                            return null != L && (C[M] = L), C;
                        }, {});
                    }
                    processNavigations() {
                        this.navigations.subscribe(
                            (f) => {
                                (this.navigated = !0),
                                    (this.lastSuccessfulId = f.id),
                                    (this.currentPageId = f.targetPageId),
                                    this.events.next(
                                        new qt(
                                            f.id,
                                            this.serializeUrl(f.extractedUrl),
                                            this.serializeUrl(
                                                this.currentUrlTree
                                            )
                                        )
                                    ),
                                    (this.lastSuccessfulNavigation =
                                        this.currentNavigation),
                                    f.resolve(!0);
                            },
                            (f) => {
                                this.console.warn(
                                    `Unhandled Navigation Error: ${f}`
                                );
                            }
                        );
                    }
                    scheduleNavigation(f, C, M, L, J) {
                        var ue, Ue, Dt;
                        if (this.disposed) return Promise.resolve(!1);
                        const Yt = this.transitions.value,
                            It = lr(C) && Yt && !lr(Yt.source),
                            Un = Yt.rawUrl.toString() === f.toString(),
                            jn =
                                Yt.id ===
                                (null === (ue = this.currentNavigation) ||
                                void 0 === ue
                                    ? void 0
                                    : ue.id);
                        if (It && Un && jn) return Promise.resolve(!0);
                        let kr, Zr, Or;
                        J
                            ? ((kr = J.resolve),
                              (Zr = J.reject),
                              (Or = J.promise))
                            : (Or = new Promise((Qr, Zi) => {
                                  (kr = Qr), (Zr = Zi);
                              }));
                        const Yi = ++this.navigationId;
                        let Wr;
                        return (
                            'computed' === this.canceledNavigationResolution
                                ? (0 === this.currentPageId &&
                                      (M = this.location.getState()),
                                  (Wr =
                                      M && M.ɵrouterPageId
                                          ? M.ɵrouterPageId
                                          : L.replaceUrl || L.skipLocationChange
                                          ? null !==
                                                (Ue = this.browserPageId) &&
                                            void 0 !== Ue
                                              ? Ue
                                              : 0
                                          : (null !==
                                                (Dt = this.browserPageId) &&
                                            void 0 !== Dt
                                                ? Dt
                                                : 0) + 1))
                                : (Wr = 0),
                            this.setTransition({
                                id: Yi,
                                targetPageId: Wr,
                                source: C,
                                restoredState: M,
                                currentUrlTree: this.currentUrlTree,
                                currentRawUrl: this.rawUrlTree,
                                rawUrl: f,
                                extras: L,
                                resolve: kr,
                                reject: Zr,
                                promise: Or,
                                currentSnapshot: this.routerState.snapshot,
                                currentRouterState: this.routerState,
                            }),
                            Or.catch((Qr) => Promise.reject(Qr))
                        );
                    }
                    setBrowserUrl(f, C) {
                        const M = this.urlSerializer.serialize(f),
                            L = Object.assign(
                                Object.assign({}, C.extras.state),
                                this.generateNgRouterState(C.id, C.targetPageId)
                            );
                        this.location.isCurrentPathEqualTo(M) ||
                        C.extras.replaceUrl
                            ? this.location.replaceState(M, '', L)
                            : this.location.go(M, '', L);
                    }
                    restoreHistory(f, C = !1) {
                        var M, L;
                        if ('computed' === this.canceledNavigationResolution) {
                            const J = this.currentPageId - f.targetPageId;
                            ('popstate' !== f.source &&
                                'eager' !== this.urlUpdateStrategy &&
                                this.currentUrlTree !==
                                    (null === (M = this.currentNavigation) ||
                                    void 0 === M
                                        ? void 0
                                        : M.finalUrl)) ||
                            0 === J
                                ? this.currentUrlTree ===
                                      (null === (L = this.currentNavigation) ||
                                      void 0 === L
                                          ? void 0
                                          : L.finalUrl) &&
                                  0 === J &&
                                  (this.resetState(f),
                                  (this.browserUrlTree = f.currentUrlTree),
                                  this.resetUrlToCurrentUrlTree())
                                : this.location.historyGo(J);
                        } else
                            'replace' === this.canceledNavigationResolution &&
                                (C && this.resetState(f),
                                this.resetUrlToCurrentUrlTree());
                    }
                    resetState(f) {
                        (this.routerState = f.currentRouterState),
                            (this.currentUrlTree = f.currentUrlTree),
                            (this.rawUrlTree = this.urlHandlingStrategy.merge(
                                this.currentUrlTree,
                                f.rawUrl
                            ));
                    }
                    resetUrlToCurrentUrlTree() {
                        this.location.replaceState(
                            this.urlSerializer.serialize(this.rawUrlTree),
                            '',
                            this.generateNgRouterState(
                                this.lastSuccessfulId,
                                this.currentPageId
                            )
                        );
                    }
                    cancelNavigationTransition(f, C) {
                        const M = new Hn(
                            f.id,
                            this.serializeUrl(f.extractedUrl),
                            C
                        );
                        this.triggerEvent(M), f.resolve(!1);
                    }
                    generateNgRouterState(f, C) {
                        return 'computed' === this.canceledNavigationResolution
                            ? { navigationId: f, ɵrouterPageId: C }
                            : { navigationId: f };
                    }
                }
                return (
                    (y.ɵfac = function (f) {
                        l.$Z();
                    }),
                    (y.ɵprov = l.Yz7({ token: y, factory: y.ɵfac })),
                    y
                );
            })();
            function lr(y) {
                return 'imperative' !== y;
            }
            let Hs = (() => {
                    class y {
                        constructor(f, C, M, L, J) {
                            (this.router = f),
                                (this.route = C),
                                (this.tabIndexAttribute = M),
                                (this.renderer = L),
                                (this.el = J),
                                (this.commands = null),
                                (this.onChanges = new $e.x()),
                                this.setTabIndexIfNotOnNativeEl('0');
                        }
                        setTabIndexIfNotOnNativeEl(f) {
                            if (null != this.tabIndexAttribute) return;
                            const C = this.renderer,
                                M = this.el.nativeElement;
                            null !== f
                                ? C.setAttribute(M, 'tabindex', f)
                                : C.removeAttribute(M, 'tabindex');
                        }
                        ngOnChanges(f) {
                            this.onChanges.next(this);
                        }
                        set routerLink(f) {
                            null != f
                                ? ((this.commands = Array.isArray(f) ? f : [f]),
                                  this.setTabIndexIfNotOnNativeEl('0'))
                                : ((this.commands = null),
                                  this.setTabIndexIfNotOnNativeEl(null));
                        }
                        onClick() {
                            if (null === this.urlTree) return !0;
                            const f = {
                                skipLocationChange: Ti(this.skipLocationChange),
                                replaceUrl: Ti(this.replaceUrl),
                                state: this.state,
                            };
                            return (
                                this.router.navigateByUrl(this.urlTree, f), !0
                            );
                        }
                        get urlTree() {
                            return null === this.commands
                                ? null
                                : this.router.createUrlTree(this.commands, {
                                      relativeTo:
                                          void 0 !== this.relativeTo
                                              ? this.relativeTo
                                              : this.route,
                                      queryParams: this.queryParams,
                                      fragment: this.fragment,
                                      queryParamsHandling:
                                          this.queryParamsHandling,
                                      preserveFragment: Ti(
                                          this.preserveFragment
                                      ),
                                  });
                        }
                    }
                    return (
                        (y.ɵfac = function (f) {
                            return new (f || y)(
                                l.Y36(Mr),
                                l.Y36(ge),
                                l.$8M('tabindex'),
                                l.Y36(l.Qsj),
                                l.Y36(l.SBq)
                            );
                        }),
                        (y.ɵdir = l.lG2({
                            type: y,
                            selectors: [
                                ['', 'routerLink', '', 5, 'a', 5, 'area'],
                            ],
                            hostBindings: function (f, C) {
                                1 & f &&
                                    l.NdJ('click', function () {
                                        return C.onClick();
                                    });
                            },
                            inputs: {
                                queryParams: 'queryParams',
                                fragment: 'fragment',
                                queryParamsHandling: 'queryParamsHandling',
                                preserveFragment: 'preserveFragment',
                                skipLocationChange: 'skipLocationChange',
                                replaceUrl: 'replaceUrl',
                                state: 'state',
                                relativeTo: 'relativeTo',
                                routerLink: 'routerLink',
                            },
                            features: [l.TTD],
                        })),
                        y
                    );
                })(),
                oi = (() => {
                    class y {
                        constructor(f, C, M) {
                            (this.router = f),
                                (this.route = C),
                                (this.locationStrategy = M),
                                (this.commands = null),
                                (this.href = null),
                                (this.onChanges = new $e.x()),
                                (this.subscription = f.events.subscribe((L) => {
                                    L instanceof qt &&
                                        this.updateTargetUrlAndHref();
                                }));
                        }
                        set routerLink(f) {
                            this.commands =
                                null != f ? (Array.isArray(f) ? f : [f]) : null;
                        }
                        ngOnChanges(f) {
                            this.updateTargetUrlAndHref(),
                                this.onChanges.next(this);
                        }
                        ngOnDestroy() {
                            this.subscription.unsubscribe();
                        }
                        onClick(f, C, M, L, J) {
                            if (
                                0 !== f ||
                                C ||
                                M ||
                                L ||
                                J ||
                                ('string' == typeof this.target &&
                                    '_self' != this.target) ||
                                null === this.urlTree
                            )
                                return !0;
                            const ue = {
                                skipLocationChange: Ti(this.skipLocationChange),
                                replaceUrl: Ti(this.replaceUrl),
                                state: this.state,
                            };
                            return (
                                this.router.navigateByUrl(this.urlTree, ue), !1
                            );
                        }
                        updateTargetUrlAndHref() {
                            this.href =
                                null !== this.urlTree
                                    ? this.locationStrategy.prepareExternalUrl(
                                          this.router.serializeUrl(this.urlTree)
                                      )
                                    : null;
                        }
                        get urlTree() {
                            return null === this.commands
                                ? null
                                : this.router.createUrlTree(this.commands, {
                                      relativeTo:
                                          void 0 !== this.relativeTo
                                              ? this.relativeTo
                                              : this.route,
                                      queryParams: this.queryParams,
                                      fragment: this.fragment,
                                      queryParamsHandling:
                                          this.queryParamsHandling,
                                      preserveFragment: Ti(
                                          this.preserveFragment
                                      ),
                                  });
                        }
                    }
                    return (
                        (y.ɵfac = function (f) {
                            return new (f || y)(
                                l.Y36(Mr),
                                l.Y36(ge),
                                l.Y36(dn.S$)
                            );
                        }),
                        (y.ɵdir = l.lG2({
                            type: y,
                            selectors: [
                                ['a', 'routerLink', ''],
                                ['area', 'routerLink', ''],
                            ],
                            hostVars: 2,
                            hostBindings: function (f, C) {
                                1 & f &&
                                    l.NdJ('click', function (L) {
                                        return C.onClick(
                                            L.button,
                                            L.ctrlKey,
                                            L.shiftKey,
                                            L.altKey,
                                            L.metaKey
                                        );
                                    }),
                                    2 & f &&
                                        l.uIk('target', C.target)(
                                            'href',
                                            C.href,
                                            l.LSH
                                        );
                            },
                            inputs: {
                                target: 'target',
                                queryParams: 'queryParams',
                                fragment: 'fragment',
                                queryParamsHandling: 'queryParamsHandling',
                                preserveFragment: 'preserveFragment',
                                skipLocationChange: 'skipLocationChange',
                                replaceUrl: 'replaceUrl',
                                state: 'state',
                                relativeTo: 'relativeTo',
                                routerLink: 'routerLink',
                            },
                            features: [l.TTD],
                        })),
                        y
                    );
                })();
            function Ti(y) {
                return '' === y || !!y;
            }
            let Do = (() => {
                class y {
                    constructor(f, C, M, L, J, ue) {
                        (this.router = f),
                            (this.element = C),
                            (this.renderer = M),
                            (this.cdr = L),
                            (this.link = J),
                            (this.linkWithHref = ue),
                            (this.classes = []),
                            (this.isActive = !1),
                            (this.routerLinkActiveOptions = { exact: !1 }),
                            (this.isActiveChange = new l.vpe()),
                            (this.routerEventsSubscription = f.events.subscribe(
                                (Ue) => {
                                    Ue instanceof qt && this.update();
                                }
                            ));
                    }
                    ngAfterContentInit() {
                        (0, ae.of)(
                            this.links.changes,
                            this.linksWithHrefs.changes,
                            (0, ae.of)(null)
                        )
                            .pipe((0, wn.J)())
                            .subscribe((f) => {
                                this.update(),
                                    this.subscribeToEachLinkOnChanges();
                            });
                    }
                    subscribeToEachLinkOnChanges() {
                        var f;
                        null === (f = this.linkInputChangesSubscription) ||
                            void 0 === f ||
                            f.unsubscribe();
                        const C = [
                            ...this.links.toArray(),
                            ...this.linksWithHrefs.toArray(),
                            this.link,
                            this.linkWithHref,
                        ]
                            .filter((M) => !!M)
                            .map((M) => M.onChanges);
                        this.linkInputChangesSubscription = (0, j.D)(C)
                            .pipe((0, wn.J)())
                            .subscribe((M) => {
                                this.isActive !==
                                    this.isLinkActive(this.router)(M) &&
                                    this.update();
                            });
                    }
                    set routerLinkActive(f) {
                        const C = Array.isArray(f) ? f : f.split(' ');
                        this.classes = C.filter((M) => !!M);
                    }
                    ngOnChanges(f) {
                        this.update();
                    }
                    ngOnDestroy() {
                        var f;
                        this.routerEventsSubscription.unsubscribe(),
                            null === (f = this.linkInputChangesSubscription) ||
                                void 0 === f ||
                                f.unsubscribe();
                    }
                    update() {
                        !this.links ||
                            !this.linksWithHrefs ||
                            !this.router.navigated ||
                            Promise.resolve().then(() => {
                                const f = this.hasActiveLinks();
                                this.isActive !== f &&
                                    ((this.isActive = f),
                                    this.cdr.markForCheck(),
                                    this.classes.forEach((C) => {
                                        f
                                            ? this.renderer.addClass(
                                                  this.element.nativeElement,
                                                  C
                                              )
                                            : this.renderer.removeClass(
                                                  this.element.nativeElement,
                                                  C
                                              );
                                    }),
                                    this.isActiveChange.emit(f));
                            });
                    }
                    isLinkActive(f) {
                        const C = (function $s(y) {
                            return !!y.paths;
                        })(this.routerLinkActiveOptions)
                            ? this.routerLinkActiveOptions
                            : this.routerLinkActiveOptions.exact || !1;
                        return (M) => !!M.urlTree && f.isActive(M.urlTree, C);
                    }
                    hasActiveLinks() {
                        const f = this.isLinkActive(this.router);
                        return (
                            (this.link && f(this.link)) ||
                            (this.linkWithHref && f(this.linkWithHref)) ||
                            this.links.some(f) ||
                            this.linksWithHrefs.some(f)
                        );
                    }
                }
                return (
                    (y.ɵfac = function (f) {
                        return new (f || y)(
                            l.Y36(Mr),
                            l.Y36(l.SBq),
                            l.Y36(l.Qsj),
                            l.Y36(l.sBO),
                            l.Y36(Hs, 8),
                            l.Y36(oi, 8)
                        );
                    }),
                    (y.ɵdir = l.lG2({
                        type: y,
                        selectors: [['', 'routerLinkActive', '']],
                        contentQueries: function (f, C, M) {
                            if (
                                (1 & f && (l.Suo(M, Hs, 5), l.Suo(M, oi, 5)),
                                2 & f)
                            ) {
                                let L;
                                l.iGM((L = l.CRH())) && (C.links = L),
                                    l.iGM((L = l.CRH())) &&
                                        (C.linksWithHrefs = L);
                            }
                        },
                        inputs: {
                            routerLinkActiveOptions: 'routerLinkActiveOptions',
                            routerLinkActive: 'routerLinkActive',
                        },
                        outputs: { isActiveChange: 'isActiveChange' },
                        exportAs: ['routerLinkActive'],
                        features: [l.TTD],
                    })),
                    y
                );
            })();
            class Ni {}
            class Co {
                preload(h, f) {
                    return (0, ae.of)(null);
                }
            }
            let bo = (() => {
                    class y {
                        constructor(f, C, M, L) {
                            (this.router = f),
                                (this.injector = M),
                                (this.preloadingStrategy = L),
                                (this.loader = new vo(
                                    M,
                                    C,
                                    (Ue) => f.triggerEvent(new Rt(Ue)),
                                    (Ue) => f.triggerEvent(new jt(Ue))
                                ));
                        }
                        setUpPreloading() {
                            this.subscription = this.router.events
                                .pipe(
                                    (0, it.h)((f) => f instanceof qt),
                                    (0, un.b)(() => this.preload())
                                )
                                .subscribe(() => {});
                        }
                        preload() {
                            const f = this.injector.get(l.h0i);
                            return this.processRoutes(f, this.router.config);
                        }
                        ngOnDestroy() {
                            this.subscription &&
                                this.subscription.unsubscribe();
                        }
                        processRoutes(f, C) {
                            const M = [];
                            for (const L of C)
                                if (
                                    L.loadChildren &&
                                    !L.canLoad &&
                                    L._loadedConfig
                                ) {
                                    const J = L._loadedConfig;
                                    M.push(
                                        this.processRoutes(J.module, J.routes)
                                    );
                                } else
                                    L.loadChildren && !L.canLoad
                                        ? M.push(this.preloadConfig(f, L))
                                        : L.children &&
                                          M.push(
                                              this.processRoutes(f, L.children)
                                          );
                            return (0, j.D)(M).pipe(
                                (0, wn.J)(),
                                (0, ye.U)((L) => {})
                            );
                        }
                        preloadConfig(f, C) {
                            return this.preloadingStrategy.preload(C, () =>
                                (C._loadedConfig
                                    ? (0, ae.of)(C._loadedConfig)
                                    : this.loader.load(f.injector, C)
                                ).pipe(
                                    (0, Gt.z)(
                                        (L) => (
                                            (C._loadedConfig = L),
                                            this.processRoutes(
                                                L.module,
                                                L.routes
                                            )
                                        )
                                    )
                                )
                            );
                        }
                    }
                    return (
                        (y.ɵfac = function (f) {
                            return new (f || y)(
                                l.LFG(Mr),
                                l.LFG(l.Sil),
                                l.LFG(l.zs3),
                                l.LFG(Ni)
                            );
                        }),
                        (y.ɵprov = l.Yz7({ token: y, factory: y.ɵfac })),
                        y
                    );
                })(),
                To = (() => {
                    class y {
                        constructor(f, C, M = {}) {
                            (this.router = f),
                                (this.viewportScroller = C),
                                (this.options = M),
                                (this.lastId = 0),
                                (this.lastSource = 'imperative'),
                                (this.restoredId = 0),
                                (this.store = {}),
                                (M.scrollPositionRestoration =
                                    M.scrollPositionRestoration || 'disabled'),
                                (M.anchorScrolling =
                                    M.anchorScrolling || 'disabled');
                        }
                        init() {
                            'disabled' !==
                                this.options.scrollPositionRestoration &&
                                this.viewportScroller.setHistoryScrollRestoration(
                                    'manual'
                                ),
                                (this.routerEventsSubscription =
                                    this.createScrollEvents()),
                                (this.scrollEventsSubscription =
                                    this.consumeScrollEvents());
                        }
                        createScrollEvents() {
                            return this.router.events.subscribe((f) => {
                                f instanceof Nn
                                    ? ((this.store[this.lastId] =
                                          this.viewportScroller.getScrollPosition()),
                                      (this.lastSource = f.navigationTrigger),
                                      (this.restoredId = f.restoredState
                                          ? f.restoredState.navigationId
                                          : 0))
                                    : f instanceof qt &&
                                      ((this.lastId = f.id),
                                      this.scheduleScrollEvent(
                                          f,
                                          this.router.parseUrl(
                                              f.urlAfterRedirects
                                          ).fragment
                                      ));
                            });
                        }
                        consumeScrollEvents() {
                            return this.router.events.subscribe((f) => {
                                f instanceof kt &&
                                    (f.position
                                        ? 'top' ===
                                          this.options.scrollPositionRestoration
                                            ? this.viewportScroller.scrollToPosition(
                                                  [0, 0]
                                              )
                                            : 'enabled' ===
                                                  this.options
                                                      .scrollPositionRestoration &&
                                              this.viewportScroller.scrollToPosition(
                                                  f.position
                                              )
                                        : f.anchor &&
                                          'enabled' ===
                                              this.options.anchorScrolling
                                        ? this.viewportScroller.scrollToAnchor(
                                              f.anchor
                                          )
                                        : 'disabled' !==
                                              this.options
                                                  .scrollPositionRestoration &&
                                          this.viewportScroller.scrollToPosition(
                                              [0, 0]
                                          ));
                            });
                        }
                        scheduleScrollEvent(f, C) {
                            this.router.triggerEvent(
                                new kt(
                                    f,
                                    'popstate' === this.lastSource
                                        ? this.store[this.restoredId]
                                        : null,
                                    C
                                )
                            );
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription &&
                                this.routerEventsSubscription.unsubscribe(),
                                this.scrollEventsSubscription &&
                                    this.scrollEventsSubscription.unsubscribe();
                        }
                    }
                    return (
                        (y.ɵfac = function (f) {
                            l.$Z();
                        }),
                        (y.ɵprov = l.Yz7({ token: y, factory: y.ɵfac })),
                        y
                    );
                })();
            const ur = new l.OlP('ROUTER_CONFIGURATION'),
                ao = new l.OlP('ROUTER_FORROOT_GUARD'),
                lo = [
                    dn.Ye,
                    { provide: an, useClass: vn },
                    {
                        provide: Mr,
                        useFactory: function bs(
                            y,
                            h,
                            f,
                            C,
                            M,
                            L,
                            J = {},
                            ue,
                            Ue
                        ) {
                            const Dt = new Mr(null, y, h, f, C, M, Dr(L));
                            return (
                                ue && (Dt.urlHandlingStrategy = ue),
                                Ue && (Dt.routeReuseStrategy = Ue),
                                (function Ts(y, h) {
                                    y.errorHandler &&
                                        (h.errorHandler = y.errorHandler),
                                        y.malformedUriErrorHandler &&
                                            (h.malformedUriErrorHandler =
                                                y.malformedUriErrorHandler),
                                        y.onSameUrlNavigation &&
                                            (h.onSameUrlNavigation =
                                                y.onSameUrlNavigation),
                                        y.paramsInheritanceStrategy &&
                                            (h.paramsInheritanceStrategy =
                                                y.paramsInheritanceStrategy),
                                        y.relativeLinkResolution &&
                                            (h.relativeLinkResolution =
                                                y.relativeLinkResolution),
                                        y.urlUpdateStrategy &&
                                            (h.urlUpdateStrategy =
                                                y.urlUpdateStrategy),
                                        y.canceledNavigationResolution &&
                                            (h.canceledNavigationResolution =
                                                y.canceledNavigationResolution);
                                })(J, Dt),
                                J.enableTracing &&
                                    Dt.events.subscribe((Yt) => {
                                        var It, Un;
                                        null === (It = console.group) ||
                                            void 0 === It ||
                                            It.call(
                                                console,
                                                `Router Event: ${Yt.constructor.name}`
                                            ),
                                            console.log(Yt.toString()),
                                            console.log(Yt),
                                            null === (Un = console.groupEnd) ||
                                                void 0 === Un ||
                                                Un.call(console);
                                    }),
                                Dt
                            );
                        },
                        deps: [
                            an,
                            Yr,
                            dn.Ye,
                            l.zs3,
                            l.Sil,
                            Yn,
                            ur,
                            [class oo {}, new l.FiY()],
                            [class ko {}, new l.FiY()],
                        ],
                    },
                    Yr,
                    {
                        provide: ge,
                        useFactory: function Ao(y) {
                            return y.routerState.root;
                        },
                        deps: [Mr],
                    },
                    bo,
                    Co,
                    class Cs {
                        preload(h, f) {
                            return f().pipe((0, st.K)(() => (0, ae.of)(null)));
                        }
                    },
                    { provide: ur, useValue: { enableTracing: !1 } },
                ];
            function us() {
                return new l.PXZ('Router', Mr);
            }
            let Li = (() => {
                class y {
                    constructor(f, C) {}
                    static forRoot(f, C) {
                        return {
                            ngModule: y,
                            providers: [
                                lo,
                                zi(f),
                                {
                                    provide: ao,
                                    useFactory: co,
                                    deps: [[Mr, new l.FiY(), new l.tp0()]],
                                },
                                { provide: ur, useValue: C || {} },
                                {
                                    provide: dn.S$,
                                    useFactory: cs,
                                    deps: [
                                        dn.lw,
                                        [new l.tBr(dn.mr), new l.FiY()],
                                        ur,
                                    ],
                                },
                                {
                                    provide: To,
                                    useFactory: uo,
                                    deps: [Mr, dn.EM, ur],
                                },
                                {
                                    provide: Ni,
                                    useExisting:
                                        C && C.preloadingStrategy
                                            ? C.preloadingStrategy
                                            : Co,
                                },
                                { provide: l.PXZ, multi: !0, useFactory: us },
                                [
                                    Gs,
                                    {
                                        provide: l.ip1,
                                        multi: !0,
                                        useFactory: wo,
                                        deps: [Gs],
                                    },
                                    { provide: Uo, useFactory: Vo, deps: [Gs] },
                                    {
                                        provide: l.tb,
                                        multi: !0,
                                        useExisting: Uo,
                                    },
                                ],
                            ],
                        };
                    }
                    static forChild(f) {
                        return { ngModule: y, providers: [zi(f)] };
                    }
                }
                return (
                    (y.ɵfac = function (f) {
                        return new (f || y)(l.LFG(ao, 8), l.LFG(Mr, 8));
                    }),
                    (y.ɵmod = l.oAB({ type: y })),
                    (y.ɵinj = l.cJS({})),
                    y
                );
            })();
            function uo(y, h, f) {
                return (
                    f.scrollOffset && h.setOffset(f.scrollOffset),
                    new To(y, h, f)
                );
            }
            function cs(y, h, f = {}) {
                return f.useHash ? new dn.Do(y, h) : new dn.b0(y, h);
            }
            function co(y) {
                return 'guarded';
            }
            function zi(y) {
                return [
                    { provide: l.deG, multi: !0, useValue: y },
                    { provide: Yn, multi: !0, useValue: y },
                ];
            }
            let Gs = (() => {
                class y {
                    constructor(f) {
                        (this.injector = f),
                            (this.initNavigation = !1),
                            (this.destroyed = !1),
                            (this.resultOfPreactivationDone = new $e.x());
                    }
                    appInitializer() {
                        return this.injector
                            .get(dn.V_, Promise.resolve(null))
                            .then(() => {
                                if (this.destroyed) return Promise.resolve(!0);
                                let C = null;
                                const M = new Promise((ue) => (C = ue)),
                                    L = this.injector.get(Mr),
                                    J = this.injector.get(ur);
                                return (
                                    'disabled' === J.initialNavigation
                                        ? (L.setUpLocationChangeListener(),
                                          C(!0))
                                        : 'enabled' === J.initialNavigation ||
                                          'enabledBlocking' ===
                                              J.initialNavigation
                                        ? ((L.hooks.afterPreactivation = () =>
                                              this.initNavigation
                                                  ? (0, ae.of)(null)
                                                  : ((this.initNavigation = !0),
                                                    C(!0),
                                                    this
                                                        .resultOfPreactivationDone)),
                                          L.initialNavigation())
                                        : C(!0),
                                    M
                                );
                            });
                    }
                    bootstrapListener(f) {
                        const C = this.injector.get(ur),
                            M = this.injector.get(bo),
                            L = this.injector.get(To),
                            J = this.injector.get(Mr),
                            ue = this.injector.get(l.z2F);
                        f === ue.components[0] &&
                            (('enabledNonBlocking' === C.initialNavigation ||
                                void 0 === C.initialNavigation) &&
                                J.initialNavigation(),
                            M.setUpPreloading(),
                            L.init(),
                            J.resetRootComponentType(ue.componentTypes[0]),
                            this.resultOfPreactivationDone.next(null),
                            this.resultOfPreactivationDone.complete());
                    }
                    ngOnDestroy() {
                        this.destroyed = !0;
                    }
                }
                return (
                    (y.ɵfac = function (f) {
                        return new (f || y)(l.LFG(l.zs3));
                    }),
                    (y.ɵprov = l.Yz7({ token: y, factory: y.ɵfac })),
                    y
                );
            })();
            function wo(y) {
                return y.appInitializer.bind(y);
            }
            function Vo(y) {
                return y.bootstrapListener.bind(y);
            }
            const Uo = new l.OlP('Router Initializer');
        },
        3942: (de, z, _) => {
            'use strict';
            _.d(z, { Z: () => _e });
            var l = _(2090),
                w = _(4859),
                G = _(9681),
                j = _(1877);
            class S {
                constructor(Z, X) {
                    (this._delegate = Z),
                        (this.firebase = X),
                        (0, G._addComponent)(
                            Z,
                            new w.wA('app-compat', () => this, 'PUBLIC')
                        ),
                        (this.container = Z.container);
                }
                get automaticDataCollectionEnabled() {
                    return this._delegate.automaticDataCollectionEnabled;
                }
                set automaticDataCollectionEnabled(Z) {
                    this._delegate.automaticDataCollectionEnabled = Z;
                }
                get name() {
                    return this._delegate.name;
                }
                get options() {
                    return this._delegate.options;
                }
                delete() {
                    return new Promise((Z) => {
                        this._delegate.checkDestroyed(), Z();
                    }).then(
                        () => (
                            this.firebase.INTERNAL.removeApp(this.name),
                            (0, G.deleteApp)(this._delegate)
                        )
                    );
                }
                _getService(Z, X = G._DEFAULT_ENTRY_NAME) {
                    var Ce;
                    this._delegate.checkDestroyed();
                    const ae = this._delegate.container.getProvider(Z);
                    return (
                        !ae.isInitialized() &&
                            'EXPLICIT' ===
                                (null === (Ce = ae.getComponent()) ||
                                void 0 === Ce
                                    ? void 0
                                    : Ce.instantiationMode) &&
                            ae.initialize(),
                        ae.getImmediate({ identifier: X })
                    );
                }
                _removeServiceInstance(Z, X = G._DEFAULT_ENTRY_NAME) {
                    this._delegate.container.getProvider(Z).clearInstance(X);
                }
                _addComponent(Z) {
                    (0, G._addComponent)(this._delegate, Z);
                }
                _addOrOverwriteComponent(Z) {
                    (0, G._addOrOverwriteComponent)(this._delegate, Z);
                }
                toJSON() {
                    return {
                        name: this.name,
                        automaticDataCollectionEnabled:
                            this.automaticDataCollectionEnabled,
                        options: this.options,
                    };
                }
            }
            const k = new l.LL('app-compat', 'Firebase', {
                    'no-app':
                        "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                    'invalid-app-argument':
                        'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                }),
                V = (function B() {
                    const Se = (function W(Se) {
                        const Z = {},
                            X = {
                                __esModule: !0,
                                initializeApp: function Y($e, it = {}) {
                                    const ne = G.initializeApp($e, it);
                                    if ((0, l.r3)(Z, ne.name))
                                        return Z[ne.name];
                                    const Pe = new Se(ne, X);
                                    return (Z[ne.name] = Pe), Pe;
                                },
                                app: ae,
                                registerVersion: G.registerVersion,
                                setLogLevel: G.setLogLevel,
                                onLog: G.onLog,
                                apps: null,
                                SDK_VERSION: G.SDK_VERSION,
                                INTERNAL: {
                                    registerComponent: function se($e) {
                                        const it = $e.name,
                                            ne = it.replace('-compat', '');
                                        if (
                                            G._registerComponent($e) &&
                                            'PUBLIC' === $e.type
                                        ) {
                                            const Pe = (le = ae()) => {
                                                if ('function' != typeof le[ne])
                                                    throw k.create(
                                                        'invalid-app-argument',
                                                        { appName: it }
                                                    );
                                                return le[ne]();
                                            };
                                            void 0 !== $e.serviceProps &&
                                                (0, l.ZB)(Pe, $e.serviceProps),
                                                (X[ne] = Pe),
                                                (Se.prototype[ne] = function (
                                                    ...le
                                                ) {
                                                    return this._getService
                                                        .bind(this, it)
                                                        .apply(
                                                            this,
                                                            $e.multipleInstances
                                                                ? le
                                                                : []
                                                        );
                                                });
                                        }
                                        return 'PUBLIC' === $e.type
                                            ? X[ne]
                                            : null;
                                    },
                                    removeApp: function Ce($e) {
                                        delete Z[$e];
                                    },
                                    useAsService: function xe($e, it) {
                                        return 'serverAuth' === it ? null : it;
                                    },
                                    modularAPIs: G,
                                },
                            };
                        function ae($e) {
                            if (
                                !(0, l.r3)(
                                    Z,
                                    ($e = $e || G._DEFAULT_ENTRY_NAME)
                                )
                            )
                                throw k.create('no-app', { appName: $e });
                            return Z[$e];
                        }
                        return (
                            (X.default = X),
                            Object.defineProperty(X, 'apps', {
                                get: function ie() {
                                    return Object.keys(Z).map(($e) => Z[$e]);
                                },
                            }),
                            (ae.App = Se),
                            X
                        );
                    })(S);
                    return (
                        (Se.INTERNAL = Object.assign(
                            Object.assign({}, Se.INTERNAL),
                            {
                                createFirebaseNamespace: B,
                                extendNamespace: function Z(X) {
                                    (0, l.ZB)(Se, X);
                                },
                                createSubscribe: l.ne,
                                ErrorFactory: l.LL,
                                deepExtend: l.ZB,
                            }
                        )),
                        Se
                    );
                })(),
                U = new j.Yd('@firebase/app-compat');
            if ((0, l.jU)() && void 0 !== self.firebase) {
                U.warn(
                    '\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  '
                );
                const Se = self.firebase.SDK_VERSION;
                Se &&
                    Se.indexOf('LITE') >= 0 &&
                    U.warn(
                        '\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    '
                    );
            }
            const _e = V;
            !(function Ee(Se) {
                (0, G.registerVersion)('@firebase/app-compat', '0.1.16', Se);
            })();
        },
        9681: (de, z, _) => {
            'use strict';
            _.r(z),
                _.d(z, {
                    FirebaseError: () => j.ZR,
                    SDK_VERSION: () => Fe,
                    _DEFAULT_ENTRY_NAME: () => ln,
                    _addComponent: () => Bt,
                    _addOrOverwriteComponent: () => Gt,
                    _apps: () => st,
                    _clearComponents: () => Kt,
                    _components: () => un,
                    _getProvider: () => wn,
                    _registerComponent: () => mt,
                    _removeServiceInstance: () => dn,
                    deleteApp: () => ot,
                    getApp: () => q,
                    getApps: () => Te,
                    initializeApp: () => Ye,
                    onLog: () => jt,
                    registerVersion: () => Rt,
                    setLogLevel: () => xt,
                });
            var l = _(5861),
                w = _(4859),
                G = _(1877),
                j = _(2090);
            class S {
                constructor(vt) {
                    this.container = vt;
                }
                getPlatformInfoString() {
                    return this.container
                        .getProviders()
                        .map((kt) => {
                            if (
                                (function x(At) {
                                    const vt = At.getComponent();
                                    return (
                                        'VERSION' ===
                                        (null == vt ? void 0 : vt.type)
                                    );
                                })(kt)
                            ) {
                                const ht = kt.getImmediate();
                                return `${ht.library}/${ht.version}`;
                            }
                            return null;
                        })
                        .filter((kt) => kt)
                        .join(' ');
                }
            }
            const k = '@firebase/app',
                W = '0.7.15',
                B = new G.Yd('@firebase/app'),
                ln = '[DEFAULT]',
                nt = {
                    [k]: 'fire-core',
                    '@firebase/app-compat': 'fire-core-compat',
                    '@firebase/analytics': 'fire-analytics',
                    '@firebase/analytics-compat': 'fire-analytics-compat',
                    '@firebase/app-check': 'fire-app-check',
                    '@firebase/app-check-compat': 'fire-app-check-compat',
                    '@firebase/auth': 'fire-auth',
                    '@firebase/auth-compat': 'fire-auth-compat',
                    '@firebase/database': 'fire-rtdb',
                    '@firebase/database-compat': 'fire-rtdb-compat',
                    '@firebase/functions': 'fire-fn',
                    '@firebase/functions-compat': 'fire-fn-compat',
                    '@firebase/installations': 'fire-iid',
                    '@firebase/installations-compat': 'fire-iid-compat',
                    '@firebase/messaging': 'fire-fcm',
                    '@firebase/messaging-compat': 'fire-fcm-compat',
                    '@firebase/performance': 'fire-perf',
                    '@firebase/performance-compat': 'fire-perf-compat',
                    '@firebase/remote-config': 'fire-rc',
                    '@firebase/remote-config-compat': 'fire-rc-compat',
                    '@firebase/storage': 'fire-gcs',
                    '@firebase/storage-compat': 'fire-gcs-compat',
                    '@firebase/firestore': 'fire-fst',
                    '@firebase/firestore-compat': 'fire-fst-compat',
                    'fire-js': 'fire-js',
                    firebase: 'fire-js-all',
                },
                st = new Map(),
                un = new Map();
            function Bt(At, vt) {
                try {
                    At.container.addComponent(vt);
                } catch (kt) {
                    B.debug(
                        `Component ${vt.name} failed to register with FirebaseApp ${At.name}`,
                        kt
                    );
                }
            }
            function Gt(At, vt) {
                At.container.addOrOverwriteComponent(vt);
            }
            function mt(At) {
                const vt = At.name;
                if (un.has(vt))
                    return (
                        B.debug(
                            `There were multiple attempts to register component ${vt}.`
                        ),
                        !1
                    );
                un.set(vt, At);
                for (const kt of st.values()) Bt(kt, At);
                return !0;
            }
            function wn(At, vt) {
                return At.container.getProvider(vt);
            }
            function dn(At, vt, kt = ln) {
                wn(At, vt).clearInstance(kt);
            }
            function Kt() {
                un.clear();
            }
            const qt = new j.LL('app', 'Firebase', {
                'no-app':
                    "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
                'bad-app-name': "Illegal App name: '{$appName}",
                'duplicate-app':
                    "Firebase App named '{$appName}' already exists with different options or config",
                'app-deleted':
                    "Firebase App named '{$appName}' already deleted",
                'invalid-app-argument':
                    'firebase.{$appName}() takes either no argument or a Firebase App instance.',
                'invalid-log-argument':
                    'First argument to `onLog` must be null or a function.',
            });
            class Hn {
                constructor(vt, kt, ht) {
                    (this._isDeleted = !1),
                        (this._options = Object.assign({}, vt)),
                        (this._config = Object.assign({}, kt)),
                        (this._name = kt.name),
                        (this._automaticDataCollectionEnabled =
                            kt.automaticDataCollectionEnabled),
                        (this._container = ht),
                        this.container.addComponent(
                            new w.wA('app', () => this, 'PUBLIC')
                        );
                }
                get automaticDataCollectionEnabled() {
                    return (
                        this.checkDestroyed(),
                        this._automaticDataCollectionEnabled
                    );
                }
                set automaticDataCollectionEnabled(vt) {
                    this.checkDestroyed(),
                        (this._automaticDataCollectionEnabled = vt);
                }
                get name() {
                    return this.checkDestroyed(), this._name;
                }
                get options() {
                    return this.checkDestroyed(), this._options;
                }
                get config() {
                    return this.checkDestroyed(), this._config;
                }
                get container() {
                    return this._container;
                }
                get isDeleted() {
                    return this._isDeleted;
                }
                set isDeleted(vt) {
                    this._isDeleted = vt;
                }
                checkDestroyed() {
                    if (this.isDeleted)
                        throw qt.create('app-deleted', { appName: this._name });
                }
            }
            const Fe = '9.6.5';
            function Ye(At, vt = {}) {
                'object' != typeof vt && (vt = { name: vt });
                const kt = Object.assign(
                        { name: ln, automaticDataCollectionEnabled: !1 },
                        vt
                    ),
                    ht = kt.name;
                if ('string' != typeof ht || !ht)
                    throw qt.create('bad-app-name', { appName: String(ht) });
                const fn = st.get(ht);
                if (fn) {
                    if ((0, j.vZ)(At, fn.options) && (0, j.vZ)(kt, fn.config))
                        return fn;
                    throw qt.create('duplicate-app', { appName: ht });
                }
                const Ft = new w.H0(ht);
                for (const _t of un.values()) Ft.addComponent(_t);
                const yt = new Hn(At, kt, Ft);
                return st.set(ht, yt), yt;
            }
            function q(At = ln) {
                const vt = st.get(At);
                if (!vt) throw qt.create('no-app', { appName: At });
                return vt;
            }
            function Te() {
                return Array.from(st.values());
            }
            function ot(At) {
                return We.apply(this, arguments);
            }
            function We() {
                return (We = (0, l.Z)(function* (At) {
                    const vt = At.name;
                    st.has(vt) &&
                        (st.delete(vt),
                        yield Promise.all(
                            At.container.getProviders().map((kt) => kt.delete())
                        ),
                        (At.isDeleted = !0));
                })).apply(this, arguments);
            }
            function Rt(At, vt, kt) {
                var ht;
                let fn = null !== (ht = nt[At]) && void 0 !== ht ? ht : At;
                kt && (fn += `-${kt}`);
                const Ft = fn.match(/\s|\//),
                    yt = vt.match(/\s|\//);
                if (Ft || yt) {
                    const _t = [
                        `Unable to register library "${fn}" with version "${vt}":`,
                    ];
                    return (
                        Ft &&
                            _t.push(
                                `library name "${fn}" contains illegal characters (whitespace or "/")`
                            ),
                        Ft && yt && _t.push('and'),
                        yt &&
                            _t.push(
                                `version name "${vt}" contains illegal characters (whitespace or "/")`
                            ),
                        void B.warn(_t.join(' '))
                    );
                }
                mt(
                    new w.wA(
                        `${fn}-version`,
                        () => ({ library: fn, version: vt }),
                        'VERSION'
                    )
                );
            }
            function jt(At, vt) {
                if (null !== At && 'function' != typeof At)
                    throw qt.create('invalid-log-argument');
                (0, G.Am)(At, vt);
            }
            function xt(At) {
                (0, G.Ub)(At);
            }
            !(function nr(At) {
                mt(new w.wA('platform-logger', (vt) => new S(vt), 'PRIVATE')),
                    Rt(k, W, At),
                    Rt(k, W, 'esm2017'),
                    Rt('fire-js', '');
            })('');
        },
        4859: (de, z, _) => {
            'use strict';
            _.d(z, { wA: () => G, H0: () => W });
            var l = _(5861),
                w = _(2090);
            class G {
                constructor(V, U, Q) {
                    (this.name = V),
                        (this.instanceFactory = U),
                        (this.type = Q),
                        (this.multipleInstances = !1),
                        (this.serviceProps = {}),
                        (this.instantiationMode = 'LAZY'),
                        (this.onInstanceCreated = null);
                }
                setInstantiationMode(V) {
                    return (this.instantiationMode = V), this;
                }
                setMultipleInstances(V) {
                    return (this.multipleInstances = V), this;
                }
                setServiceProps(V) {
                    return (this.serviceProps = V), this;
                }
                setInstanceCreatedCallback(V) {
                    return (this.onInstanceCreated = V), this;
                }
            }
            const j = '[DEFAULT]';
            class S {
                constructor(V, U) {
                    (this.name = V),
                        (this.container = U),
                        (this.component = null),
                        (this.instances = new Map()),
                        (this.instancesDeferred = new Map()),
                        (this.instancesOptions = new Map()),
                        (this.onInitCallbacks = new Map());
                }
                get(V) {
                    const U = this.normalizeInstanceIdentifier(V);
                    if (!this.instancesDeferred.has(U)) {
                        const Q = new w.BH();
                        if (
                            (this.instancesDeferred.set(U, Q),
                            this.isInitialized(U) ||
                                this.shouldAutoInitialize())
                        )
                            try {
                                const De = this.getOrInitializeService({
                                    instanceIdentifier: U,
                                });
                                De && Q.resolve(De);
                            } catch (De) {}
                    }
                    return this.instancesDeferred.get(U).promise;
                }
                getImmediate(V) {
                    var U;
                    const Q = this.normalizeInstanceIdentifier(
                            null == V ? void 0 : V.identifier
                        ),
                        De =
                            null !== (U = null == V ? void 0 : V.optional) &&
                            void 0 !== U &&
                            U;
                    if (
                        !this.isInitialized(Q) &&
                        !this.shouldAutoInitialize()
                    ) {
                        if (De) return null;
                        throw Error(`Service ${this.name} is not available`);
                    }
                    try {
                        return this.getOrInitializeService({
                            instanceIdentifier: Q,
                        });
                    } catch (Ee) {
                        if (De) return null;
                        throw Ee;
                    }
                }
                getComponent() {
                    return this.component;
                }
                setComponent(V) {
                    if (V.name !== this.name)
                        throw Error(
                            `Mismatching Component ${V.name} for Provider ${this.name}.`
                        );
                    if (this.component)
                        throw Error(
                            `Component for ${this.name} has already been provided`
                        );
                    if (((this.component = V), this.shouldAutoInitialize())) {
                        if (
                            (function k(B) {
                                return 'EAGER' === B.instantiationMode;
                            })(V)
                        )
                            try {
                                this.getOrInitializeService({
                                    instanceIdentifier: j,
                                });
                            } catch (U) {}
                        for (const [U, Q] of this.instancesDeferred.entries()) {
                            const De = this.normalizeInstanceIdentifier(U);
                            try {
                                const Ee = this.getOrInitializeService({
                                    instanceIdentifier: De,
                                });
                                Q.resolve(Ee);
                            } catch (Ee) {}
                        }
                    }
                }
                clearInstance(V = j) {
                    this.instancesDeferred.delete(V),
                        this.instancesOptions.delete(V),
                        this.instances.delete(V);
                }
                delete() {
                    var V = this;
                    return (0, l.Z)(function* () {
                        const U = Array.from(V.instances.values());
                        yield Promise.all([
                            ...U.filter((Q) => 'INTERNAL' in Q).map((Q) =>
                                Q.INTERNAL.delete()
                            ),
                            ...U.filter((Q) => '_delete' in Q).map((Q) =>
                                Q._delete()
                            ),
                        ]);
                    })();
                }
                isComponentSet() {
                    return null != this.component;
                }
                isInitialized(V = j) {
                    return this.instances.has(V);
                }
                getOptions(V = j) {
                    return this.instancesOptions.get(V) || {};
                }
                initialize(V = {}) {
                    const { options: U = {} } = V,
                        Q = this.normalizeInstanceIdentifier(
                            V.instanceIdentifier
                        );
                    if (this.isInitialized(Q))
                        throw Error(
                            `${this.name}(${Q}) has already been initialized`
                        );
                    if (!this.isComponentSet())
                        throw Error(
                            `Component ${this.name} has not been registered yet`
                        );
                    const De = this.getOrInitializeService({
                        instanceIdentifier: Q,
                        options: U,
                    });
                    for (const [Ee, _e] of this.instancesDeferred.entries())
                        Q === this.normalizeInstanceIdentifier(Ee) &&
                            _e.resolve(De);
                    return De;
                }
                onInit(V, U) {
                    var Q;
                    const De = this.normalizeInstanceIdentifier(U),
                        Ee =
                            null !== (Q = this.onInitCallbacks.get(De)) &&
                            void 0 !== Q
                                ? Q
                                : new Set();
                    Ee.add(V), this.onInitCallbacks.set(De, Ee);
                    const _e = this.instances.get(De);
                    return (
                        _e && V(_e, De),
                        () => {
                            Ee.delete(V);
                        }
                    );
                }
                invokeOnInitCallbacks(V, U) {
                    const Q = this.onInitCallbacks.get(U);
                    if (Q)
                        for (const De of Q)
                            try {
                                De(V, U);
                            } catch (Ee) {}
                }
                getOrInitializeService({
                    instanceIdentifier: V,
                    options: U = {},
                }) {
                    let Q = this.instances.get(V);
                    if (
                        !Q &&
                        this.component &&
                        ((Q = this.component.instanceFactory(this.container, {
                            instanceIdentifier: ((B = V), B === j ? void 0 : B),
                            options: U,
                        })),
                        this.instances.set(V, Q),
                        this.instancesOptions.set(V, U),
                        this.invokeOnInitCallbacks(Q, V),
                        this.component.onInstanceCreated)
                    )
                        try {
                            this.component.onInstanceCreated(
                                this.container,
                                V,
                                Q
                            );
                        } catch (De) {}
                    var B;
                    return Q || null;
                }
                normalizeInstanceIdentifier(V = j) {
                    return this.component
                        ? this.component.multipleInstances
                            ? V
                            : j
                        : V;
                }
                shouldAutoInitialize() {
                    return (
                        !!this.component &&
                        'EXPLICIT' !== this.component.instantiationMode
                    );
                }
            }
            class W {
                constructor(V) {
                    (this.name = V), (this.providers = new Map());
                }
                addComponent(V) {
                    const U = this.getProvider(V.name);
                    if (U.isComponentSet())
                        throw new Error(
                            `Component ${V.name} has already been registered with ${this.name}`
                        );
                    U.setComponent(V);
                }
                addOrOverwriteComponent(V) {
                    this.getProvider(V.name).isComponentSet() &&
                        this.providers.delete(V.name),
                        this.addComponent(V);
                }
                getProvider(V) {
                    if (this.providers.has(V)) return this.providers.get(V);
                    const U = new S(V, this);
                    return this.providers.set(V, U), U;
                }
                getProviders() {
                    return Array.from(this.providers.values());
                }
            }
        },
        1877: (de, z, _) => {
            'use strict';
            _.d(z, { in: () => w, Yd: () => k, Ub: () => W, Am: () => B });
            const l = [];
            var w = (() => {
                return (
                    ((V = w || (w = {}))[(V.DEBUG = 0)] = 'DEBUG'),
                    (V[(V.VERBOSE = 1)] = 'VERBOSE'),
                    (V[(V.INFO = 2)] = 'INFO'),
                    (V[(V.WARN = 3)] = 'WARN'),
                    (V[(V.ERROR = 4)] = 'ERROR'),
                    (V[(V.SILENT = 5)] = 'SILENT'),
                    w
                );
                var V;
            })();
            const G = {
                    debug: w.DEBUG,
                    verbose: w.VERBOSE,
                    info: w.INFO,
                    warn: w.WARN,
                    error: w.ERROR,
                    silent: w.SILENT,
                },
                j = w.INFO,
                S = {
                    [w.DEBUG]: 'log',
                    [w.VERBOSE]: 'log',
                    [w.INFO]: 'info',
                    [w.WARN]: 'warn',
                    [w.ERROR]: 'error',
                },
                x = (V, U, ...Q) => {
                    if (U < V.logLevel) return;
                    const De = new Date().toISOString(),
                        Ee = S[U];
                    if (!Ee)
                        throw new Error(
                            `Attempted to log a message with an invalid logType (value: ${U})`
                        );
                    console[Ee](`[${De}]  ${V.name}:`, ...Q);
                };
            class k {
                constructor(U) {
                    (this.name = U),
                        (this._logLevel = j),
                        (this._logHandler = x),
                        (this._userLogHandler = null),
                        l.push(this);
                }
                get logLevel() {
                    return this._logLevel;
                }
                set logLevel(U) {
                    if (!(U in w))
                        throw new TypeError(
                            `Invalid value "${U}" assigned to \`logLevel\``
                        );
                    this._logLevel = U;
                }
                setLogLevel(U) {
                    this._logLevel = 'string' == typeof U ? G[U] : U;
                }
                get logHandler() {
                    return this._logHandler;
                }
                set logHandler(U) {
                    if ('function' != typeof U)
                        throw new TypeError(
                            'Value assigned to `logHandler` must be a function'
                        );
                    this._logHandler = U;
                }
                get userLogHandler() {
                    return this._userLogHandler;
                }
                set userLogHandler(U) {
                    this._userLogHandler = U;
                }
                debug(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, w.DEBUG, ...U),
                        this._logHandler(this, w.DEBUG, ...U);
                }
                log(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, w.VERBOSE, ...U),
                        this._logHandler(this, w.VERBOSE, ...U);
                }
                info(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, w.INFO, ...U),
                        this._logHandler(this, w.INFO, ...U);
                }
                warn(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, w.WARN, ...U),
                        this._logHandler(this, w.WARN, ...U);
                }
                error(...U) {
                    this._userLogHandler &&
                        this._userLogHandler(this, w.ERROR, ...U),
                        this._logHandler(this, w.ERROR, ...U);
                }
            }
            function W(V) {
                l.forEach((U) => {
                    U.setLogLevel(V);
                });
            }
            function B(V, U) {
                for (const Q of l) {
                    let De = null;
                    U && U.level && (De = G[U.level]),
                        (Q.userLogHandler =
                            null === V
                                ? null
                                : (Ee, _e, ...Se) => {
                                      const Z = Se.map((X) => {
                                          if (null == X) return null;
                                          if ('string' == typeof X) return X;
                                          if (
                                              'number' == typeof X ||
                                              'boolean' == typeof X
                                          )
                                              return X.toString();
                                          if (X instanceof Error)
                                              return X.message;
                                          try {
                                              return JSON.stringify(X);
                                          } catch (Ce) {
                                              return null;
                                          }
                                      })
                                          .filter((X) => X)
                                          .join(' ');
                                      _e >= (null != De ? De : Ee.logLevel) &&
                                          V({
                                              level: w[_e].toLowerCase(),
                                              message: Z,
                                              args: Se,
                                              type: Ee.name,
                                          });
                                  });
                }
            }
        },
        5573: (de, z, _) => {
            'use strict';
            _.d(z, { eX: () => Kt, sQ: () => te, GW: () => Me, l4: () => Nn });
            var l = _(2323),
                w = _(6451),
                G = _(8306),
                j = _(7579),
                S = _(4482),
                x = _(5403),
                k = _(5032),
                B = _(515),
                V = _(9646),
                U = _(576);
            class Ee {
                constructor(Ne, Be, Qe) {
                    (this.kind = Ne),
                        (this.value = Be),
                        (this.error = Qe),
                        (this.hasValue = 'N' === Ne);
                }
                observe(Ne) {
                    return _e(this, Ne);
                }
                do(Ne, Be, Qe) {
                    const { kind: Ct, value: ct, error: en } = this;
                    return 'N' === Ct
                        ? null == Ne
                            ? void 0
                            : Ne(ct)
                        : 'E' === Ct
                        ? null == Be
                            ? void 0
                            : Be(en)
                        : null == Qe
                        ? void 0
                        : Qe();
                }
                accept(Ne, Be, Qe) {
                    var Ct;
                    return (0, U.m)(
                        null === (Ct = Ne) || void 0 === Ct ? void 0 : Ct.next
                    )
                        ? this.observe(Ne)
                        : this.do(Ne, Be, Qe);
                }
                toObservable() {
                    const { kind: Ne, value: Be, error: Qe } = this,
                        Ct =
                            'N' === Ne
                                ? (0, V.of)(Be)
                                : 'E' === Ne
                                ? (function Q(pe, Ne) {
                                      const Be = (0, U.m)(pe) ? pe : () => pe,
                                          Qe = (Ct) => Ct.error(Be());
                                      return new G.y(
                                          Ne
                                              ? (Ct) => Ne.schedule(Qe, 0, Ct)
                                              : Qe
                                      );
                                  })(() => Qe)
                                : 'C' === Ne
                                ? B.E
                                : 0;
                    if (!Ct)
                        throw new TypeError(
                            `Unexpected notification kind ${Ne}`
                        );
                    return Ct;
                }
                static createNext(Ne) {
                    return new Ee('N', Ne);
                }
                static createError(Ne) {
                    return new Ee('E', void 0, Ne);
                }
                static createComplete() {
                    return Ee.completeNotification;
                }
            }
            function _e(pe, Ne) {
                var Be, Qe, Ct;
                const { kind: ct, value: en, error: on } = pe;
                if ('string' != typeof ct)
                    throw new TypeError('Invalid notification, missing "kind"');
                'N' === ct
                    ? null === (Be = Ne.next) ||
                      void 0 === Be ||
                      Be.call(Ne, en)
                    : 'E' === ct
                    ? null === (Qe = Ne.error) ||
                      void 0 === Qe ||
                      Qe.call(Ne, on)
                    : null === (Ct = Ne.complete) ||
                      void 0 === Ct ||
                      Ct.call(Ne);
            }
            Ee.completeNotification = new Ee('C');
            var Z = _(8421);
            function X(pe, Ne, Be, Qe) {
                return (0, S.e)((Ct, ct) => {
                    let en;
                    Ne && 'function' != typeof Ne
                        ? ({ duration: Be, element: en, connector: Qe } = Ne)
                        : (en = Ne);
                    const on = new Map(),
                        Sn = (Zt) => {
                            on.forEach(Zt), Zt(ct);
                        },
                        bt = (Zt) => Sn((_n) => _n.error(Zt)),
                        Xn = new Ce(
                            ct,
                            (Zt) => {
                                try {
                                    const _n = pe(Zt);
                                    let an = on.get(_n);
                                    if (!an) {
                                        on.set(
                                            _n,
                                            (an = Qe ? Qe() : new j.x())
                                        );
                                        const vn = (function Jt(Zt, _n) {
                                            const an = new G.y((vn) => {
                                                Xn.activeGroups++;
                                                const Gn = _n.subscribe(vn);
                                                return () => {
                                                    Gn.unsubscribe(),
                                                        0 ==
                                                            --Xn.activeGroups &&
                                                            Xn.teardownAttempted &&
                                                            Xn.unsubscribe();
                                                };
                                            });
                                            return (an.key = Zt), an;
                                        })(_n, an);
                                        if ((ct.next(vn), Be)) {
                                            const Gn = new x.Q(
                                                an,
                                                () => {
                                                    an.complete(),
                                                        null == Gn ||
                                                            Gn.unsubscribe();
                                                },
                                                void 0,
                                                void 0,
                                                () => on.delete(_n)
                                            );
                                            Xn.add(
                                                (0, Z.Xf)(Be(vn)).subscribe(Gn)
                                            );
                                        }
                                    }
                                    an.next(en ? en(Zt) : Zt);
                                } catch (_n) {
                                    bt(_n);
                                }
                            },
                            () => Sn((Zt) => Zt.complete()),
                            bt,
                            () => on.clear()
                        );
                    Ct.subscribe(Xn);
                });
            }
            class Ce extends x.Q {
                constructor() {
                    super(...arguments),
                        (this.activeGroups = 0),
                        (this.teardownAttempted = !1);
                }
                unsubscribe() {
                    (this.teardownAttempted = !0),
                        0 === this.activeGroups && super.unsubscribe();
                }
            }
            var ae = _(4004);
            function Y(pe, Ne) {
                return Ne
                    ? (Be) =>
                          Be.pipe(
                              Y((Qe, Ct) =>
                                  (0, Z.Xf)(pe(Qe, Ct)).pipe(
                                      (0, ae.U)((ct, en) => Ne(Qe, ct, Ct, en))
                                  )
                              )
                          )
                    : (0, S.e)((Be, Qe) => {
                          let Ct = 0,
                              ct = null,
                              en = !1;
                          Be.subscribe(
                              new x.Q(
                                  Qe,
                                  (on) => {
                                      ct ||
                                          ((ct = new x.Q(Qe, void 0, () => {
                                              (ct = null), en && Qe.complete();
                                          })),
                                          (0, Z.Xf)(pe(on, Ct++)).subscribe(
                                              ct
                                          ));
                                  },
                                  () => {
                                      (en = !0), !ct && Qe.complete();
                                  }
                              )
                          );
                      });
            }
            var se = _(262),
                xe = _(9300),
                $e = _(5577),
                it = _(5698),
                ne = _(5e3);
            const Pe = { dispatch: !0, useEffectsErrorHandler: !0 },
                le = '__@ngrx/effects_create__';
            function Me(pe, Ne) {
                const Be = pe(),
                    Qe = Object.assign(Object.assign({}, Pe), Ne);
                return Object.defineProperty(Be, le, { value: Qe }), Be;
            }
            function be(pe) {
                return Object.getOwnPropertyNames(pe)
                    .filter(
                        (Qe) =>
                            !(!pe[Qe] || !pe[Qe].hasOwnProperty(le)) &&
                            pe[Qe][le].hasOwnProperty('dispatch')
                    )
                    .map((Qe) =>
                        Object.assign({ propertyName: Qe }, pe[Qe][le])
                    );
            }
            function ye(pe) {
                return Object.getPrototypeOf(pe);
            }
            const ut = '__@ngrx/effects__';
            function ln(pe) {
                return (0, l.qC)(un, ye)(pe);
            }
            function un(pe) {
                return (function nt(pe) {
                    return pe.constructor.hasOwnProperty(ut);
                })(pe)
                    ? pe.constructor[ut]
                    : [];
            }
            function mt(pe, Ne, Be) {
                const Qe = ye(pe).constructor.name,
                    Ct = (function Gt(pe) {
                        return [ln, be].reduce(
                            (Be, Qe) => Be.concat(Qe(pe)),
                            []
                        );
                    })(pe).map(
                        ({
                            propertyName: ct,
                            dispatch: en,
                            useEffectsErrorHandler: on,
                        }) => {
                            const Sn =
                                    'function' == typeof pe[ct]
                                        ? pe[ct]()
                                        : pe[ct],
                                bt = on ? Be(Sn, Ne) : Sn;
                            return !1 === en
                                ? bt.pipe(
                                      (function W() {
                                          return (0, S.e)((pe, Ne) => {
                                              pe.subscribe(new x.Q(Ne, k.Z));
                                          });
                                      })()
                                  )
                                : bt
                                      .pipe(
                                          (function Se() {
                                              return (0, S.e)((pe, Ne) => {
                                                  pe.subscribe(
                                                      new x.Q(
                                                          Ne,
                                                          (Be) => {
                                                              Ne.next(
                                                                  Ee.createNext(
                                                                      Be
                                                                  )
                                                              );
                                                          },
                                                          () => {
                                                              Ne.next(
                                                                  Ee.createComplete()
                                                              ),
                                                                  Ne.complete();
                                                          },
                                                          (Be) => {
                                                              Ne.next(
                                                                  Ee.createError(
                                                                      Be
                                                                  )
                                                              ),
                                                                  Ne.complete();
                                                          }
                                                      )
                                                  );
                                              });
                                          })()
                                      )
                                      .pipe(
                                          (0, ae.U)((Jt) => ({
                                              effect: pe[ct],
                                              notification: Jt,
                                              propertyName: ct,
                                              sourceName: Qe,
                                              sourceInstance: pe,
                                          }))
                                      );
                        }
                    );
                return (0, w.T)(...Ct);
            }
            function dn(pe, Ne, Be = 10) {
                return pe.pipe(
                    (0, se.K)(
                        (Qe) => (
                            Ne && Ne.handleError(Qe),
                            Be <= 1 ? pe : dn(pe, Ne, Be - 1)
                        )
                    )
                );
            }
            let Kt = (() => {
                class pe extends G.y {
                    constructor(Be) {
                        super(), Be && (this.source = Be);
                    }
                    lift(Be) {
                        const Qe = new pe();
                        return (Qe.source = this), (Qe.operator = Be), Qe;
                    }
                }
                return (
                    (pe.ɵfac = function (Be) {
                        return new (Be || pe)(ne.LFG(l.Y$));
                    }),
                    (pe.ɵprov = ne.Yz7({ token: pe, factory: pe.ɵfac })),
                    pe
                );
            })();
            function Nn(...pe) {
                return (0, xe.h)((Ne) =>
                    pe.some((Be) =>
                        'string' == typeof Be
                            ? Be === Ne.type
                            : Be.type === Ne.type
                    )
                );
            }
            function jt(pe) {
                return xt(pe, 'ngrxOnInitEffects');
            }
            function xt(pe, Ne) {
                return pe && Ne in pe && 'function' == typeof pe[Ne];
            }
            const nr = new ne.OlP('@ngrx/effects Internal Root Guard'),
                At = new ne.OlP('@ngrx/effects User Provided Effects'),
                vt = new ne.OlP('@ngrx/effects Internal Root Effects'),
                kt = new ne.OlP('@ngrx/effects Root Effects'),
                ht = new ne.OlP('@ngrx/effects Internal Feature Effects'),
                fn = new ne.OlP('@ngrx/effects Feature Effects'),
                Ft = new ne.OlP('@ngrx/effects Effects Error Handler');
            let yt = (() => {
                class pe extends j.x {
                    constructor(Be, Qe) {
                        super(),
                            (this.errorHandler = Be),
                            (this.effectsErrorHandler = Qe);
                    }
                    addEffects(Be) {
                        this.next(Be);
                    }
                    toActions() {
                        return this.pipe(
                            X(ye),
                            (0, $e.z)((Be) => Be.pipe(X(_t))),
                            (0, $e.z)((Be) => {
                                const Qe = Be.pipe(
                                        Y((ct) =>
                                            (function Er(pe, Ne) {
                                                return (Be) => {
                                                    const Qe = mt(Be, pe, Ne);
                                                    return (function We(pe) {
                                                        return xt(
                                                            pe,
                                                            'ngrxOnRunEffects'
                                                        );
                                                    })(Be)
                                                        ? Be.ngrxOnRunEffects(
                                                              Qe
                                                          )
                                                        : Qe;
                                                };
                                            })(
                                                this.errorHandler,
                                                this.effectsErrorHandler
                                            )(ct)
                                        ),
                                        (0, ae.U)(
                                            (ct) => (
                                                (function qt(pe, Ne) {
                                                    if (
                                                        'N' ===
                                                        pe.notification.kind
                                                    ) {
                                                        const Be =
                                                            pe.notification
                                                                .value;
                                                        !(function Hn(pe) {
                                                            return (
                                                                'function' !=
                                                                    typeof pe &&
                                                                pe &&
                                                                pe.type &&
                                                                'string' ==
                                                                    typeof pe.type
                                                            );
                                                        })(Be) &&
                                                            Ne.handleError(
                                                                new Error(
                                                                    `Effect ${(function Fe({
                                                                        propertyName:
                                                                            pe,
                                                                        sourceInstance:
                                                                            Ne,
                                                                        sourceName:
                                                                            Be,
                                                                    }) {
                                                                        const Qe =
                                                                            'function' ==
                                                                            typeof Ne[
                                                                                pe
                                                                            ];
                                                                        return `"${Be}.${String(
                                                                            pe
                                                                        )}${
                                                                            Qe
                                                                                ? '()'
                                                                                : ''
                                                                        }"`;
                                                                    })(
                                                                        pe
                                                                    )} dispatched an invalid action: ${(function Ye(
                                                                        pe
                                                                    ) {
                                                                        try {
                                                                            return JSON.stringify(
                                                                                pe
                                                                            );
                                                                        } catch (Ne) {
                                                                            return pe;
                                                                        }
                                                                    })(Be)}`
                                                                )
                                                            );
                                                    }
                                                })(ct, this.errorHandler),
                                                ct.notification
                                            )
                                        ),
                                        (0, xe.h)(
                                            (ct) =>
                                                'N' === ct.kind &&
                                                null != ct.value
                                        ),
                                        (function ie() {
                                            return (0, S.e)((pe, Ne) => {
                                                pe.subscribe(
                                                    new x.Q(Ne, (Be) =>
                                                        _e(Be, Ne)
                                                    )
                                                );
                                            });
                                        })()
                                    ),
                                    Ct = Be.pipe(
                                        (0, it.q)(1),
                                        (0, xe.h)(jt),
                                        (0, ae.U)((ct) =>
                                            ct.ngrxOnInitEffects()
                                        )
                                    );
                                return (0, w.T)(Qe, Ct);
                            })
                        );
                    }
                }
                return (
                    (pe.ɵfac = function (Be) {
                        return new (Be || pe)(ne.LFG(ne.qLn), ne.LFG(Ft));
                    }),
                    (pe.ɵprov = ne.Yz7({ token: pe, factory: pe.ɵfac })),
                    pe
                );
            })();
            function _t(pe) {
                return (function Te(pe) {
                    return xt(pe, 'ngrxOnIdentifyEffects');
                })(pe)
                    ? pe.ngrxOnIdentifyEffects()
                    : '';
            }
            let sr = (() => {
                class pe {
                    constructor(Be, Qe) {
                        (this.effectSources = Be),
                            (this.store = Qe),
                            (this.effectsSubscription = null);
                    }
                    start() {
                        this.effectsSubscription ||
                            (this.effectsSubscription = this.effectSources
                                .toActions()
                                .subscribe(this.store));
                    }
                    ngOnDestroy() {
                        this.effectsSubscription &&
                            (this.effectsSubscription.unsubscribe(),
                            (this.effectsSubscription = null));
                    }
                }
                return (
                    (pe.ɵfac = function (Be) {
                        return new (Be || pe)(ne.LFG(yt), ne.LFG(l.yh));
                    }),
                    (pe.ɵprov = ne.Yz7({ token: pe, factory: pe.ɵfac })),
                    pe
                );
            })();
            const nn = '@ngrx/effects/init';
            (0, l.PH)(nn);
            let Jn = (() => {
                    class pe {
                        constructor(Be, Qe, Ct, ct, en, on, Sn) {
                            (this.sources = Be),
                                Qe.start(),
                                ct.forEach((bt) => Be.addEffects(bt)),
                                Ct.dispatch({ type: nn });
                        }
                        addEffects(Be) {
                            this.sources.addEffects(Be);
                        }
                    }
                    return (
                        (pe.ɵfac = function (Be) {
                            return new (Be || pe)(
                                ne.LFG(yt),
                                ne.LFG(sr),
                                ne.LFG(l.yh),
                                ne.LFG(kt),
                                ne.LFG(l.cr, 8),
                                ne.LFG(l.CK, 8),
                                ne.LFG(nr, 8)
                            );
                        }),
                        (pe.ɵmod = ne.oAB({ type: pe })),
                        (pe.ɵinj = ne.cJS({})),
                        pe
                    );
                })(),
                Dr = (() => {
                    class pe {
                        constructor(Be, Qe, Ct, ct) {
                            Qe.forEach((en) =>
                                en.forEach((on) => Be.addEffects(on))
                            );
                        }
                    }
                    return (
                        (pe.ɵfac = function (Be) {
                            return new (Be || pe)(
                                ne.LFG(Jn),
                                ne.LFG(fn),
                                ne.LFG(l.cr, 8),
                                ne.LFG(l.CK, 8)
                            );
                        }),
                        (pe.ɵmod = ne.oAB({ type: pe })),
                        (pe.ɵinj = ne.cJS({})),
                        pe
                    );
                })(),
                te = (() => {
                    class pe {
                        static forFeature(Be = []) {
                            return {
                                ngModule: Dr,
                                providers: [
                                    Be,
                                    { provide: ht, multi: !0, useValue: Be },
                                    { provide: At, multi: !0, useValue: [] },
                                    {
                                        provide: fn,
                                        multi: !0,
                                        useFactory: ce,
                                        deps: [ne.zs3, ht, At],
                                    },
                                ],
                            };
                        }
                        static forRoot(Be = []) {
                            return {
                                ngModule: Jn,
                                providers: [
                                    { provide: Ft, useValue: dn },
                                    sr,
                                    yt,
                                    Kt,
                                    Be,
                                    { provide: vt, useValue: [Be] },
                                    {
                                        provide: nr,
                                        useFactory: je,
                                        deps: [
                                            [sr, new ne.FiY(), new ne.tp0()],
                                            [vt, new ne.PiD()],
                                        ],
                                    },
                                    { provide: At, multi: !0, useValue: [] },
                                    {
                                        provide: kt,
                                        useFactory: ce,
                                        deps: [ne.zs3, vt, At],
                                    },
                                ],
                            };
                        }
                    }
                    return (
                        (pe.ɵfac = function (Be) {
                            return new (Be || pe)();
                        }),
                        (pe.ɵmod = ne.oAB({ type: pe })),
                        (pe.ɵinj = ne.cJS({})),
                        pe
                    );
                })();
            function ce(pe, Ne, Be) {
                const Qe = [];
                for (const Ct of Ne) Qe.push(...Ct);
                for (const Ct of Be) Qe.push(...Ct);
                return (function oe(pe, Ne) {
                    return Ne.map((Be) => pe.get(Be));
                })(pe, Qe);
            }
            function je(pe, Ne) {
                if ((1 !== Ne.length || 0 !== Ne[0].length) && pe)
                    throw new TypeError(
                        'EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        9565: (
            __unused_webpack___webpack_module__,
            __webpack_exports__,
            __webpack_require__
        ) => {
            'use strict';
            __webpack_require__.d(__webpack_exports__, {
                FT: () => StoreDevtoolsModule,
            });
            var _angular_core__WEBPACK_IMPORTED_MODULE_0__ =
                    __webpack_require__(5e3),
                _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ =
                    __webpack_require__(2323),
                rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(515),
                rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8306),
                rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9646),
                rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(6451),
                rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(233),
                rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(4707),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ =
                    __webpack_require__(3099),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ =
                    __webpack_require__(9300),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ =
                    __webpack_require__(4004),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ =
                    __webpack_require__(4351),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ =
                    __webpack_require__(1749),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ =
                    __webpack_require__(8372),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ =
                    __webpack_require__(262),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ =
                    __webpack_require__(5698),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ =
                    __webpack_require__(2722),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ =
                    __webpack_require__(3900),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ =
                    __webpack_require__(5684),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ =
                    __webpack_require__(5363),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ =
                    __webpack_require__(1365),
                rxjs_operators__WEBPACK_IMPORTED_MODULE_21__ =
                    __webpack_require__(5026);
            class StoreDevtoolsConfig {
                constructor() {
                    this.maxAge = !1;
                }
            }
            const STORE_DEVTOOLS_CONFIG =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Options'
                    ),
                INITIAL_OPTIONS =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Initial Config'
                    );
            function noMonitor() {
                return null;
            }
            const DEFAULT_NAME = 'NgRx Store DevTools';
            function createConfig(de) {
                const z = {
                        maxAge: !1,
                        monitor: noMonitor,
                        actionSanitizer: void 0,
                        stateSanitizer: void 0,
                        name: DEFAULT_NAME,
                        serialize: !1,
                        logOnly: !1,
                        autoPause: !1,
                        features: {
                            pause: !0,
                            lock: !0,
                            persist: !0,
                            export: !0,
                            import: 'custom',
                            jump: !0,
                            skip: !0,
                            reorder: !0,
                            dispatch: !0,
                            test: !0,
                        },
                    },
                    _ = 'function' == typeof de ? de() : de,
                    G = Object.assign(
                        {},
                        z,
                        {
                            features:
                                _.features ||
                                (!!_.logOnly && {
                                    pause: !0,
                                    export: !0,
                                    test: !0,
                                }) ||
                                z.features,
                        },
                        _
                    );
                if (G.maxAge && G.maxAge < 2)
                    throw new Error(
                        `Devtools 'maxAge' cannot be less than 2, got ${G.maxAge}`
                    );
                return G;
            }
            const PERFORM_ACTION = 'PERFORM_ACTION',
                REFRESH = 'REFRESH',
                RESET = 'RESET',
                ROLLBACK = 'ROLLBACK',
                COMMIT = 'COMMIT',
                SWEEP = 'SWEEP',
                TOGGLE_ACTION = 'TOGGLE_ACTION',
                SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE',
                JUMP_TO_STATE = 'JUMP_TO_STATE',
                JUMP_TO_ACTION = 'JUMP_TO_ACTION',
                IMPORT_STATE = 'IMPORT_STATE',
                LOCK_CHANGES = 'LOCK_CHANGES',
                PAUSE_RECORDING = 'PAUSE_RECORDING';
            class PerformAction {
                constructor(z, _) {
                    if (
                        ((this.action = z),
                        (this.timestamp = _),
                        (this.type = PERFORM_ACTION),
                        void 0 === z.type)
                    )
                        throw new Error(
                            'Actions may not have an undefined "type" property. Have you misspelled a constant?'
                        );
                }
            }
            class Refresh {
                constructor() {
                    this.type = REFRESH;
                }
            }
            class Reset {
                constructor(z) {
                    (this.timestamp = z), (this.type = RESET);
                }
            }
            class Rollback {
                constructor(z) {
                    (this.timestamp = z), (this.type = ROLLBACK);
                }
            }
            class Commit {
                constructor(z) {
                    (this.timestamp = z), (this.type = COMMIT);
                }
            }
            class Sweep {
                constructor() {
                    this.type = SWEEP;
                }
            }
            class ToggleAction {
                constructor(z) {
                    (this.id = z), (this.type = TOGGLE_ACTION);
                }
            }
            class SetActionsActive {
                constructor(z, _, l = !0) {
                    (this.start = z),
                        (this.end = _),
                        (this.active = l),
                        (this.type = SET_ACTIONS_ACTIVE);
                }
            }
            class JumpToState {
                constructor(z) {
                    (this.index = z), (this.type = JUMP_TO_STATE);
                }
            }
            class JumpToAction {
                constructor(z) {
                    (this.actionId = z), (this.type = JUMP_TO_ACTION);
                }
            }
            class ImportState {
                constructor(z) {
                    (this.nextLiftedState = z), (this.type = IMPORT_STATE);
                }
            }
            class LockChanges {
                constructor(z) {
                    (this.status = z), (this.type = LOCK_CHANGES);
                }
            }
            class PauseRecording {
                constructor(z) {
                    (this.status = z), (this.type = PAUSE_RECORDING);
                }
            }
            function difference(de, z) {
                return de.filter((_) => z.indexOf(_) < 0);
            }
            function unliftState(de) {
                const { computedStates: z, currentStateIndex: _ } = de;
                if (_ >= z.length) {
                    const { state: w } = z[z.length - 1];
                    return w;
                }
                const { state: l } = z[_];
                return l;
            }
            function unliftAction(de) {
                return de.actionsById[de.nextActionId - 1];
            }
            function liftAction(de) {
                return new PerformAction(de, +Date.now());
            }
            function sanitizeActions(de, z) {
                return Object.keys(z).reduce((_, l) => {
                    const w = Number(l);
                    return (_[w] = sanitizeAction(de, z[w], w)), _;
                }, {});
            }
            function sanitizeAction(de, z, _) {
                return Object.assign(Object.assign({}, z), {
                    action: de(z.action, _),
                });
            }
            function sanitizeStates(de, z) {
                return z.map((_, l) => ({
                    state: sanitizeState(de, _.state, l),
                    error: _.error,
                }));
            }
            function sanitizeState(de, z, _) {
                return de(z, _);
            }
            function shouldFilterActions(de) {
                return (
                    de.predicate || de.actionsSafelist || de.actionsBlocklist
                );
            }
            function filterLiftedState(de, z, _, l) {
                const w = [],
                    G = {},
                    j = [];
                return (
                    de.stagedActionIds.forEach((S, x) => {
                        const k = de.actionsById[S];
                        !k ||
                            (x &&
                                isActionFiltered(
                                    de.computedStates[x],
                                    k,
                                    z,
                                    _,
                                    l
                                )) ||
                            ((G[S] = k),
                            w.push(S),
                            j.push(de.computedStates[x]));
                    }),
                    Object.assign(Object.assign({}, de), {
                        stagedActionIds: w,
                        actionsById: G,
                        computedStates: j,
                    })
                );
            }
            function isActionFiltered(de, z, _, l, w) {
                const G = _ && !_(de, z.action),
                    j =
                        l &&
                        !z.action.type.match(
                            l.map((x) => escapeRegExp(x)).join('|')
                        ),
                    S =
                        w &&
                        z.action.type.match(
                            w.map((x) => escapeRegExp(x)).join('|')
                        );
                return G || j || S;
            }
            function escapeRegExp(de) {
                return de.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
            }
            const INIT_ACTION = {
                    type: _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg,
                },
                RECOMPUTE = '@ngrx/store-devtools/recompute',
                RECOMPUTE_ACTION = { type: RECOMPUTE };
            function computeNextEntry(de, z, _, l, w) {
                if (l)
                    return {
                        state: _,
                        error: 'Interrupted by an error up the chain',
                    };
                let j,
                    G = _;
                try {
                    G = de(_, z);
                } catch (S) {
                    (j = S.toString()), w.handleError(S);
                }
                return { state: G, error: j };
            }
            function recomputeStates(de, z, _, l, w, G, j, S, x) {
                if (z >= de.length && de.length === G.length) return de;
                const k = de.slice(0, z),
                    W = G.length - (x ? 1 : 0);
                for (let B = z; B < W; B++) {
                    const V = G[B],
                        U = w[V].action,
                        Q = k[B - 1],
                        De = Q ? Q.state : l,
                        Ee = Q ? Q.error : void 0,
                        Se =
                            j.indexOf(V) > -1
                                ? Q
                                : computeNextEntry(_, U, De, Ee, S);
                    k.push(Se);
                }
                return x && k.push(de[de.length - 1]), k;
            }
            function liftInitialState(de, z) {
                return {
                    monitorState: z(void 0, {}),
                    nextActionId: 1,
                    actionsById: { 0: liftAction(INIT_ACTION) },
                    stagedActionIds: [0],
                    skippedActionIds: [],
                    committedState: de,
                    currentStateIndex: 0,
                    computedStates: [],
                    isLocked: !1,
                    isPaused: !1,
                };
            }
            function liftReducerWith(de, z, _, l, w = {}) {
                return (G) => (j, S) => {
                    let {
                        monitorState: x,
                        actionsById: k,
                        nextActionId: W,
                        stagedActionIds: B,
                        skippedActionIds: V,
                        committedState: U,
                        currentStateIndex: Q,
                        computedStates: De,
                        isLocked: Ee,
                        isPaused: _e,
                    } = j || z;
                    function Se(Ce) {
                        let ae = Ce,
                            Y = B.slice(1, ae + 1);
                        for (let ie = 0; ie < Y.length; ie++) {
                            if (De[ie + 1].error) {
                                (ae = ie), (Y = B.slice(1, ae + 1));
                                break;
                            }
                            delete k[Y[ie]];
                        }
                        (V = V.filter((ie) => -1 === Y.indexOf(ie))),
                            (B = [0, ...B.slice(ae + 1)]),
                            (U = De[ae].state),
                            (De = De.slice(ae)),
                            (Q = Q > ae ? Q - ae : 0);
                    }
                    function Z() {
                        (k = { 0: liftAction(INIT_ACTION) }),
                            (W = 1),
                            (B = [0]),
                            (V = []),
                            (U = De[Q].state),
                            (Q = 0),
                            (De = []);
                    }
                    j || (k = Object.create(k));
                    let X = 0;
                    switch (S.type) {
                        case LOCK_CHANGES:
                            (Ee = S.status), (X = 1 / 0);
                            break;
                        case PAUSE_RECORDING:
                            (_e = S.status),
                                _e
                                    ? ((B = [...B, W]),
                                      (k[W] = new PerformAction(
                                          { type: '@ngrx/devtools/pause' },
                                          +Date.now()
                                      )),
                                      W++,
                                      (X = B.length - 1),
                                      (De = De.concat(De[De.length - 1])),
                                      Q === B.length - 2 && Q++,
                                      (X = 1 / 0))
                                    : Z();
                            break;
                        case RESET:
                            (k = { 0: liftAction(INIT_ACTION) }),
                                (W = 1),
                                (B = [0]),
                                (V = []),
                                (U = de),
                                (Q = 0),
                                (De = []);
                            break;
                        case COMMIT:
                            Z();
                            break;
                        case ROLLBACK:
                            (k = { 0: liftAction(INIT_ACTION) }),
                                (W = 1),
                                (B = [0]),
                                (V = []),
                                (Q = 0),
                                (De = []);
                            break;
                        case TOGGLE_ACTION: {
                            const { id: Ce } = S;
                            (V =
                                -1 === V.indexOf(Ce)
                                    ? [Ce, ...V]
                                    : V.filter((Y) => Y !== Ce)),
                                (X = B.indexOf(Ce));
                            break;
                        }
                        case SET_ACTIONS_ACTIVE: {
                            const { start: Ce, end: ae, active: Y } = S,
                                ie = [];
                            for (let se = Ce; se < ae; se++) ie.push(se);
                            (V = Y ? difference(V, ie) : [...V, ...ie]),
                                (X = B.indexOf(Ce));
                            break;
                        }
                        case JUMP_TO_STATE:
                            (Q = S.index), (X = 1 / 0);
                            break;
                        case JUMP_TO_ACTION: {
                            const Ce = B.indexOf(S.actionId);
                            -1 !== Ce && (Q = Ce), (X = 1 / 0);
                            break;
                        }
                        case SWEEP:
                            (B = difference(B, V)),
                                (V = []),
                                (Q = Math.min(Q, B.length - 1));
                            break;
                        case PERFORM_ACTION: {
                            if (Ee) return j || z;
                            if (
                                _e ||
                                (j &&
                                    isActionFiltered(
                                        j.computedStates[Q],
                                        S,
                                        w.predicate,
                                        w.actionsSafelist,
                                        w.actionsBlocklist
                                    ))
                            ) {
                                const ae = De[De.length - 1];
                                (De = [
                                    ...De.slice(0, -1),
                                    computeNextEntry(
                                        G,
                                        S.action,
                                        ae.state,
                                        ae.error,
                                        _
                                    ),
                                ]),
                                    (X = 1 / 0);
                                break;
                            }
                            w.maxAge && B.length === w.maxAge && Se(1),
                                Q === B.length - 1 && Q++;
                            const Ce = W++;
                            (k[Ce] = S), (B = [...B, Ce]), (X = B.length - 1);
                            break;
                        }
                        case IMPORT_STATE:
                            ({
                                monitorState: x,
                                actionsById: k,
                                nextActionId: W,
                                stagedActionIds: B,
                                skippedActionIds: V,
                                committedState: U,
                                currentStateIndex: Q,
                                computedStates: De,
                                isLocked: Ee,
                                isPaused: _e,
                            } = S.nextLiftedState);
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.qg:
                            (X = 0),
                                w.maxAge &&
                                    B.length > w.maxAge &&
                                    ((De = recomputeStates(
                                        De,
                                        X,
                                        G,
                                        U,
                                        k,
                                        B,
                                        V,
                                        _,
                                        _e
                                    )),
                                    Se(B.length - w.maxAge),
                                    (X = 1 / 0));
                            break;
                        case _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb:
                            if (De.filter((ae) => ae.error).length > 0)
                                (X = 0),
                                    w.maxAge &&
                                        B.length > w.maxAge &&
                                        ((De = recomputeStates(
                                            De,
                                            X,
                                            G,
                                            U,
                                            k,
                                            B,
                                            V,
                                            _,
                                            _e
                                        )),
                                        Se(B.length - w.maxAge),
                                        (X = 1 / 0));
                            else {
                                if (!_e && !Ee) {
                                    Q === B.length - 1 && Q++;
                                    const ae = W++;
                                    (k[ae] = new PerformAction(S, +Date.now())),
                                        (B = [...B, ae]),
                                        (X = B.length - 1),
                                        (De = recomputeStates(
                                            De,
                                            X,
                                            G,
                                            U,
                                            k,
                                            B,
                                            V,
                                            _,
                                            _e
                                        ));
                                }
                                (De = De.map((ae) =>
                                    Object.assign(Object.assign({}, ae), {
                                        state: G(ae.state, RECOMPUTE_ACTION),
                                    })
                                )),
                                    (Q = B.length - 1),
                                    w.maxAge &&
                                        B.length > w.maxAge &&
                                        Se(B.length - w.maxAge),
                                    (X = 1 / 0);
                            }
                            break;
                        default:
                            X = 1 / 0;
                    }
                    return (
                        (De = recomputeStates(De, X, G, U, k, B, V, _, _e)),
                        (x = l(x, S)),
                        {
                            monitorState: x,
                            actionsById: k,
                            nextActionId: W,
                            stagedActionIds: B,
                            skippedActionIds: V,
                            committedState: U,
                            currentStateIndex: Q,
                            computedStates: De,
                            isLocked: Ee,
                            isPaused: _e,
                        }
                    );
                };
            }
            let DevtoolsDispatcher = (() => {
                class de extends _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO {}
                return (
                    (de.ɵfac = (function () {
                        let z;
                        return function (l) {
                            return (
                                z ||
                                (z =
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.n5z(
                                        de
                                    ))
                            )(l || de);
                        };
                    })()),
                    (de.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                        token: de,
                        factory: de.ɵfac,
                    })),
                    de
                );
            })();
            const ExtensionActionTypes = {
                    START: 'START',
                    DISPATCH: 'DISPATCH',
                    STOP: 'STOP',
                    ACTION: 'ACTION',
                },
                REDUX_DEVTOOLS_EXTENSION =
                    new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                        '@ngrx/store-devtools Redux Devtools Extension'
                    );
            let DevtoolsExtension = (() => {
                    class DevtoolsExtension {
                        constructor(de, z, _) {
                            (this.config = z),
                                (this.dispatcher = _),
                                (this.devtoolsExtension = de),
                                this.createActionStreams();
                        }
                        notify(de, z) {
                            if (this.devtoolsExtension)
                                if (de.type === PERFORM_ACTION) {
                                    if (z.isLocked || z.isPaused) return;
                                    const _ = unliftState(z);
                                    if (
                                        shouldFilterActions(this.config) &&
                                        isActionFiltered(
                                            _,
                                            de,
                                            this.config.predicate,
                                            this.config.actionsSafelist,
                                            this.config.actionsBlocklist
                                        )
                                    )
                                        return;
                                    const l = this.config.stateSanitizer
                                            ? sanitizeState(
                                                  this.config.stateSanitizer,
                                                  _,
                                                  z.currentStateIndex
                                              )
                                            : _,
                                        w = this.config.actionSanitizer
                                            ? sanitizeAction(
                                                  this.config.actionSanitizer,
                                                  de,
                                                  z.nextActionId
                                              )
                                            : de;
                                    this.sendToReduxDevtools(() =>
                                        this.extensionConnection.send(w, l)
                                    );
                                } else {
                                    const _ = Object.assign(
                                        Object.assign({}, z),
                                        {
                                            stagedActionIds: z.stagedActionIds,
                                            actionsById: this.config
                                                .actionSanitizer
                                                ? sanitizeActions(
                                                      this.config
                                                          .actionSanitizer,
                                                      z.actionsById
                                                  )
                                                : z.actionsById,
                                            computedStates: this.config
                                                .stateSanitizer
                                                ? sanitizeStates(
                                                      this.config
                                                          .stateSanitizer,
                                                      z.computedStates
                                                  )
                                                : z.computedStates,
                                        }
                                    );
                                    this.sendToReduxDevtools(() =>
                                        this.devtoolsExtension.send(
                                            null,
                                            _,
                                            this.getExtensionConfig(this.config)
                                        )
                                    );
                                }
                        }
                        createChangesObservable() {
                            return this.devtoolsExtension
                                ? new rxjs__WEBPACK_IMPORTED_MODULE_3__.y(
                                      (de) => {
                                          const z =
                                              this.devtoolsExtension.connect(
                                                  this.getExtensionConfig(
                                                      this.config
                                                  )
                                              );
                                          return (
                                              (this.extensionConnection = z),
                                              z.init(),
                                              z.subscribe((_) => de.next(_)),
                                              z.unsubscribe
                                          );
                                      }
                                  )
                                : rxjs__WEBPACK_IMPORTED_MODULE_2__.E;
                        }
                        createActionStreams() {
                            const de = this.createChangesObservable().pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.B)()
                                ),
                                z = de.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (S) =>
                                            S.type ===
                                            ExtensionActionTypes.START
                                    )
                                ),
                                _ = de.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (S) =>
                                            S.type === ExtensionActionTypes.STOP
                                    )
                                ),
                                l = de.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                        (S) =>
                                            S.type ===
                                            ExtensionActionTypes.DISPATCH
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        (S) => this.unwrapAction(S.payload)
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.b)(
                                        (S) =>
                                            S.type === IMPORT_STATE
                                                ? this.dispatcher.pipe(
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                                          (x) =>
                                                              x.type ===
                                                              _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.wb
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.V)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.b)(
                                                          1e3
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                                          () => S
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.K)(
                                                          () =>
                                                              (0,
                                                              rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                                  S
                                                              )
                                                      ),
                                                      (0,
                                                      rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.q)(
                                                          1
                                                      )
                                                  )
                                                : (0,
                                                  rxjs__WEBPACK_IMPORTED_MODULE_11__.of)(
                                                      S
                                                  )
                                    )
                                ),
                                G = de
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(
                                            (S) =>
                                                S.type ===
                                                ExtensionActionTypes.ACTION
                                        ),
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            (S) => this.unwrapAction(S.payload)
                                        )
                                    )
                                    .pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                            _
                                        )
                                    ),
                                j = l.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                        _
                                    )
                                );
                            (this.start$ = z.pipe(
                                (0,
                                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.R)(
                                    _
                                )
                            )),
                                (this.actions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => G
                                    )
                                )),
                                (this.liftedActions$ = this.start$.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.w)(
                                        () => j
                                    )
                                ));
                        }
                        unwrapAction(action) {
                            return 'string' == typeof action
                                ? eval(`(${action})`)
                                : action;
                        }
                        getExtensionConfig(de) {
                            var z;
                            const _ = {
                                name: de.name,
                                features: de.features,
                                serialize: de.serialize,
                                autoPause:
                                    null !== (z = de.autoPause) &&
                                    void 0 !== z &&
                                    z,
                            };
                            return (
                                !1 !== de.maxAge && (_.maxAge = de.maxAge), _
                            );
                        }
                        sendToReduxDevtools(de) {
                            try {
                                de();
                            } catch (z) {
                                console.warn(
                                    '@ngrx/store-devtools: something went wrong inside the redux devtools',
                                    z
                                );
                            }
                        }
                    }
                    return (
                        (DevtoolsExtension.ɵfac = function de(z) {
                            return new (z || DevtoolsExtension)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    REDUX_DEVTOOLS_EXTENSION
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                )
                            );
                        }),
                        (DevtoolsExtension.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: DevtoolsExtension,
                                factory: DevtoolsExtension.ɵfac,
                            })),
                        DevtoolsExtension
                    );
                })(),
                StoreDevtools = (() => {
                    class de {
                        constructor(_, l, w, G, j, S, x, k) {
                            const W = liftInitialState(x, k.monitor),
                                B = liftReducerWith(x, W, S, k.monitor, k),
                                V = (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                    (0, rxjs__WEBPACK_IMPORTED_MODULE_15__.T)(
                                        l
                                            .asObservable()
                                            .pipe(
                                                (0,
                                                rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.T)(
                                                    1
                                                )
                                            ),
                                        G.actions$
                                    ).pipe(
                                        (0,
                                        rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                            liftAction
                                        )
                                    ),
                                    _,
                                    G.liftedActions$
                                ).pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.Q)(
                                        rxjs__WEBPACK_IMPORTED_MODULE_18__.N
                                    )
                                ),
                                U = w.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        B
                                    )
                                ),
                                Q = new rxjs__WEBPACK_IMPORTED_MODULE_19__.t(1),
                                De = V.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_20__.M)(
                                        U
                                    ),
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_21__.R)(
                                        ({ state: Z }, [X, Ce]) => {
                                            let ae = Ce(Z, X);
                                            return (
                                                X.type !== PERFORM_ACTION &&
                                                    shouldFilterActions(k) &&
                                                    (ae = filterLiftedState(
                                                        ae,
                                                        k.predicate,
                                                        k.actionsSafelist,
                                                        k.actionsBlocklist
                                                    )),
                                                G.notify(X, ae),
                                                { state: ae, action: X }
                                            );
                                        },
                                        { state: W, action: null }
                                    )
                                ).subscribe(({ state: Z, action: X }) => {
                                    Q.next(Z),
                                        X.type === PERFORM_ACTION &&
                                            j.next(X.action);
                                }),
                                Ee = G.start$.subscribe(() => {
                                    this.refresh();
                                }),
                                _e = Q.asObservable(),
                                Se = _e.pipe(
                                    (0,
                                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(
                                        unliftState
                                    )
                                );
                            (this.extensionStartSubscription = Ee),
                                (this.stateSubscription = De),
                                (this.dispatcher = _),
                                (this.liftedState = _e),
                                (this.state = Se);
                        }
                        dispatch(_) {
                            this.dispatcher.next(_);
                        }
                        next(_) {
                            this.dispatcher.next(_);
                        }
                        error(_) {}
                        complete() {}
                        performAction(_) {
                            this.dispatch(new PerformAction(_, +Date.now()));
                        }
                        refresh() {
                            this.dispatch(new Refresh());
                        }
                        reset() {
                            this.dispatch(new Reset(+Date.now()));
                        }
                        rollback() {
                            this.dispatch(new Rollback(+Date.now()));
                        }
                        commit() {
                            this.dispatch(new Commit(+Date.now()));
                        }
                        sweep() {
                            this.dispatch(new Sweep());
                        }
                        toggleAction(_) {
                            this.dispatch(new ToggleAction(_));
                        }
                        jumpToAction(_) {
                            this.dispatch(new JumpToAction(_));
                        }
                        jumpToState(_) {
                            this.dispatch(new JumpToState(_));
                        }
                        importState(_) {
                            this.dispatch(new ImportState(_));
                        }
                        lockChanges(_) {
                            this.dispatch(new LockChanges(_));
                        }
                        pauseRecording(_) {
                            this.dispatch(new PauseRecording(_));
                        }
                    }
                    return (
                        (de.ɵfac = function (_) {
                            return new (_ || de)(
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsDispatcher
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.UO
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.n$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    DevtoolsExtension
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y$
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _angular_core__WEBPACK_IMPORTED_MODULE_0__.qLn
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Y6
                                ),
                                _angular_core__WEBPACK_IMPORTED_MODULE_0__.LFG(
                                    STORE_DEVTOOLS_CONFIG
                                )
                            );
                        }),
                        (de.ɵprov =
                            _angular_core__WEBPACK_IMPORTED_MODULE_0__.Yz7({
                                token: de,
                                factory: de.ɵfac,
                            })),
                        de
                    );
                })();
            const IS_EXTENSION_OR_MONITOR_PRESENT =
                new _angular_core__WEBPACK_IMPORTED_MODULE_0__.OlP(
                    '@ngrx/store-devtools Is Devtools Extension or Monitor Present'
                );
            function createIsExtensionOrMonitorPresent(de, z) {
                return Boolean(de) || z.monitor !== noMonitor;
            }
            function createReduxDevtoolsExtension() {
                const de = '__REDUX_DEVTOOLS_EXTENSION__';
                return 'object' == typeof window && void 0 !== window[de]
                    ? window[de]
                    : null;
            }
            function createStateObservable(de) {
                return de.state;
            }
            let StoreDevtoolsModule = (() => {
                class de {
                    static instrument(_ = {}) {
                        return {
                            ngModule: de,
                            providers: [
                                DevtoolsExtension,
                                DevtoolsDispatcher,
                                StoreDevtools,
                                { provide: INITIAL_OPTIONS, useValue: _ },
                                {
                                    provide: IS_EXTENSION_OR_MONITOR_PRESENT,
                                    deps: [
                                        REDUX_DEVTOOLS_EXTENSION,
                                        STORE_DEVTOOLS_CONFIG,
                                    ],
                                    useFactory:
                                        createIsExtensionOrMonitorPresent,
                                },
                                {
                                    provide: REDUX_DEVTOOLS_EXTENSION,
                                    useFactory: createReduxDevtoolsExtension,
                                },
                                {
                                    provide: STORE_DEVTOOLS_CONFIG,
                                    deps: [INITIAL_OPTIONS],
                                    useFactory: createConfig,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.FR,
                                    deps: [StoreDevtools],
                                    useFactory: createStateObservable,
                                },
                                {
                                    provide:
                                        _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.mK,
                                    useExisting: DevtoolsDispatcher,
                                },
                            ],
                        };
                    }
                }
                return (
                    (de.ɵfac = function (_) {
                        return new (_ || de)();
                    }),
                    (de.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__.oAB({
                        type: de,
                    })),
                    (de.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__.cJS(
                        {}
                    )),
                    de
                );
            })();
        },
        2323: (de, z, _) => {
            'use strict';
            _.d(z, {
                UO: () => se,
                qg: () => ie,
                Y6: () => ne,
                mK: () => ot,
                n$: () => Te,
                Y$: () => xt,
                FR: () => At,
                yh: () => fn,
                CK: () => mn,
                Aw: () => Cr,
                cr: () => ar,
                wb: () => We,
                qC: () => Fe,
                PH: () => X,
                Ky: () => Ce,
            });
            var l = _(5e3),
                w = _(1135),
                G = _(8306),
                j = _(7579),
                S = _(233),
                x = _(4004),
                W = _(4671),
                B = _(4482),
                V = _(5403);
            function Q(ee, Le) {
                return ee === Le;
            }
            var De = _(5363),
                Ee = _(1365),
                _e = _(5026);
            const Se = {};
            function X(ee, Le) {
                if (((Se[ee] = (Se[ee] || 0) + 1), 'function' == typeof Le))
                    return Y(ee, (...Re) =>
                        Object.assign(Object.assign({}, Le(...Re)), {
                            type: ee,
                        })
                    );
                switch (Le ? Le._as : 'empty') {
                    case 'empty':
                        return Y(ee, () => ({ type: ee }));
                    case 'props':
                        return Y(ee, (Re) =>
                            Object.assign(Object.assign({}, Re), { type: ee })
                        );
                    default:
                        throw new Error('Unexpected config.');
                }
            }
            function Ce() {
                return { _as: 'props', _p: void 0 };
            }
            function Y(ee, Le) {
                return Object.defineProperty(Le, 'type', {
                    value: ee,
                    writable: !1,
                });
            }
            const ie = '@ngrx/store/init';
            let se = (() => {
                class ee extends w.X {
                    constructor() {
                        super({ type: ie });
                    }
                    next(ge) {
                        if ('function' == typeof ge)
                            throw new TypeError(
                                "\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction()."
                            );
                        if (void 0 === ge)
                            throw new TypeError('Actions must be objects');
                        if (void 0 === ge.type)
                            throw new TypeError(
                                'Actions must have a type property'
                            );
                        super.next(ge);
                    }
                    complete() {}
                    ngOnDestroy() {
                        super.complete();
                    }
                }
                return (
                    (ee.ɵfac = function (ge) {
                        return new (ge || ee)();
                    }),
                    (ee.ɵprov = l.Yz7({ token: ee, factory: ee.ɵfac })),
                    ee
                );
            })();
            const xe = [se],
                $e = new l.OlP('@ngrx/store Internal Root Guard'),
                it = new l.OlP('@ngrx/store Internal Initial State'),
                ne = new l.OlP('@ngrx/store Initial State'),
                Pe = new l.OlP('@ngrx/store Reducer Factory'),
                le = new l.OlP('@ngrx/store Internal Reducer Factory Provider'),
                Me = new l.OlP('@ngrx/store Initial Reducers'),
                be = new l.OlP('@ngrx/store Internal Initial Reducers'),
                ye = new l.OlP('@ngrx/store Store Features'),
                ut = new l.OlP('@ngrx/store Internal Store Reducers'),
                Pt = new l.OlP('@ngrx/store Internal Feature Reducers'),
                ln = new l.OlP('@ngrx/store Internal Feature Configs'),
                nt = new l.OlP('@ngrx/store Internal Store Features'),
                st = new l.OlP('@ngrx/store Internal Feature Reducers Token'),
                un = new l.OlP('@ngrx/store Feature Reducers'),
                Bt = new l.OlP('@ngrx/store User Provided Meta Reducers'),
                Gt = new l.OlP('@ngrx/store Meta Reducers'),
                mt = new l.OlP('@ngrx/store Internal Resolved Meta Reducers'),
                wn = new l.OlP('@ngrx/store User Runtime Checks Config'),
                dn = new l.OlP(
                    '@ngrx/store Internal User Runtime Checks Config'
                ),
                Kt = new l.OlP('@ngrx/store Internal Runtime Checks'),
                Nn = new l.OlP('@ngrx/store Check if Action types are unique');
            function qt(ee, Le = {}) {
                const ge = Object.keys(ee),
                    Re = {};
                for (let Je = 0; Je < ge.length; Je++) {
                    const Nt = ge[Je];
                    'function' == typeof ee[Nt] && (Re[Nt] = ee[Nt]);
                }
                const Xe = Object.keys(Re);
                return function (Nt, Mn) {
                    Nt = void 0 === Nt ? Le : Nt;
                    let hn = !1;
                    const kn = {};
                    for (let Xt = 0; Xt < Xe.length; Xt++) {
                        const Bn = Xe[Xt],
                            Ur = Nt[Bn],
                            mr = (0, Re[Bn])(Ur, Mn);
                        (kn[Bn] = mr), (hn = hn || mr !== Ur);
                    }
                    return hn ? kn : Nt;
                };
            }
            function Fe(...ee) {
                return function (Le) {
                    if (0 === ee.length) return Le;
                    const ge = ee[ee.length - 1];
                    return ee
                        .slice(0, -1)
                        .reduceRight((Xe, Je) => Je(Xe), ge(Le));
                };
            }
            function Ye(ee, Le) {
                return (
                    Array.isArray(Le) &&
                        Le.length > 0 &&
                        (ee = Fe.apply(null, [...Le, ee])),
                    (ge, Re) => {
                        const Xe = ee(ge);
                        return (Je, Nt) =>
                            Xe((Je = void 0 === Je ? Re : Je), Nt);
                    }
                );
            }
            class Te extends G.y {}
            class ot extends se {}
            const We = '@ngrx/store/update-reducers';
            let Rt = (() => {
                class ee extends w.X {
                    constructor(ge, Re, Xe, Je) {
                        super(Je(Xe, Re)),
                            (this.dispatcher = ge),
                            (this.initialState = Re),
                            (this.reducers = Xe),
                            (this.reducerFactory = Je);
                    }
                    get currentReducers() {
                        return this.reducers;
                    }
                    addFeature(ge) {
                        this.addFeatures([ge]);
                    }
                    addFeatures(ge) {
                        const Re = ge.reduce(
                            (
                                Xe,
                                {
                                    reducers: Je,
                                    reducerFactory: Nt,
                                    metaReducers: Mn,
                                    initialState: hn,
                                    key: kn,
                                }
                            ) => {
                                const Xt =
                                    'function' == typeof Je
                                        ? (function q(ee) {
                                              const Le =
                                                  Array.isArray(ee) &&
                                                  ee.length > 0
                                                      ? Fe(...ee)
                                                      : (ge) => ge;
                                              return (ge, Re) => (
                                                  (ge = Le(ge)),
                                                  (Xe, Je) =>
                                                      ge(
                                                          (Xe =
                                                              void 0 === Xe
                                                                  ? Re
                                                                  : Xe),
                                                          Je
                                                      )
                                              );
                                          })(Mn)(Je, hn)
                                        : Ye(Nt, Mn)(Je, hn);
                                return (Xe[kn] = Xt), Xe;
                            },
                            {}
                        );
                        this.addReducers(Re);
                    }
                    removeFeature(ge) {
                        this.removeFeatures([ge]);
                    }
                    removeFeatures(ge) {
                        this.removeReducers(ge.map((Re) => Re.key));
                    }
                    addReducer(ge, Re) {
                        this.addReducers({ [ge]: Re });
                    }
                    addReducers(ge) {
                        (this.reducers = Object.assign(
                            Object.assign({}, this.reducers),
                            ge
                        )),
                            this.updateReducers(Object.keys(ge));
                    }
                    removeReducer(ge) {
                        this.removeReducers([ge]);
                    }
                    removeReducers(ge) {
                        ge.forEach((Re) => {
                            this.reducers = (function Hn(ee, Le) {
                                return Object.keys(ee)
                                    .filter((ge) => ge !== Le)
                                    .reduce(
                                        (ge, Re) =>
                                            Object.assign(ge, { [Re]: ee[Re] }),
                                        {}
                                    );
                            })(this.reducers, Re);
                        }),
                            this.updateReducers(ge);
                    }
                    updateReducers(ge) {
                        this.next(
                            this.reducerFactory(
                                this.reducers,
                                this.initialState
                            )
                        ),
                            this.dispatcher.next({ type: We, features: ge });
                    }
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (ee.ɵfac = function (ge) {
                        return new (ge || ee)(
                            l.LFG(ot),
                            l.LFG(ne),
                            l.LFG(Me),
                            l.LFG(Pe)
                        );
                    }),
                    (ee.ɵprov = l.Yz7({ token: ee, factory: ee.ɵfac })),
                    ee
                );
            })();
            const jt = [
                Rt,
                { provide: Te, useExisting: Rt },
                { provide: ot, useExisting: se },
            ];
            let xt = (() => {
                class ee extends j.x {
                    ngOnDestroy() {
                        this.complete();
                    }
                }
                return (
                    (ee.ɵfac = (function () {
                        let Le;
                        return function (Re) {
                            return (Le || (Le = l.n5z(ee)))(Re || ee);
                        };
                    })()),
                    (ee.ɵprov = l.Yz7({ token: ee, factory: ee.ɵfac })),
                    ee
                );
            })();
            const nr = [xt];
            class At extends G.y {}
            let vt = (() => {
                class ee extends w.X {
                    constructor(ge, Re, Xe, Je) {
                        super(Je);
                        const kn = ge
                            .pipe((0, De.Q)(S.N))
                            .pipe((0, Ee.M)(Re))
                            .pipe((0, _e.R)(kt, { state: Je }));
                        this.stateSubscription = kn.subscribe(
                            ({ state: Xt, action: Bn }) => {
                                this.next(Xt), Xe.next(Bn);
                            }
                        );
                    }
                    ngOnDestroy() {
                        this.stateSubscription.unsubscribe(), this.complete();
                    }
                }
                return (
                    (ee.INIT = ie),
                    (ee.ɵfac = function (ge) {
                        return new (ge || ee)(
                            l.LFG(se),
                            l.LFG(Te),
                            l.LFG(xt),
                            l.LFG(ne)
                        );
                    }),
                    (ee.ɵprov = l.Yz7({ token: ee, factory: ee.ɵfac })),
                    ee
                );
            })();
            function kt(ee = { state: void 0 }, [Le, ge]) {
                const { state: Re } = ee;
                return { state: ge(Re, Le), action: Le };
            }
            const ht = [vt, { provide: At, useExisting: vt }];
            let fn = (() => {
                class ee extends G.y {
                    constructor(ge, Re, Xe) {
                        super(),
                            (this.actionsObserver = Re),
                            (this.reducerManager = Xe),
                            (this.source = ge);
                    }
                    select(ge, ...Re) {
                        return yt.call(null, ge, ...Re)(this);
                    }
                    lift(ge) {
                        const Re = new ee(
                            this,
                            this.actionsObserver,
                            this.reducerManager
                        );
                        return (Re.operator = ge), Re;
                    }
                    dispatch(ge) {
                        this.actionsObserver.next(ge);
                    }
                    next(ge) {
                        this.actionsObserver.next(ge);
                    }
                    error(ge) {
                        this.actionsObserver.error(ge);
                    }
                    complete() {
                        this.actionsObserver.complete();
                    }
                    addReducer(ge, Re) {
                        this.reducerManager.addReducer(ge, Re);
                    }
                    removeReducer(ge) {
                        this.reducerManager.removeReducer(ge);
                    }
                }
                return (
                    (ee.ɵfac = function (ge) {
                        return new (ge || ee)(l.LFG(At), l.LFG(se), l.LFG(Rt));
                    }),
                    (ee.ɵprov = l.Yz7({ token: ee, factory: ee.ɵfac })),
                    ee
                );
            })();
            const Ft = [fn];
            function yt(ee, Le, ...ge) {
                return function (Xe) {
                    let Je;
                    if ('string' == typeof ee) {
                        const Nt = [Le, ...ge].filter(Boolean);
                        Je = Xe.pipe(
                            (function k(...ee) {
                                const Le = ee.length;
                                if (0 === Le)
                                    throw new Error(
                                        'list of properties cannot be empty.'
                                    );
                                return (0, x.U)((ge) => {
                                    let Re = ge;
                                    for (let Xe = 0; Xe < Le; Xe++) {
                                        const Je =
                                            null == Re ? void 0 : Re[ee[Xe]];
                                        if (void 0 === Je) return;
                                        Re = Je;
                                    }
                                    return Re;
                                });
                            })(ee, ...Nt)
                        );
                    } else {
                        if ('function' != typeof ee)
                            throw new TypeError(
                                `Unexpected type '${typeof ee}' in select operator, expected 'string' or 'function'`
                            );
                        Je = Xe.pipe((0, x.U)((Nt) => ee(Nt, Le)));
                    }
                    return Je.pipe(
                        (function U(ee, Le = W.y) {
                            return (
                                (ee = null != ee ? ee : Q),
                                (0, B.e)((ge, Re) => {
                                    let Xe,
                                        Je = !0;
                                    ge.subscribe(
                                        new V.Q(Re, (Nt) => {
                                            const Mn = Le(Nt);
                                            (Je || !ee(Xe, Mn)) &&
                                                ((Je = !1),
                                                (Xe = Mn),
                                                Re.next(Nt));
                                        })
                                    );
                                })
                            );
                        })()
                    );
                };
            }
            const Er =
                'https://ngrx.io/guide/store/configuration/runtime-checks';
            function sr(ee) {
                return void 0 === ee;
            }
            function nn(ee) {
                return null === ee;
            }
            function qn(ee) {
                return Array.isArray(ee);
            }
            function ce(ee) {
                return 'object' == typeof ee && null !== ee;
            }
            function Ie(ee) {
                return 'function' == typeof ee;
            }
            function Gn(ee) {
                Object.freeze(ee);
                const Le = Ie(ee);
                return (
                    Object.getOwnPropertyNames(ee).forEach((ge) => {
                        if (
                            !ge.startsWith('\u0275') &&
                            (function pe(ee, Le) {
                                return Object.prototype.hasOwnProperty.call(
                                    ee,
                                    Le
                                );
                            })(ee, ge) &&
                            (!Le ||
                                ('caller' !== ge &&
                                    'callee' !== ge &&
                                    'arguments' !== ge))
                        ) {
                            const Re = ee[ge];
                            (ce(Re) || Ie(Re)) &&
                                !Object.isFrozen(Re) &&
                                Gn(Re);
                        }
                    }),
                    ee
                );
            }
            function Zn(ee, Le = []) {
                return (sr(ee) || nn(ee)) && 0 === Le.length
                    ? { path: ['root'], value: ee }
                    : Object.keys(ee).reduce((Re, Xe) => {
                          if (Re) return Re;
                          const Je = ee[Xe];
                          return (function ft(ee) {
                              return Ie(ee) && ee.hasOwnProperty('\u0275cmp');
                          })(Je)
                              ? Re
                              : !(
                                    sr(Je) ||
                                    nn(Je) ||
                                    (function te(ee) {
                                        return 'number' == typeof ee;
                                    })(Je) ||
                                    (function Dr(ee) {
                                        return 'boolean' == typeof ee;
                                    })(Je) ||
                                    (function Jn(ee) {
                                        return 'string' == typeof ee;
                                    })(Je) ||
                                    qn(Je)
                                ) &&
                                    ((function je(ee) {
                                        if (
                                            !(function oe(ee) {
                                                return ce(ee) && !qn(ee);
                                            })(ee)
                                        )
                                            return !1;
                                        const Le = Object.getPrototypeOf(ee);
                                        return (
                                            Le === Object.prototype ||
                                            null === Le
                                        );
                                    })(Je)
                                        ? Zn(Je, [...Le, Xe])
                                        : { path: [...Le, Xe], value: Je });
                      }, !1);
            }
            function Tn(ee, Le) {
                if (!1 === ee) return;
                const ge = ee.path.join('.'),
                    Re = new Error(
                        `Detected unserializable ${Le} at "${ge}". ${Er}#strict${Le}serializability`
                    );
                throw ((Re.value = ee.value), (Re.unserializablePath = ge), Re);
            }
            function Ln(ee) {
                return (0, l.X6Q)()
                    ? Object.assign(
                          {
                              strictStateSerializability: !1,
                              strictActionSerializability: !1,
                              strictStateImmutability: !0,
                              strictActionImmutability: !0,
                              strictActionWithinNgZone: !1,
                              strictActionTypeUniqueness: !1,
                          },
                          ee
                      )
                    : {
                          strictStateSerializability: !1,
                          strictActionSerializability: !1,
                          strictStateImmutability: !1,
                          strictActionImmutability: !1,
                          strictActionWithinNgZone: !1,
                          strictActionTypeUniqueness: !1,
                      };
            }
            function or({
                strictActionSerializability: ee,
                strictStateSerializability: Le,
            }) {
                return (ge) =>
                    ee || Le
                        ? (function Pr(ee, Le) {
                              return function (ge, Re) {
                                  Le.action(Re) && Tn(Zn(Re), 'action');
                                  const Xe = ee(ge, Re);
                                  return Le.state() && Tn(Zn(Xe), 'state'), Xe;
                              };
                          })(ge, {
                              action: (Re) => ee && !rt(Re),
                              state: () => Le,
                          })
                        : ge;
            }
            function Wn({
                strictActionImmutability: ee,
                strictStateImmutability: Le,
            }) {
                return (ge) =>
                    ee || Le
                        ? (function vn(ee, Le) {
                              return function (ge, Re) {
                                  const Xe = Le.action(Re) ? Gn(Re) : Re,
                                      Je = ee(ge, Xe);
                                  return Le.state() ? Gn(Je) : Je;
                              };
                          })(ge, {
                              action: (Re) => ee && !rt(Re),
                              state: () => Le,
                          })
                        : ge;
            }
            function rt(ee) {
                return ee.type.startsWith('@ngrx');
            }
            function Ot({ strictActionWithinNgZone: ee }) {
                return (Le) =>
                    ee
                        ? (function hr(ee, Le) {
                              return function (ge, Re) {
                                  if (Le.action(Re) && !l.R0b.isInAngularZone())
                                      throw new Error(
                                          `Action '${Re.type}' running outside NgZone. ${Er}#strictactionwithinngzone`
                                      );
                                  return ee(ge, Re);
                              };
                          })(Le, { action: (ge) => ee && !rt(ge) })
                        : Le;
            }
            function pn(ee) {
                return [
                    { provide: dn, useValue: ee },
                    { provide: wn, useFactory: pr, deps: [dn] },
                    { provide: Kt, deps: [wn], useFactory: Ln },
                    { provide: Gt, multi: !0, deps: [Kt], useFactory: Wn },
                    { provide: Gt, multi: !0, deps: [Kt], useFactory: or },
                    { provide: Gt, multi: !0, deps: [Kt], useFactory: Ot },
                ];
            }
            function zn() {
                return [{ provide: Nn, multi: !0, deps: [Kt], useFactory: En }];
            }
            function pr(ee) {
                return ee;
            }
            function En(ee) {
                if (!ee.strictActionTypeUniqueness) return;
                const Le = Object.entries(Se)
                    .filter(([, ge]) => ge > 1)
                    .map(([ge]) => ge);
                if (Le.length)
                    throw new Error(
                        `Action types are registered more than once, ${Le.map(
                            (ge) => `"${ge}"`
                        ).join(', ')}. ${Er}#strictactiontypeuniqueness`
                    );
            }
            let ar = (() => {
                    class ee {
                        constructor(ge, Re, Xe, Je, Nt, Mn) {}
                    }
                    return (
                        (ee.ɵfac = function (ge) {
                            return new (ge || ee)(
                                l.LFG(se),
                                l.LFG(Te),
                                l.LFG(xt),
                                l.LFG(fn),
                                l.LFG($e, 8),
                                l.LFG(Nn, 8)
                            );
                        }),
                        (ee.ɵmod = l.oAB({ type: ee })),
                        (ee.ɵinj = l.cJS({})),
                        ee
                    );
                })(),
                mn = (() => {
                    class ee {
                        constructor(ge, Re, Xe, Je, Nt) {
                            (this.features = ge),
                                (this.featureReducers = Re),
                                (this.reducerManager = Xe);
                            const Mn = ge.map((hn, kn) => {
                                const Bn = Re.shift()[kn];
                                return Object.assign(Object.assign({}, hn), {
                                    reducers: Bn,
                                    initialState: _r(hn.initialState),
                                });
                            });
                            Xe.addFeatures(Mn);
                        }
                        ngOnDestroy() {
                            this.reducerManager.removeFeatures(this.features);
                        }
                    }
                    return (
                        (ee.ɵfac = function (ge) {
                            return new (ge || ee)(
                                l.LFG(nt),
                                l.LFG(un),
                                l.LFG(Rt),
                                l.LFG(ar),
                                l.LFG(Nn, 8)
                            );
                        }),
                        (ee.ɵmod = l.oAB({ type: ee })),
                        (ee.ɵinj = l.cJS({})),
                        ee
                    );
                })(),
                Cr = (() => {
                    class ee {
                        static forRoot(ge, Re = {}) {
                            return {
                                ngModule: ar,
                                providers: [
                                    {
                                        provide: $e,
                                        useFactory: $n,
                                        deps: [[fn, new l.FiY(), new l.tp0()]],
                                    },
                                    { provide: it, useValue: Re.initialState },
                                    { provide: ne, useFactory: _r, deps: [it] },
                                    { provide: be, useValue: ge },
                                    {
                                        provide: ut,
                                        useExisting:
                                            ge instanceof l.OlP ? ge : be,
                                    },
                                    {
                                        provide: Me,
                                        deps: [l.zs3, be, [new l.tBr(ut)]],
                                        useFactory: In,
                                    },
                                    {
                                        provide: Bt,
                                        useValue: Re.metaReducers
                                            ? Re.metaReducers
                                            : [],
                                    },
                                    {
                                        provide: mt,
                                        deps: [Gt, Bt],
                                        useFactory: Tr,
                                    },
                                    {
                                        provide: le,
                                        useValue: Re.reducerFactory
                                            ? Re.reducerFactory
                                            : qt,
                                    },
                                    {
                                        provide: Pe,
                                        deps: [le, mt],
                                        useFactory: Ye,
                                    },
                                    xe,
                                    jt,
                                    nr,
                                    ht,
                                    Ft,
                                    pn(Re.runtimeChecks),
                                    zn(),
                                ],
                            };
                        }
                        static forFeature(ge, Re, Xe = {}) {
                            return {
                                ngModule: mn,
                                providers: [
                                    {
                                        provide: ln,
                                        multi: !0,
                                        useValue:
                                            ge instanceof Object ? {} : Xe,
                                    },
                                    {
                                        provide: ye,
                                        multi: !0,
                                        useValue: {
                                            key:
                                                ge instanceof Object
                                                    ? ge.name
                                                    : ge,
                                            reducerFactory:
                                                Xe instanceof l.OlP ||
                                                !Xe.reducerFactory
                                                    ? qt
                                                    : Xe.reducerFactory,
                                            metaReducers:
                                                Xe instanceof l.OlP ||
                                                !Xe.metaReducers
                                                    ? []
                                                    : Xe.metaReducers,
                                            initialState:
                                                Xe instanceof l.OlP ||
                                                !Xe.initialState
                                                    ? void 0
                                                    : Xe.initialState,
                                        },
                                    },
                                    {
                                        provide: nt,
                                        deps: [l.zs3, ln, ye],
                                        useFactory: Wt,
                                    },
                                    {
                                        provide: Pt,
                                        multi: !0,
                                        useValue:
                                            ge instanceof Object
                                                ? ge.reducer
                                                : Re,
                                    },
                                    {
                                        provide: st,
                                        multi: !0,
                                        useExisting:
                                            Re instanceof l.OlP ? Re : Pt,
                                    },
                                    {
                                        provide: un,
                                        multi: !0,
                                        deps: [l.zs3, Pt, [new l.tBr(st)]],
                                        useFactory: br,
                                    },
                                    zn(),
                                ],
                            };
                        }
                    }
                    return (
                        (ee.ɵfac = function (ge) {
                            return new (ge || ee)();
                        }),
                        (ee.ɵmod = l.oAB({ type: ee })),
                        (ee.ɵinj = l.cJS({})),
                        ee
                    );
                })();
            function In(ee, Le) {
                return Le instanceof l.OlP ? ee.get(Le) : Le;
            }
            function Wt(ee, Le, ge) {
                return ge.map((Re, Xe) => {
                    if (Le[Xe] instanceof l.OlP) {
                        const Je = ee.get(Le[Xe]);
                        return {
                            key: Re.key,
                            reducerFactory: Je.reducerFactory
                                ? Je.reducerFactory
                                : qt,
                            metaReducers: Je.metaReducers
                                ? Je.metaReducers
                                : [],
                            initialState: Je.initialState,
                        };
                    }
                    return Re;
                });
            }
            function br(ee, Le) {
                return Le.map((Re) => (Re instanceof l.OlP ? ee.get(Re) : Re));
            }
            function _r(ee) {
                return 'function' == typeof ee ? ee() : ee;
            }
            function Tr(ee, Le) {
                return ee.concat(Le);
            }
            function $n(ee) {
                if (ee)
                    throw new TypeError(
                        'StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.'
                    );
                return 'guarded';
            }
        },
        9783: (de, z, _) => {
            'use strict';
            _.d(z, {
                $_: () => Z,
                h4: () => Se,
                F0: () => De,
                b4: () => x,
                jx: () => X,
                m8: () => Ce,
            });
            var l = _(5e3),
                w = _(7579),
                G = _(9808);
            const j = ['*'];
            let S = (() => {
                    class Y {}
                    return (
                        (Y.STARTS_WITH = 'startsWith'),
                        (Y.CONTAINS = 'contains'),
                        (Y.NOT_CONTAINS = 'notContains'),
                        (Y.ENDS_WITH = 'endsWith'),
                        (Y.EQUALS = 'equals'),
                        (Y.NOT_EQUALS = 'notEquals'),
                        (Y.IN = 'in'),
                        (Y.LESS_THAN = 'lt'),
                        (Y.LESS_THAN_OR_EQUAL_TO = 'lte'),
                        (Y.GREATER_THAN = 'gt'),
                        (Y.GREATER_THAN_OR_EQUAL_TO = 'gte'),
                        (Y.BETWEEN = 'between'),
                        (Y.IS = 'is'),
                        (Y.IS_NOT = 'isNot'),
                        (Y.BEFORE = 'before'),
                        (Y.AFTER = 'after'),
                        (Y.DATE_IS = 'dateIs'),
                        (Y.DATE_IS_NOT = 'dateIsNot'),
                        (Y.DATE_BEFORE = 'dateBefore'),
                        (Y.DATE_AFTER = 'dateAfter'),
                        Y
                    );
                })(),
                x = (() => {
                    class Y {
                        constructor() {
                            (this.ripple = !1),
                                (this.filterMatchModeOptions = {
                                    text: [
                                        S.STARTS_WITH,
                                        S.CONTAINS,
                                        S.NOT_CONTAINS,
                                        S.ENDS_WITH,
                                        S.EQUALS,
                                        S.NOT_EQUALS,
                                    ],
                                    numeric: [
                                        S.EQUALS,
                                        S.NOT_EQUALS,
                                        S.LESS_THAN,
                                        S.LESS_THAN_OR_EQUAL_TO,
                                        S.GREATER_THAN,
                                        S.GREATER_THAN_OR_EQUAL_TO,
                                    ],
                                    date: [
                                        S.DATE_IS,
                                        S.DATE_IS_NOT,
                                        S.DATE_BEFORE,
                                        S.DATE_AFTER,
                                    ],
                                }),
                                (this.translation = {
                                    startsWith: 'Starts with',
                                    contains: 'Contains',
                                    notContains: 'Not contains',
                                    endsWith: 'Ends with',
                                    equals: 'Equals',
                                    notEquals: 'Not equals',
                                    noFilter: 'No Filter',
                                    lt: 'Less than',
                                    lte: 'Less than or equal to',
                                    gt: 'Greater than',
                                    gte: 'Greater than or equal to',
                                    is: 'Is',
                                    isNot: 'Is not',
                                    before: 'Before',
                                    after: 'After',
                                    dateIs: 'Date is',
                                    dateIsNot: 'Date is not',
                                    dateBefore: 'Date is before',
                                    dateAfter: 'Date is after',
                                    clear: 'Clear',
                                    apply: 'Apply',
                                    matchAll: 'Match All',
                                    matchAny: 'Match Any',
                                    addRule: 'Add Rule',
                                    removeRule: 'Remove Rule',
                                    accept: 'Yes',
                                    reject: 'No',
                                    choose: 'Choose',
                                    upload: 'Upload',
                                    cancel: 'Cancel',
                                    dayNames: [
                                        'Sunday',
                                        'Monday',
                                        'Tuesday',
                                        'Wednesday',
                                        'Thursday',
                                        'Friday',
                                        'Saturday',
                                    ],
                                    dayNamesShort: [
                                        'Sun',
                                        'Mon',
                                        'Tue',
                                        'Wed',
                                        'Thu',
                                        'Fri',
                                        'Sat',
                                    ],
                                    dayNamesMin: [
                                        'Su',
                                        'Mo',
                                        'Tu',
                                        'We',
                                        'Th',
                                        'Fr',
                                        'Sa',
                                    ],
                                    monthNames: [
                                        'January',
                                        'February',
                                        'March',
                                        'April',
                                        'May',
                                        'June',
                                        'July',
                                        'August',
                                        'September',
                                        'October',
                                        'November',
                                        'December',
                                    ],
                                    monthNamesShort: [
                                        'Jan',
                                        'Feb',
                                        'Mar',
                                        'Apr',
                                        'May',
                                        'Jun',
                                        'Jul',
                                        'Aug',
                                        'Sep',
                                        'Oct',
                                        'Nov',
                                        'Dec',
                                    ],
                                    dateFormat: 'mm/dd/yy',
                                    today: 'Today',
                                    weekHeader: 'Wk',
                                    weak: 'Weak',
                                    medium: 'Medium',
                                    strong: 'Strong',
                                    passwordPrompt: 'Enter a password',
                                    emptyMessage: 'No results found',
                                    emptyFilterMessage: 'No results found',
                                }),
                                (this.zIndex = {
                                    modal: 1100,
                                    overlay: 1e3,
                                    menu: 1e3,
                                    tooltip: 1100,
                                }),
                                (this.translationSource = new w.x()),
                                (this.translationObserver =
                                    this.translationSource.asObservable());
                        }
                        getTranslation(se) {
                            return this.translation[se];
                        }
                        setTranslation(se) {
                            (this.translation = Object.assign(
                                Object.assign({}, this.translation),
                                se
                            )),
                                this.translationSource.next(this.translation);
                        }
                    }
                    return (
                        (Y.ɵfac = function (se) {
                            return new (se || Y)();
                        }),
                        (Y.ɵprov = l.Yz7({
                            token: Y,
                            factory: Y.ɵfac,
                            providedIn: 'root',
                        })),
                        Y
                    );
                })(),
                De = (() => {
                    class Y {
                        constructor() {
                            (this.clickSource = new w.x()),
                                (this.clickObservable =
                                    this.clickSource.asObservable());
                        }
                        add(se) {
                            se && this.clickSource.next(se);
                        }
                    }
                    return (
                        (Y.ɵfac = function (se) {
                            return new (se || Y)();
                        }),
                        (Y.ɵprov = l.Yz7({
                            token: Y,
                            factory: Y.ɵfac,
                            providedIn: 'root',
                        })),
                        Y
                    );
                })(),
                Se = (() => {
                    class Y {}
                    return (
                        (Y.ɵfac = function (se) {
                            return new (se || Y)();
                        }),
                        (Y.ɵcmp = l.Xpm({
                            type: Y,
                            selectors: [['p-header']],
                            ngContentSelectors: j,
                            decls: 1,
                            vars: 0,
                            template: function (se, xe) {
                                1 & se && (l.F$t(), l.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        Y
                    );
                })(),
                Z = (() => {
                    class Y {}
                    return (
                        (Y.ɵfac = function (se) {
                            return new (se || Y)();
                        }),
                        (Y.ɵcmp = l.Xpm({
                            type: Y,
                            selectors: [['p-footer']],
                            ngContentSelectors: j,
                            decls: 1,
                            vars: 0,
                            template: function (se, xe) {
                                1 & se && (l.F$t(), l.Hsn(0));
                            },
                            encapsulation: 2,
                        })),
                        Y
                    );
                })(),
                X = (() => {
                    class Y {
                        constructor(se) {
                            this.template = se;
                        }
                        getType() {
                            return this.name;
                        }
                    }
                    return (
                        (Y.ɵfac = function (se) {
                            return new (se || Y)(l.Y36(l.Rgc));
                        }),
                        (Y.ɵdir = l.lG2({
                            type: Y,
                            selectors: [['', 'pTemplate', '']],
                            inputs: {
                                type: 'type',
                                name: ['pTemplate', 'name'],
                            },
                        })),
                        Y
                    );
                })(),
                Ce = (() => {
                    class Y {}
                    return (
                        (Y.ɵfac = function (se) {
                            return new (se || Y)();
                        }),
                        (Y.ɵmod = l.oAB({ type: Y })),
                        (Y.ɵinj = l.cJS({ imports: [[G.ez]] })),
                        Y
                    );
                })();
        },
        2266: (de, z, _) => {
            'use strict';
            _.d(z, { q: () => B, F: () => V });
            var l = _(5e3),
                w = _(9808);
            function G(U, Q) {
                if (
                    (1 & U && (l.TgZ(0, 'span', 4), l._uU(1), l.qZA()), 2 & U)
                ) {
                    const De = l.oxw();
                    l.xp6(1), l.Oqu(De.label);
                }
            }
            function j(U, Q) {
                if ((1 & U && l._UZ(0, 'span', 6), 2 & U)) {
                    const De = l.oxw(2);
                    l.Tol(De.icon), l.Q6J('ngClass', 'p-avatar-icon');
                }
            }
            function S(U, Q) {
                if ((1 & U && l.YNc(0, j, 1, 3, 'span', 5), 2 & U)) {
                    const De = l.oxw(),
                        Ee = l.MAs(6);
                    l.Q6J('ngIf', De.icon)('ngIfElse', Ee);
                }
            }
            function x(U, Q) {
                if ((1 & U && l._UZ(0, 'img', 8), 2 & U)) {
                    const De = l.oxw(2);
                    l.Q6J('src', De.image, l.LSH);
                }
            }
            function k(U, Q) {
                if ((1 & U && l.YNc(0, x, 1, 1, 'img', 7), 2 & U)) {
                    const De = l.oxw();
                    l.Q6J('ngIf', De.image);
                }
            }
            const W = ['*'];
            let B = (() => {
                    class U {
                        constructor() {
                            (this.size = 'normal'), (this.shape = 'square');
                        }
                        containerClass() {
                            return {
                                'p-avatar p-component': !0,
                                'p-avatar-image': null != this.image,
                                'p-avatar-circle': 'circle' === this.shape,
                                'p-avatar-lg': 'large' === this.size,
                                'p-avatar-xl': 'xlarge' === this.size,
                            };
                        }
                    }
                    return (
                        (U.ɵfac = function (De) {
                            return new (De || U)();
                        }),
                        (U.ɵcmp = l.Xpm({
                            type: U,
                            selectors: [['p-avatar']],
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                label: 'label',
                                icon: 'icon',
                                image: 'image',
                                size: 'size',
                                shape: 'shape',
                                style: 'style',
                                styleClass: 'styleClass',
                            },
                            ngContentSelectors: W,
                            decls: 7,
                            vars: 6,
                            consts: [
                                [3, 'ngClass', 'ngStyle'],
                                [
                                    'class',
                                    'p-avatar-text',
                                    4,
                                    'ngIf',
                                    'ngIfElse',
                                ],
                                ['iconTemplate', ''],
                                ['imageTemplate', ''],
                                [1, 'p-avatar-text'],
                                [3, 'class', 'ngClass', 4, 'ngIf', 'ngIfElse'],
                                [3, 'ngClass'],
                                [3, 'src', 4, 'ngIf'],
                                [3, 'src'],
                            ],
                            template: function (De, Ee) {
                                if (
                                    (1 & De &&
                                        (l.F$t(),
                                        l.TgZ(0, 'div', 0),
                                        l.Hsn(1),
                                        l.YNc(2, G, 2, 1, 'span', 1),
                                        l.YNc(
                                            3,
                                            S,
                                            1,
                                            2,
                                            'ng-template',
                                            null,
                                            2,
                                            l.W1O
                                        ),
                                        l.YNc(
                                            5,
                                            k,
                                            1,
                                            1,
                                            'ng-template',
                                            null,
                                            3,
                                            l.W1O
                                        ),
                                        l.qZA()),
                                    2 & De)
                                ) {
                                    const _e = l.MAs(4);
                                    l.Tol(Ee.styleClass),
                                        l.Q6J('ngClass', Ee.containerClass())(
                                            'ngStyle',
                                            Ee.style
                                        ),
                                        l.xp6(2),
                                        l.Q6J('ngIf', Ee.label)('ngIfElse', _e);
                                }
                            },
                            directives: [w.mk, w.PC, w.O5],
                            styles: [
                                '.p-avatar{display:inline-flex;align-items:center;justify-content:center;width:2rem;height:2rem;font-size:1rem}.p-avatar.p-avatar-image{background-color:transparent}.p-avatar.p-avatar-circle{border-radius:50%;overflow:hidden}.p-avatar .p-avatar-icon{font-size:1rem}.p-avatar img{width:100%;height:100%}\n',
                            ],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        U
                    );
                })(),
                V = (() => {
                    class U {}
                    return (
                        (U.ɵfac = function (De) {
                            return new (De || U)();
                        }),
                        (U.ɵmod = l.oAB({ type: U })),
                        (U.ɵinj = l.cJS({ imports: [[w.ez]] })),
                        U
                    );
                })();
        },
        845: (de, z, _) => {
            'use strict';
            _.d(z, { zx: () => De, hJ: () => Ee });
            var l = _(5e3),
                w = _(9808),
                G = _(5787),
                j = _(9783);
            function S(_e, Se) {
                1 & _e && l.GkF(0);
            }
            const x = function (_e, Se, Z, X) {
                return {
                    'p-button-icon': !0,
                    'p-button-icon-left': _e,
                    'p-button-icon-right': Se,
                    'p-button-icon-top': Z,
                    'p-button-icon-bottom': X,
                };
            };
            function k(_e, Se) {
                if ((1 & _e && l._UZ(0, 'span', 4), 2 & _e)) {
                    const Z = l.oxw();
                    l.Tol(
                        Z.loading
                            ? 'p-button-loading-icon ' + Z.loadingIcon
                            : Z.icon
                    ),
                        l.Q6J(
                            'ngClass',
                            l.l5B(
                                4,
                                x,
                                'left' === Z.iconPos && Z.label,
                                'right' === Z.iconPos && Z.label,
                                'top' === Z.iconPos && Z.label,
                                'bottom' === Z.iconPos && Z.label
                            )
                        ),
                        l.uIk('aria-hidden', !0);
                }
            }
            function W(_e, Se) {
                if (
                    (1 & _e && (l.TgZ(0, 'span', 5), l._uU(1), l.qZA()), 2 & _e)
                ) {
                    const Z = l.oxw();
                    l.uIk('aria-hidden', Z.icon && !Z.label),
                        l.xp6(1),
                        l.Oqu(Z.label || '\xa0');
                }
            }
            function B(_e, Se) {
                if (
                    (1 & _e && (l.TgZ(0, 'span', 4), l._uU(1), l.qZA()), 2 & _e)
                ) {
                    const Z = l.oxw();
                    l.Tol(Z.badgeClass),
                        l.Q6J('ngClass', Z.badgeStyleClass()),
                        l.xp6(1),
                        l.Oqu(Z.badge);
                }
            }
            const V = function (_e, Se, Z, X, Ce) {
                    return {
                        'p-button p-component': !0,
                        'p-button-icon-only': _e,
                        'p-button-vertical': Se,
                        'p-disabled': Z,
                        'p-button-loading': X,
                        'p-button-loading-label-only': Ce,
                    };
                },
                U = ['*'];
            let De = (() => {
                    class _e {
                        constructor() {
                            (this.type = 'button'),
                                (this.iconPos = 'left'),
                                (this.loading = !1),
                                (this.loadingIcon = 'pi pi-spinner pi-spin'),
                                (this.onClick = new l.vpe()),
                                (this.onFocus = new l.vpe()),
                                (this.onBlur = new l.vpe());
                        }
                        ngAfterContentInit() {
                            this.templates.forEach((Z) => {
                                Z.getType(),
                                    (this.contentTemplate = Z.template);
                            });
                        }
                        badgeStyleClass() {
                            return {
                                'p-badge p-component': !0,
                                'p-badge-no-gutter':
                                    this.badge &&
                                    1 === String(this.badge).length,
                            };
                        }
                    }
                    return (
                        (_e.ɵfac = function (Z) {
                            return new (Z || _e)();
                        }),
                        (_e.ɵcmp = l.Xpm({
                            type: _e,
                            selectors: [['p-button']],
                            contentQueries: function (Z, X, Ce) {
                                if ((1 & Z && l.Suo(Ce, j.jx, 4), 2 & Z)) {
                                    let ae;
                                    l.iGM((ae = l.CRH())) && (X.templates = ae);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                type: 'type',
                                iconPos: 'iconPos',
                                icon: 'icon',
                                badge: 'badge',
                                label: 'label',
                                disabled: 'disabled',
                                loading: 'loading',
                                loadingIcon: 'loadingIcon',
                                style: 'style',
                                styleClass: 'styleClass',
                                badgeClass: 'badgeClass',
                            },
                            outputs: {
                                onClick: 'onClick',
                                onFocus: 'onFocus',
                                onBlur: 'onBlur',
                            },
                            ngContentSelectors: U,
                            decls: 6,
                            vars: 16,
                            consts: [
                                [
                                    'pRipple',
                                    '',
                                    3,
                                    'ngStyle',
                                    'disabled',
                                    'ngClass',
                                    'click',
                                    'focus',
                                    'blur',
                                ],
                                [4, 'ngTemplateOutlet'],
                                [3, 'ngClass', 'class', 4, 'ngIf'],
                                ['class', 'p-button-label', 4, 'ngIf'],
                                [3, 'ngClass'],
                                [1, 'p-button-label'],
                            ],
                            template: function (Z, X) {
                                1 & Z &&
                                    (l.F$t(),
                                    l.TgZ(0, 'button', 0),
                                    l.NdJ('click', function (ae) {
                                        return X.onClick.emit(ae);
                                    })('focus', function (ae) {
                                        return X.onFocus.emit(ae);
                                    })('blur', function (ae) {
                                        return X.onBlur.emit(ae);
                                    }),
                                    l.Hsn(1),
                                    l.YNc(2, S, 1, 0, 'ng-container', 1),
                                    l.YNc(3, k, 1, 9, 'span', 2),
                                    l.YNc(4, W, 2, 2, 'span', 3),
                                    l.YNc(5, B, 2, 4, 'span', 2),
                                    l.qZA()),
                                    2 & Z &&
                                        (l.Tol(X.styleClass),
                                        l.Q6J('ngStyle', X.style)(
                                            'disabled',
                                            X.disabled || X.loading
                                        )(
                                            'ngClass',
                                            l.qbA(
                                                10,
                                                V,
                                                X.icon && !X.label,
                                                ('top' === X.iconPos ||
                                                    'bottom' === X.iconPos) &&
                                                    X.label,
                                                X.disabled || X.loading,
                                                X.loading,
                                                X.loading && !X.icon && X.label
                                            )
                                        ),
                                        l.uIk('type', X.type),
                                        l.xp6(2),
                                        l.Q6J(
                                            'ngTemplateOutlet',
                                            X.contentTemplate
                                        ),
                                        l.xp6(1),
                                        l.Q6J(
                                            'ngIf',
                                            !X.contentTemplate &&
                                                (X.icon || X.loading)
                                        ),
                                        l.xp6(1),
                                        l.Q6J('ngIf', !X.contentTemplate),
                                        l.xp6(1),
                                        l.Q6J(
                                            'ngIf',
                                            !X.contentTemplate && X.badge
                                        ));
                            },
                            directives: [G.H, w.PC, w.mk, w.tP, w.O5],
                            encapsulation: 2,
                            changeDetection: 0,
                        })),
                        _e
                    );
                })(),
                Ee = (() => {
                    class _e {}
                    return (
                        (_e.ɵfac = function (Z) {
                            return new (Z || _e)();
                        }),
                        (_e.ɵmod = l.oAB({ type: _e })),
                        (_e.ɵinj = l.cJS({ imports: [[w.ez, G.T]] })),
                        _e
                    );
                })();
        },
        5730: (de, z, _) => {
            'use strict';
            _.d(z, { V: () => w, p: () => l });
            let l = (() => {
                class G {
                    static addClass(S, x) {
                        S.classList
                            ? S.classList.add(x)
                            : (S.className += ' ' + x);
                    }
                    static addMultipleClasses(S, x) {
                        if (S.classList) {
                            let k = x.trim().split(' ');
                            for (let W = 0; W < k.length; W++)
                                S.classList.add(k[W]);
                        } else {
                            let k = x.split(' ');
                            for (let W = 0; W < k.length; W++)
                                S.className += ' ' + k[W];
                        }
                    }
                    static removeClass(S, x) {
                        S.classList
                            ? S.classList.remove(x)
                            : (S.className = S.className.replace(
                                  new RegExp(
                                      '(^|\\b)' +
                                          x.split(' ').join('|') +
                                          '(\\b|$)',
                                      'gi'
                                  ),
                                  ' '
                              ));
                    }
                    static hasClass(S, x) {
                        return S.classList
                            ? S.classList.contains(x)
                            : new RegExp('(^| )' + x + '( |$)', 'gi').test(
                                  S.className
                              );
                    }
                    static siblings(S) {
                        return Array.prototype.filter.call(
                            S.parentNode.children,
                            function (x) {
                                return x !== S;
                            }
                        );
                    }
                    static find(S, x) {
                        return Array.from(S.querySelectorAll(x));
                    }
                    static findSingle(S, x) {
                        return S ? S.querySelector(x) : null;
                    }
                    static index(S) {
                        let x = S.parentNode.childNodes,
                            k = 0;
                        for (var W = 0; W < x.length; W++) {
                            if (x[W] == S) return k;
                            1 == x[W].nodeType && k++;
                        }
                        return -1;
                    }
                    static indexWithinGroup(S, x) {
                        let k = S.parentNode ? S.parentNode.childNodes : [],
                            W = 0;
                        for (var B = 0; B < k.length; B++) {
                            if (k[B] == S) return W;
                            k[B].attributes &&
                                k[B].attributes[x] &&
                                1 == k[B].nodeType &&
                                W++;
                        }
                        return -1;
                    }
                    static relativePosition(S, x) {
                        let k = S.offsetParent
                            ? { width: S.offsetWidth, height: S.offsetHeight }
                            : this.getHiddenElementDimensions(S);
                        const W = x.offsetHeight,
                            B = x.getBoundingClientRect(),
                            V = this.getViewport();
                        let U, Q;
                        B.top + W + k.height > V.height
                            ? ((U = -1 * k.height),
                              (S.style.transformOrigin = 'bottom'),
                              B.top + U < 0 && (U = -1 * B.top))
                            : ((U = W), (S.style.transformOrigin = 'top')),
                            (Q =
                                k.width > V.width
                                    ? -1 * B.left
                                    : B.left + k.width > V.width
                                    ? -1 * (B.left + k.width - V.width)
                                    : 0),
                            (S.style.top = U + 'px'),
                            (S.style.left = Q + 'px');
                    }
                    static absolutePosition(S, x) {
                        let Se,
                            Z,
                            k = S.offsetParent
                                ? {
                                      width: S.offsetWidth,
                                      height: S.offsetHeight,
                                  }
                                : this.getHiddenElementDimensions(S),
                            W = k.height,
                            B = k.width,
                            V = x.offsetHeight,
                            U = x.offsetWidth,
                            Q = x.getBoundingClientRect(),
                            De = this.getWindowScrollTop(),
                            Ee = this.getWindowScrollLeft(),
                            _e = this.getViewport();
                        Q.top + V + W > _e.height
                            ? ((Se = Q.top + De - W),
                              (S.style.transformOrigin = 'bottom'),
                              Se < 0 && (Se = De))
                            : ((Se = V + Q.top + De),
                              (S.style.transformOrigin = 'top')),
                            (Z =
                                Q.left + B > _e.width
                                    ? Math.max(0, Q.left + Ee + U - B)
                                    : Q.left + Ee),
                            (S.style.top = Se + 'px'),
                            (S.style.left = Z + 'px');
                    }
                    static getParents(S, x = []) {
                        return null === S.parentNode
                            ? x
                            : this.getParents(
                                  S.parentNode,
                                  x.concat([S.parentNode])
                              );
                    }
                    static getScrollableParents(S) {
                        let x = [];
                        if (S) {
                            let k = this.getParents(S);
                            const W = /(auto|scroll)/,
                                B = (V) => {
                                    let U = window.getComputedStyle(V, null);
                                    return (
                                        W.test(
                                            U.getPropertyValue('overflow')
                                        ) ||
                                        W.test(
                                            U.getPropertyValue('overflowX')
                                        ) ||
                                        W.test(U.getPropertyValue('overflowY'))
                                    );
                                };
                            for (let V of k) {
                                let U =
                                    1 === V.nodeType &&
                                    V.dataset.scrollselectors;
                                if (U) {
                                    let Q = U.split(',');
                                    for (let De of Q) {
                                        let Ee = this.findSingle(V, De);
                                        Ee && B(Ee) && x.push(Ee);
                                    }
                                }
                                9 !== V.nodeType && B(V) && x.push(V);
                            }
                        }
                        return x;
                    }
                    static getHiddenElementOuterHeight(S) {
                        (S.style.visibility = 'hidden'),
                            (S.style.display = 'block');
                        let x = S.offsetHeight;
                        return (
                            (S.style.display = 'none'),
                            (S.style.visibility = 'visible'),
                            x
                        );
                    }
                    static getHiddenElementOuterWidth(S) {
                        (S.style.visibility = 'hidden'),
                            (S.style.display = 'block');
                        let x = S.offsetWidth;
                        return (
                            (S.style.display = 'none'),
                            (S.style.visibility = 'visible'),
                            x
                        );
                    }
                    static getHiddenElementDimensions(S) {
                        let x = {};
                        return (
                            (S.style.visibility = 'hidden'),
                            (S.style.display = 'block'),
                            (x.width = S.offsetWidth),
                            (x.height = S.offsetHeight),
                            (S.style.display = 'none'),
                            (S.style.visibility = 'visible'),
                            x
                        );
                    }
                    static scrollInView(S, x) {
                        let k =
                                getComputedStyle(S).getPropertyValue(
                                    'borderTopWidth'
                                ),
                            W = k ? parseFloat(k) : 0,
                            B =
                                getComputedStyle(S).getPropertyValue(
                                    'paddingTop'
                                ),
                            V = B ? parseFloat(B) : 0,
                            U = S.getBoundingClientRect(),
                            De =
                                x.getBoundingClientRect().top +
                                document.body.scrollTop -
                                (U.top + document.body.scrollTop) -
                                W -
                                V,
                            Ee = S.scrollTop,
                            _e = S.clientHeight,
                            Se = this.getOuterHeight(x);
                        De < 0
                            ? (S.scrollTop = Ee + De)
                            : De + Se > _e && (S.scrollTop = Ee + De - _e + Se);
                    }
                    static fadeIn(S, x) {
                        S.style.opacity = 0;
                        let k = +new Date(),
                            W = 0,
                            B = function () {
                                (W =
                                    +S.style.opacity.replace(',', '.') +
                                    (new Date().getTime() - k) / x),
                                    (S.style.opacity = W),
                                    (k = +new Date()),
                                    +W < 1 &&
                                        ((window.requestAnimationFrame &&
                                            requestAnimationFrame(B)) ||
                                            setTimeout(B, 16));
                            };
                        B();
                    }
                    static fadeOut(S, x) {
                        var k = 1,
                            V = 50 / x;
                        let U = setInterval(() => {
                            (k -= V) <= 0 && ((k = 0), clearInterval(U)),
                                (S.style.opacity = k);
                        }, 50);
                    }
                    static getWindowScrollTop() {
                        let S = document.documentElement;
                        return (
                            (window.pageYOffset || S.scrollTop) -
                            (S.clientTop || 0)
                        );
                    }
                    static getWindowScrollLeft() {
                        let S = document.documentElement;
                        return (
                            (window.pageXOffset || S.scrollLeft) -
                            (S.clientLeft || 0)
                        );
                    }
                    static matches(S, x) {
                        var k = Element.prototype;
                        return (
                            k.matches ||
                            k.webkitMatchesSelector ||
                            k.mozMatchesSelector ||
                            k.msMatchesSelector ||
                            function (B) {
                                return (
                                    -1 !==
                                    [].indexOf.call(
                                        document.querySelectorAll(B),
                                        this
                                    )
                                );
                            }
                        ).call(S, x);
                    }
                    static getOuterWidth(S, x) {
                        let k = S.offsetWidth;
                        if (x) {
                            let W = getComputedStyle(S);
                            k +=
                                parseFloat(W.marginLeft) +
                                parseFloat(W.marginRight);
                        }
                        return k;
                    }
                    static getHorizontalPadding(S) {
                        let x = getComputedStyle(S);
                        return (
                            parseFloat(x.paddingLeft) +
                            parseFloat(x.paddingRight)
                        );
                    }
                    static getHorizontalMargin(S) {
                        let x = getComputedStyle(S);
                        return (
                            parseFloat(x.marginLeft) + parseFloat(x.marginRight)
                        );
                    }
                    static innerWidth(S) {
                        let x = S.offsetWidth,
                            k = getComputedStyle(S);
                        return (
                            (x +=
                                parseFloat(k.paddingLeft) +
                                parseFloat(k.paddingRight)),
                            x
                        );
                    }
                    static width(S) {
                        let x = S.offsetWidth,
                            k = getComputedStyle(S);
                        return (
                            (x -=
                                parseFloat(k.paddingLeft) +
                                parseFloat(k.paddingRight)),
                            x
                        );
                    }
                    static getInnerHeight(S) {
                        let x = S.offsetHeight,
                            k = getComputedStyle(S);
                        return (
                            (x +=
                                parseFloat(k.paddingTop) +
                                parseFloat(k.paddingBottom)),
                            x
                        );
                    }
                    static getOuterHeight(S, x) {
                        let k = S.offsetHeight;
                        if (x) {
                            let W = getComputedStyle(S);
                            k +=
                                parseFloat(W.marginTop) +
                                parseFloat(W.marginBottom);
                        }
                        return k;
                    }
                    static getHeight(S) {
                        let x = S.offsetHeight,
                            k = getComputedStyle(S);
                        return (
                            (x -=
                                parseFloat(k.paddingTop) +
                                parseFloat(k.paddingBottom) +
                                parseFloat(k.borderTopWidth) +
                                parseFloat(k.borderBottomWidth)),
                            x
                        );
                    }
                    static getWidth(S) {
                        let x = S.offsetWidth,
                            k = getComputedStyle(S);
                        return (
                            (x -=
                                parseFloat(k.paddingLeft) +
                                parseFloat(k.paddingRight) +
                                parseFloat(k.borderLeftWidth) +
                                parseFloat(k.borderRightWidth)),
                            x
                        );
                    }
                    static getViewport() {
                        let S = window,
                            x = document,
                            k = x.documentElement,
                            W = x.getElementsByTagName('body')[0];
                        return {
                            width:
                                S.innerWidth || k.clientWidth || W.clientWidth,
                            height:
                                S.innerHeight ||
                                k.clientHeight ||
                                W.clientHeight,
                        };
                    }
                    static getOffset(S) {
                        var x = S.getBoundingClientRect();
                        return {
                            top:
                                x.top +
                                (window.pageYOffset ||
                                    document.documentElement.scrollTop ||
                                    document.body.scrollTop ||
                                    0),
                            left:
                                x.left +
                                (window.pageXOffset ||
                                    document.documentElement.scrollLeft ||
                                    document.body.scrollLeft ||
                                    0),
                        };
                    }
                    static replaceElementWith(S, x) {
                        let k = S.parentNode;
                        if (!k) throw "Can't replace element";
                        return k.replaceChild(x, S);
                    }
                    static getUserAgent() {
                        return navigator.userAgent;
                    }
                    static isIE() {
                        var S = window.navigator.userAgent;
                        return (
                            S.indexOf('MSIE ') > 0 ||
                            (S.indexOf('Trident/') > 0
                                ? (S.indexOf('rv:'), !0)
                                : S.indexOf('Edge/') > 0)
                        );
                    }
                    static isIOS() {
                        return (
                            /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                            !window.MSStream
                        );
                    }
                    static isAndroid() {
                        return /(android)/i.test(navigator.userAgent);
                    }
                    static isTouchDevice() {
                        return (
                            'ontouchstart' in window ||
                            navigator.maxTouchPoints > 0
                        );
                    }
                    static appendChild(S, x) {
                        if (this.isElement(x)) x.appendChild(S);
                        else {
                            if (!x.el || !x.el.nativeElement)
                                throw 'Cannot append ' + x + ' to ' + S;
                            x.el.nativeElement.appendChild(S);
                        }
                    }
                    static removeChild(S, x) {
                        if (this.isElement(x)) x.removeChild(S);
                        else {
                            if (!x.el || !x.el.nativeElement)
                                throw 'Cannot remove ' + S + ' from ' + x;
                            x.el.nativeElement.removeChild(S);
                        }
                    }
                    static removeElement(S) {
                        'remove' in Element.prototype
                            ? S.remove()
                            : S.parentNode.removeChild(S);
                    }
                    static isElement(S) {
                        return 'object' == typeof HTMLElement
                            ? S instanceof HTMLElement
                            : S &&
                                  'object' == typeof S &&
                                  null !== S &&
                                  1 === S.nodeType &&
                                  'string' == typeof S.nodeName;
                    }
                    static calculateScrollbarWidth(S) {
                        if (S) {
                            let x = getComputedStyle(S);
                            return (
                                S.offsetWidth -
                                S.clientWidth -
                                parseFloat(x.borderLeftWidth) -
                                parseFloat(x.borderRightWidth)
                            );
                        }
                        {
                            if (null !== this.calculatedScrollbarWidth)
                                return this.calculatedScrollbarWidth;
                            let x = document.createElement('div');
                            (x.className = 'p-scrollbar-measure'),
                                document.body.appendChild(x);
                            let k = x.offsetWidth - x.clientWidth;
                            return (
                                document.body.removeChild(x),
                                (this.calculatedScrollbarWidth = k),
                                k
                            );
                        }
                    }
                    static calculateScrollbarHeight() {
                        if (null !== this.calculatedScrollbarHeight)
                            return this.calculatedScrollbarHeight;
                        let S = document.createElement('div');
                        (S.className = 'p-scrollbar-measure'),
                            document.body.appendChild(S);
                        let x = S.offsetHeight - S.clientHeight;
                        return (
                            document.body.removeChild(S),
                            (this.calculatedScrollbarWidth = x),
                            x
                        );
                    }
                    static invokeElementMethod(S, x, k) {
                        S[x].apply(S, k);
                    }
                    static clearSelection() {
                        if (window.getSelection)
                            window.getSelection().empty
                                ? window.getSelection().empty()
                                : window.getSelection().removeAllRanges &&
                                  window.getSelection().rangeCount > 0 &&
                                  window
                                      .getSelection()
                                      .getRangeAt(0)
                                      .getClientRects().length > 0 &&
                                  window.getSelection().removeAllRanges();
                        else if (document.selection && document.selection.empty)
                            try {
                                document.selection.empty();
                            } catch (S) {}
                    }
                    static getBrowser() {
                        if (!this.browser) {
                            let S = this.resolveUserAgent();
                            (this.browser = {}),
                                S.browser &&
                                    ((this.browser[S.browser] = !0),
                                    (this.browser.version = S.version)),
                                this.browser.chrome
                                    ? (this.browser.webkit = !0)
                                    : this.browser.webkit &&
                                      (this.browser.safari = !0);
                        }
                        return this.browser;
                    }
                    static resolveUserAgent() {
                        let S = navigator.userAgent.toLowerCase(),
                            x =
                                /(chrome)[ \/]([\w.]+)/.exec(S) ||
                                /(webkit)[ \/]([\w.]+)/.exec(S) ||
                                /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(S) ||
                                /(msie) ([\w.]+)/.exec(S) ||
                                (S.indexOf('compatible') < 0 &&
                                    /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(S)) ||
                                [];
                        return { browser: x[1] || '', version: x[2] || '0' };
                    }
                    static isInteger(S) {
                        return Number.isInteger
                            ? Number.isInteger(S)
                            : 'number' == typeof S &&
                                  isFinite(S) &&
                                  Math.floor(S) === S;
                    }
                    static isHidden(S) {
                        return null === S.offsetParent;
                    }
                    static getFocusableElements(S) {
                        let x = G.find(
                                S,
                                'button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]),\n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]):not(.p-disabled)'
                            ),
                            k = [];
                        for (let W of x)
                            'none' != getComputedStyle(W).display &&
                                'hidden' != getComputedStyle(W).visibility &&
                                k.push(W);
                        return k;
                    }
                    static generateZIndex() {
                        return (
                            (this.zindex = this.zindex || 999), ++this.zindex
                        );
                    }
                }
                return (
                    (G.zindex = 1e3),
                    (G.calculatedScrollbarWidth = null),
                    (G.calculatedScrollbarHeight = null),
                    G
                );
            })();
            class w {
                constructor(j, S = () => {}) {
                    (this.element = j), (this.listener = S);
                }
                bindScrollListener() {
                    this.scrollableParents = l.getScrollableParents(
                        this.element
                    );
                    for (let j = 0; j < this.scrollableParents.length; j++)
                        this.scrollableParents[j].addEventListener(
                            'scroll',
                            this.listener
                        );
                }
                unbindScrollListener() {
                    if (this.scrollableParents)
                        for (let j = 0; j < this.scrollableParents.length; j++)
                            this.scrollableParents[j].removeEventListener(
                                'scroll',
                                this.listener
                            );
                }
                destroy() {
                    this.unbindScrollListener(),
                        (this.element = null),
                        (this.listener = null),
                        (this.scrollableParents = null);
                }
            }
        },
        1424: (de, z, _) => {
            'use strict';
            _.d(z, { o: () => j, j: () => S });
            var l = _(5e3),
                w = _(9808),
                G = _(2382);
            let j = (() => {
                    class x {
                        constructor(W, B, V) {
                            (this.el = W), (this.ngModel = B), (this.cd = V);
                        }
                        ngAfterViewInit() {
                            this.updateFilledState(), this.cd.detectChanges();
                        }
                        ngDoCheck() {
                            this.updateFilledState();
                        }
                        onInput(W) {
                            this.updateFilledState();
                        }
                        updateFilledState() {
                            this.filled =
                                (this.el.nativeElement.value &&
                                    this.el.nativeElement.value.length) ||
                                (this.ngModel && this.ngModel.model);
                        }
                    }
                    return (
                        (x.ɵfac = function (W) {
                            return new (W || x)(
                                l.Y36(l.SBq),
                                l.Y36(G.On, 8),
                                l.Y36(l.sBO)
                            );
                        }),
                        (x.ɵdir = l.lG2({
                            type: x,
                            selectors: [['', 'pInputText', '']],
                            hostAttrs: [
                                1,
                                'p-inputtext',
                                'p-component',
                                'p-element',
                            ],
                            hostVars: 2,
                            hostBindings: function (W, B) {
                                1 & W &&
                                    l.NdJ('input', function (U) {
                                        return B.onInput(U);
                                    }),
                                    2 & W && l.ekj('p-filled', B.filled);
                            },
                        })),
                        x
                    );
                })(),
                S = (() => {
                    class x {}
                    return (
                        (x.ɵfac = function (W) {
                            return new (W || x)();
                        }),
                        (x.ɵmod = l.oAB({ type: x })),
                        (x.ɵinj = l.cJS({ imports: [[w.ez]] })),
                        x
                    );
                })();
        },
        9568: (de, z, _) => {
            'use strict';
            _.d(z, { v2: () => qt, $9: () => Hn });
            var l = _(5e3),
                w = _(1777),
                G = _(9808),
                j = _(5730),
                B = (function W() {
                    let Fe = [];
                    const ot = (We) =>
                        (We && parseInt(We.style.zIndex, 10)) || 0;
                    return {
                        get: ot,
                        set: (We, Rt, jt) => {
                            Rt &&
                                (Rt.style.zIndex = String(
                                    ((We, Rt) => {
                                        let jt =
                                                Fe.length > 0
                                                    ? Fe[Fe.length - 1]
                                                    : { key: We, value: Rt },
                                            xt =
                                                jt.value +
                                                (jt.key === We ? 0 : Rt) +
                                                1;
                                        return (
                                            Fe.push({ key: We, value: xt }), xt
                                        );
                                    })(We, jt)
                                ));
                        },
                        clear: (We) => {
                            We &&
                                (((We) => {
                                    Fe = Fe.filter((Rt) => Rt.value !== We);
                                })(ot(We)),
                                (We.style.zIndex = ''));
                        },
                        getCurrent: () =>
                            Fe.length > 0 ? Fe[Fe.length - 1].value : 0,
                    };
                })(),
                V = _(6115),
                U = _(5787),
                Q = _(9783);
            let De = (() => {
                    class Fe {
                        constructor(q, Te, ot) {
                            (this.el = q),
                                (this.zone = Te),
                                (this.config = ot),
                                (this.escape = !0),
                                (this._tooltipOptions = {
                                    tooltipPosition: 'right',
                                    tooltipEvent: 'hover',
                                    appendTo: 'body',
                                    tooltipZIndex: 'auto',
                                    escape: !1,
                                    positionTop: 0,
                                    positionLeft: 0,
                                });
                        }
                        get disabled() {
                            return this._disabled;
                        }
                        set disabled(q) {
                            (this._disabled = q), this.deactivate();
                        }
                        ngAfterViewInit() {
                            this.zone.runOutsideAngular(() => {
                                'hover' === this.getOption('tooltipEvent')
                                    ? ((this.mouseEnterListener =
                                          this.onMouseEnter.bind(this)),
                                      (this.mouseLeaveListener =
                                          this.onMouseLeave.bind(this)),
                                      (this.clickListener =
                                          this.onClick.bind(this)),
                                      this.el.nativeElement.addEventListener(
                                          'mouseenter',
                                          this.mouseEnterListener
                                      ),
                                      this.el.nativeElement.addEventListener(
                                          'mouseleave',
                                          this.mouseLeaveListener
                                      ),
                                      this.el.nativeElement.addEventListener(
                                          'click',
                                          this.clickListener
                                      ))
                                    : 'focus' ===
                                          this.getOption('tooltipEvent') &&
                                      ((this.focusListener =
                                          this.onFocus.bind(this)),
                                      (this.blurListener =
                                          this.onBlur.bind(this)),
                                      this.el.nativeElement.addEventListener(
                                          'focus',
                                          this.focusListener
                                      ),
                                      this.el.nativeElement.addEventListener(
                                          'blur',
                                          this.blurListener
                                      ));
                            });
                        }
                        ngOnChanges(q) {
                            q.tooltipPosition &&
                                this.setOption({
                                    tooltipPosition:
                                        q.tooltipPosition.currentValue,
                                }),
                                q.tooltipEvent &&
                                    this.setOption({
                                        tooltipEvent:
                                            q.tooltipEvent.currentValue,
                                    }),
                                q.appendTo &&
                                    this.setOption({
                                        appendTo: q.appendTo.currentValue,
                                    }),
                                q.positionStyle &&
                                    this.setOption({
                                        positionStyle:
                                            q.positionStyle.currentValue,
                                    }),
                                q.tooltipStyleClass &&
                                    this.setOption({
                                        tooltipStyleClass:
                                            q.tooltipStyleClass.currentValue,
                                    }),
                                q.tooltipZIndex &&
                                    this.setOption({
                                        tooltipZIndex:
                                            q.tooltipZIndex.currentValue,
                                    }),
                                q.escape &&
                                    this.setOption({
                                        escape: q.escape.currentValue,
                                    }),
                                q.showDelay &&
                                    this.setOption({
                                        showDelay: q.showDelay.currentValue,
                                    }),
                                q.hideDelay &&
                                    this.setOption({
                                        hideDelay: q.hideDelay.currentValue,
                                    }),
                                q.life &&
                                    this.setOption({
                                        life: q.life.currentValue,
                                    }),
                                q.positionTop &&
                                    this.setOption({
                                        positionTop: q.positionTop.currentValue,
                                    }),
                                q.positionLeft &&
                                    this.setOption({
                                        positionLeft:
                                            q.positionLeft.currentValue,
                                    }),
                                q.disabled &&
                                    this.setOption({
                                        disabled: q.disabled.currentValue,
                                    }),
                                q.text &&
                                    (this.setOption({
                                        tooltipLabel: q.text.currentValue,
                                    }),
                                    this.active &&
                                        (q.text.currentValue
                                            ? this.container &&
                                              this.container.offsetParent
                                                ? (this.updateText(),
                                                  this.align())
                                                : this.show()
                                            : this.hide())),
                                q.tooltipOptions &&
                                    ((this._tooltipOptions = Object.assign(
                                        Object.assign({}, this._tooltipOptions),
                                        q.tooltipOptions.currentValue
                                    )),
                                    this.deactivate(),
                                    this.active &&
                                        (this.getOption('tooltipLabel')
                                            ? this.container &&
                                              this.container.offsetParent
                                                ? (this.updateText(),
                                                  this.align())
                                                : this.show()
                                            : this.hide()));
                        }
                        onMouseEnter(q) {
                            !this.container &&
                                !this.showTimeout &&
                                this.activate();
                        }
                        onMouseLeave(q) {
                            this.deactivate();
                        }
                        onFocus(q) {
                            this.activate();
                        }
                        onBlur(q) {
                            this.deactivate();
                        }
                        onClick(q) {
                            this.deactivate();
                        }
                        activate() {
                            if (
                                ((this.active = !0),
                                this.clearHideTimeout(),
                                this.getOption('showDelay')
                                    ? (this.showTimeout = setTimeout(() => {
                                          this.show();
                                      }, this.getOption('showDelay')))
                                    : this.show(),
                                this.getOption('life'))
                            ) {
                                let q = this.getOption('showDelay')
                                    ? this.getOption('life') +
                                      this.getOption('showDelay')
                                    : this.getOption('life');
                                this.hideTimeout = setTimeout(() => {
                                    this.hide();
                                }, q);
                            }
                        }
                        deactivate() {
                            (this.active = !1),
                                this.clearShowTimeout(),
                                this.getOption('hideDelay')
                                    ? (this.clearHideTimeout(),
                                      (this.hideTimeout = setTimeout(() => {
                                          this.hide();
                                      }, this.getOption('hideDelay'))))
                                    : this.hide();
                        }
                        create() {
                            this.container &&
                                (this.clearHideTimeout(), this.remove()),
                                (this.container =
                                    document.createElement('div'));
                            let q = document.createElement('div');
                            (q.className = 'p-tooltip-arrow'),
                                this.container.appendChild(q),
                                (this.tooltipText =
                                    document.createElement('div')),
                                (this.tooltipText.className = 'p-tooltip-text'),
                                this.updateText(),
                                this.getOption('positionStyle') &&
                                    (this.container.style.position =
                                        this.getOption('positionStyle')),
                                this.container.appendChild(this.tooltipText),
                                'body' === this.getOption('appendTo')
                                    ? document.body.appendChild(this.container)
                                    : 'target' === this.getOption('appendTo')
                                    ? j.p.appendChild(
                                          this.container,
                                          this.el.nativeElement
                                      )
                                    : j.p.appendChild(
                                          this.container,
                                          this.getOption('appendTo')
                                      ),
                                (this.container.style.display = 'inline-block');
                        }
                        show() {
                            !this.getOption('tooltipLabel') ||
                                this.getOption('disabled') ||
                                (this.create(),
                                this.align(),
                                j.p.fadeIn(this.container, 250),
                                'auto' === this.getOption('tooltipZIndex')
                                    ? B.set(
                                          'tooltip',
                                          this.container,
                                          this.config.zIndex.tooltip
                                      )
                                    : (this.container.style.zIndex =
                                          this.getOption('tooltipZIndex')),
                                this.bindDocumentResizeListener(),
                                this.bindScrollListener());
                        }
                        hide() {
                            'auto' === this.getOption('tooltipZIndex') &&
                                B.clear(this.container),
                                this.remove();
                        }
                        updateText() {
                            this.getOption('escape')
                                ? ((this.tooltipText.innerHTML = ''),
                                  this.tooltipText.appendChild(
                                      document.createTextNode(
                                          this.getOption('tooltipLabel')
                                      )
                                  ))
                                : (this.tooltipText.innerHTML =
                                      this.getOption('tooltipLabel'));
                        }
                        align() {
                            switch (this.getOption('tooltipPosition')) {
                                case 'top':
                                    this.alignTop(),
                                        this.isOutOfBounds() &&
                                            (this.alignBottom(),
                                            this.isOutOfBounds() &&
                                                (this.alignRight(),
                                                this.isOutOfBounds() &&
                                                    this.alignLeft()));
                                    break;
                                case 'bottom':
                                    this.alignBottom(),
                                        this.isOutOfBounds() &&
                                            (this.alignTop(),
                                            this.isOutOfBounds() &&
                                                (this.alignRight(),
                                                this.isOutOfBounds() &&
                                                    this.alignLeft()));
                                    break;
                                case 'left':
                                    this.alignLeft(),
                                        this.isOutOfBounds() &&
                                            (this.alignRight(),
                                            this.isOutOfBounds() &&
                                                (this.alignTop(),
                                                this.isOutOfBounds() &&
                                                    this.alignBottom()));
                                    break;
                                case 'right':
                                    this.alignRight(),
                                        this.isOutOfBounds() &&
                                            (this.alignLeft(),
                                            this.isOutOfBounds() &&
                                                (this.alignTop(),
                                                this.isOutOfBounds() &&
                                                    this.alignBottom()));
                            }
                        }
                        getHostOffset() {
                            if (
                                'body' === this.getOption('appendTo') ||
                                'target' === this.getOption('appendTo')
                            ) {
                                let q =
                                    this.el.nativeElement.getBoundingClientRect();
                                return {
                                    left: q.left + j.p.getWindowScrollLeft(),
                                    top: q.top + j.p.getWindowScrollTop(),
                                };
                            }
                            return { left: 0, top: 0 };
                        }
                        alignRight() {
                            this.preAlign('right');
                            let q = this.getHostOffset(),
                                Te =
                                    q.left +
                                    j.p.getOuterWidth(this.el.nativeElement),
                                ot =
                                    q.top +
                                    (j.p.getOuterHeight(this.el.nativeElement) -
                                        j.p.getOuterHeight(this.container)) /
                                        2;
                            (this.container.style.left =
                                Te + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    ot + this.getOption('positionTop') + 'px');
                        }
                        alignLeft() {
                            this.preAlign('left');
                            let q = this.getHostOffset(),
                                Te = q.left - j.p.getOuterWidth(this.container),
                                ot =
                                    q.top +
                                    (j.p.getOuterHeight(this.el.nativeElement) -
                                        j.p.getOuterHeight(this.container)) /
                                        2;
                            (this.container.style.left =
                                Te + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    ot + this.getOption('positionTop') + 'px');
                        }
                        alignTop() {
                            this.preAlign('top');
                            let q = this.getHostOffset(),
                                Te =
                                    q.left +
                                    (j.p.getOuterWidth(this.el.nativeElement) -
                                        j.p.getOuterWidth(this.container)) /
                                        2,
                                ot = q.top - j.p.getOuterHeight(this.container);
                            (this.container.style.left =
                                Te + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    ot + this.getOption('positionTop') + 'px');
                        }
                        alignBottom() {
                            this.preAlign('bottom');
                            let q = this.getHostOffset(),
                                Te =
                                    q.left +
                                    (j.p.getOuterWidth(this.el.nativeElement) -
                                        j.p.getOuterWidth(this.container)) /
                                        2,
                                ot =
                                    q.top +
                                    j.p.getOuterHeight(this.el.nativeElement);
                            (this.container.style.left =
                                Te + this.getOption('positionLeft') + 'px'),
                                (this.container.style.top =
                                    ot + this.getOption('positionTop') + 'px');
                        }
                        setOption(q) {
                            this._tooltipOptions = Object.assign(
                                Object.assign({}, this._tooltipOptions),
                                q
                            );
                        }
                        getOption(q) {
                            return this._tooltipOptions[q];
                        }
                        preAlign(q) {
                            (this.container.style.left = '-999px'),
                                (this.container.style.top = '-999px');
                            let Te = 'p-tooltip p-component p-tooltip-' + q;
                            this.container.className = this.getOption(
                                'tooltipStyleClass'
                            )
                                ? Te + ' ' + this.getOption('tooltipStyleClass')
                                : Te;
                        }
                        isOutOfBounds() {
                            let q = this.container.getBoundingClientRect(),
                                Te = q.top,
                                ot = q.left,
                                We = j.p.getOuterWidth(this.container),
                                Rt = j.p.getOuterHeight(this.container),
                                jt = j.p.getViewport();
                            return (
                                ot + We > jt.width ||
                                ot < 0 ||
                                Te < 0 ||
                                Te + Rt > jt.height
                            );
                        }
                        onWindowResize(q) {
                            this.hide();
                        }
                        bindDocumentResizeListener() {
                            this.zone.runOutsideAngular(() => {
                                (this.resizeListener =
                                    this.onWindowResize.bind(this)),
                                    window.addEventListener(
                                        'resize',
                                        this.resizeListener
                                    );
                            });
                        }
                        unbindDocumentResizeListener() {
                            this.resizeListener &&
                                (window.removeEventListener(
                                    'resize',
                                    this.resizeListener
                                ),
                                (this.resizeListener = null));
                        }
                        bindScrollListener() {
                            this.scrollHandler ||
                                (this.scrollHandler = new j.V(
                                    this.el.nativeElement,
                                    () => {
                                        this.container && this.hide();
                                    }
                                )),
                                this.scrollHandler.bindScrollListener();
                        }
                        unbindScrollListener() {
                            this.scrollHandler &&
                                this.scrollHandler.unbindScrollListener();
                        }
                        unbindEvents() {
                            'hover' === this.getOption('tooltipEvent')
                                ? (this.el.nativeElement.removeEventListener(
                                      'mouseenter',
                                      this.mouseEnterListener
                                  ),
                                  this.el.nativeElement.removeEventListener(
                                      'mouseleave',
                                      this.mouseLeaveListener
                                  ),
                                  this.el.nativeElement.removeEventListener(
                                      'click',
                                      this.clickListener
                                  ))
                                : 'focus' === this.getOption('tooltipEvent') &&
                                  (this.el.nativeElement.removeEventListener(
                                      'focus',
                                      this.focusListener
                                  ),
                                  this.el.nativeElement.removeEventListener(
                                      'blur',
                                      this.blurListener
                                  )),
                                this.unbindDocumentResizeListener();
                        }
                        remove() {
                            this.container &&
                                this.container.parentElement &&
                                ('body' === this.getOption('appendTo')
                                    ? document.body.removeChild(this.container)
                                    : 'target' === this.getOption('appendTo')
                                    ? this.el.nativeElement.removeChild(
                                          this.container
                                      )
                                    : j.p.removeChild(
                                          this.container,
                                          this.getOption('appendTo')
                                      )),
                                this.unbindDocumentResizeListener(),
                                this.unbindScrollListener(),
                                this.clearTimeouts(),
                                (this.container = null),
                                (this.scrollHandler = null);
                        }
                        clearShowTimeout() {
                            this.showTimeout &&
                                (clearTimeout(this.showTimeout),
                                (this.showTimeout = null));
                        }
                        clearHideTimeout() {
                            this.hideTimeout &&
                                (clearTimeout(this.hideTimeout),
                                (this.hideTimeout = null));
                        }
                        clearTimeouts() {
                            this.clearShowTimeout(), this.clearHideTimeout();
                        }
                        ngOnDestroy() {
                            this.unbindEvents(),
                                this.container && B.clear(this.container),
                                this.remove(),
                                this.scrollHandler &&
                                    (this.scrollHandler.destroy(),
                                    (this.scrollHandler = null));
                        }
                    }
                    return (
                        (Fe.ɵfac = function (q) {
                            return new (q || Fe)(
                                l.Y36(l.SBq),
                                l.Y36(l.R0b),
                                l.Y36(Q.b4)
                            );
                        }),
                        (Fe.ɵdir = l.lG2({
                            type: Fe,
                            selectors: [['', 'pTooltip', '']],
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                tooltipPosition: 'tooltipPosition',
                                tooltipEvent: 'tooltipEvent',
                                appendTo: 'appendTo',
                                positionStyle: 'positionStyle',
                                tooltipStyleClass: 'tooltipStyleClass',
                                tooltipZIndex: 'tooltipZIndex',
                                escape: 'escape',
                                showDelay: 'showDelay',
                                hideDelay: 'hideDelay',
                                life: 'life',
                                positionTop: 'positionTop',
                                positionLeft: 'positionLeft',
                                text: ['pTooltip', 'text'],
                                disabled: ['tooltipDisabled', 'disabled'],
                                tooltipOptions: 'tooltipOptions',
                            },
                            features: [l.TTD],
                        })),
                        Fe
                    );
                })(),
                Ee = (() => {
                    class Fe {}
                    return (
                        (Fe.ɵfac = function (q) {
                            return new (q || Fe)();
                        }),
                        (Fe.ɵmod = l.oAB({ type: Fe })),
                        (Fe.ɵinj = l.cJS({ imports: [[G.ez]] })),
                        Fe
                    );
                })();
            const _e = ['pMenuItemContent', ''];
            function Se(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'span', 6), 2 & Fe)) {
                    const q = l.oxw(2);
                    l.Q6J('ngClass', q.item.icon);
                }
            }
            function Z(Fe, Ye) {
                if (
                    (1 & Fe && (l.TgZ(0, 'span', 7), l._uU(1), l.qZA()), 2 & Fe)
                ) {
                    const q = l.oxw(2);
                    l.xp6(1), l.Oqu(q.item.label);
                }
            }
            function X(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'span', 8), 2 & Fe)) {
                    const q = l.oxw(2);
                    l.Q6J('innerHTML', q.item.label, l.oJD);
                }
            }
            const Ce = function (Fe) {
                return { 'p-disabled': Fe };
            };
            function ae(Fe, Ye) {
                if (1 & Fe) {
                    const q = l.EpF();
                    l.TgZ(0, 'a', 2),
                        l.NdJ('keydown', function (ot) {
                            return l.CHM(q), l.oxw().onItemKeyDown(ot);
                        })('click', function (ot) {
                            l.CHM(q);
                            const We = l.oxw();
                            return We.menu.itemClick(ot, We.item);
                        }),
                        l.YNc(1, Se, 1, 1, 'span', 3),
                        l.YNc(2, Z, 2, 1, 'span', 4),
                        l.YNc(3, X, 1, 1, 'ng-template', null, 5, l.W1O),
                        l.qZA();
                }
                if (2 & Fe) {
                    const q = l.MAs(4),
                        Te = l.oxw();
                    l.Q6J('ngClass', l.VKq(10, Ce, Te.item.disabled)),
                        l.uIk(
                            'href',
                            Te.item.url || null,
                            l.LSH
                        )('tabindex', Te.item.disabled ? null : '0')(
                            'data-automationid',
                            Te.item.automationId
                        )('target', Te.item.target)('title', Te.item.title)(
                            'id',
                            Te.item.id
                        ),
                        l.xp6(1),
                        l.Q6J('ngIf', Te.item.icon),
                        l.xp6(1),
                        l.Q6J('ngIf', !1 !== Te.item.escape)('ngIfElse', q);
                }
            }
            function Y(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'span', 6), 2 & Fe)) {
                    const q = l.oxw(2);
                    l.Q6J('ngClass', q.item.icon);
                }
            }
            function ie(Fe, Ye) {
                if (
                    (1 & Fe && (l.TgZ(0, 'span', 7), l._uU(1), l.qZA()), 2 & Fe)
                ) {
                    const q = l.oxw(2);
                    l.xp6(1), l.Oqu(q.item.label);
                }
            }
            function se(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'span', 8), 2 & Fe)) {
                    const q = l.oxw(2);
                    l.Q6J('innerHTML', q.item.label, l.oJD);
                }
            }
            const xe = function () {
                return { exact: !1 };
            };
            function $e(Fe, Ye) {
                if (1 & Fe) {
                    const q = l.EpF();
                    l.TgZ(0, 'a', 9),
                        l.NdJ('keydown', function (ot) {
                            return l.CHM(q), l.oxw().onItemKeyDown(ot);
                        })('click', function (ot) {
                            l.CHM(q);
                            const We = l.oxw();
                            return We.menu.itemClick(ot, We.item);
                        }),
                        l.YNc(1, Y, 1, 1, 'span', 3),
                        l.YNc(2, ie, 2, 1, 'span', 4),
                        l.YNc(3, se, 1, 1, 'ng-template', null, 10, l.W1O),
                        l.qZA();
                }
                if (2 & Fe) {
                    const q = l.MAs(4),
                        Te = l.oxw();
                    l.Q6J('routerLink', Te.item.routerLink)(
                        'queryParams',
                        Te.item.queryParams
                    )('routerLinkActive', 'p-menuitem-link-active')(
                        'routerLinkActiveOptions',
                        Te.item.routerLinkActiveOptions || l.DdM(19, xe)
                    )('ngClass', l.VKq(20, Ce, Te.item.disabled))(
                        'fragment',
                        Te.item.fragment
                    )('queryParamsHandling', Te.item.queryParamsHandling)(
                        'preserveFragment',
                        Te.item.preserveFragment
                    )('skipLocationChange', Te.item.skipLocationChange)(
                        'replaceUrl',
                        Te.item.replaceUrl
                    )('state', Te.item.state),
                        l.uIk('data-automationid', Te.item.automationId)(
                            'target',
                            Te.item.target
                        )('id', Te.item.id)(
                            'tabindex',
                            Te.item.disabled ? null : '0'
                        )('title', Te.item.title),
                        l.xp6(1),
                        l.Q6J('ngIf', Te.item.icon),
                        l.xp6(1),
                        l.Q6J('ngIf', !1 !== Te.item.escape)('ngIfElse', q);
                }
            }
            const it = ['container'],
                ne = function (Fe) {
                    return { 'p-hidden': Fe };
                };
            function Pe(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'li', 8), 2 & Fe)) {
                    const q = l.oxw().$implicit;
                    l.Q6J('ngClass', l.VKq(1, ne, !1 === q.visible));
                }
            }
            function le(Fe, Ye) {
                if ((1 & Fe && (l.TgZ(0, 'span'), l._uU(1), l.qZA()), 2 & Fe)) {
                    const q = l.oxw(2).$implicit;
                    l.xp6(1), l.Oqu(q.label);
                }
            }
            function Me(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'span', 12), 2 & Fe)) {
                    const q = l.oxw(2).$implicit;
                    l.Q6J('innerHTML', q.label, l.oJD);
                }
            }
            function be(Fe, Ye) {
                if (
                    (1 & Fe &&
                        (l.TgZ(0, 'li', 9),
                        l.YNc(1, le, 2, 1, 'span', 10),
                        l.YNc(2, Me, 1, 1, 'ng-template', null, 11, l.W1O),
                        l.qZA()),
                    2 & Fe)
                ) {
                    const q = l.MAs(3),
                        Te = l.oxw().$implicit;
                    l.Q6J('ngClass', l.VKq(5, ne, !1 === Te.visible))(
                        'tooltipOptions',
                        Te.tooltipOptions
                    ),
                        l.uIk('data-automationid', Te.automationId),
                        l.xp6(1),
                        l.Q6J('ngIf', !1 !== Te.escape)('ngIfElse', q);
                }
            }
            function ye(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'li', 8), 2 & Fe)) {
                    const q = l.oxw().$implicit,
                        Te = l.oxw().$implicit;
                    l.Q6J(
                        'ngClass',
                        l.VKq(1, ne, !1 === q.visible || !1 === Te.visible)
                    );
                }
            }
            function ut(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'li', 14), 2 & Fe)) {
                    const q = l.oxw().$implicit,
                        Te = l.oxw().$implicit;
                    l.Tol(q.styleClass),
                        l.Q6J('pMenuItemContent', q)(
                            'ngClass',
                            l.VKq(6, ne, !1 === q.visible || !1 === Te.visible)
                        )('ngStyle', q.style)(
                            'tooltipOptions',
                            q.tooltipOptions
                        );
                }
            }
            function Pt(Fe, Ye) {
                if (
                    (1 & Fe &&
                        (l.YNc(0, ye, 1, 3, 'li', 6),
                        l.YNc(1, ut, 1, 8, 'li', 13)),
                    2 & Fe)
                ) {
                    const q = Ye.$implicit;
                    l.Q6J('ngIf', q.separator),
                        l.xp6(1),
                        l.Q6J('ngIf', !q.separator);
                }
            }
            function ln(Fe, Ye) {
                if (
                    (1 & Fe &&
                        (l.YNc(0, Pe, 1, 3, 'li', 6),
                        l.YNc(1, be, 4, 7, 'li', 7),
                        l.YNc(2, Pt, 2, 2, 'ng-template', 5)),
                    2 & Fe)
                ) {
                    const q = Ye.$implicit;
                    l.Q6J('ngIf', q.separator),
                        l.xp6(1),
                        l.Q6J('ngIf', !q.separator),
                        l.xp6(1),
                        l.Q6J('ngForOf', q.items);
                }
            }
            function nt(Fe, Ye) {
                if ((1 & Fe && l.YNc(0, ln, 3, 3, 'ng-template', 5), 2 & Fe)) {
                    const q = l.oxw(2);
                    l.Q6J('ngForOf', q.model);
                }
            }
            function st(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'li', 8), 2 & Fe)) {
                    const q = l.oxw().$implicit;
                    l.Q6J('ngClass', l.VKq(1, ne, !1 === q.visible));
                }
            }
            function un(Fe, Ye) {
                if ((1 & Fe && l._UZ(0, 'li', 14), 2 & Fe)) {
                    const q = l.oxw().$implicit;
                    l.Tol(q.styleClass),
                        l.Q6J('pMenuItemContent', q)(
                            'ngClass',
                            l.VKq(6, ne, !1 === q.visible)
                        )('ngStyle', q.style)(
                            'tooltipOptions',
                            q.tooltipOptions
                        );
                }
            }
            function Bt(Fe, Ye) {
                if (
                    (1 & Fe &&
                        (l.YNc(0, st, 1, 3, 'li', 6),
                        l.YNc(1, un, 1, 8, 'li', 13)),
                    2 & Fe)
                ) {
                    const q = Ye.$implicit;
                    l.Q6J('ngIf', q.separator),
                        l.xp6(1),
                        l.Q6J('ngIf', !q.separator);
                }
            }
            function Gt(Fe, Ye) {
                if ((1 & Fe && l.YNc(0, Bt, 2, 2, 'ng-template', 5), 2 & Fe)) {
                    const q = l.oxw(2);
                    l.Q6J('ngForOf', q.model);
                }
            }
            const mt = function (Fe) {
                    return { 'p-menu p-component': !0, 'p-menu-overlay': Fe };
                },
                wn = function (Fe, Ye) {
                    return {
                        showTransitionParams: Fe,
                        hideTransitionParams: Ye,
                    };
                },
                dn = function (Fe) {
                    return { value: 'visible', params: Fe };
                };
            function Kt(Fe, Ye) {
                if (1 & Fe) {
                    const q = l.EpF();
                    l.TgZ(0, 'div', 1, 2),
                        l.NdJ('click', function (ot) {
                            return l.CHM(q), l.oxw().onOverlayClick(ot);
                        })('@overlayAnimation.start', function (ot) {
                            return (
                                l.CHM(q), l.oxw().onOverlayAnimationStart(ot)
                            );
                        })('@overlayAnimation.done', function (ot) {
                            return l.CHM(q), l.oxw().onOverlayAnimationEnd(ot);
                        }),
                        l.TgZ(2, 'ul', 3),
                        l.YNc(3, nt, 1, 1, null, 4),
                        l.YNc(4, Gt, 1, 1, null, 4),
                        l.qZA(),
                        l.qZA();
                }
                if (2 & Fe) {
                    const q = l.oxw();
                    l.Tol(q.styleClass),
                        l.Q6J('ngClass', l.VKq(8, mt, q.popup))(
                            'ngStyle',
                            q.style
                        )(
                            '@overlayAnimation',
                            l.VKq(
                                13,
                                dn,
                                l.WLB(
                                    10,
                                    wn,
                                    q.showTransitionOptions,
                                    q.hideTransitionOptions
                                )
                            )
                        )('@.disabled', !0 !== q.popup),
                        l.xp6(3),
                        l.Q6J('ngIf', q.hasSubMenu()),
                        l.xp6(1),
                        l.Q6J('ngIf', !q.hasSubMenu());
                }
            }
            let Nn = (() => {
                    class Fe {
                        constructor(q) {
                            this.menu = q;
                        }
                        onItemKeyDown(q) {
                            let Te = q.currentTarget.parentElement;
                            switch (q.code) {
                                case 'ArrowDown':
                                    var ot = this.findNextItem(Te);
                                    ot && ot.children[0].focus(),
                                        q.preventDefault();
                                    break;
                                case 'ArrowUp':
                                    var We = this.findPrevItem(Te);
                                    We && We.children[0].focus(),
                                        q.preventDefault();
                                    break;
                                case 'Space':
                                case 'Enter':
                                    Te &&
                                        !j.p.hasClass(Te, 'p-disabled') &&
                                        Te.children[0].click(),
                                        q.preventDefault();
                            }
                        }
                        findNextItem(q) {
                            let Te = q.nextElementSibling;
                            return Te
                                ? j.p.hasClass(Te, 'p-disabled') ||
                                  !j.p.hasClass(Te, 'p-menuitem')
                                    ? this.findNextItem(Te)
                                    : Te
                                : null;
                        }
                        findPrevItem(q) {
                            let Te = q.previousElementSibling;
                            return Te
                                ? j.p.hasClass(Te, 'p-disabled') ||
                                  !j.p.hasClass(Te, 'p-menuitem')
                                    ? this.findPrevItem(Te)
                                    : Te
                                : null;
                        }
                    }
                    return (
                        (Fe.ɵfac = function (q) {
                            return new (q || Fe)(l.Y36((0, l.Gpc)(() => qt)));
                        }),
                        (Fe.ɵcmp = l.Xpm({
                            type: Fe,
                            selectors: [['', 'pMenuItemContent', '']],
                            hostAttrs: [1, 'p-element'],
                            inputs: { item: ['pMenuItemContent', 'item'] },
                            attrs: _e,
                            decls: 2,
                            vars: 2,
                            consts: [
                                [
                                    'class',
                                    'p-menuitem-link',
                                    'role',
                                    'menuitem',
                                    3,
                                    'ngClass',
                                    'keydown',
                                    'click',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-menuitem-link',
                                    'role',
                                    'menuitem',
                                    'pRipple',
                                    '',
                                    3,
                                    'routerLink',
                                    'queryParams',
                                    'routerLinkActive',
                                    'routerLinkActiveOptions',
                                    'ngClass',
                                    'fragment',
                                    'queryParamsHandling',
                                    'preserveFragment',
                                    'skipLocationChange',
                                    'replaceUrl',
                                    'state',
                                    'keydown',
                                    'click',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'role',
                                    'menuitem',
                                    1,
                                    'p-menuitem-link',
                                    3,
                                    'ngClass',
                                    'keydown',
                                    'click',
                                ],
                                [
                                    'class',
                                    'p-menuitem-icon',
                                    3,
                                    'ngClass',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-menuitem-text',
                                    4,
                                    'ngIf',
                                    'ngIfElse',
                                ],
                                ['htmlLabel', ''],
                                [1, 'p-menuitem-icon', 3, 'ngClass'],
                                [1, 'p-menuitem-text'],
                                [1, 'p-menuitem-text', 3, 'innerHTML'],
                                [
                                    'role',
                                    'menuitem',
                                    'pRipple',
                                    '',
                                    1,
                                    'p-menuitem-link',
                                    3,
                                    'routerLink',
                                    'queryParams',
                                    'routerLinkActive',
                                    'routerLinkActiveOptions',
                                    'ngClass',
                                    'fragment',
                                    'queryParamsHandling',
                                    'preserveFragment',
                                    'skipLocationChange',
                                    'replaceUrl',
                                    'state',
                                    'keydown',
                                    'click',
                                ],
                                ['htmlRouteLabel', ''],
                            ],
                            template: function (q, Te) {
                                1 & q &&
                                    (l.YNc(0, ae, 5, 12, 'a', 0),
                                    l.YNc(1, $e, 5, 22, 'a', 1)),
                                    2 & q &&
                                        (l.Q6J('ngIf', !Te.item.routerLink),
                                        l.xp6(1),
                                        l.Q6J('ngIf', Te.item.routerLink));
                            },
                            directives: [G.O5, G.mk, V.yS, U.H, V.Od],
                            encapsulation: 2,
                        })),
                        Fe
                    );
                })(),
                qt = (() => {
                    class Fe {
                        constructor(q, Te, ot, We, Rt) {
                            (this.el = q),
                                (this.renderer = Te),
                                (this.cd = ot),
                                (this.config = We),
                                (this.overlayService = Rt),
                                (this.autoZIndex = !0),
                                (this.baseZIndex = 0),
                                (this.showTransitionOptions =
                                    '.12s cubic-bezier(0, 0, 0.2, 1)'),
                                (this.hideTransitionOptions = '.1s linear'),
                                (this.onShow = new l.vpe()),
                                (this.onHide = new l.vpe());
                        }
                        toggle(q) {
                            this.visible ? this.hide() : this.show(q),
                                (this.preventDocumentDefault = !0);
                        }
                        show(q) {
                            (this.target = q.currentTarget),
                                (this.relativeAlign = q.relativeAlign),
                                (this.visible = !0),
                                (this.preventDocumentDefault = !0),
                                this.cd.markForCheck();
                        }
                        onOverlayAnimationStart(q) {
                            switch (q.toState) {
                                case 'visible':
                                    this.popup &&
                                        ((this.container = q.element),
                                        this.moveOnTop(),
                                        this.onShow.emit({}),
                                        this.appendOverlay(),
                                        this.alignOverlay(),
                                        this.bindDocumentClickListener(),
                                        this.bindDocumentResizeListener(),
                                        this.bindScrollListener());
                                    break;
                                case 'void':
                                    this.onOverlayHide(), this.onHide.emit({});
                            }
                        }
                        onOverlayAnimationEnd(q) {
                            'void' === q.toState &&
                                this.autoZIndex &&
                                B.clear(q.element);
                        }
                        alignOverlay() {
                            this.relativeAlign
                                ? j.p.relativePosition(
                                      this.container,
                                      this.target
                                  )
                                : j.p.absolutePosition(
                                      this.container,
                                      this.target
                                  );
                        }
                        appendOverlay() {
                            this.appendTo &&
                                ('body' === this.appendTo
                                    ? document.body.appendChild(this.container)
                                    : j.p.appendChild(
                                          this.container,
                                          this.appendTo
                                      ));
                        }
                        restoreOverlayAppend() {
                            this.container &&
                                this.appendTo &&
                                this.el.nativeElement.appendChild(
                                    this.container
                                );
                        }
                        moveOnTop() {
                            this.autoZIndex &&
                                B.set(
                                    'menu',
                                    this.container,
                                    this.baseZIndex + this.config.zIndex.menu
                                );
                        }
                        hide() {
                            (this.visible = !1),
                                (this.relativeAlign = !1),
                                this.cd.markForCheck();
                        }
                        onWindowResize() {
                            this.hide();
                        }
                        itemClick(q, Te) {
                            Te.disabled
                                ? q.preventDefault()
                                : (!Te.url &&
                                      !Te.routerLink &&
                                      q.preventDefault(),
                                  Te.command &&
                                      Te.command({
                                          originalEvent: q,
                                          item: Te,
                                      }),
                                  this.popup && this.hide());
                        }
                        onOverlayClick(q) {
                            this.popup &&
                                this.overlayService.add({
                                    originalEvent: q,
                                    target: this.el.nativeElement,
                                }),
                                (this.preventDocumentDefault = !0);
                        }
                        bindDocumentClickListener() {
                            this.documentClickListener ||
                                (this.documentClickListener =
                                    this.renderer.listen(
                                        this.el
                                            ? this.el.nativeElement
                                                  .ownerDocument
                                            : 'document',
                                        'click',
                                        () => {
                                            this.preventDocumentDefault ||
                                                this.hide(),
                                                (this.preventDocumentDefault =
                                                    !1);
                                        }
                                    ));
                        }
                        unbindDocumentClickListener() {
                            this.documentClickListener &&
                                (this.documentClickListener(),
                                (this.documentClickListener = null));
                        }
                        bindDocumentResizeListener() {
                            (this.documentResizeListener =
                                this.onWindowResize.bind(this)),
                                window.addEventListener(
                                    'resize',
                                    this.documentResizeListener
                                );
                        }
                        unbindDocumentResizeListener() {
                            this.documentResizeListener &&
                                (window.removeEventListener(
                                    'resize',
                                    this.documentResizeListener
                                ),
                                (this.documentResizeListener = null));
                        }
                        bindScrollListener() {
                            this.scrollHandler ||
                                (this.scrollHandler = new j.V(
                                    this.target,
                                    () => {
                                        this.visible && this.hide();
                                    }
                                )),
                                this.scrollHandler.bindScrollListener();
                        }
                        unbindScrollListener() {
                            this.scrollHandler &&
                                this.scrollHandler.unbindScrollListener();
                        }
                        onOverlayHide() {
                            this.unbindDocumentClickListener(),
                                this.unbindDocumentResizeListener(),
                                this.unbindScrollListener(),
                                (this.preventDocumentDefault = !1),
                                this.cd.destroyed || (this.target = null);
                        }
                        ngOnDestroy() {
                            this.popup &&
                                (this.scrollHandler &&
                                    (this.scrollHandler.destroy(),
                                    (this.scrollHandler = null)),
                                this.container &&
                                    this.autoZIndex &&
                                    B.clear(this.container),
                                this.restoreOverlayAppend(),
                                this.onOverlayHide());
                        }
                        hasSubMenu() {
                            if (this.model)
                                for (var q of this.model)
                                    if (q.items) return !0;
                            return !1;
                        }
                    }
                    return (
                        (Fe.ɵfac = function (q) {
                            return new (q || Fe)(
                                l.Y36(l.SBq),
                                l.Y36(l.Qsj),
                                l.Y36(l.sBO),
                                l.Y36(Q.b4),
                                l.Y36(Q.F0)
                            );
                        }),
                        (Fe.ɵcmp = l.Xpm({
                            type: Fe,
                            selectors: [['p-menu']],
                            viewQuery: function (q, Te) {
                                if ((1 & q && l.Gf(it, 5), 2 & q)) {
                                    let ot;
                                    l.iGM((ot = l.CRH())) &&
                                        (Te.containerViewChild = ot.first);
                                }
                            },
                            hostAttrs: [1, 'p-element'],
                            inputs: {
                                model: 'model',
                                popup: 'popup',
                                style: 'style',
                                styleClass: 'styleClass',
                                appendTo: 'appendTo',
                                autoZIndex: 'autoZIndex',
                                baseZIndex: 'baseZIndex',
                                showTransitionOptions: 'showTransitionOptions',
                                hideTransitionOptions: 'hideTransitionOptions',
                            },
                            outputs: { onShow: 'onShow', onHide: 'onHide' },
                            decls: 1,
                            vars: 1,
                            consts: [
                                [
                                    3,
                                    'ngClass',
                                    'class',
                                    'ngStyle',
                                    'click',
                                    4,
                                    'ngIf',
                                ],
                                [3, 'ngClass', 'ngStyle', 'click'],
                                ['container', ''],
                                ['role', 'menu', 1, 'p-menu-list', 'p-reset'],
                                [4, 'ngIf'],
                                ['ngFor', '', 3, 'ngForOf'],
                                [
                                    'class',
                                    'p-menu-separator',
                                    'role',
                                    'separator',
                                    3,
                                    'ngClass',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'class',
                                    'p-submenu-header',
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    3,
                                    'ngClass',
                                    'tooltipOptions',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'role',
                                    'separator',
                                    1,
                                    'p-menu-separator',
                                    3,
                                    'ngClass',
                                ],
                                [
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    1,
                                    'p-submenu-header',
                                    3,
                                    'ngClass',
                                    'tooltipOptions',
                                ],
                                [4, 'ngIf', 'ngIfElse'],
                                ['htmlSubmenuLabel', ''],
                                [3, 'innerHTML'],
                                [
                                    'class',
                                    'p-menuitem',
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    3,
                                    'pMenuItemContent',
                                    'ngClass',
                                    'ngStyle',
                                    'class',
                                    'tooltipOptions',
                                    4,
                                    'ngIf',
                                ],
                                [
                                    'pTooltip',
                                    '',
                                    'role',
                                    'none',
                                    1,
                                    'p-menuitem',
                                    3,
                                    'pMenuItemContent',
                                    'ngClass',
                                    'ngStyle',
                                    'tooltipOptions',
                                ],
                            ],
                            template: function (q, Te) {
                                1 & q && l.YNc(0, Kt, 5, 15, 'div', 0),
                                    2 & q &&
                                        l.Q6J('ngIf', !Te.popup || Te.visible);
                            },
                            directives: [Nn, G.O5, G.mk, G.PC, G.sg, De],
                            styles: [
                                '.p-menu-overlay{position:absolute;top:0;left:0}.p-menu ul{margin:0;padding:0;list-style:none}.p-menu .p-menuitem-link{cursor:pointer;display:flex;align-items:center;text-decoration:none;overflow:hidden;position:relative}.p-menu .p-menuitem-text{line-height:1}\n',
                            ],
                            encapsulation: 2,
                            data: {
                                animation: [
                                    (0, w.X$)('overlayAnimation', [
                                        (0, w.eR)(':enter', [
                                            (0, w.oB)({
                                                opacity: 0,
                                                transform: 'scaleY(0.8)',
                                            }),
                                            (0, w.jt)(
                                                '{{showTransitionParams}}'
                                            ),
                                        ]),
                                        (0, w.eR)(':leave', [
                                            (0, w.jt)(
                                                '{{hideTransitionParams}}',
                                                (0, w.oB)({ opacity: 0 })
                                            ),
                                        ]),
                                    ]),
                                ],
                            },
                            changeDetection: 0,
                        })),
                        Fe
                    );
                })(),
                Hn = (() => {
                    class Fe {}
                    return (
                        (Fe.ɵfac = function (q) {
                            return new (q || Fe)();
                        }),
                        (Fe.ɵmod = l.oAB({ type: Fe })),
                        (Fe.ɵinj = l.cJS({
                            imports: [[G.ez, V.Bz, U.T, Ee], V.Bz, Ee],
                        })),
                        Fe
                    );
                })();
        },
        5787: (de, z, _) => {
            'use strict';
            _.d(z, { H: () => S, T: () => x });
            var l = _(5e3),
                w = _(9808),
                G = _(5730),
                j = _(9783);
            let S = (() => {
                    class k {
                        constructor(B, V, U) {
                            (this.el = B), (this.zone = V), (this.config = U);
                        }
                        ngAfterViewInit() {
                            this.config &&
                                this.config.ripple &&
                                this.zone.runOutsideAngular(() => {
                                    this.create(),
                                        (this.mouseDownListener =
                                            this.onMouseDown.bind(this)),
                                        this.el.nativeElement.addEventListener(
                                            'mousedown',
                                            this.mouseDownListener
                                        );
                                });
                        }
                        onMouseDown(B) {
                            let V = this.getInk();
                            if (
                                !V ||
                                'none' === getComputedStyle(V, null).display
                            )
                                return;
                            if (
                                (G.p.removeClass(V, 'p-ink-active'),
                                !G.p.getHeight(V) && !G.p.getWidth(V))
                            ) {
                                let Ee = Math.max(
                                    G.p.getOuterWidth(this.el.nativeElement),
                                    G.p.getOuterHeight(this.el.nativeElement)
                                );
                                (V.style.height = Ee + 'px'),
                                    (V.style.width = Ee + 'px');
                            }
                            let U = G.p.getOffset(this.el.nativeElement),
                                Q =
                                    B.pageX -
                                    U.left +
                                    document.body.scrollTop -
                                    G.p.getWidth(V) / 2,
                                De =
                                    B.pageY -
                                    U.top +
                                    document.body.scrollLeft -
                                    G.p.getHeight(V) / 2;
                            (V.style.top = De + 'px'),
                                (V.style.left = Q + 'px'),
                                G.p.addClass(V, 'p-ink-active');
                        }
                        getInk() {
                            for (
                                let B = 0;
                                B < this.el.nativeElement.children.length;
                                B++
                            )
                                if (
                                    -1 !==
                                    this.el.nativeElement.children[
                                        B
                                    ].className.indexOf('p-ink')
                                )
                                    return this.el.nativeElement.children[B];
                            return null;
                        }
                        resetInk() {
                            let B = this.getInk();
                            B && G.p.removeClass(B, 'p-ink-active');
                        }
                        onAnimationEnd(B) {
                            G.p.removeClass(B.currentTarget, 'p-ink-active');
                        }
                        create() {
                            let B = document.createElement('span');
                            (B.className = 'p-ink'),
                                this.el.nativeElement.appendChild(B),
                                (this.animationListener =
                                    this.onAnimationEnd.bind(this)),
                                B.addEventListener(
                                    'animationend',
                                    this.animationListener
                                );
                        }
                        remove() {
                            let B = this.getInk();
                            B &&
                                (this.el.nativeElement.removeEventListener(
                                    'mousedown',
                                    this.mouseDownListener
                                ),
                                B.removeEventListener(
                                    'animationend',
                                    this.animationListener
                                ),
                                G.p.removeElement(B));
                        }
                        ngOnDestroy() {
                            this.config && this.config.ripple && this.remove();
                        }
                    }
                    return (
                        (k.ɵfac = function (B) {
                            return new (B || k)(
                                l.Y36(l.SBq),
                                l.Y36(l.R0b),
                                l.Y36(j.b4, 8)
                            );
                        }),
                        (k.ɵdir = l.lG2({
                            type: k,
                            selectors: [['', 'pRipple', '']],
                            hostAttrs: [1, 'p-ripple', 'p-element'],
                        })),
                        k
                    );
                })(),
                x = (() => {
                    class k {}
                    return (
                        (k.ɵfac = function (B) {
                            return new (B || k)();
                        }),
                        (k.ɵmod = l.oAB({ type: k })),
                        (k.ɵinj = l.cJS({ imports: [[w.ez]] })),
                        k
                    );
                })();
        },
        5861: (de, z, _) => {
            'use strict';
            function l(G, j, S, x, k, W, B) {
                try {
                    var V = G[W](B),
                        U = V.value;
                } catch (Q) {
                    return void S(Q);
                }
                V.done ? j(U) : Promise.resolve(U).then(x, k);
            }
            function w(G) {
                return function () {
                    var j = this,
                        S = arguments;
                    return new Promise(function (x, k) {
                        var W = G.apply(j, S);
                        function B(U) {
                            l(W, x, k, B, V, 'next', U);
                        }
                        function V(U) {
                            l(W, x, k, B, V, 'throw', U);
                        }
                        B(void 0);
                    });
                };
            }
            _.d(z, { Z: () => w });
        },
    },
    (de) => {
        de((de.s = 7556));
    },
]);
